<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: descriptor.proto

namespace google\protobuf {

  class FileDescriptorSet extends \DrSlump\Protobuf\Message {

    /**  @var \google\protobuf\FileDescriptorProto[]  */
    public $file = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.FileDescriptorSet');

      // REPEATED MESSAGE file = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "file";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\FileDescriptorProto';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <file> has a value
     *
     * @return boolean
     */
    public function hasFile(){
      return $this->_has(1);
    }
    
    /**
     * Clear <file> value
     *
     * @return \google\protobuf\FileDescriptorSet
     */
    public function clearFile(){
      return $this->_clear(1);
    }
    
    /**
     * Get <file> value
     *
     * @param int $idx
     * @return \google\protobuf\FileDescriptorProto
     */
    public function getFile($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <file> value
     *
     * @param \google\protobuf\FileDescriptorProto $value
     * @return \google\protobuf\FileDescriptorSet
     */
    public function setFile(\google\protobuf\FileDescriptorProto $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <file>
     *
     * @return \google\protobuf\FileDescriptorProto[]
     */
    public function getFileList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <file>
     *
     * @param \google\protobuf\FileDescriptorProto $value
     * @return \google\protobuf\FileDescriptorSet
     */
    public function addFile(\google\protobuf\FileDescriptorProto $value){
     return $this->_add(1, $value);
    }
  }
}

namespace google\protobuf {

  class FileDescriptorProto extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $package = null;
    
    /**  @var string[]  */
    public $dependency = array();
    
    /**  @var int[]  */
    public $public_dependency = array();
    
    /**  @var int[]  */
    public $weak_dependency = array();
    
    /**  @var \google\protobuf\DescriptorProto[]  */
    public $message_type = array();
    
    /**  @var \google\protobuf\EnumDescriptorProto[]  */
    public $enum_type = array();
    
    /**  @var \google\protobuf\ServiceDescriptorProto[]  */
    public $service = array();
    
    /**  @var \google\protobuf\FieldDescriptorProto[]  */
    public $extension = array();
    
    /**  @var \google\protobuf\FileOptions */
    public $options = null;
    
    /**  @var \google\protobuf\SourceCodeInfo */
    public $source_code_info = null;
    
    /**  @var string */
    public $syntax = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.FileDescriptorProto');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING package = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "package";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED STRING dependency = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "dependency";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED INT32 public_dependency = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "public_dependency";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED INT32 weak_dependency = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "weak_dependency";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED MESSAGE message_type = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "message_type";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\DescriptorProto';
      $descriptor->addField($f);

      // REPEATED MESSAGE enum_type = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "enum_type";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\EnumDescriptorProto';
      $descriptor->addField($f);

      // REPEATED MESSAGE service = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "service";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\ServiceDescriptorProto';
      $descriptor->addField($f);

      // REPEATED MESSAGE extension = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "extension";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\FieldDescriptorProto';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE options = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "options";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\FileOptions';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE source_code_info = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "source_code_info";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\SourceCodeInfo';
      $descriptor->addField($f);

      // OPTIONAL STRING syntax = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "syntax";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\protobuf\FileDescriptorProto
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <package> has a value
     *
     * @return boolean
     */
    public function hasPackage(){
      return $this->_has(2);
    }
    
    /**
     * Clear <package> value
     *
     * @return \google\protobuf\FileDescriptorProto
     */
    public function clearPackage(){
      return $this->_clear(2);
    }
    
    /**
     * Get <package> value
     *
     * @return string
     */
    public function getPackage(){
      return $this->_get(2);
    }
    
    /**
     * Set <package> value
     *
     * @param string $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function setPackage( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <dependency> has a value
     *
     * @return boolean
     */
    public function hasDependency(){
      return $this->_has(3);
    }
    
    /**
     * Clear <dependency> value
     *
     * @return \google\protobuf\FileDescriptorProto
     */
    public function clearDependency(){
      return $this->_clear(3);
    }
    
    /**
     * Get <dependency> value
     *
     * @param int $idx
     * @return string
     */
    public function getDependency($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <dependency> value
     *
     * @param string $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function setDependency( $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <dependency>
     *
     * @return string[]
     */
    public function getDependencyList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <dependency>
     *
     * @param string $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function addDependency( $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <public_dependency> has a value
     *
     * @return boolean
     */
    public function hasPublicDependency(){
      return $this->_has(10);
    }
    
    /**
     * Clear <public_dependency> value
     *
     * @return \google\protobuf\FileDescriptorProto
     */
    public function clearPublicDependency(){
      return $this->_clear(10);
    }
    
    /**
     * Get <public_dependency> value
     *
     * @param int $idx
     * @return int
     */
    public function getPublicDependency($idx = NULL){
      return $this->_get(10, $idx);
    }
    
    /**
     * Set <public_dependency> value
     *
     * @param int $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function setPublicDependency( $value, $idx = NULL){
      return $this->_set(10, $value, $idx);
    }
    
    /**
     * Get all elements of <public_dependency>
     *
     * @return int[]
     */
    public function getPublicDependencyList(){
     return $this->_get(10);
    }
    
    /**
     * Add a new element to <public_dependency>
     *
     * @param int $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function addPublicDependency( $value){
     return $this->_add(10, $value);
    }
    
    /**
     * Check if <weak_dependency> has a value
     *
     * @return boolean
     */
    public function hasWeakDependency(){
      return $this->_has(11);
    }
    
    /**
     * Clear <weak_dependency> value
     *
     * @return \google\protobuf\FileDescriptorProto
     */
    public function clearWeakDependency(){
      return $this->_clear(11);
    }
    
    /**
     * Get <weak_dependency> value
     *
     * @param int $idx
     * @return int
     */
    public function getWeakDependency($idx = NULL){
      return $this->_get(11, $idx);
    }
    
    /**
     * Set <weak_dependency> value
     *
     * @param int $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function setWeakDependency( $value, $idx = NULL){
      return $this->_set(11, $value, $idx);
    }
    
    /**
     * Get all elements of <weak_dependency>
     *
     * @return int[]
     */
    public function getWeakDependencyList(){
     return $this->_get(11);
    }
    
    /**
     * Add a new element to <weak_dependency>
     *
     * @param int $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function addWeakDependency( $value){
     return $this->_add(11, $value);
    }
    
    /**
     * Check if <message_type> has a value
     *
     * @return boolean
     */
    public function hasMessageType(){
      return $this->_has(4);
    }
    
    /**
     * Clear <message_type> value
     *
     * @return \google\protobuf\FileDescriptorProto
     */
    public function clearMessageType(){
      return $this->_clear(4);
    }
    
    /**
     * Get <message_type> value
     *
     * @param int $idx
     * @return \google\protobuf\DescriptorProto
     */
    public function getMessageType($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <message_type> value
     *
     * @param \google\protobuf\DescriptorProto $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function setMessageType(\google\protobuf\DescriptorProto $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <message_type>
     *
     * @return \google\protobuf\DescriptorProto[]
     */
    public function getMessageTypeList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <message_type>
     *
     * @param \google\protobuf\DescriptorProto $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function addMessageType(\google\protobuf\DescriptorProto $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <enum_type> has a value
     *
     * @return boolean
     */
    public function hasEnumType(){
      return $this->_has(5);
    }
    
    /**
     * Clear <enum_type> value
     *
     * @return \google\protobuf\FileDescriptorProto
     */
    public function clearEnumType(){
      return $this->_clear(5);
    }
    
    /**
     * Get <enum_type> value
     *
     * @param int $idx
     * @return \google\protobuf\EnumDescriptorProto
     */
    public function getEnumType($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <enum_type> value
     *
     * @param \google\protobuf\EnumDescriptorProto $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function setEnumType(\google\protobuf\EnumDescriptorProto $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <enum_type>
     *
     * @return \google\protobuf\EnumDescriptorProto[]
     */
    public function getEnumTypeList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <enum_type>
     *
     * @param \google\protobuf\EnumDescriptorProto $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function addEnumType(\google\protobuf\EnumDescriptorProto $value){
     return $this->_add(5, $value);
    }
    
    /**
     * Check if <service> has a value
     *
     * @return boolean
     */
    public function hasService(){
      return $this->_has(6);
    }
    
    /**
     * Clear <service> value
     *
     * @return \google\protobuf\FileDescriptorProto
     */
    public function clearService(){
      return $this->_clear(6);
    }
    
    /**
     * Get <service> value
     *
     * @param int $idx
     * @return \google\protobuf\ServiceDescriptorProto
     */
    public function getService($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <service> value
     *
     * @param \google\protobuf\ServiceDescriptorProto $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function setService(\google\protobuf\ServiceDescriptorProto $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <service>
     *
     * @return \google\protobuf\ServiceDescriptorProto[]
     */
    public function getServiceList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <service>
     *
     * @param \google\protobuf\ServiceDescriptorProto $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function addService(\google\protobuf\ServiceDescriptorProto $value){
     return $this->_add(6, $value);
    }
    
    /**
     * Check if <extension> has a value
     *
     * @return boolean
     */
    public function hasExtension(){
      return $this->_has(7);
    }
    
    /**
     * Clear <extension> value
     *
     * @return \google\protobuf\FileDescriptorProto
     */
    public function clearExtension(){
      return $this->_clear(7);
    }
    
    /**
     * Get <extension> value
     *
     * @param int $idx
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function getExtension($idx = NULL){
      return $this->_get(7, $idx);
    }
    
    /**
     * Set <extension> value
     *
     * @param \google\protobuf\FieldDescriptorProto $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function setExtension(\google\protobuf\FieldDescriptorProto $value, $idx = NULL){
      return $this->_set(7, $value, $idx);
    }
    
    /**
     * Get all elements of <extension>
     *
     * @return \google\protobuf\FieldDescriptorProto[]
     */
    public function getExtensionList(){
     return $this->_get(7);
    }
    
    /**
     * Add a new element to <extension>
     *
     * @param \google\protobuf\FieldDescriptorProto $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function addExtension(\google\protobuf\FieldDescriptorProto $value){
     return $this->_add(7, $value);
    }
    
    /**
     * Check if <options> has a value
     *
     * @return boolean
     */
    public function hasOptions(){
      return $this->_has(8);
    }
    
    /**
     * Clear <options> value
     *
     * @return \google\protobuf\FileDescriptorProto
     */
    public function clearOptions(){
      return $this->_clear(8);
    }
    
    /**
     * Get <options> value
     *
     * @return \google\protobuf\FileOptions
     */
    public function getOptions(){
      return $this->_get(8);
    }
    
    /**
     * Set <options> value
     *
     * @param \google\protobuf\FileOptions $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function setOptions(\google\protobuf\FileOptions $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <source_code_info> has a value
     *
     * @return boolean
     */
    public function hasSourceCodeInfo(){
      return $this->_has(9);
    }
    
    /**
     * Clear <source_code_info> value
     *
     * @return \google\protobuf\FileDescriptorProto
     */
    public function clearSourceCodeInfo(){
      return $this->_clear(9);
    }
    
    /**
     * Get <source_code_info> value
     *
     * @return \google\protobuf\SourceCodeInfo
     */
    public function getSourceCodeInfo(){
      return $this->_get(9);
    }
    
    /**
     * Set <source_code_info> value
     *
     * @param \google\protobuf\SourceCodeInfo $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function setSourceCodeInfo(\google\protobuf\SourceCodeInfo $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <syntax> has a value
     *
     * @return boolean
     */
    public function hasSyntax(){
      return $this->_has(12);
    }
    
    /**
     * Clear <syntax> value
     *
     * @return \google\protobuf\FileDescriptorProto
     */
    public function clearSyntax(){
      return $this->_clear(12);
    }
    
    /**
     * Get <syntax> value
     *
     * @return string
     */
    public function getSyntax(){
      return $this->_get(12);
    }
    
    /**
     * Set <syntax> value
     *
     * @param string $value
     * @return \google\protobuf\FileDescriptorProto
     */
    public function setSyntax( $value){
      return $this->_set(12, $value);
    }
  }
}

namespace google\protobuf\DescriptorProto {

  class ExtensionRange extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $start = null;
    
    /**  @var int */
    public $end = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.DescriptorProto.ExtensionRange');

      // OPTIONAL INT32 start = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "start";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 end = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "end";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <start> has a value
     *
     * @return boolean
     */
    public function hasStart(){
      return $this->_has(1);
    }
    
    /**
     * Clear <start> value
     *
     * @return \google\protobuf\DescriptorProto\ExtensionRange
     */
    public function clearStart(){
      return $this->_clear(1);
    }
    
    /**
     * Get <start> value
     *
     * @return int
     */
    public function getStart(){
      return $this->_get(1);
    }
    
    /**
     * Set <start> value
     *
     * @param int $value
     * @return \google\protobuf\DescriptorProto\ExtensionRange
     */
    public function setStart( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <end> has a value
     *
     * @return boolean
     */
    public function hasEnd(){
      return $this->_has(2);
    }
    
    /**
     * Clear <end> value
     *
     * @return \google\protobuf\DescriptorProto\ExtensionRange
     */
    public function clearEnd(){
      return $this->_clear(2);
    }
    
    /**
     * Get <end> value
     *
     * @return int
     */
    public function getEnd(){
      return $this->_get(2);
    }
    
    /**
     * Set <end> value
     *
     * @param int $value
     * @return \google\protobuf\DescriptorProto\ExtensionRange
     */
    public function setEnd( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\protobuf {

  class DescriptorProto extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var \google\protobuf\FieldDescriptorProto[]  */
    public $field = array();
    
    /**  @var \google\protobuf\FieldDescriptorProto[]  */
    public $extension = array();
    
    /**  @var \google\protobuf\DescriptorProto[]  */
    public $nested_type = array();
    
    /**  @var \google\protobuf\EnumDescriptorProto[]  */
    public $enum_type = array();
    
    /**  @var \google\protobuf\DescriptorProto\ExtensionRange[]  */
    public $extension_range = array();
    
    /**  @var \google\protobuf\OneofDescriptorProto[]  */
    public $oneof_decl = array();
    
    /**  @var \google\protobuf\MessageOptions */
    public $options = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.DescriptorProto');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE field = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "field";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\FieldDescriptorProto';
      $descriptor->addField($f);

      // REPEATED MESSAGE extension = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "extension";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\FieldDescriptorProto';
      $descriptor->addField($f);

      // REPEATED MESSAGE nested_type = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "nested_type";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\DescriptorProto';
      $descriptor->addField($f);

      // REPEATED MESSAGE enum_type = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "enum_type";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\EnumDescriptorProto';
      $descriptor->addField($f);

      // REPEATED MESSAGE extension_range = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "extension_range";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\DescriptorProto\ExtensionRange';
      $descriptor->addField($f);

      // REPEATED MESSAGE oneof_decl = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "oneof_decl";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\OneofDescriptorProto';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE options = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "options";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\MessageOptions';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\protobuf\DescriptorProto
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\protobuf\DescriptorProto
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <field> has a value
     *
     * @return boolean
     */
    public function hasField(){
      return $this->_has(2);
    }
    
    /**
     * Clear <field> value
     *
     * @return \google\protobuf\DescriptorProto
     */
    public function clearField(){
      return $this->_clear(2);
    }
    
    /**
     * Get <field> value
     *
     * @param int $idx
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function getField($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <field> value
     *
     * @param \google\protobuf\FieldDescriptorProto $value
     * @return \google\protobuf\DescriptorProto
     */
    public function setField(\google\protobuf\FieldDescriptorProto $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <field>
     *
     * @return \google\protobuf\FieldDescriptorProto[]
     */
    public function getFieldList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <field>
     *
     * @param \google\protobuf\FieldDescriptorProto $value
     * @return \google\protobuf\DescriptorProto
     */
    public function addField(\google\protobuf\FieldDescriptorProto $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <extension> has a value
     *
     * @return boolean
     */
    public function hasExtension(){
      return $this->_has(6);
    }
    
    /**
     * Clear <extension> value
     *
     * @return \google\protobuf\DescriptorProto
     */
    public function clearExtension(){
      return $this->_clear(6);
    }
    
    /**
     * Get <extension> value
     *
     * @param int $idx
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function getExtension($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <extension> value
     *
     * @param \google\protobuf\FieldDescriptorProto $value
     * @return \google\protobuf\DescriptorProto
     */
    public function setExtension(\google\protobuf\FieldDescriptorProto $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <extension>
     *
     * @return \google\protobuf\FieldDescriptorProto[]
     */
    public function getExtensionList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <extension>
     *
     * @param \google\protobuf\FieldDescriptorProto $value
     * @return \google\protobuf\DescriptorProto
     */
    public function addExtension(\google\protobuf\FieldDescriptorProto $value){
     return $this->_add(6, $value);
    }
    
    /**
     * Check if <nested_type> has a value
     *
     * @return boolean
     */
    public function hasNestedType(){
      return $this->_has(3);
    }
    
    /**
     * Clear <nested_type> value
     *
     * @return \google\protobuf\DescriptorProto
     */
    public function clearNestedType(){
      return $this->_clear(3);
    }
    
    /**
     * Get <nested_type> value
     *
     * @param int $idx
     * @return \google\protobuf\DescriptorProto
     */
    public function getNestedType($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <nested_type> value
     *
     * @param \google\protobuf\DescriptorProto $value
     * @return \google\protobuf\DescriptorProto
     */
    public function setNestedType(\google\protobuf\DescriptorProto $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <nested_type>
     *
     * @return \google\protobuf\DescriptorProto[]
     */
    public function getNestedTypeList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <nested_type>
     *
     * @param \google\protobuf\DescriptorProto $value
     * @return \google\protobuf\DescriptorProto
     */
    public function addNestedType(\google\protobuf\DescriptorProto $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <enum_type> has a value
     *
     * @return boolean
     */
    public function hasEnumType(){
      return $this->_has(4);
    }
    
    /**
     * Clear <enum_type> value
     *
     * @return \google\protobuf\DescriptorProto
     */
    public function clearEnumType(){
      return $this->_clear(4);
    }
    
    /**
     * Get <enum_type> value
     *
     * @param int $idx
     * @return \google\protobuf\EnumDescriptorProto
     */
    public function getEnumType($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <enum_type> value
     *
     * @param \google\protobuf\EnumDescriptorProto $value
     * @return \google\protobuf\DescriptorProto
     */
    public function setEnumType(\google\protobuf\EnumDescriptorProto $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <enum_type>
     *
     * @return \google\protobuf\EnumDescriptorProto[]
     */
    public function getEnumTypeList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <enum_type>
     *
     * @param \google\protobuf\EnumDescriptorProto $value
     * @return \google\protobuf\DescriptorProto
     */
    public function addEnumType(\google\protobuf\EnumDescriptorProto $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <extension_range> has a value
     *
     * @return boolean
     */
    public function hasExtensionRange(){
      return $this->_has(5);
    }
    
    /**
     * Clear <extension_range> value
     *
     * @return \google\protobuf\DescriptorProto
     */
    public function clearExtensionRange(){
      return $this->_clear(5);
    }
    
    /**
     * Get <extension_range> value
     *
     * @param int $idx
     * @return \google\protobuf\DescriptorProto\ExtensionRange
     */
    public function getExtensionRange($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <extension_range> value
     *
     * @param \google\protobuf\DescriptorProto\ExtensionRange $value
     * @return \google\protobuf\DescriptorProto
     */
    public function setExtensionRange(\google\protobuf\DescriptorProto\ExtensionRange $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <extension_range>
     *
     * @return \google\protobuf\DescriptorProto\ExtensionRange[]
     */
    public function getExtensionRangeList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <extension_range>
     *
     * @param \google\protobuf\DescriptorProto\ExtensionRange $value
     * @return \google\protobuf\DescriptorProto
     */
    public function addExtensionRange(\google\protobuf\DescriptorProto\ExtensionRange $value){
     return $this->_add(5, $value);
    }
    
    /**
     * Check if <oneof_decl> has a value
     *
     * @return boolean
     */
    public function hasOneofDecl(){
      return $this->_has(8);
    }
    
    /**
     * Clear <oneof_decl> value
     *
     * @return \google\protobuf\DescriptorProto
     */
    public function clearOneofDecl(){
      return $this->_clear(8);
    }
    
    /**
     * Get <oneof_decl> value
     *
     * @param int $idx
     * @return \google\protobuf\OneofDescriptorProto
     */
    public function getOneofDecl($idx = NULL){
      return $this->_get(8, $idx);
    }
    
    /**
     * Set <oneof_decl> value
     *
     * @param \google\protobuf\OneofDescriptorProto $value
     * @return \google\protobuf\DescriptorProto
     */
    public function setOneofDecl(\google\protobuf\OneofDescriptorProto $value, $idx = NULL){
      return $this->_set(8, $value, $idx);
    }
    
    /**
     * Get all elements of <oneof_decl>
     *
     * @return \google\protobuf\OneofDescriptorProto[]
     */
    public function getOneofDeclList(){
     return $this->_get(8);
    }
    
    /**
     * Add a new element to <oneof_decl>
     *
     * @param \google\protobuf\OneofDescriptorProto $value
     * @return \google\protobuf\DescriptorProto
     */
    public function addOneofDecl(\google\protobuf\OneofDescriptorProto $value){
     return $this->_add(8, $value);
    }
    
    /**
     * Check if <options> has a value
     *
     * @return boolean
     */
    public function hasOptions(){
      return $this->_has(7);
    }
    
    /**
     * Clear <options> value
     *
     * @return \google\protobuf\DescriptorProto
     */
    public function clearOptions(){
      return $this->_clear(7);
    }
    
    /**
     * Get <options> value
     *
     * @return \google\protobuf\MessageOptions
     */
    public function getOptions(){
      return $this->_get(7);
    }
    
    /**
     * Set <options> value
     *
     * @param \google\protobuf\MessageOptions $value
     * @return \google\protobuf\DescriptorProto
     */
    public function setOptions(\google\protobuf\MessageOptions $value){
      return $this->_set(7, $value);
    }
  }
}

namespace google\protobuf\FieldDescriptorProto {

  class Type extends \DrSlump\Protobuf\Enum {
    const TYPE_DOUBLE = 1;
    const TYPE_FLOAT = 2;
    const TYPE_INT64 = 3;
    const TYPE_UINT64 = 4;
    const TYPE_INT32 = 5;
    const TYPE_FIXED64 = 6;
    const TYPE_FIXED32 = 7;
    const TYPE_BOOL = 8;
    const TYPE_STRING = 9;
    const TYPE_GROUP = 10;
    const TYPE_MESSAGE = 11;
    const TYPE_BYTES = 12;
    const TYPE_UINT32 = 13;
    const TYPE_ENUM = 14;
    const TYPE_SFIXED32 = 15;
    const TYPE_SFIXED64 = 16;
    const TYPE_SINT32 = 17;
    const TYPE_SINT64 = 18;
  }
}
namespace google\protobuf\FieldDescriptorProto {

  class Label extends \DrSlump\Protobuf\Enum {
    const LABEL_OPTIONAL = 1;
    const LABEL_REQUIRED = 2;
    const LABEL_REPEATED = 3;
  }
}
namespace google\protobuf {

  class FieldDescriptorProto extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var int */
    public $number = null;
    
    /**  @var int - \google\protobuf\FieldDescriptorProto\Label */
    public $label = null;
    
    /**  @var int - \google\protobuf\FieldDescriptorProto\Type */
    public $type = null;
    
    /**  @var string */
    public $type_name = null;
    
    /**  @var string */
    public $extendee = null;
    
    /**  @var string */
    public $default_value = null;
    
    /**  @var int */
    public $oneof_index = null;
    
    /**  @var \google\protobuf\FieldOptions */
    public $options = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.FieldDescriptorProto');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 number = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "number";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL ENUM label = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "label";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\FieldDescriptorProto\Label';
      $descriptor->addField($f);

      // OPTIONAL ENUM type = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "type";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\FieldDescriptorProto\Type';
      $descriptor->addField($f);

      // OPTIONAL STRING type_name = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "type_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING extendee = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "extendee";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING default_value = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "default_value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 oneof_index = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "oneof_index";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE options = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "options";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\FieldOptions';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <number> has a value
     *
     * @return boolean
     */
    public function hasNumber(){
      return $this->_has(3);
    }
    
    /**
     * Clear <number> value
     *
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function clearNumber(){
      return $this->_clear(3);
    }
    
    /**
     * Get <number> value
     *
     * @return int
     */
    public function getNumber(){
      return $this->_get(3);
    }
    
    /**
     * Set <number> value
     *
     * @param int $value
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function setNumber( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <label> has a value
     *
     * @return boolean
     */
    public function hasLabel(){
      return $this->_has(4);
    }
    
    /**
     * Clear <label> value
     *
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function clearLabel(){
      return $this->_clear(4);
    }
    
    /**
     * Get <label> value
     *
     * @return int - \google\protobuf\FieldDescriptorProto\Label
     */
    public function getLabel(){
      return $this->_get(4);
    }
    
    /**
     * Set <label> value
     *
     * @param int - \google\protobuf\FieldDescriptorProto\Label $value
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function setLabel( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <type> has a value
     *
     * @return boolean
     */
    public function hasType(){
      return $this->_has(5);
    }
    
    /**
     * Clear <type> value
     *
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function clearType(){
      return $this->_clear(5);
    }
    
    /**
     * Get <type> value
     *
     * @return int - \google\protobuf\FieldDescriptorProto\Type
     */
    public function getType(){
      return $this->_get(5);
    }
    
    /**
     * Set <type> value
     *
     * @param int - \google\protobuf\FieldDescriptorProto\Type $value
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function setType( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <type_name> has a value
     *
     * @return boolean
     */
    public function hasTypeName(){
      return $this->_has(6);
    }
    
    /**
     * Clear <type_name> value
     *
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function clearTypeName(){
      return $this->_clear(6);
    }
    
    /**
     * Get <type_name> value
     *
     * @return string
     */
    public function getTypeName(){
      return $this->_get(6);
    }
    
    /**
     * Set <type_name> value
     *
     * @param string $value
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function setTypeName( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <extendee> has a value
     *
     * @return boolean
     */
    public function hasExtendee(){
      return $this->_has(2);
    }
    
    /**
     * Clear <extendee> value
     *
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function clearExtendee(){
      return $this->_clear(2);
    }
    
    /**
     * Get <extendee> value
     *
     * @return string
     */
    public function getExtendee(){
      return $this->_get(2);
    }
    
    /**
     * Set <extendee> value
     *
     * @param string $value
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function setExtendee( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <default_value> has a value
     *
     * @return boolean
     */
    public function hasDefaultValue(){
      return $this->_has(7);
    }
    
    /**
     * Clear <default_value> value
     *
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function clearDefaultValue(){
      return $this->_clear(7);
    }
    
    /**
     * Get <default_value> value
     *
     * @return string
     */
    public function getDefaultValue(){
      return $this->_get(7);
    }
    
    /**
     * Set <default_value> value
     *
     * @param string $value
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function setDefaultValue( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <oneof_index> has a value
     *
     * @return boolean
     */
    public function hasOneofIndex(){
      return $this->_has(9);
    }
    
    /**
     * Clear <oneof_index> value
     *
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function clearOneofIndex(){
      return $this->_clear(9);
    }
    
    /**
     * Get <oneof_index> value
     *
     * @return int
     */
    public function getOneofIndex(){
      return $this->_get(9);
    }
    
    /**
     * Set <oneof_index> value
     *
     * @param int $value
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function setOneofIndex( $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <options> has a value
     *
     * @return boolean
     */
    public function hasOptions(){
      return $this->_has(8);
    }
    
    /**
     * Clear <options> value
     *
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function clearOptions(){
      return $this->_clear(8);
    }
    
    /**
     * Get <options> value
     *
     * @return \google\protobuf\FieldOptions
     */
    public function getOptions(){
      return $this->_get(8);
    }
    
    /**
     * Set <options> value
     *
     * @param \google\protobuf\FieldOptions $value
     * @return \google\protobuf\FieldDescriptorProto
     */
    public function setOptions(\google\protobuf\FieldOptions $value){
      return $this->_set(8, $value);
    }
  }
}

namespace google\protobuf {

  class OneofDescriptorProto extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.OneofDescriptorProto');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\protobuf\OneofDescriptorProto
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\protobuf\OneofDescriptorProto
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\protobuf {

  class EnumDescriptorProto extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var \google\protobuf\EnumValueDescriptorProto[]  */
    public $value = array();
    
    /**  @var \google\protobuf\EnumOptions */
    public $options = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.EnumDescriptorProto');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\EnumValueDescriptorProto';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE options = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "options";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\EnumOptions';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\protobuf\EnumDescriptorProto
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\protobuf\EnumDescriptorProto
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\protobuf\EnumDescriptorProto
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @param int $idx
     * @return \google\protobuf\EnumValueDescriptorProto
     */
    public function getValue($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <value> value
     *
     * @param \google\protobuf\EnumValueDescriptorProto $value
     * @return \google\protobuf\EnumDescriptorProto
     */
    public function setValue(\google\protobuf\EnumValueDescriptorProto $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <value>
     *
     * @return \google\protobuf\EnumValueDescriptorProto[]
     */
    public function getValueList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <value>
     *
     * @param \google\protobuf\EnumValueDescriptorProto $value
     * @return \google\protobuf\EnumDescriptorProto
     */
    public function addValue(\google\protobuf\EnumValueDescriptorProto $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <options> has a value
     *
     * @return boolean
     */
    public function hasOptions(){
      return $this->_has(3);
    }
    
    /**
     * Clear <options> value
     *
     * @return \google\protobuf\EnumDescriptorProto
     */
    public function clearOptions(){
      return $this->_clear(3);
    }
    
    /**
     * Get <options> value
     *
     * @return \google\protobuf\EnumOptions
     */
    public function getOptions(){
      return $this->_get(3);
    }
    
    /**
     * Set <options> value
     *
     * @param \google\protobuf\EnumOptions $value
     * @return \google\protobuf\EnumDescriptorProto
     */
    public function setOptions(\google\protobuf\EnumOptions $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\protobuf {

  class EnumValueDescriptorProto extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var int */
    public $number = null;
    
    /**  @var \google\protobuf\EnumValueOptions */
    public $options = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.EnumValueDescriptorProto');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 number = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "number";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE options = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "options";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\EnumValueOptions';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\protobuf\EnumValueDescriptorProto
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\protobuf\EnumValueDescriptorProto
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <number> has a value
     *
     * @return boolean
     */
    public function hasNumber(){
      return $this->_has(2);
    }
    
    /**
     * Clear <number> value
     *
     * @return \google\protobuf\EnumValueDescriptorProto
     */
    public function clearNumber(){
      return $this->_clear(2);
    }
    
    /**
     * Get <number> value
     *
     * @return int
     */
    public function getNumber(){
      return $this->_get(2);
    }
    
    /**
     * Set <number> value
     *
     * @param int $value
     * @return \google\protobuf\EnumValueDescriptorProto
     */
    public function setNumber( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <options> has a value
     *
     * @return boolean
     */
    public function hasOptions(){
      return $this->_has(3);
    }
    
    /**
     * Clear <options> value
     *
     * @return \google\protobuf\EnumValueDescriptorProto
     */
    public function clearOptions(){
      return $this->_clear(3);
    }
    
    /**
     * Get <options> value
     *
     * @return \google\protobuf\EnumValueOptions
     */
    public function getOptions(){
      return $this->_get(3);
    }
    
    /**
     * Set <options> value
     *
     * @param \google\protobuf\EnumValueOptions $value
     * @return \google\protobuf\EnumValueDescriptorProto
     */
    public function setOptions(\google\protobuf\EnumValueOptions $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\protobuf {

  class ServiceDescriptorProto extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var \google\protobuf\MethodDescriptorProto[]  */
    public $method = array();
    
    /**  @var \google\protobuf\ServiceOptions */
    public $options = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.ServiceDescriptorProto');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE method = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "method";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\MethodDescriptorProto';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE options = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "options";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\ServiceOptions';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\protobuf\ServiceDescriptorProto
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\protobuf\ServiceDescriptorProto
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <method> has a value
     *
     * @return boolean
     */
    public function hasMethod(){
      return $this->_has(2);
    }
    
    /**
     * Clear <method> value
     *
     * @return \google\protobuf\ServiceDescriptorProto
     */
    public function clearMethod(){
      return $this->_clear(2);
    }
    
    /**
     * Get <method> value
     *
     * @param int $idx
     * @return \google\protobuf\MethodDescriptorProto
     */
    public function getMethod($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <method> value
     *
     * @param \google\protobuf\MethodDescriptorProto $value
     * @return \google\protobuf\ServiceDescriptorProto
     */
    public function setMethod(\google\protobuf\MethodDescriptorProto $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <method>
     *
     * @return \google\protobuf\MethodDescriptorProto[]
     */
    public function getMethodList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <method>
     *
     * @param \google\protobuf\MethodDescriptorProto $value
     * @return \google\protobuf\ServiceDescriptorProto
     */
    public function addMethod(\google\protobuf\MethodDescriptorProto $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <options> has a value
     *
     * @return boolean
     */
    public function hasOptions(){
      return $this->_has(3);
    }
    
    /**
     * Clear <options> value
     *
     * @return \google\protobuf\ServiceDescriptorProto
     */
    public function clearOptions(){
      return $this->_clear(3);
    }
    
    /**
     * Get <options> value
     *
     * @return \google\protobuf\ServiceOptions
     */
    public function getOptions(){
      return $this->_get(3);
    }
    
    /**
     * Set <options> value
     *
     * @param \google\protobuf\ServiceOptions $value
     * @return \google\protobuf\ServiceDescriptorProto
     */
    public function setOptions(\google\protobuf\ServiceOptions $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\protobuf {

  class MethodDescriptorProto extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $input_type = null;
    
    /**  @var string */
    public $output_type = null;
    
    /**  @var \google\protobuf\MethodOptions */
    public $options = null;
    
    /**  @var boolean */
    public $client_streaming = false;
    
    /**  @var boolean */
    public $server_streaming = false;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.MethodDescriptorProto');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING input_type = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "input_type";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING output_type = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "output_type";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE options = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "options";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\MethodOptions';
      $descriptor->addField($f);

      // OPTIONAL BOOL client_streaming = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "client_streaming";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL BOOL server_streaming = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "server_streaming";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\protobuf\MethodDescriptorProto
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\protobuf\MethodDescriptorProto
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <input_type> has a value
     *
     * @return boolean
     */
    public function hasInputType(){
      return $this->_has(2);
    }
    
    /**
     * Clear <input_type> value
     *
     * @return \google\protobuf\MethodDescriptorProto
     */
    public function clearInputType(){
      return $this->_clear(2);
    }
    
    /**
     * Get <input_type> value
     *
     * @return string
     */
    public function getInputType(){
      return $this->_get(2);
    }
    
    /**
     * Set <input_type> value
     *
     * @param string $value
     * @return \google\protobuf\MethodDescriptorProto
     */
    public function setInputType( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <output_type> has a value
     *
     * @return boolean
     */
    public function hasOutputType(){
      return $this->_has(3);
    }
    
    /**
     * Clear <output_type> value
     *
     * @return \google\protobuf\MethodDescriptorProto
     */
    public function clearOutputType(){
      return $this->_clear(3);
    }
    
    /**
     * Get <output_type> value
     *
     * @return string
     */
    public function getOutputType(){
      return $this->_get(3);
    }
    
    /**
     * Set <output_type> value
     *
     * @param string $value
     * @return \google\protobuf\MethodDescriptorProto
     */
    public function setOutputType( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <options> has a value
     *
     * @return boolean
     */
    public function hasOptions(){
      return $this->_has(4);
    }
    
    /**
     * Clear <options> value
     *
     * @return \google\protobuf\MethodDescriptorProto
     */
    public function clearOptions(){
      return $this->_clear(4);
    }
    
    /**
     * Get <options> value
     *
     * @return \google\protobuf\MethodOptions
     */
    public function getOptions(){
      return $this->_get(4);
    }
    
    /**
     * Set <options> value
     *
     * @param \google\protobuf\MethodOptions $value
     * @return \google\protobuf\MethodDescriptorProto
     */
    public function setOptions(\google\protobuf\MethodOptions $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <client_streaming> has a value
     *
     * @return boolean
     */
    public function hasClientStreaming(){
      return $this->_has(5);
    }
    
    /**
     * Clear <client_streaming> value
     *
     * @return \google\protobuf\MethodDescriptorProto
     */
    public function clearClientStreaming(){
      return $this->_clear(5);
    }
    
    /**
     * Get <client_streaming> value
     *
     * @return boolean
     */
    public function getClientStreaming(){
      return $this->_get(5);
    }
    
    /**
     * Set <client_streaming> value
     *
     * @param boolean $value
     * @return \google\protobuf\MethodDescriptorProto
     */
    public function setClientStreaming( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <server_streaming> has a value
     *
     * @return boolean
     */
    public function hasServerStreaming(){
      return $this->_has(6);
    }
    
    /**
     * Clear <server_streaming> value
     *
     * @return \google\protobuf\MethodDescriptorProto
     */
    public function clearServerStreaming(){
      return $this->_clear(6);
    }
    
    /**
     * Get <server_streaming> value
     *
     * @return boolean
     */
    public function getServerStreaming(){
      return $this->_get(6);
    }
    
    /**
     * Set <server_streaming> value
     *
     * @param boolean $value
     * @return \google\protobuf\MethodDescriptorProto
     */
    public function setServerStreaming( $value){
      return $this->_set(6, $value);
    }
  }
}

namespace google\protobuf\FileOptions {

  class OptimizeMode extends \DrSlump\Protobuf\Enum {
    const SPEED = 1;
    const CODE_SIZE = 2;
    const LITE_RUNTIME = 3;
  }
}
namespace google\protobuf {

  class FileOptions extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $java_package = null;
    
    /**  @var string */
    public $java_outer_classname = null;
    
    /**  @var boolean */
    public $java_multiple_files = false;
    
    /**  @var boolean */
    public $java_generate_equals_and_hash = false;
    
    /**  @var boolean */
    public $java_string_check_utf8 = false;
    
    /**  @var int - \google\protobuf\FileOptions\OptimizeMode */
    public $optimize_for = \google\protobuf\FileOptions\OptimizeMode::SPEED;
    
    /**  @var string */
    public $go_package = null;
    
    /**  @var boolean */
    public $cc_generic_services = false;
    
    /**  @var boolean */
    public $java_generic_services = false;
    
    /**  @var boolean */
    public $py_generic_services = false;
    
    /**  @var boolean */
    public $deprecated = false;
    
    /**  @var boolean */
    public $cc_enable_arenas = false;
    
    /**  @var \google\protobuf\UninterpretedOption[]  */
    public $uninterpreted_option = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.FileOptions');

      // OPTIONAL STRING java_package = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "java_package";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING java_outer_classname = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "java_outer_classname";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL java_multiple_files = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "java_multiple_files";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL BOOL java_generate_equals_and_hash = 20
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20;
      $f->name      = "java_generate_equals_and_hash";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL BOOL java_string_check_utf8 = 27
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 27;
      $f->name      = "java_string_check_utf8";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL ENUM optimize_for = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "optimize_for";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\FileOptions\OptimizeMode';
      $f->default   = \google\protobuf\FileOptions\OptimizeMode::SPEED;
      $descriptor->addField($f);

      // OPTIONAL STRING go_package = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "go_package";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL cc_generic_services = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "cc_generic_services";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL BOOL java_generic_services = 17
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 17;
      $f->name      = "java_generic_services";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL BOOL py_generic_services = 18
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 18;
      $f->name      = "py_generic_services";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL BOOL deprecated = 23
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 23;
      $f->name      = "deprecated";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL BOOL cc_enable_arenas = 31
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 31;
      $f->name      = "cc_enable_arenas";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // REPEATED MESSAGE uninterpreted_option = 999
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 999;
      $f->name      = "uninterpreted_option";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\UninterpretedOption';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <java_package> has a value
     *
     * @return boolean
     */
    public function hasJavaPackage(){
      return $this->_has(1);
    }
    
    /**
     * Clear <java_package> value
     *
     * @return \google\protobuf\FileOptions
     */
    public function clearJavaPackage(){
      return $this->_clear(1);
    }
    
    /**
     * Get <java_package> value
     *
     * @return string
     */
    public function getJavaPackage(){
      return $this->_get(1);
    }
    
    /**
     * Set <java_package> value
     *
     * @param string $value
     * @return \google\protobuf\FileOptions
     */
    public function setJavaPackage( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <java_outer_classname> has a value
     *
     * @return boolean
     */
    public function hasJavaOuterClassname(){
      return $this->_has(8);
    }
    
    /**
     * Clear <java_outer_classname> value
     *
     * @return \google\protobuf\FileOptions
     */
    public function clearJavaOuterClassname(){
      return $this->_clear(8);
    }
    
    /**
     * Get <java_outer_classname> value
     *
     * @return string
     */
    public function getJavaOuterClassname(){
      return $this->_get(8);
    }
    
    /**
     * Set <java_outer_classname> value
     *
     * @param string $value
     * @return \google\protobuf\FileOptions
     */
    public function setJavaOuterClassname( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <java_multiple_files> has a value
     *
     * @return boolean
     */
    public function hasJavaMultipleFiles(){
      return $this->_has(10);
    }
    
    /**
     * Clear <java_multiple_files> value
     *
     * @return \google\protobuf\FileOptions
     */
    public function clearJavaMultipleFiles(){
      return $this->_clear(10);
    }
    
    /**
     * Get <java_multiple_files> value
     *
     * @return boolean
     */
    public function getJavaMultipleFiles(){
      return $this->_get(10);
    }
    
    /**
     * Set <java_multiple_files> value
     *
     * @param boolean $value
     * @return \google\protobuf\FileOptions
     */
    public function setJavaMultipleFiles( $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <java_generate_equals_and_hash> has a value
     *
     * @return boolean
     */
    public function hasJavaGenerateEqualsAndHash(){
      return $this->_has(20);
    }
    
    /**
     * Clear <java_generate_equals_and_hash> value
     *
     * @return \google\protobuf\FileOptions
     */
    public function clearJavaGenerateEqualsAndHash(){
      return $this->_clear(20);
    }
    
    /**
     * Get <java_generate_equals_and_hash> value
     *
     * @return boolean
     */
    public function getJavaGenerateEqualsAndHash(){
      return $this->_get(20);
    }
    
    /**
     * Set <java_generate_equals_and_hash> value
     *
     * @param boolean $value
     * @return \google\protobuf\FileOptions
     */
    public function setJavaGenerateEqualsAndHash( $value){
      return $this->_set(20, $value);
    }
    
    /**
     * Check if <java_string_check_utf8> has a value
     *
     * @return boolean
     */
    public function hasJavaStringCheckUtf8(){
      return $this->_has(27);
    }
    
    /**
     * Clear <java_string_check_utf8> value
     *
     * @return \google\protobuf\FileOptions
     */
    public function clearJavaStringCheckUtf8(){
      return $this->_clear(27);
    }
    
    /**
     * Get <java_string_check_utf8> value
     *
     * @return boolean
     */
    public function getJavaStringCheckUtf8(){
      return $this->_get(27);
    }
    
    /**
     * Set <java_string_check_utf8> value
     *
     * @param boolean $value
     * @return \google\protobuf\FileOptions
     */
    public function setJavaStringCheckUtf8( $value){
      return $this->_set(27, $value);
    }
    
    /**
     * Check if <optimize_for> has a value
     *
     * @return boolean
     */
    public function hasOptimizeFor(){
      return $this->_has(9);
    }
    
    /**
     * Clear <optimize_for> value
     *
     * @return \google\protobuf\FileOptions
     */
    public function clearOptimizeFor(){
      return $this->_clear(9);
    }
    
    /**
     * Get <optimize_for> value
     *
     * @return int - \google\protobuf\FileOptions\OptimizeMode
     */
    public function getOptimizeFor(){
      return $this->_get(9);
    }
    
    /**
     * Set <optimize_for> value
     *
     * @param int - \google\protobuf\FileOptions\OptimizeMode $value
     * @return \google\protobuf\FileOptions
     */
    public function setOptimizeFor( $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <go_package> has a value
     *
     * @return boolean
     */
    public function hasGoPackage(){
      return $this->_has(11);
    }
    
    /**
     * Clear <go_package> value
     *
     * @return \google\protobuf\FileOptions
     */
    public function clearGoPackage(){
      return $this->_clear(11);
    }
    
    /**
     * Get <go_package> value
     *
     * @return string
     */
    public function getGoPackage(){
      return $this->_get(11);
    }
    
    /**
     * Set <go_package> value
     *
     * @param string $value
     * @return \google\protobuf\FileOptions
     */
    public function setGoPackage( $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <cc_generic_services> has a value
     *
     * @return boolean
     */
    public function hasCcGenericServices(){
      return $this->_has(16);
    }
    
    /**
     * Clear <cc_generic_services> value
     *
     * @return \google\protobuf\FileOptions
     */
    public function clearCcGenericServices(){
      return $this->_clear(16);
    }
    
    /**
     * Get <cc_generic_services> value
     *
     * @return boolean
     */
    public function getCcGenericServices(){
      return $this->_get(16);
    }
    
    /**
     * Set <cc_generic_services> value
     *
     * @param boolean $value
     * @return \google\protobuf\FileOptions
     */
    public function setCcGenericServices( $value){
      return $this->_set(16, $value);
    }
    
    /**
     * Check if <java_generic_services> has a value
     *
     * @return boolean
     */
    public function hasJavaGenericServices(){
      return $this->_has(17);
    }
    
    /**
     * Clear <java_generic_services> value
     *
     * @return \google\protobuf\FileOptions
     */
    public function clearJavaGenericServices(){
      return $this->_clear(17);
    }
    
    /**
     * Get <java_generic_services> value
     *
     * @return boolean
     */
    public function getJavaGenericServices(){
      return $this->_get(17);
    }
    
    /**
     * Set <java_generic_services> value
     *
     * @param boolean $value
     * @return \google\protobuf\FileOptions
     */
    public function setJavaGenericServices( $value){
      return $this->_set(17, $value);
    }
    
    /**
     * Check if <py_generic_services> has a value
     *
     * @return boolean
     */
    public function hasPyGenericServices(){
      return $this->_has(18);
    }
    
    /**
     * Clear <py_generic_services> value
     *
     * @return \google\protobuf\FileOptions
     */
    public function clearPyGenericServices(){
      return $this->_clear(18);
    }
    
    /**
     * Get <py_generic_services> value
     *
     * @return boolean
     */
    public function getPyGenericServices(){
      return $this->_get(18);
    }
    
    /**
     * Set <py_generic_services> value
     *
     * @param boolean $value
     * @return \google\protobuf\FileOptions
     */
    public function setPyGenericServices( $value){
      return $this->_set(18, $value);
    }
    
    /**
     * Check if <deprecated> has a value
     *
     * @return boolean
     */
    public function hasDeprecated(){
      return $this->_has(23);
    }
    
    /**
     * Clear <deprecated> value
     *
     * @return \google\protobuf\FileOptions
     */
    public function clearDeprecated(){
      return $this->_clear(23);
    }
    
    /**
     * Get <deprecated> value
     *
     * @return boolean
     */
    public function getDeprecated(){
      return $this->_get(23);
    }
    
    /**
     * Set <deprecated> value
     *
     * @param boolean $value
     * @return \google\protobuf\FileOptions
     */
    public function setDeprecated( $value){
      return $this->_set(23, $value);
    }
    
    /**
     * Check if <cc_enable_arenas> has a value
     *
     * @return boolean
     */
    public function hasCcEnableArenas(){
      return $this->_has(31);
    }
    
    /**
     * Clear <cc_enable_arenas> value
     *
     * @return \google\protobuf\FileOptions
     */
    public function clearCcEnableArenas(){
      return $this->_clear(31);
    }
    
    /**
     * Get <cc_enable_arenas> value
     *
     * @return boolean
     */
    public function getCcEnableArenas(){
      return $this->_get(31);
    }
    
    /**
     * Set <cc_enable_arenas> value
     *
     * @param boolean $value
     * @return \google\protobuf\FileOptions
     */
    public function setCcEnableArenas( $value){
      return $this->_set(31, $value);
    }
    
    /**
     * Check if <uninterpreted_option> has a value
     *
     * @return boolean
     */
    public function hasUninterpretedOption(){
      return $this->_has(999);
    }
    
    /**
     * Clear <uninterpreted_option> value
     *
     * @return \google\protobuf\FileOptions
     */
    public function clearUninterpretedOption(){
      return $this->_clear(999);
    }
    
    /**
     * Get <uninterpreted_option> value
     *
     * @param int $idx
     * @return \google\protobuf\UninterpretedOption
     */
    public function getUninterpretedOption($idx = NULL){
      return $this->_get(999, $idx);
    }
    
    /**
     * Set <uninterpreted_option> value
     *
     * @param \google\protobuf\UninterpretedOption $value
     * @return \google\protobuf\FileOptions
     */
    public function setUninterpretedOption(\google\protobuf\UninterpretedOption $value, $idx = NULL){
      return $this->_set(999, $value, $idx);
    }
    
    /**
     * Get all elements of <uninterpreted_option>
     *
     * @return \google\protobuf\UninterpretedOption[]
     */
    public function getUninterpretedOptionList(){
     return $this->_get(999);
    }
    
    /**
     * Add a new element to <uninterpreted_option>
     *
     * @param \google\protobuf\UninterpretedOption $value
     * @return \google\protobuf\FileOptions
     */
    public function addUninterpretedOption(\google\protobuf\UninterpretedOption $value){
     return $this->_add(999, $value);
    }
  }
}

namespace google\protobuf {

  class MessageOptions extends \DrSlump\Protobuf\Message {

    /**  @var boolean */
    public $message_set_wire_format = false;
    
    /**  @var boolean */
    public $no_standard_descriptor_accessor = false;
    
    /**  @var boolean */
    public $deprecated = false;
    
    /**  @var boolean */
    public $map_entry = null;
    
    /**  @var \google\protobuf\UninterpretedOption[]  */
    public $uninterpreted_option = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.MessageOptions');

      // OPTIONAL BOOL message_set_wire_format = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "message_set_wire_format";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL BOOL no_standard_descriptor_accessor = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "no_standard_descriptor_accessor";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL BOOL deprecated = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "deprecated";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL BOOL map_entry = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "map_entry";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE uninterpreted_option = 999
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 999;
      $f->name      = "uninterpreted_option";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\UninterpretedOption';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <message_set_wire_format> has a value
     *
     * @return boolean
     */
    public function hasMessageSetWireFormat(){
      return $this->_has(1);
    }
    
    /**
     * Clear <message_set_wire_format> value
     *
     * @return \google\protobuf\MessageOptions
     */
    public function clearMessageSetWireFormat(){
      return $this->_clear(1);
    }
    
    /**
     * Get <message_set_wire_format> value
     *
     * @return boolean
     */
    public function getMessageSetWireFormat(){
      return $this->_get(1);
    }
    
    /**
     * Set <message_set_wire_format> value
     *
     * @param boolean $value
     * @return \google\protobuf\MessageOptions
     */
    public function setMessageSetWireFormat( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <no_standard_descriptor_accessor> has a value
     *
     * @return boolean
     */
    public function hasNoStandardDescriptorAccessor(){
      return $this->_has(2);
    }
    
    /**
     * Clear <no_standard_descriptor_accessor> value
     *
     * @return \google\protobuf\MessageOptions
     */
    public function clearNoStandardDescriptorAccessor(){
      return $this->_clear(2);
    }
    
    /**
     * Get <no_standard_descriptor_accessor> value
     *
     * @return boolean
     */
    public function getNoStandardDescriptorAccessor(){
      return $this->_get(2);
    }
    
    /**
     * Set <no_standard_descriptor_accessor> value
     *
     * @param boolean $value
     * @return \google\protobuf\MessageOptions
     */
    public function setNoStandardDescriptorAccessor( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <deprecated> has a value
     *
     * @return boolean
     */
    public function hasDeprecated(){
      return $this->_has(3);
    }
    
    /**
     * Clear <deprecated> value
     *
     * @return \google\protobuf\MessageOptions
     */
    public function clearDeprecated(){
      return $this->_clear(3);
    }
    
    /**
     * Get <deprecated> value
     *
     * @return boolean
     */
    public function getDeprecated(){
      return $this->_get(3);
    }
    
    /**
     * Set <deprecated> value
     *
     * @param boolean $value
     * @return \google\protobuf\MessageOptions
     */
    public function setDeprecated( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <map_entry> has a value
     *
     * @return boolean
     */
    public function hasMapEntry(){
      return $this->_has(7);
    }
    
    /**
     * Clear <map_entry> value
     *
     * @return \google\protobuf\MessageOptions
     */
    public function clearMapEntry(){
      return $this->_clear(7);
    }
    
    /**
     * Get <map_entry> value
     *
     * @return boolean
     */
    public function getMapEntry(){
      return $this->_get(7);
    }
    
    /**
     * Set <map_entry> value
     *
     * @param boolean $value
     * @return \google\protobuf\MessageOptions
     */
    public function setMapEntry( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <uninterpreted_option> has a value
     *
     * @return boolean
     */
    public function hasUninterpretedOption(){
      return $this->_has(999);
    }
    
    /**
     * Clear <uninterpreted_option> value
     *
     * @return \google\protobuf\MessageOptions
     */
    public function clearUninterpretedOption(){
      return $this->_clear(999);
    }
    
    /**
     * Get <uninterpreted_option> value
     *
     * @param int $idx
     * @return \google\protobuf\UninterpretedOption
     */
    public function getUninterpretedOption($idx = NULL){
      return $this->_get(999, $idx);
    }
    
    /**
     * Set <uninterpreted_option> value
     *
     * @param \google\protobuf\UninterpretedOption $value
     * @return \google\protobuf\MessageOptions
     */
    public function setUninterpretedOption(\google\protobuf\UninterpretedOption $value, $idx = NULL){
      return $this->_set(999, $value, $idx);
    }
    
    /**
     * Get all elements of <uninterpreted_option>
     *
     * @return \google\protobuf\UninterpretedOption[]
     */
    public function getUninterpretedOptionList(){
     return $this->_get(999);
    }
    
    /**
     * Add a new element to <uninterpreted_option>
     *
     * @param \google\protobuf\UninterpretedOption $value
     * @return \google\protobuf\MessageOptions
     */
    public function addUninterpretedOption(\google\protobuf\UninterpretedOption $value){
     return $this->_add(999, $value);
    }
  }
}

namespace google\protobuf\FieldOptions {

  class CType extends \DrSlump\Protobuf\Enum {
    const STRING = 0;
    const CORD = 1;
    const STRING_PIECE = 2;
  }
}
namespace google\protobuf {

  class FieldOptions extends \DrSlump\Protobuf\Message {

    /**  @var int - \google\protobuf\FieldOptions\CType */
    public $ctype = \google\protobuf\FieldOptions\CType::STRING;
    
    /**  @var boolean */
    public $packed = null;
    
    /**  @var boolean */
    public $lazy = false;
    
    /**  @var boolean */
    public $deprecated = false;
    
    /**  @var boolean */
    public $weak = false;
    
    /**  @var \google\protobuf\UninterpretedOption[]  */
    public $uninterpreted_option = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.FieldOptions');

      // OPTIONAL ENUM ctype = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "ctype";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\FieldOptions\CType';
      $f->default   = \google\protobuf\FieldOptions\CType::STRING;
      $descriptor->addField($f);

      // OPTIONAL BOOL packed = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "packed";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL lazy = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "lazy";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL BOOL deprecated = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "deprecated";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // OPTIONAL BOOL weak = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "weak";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // REPEATED MESSAGE uninterpreted_option = 999
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 999;
      $f->name      = "uninterpreted_option";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\UninterpretedOption';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <ctype> has a value
     *
     * @return boolean
     */
    public function hasCtype(){
      return $this->_has(1);
    }
    
    /**
     * Clear <ctype> value
     *
     * @return \google\protobuf\FieldOptions
     */
    public function clearCtype(){
      return $this->_clear(1);
    }
    
    /**
     * Get <ctype> value
     *
     * @return int - \google\protobuf\FieldOptions\CType
     */
    public function getCtype(){
      return $this->_get(1);
    }
    
    /**
     * Set <ctype> value
     *
     * @param int - \google\protobuf\FieldOptions\CType $value
     * @return \google\protobuf\FieldOptions
     */
    public function setCtype( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <packed> has a value
     *
     * @return boolean
     */
    public function hasPacked(){
      return $this->_has(2);
    }
    
    /**
     * Clear <packed> value
     *
     * @return \google\protobuf\FieldOptions
     */
    public function clearPacked(){
      return $this->_clear(2);
    }
    
    /**
     * Get <packed> value
     *
     * @return boolean
     */
    public function getPacked(){
      return $this->_get(2);
    }
    
    /**
     * Set <packed> value
     *
     * @param boolean $value
     * @return \google\protobuf\FieldOptions
     */
    public function setPacked( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <lazy> has a value
     *
     * @return boolean
     */
    public function hasLazy(){
      return $this->_has(5);
    }
    
    /**
     * Clear <lazy> value
     *
     * @return \google\protobuf\FieldOptions
     */
    public function clearLazy(){
      return $this->_clear(5);
    }
    
    /**
     * Get <lazy> value
     *
     * @return boolean
     */
    public function getLazy(){
      return $this->_get(5);
    }
    
    /**
     * Set <lazy> value
     *
     * @param boolean $value
     * @return \google\protobuf\FieldOptions
     */
    public function setLazy( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <deprecated> has a value
     *
     * @return boolean
     */
    public function hasDeprecated(){
      return $this->_has(3);
    }
    
    /**
     * Clear <deprecated> value
     *
     * @return \google\protobuf\FieldOptions
     */
    public function clearDeprecated(){
      return $this->_clear(3);
    }
    
    /**
     * Get <deprecated> value
     *
     * @return boolean
     */
    public function getDeprecated(){
      return $this->_get(3);
    }
    
    /**
     * Set <deprecated> value
     *
     * @param boolean $value
     * @return \google\protobuf\FieldOptions
     */
    public function setDeprecated( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <weak> has a value
     *
     * @return boolean
     */
    public function hasWeak(){
      return $this->_has(10);
    }
    
    /**
     * Clear <weak> value
     *
     * @return \google\protobuf\FieldOptions
     */
    public function clearWeak(){
      return $this->_clear(10);
    }
    
    /**
     * Get <weak> value
     *
     * @return boolean
     */
    public function getWeak(){
      return $this->_get(10);
    }
    
    /**
     * Set <weak> value
     *
     * @param boolean $value
     * @return \google\protobuf\FieldOptions
     */
    public function setWeak( $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <uninterpreted_option> has a value
     *
     * @return boolean
     */
    public function hasUninterpretedOption(){
      return $this->_has(999);
    }
    
    /**
     * Clear <uninterpreted_option> value
     *
     * @return \google\protobuf\FieldOptions
     */
    public function clearUninterpretedOption(){
      return $this->_clear(999);
    }
    
    /**
     * Get <uninterpreted_option> value
     *
     * @param int $idx
     * @return \google\protobuf\UninterpretedOption
     */
    public function getUninterpretedOption($idx = NULL){
      return $this->_get(999, $idx);
    }
    
    /**
     * Set <uninterpreted_option> value
     *
     * @param \google\protobuf\UninterpretedOption $value
     * @return \google\protobuf\FieldOptions
     */
    public function setUninterpretedOption(\google\protobuf\UninterpretedOption $value, $idx = NULL){
      return $this->_set(999, $value, $idx);
    }
    
    /**
     * Get all elements of <uninterpreted_option>
     *
     * @return \google\protobuf\UninterpretedOption[]
     */
    public function getUninterpretedOptionList(){
     return $this->_get(999);
    }
    
    /**
     * Add a new element to <uninterpreted_option>
     *
     * @param \google\protobuf\UninterpretedOption $value
     * @return \google\protobuf\FieldOptions
     */
    public function addUninterpretedOption(\google\protobuf\UninterpretedOption $value){
     return $this->_add(999, $value);
    }
  }
}

namespace google\protobuf {

  class EnumOptions extends \DrSlump\Protobuf\Message {

    /**  @var boolean */
    public $allow_alias = null;
    
    /**  @var boolean */
    public $deprecated = false;
    
    /**  @var \google\protobuf\UninterpretedOption[]  */
    public $uninterpreted_option = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.EnumOptions');

      // OPTIONAL BOOL allow_alias = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "allow_alias";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL deprecated = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "deprecated";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // REPEATED MESSAGE uninterpreted_option = 999
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 999;
      $f->name      = "uninterpreted_option";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\UninterpretedOption';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <allow_alias> has a value
     *
     * @return boolean
     */
    public function hasAllowAlias(){
      return $this->_has(2);
    }
    
    /**
     * Clear <allow_alias> value
     *
     * @return \google\protobuf\EnumOptions
     */
    public function clearAllowAlias(){
      return $this->_clear(2);
    }
    
    /**
     * Get <allow_alias> value
     *
     * @return boolean
     */
    public function getAllowAlias(){
      return $this->_get(2);
    }
    
    /**
     * Set <allow_alias> value
     *
     * @param boolean $value
     * @return \google\protobuf\EnumOptions
     */
    public function setAllowAlias( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <deprecated> has a value
     *
     * @return boolean
     */
    public function hasDeprecated(){
      return $this->_has(3);
    }
    
    /**
     * Clear <deprecated> value
     *
     * @return \google\protobuf\EnumOptions
     */
    public function clearDeprecated(){
      return $this->_clear(3);
    }
    
    /**
     * Get <deprecated> value
     *
     * @return boolean
     */
    public function getDeprecated(){
      return $this->_get(3);
    }
    
    /**
     * Set <deprecated> value
     *
     * @param boolean $value
     * @return \google\protobuf\EnumOptions
     */
    public function setDeprecated( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <uninterpreted_option> has a value
     *
     * @return boolean
     */
    public function hasUninterpretedOption(){
      return $this->_has(999);
    }
    
    /**
     * Clear <uninterpreted_option> value
     *
     * @return \google\protobuf\EnumOptions
     */
    public function clearUninterpretedOption(){
      return $this->_clear(999);
    }
    
    /**
     * Get <uninterpreted_option> value
     *
     * @param int $idx
     * @return \google\protobuf\UninterpretedOption
     */
    public function getUninterpretedOption($idx = NULL){
      return $this->_get(999, $idx);
    }
    
    /**
     * Set <uninterpreted_option> value
     *
     * @param \google\protobuf\UninterpretedOption $value
     * @return \google\protobuf\EnumOptions
     */
    public function setUninterpretedOption(\google\protobuf\UninterpretedOption $value, $idx = NULL){
      return $this->_set(999, $value, $idx);
    }
    
    /**
     * Get all elements of <uninterpreted_option>
     *
     * @return \google\protobuf\UninterpretedOption[]
     */
    public function getUninterpretedOptionList(){
     return $this->_get(999);
    }
    
    /**
     * Add a new element to <uninterpreted_option>
     *
     * @param \google\protobuf\UninterpretedOption $value
     * @return \google\protobuf\EnumOptions
     */
    public function addUninterpretedOption(\google\protobuf\UninterpretedOption $value){
     return $this->_add(999, $value);
    }
  }
}

namespace google\protobuf {

  class EnumValueOptions extends \DrSlump\Protobuf\Message {

    /**  @var boolean */
    public $deprecated = false;
    
    /**  @var \google\protobuf\UninterpretedOption[]  */
    public $uninterpreted_option = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.EnumValueOptions');

      // OPTIONAL BOOL deprecated = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "deprecated";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // REPEATED MESSAGE uninterpreted_option = 999
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 999;
      $f->name      = "uninterpreted_option";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\UninterpretedOption';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <deprecated> has a value
     *
     * @return boolean
     */
    public function hasDeprecated(){
      return $this->_has(1);
    }
    
    /**
     * Clear <deprecated> value
     *
     * @return \google\protobuf\EnumValueOptions
     */
    public function clearDeprecated(){
      return $this->_clear(1);
    }
    
    /**
     * Get <deprecated> value
     *
     * @return boolean
     */
    public function getDeprecated(){
      return $this->_get(1);
    }
    
    /**
     * Set <deprecated> value
     *
     * @param boolean $value
     * @return \google\protobuf\EnumValueOptions
     */
    public function setDeprecated( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <uninterpreted_option> has a value
     *
     * @return boolean
     */
    public function hasUninterpretedOption(){
      return $this->_has(999);
    }
    
    /**
     * Clear <uninterpreted_option> value
     *
     * @return \google\protobuf\EnumValueOptions
     */
    public function clearUninterpretedOption(){
      return $this->_clear(999);
    }
    
    /**
     * Get <uninterpreted_option> value
     *
     * @param int $idx
     * @return \google\protobuf\UninterpretedOption
     */
    public function getUninterpretedOption($idx = NULL){
      return $this->_get(999, $idx);
    }
    
    /**
     * Set <uninterpreted_option> value
     *
     * @param \google\protobuf\UninterpretedOption $value
     * @return \google\protobuf\EnumValueOptions
     */
    public function setUninterpretedOption(\google\protobuf\UninterpretedOption $value, $idx = NULL){
      return $this->_set(999, $value, $idx);
    }
    
    /**
     * Get all elements of <uninterpreted_option>
     *
     * @return \google\protobuf\UninterpretedOption[]
     */
    public function getUninterpretedOptionList(){
     return $this->_get(999);
    }
    
    /**
     * Add a new element to <uninterpreted_option>
     *
     * @param \google\protobuf\UninterpretedOption $value
     * @return \google\protobuf\EnumValueOptions
     */
    public function addUninterpretedOption(\google\protobuf\UninterpretedOption $value){
     return $this->_add(999, $value);
    }
  }
}

namespace google\protobuf {

  class ServiceOptions extends \DrSlump\Protobuf\Message {

    /**  @var boolean */
    public $deprecated = false;
    
    /**  @var \google\protobuf\UninterpretedOption[]  */
    public $uninterpreted_option = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.ServiceOptions');

      // OPTIONAL BOOL deprecated = 33
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 33;
      $f->name      = "deprecated";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // REPEATED MESSAGE uninterpreted_option = 999
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 999;
      $f->name      = "uninterpreted_option";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\UninterpretedOption';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <deprecated> has a value
     *
     * @return boolean
     */
    public function hasDeprecated(){
      return $this->_has(33);
    }
    
    /**
     * Clear <deprecated> value
     *
     * @return \google\protobuf\ServiceOptions
     */
    public function clearDeprecated(){
      return $this->_clear(33);
    }
    
    /**
     * Get <deprecated> value
     *
     * @return boolean
     */
    public function getDeprecated(){
      return $this->_get(33);
    }
    
    /**
     * Set <deprecated> value
     *
     * @param boolean $value
     * @return \google\protobuf\ServiceOptions
     */
    public function setDeprecated( $value){
      return $this->_set(33, $value);
    }
    
    /**
     * Check if <uninterpreted_option> has a value
     *
     * @return boolean
     */
    public function hasUninterpretedOption(){
      return $this->_has(999);
    }
    
    /**
     * Clear <uninterpreted_option> value
     *
     * @return \google\protobuf\ServiceOptions
     */
    public function clearUninterpretedOption(){
      return $this->_clear(999);
    }
    
    /**
     * Get <uninterpreted_option> value
     *
     * @param int $idx
     * @return \google\protobuf\UninterpretedOption
     */
    public function getUninterpretedOption($idx = NULL){
      return $this->_get(999, $idx);
    }
    
    /**
     * Set <uninterpreted_option> value
     *
     * @param \google\protobuf\UninterpretedOption $value
     * @return \google\protobuf\ServiceOptions
     */
    public function setUninterpretedOption(\google\protobuf\UninterpretedOption $value, $idx = NULL){
      return $this->_set(999, $value, $idx);
    }
    
    /**
     * Get all elements of <uninterpreted_option>
     *
     * @return \google\protobuf\UninterpretedOption[]
     */
    public function getUninterpretedOptionList(){
     return $this->_get(999);
    }
    
    /**
     * Add a new element to <uninterpreted_option>
     *
     * @param \google\protobuf\UninterpretedOption $value
     * @return \google\protobuf\ServiceOptions
     */
    public function addUninterpretedOption(\google\protobuf\UninterpretedOption $value){
     return $this->_add(999, $value);
    }
  }
}

namespace google\protobuf {

  class MethodOptions extends \DrSlump\Protobuf\Message {

    /**  @var boolean */
    public $deprecated = false;
    
    /**  @var \google\protobuf\UninterpretedOption[]  */
    public $uninterpreted_option = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.MethodOptions');

      // OPTIONAL BOOL deprecated = 33
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 33;
      $f->name      = "deprecated";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->default   = false;
      $descriptor->addField($f);

      // REPEATED MESSAGE uninterpreted_option = 999
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 999;
      $f->name      = "uninterpreted_option";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\UninterpretedOption';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <deprecated> has a value
     *
     * @return boolean
     */
    public function hasDeprecated(){
      return $this->_has(33);
    }
    
    /**
     * Clear <deprecated> value
     *
     * @return \google\protobuf\MethodOptions
     */
    public function clearDeprecated(){
      return $this->_clear(33);
    }
    
    /**
     * Get <deprecated> value
     *
     * @return boolean
     */
    public function getDeprecated(){
      return $this->_get(33);
    }
    
    /**
     * Set <deprecated> value
     *
     * @param boolean $value
     * @return \google\protobuf\MethodOptions
     */
    public function setDeprecated( $value){
      return $this->_set(33, $value);
    }
    
    /**
     * Check if <uninterpreted_option> has a value
     *
     * @return boolean
     */
    public function hasUninterpretedOption(){
      return $this->_has(999);
    }
    
    /**
     * Clear <uninterpreted_option> value
     *
     * @return \google\protobuf\MethodOptions
     */
    public function clearUninterpretedOption(){
      return $this->_clear(999);
    }
    
    /**
     * Get <uninterpreted_option> value
     *
     * @param int $idx
     * @return \google\protobuf\UninterpretedOption
     */
    public function getUninterpretedOption($idx = NULL){
      return $this->_get(999, $idx);
    }
    
    /**
     * Set <uninterpreted_option> value
     *
     * @param \google\protobuf\UninterpretedOption $value
     * @return \google\protobuf\MethodOptions
     */
    public function setUninterpretedOption(\google\protobuf\UninterpretedOption $value, $idx = NULL){
      return $this->_set(999, $value, $idx);
    }
    
    /**
     * Get all elements of <uninterpreted_option>
     *
     * @return \google\protobuf\UninterpretedOption[]
     */
    public function getUninterpretedOptionList(){
     return $this->_get(999);
    }
    
    /**
     * Add a new element to <uninterpreted_option>
     *
     * @param \google\protobuf\UninterpretedOption $value
     * @return \google\protobuf\MethodOptions
     */
    public function addUninterpretedOption(\google\protobuf\UninterpretedOption $value){
     return $this->_add(999, $value);
    }
  }
}

namespace google\protobuf\UninterpretedOption {

  class NamePart extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name_part = null;
    
    /**  @var boolean */
    public $is_extension = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.UninterpretedOption.NamePart');

      // REQUIRED STRING name_part = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name_part";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED BOOL is_extension = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "is_extension";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name_part> has a value
     *
     * @return boolean
     */
    public function hasNamePart(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name_part> value
     *
     * @return \google\protobuf\UninterpretedOption\NamePart
     */
    public function clearNamePart(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name_part> value
     *
     * @return string
     */
    public function getNamePart(){
      return $this->_get(1);
    }
    
    /**
     * Set <name_part> value
     *
     * @param string $value
     * @return \google\protobuf\UninterpretedOption\NamePart
     */
    public function setNamePart( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <is_extension> has a value
     *
     * @return boolean
     */
    public function hasIsExtension(){
      return $this->_has(2);
    }
    
    /**
     * Clear <is_extension> value
     *
     * @return \google\protobuf\UninterpretedOption\NamePart
     */
    public function clearIsExtension(){
      return $this->_clear(2);
    }
    
    /**
     * Get <is_extension> value
     *
     * @return boolean
     */
    public function getIsExtension(){
      return $this->_get(2);
    }
    
    /**
     * Set <is_extension> value
     *
     * @param boolean $value
     * @return \google\protobuf\UninterpretedOption\NamePart
     */
    public function setIsExtension( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\protobuf {

  class UninterpretedOption extends \DrSlump\Protobuf\Message {

    /**  @var \google\protobuf\UninterpretedOption\NamePart[]  */
    public $name = array();
    
    /**  @var string */
    public $identifier_value = null;
    
    /**  @var int */
    public $positive_int_value = null;
    
    /**  @var int */
    public $negative_int_value = null;
    
    /**  @var float */
    public $double_value = null;
    
    /**  @var string */
    public $string_value = null;
    
    /**  @var string */
    public $aggregate_value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.UninterpretedOption');

      // REPEATED MESSAGE name = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\UninterpretedOption\NamePart';
      $descriptor->addField($f);

      // OPTIONAL STRING identifier_value = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "identifier_value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT64 positive_int_value = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "positive_int_value";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 negative_int_value = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "negative_int_value";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL DOUBLE double_value = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "double_value";
      $f->type      = \DrSlump\Protobuf::TYPE_DOUBLE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BYTES string_value = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "string_value";
      $f->type      = \DrSlump\Protobuf::TYPE_BYTES;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING aggregate_value = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "aggregate_value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(2);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\protobuf\UninterpretedOption
     */
    public function clearName(){
      return $this->_clear(2);
    }
    
    /**
     * Get <name> value
     *
     * @param int $idx
     * @return \google\protobuf\UninterpretedOption\NamePart
     */
    public function getName($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <name> value
     *
     * @param \google\protobuf\UninterpretedOption\NamePart $value
     * @return \google\protobuf\UninterpretedOption
     */
    public function setName(\google\protobuf\UninterpretedOption\NamePart $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <name>
     *
     * @return \google\protobuf\UninterpretedOption\NamePart[]
     */
    public function getNameList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <name>
     *
     * @param \google\protobuf\UninterpretedOption\NamePart $value
     * @return \google\protobuf\UninterpretedOption
     */
    public function addName(\google\protobuf\UninterpretedOption\NamePart $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <identifier_value> has a value
     *
     * @return boolean
     */
    public function hasIdentifierValue(){
      return $this->_has(3);
    }
    
    /**
     * Clear <identifier_value> value
     *
     * @return \google\protobuf\UninterpretedOption
     */
    public function clearIdentifierValue(){
      return $this->_clear(3);
    }
    
    /**
     * Get <identifier_value> value
     *
     * @return string
     */
    public function getIdentifierValue(){
      return $this->_get(3);
    }
    
    /**
     * Set <identifier_value> value
     *
     * @param string $value
     * @return \google\protobuf\UninterpretedOption
     */
    public function setIdentifierValue( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <positive_int_value> has a value
     *
     * @return boolean
     */
    public function hasPositiveIntValue(){
      return $this->_has(4);
    }
    
    /**
     * Clear <positive_int_value> value
     *
     * @return \google\protobuf\UninterpretedOption
     */
    public function clearPositiveIntValue(){
      return $this->_clear(4);
    }
    
    /**
     * Get <positive_int_value> value
     *
     * @return int
     */
    public function getPositiveIntValue(){
      return $this->_get(4);
    }
    
    /**
     * Set <positive_int_value> value
     *
     * @param int $value
     * @return \google\protobuf\UninterpretedOption
     */
    public function setPositiveIntValue( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <negative_int_value> has a value
     *
     * @return boolean
     */
    public function hasNegativeIntValue(){
      return $this->_has(5);
    }
    
    /**
     * Clear <negative_int_value> value
     *
     * @return \google\protobuf\UninterpretedOption
     */
    public function clearNegativeIntValue(){
      return $this->_clear(5);
    }
    
    /**
     * Get <negative_int_value> value
     *
     * @return int
     */
    public function getNegativeIntValue(){
      return $this->_get(5);
    }
    
    /**
     * Set <negative_int_value> value
     *
     * @param int $value
     * @return \google\protobuf\UninterpretedOption
     */
    public function setNegativeIntValue( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <double_value> has a value
     *
     * @return boolean
     */
    public function hasDoubleValue(){
      return $this->_has(6);
    }
    
    /**
     * Clear <double_value> value
     *
     * @return \google\protobuf\UninterpretedOption
     */
    public function clearDoubleValue(){
      return $this->_clear(6);
    }
    
    /**
     * Get <double_value> value
     *
     * @return float
     */
    public function getDoubleValue(){
      return $this->_get(6);
    }
    
    /**
     * Set <double_value> value
     *
     * @param float $value
     * @return \google\protobuf\UninterpretedOption
     */
    public function setDoubleValue( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <string_value> has a value
     *
     * @return boolean
     */
    public function hasStringValue(){
      return $this->_has(7);
    }
    
    /**
     * Clear <string_value> value
     *
     * @return \google\protobuf\UninterpretedOption
     */
    public function clearStringValue(){
      return $this->_clear(7);
    }
    
    /**
     * Get <string_value> value
     *
     * @return string
     */
    public function getStringValue(){
      return $this->_get(7);
    }
    
    /**
     * Set <string_value> value
     *
     * @param string $value
     * @return \google\protobuf\UninterpretedOption
     */
    public function setStringValue( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <aggregate_value> has a value
     *
     * @return boolean
     */
    public function hasAggregateValue(){
      return $this->_has(8);
    }
    
    /**
     * Clear <aggregate_value> value
     *
     * @return \google\protobuf\UninterpretedOption
     */
    public function clearAggregateValue(){
      return $this->_clear(8);
    }
    
    /**
     * Get <aggregate_value> value
     *
     * @return string
     */
    public function getAggregateValue(){
      return $this->_get(8);
    }
    
    /**
     * Set <aggregate_value> value
     *
     * @param string $value
     * @return \google\protobuf\UninterpretedOption
     */
    public function setAggregateValue( $value){
      return $this->_set(8, $value);
    }
  }
}

namespace google\protobuf\SourceCodeInfo {

  class Location extends \DrSlump\Protobuf\Message {

    /**  @var int[]  */
    public $path = array();
    
    /**  @var int[]  */
    public $span = array();
    
    /**  @var string */
    public $leading_comments = null;
    
    /**  @var string */
    public $trailing_comments = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.SourceCodeInfo.Location');

      // REPEATED INT32 path = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "path";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED INT32 span = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "span";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL STRING leading_comments = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "leading_comments";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING trailing_comments = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "trailing_comments";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <path> has a value
     *
     * @return boolean
     */
    public function hasPath(){
      return $this->_has(1);
    }
    
    /**
     * Clear <path> value
     *
     * @return \google\protobuf\SourceCodeInfo\Location
     */
    public function clearPath(){
      return $this->_clear(1);
    }
    
    /**
     * Get <path> value
     *
     * @param int $idx
     * @return int
     */
    public function getPath($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <path> value
     *
     * @param int $value
     * @return \google\protobuf\SourceCodeInfo\Location
     */
    public function setPath( $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <path>
     *
     * @return int[]
     */
    public function getPathList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <path>
     *
     * @param int $value
     * @return \google\protobuf\SourceCodeInfo\Location
     */
    public function addPath( $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <span> has a value
     *
     * @return boolean
     */
    public function hasSpan(){
      return $this->_has(2);
    }
    
    /**
     * Clear <span> value
     *
     * @return \google\protobuf\SourceCodeInfo\Location
     */
    public function clearSpan(){
      return $this->_clear(2);
    }
    
    /**
     * Get <span> value
     *
     * @param int $idx
     * @return int
     */
    public function getSpan($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <span> value
     *
     * @param int $value
     * @return \google\protobuf\SourceCodeInfo\Location
     */
    public function setSpan( $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <span>
     *
     * @return int[]
     */
    public function getSpanList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <span>
     *
     * @param int $value
     * @return \google\protobuf\SourceCodeInfo\Location
     */
    public function addSpan( $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <leading_comments> has a value
     *
     * @return boolean
     */
    public function hasLeadingComments(){
      return $this->_has(3);
    }
    
    /**
     * Clear <leading_comments> value
     *
     * @return \google\protobuf\SourceCodeInfo\Location
     */
    public function clearLeadingComments(){
      return $this->_clear(3);
    }
    
    /**
     * Get <leading_comments> value
     *
     * @return string
     */
    public function getLeadingComments(){
      return $this->_get(3);
    }
    
    /**
     * Set <leading_comments> value
     *
     * @param string $value
     * @return \google\protobuf\SourceCodeInfo\Location
     */
    public function setLeadingComments( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <trailing_comments> has a value
     *
     * @return boolean
     */
    public function hasTrailingComments(){
      return $this->_has(4);
    }
    
    /**
     * Clear <trailing_comments> value
     *
     * @return \google\protobuf\SourceCodeInfo\Location
     */
    public function clearTrailingComments(){
      return $this->_clear(4);
    }
    
    /**
     * Get <trailing_comments> value
     *
     * @return string
     */
    public function getTrailingComments(){
      return $this->_get(4);
    }
    
    /**
     * Set <trailing_comments> value
     *
     * @param string $value
     * @return \google\protobuf\SourceCodeInfo\Location
     */
    public function setTrailingComments( $value){
      return $this->_set(4, $value);
    }
  }
}

namespace google\protobuf {

  class SourceCodeInfo extends \DrSlump\Protobuf\Message {

    /**  @var \google\protobuf\SourceCodeInfo\Location[]  */
    public $location = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.protobuf.SourceCodeInfo');

      // REPEATED MESSAGE location = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "location";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\SourceCodeInfo\Location';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <location> has a value
     *
     * @return boolean
     */
    public function hasLocation(){
      return $this->_has(1);
    }
    
    /**
     * Clear <location> value
     *
     * @return \google\protobuf\SourceCodeInfo
     */
    public function clearLocation(){
      return $this->_clear(1);
    }
    
    /**
     * Get <location> value
     *
     * @param int $idx
     * @return \google\protobuf\SourceCodeInfo\Location
     */
    public function getLocation($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <location> value
     *
     * @param \google\protobuf\SourceCodeInfo\Location $value
     * @return \google\protobuf\SourceCodeInfo
     */
    public function setLocation(\google\protobuf\SourceCodeInfo\Location $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <location>
     *
     * @return \google\protobuf\SourceCodeInfo\Location[]
     */
    public function getLocationList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <location>
     *
     * @param \google\protobuf\SourceCodeInfo\Location $value
     * @return \google\protobuf\SourceCodeInfo
     */
    public function addLocation(\google\protobuf\SourceCodeInfo\Location $value){
     return $this->_add(1, $value);
    }
  }
}

