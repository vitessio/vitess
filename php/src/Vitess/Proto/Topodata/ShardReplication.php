<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: topodata.proto
//   Date: 2016-01-22 01:34:42

namespace Vitess\Proto\Topodata {

  class ShardReplication extends \DrSlump\Protobuf\Message {

    /**  @var \Vitess\Proto\Topodata\ShardReplication\Node[]  */
    public $nodes = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'topodata.ShardReplication');

      // REPEATED MESSAGE nodes = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "nodes";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\Vitess\Proto\Topodata\ShardReplication\Node';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <nodes> has a value
     *
     * @return boolean
     */
    public function hasNodes(){
      return $this->_has(1);
    }
    
    /**
     * Clear <nodes> value
     *
     * @return \Vitess\Proto\Topodata\ShardReplication
     */
    public function clearNodes(){
      return $this->_clear(1);
    }
    
    /**
     * Get <nodes> value
     *
     * @param int $idx
     * @return \Vitess\Proto\Topodata\ShardReplication\Node
     */
    public function getNodes($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <nodes> value
     *
     * @param \Vitess\Proto\Topodata\ShardReplication\Node $value
     * @return \Vitess\Proto\Topodata\ShardReplication
     */
    public function setNodes(\Vitess\Proto\Topodata\ShardReplication\Node $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <nodes>
     *
     * @return \Vitess\Proto\Topodata\ShardReplication\Node[]
     */
    public function getNodesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <nodes>
     *
     * @param \Vitess\Proto\Topodata\ShardReplication\Node $value
     * @return \Vitess\Proto\Topodata\ShardReplication
     */
    public function addNodes(\Vitess\Proto\Topodata\ShardReplication\Node $value){
     return $this->_add(1, $value);
    }
  }
}

