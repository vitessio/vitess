<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: vschema.proto

namespace Vitess\Proto\Vschema {

  class SrvVSchema extends \DrSlump\Protobuf\Message {

    /**  @var \Vitess\Proto\Vschema\SrvVSchema\KeyspacesEntry[]  */
    public $keyspaces = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'vschema.SrvVSchema');

      // REPEATED MESSAGE keyspaces = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "keyspaces";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\Vitess\Proto\Vschema\SrvVSchema\KeyspacesEntry';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <keyspaces> has a value
     *
     * @return boolean
     */
    public function hasKeyspaces(){
      return $this->_has(1);
    }
    
    /**
     * Clear <keyspaces> value
     *
     * @return \Vitess\Proto\Vschema\SrvVSchema
     */
    public function clearKeyspaces(){
      return $this->_clear(1);
    }
    
    /**
     * Get <keyspaces> value
     *
     * @param int $idx
     * @return \Vitess\Proto\Vschema\SrvVSchema\KeyspacesEntry
     */
    public function getKeyspaces($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <keyspaces> value
     *
     * @param \Vitess\Proto\Vschema\SrvVSchema\KeyspacesEntry $value
     * @return \Vitess\Proto\Vschema\SrvVSchema
     */
    public function setKeyspaces(\Vitess\Proto\Vschema\SrvVSchema\KeyspacesEntry $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <keyspaces>
     *
     * @return \Vitess\Proto\Vschema\SrvVSchema\KeyspacesEntry[]
     */
    public function getKeyspacesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <keyspaces>
     *
     * @param \Vitess\Proto\Vschema\SrvVSchema\KeyspacesEntry $value
     * @return \Vitess\Proto\Vschema\SrvVSchema
     */
    public function addKeyspaces(\Vitess\Proto\Vschema\SrvVSchema\KeyspacesEntry $value){
     return $this->_add(1, $value);
    }
  }
}

