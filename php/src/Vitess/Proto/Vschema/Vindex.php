<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: vschema.proto

namespace Vitess\Proto\Vschema {

  class Vindex extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $type = null;
    
    /**  @var \Vitess\Proto\Vschema\Vindex\ParamsEntry[]  */
    public $params = array();
    
    /**  @var string */
    public $owner = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'vschema.Vindex');

      // OPTIONAL STRING type = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "type";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE params = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "params";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\Vitess\Proto\Vschema\Vindex\ParamsEntry';
      $descriptor->addField($f);

      // OPTIONAL STRING owner = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "owner";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <type> has a value
     *
     * @return boolean
     */
    public function hasType(){
      return $this->_has(1);
    }
    
    /**
     * Clear <type> value
     *
     * @return \Vitess\Proto\Vschema\Vindex
     */
    public function clearType(){
      return $this->_clear(1);
    }
    
    /**
     * Get <type> value
     *
     * @return string
     */
    public function getType(){
      return $this->_get(1);
    }
    
    /**
     * Set <type> value
     *
     * @param string $value
     * @return \Vitess\Proto\Vschema\Vindex
     */
    public function setType( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <params> has a value
     *
     * @return boolean
     */
    public function hasParams(){
      return $this->_has(2);
    }
    
    /**
     * Clear <params> value
     *
     * @return \Vitess\Proto\Vschema\Vindex
     */
    public function clearParams(){
      return $this->_clear(2);
    }
    
    /**
     * Get <params> value
     *
     * @param int $idx
     * @return \Vitess\Proto\Vschema\Vindex\ParamsEntry
     */
    public function getParams($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <params> value
     *
     * @param \Vitess\Proto\Vschema\Vindex\ParamsEntry $value
     * @return \Vitess\Proto\Vschema\Vindex
     */
    public function setParams(\Vitess\Proto\Vschema\Vindex\ParamsEntry $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <params>
     *
     * @return \Vitess\Proto\Vschema\Vindex\ParamsEntry[]
     */
    public function getParamsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <params>
     *
     * @param \Vitess\Proto\Vschema\Vindex\ParamsEntry $value
     * @return \Vitess\Proto\Vschema\Vindex
     */
    public function addParams(\Vitess\Proto\Vschema\Vindex\ParamsEntry $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <owner> has a value
     *
     * @return boolean
     */
    public function hasOwner(){
      return $this->_has(3);
    }
    
    /**
     * Clear <owner> value
     *
     * @return \Vitess\Proto\Vschema\Vindex
     */
    public function clearOwner(){
      return $this->_clear(3);
    }
    
    /**
     * Get <owner> value
     *
     * @return string
     */
    public function getOwner(){
      return $this->_get(3);
    }
    
    /**
     * Set <owner> value
     *
     * @param string $value
     * @return \Vitess\Proto\Vschema\Vindex
     */
    public function setOwner( $value){
      return $this->_set(3, $value);
    }
  }
}

