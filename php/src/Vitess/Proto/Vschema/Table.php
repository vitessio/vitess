<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: vschema.proto

namespace Vitess\Proto\Vschema {

  class Table extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $type = null;
    
    /**  @var \Vitess\Proto\Vschema\ColumnVindex[]  */
    public $column_vindexes = array();
    
    /**  @var \Vitess\Proto\Vschema\AutoIncrement */
    public $auto_increment = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'vschema.Table');

      // OPTIONAL STRING type = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "type";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE column_vindexes = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "column_vindexes";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\Vitess\Proto\Vschema\ColumnVindex';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE auto_increment = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "auto_increment";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\Vitess\Proto\Vschema\AutoIncrement';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <type> has a value
     *
     * @return boolean
     */
    public function hasType(){
      return $this->_has(1);
    }
    
    /**
     * Clear <type> value
     *
     * @return \Vitess\Proto\Vschema\Table
     */
    public function clearType(){
      return $this->_clear(1);
    }
    
    /**
     * Get <type> value
     *
     * @return string
     */
    public function getType(){
      return $this->_get(1);
    }
    
    /**
     * Set <type> value
     *
     * @param string $value
     * @return \Vitess\Proto\Vschema\Table
     */
    public function setType( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <column_vindexes> has a value
     *
     * @return boolean
     */
    public function hasColumnVindexes(){
      return $this->_has(2);
    }
    
    /**
     * Clear <column_vindexes> value
     *
     * @return \Vitess\Proto\Vschema\Table
     */
    public function clearColumnVindexes(){
      return $this->_clear(2);
    }
    
    /**
     * Get <column_vindexes> value
     *
     * @param int $idx
     * @return \Vitess\Proto\Vschema\ColumnVindex
     */
    public function getColumnVindexes($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <column_vindexes> value
     *
     * @param \Vitess\Proto\Vschema\ColumnVindex $value
     * @return \Vitess\Proto\Vschema\Table
     */
    public function setColumnVindexes(\Vitess\Proto\Vschema\ColumnVindex $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <column_vindexes>
     *
     * @return \Vitess\Proto\Vschema\ColumnVindex[]
     */
    public function getColumnVindexesList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <column_vindexes>
     *
     * @param \Vitess\Proto\Vschema\ColumnVindex $value
     * @return \Vitess\Proto\Vschema\Table
     */
    public function addColumnVindexes(\Vitess\Proto\Vschema\ColumnVindex $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <auto_increment> has a value
     *
     * @return boolean
     */
    public function hasAutoIncrement(){
      return $this->_has(3);
    }
    
    /**
     * Clear <auto_increment> value
     *
     * @return \Vitess\Proto\Vschema\Table
     */
    public function clearAutoIncrement(){
      return $this->_clear(3);
    }
    
    /**
     * Get <auto_increment> value
     *
     * @return \Vitess\Proto\Vschema\AutoIncrement
     */
    public function getAutoIncrement(){
      return $this->_get(3);
    }
    
    /**
     * Set <auto_increment> value
     *
     * @param \Vitess\Proto\Vschema\AutoIncrement $value
     * @return \Vitess\Proto\Vschema\Table
     */
    public function setAutoIncrement(\Vitess\Proto\Vschema\AutoIncrement $value){
      return $this->_set(3, $value);
    }
  }
}

