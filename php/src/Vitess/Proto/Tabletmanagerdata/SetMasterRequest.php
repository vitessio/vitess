<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: tabletmanagerdata.proto
//   Date: 2016-01-22 01:34:35

namespace Vitess\Proto\Tabletmanagerdata {

  class SetMasterRequest extends \DrSlump\Protobuf\Message {

    /**  @var \Vitess\Proto\Topodata\TabletAlias */
    public $parent = null;
    
    /**  @var int */
    public $time_created_ns = null;
    
    /**  @var boolean */
    public $force_start_slave = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'tabletmanagerdata.SetMasterRequest');

      // OPTIONAL MESSAGE parent = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "parent";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\Vitess\Proto\Topodata\TabletAlias';
      $descriptor->addField($f);

      // OPTIONAL INT64 time_created_ns = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "time_created_ns";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL force_start_slave = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "force_start_slave";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <parent> has a value
     *
     * @return boolean
     */
    public function hasParent(){
      return $this->_has(1);
    }
    
    /**
     * Clear <parent> value
     *
     * @return \Vitess\Proto\Tabletmanagerdata\SetMasterRequest
     */
    public function clearParent(){
      return $this->_clear(1);
    }
    
    /**
     * Get <parent> value
     *
     * @return \Vitess\Proto\Topodata\TabletAlias
     */
    public function getParent(){
      return $this->_get(1);
    }
    
    /**
     * Set <parent> value
     *
     * @param \Vitess\Proto\Topodata\TabletAlias $value
     * @return \Vitess\Proto\Tabletmanagerdata\SetMasterRequest
     */
    public function setParent(\Vitess\Proto\Topodata\TabletAlias $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <time_created_ns> has a value
     *
     * @return boolean
     */
    public function hasTimeCreatedNs(){
      return $this->_has(2);
    }
    
    /**
     * Clear <time_created_ns> value
     *
     * @return \Vitess\Proto\Tabletmanagerdata\SetMasterRequest
     */
    public function clearTimeCreatedNs(){
      return $this->_clear(2);
    }
    
    /**
     * Get <time_created_ns> value
     *
     * @return int
     */
    public function getTimeCreatedNs(){
      return $this->_get(2);
    }
    
    /**
     * Set <time_created_ns> value
     *
     * @param int $value
     * @return \Vitess\Proto\Tabletmanagerdata\SetMasterRequest
     */
    public function setTimeCreatedNs( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <force_start_slave> has a value
     *
     * @return boolean
     */
    public function hasForceStartSlave(){
      return $this->_has(3);
    }
    
    /**
     * Clear <force_start_slave> value
     *
     * @return \Vitess\Proto\Tabletmanagerdata\SetMasterRequest
     */
    public function clearForceStartSlave(){
      return $this->_clear(3);
    }
    
    /**
     * Get <force_start_slave> value
     *
     * @return boolean
     */
    public function getForceStartSlave(){
      return $this->_get(3);
    }
    
    /**
     * Set <force_start_slave> value
     *
     * @param boolean $value
     * @return \Vitess\Proto\Tabletmanagerdata\SetMasterRequest
     */
    public function setForceStartSlave( $value){
      return $this->_set(3, $value);
    }
  }
}

