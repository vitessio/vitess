<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: tabletmanagerdata.proto

namespace Vitess\Proto\Tabletmanagerdata {

  class ApplySchemaRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $sql = null;
    
    /**  @var boolean */
    public $force = null;
    
    /**  @var boolean */
    public $allow_replication = null;
    
    /**  @var \Vitess\Proto\Tabletmanagerdata\SchemaDefinition */
    public $before_schema = null;
    
    /**  @var \Vitess\Proto\Tabletmanagerdata\SchemaDefinition */
    public $after_schema = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'tabletmanagerdata.ApplySchemaRequest');

      // OPTIONAL STRING sql = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "sql";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL force = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "force";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL allow_replication = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "allow_replication";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE before_schema = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "before_schema";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\Vitess\Proto\Tabletmanagerdata\SchemaDefinition';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE after_schema = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "after_schema";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\Vitess\Proto\Tabletmanagerdata\SchemaDefinition';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <sql> has a value
     *
     * @return boolean
     */
    public function hasSql(){
      return $this->_has(1);
    }
    
    /**
     * Clear <sql> value
     *
     * @return \Vitess\Proto\Tabletmanagerdata\ApplySchemaRequest
     */
    public function clearSql(){
      return $this->_clear(1);
    }
    
    /**
     * Get <sql> value
     *
     * @return string
     */
    public function getSql(){
      return $this->_get(1);
    }
    
    /**
     * Set <sql> value
     *
     * @param string $value
     * @return \Vitess\Proto\Tabletmanagerdata\ApplySchemaRequest
     */
    public function setSql( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <force> has a value
     *
     * @return boolean
     */
    public function hasForce(){
      return $this->_has(2);
    }
    
    /**
     * Clear <force> value
     *
     * @return \Vitess\Proto\Tabletmanagerdata\ApplySchemaRequest
     */
    public function clearForce(){
      return $this->_clear(2);
    }
    
    /**
     * Get <force> value
     *
     * @return boolean
     */
    public function getForce(){
      return $this->_get(2);
    }
    
    /**
     * Set <force> value
     *
     * @param boolean $value
     * @return \Vitess\Proto\Tabletmanagerdata\ApplySchemaRequest
     */
    public function setForce( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <allow_replication> has a value
     *
     * @return boolean
     */
    public function hasAllowReplication(){
      return $this->_has(3);
    }
    
    /**
     * Clear <allow_replication> value
     *
     * @return \Vitess\Proto\Tabletmanagerdata\ApplySchemaRequest
     */
    public function clearAllowReplication(){
      return $this->_clear(3);
    }
    
    /**
     * Get <allow_replication> value
     *
     * @return boolean
     */
    public function getAllowReplication(){
      return $this->_get(3);
    }
    
    /**
     * Set <allow_replication> value
     *
     * @param boolean $value
     * @return \Vitess\Proto\Tabletmanagerdata\ApplySchemaRequest
     */
    public function setAllowReplication( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <before_schema> has a value
     *
     * @return boolean
     */
    public function hasBeforeSchema(){
      return $this->_has(4);
    }
    
    /**
     * Clear <before_schema> value
     *
     * @return \Vitess\Proto\Tabletmanagerdata\ApplySchemaRequest
     */
    public function clearBeforeSchema(){
      return $this->_clear(4);
    }
    
    /**
     * Get <before_schema> value
     *
     * @return \Vitess\Proto\Tabletmanagerdata\SchemaDefinition
     */
    public function getBeforeSchema(){
      return $this->_get(4);
    }
    
    /**
     * Set <before_schema> value
     *
     * @param \Vitess\Proto\Tabletmanagerdata\SchemaDefinition $value
     * @return \Vitess\Proto\Tabletmanagerdata\ApplySchemaRequest
     */
    public function setBeforeSchema(\Vitess\Proto\Tabletmanagerdata\SchemaDefinition $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <after_schema> has a value
     *
     * @return boolean
     */
    public function hasAfterSchema(){
      return $this->_has(5);
    }
    
    /**
     * Clear <after_schema> value
     *
     * @return \Vitess\Proto\Tabletmanagerdata\ApplySchemaRequest
     */
    public function clearAfterSchema(){
      return $this->_clear(5);
    }
    
    /**
     * Get <after_schema> value
     *
     * @return \Vitess\Proto\Tabletmanagerdata\SchemaDefinition
     */
    public function getAfterSchema(){
      return $this->_get(5);
    }
    
    /**
     * Set <after_schema> value
     *
     * @param \Vitess\Proto\Tabletmanagerdata\SchemaDefinition $value
     * @return \Vitess\Proto\Tabletmanagerdata\ApplySchemaRequest
     */
    public function setAfterSchema(\Vitess\Proto\Tabletmanagerdata\SchemaDefinition $value){
      return $this->_set(5, $value);
    }
  }
}

