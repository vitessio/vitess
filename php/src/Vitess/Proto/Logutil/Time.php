<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: logutil.proto
//   Date: 2016-01-22 01:34:45

namespace Vitess\Proto\Logutil {

  class Time extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $seconds = null;
    
    /**  @var int */
    public $nanoseconds = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'logutil.Time');

      // OPTIONAL INT64 seconds = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "seconds";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 nanoseconds = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "nanoseconds";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <seconds> has a value
     *
     * @return boolean
     */
    public function hasSeconds(){
      return $this->_has(1);
    }
    
    /**
     * Clear <seconds> value
     *
     * @return \Vitess\Proto\Logutil\Time
     */
    public function clearSeconds(){
      return $this->_clear(1);
    }
    
    /**
     * Get <seconds> value
     *
     * @return int
     */
    public function getSeconds(){
      return $this->_get(1);
    }
    
    /**
     * Set <seconds> value
     *
     * @param int $value
     * @return \Vitess\Proto\Logutil\Time
     */
    public function setSeconds( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <nanoseconds> has a value
     *
     * @return boolean
     */
    public function hasNanoseconds(){
      return $this->_has(2);
    }
    
    /**
     * Clear <nanoseconds> value
     *
     * @return \Vitess\Proto\Logutil\Time
     */
    public function clearNanoseconds(){
      return $this->_clear(2);
    }
    
    /**
     * Get <nanoseconds> value
     *
     * @return int
     */
    public function getNanoseconds(){
      return $this->_get(2);
    }
    
    /**
     * Set <nanoseconds> value
     *
     * @param int $value
     * @return \Vitess\Proto\Logutil\Time
     */
    public function setNanoseconds( $value){
      return $this->_set(2, $value);
    }
  }
}

