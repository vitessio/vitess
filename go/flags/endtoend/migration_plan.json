{
  "groups": {
    "logging": [
      "log_link",
      "log_backtrace_at",
      "log_dir",
      "log_queries"
    ],
    "backup_restore": [
      "allow_first_backup",
      "file_backup_storage_root",
      "initial_backup",
      "restart_before_backup",
      "min_backup_interval"
    ],
    "stats_monitoring": [
      "statsd_address",
      "statsd_sample_rate"
    ],
    "database": [
      "mysql_auth_vault_tokenfile",
      "mysql_ldap_auth_config_file",
      "mysql_only",
      "mysql_auth_vault_addr",
      "mysql_auth_server_static_file",
      "mysql_clientcert_auth_method",
      "mysql_auth_vault_roleid",
      "mysql_auth_vault_role_mountpoint",
      "mysql_auth_vault_timeout",
      "mysql_ldap_auth_method",
      "mysql_auth_static_reload_interval",
      "mysql_auth_vault_role_secretidfile",
      "mysql_auth_vault_path",
      "mysql_timeout",
      "mysql_ldap_auth_config_string",
      "mysqlctl_client_protocol",
      "mysql_auth_server_static_string",
      "mysql_auth_vault_tls_ca",
      "mysql_bind_host",
      "mysql_auth_vault_ttl"
    ],
    "ddl": [
      "enable_online_ddl",
      "vschema_ddl_authorized_users",
      "enable_direct_ddl"
    ],
    "buffer": [
      "enable_buffer"
    ],
    "timeout": [
      "gateway_initial_tablet_timeout",
      "action_timeout"
    ],
    "topo": [
      "cells_to_watch",
      "external_topo_implementation",
      "topocustomrule_path",
      "external_topo_global_root",
      "topocustomrule_cell",
      "external_topo_global_server_address"
    ],
    "grpc": [
      "binlog_player_grpc_crl",
      "binlog_player_grpc_key",
      "binlog_player_grpc_cert",
      "binlog_player_grpc_ca",
      "binlog_player_grpc_server_name"
    ],
    "other": [
      "incremental_from_pos",
      "min_retention_time",
      "default_schema_dir",
      "rdonly_count",
      "filecustomrules_watch",
      "min_retention_count",
      "min_table_shard_size",
      "legacy_replication_lag_algorithm",
      "min_number_serving_vttablets",
      "min_sequence_id",
      "bind_variables",
      "clusters_to_watch",
      "discovery_high_replication_lag_minimum_serving",
      "default_tablet_type",
      "persistent_mode",
      "num_shards",
      "vtgate_protocol",
      "use_random_sequence",
      "replica_count",
      "unix_socket",
      "max_sequence_id",
      "tablet_config",
      "discovery_low_replication_lag",
      "transaction_mode",
      "snapshot_file",
      "rng_seed",
      "null_probability",
      "shutdown_wait_time",
      "extra_my_cnf",
      "max_table_shard_size",
      "data_dir",
      "enable_system_settings"
    ]
  },
  "definitions": {
    "incremental_from_pos": "/Users/rohit/vitess/go/cmd/vtbackup/cli/vtbackup.go:217:\tMain.Flags().StringVar(&incrementalFromPos, \"incremental_from_pos\", incrementalFromPos, \"Position, or name of backup from which to create an incremental backup. Default: empty. If given, then this backup becomes an incremental backup from given position or given backup. If value is 'auto', this backup will be taken from the last successful backup position.\")",
    "min_retention_time": "/Users/rohit/vitess/go/cmd/vtbackup/cli/vtbackup.go:205:\tMain.Flags().DurationVar(&minRetentionTime, \"min_retention_time\", minRetentionTime, \"Keep each old backup for at least this long before removing it. Set to 0 to disable pruning of old backups.\")",
    "cells_to_watch": "/Users/rohit/vitess/go/vt/vtgate/tabletgateway.go:70:\t\tfs.StringVar(&CellsToWatch, \"cells_to_watch\", \"\", \"comma-separated list of cells for watching tablets\")",
    "external_topo_implementation": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:221:\tcmd.Flags().StringVar(&config.ExternalTopoImplementation, \"external_topo_implementation\", \"\", \"the topology implementation to use for vtcombo process\")",
    "default_schema_dir": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:131:\tcmd.Flags().StringVar(&config.DefaultSchemaDir, \"default_schema_dir\", \"\",",
    "rdonly_count": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:197:\tcmd.Flags().IntVar(&topo.rdonly, \"rdonly_count\", 1,",
    "mysql_auth_vault_tokenfile": "/Users/rohit/vitess/go/cmd/vtgate/cli/plugin_auth_vault.go:46:\tMain.Flags().StringVar(&vaultTokenFile, \"mysql_auth_vault_tokenfile\", \"\", \"Path to file containing Vault auth token; token can also be passed using VAULT_TOKEN environment variable\")",
    "binlog_player_grpc_crl": "/Users/rohit/vitess/go/vt/binlog/grpcbinlogplayer/player.go:45:\tfs.StringVar(&crl, \"binlog_player_grpc_crl\", crl, \"the server crl to use to validate server certificates when connecting\")",
    "topocustomrule_path": "/Users/rohit/vitess/go/vt/vttablet/customrule/topocustomrule/topocustomrule.go:47:\tfs.StringVar(&rulePath, \"topocustomrule_path\", rulePath, \"path for customrules file. Disabled if empty.\")",
    "filecustomrules_watch": "/Users/rohit/vitess/go/vt/vttablet/customrule/filecustomrule/filecustomrule.go:45:\tfs.BoolVar(&fileRuleShouldWatch, \"filecustomrules_watch\", fileRuleShouldWatch, \"set up a watch on the target file and reload query rules when it changes\")",
    "mysql_ldap_auth_config_file": "/Users/rohit/vitess/go/cmd/vtgate/cli/plugin_auth_ldap.go:34:\tMain.Flags().StringVar(&ldapAuthConfigFile, \"mysql_ldap_auth_config_file\", \"\", \"JSON File from which to read LDAP server config.\")",
    "enable_online_ddl": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:217:\tcmd.Flags().BoolVar(&config.EnableOnlineDDL, \"enable_online_ddl\", true, \"Allow users to submit, review and control Online DDL\")",
    "external_topo_global_root": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:223:\tcmd.Flags().StringVar(&config.ExternalTopoGlobalRoot, \"external_topo_global_root\", \"\", \"the path of the global topology data in the global topology server for vtcombo process\")",
    "mysql_only": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:139:\tcmd.Flags().BoolVar(&config.OnlyMySQL, \"mysql_only\", false,",
    "min_retention_count": "/Users/rohit/vitess/go/cmd/vtbackup/cli/vtbackup.go:206:\tMain.Flags().IntVar(&minRetentionCount, \"min_retention_count\", minRetentionCount, \"Always keep at least this many of the most recent backups in this backup storage location, even if some are older than the min_retention_time. This must be at least 1 since a backup must always exist to allow new backups to be made\")",
    "mysql_auth_vault_addr": "/Users/rohit/vitess/go/cmd/vtgate/cli/plugin_auth_vault.go:41:\tMain.Flags().StringVar(&vaultAddr, \"mysql_auth_vault_addr\", \"\", \"URL to Vault server\")",
    "mysql_auth_server_static_file": "/Users/rohit/vitess/go/cmd/vtgate/cli/plugin_auth_static.go:35:\tMain.Flags().StringVar(&mysqlAuthServerStaticFile, \"mysql_auth_server_static_file\", \"\", \"JSON File to read the users/passwords from.\")",
    "mysql_clientcert_auth_method": "/Users/rohit/vitess/go/cmd/vtgate/cli/plugin_auth_clientcert.go:29:\tMain.Flags().StringVar(&clientcertAuthMethod, \"mysql_clientcert_auth_method\", string(mysql.MysqlClearPassword), \"client-side authentication method to use. Supported values: mysql_clear_password, dialog.\")",
    "vschema_ddl_authorized_users": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:214:\tcmd.Flags().StringVar(&config.VSchemaDDLAuthorizedUsers, \"vschema_ddl_authorized_users\", \"\", \"Comma separated list of users authorized to execute vschema ddl operations via vtgate\")",
    "mysql_auth_vault_roleid": "/Users/rohit/vitess/go/cmd/vtgate/cli/plugin_auth_vault.go:47:\tMain.Flags().StringVar(&vaultRoleID, \"mysql_auth_vault_roleid\", \"\", \"Vault AppRole id; can also be passed using VAULT_ROLEID environment variable\")",
    "allow_first_backup": "/Users/rohit/vitess/go/cmd/vtbackup/cli/vtbackup.go:208:\tMain.Flags().BoolVar(&allowFirstBackup, \"allow_first_backup\", allowFirstBackup, \"Allow this job to take the first backup of an existing shard.\")",
    "min_table_shard_size": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:166:\tcmd.Flags().IntVar(&seed.MinSize, \"min_table_shard_size\", 1000,",
    "mysql_auth_vault_role_mountpoint": "/Users/rohit/vitess/go/cmd/vtgate/cli/plugin_auth_vault.go:49:\tMain.Flags().StringVar(&vaultRoleMountPoint, \"mysql_auth_vault_role_mountpoint\", \"approle\", \"Vault AppRole mountpoint; can also be passed using VAULT_MOUNTPOINT environment variable\")",
    "topocustomrule_cell": "/Users/rohit/vitess/go/vt/vttablet/customrule/topocustomrule/topocustomrule.go:46:\tfs.StringVar(&ruleCell, \"topocustomrule_cell\", ruleCell, \"topo cell for customrules file.\")",
    "binlog_player_grpc_key": "/Users/rohit/vitess/go/vt/binlog/grpcbinlogplayer/player.go:43:\tfs.StringVar(&key, \"binlog_player_grpc_key\", key, \"the key to use to connect\")",
    "binlog_player_grpc_cert": "/Users/rohit/vitess/go/vt/binlog/grpcbinlogplayer/player.go:42:\tfs.StringVar(&cert, \"binlog_player_grpc_cert\", cert, \"the cert to use to connect\")",
    "mysql_auth_vault_timeout": "/Users/rohit/vitess/go/cmd/vtgate/cli/plugin_auth_vault.go:42:\tMain.Flags().DurationVar(&vaultTimeout, \"mysql_auth_vault_timeout\", 10*time.Second, \"Timeout for vault API operations\")",
    "enable_buffer": "/Users/rohit/vitess/go/vt/vtgate/buffer/flags.go:47:\tfs.BoolVar(&bufferEnabled, \"enable_buffer\", false, \"Enable buffering (stalling) of primary traffic during failovers.\")",
    "mysql_ldap_auth_method": "/Users/rohit/vitess/go/cmd/vtgate/cli/plugin_auth_ldap.go:36:\tMain.Flags().StringVar(&ldapAuthMethod, \"mysql_ldap_auth_method\", string(mysql.MysqlClearPassword), \"client-side authentication method to use. Supported values: mysql_clear_password, dialog.\")",
    "min_sequence_id": "/Users/rohit/vitess/go/cmd/vtclient/cli/vtclient.go:95:\tMain.Flags().IntVar(&minSeqID, \"min_sequence_id\", minSeqID, \"min sequence ID to generate. When max_sequence_id > min_sequence_id, for each query, a number is generated in [min_sequence_id, max_sequence_id) and attached to the end of the bind variables.\")",
    "binlog_player_grpc_ca": "/Users/rohit/vitess/go/vt/binlog/grpcbinlogplayer/player.go:44:\tfs.StringVar(&ca, \"binlog_player_grpc_ca\", ca, \"the server ca to use to validate servers when connecting\")",
    "clusters_to_watch": "/Users/rohit/vitess/go/vt/vtorc/logic/tablet_discovery.go:120:\tfs.StringSliceVar(&clustersToWatch, \"clusters_to_watch\", clustersToWatch, \"Comma-separated list of keyspaces or keyspace/keyranges that this instance will monitor and repair. Defaults to all clusters in the topology. Example: \\\"ks1,ks2/-80\\\"\")",
    "mysql_auth_static_reload_interval": "/Users/rohit/vitess/go/cmd/vtgate/cli/plugin_auth_static.go:37:\tMain.Flags().DurationVar(&mysqlAuthServerStaticReloadInterval, \"mysql_auth_static_reload_interval\", 0, \"Ticker to reload credentials\")",
    "discovery_high_replication_lag_minimum_serving": "/Users/rohit/vitess/go/vt/vtgate/debugenv.go:143:\taddDurationVar(\"discovery_high_replication_lag_minimum_serving\", discovery.GetHighReplicationLagMinServing)",
    "default_tablet_type": "/Users/rohit/vitess/go/vt/vtgate/executor.go:96:\t\tfs.Var((*topoproto.TabletTypeFlag)(&defaultTabletType), \"default_tablet_type\", \"The default tablet type to set for queries, when one is not explicitly selected.\")",
    "mysql_auth_vault_role_secretidfile": "/Users/rohit/vitess/go/cmd/vtgate/cli/plugin_auth_vault.go:48:\tMain.Flags().StringVar(&vaultRoleSecretIDFile, \"mysql_auth_vault_role_secretidfile\", \"\", \"Path to file containing Vault AppRole secret_id; can also be passed using VAULT_SECRETID environment variable\")",
    "persistent_mode": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:145:\tcmd.Flags().BoolVar(&config.PersistentMode, \"persistent_mode\", false,",
    "mysql_auth_vault_path": "/Users/rohit/vitess/go/cmd/vtgate/cli/plugin_auth_vault.go:44:\tMain.Flags().StringVar(&vaultPath, \"mysql_auth_vault_path\", \"\", \"Vault path to vtgate credentials JSON blob, e.g.: secret/data/prod/vtgatecreds\")",
    "mysql_timeout": "/Users/rohit/vitess/go/cmd/vtbackup/cli/vtbackup.go:222:\tMain.Flags().DurationVar(&mysqlTimeout, \"mysql_timeout\", mysqlTimeout, \"how long to wait for mysqld startup\")",
    "num_shards": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:193:\tcmd.Flags().StringSliceVar(&topo.shards, \"num_shards\", []string{\"2\"},",
    "vtgate_protocol": "/Users/rohit/vitess/go/vt/vtgate/vtgateconn/vtgateconn.go:40:\tfs.StringVar(&vtgateProtocol, \"vtgate_protocol\", vtgateProtocol, \"how to talk to vtgate\")",
    "file_backup_storage_root": "/Users/rohit/vitess/go/vt/mysqlctl/filebackupstorage/file.go:48:\tfs.StringVar(&FileBackupStorageRoot, \"file_backup_storage_root\", \"\", \"Root directory for the file backup storage.\")",
    "use_random_sequence": "/Users/rohit/vitess/go/cmd/vtclient/cli/vtclient.go:97:\tMain.Flags().BoolVar(&useRandom, \"use_random_sequence\", useRandom, \"use random sequence for generating [min_sequence_id, max_sequence_id)\")",
    "replica_count": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:195:\tcmd.Flags().IntVar(&topo.replicas, \"replica_count\", 2,",
    "unix_socket": "/Users/rohit/vitess/go/cmd/vtbench/cli/vtbench.go:142:\tMain.Flags().StringVar(&unixSocket, \"unix_socket\", unixSocket, \"VTGate unix socket\")",
    "initial_backup": "/Users/rohit/vitess/go/cmd/vtbackup/cli/vtbackup.go:207:\tMain.Flags().BoolVar(&initialBackup, \"initial_backup\", initialBackup, \"Instead of restoring from backup, initialize an empty database with the provided init-db-sql-file and upload a backup of that for the shard, if the shard has no backups yet. This can be used to seed a brand new shard with an initial, empty backup. If any backups already exist for the shard, this will be considered a successful no-op. This can only be done before the shard exists in topology (i.e. before any tablets are deployed).\")",
    "mysql_ldap_auth_config_string": "/Users/rohit/vitess/go/cmd/vtgate/cli/plugin_auth_ldap.go:35:\tMain.Flags().StringVar(&ldapAuthConfigString, \"mysql_ldap_auth_config_string\", \"\", \"JSON representation of LDAP server config.\")",
    "max_sequence_id": "/Users/rohit/vitess/go/cmd/vtclient/cli/vtclient.go:96:\tMain.Flags().IntVar(&maxSeqID, \"max_sequence_id\", maxSeqID, \"max sequence ID.\")",
    "gateway_initial_tablet_timeout": "/Users/rohit/vitess/go/vt/vtgate/tabletgateway.go:71:\t\tfs.DurationVar(&initialTabletTimeout, \"gateway_initial_tablet_timeout\", 30*time.Second, \"At startup, the tabletGateway will wait up to this duration to get at least one tablet per keyspace/shard/tablet type\")",
    "tablet_config": "/Users/rohit/vitess/go/cmd/vttablet/cli/cli.go:277:\tMain.Flags().StringVar(&tabletConfig, \"tablet_config\", tabletConfig, \"YAML file config for tablet\")",
    "mysqlctl_client_protocol": "/Users/rohit/vitess/go/vt/mysqlctl/mysqlctlclient/interface.go:39:\tfs.StringVar(&protocol, \"mysqlctl_client_protocol\", protocol, \"the protocol to use to talk to the mysqlctl server\")",
    "statsd_address": "/Users/rohit/vitess/go/stats/statsd/statsd.go:25:\tfs.StringVar(&statsdAddress, \"statsd_address\", statsdAddress, \"Address for statsd client\")",
    "enable_direct_ddl": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:218:\tcmd.Flags().BoolVar(&config.EnableDirectDDL, \"enable_direct_ddl\", true, \"Allow users to submit direct DDL statements\")",
    "external_topo_global_server_address": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:222:\tcmd.Flags().StringVar(&config.ExternalTopoGlobalServerAddress, \"external_topo_global_server_address\", \"\", \"the address of the global topology server for vtcombo process\")",
    "action_timeout": "/Users/rohit/vitess/go/vt/vtctld/action_repository.go:63:\tfs.DurationVar(&actionTimeout, \"action_timeout\", actionTimeout, \"time to wait for an action before resorting to force\")",
    "discovery_low_replication_lag": "/Users/rohit/vitess/go/vt/vtgate/debugenv.go:142:\taddDurationVar(\"discovery_low_replication_lag\", discovery.GetLowReplicationLag)",
    "mysql_auth_server_static_string": "/Users/rohit/vitess/go/cmd/vtgate/cli/plugin_auth_static.go:36:\tMain.Flags().StringVar(&mysqlAuthServerStaticString, \"mysql_auth_server_static_string\", \"\", \"JSON representation of the users/passwords config.\")",
    "transaction_mode": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:209:\tcmd.Flags().StringVar(&config.TransactionMode, \"transaction_mode\", \"MULTI\", \"Transaction mode MULTI (default), SINGLE or TWOPC \")",
    "snapshot_file": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:204:\tcmd.Flags().StringVar(&config.SnapshotFile, \"snapshot_file\", \"\",",
    "mysql_auth_vault_tls_ca": "/Users/rohit/vitess/go/cmd/vtgate/cli/plugin_auth_vault.go:43:\tMain.Flags().StringVar(&vaultCACert, \"mysql_auth_vault_tls_ca\", \"\", \"Path to CA PEM for validating Vault server certificate\")",
    "rng_seed": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:160:\tcmd.Flags().IntVar(&seed.RngSeed, \"rng_seed\", 123,",
    "restart_before_backup": "/Users/rohit/vitess/go/cmd/vtbackup/cli/vtbackup.go:209:\tMain.Flags().BoolVar(&restartBeforeBackup, \"restart_before_backup\", restartBeforeBackup, \"Perform a mysqld clean/full restart after applying binlogs, but before taking the backup. Only makes sense to work around xtrabackup bugs.\")",
    "statsd_sample_rate": "/Users/rohit/vitess/go/stats/statsd/statsd.go:26:\tfs.Float64Var(&statsdSampleRate, \"statsd_sample_rate\", statsdSampleRate, \"Sample rate for statsd metrics\")",
    "null_probability": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:176:\tcmd.Flags().Float64Var(&seed.NullProbability, \"null_probability\", 0.1,",
    "shutdown_wait_time": "/Users/rohit/vitess/go/vt/vtorc/logic/tablet_discovery.go:121:\tfs.DurationVar(&shutdownWaitTime, \"shutdown_wait_time\", shutdownWaitTime, \"Maximum time to wait for VTOrc to release all the locks that it is holding before shutting down on SIGTERM\")",
    "extra_my_cnf": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:187:\tcmd.Flags().StringVar(&mycnf, \"extra_my_cnf\", \"\",",
    "max_table_shard_size": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:171:\tcmd.Flags().IntVar(&seed.MaxSize, \"max_table_shard_size\", 10000,",
    "binlog_player_grpc_server_name": "/Users/rohit/vitess/go/vt/binlog/grpcbinlogplayer/player.go:46:\tfs.StringVar(&name, \"binlog_player_grpc_server_name\", name, \"the server name to use to validate server certificate\")",
    "mysql_bind_host": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:181:\tcmd.Flags().StringVar(&config.MySQLBindHost, \"mysql_bind_host\", \"localhost\",",
    "min_backup_interval": "/Users/rohit/vitess/go/cmd/vtbackup/cli/vtbackup.go:204:\tMain.Flags().DurationVar(&minBackupInterval, \"min_backup_interval\", minBackupInterval, \"Only take a new backup if it's been at least this long since the most recent backup.\")",
    "mysql_auth_vault_ttl": "/Users/rohit/vitess/go/cmd/vtgate/cli/plugin_auth_vault.go:45:\tMain.Flags().DurationVar(&vaultCacheTTL, \"mysql_auth_vault_ttl\", 30*time.Minute, \"How long to cache vtgate credentials from the Vault server\")",
    "data_dir": "/Users/rohit/vitess/go/cmd/vttestserver/cli/main.go:135:\tcmd.Flags().StringVar(&config.DataDir, \"data_dir\", \"\",",
    "enable_system_settings": "/Users/rohit/vitess/go/vt/vtgate/vtgate.go:190:\tfs.BoolVar(&sysVarSetEnabled, \"enable_system_settings\", sysVarSetEnabled, \"This will enable the system settings to be changed per session at the database connection level\")"
  },
  "priority_order": [
    "logging",
    "timeout",
    "backup_restore",
    "database",
    "ddl",
    "buffer",
    "stats_monitoring",
    "topo",
    "grpc",
    "test",
    "other"
  ],
  "total_flags": 80
}
