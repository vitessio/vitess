// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTrees(yylex yyLexer, stmts []Statement) {
	if len(stmts) > 1 && stmts[len(stmts)-1] == nil {
		stmts = stmts[:len(stmts)-1]
	}
	yylex.(*Tokenizer).ParseTrees = stmts
}

func resetTokenizer(yylex yyLexer) {
	yylex.(*Tokenizer).reset()
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MULTIPLE_TEXT_LITERAL = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const ANY_SOME = 57349
const SELECT_OPTIONS = 57350
const EMPTY_PARTITION_DEFINITIONS = 57351
const EMPTY_IGNORE_OR_REPLACE = 57352
const LEX_ERROR = 57353
const UNION = 57354
const SELECT = 57355
const STREAM = 57356
const VSTREAM = 57357
const INSERT = 57358
const UPDATE = 57359
const DELETE = 57360
const FROM = 57361
const WHERE = 57362
const GROUP = 57363
const HAVING = 57364
const ORDER = 57365
const BY = 57366
const LIMIT = 57367
const OFFSET = 57368
const FOR = 57369
const DISTINCT = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const INTO = 57375
const DUPLICATE = 57376
const DEFAULT = 57377
const SET = 57378
const LOCK = 57379
const UNLOCK = 57380
const KEYS = 57381
const DO = 57382
const CALL = 57383
const ALL = 57384
const ANY = 57385
const SOME = 57386
const DISTINCTROW = 57387
const PARSER = 57388
const GENERATED = 57389
const ALWAYS = 57390
const OUTFILE = 57391
const S3 = 57392
const DATA = 57393
const LOAD = 57394
const LINES = 57395
const TERMINATED = 57396
const ESCAPED = 57397
const ENCLOSED = 57398
const DUMPFILE = 57399
const CSV = 57400
const HEADER = 57401
const MANIFEST = 57402
const OVERWRITE = 57403
const STARTING = 57404
const OPTIONALLY = 57405
const VALUES = 57406
const LAST_INSERT_ID = 57407
const NEXT = 57408
const VALUE = 57409
const SHARE = 57410
const MODE = 57411
const SQL_NO_CACHE = 57412
const SQL_CACHE = 57413
const SQL_CALC_FOUND_ROWS = 57414
const SQL_SMALL_RESULT = 57415
const SQL_BIG_RESULT = 57416
const HIGH_PRIORITY = 57417
const JOIN = 57418
const STRAIGHT_JOIN = 57419
const LEFT = 57420
const RIGHT = 57421
const INNER = 57422
const OUTER = 57423
const CROSS = 57424
const NATURAL = 57425
const USE = 57426
const FORCE = 57427
const ON = 57428
const USING = 57429
const INPLACE = 57430
const COPY = 57431
const INSTANT = 57432
const ALGORITHM = 57433
const NONE = 57434
const SHARED = 57435
const EXCLUSIVE = 57436
const SUBQUERY_AS_EXPR = 57437
const STRING = 57438
const SQL_BUFFER_RESULT = 57439
const ID = 57440
const AT_ID = 57441
const AT_AT_ID = 57442
const HEX = 57443
const NCHAR_STRING = 57444
const INTEGRAL = 57445
const FLOAT = 57446
const DECIMAL = 57447
const HEXNUM = 57448
const COMMENT = 57449
const COMMENT_KEYWORD = 57450
const BITNUM = 57451
const BIT_LITERAL = 57452
const COMPRESSION = 57453
const VALUE_ARG = 57454
const LIST_ARG = 57455
const OFFSET_ARG = 57456
const JSON_PRETTY = 57457
const JSON_STORAGE_SIZE = 57458
const JSON_STORAGE_FREE = 57459
const JSON_CONTAINS = 57460
const JSON_CONTAINS_PATH = 57461
const JSON_EXTRACT = 57462
const JSON_KEYS = 57463
const JSON_OVERLAPS = 57464
const JSON_SEARCH = 57465
const JSON_VALUE = 57466
const JSON_ARRAYAGG = 57467
const JSON_OBJECTAGG = 57468
const EXTRACT = 57469
const NULL = 57470
const UNKNOWN = 57471
const TRUE = 57472
const FALSE = 57473
const OFF = 57474
const DISCARD = 57475
const IMPORT = 57476
const ENABLE = 57477
const DISABLE = 57478
const TABLESPACE = 57479
const VIRTUAL = 57480
const STORED = 57481
const BOTH = 57482
const LEADING = 57483
const TRAILING = 57484
const KILL = 57485
const TRACE = 57486
const EMPTY_FROM_CLAUSE = 57487
const LOWER_THAN_CHARSET = 57488
const CHARSET = 57489
const UNIQUE = 57490
const KEY = 57491
const EXPRESSION_PREC_SETTER = 57492
const OR = 57493
const XOR = 57494
const AND = 57495
const NOT = 57496
const BETWEEN = 57497
const CASE = 57498
const WHEN = 57499
const THEN = 57500
const ELSE = 57501
const ELSEIF = 57502
const END = 57503
const LE = 57504
const GE = 57505
const NE = 57506
const NULL_SAFE_EQUAL = 57507
const IS = 57508
const LIKE = 57509
const REGEXP = 57510
const RLIKE = 57511
const IN = 57512
const ASSIGNMENT_OPT = 57513
const MEMBER = 57514
const SHIFT_LEFT = 57515
const SHIFT_RIGHT = 57516
const DIV = 57517
const MOD = 57518
const UNARY = 57519
const COLLATE = 57520
const BINARY = 57521
const UNDERSCORE_ARMSCII8 = 57522
const UNDERSCORE_ASCII = 57523
const UNDERSCORE_BIG5 = 57524
const UNDERSCORE_BINARY = 57525
const UNDERSCORE_CP1250 = 57526
const UNDERSCORE_CP1251 = 57527
const UNDERSCORE_CP1256 = 57528
const UNDERSCORE_CP1257 = 57529
const UNDERSCORE_CP850 = 57530
const UNDERSCORE_CP852 = 57531
const UNDERSCORE_CP866 = 57532
const UNDERSCORE_CP932 = 57533
const UNDERSCORE_DEC8 = 57534
const UNDERSCORE_EUCJPMS = 57535
const UNDERSCORE_EUCKR = 57536
const UNDERSCORE_GB18030 = 57537
const UNDERSCORE_GB2312 = 57538
const UNDERSCORE_GBK = 57539
const UNDERSCORE_GEOSTD8 = 57540
const UNDERSCORE_GREEK = 57541
const UNDERSCORE_HEBREW = 57542
const UNDERSCORE_HP8 = 57543
const UNDERSCORE_KEYBCS2 = 57544
const UNDERSCORE_KOI8R = 57545
const UNDERSCORE_KOI8U = 57546
const UNDERSCORE_LATIN1 = 57547
const UNDERSCORE_LATIN2 = 57548
const UNDERSCORE_LATIN5 = 57549
const UNDERSCORE_LATIN7 = 57550
const UNDERSCORE_MACCE = 57551
const UNDERSCORE_MACROMAN = 57552
const UNDERSCORE_SJIS = 57553
const UNDERSCORE_SWE7 = 57554
const UNDERSCORE_TIS620 = 57555
const UNDERSCORE_UCS2 = 57556
const UNDERSCORE_UJIS = 57557
const UNDERSCORE_UTF16 = 57558
const UNDERSCORE_UTF16LE = 57559
const UNDERSCORE_UTF32 = 57560
const UNDERSCORE_UTF8 = 57561
const UNDERSCORE_UTF8MB4 = 57562
const UNDERSCORE_UTF8MB3 = 57563
const INTERVAL = 57564
const WINDOW_EXPR = 57565
const JSON_EXTRACT_OP = 57566
const JSON_UNQUOTE_EXTRACT_OP = 57567
const CREATE = 57568
const ALTER = 57569
const DROP = 57570
const RENAME = 57571
const ANALYZE = 57572
const ADD = 57573
const FLUSH = 57574
const CHANGE = 57575
const MODIFY = 57576
const DEALLOCATE = 57577
const REVERT = 57578
const QUERIES = 57579
const DECLARE = 57580
const FOUND = 57581
const HANDLER = 57582
const CONTINUE = 57583
const EXIT = 57584
const UNDO = 57585
const SQLEXCEPTION = 57586
const SQLSTATE = 57587
const SQLWARNING = 57588
const CONDITION = 57589
const SCHEMA = 57590
const TABLE = 57591
const INDEX = 57592
const VIEW = 57593
const TO = 57594
const IGNORE = 57595
const IF = 57596
const PRIMARY = 57597
const COLUMN = 57598
const SPATIAL = 57599
const FULLTEXT = 57600
const KEY_BLOCK_SIZE = 57601
const CHECK = 57602
const INDEXES = 57603
const ACTION = 57604
const CASCADE = 57605
const CONSTRAINT = 57606
const FOREIGN = 57607
const NO = 57608
const REFERENCES = 57609
const RESTRICT = 57610
const SIGNAL = 57611
const SHOW = 57612
const DESCRIBE = 57613
const EXPLAIN = 57614
const DATE = 57615
const ESCAPE = 57616
const REPAIR = 57617
const OPTIMIZE = 57618
const TRUNCATE = 57619
const COALESCE = 57620
const EXCHANGE = 57621
const REBUILD = 57622
const PARTITIONING = 57623
const REMOVE = 57624
const PREPARE = 57625
const EXECUTE = 57626
const MAXVALUE = 57627
const PARTITION = 57628
const REORGANIZE = 57629
const LESS = 57630
const THAN = 57631
const PROCEDURE = 57632
const TRIGGER = 57633
const VINDEX = 57634
const VINDEXES = 57635
const DIRECTORY = 57636
const NAME = 57637
const UPGRADE = 57638
const STATUS = 57639
const VARIABLES = 57640
const WARNINGS = 57641
const CASCADED = 57642
const DEFINER = 57643
const OPTION = 57644
const SQL = 57645
const UNDEFINED = 57646
const SEQUENCE = 57647
const MERGE = 57648
const TEMPORARY = 57649
const TEMPTABLE = 57650
const INVOKER = 57651
const SECURITY = 57652
const FIRST = 57653
const AFTER = 57654
const LAST = 57655
const VITESS_MIGRATION = 57656
const CANCEL = 57657
const RETRY = 57658
const LAUNCH = 57659
const COMPLETE = 57660
const CLEANUP = 57661
const THROTTLE = 57662
const UNTHROTTLE = 57663
const FORCE_CUTOVER = 57664
const CUTOVER_THRESHOLD = 57665
const EXPIRE = 57666
const RATIO = 57667
const POSTPONE = 57668
const VITESS_THROTTLER = 57669
const BEGIN = 57670
const START = 57671
const TRANSACTION = 57672
const COMMIT = 57673
const ROLLBACK = 57674
const SAVEPOINT = 57675
const RELEASE = 57676
const WORK = 57677
const CONSISTENT = 57678
const SNAPSHOT = 57679
const UNRESOLVED = 57680
const TRANSACTIONS = 57681
const BIT = 57682
const TINYINT = 57683
const SMALLINT = 57684
const MEDIUMINT = 57685
const INT = 57686
const INTEGER = 57687
const BIGINT = 57688
const INTNUM = 57689
const REAL = 57690
const DOUBLE = 57691
const FLOAT_TYPE = 57692
const FLOAT4_TYPE = 57693
const FLOAT8_TYPE = 57694
const DECIMAL_TYPE = 57695
const NUMERIC = 57696
const TIME = 57697
const TIMESTAMP = 57698
const DATETIME = 57699
const YEAR = 57700
const CHAR = 57701
const VARCHAR = 57702
const BOOL = 57703
const CHARACTER = 57704
const VARBINARY = 57705
const NCHAR = 57706
const TEXT = 57707
const TINYTEXT = 57708
const MEDIUMTEXT = 57709
const LONGTEXT = 57710
const BLOB = 57711
const TINYBLOB = 57712
const MEDIUMBLOB = 57713
const LONGBLOB = 57714
const JSON = 57715
const JSON_SCHEMA_VALID = 57716
const JSON_SCHEMA_VALIDATION_REPORT = 57717
const ENUM = 57718
const GEOMETRY = 57719
const POINT = 57720
const LINESTRING = 57721
const POLYGON = 57722
const GEOMCOLLECTION = 57723
const GEOMETRYCOLLECTION = 57724
const MULTIPOINT = 57725
const MULTILINESTRING = 57726
const MULTIPOLYGON = 57727
const ASCII = 57728
const UNICODE = 57729
const VECTOR = 57730
const NULLX = 57731
const AUTO_INCREMENT = 57732
const APPROXNUM = 57733
const SIGNED = 57734
const UNSIGNED = 57735
const ZEROFILL = 57736
const PURGE = 57737
const BEFORE = 57738
const CODE = 57739
const COLLATION = 57740
const COLUMNS = 57741
const DATABASES = 57742
const ENGINES = 57743
const EVENT = 57744
const EXTENDED = 57745
const FIELDS = 57746
const FULL = 57747
const FUNCTION = 57748
const GTID_EXECUTED = 57749
const KEYSPACES = 57750
const OPEN = 57751
const PLUGINS = 57752
const PRIVILEGES = 57753
const PROCESSLIST = 57754
const SCHEMAS = 57755
const TABLES = 57756
const TRIGGERS = 57757
const USER = 57758
const VGTID_EXECUTED = 57759
const VITESS_KEYSPACES = 57760
const VITESS_METADATA = 57761
const VITESS_MIGRATIONS = 57762
const VITESS_REPLICATION_STATUS = 57763
const VITESS_SHARDS = 57764
const VITESS_TABLETS = 57765
const VITESS_TARGET = 57766
const VSCHEMA = 57767
const VITESS_THROTTLED_APPS = 57768
const NAMES = 57769
const GLOBAL = 57770
const SESSION = 57771
const ISOLATION = 57772
const LEVEL = 57773
const READ = 57774
const WRITE = 57775
const ONLY = 57776
const REPEATABLE = 57777
const COMMITTED = 57778
const UNCOMMITTED = 57779
const SERIALIZABLE = 57780
const CLASS_ORIGIN = 57781
const SUBCLASS_ORIGIN = 57782
const MESSAGE_TEXT = 57783
const MYSQL_ERRNO = 57784
const CONSTRAINT_CATALOG = 57785
const CONSTRAINT_SCHEMA = 57786
const CONSTRAINT_NAME = 57787
const CATALOG_NAME = 57788
const SCHEMA_NAME = 57789
const TABLE_NAME = 57790
const COLUMN_NAME = 57791
const CURSOR_NAME = 57792
const ADDDATE = 57793
const CURRENT_TIMESTAMP = 57794
const DATABASE = 57795
const CURRENT_DATE = 57796
const CURDATE = 57797
const DATE_ADD = 57798
const DATE_SUB = 57799
const NOW = 57800
const SUBDATE = 57801
const CURTIME = 57802
const CURRENT_TIME = 57803
const LOCALTIME = 57804
const LOCALTIMESTAMP = 57805
const CURRENT_USER = 57806
const UTC_DATE = 57807
const UTC_TIME = 57808
const UTC_TIMESTAMP = 57809
const SYSDATE = 57810
const DAY = 57811
const DAY_HOUR = 57812
const DAY_MICROSECOND = 57813
const DAY_MINUTE = 57814
const DAY_SECOND = 57815
const HOUR = 57816
const HOUR_MICROSECOND = 57817
const HOUR_MINUTE = 57818
const HOUR_SECOND = 57819
const MICROSECOND = 57820
const MINUTE = 57821
const MINUTE_MICROSECOND = 57822
const MINUTE_SECOND = 57823
const MONTH = 57824
const QUARTER = 57825
const SECOND = 57826
const SECOND_MICROSECOND = 57827
const YEAR_MONTH = 57828
const WEEK = 57829
const SQL_TSI_DAY = 57830
const SQL_TSI_WEEK = 57831
const SQL_TSI_HOUR = 57832
const SQL_TSI_MINUTE = 57833
const SQL_TSI_MONTH = 57834
const SQL_TSI_QUARTER = 57835
const SQL_TSI_SECOND = 57836
const SQL_TSI_MICROSECOND = 57837
const SQL_TSI_YEAR = 57838
const REPLACE = 57839
const CONVERT = 57840
const CAST = 57841
const SUBSTR = 57842
const SUBSTRING = 57843
const MID = 57844
const SEPARATOR = 57845
const TIMESTAMPADD = 57846
const TIMESTAMPDIFF = 57847
const WEIGHT_STRING = 57848
const LTRIM = 57849
const RTRIM = 57850
const TRIM = 57851
const JSON_ARRAY = 57852
const JSON_OBJECT = 57853
const JSON_QUOTE = 57854
const JSON_DEPTH = 57855
const JSON_TYPE = 57856
const JSON_LENGTH = 57857
const JSON_VALID = 57858
const JSON_ARRAY_APPEND = 57859
const JSON_ARRAY_INSERT = 57860
const JSON_INSERT = 57861
const JSON_MERGE = 57862
const JSON_MERGE_PATCH = 57863
const JSON_MERGE_PRESERVE = 57864
const JSON_REMOVE = 57865
const JSON_REPLACE = 57866
const JSON_SET = 57867
const JSON_UNQUOTE = 57868
const COUNT = 57869
const AVG = 57870
const MAX = 57871
const MIN = 57872
const SUM = 57873
const GROUP_CONCAT = 57874
const BIT_AND = 57875
const BIT_OR = 57876
const BIT_XOR = 57877
const STD = 57878
const STDDEV = 57879
const STDDEV_POP = 57880
const STDDEV_SAMP = 57881
const VAR_POP = 57882
const VAR_SAMP = 57883
const VARIANCE = 57884
const ANY_VALUE = 57885
const REGEXP_INSTR = 57886
const REGEXP_LIKE = 57887
const REGEXP_REPLACE = 57888
const REGEXP_SUBSTR = 57889
const ExtractValue = 57890
const UpdateXML = 57891
const GET_LOCK = 57892
const RELEASE_LOCK = 57893
const RELEASE_ALL_LOCKS = 57894
const IS_FREE_LOCK = 57895
const IS_USED_LOCK = 57896
const LOCATE = 57897
const POSITION = 57898
const ST_GeometryCollectionFromText = 57899
const ST_GeometryFromText = 57900
const ST_LineStringFromText = 57901
const ST_MultiLineStringFromText = 57902
const ST_MultiPointFromText = 57903
const ST_MultiPolygonFromText = 57904
const ST_PointFromText = 57905
const ST_PolygonFromText = 57906
const ST_GeometryCollectionFromWKB = 57907
const ST_GeometryFromWKB = 57908
const ST_LineStringFromWKB = 57909
const ST_MultiLineStringFromWKB = 57910
const ST_MultiPointFromWKB = 57911
const ST_MultiPolygonFromWKB = 57912
const ST_PointFromWKB = 57913
const ST_PolygonFromWKB = 57914
const ST_AsBinary = 57915
const ST_AsText = 57916
const ST_Dimension = 57917
const ST_Envelope = 57918
const ST_IsSimple = 57919
const ST_IsEmpty = 57920
const ST_GeometryType = 57921
const ST_X = 57922
const ST_Y = 57923
const ST_Latitude = 57924
const ST_Longitude = 57925
const ST_EndPoint = 57926
const ST_IsClosed = 57927
const ST_Length = 57928
const ST_NumPoints = 57929
const ST_StartPoint = 57930
const ST_PointN = 57931
const ST_Area = 57932
const ST_Centroid = 57933
const ST_ExteriorRing = 57934
const ST_InteriorRingN = 57935
const ST_NumInteriorRings = 57936
const ST_NumGeometries = 57937
const ST_GeometryN = 57938
const ST_LongFromGeoHash = 57939
const ST_PointFromGeoHash = 57940
const ST_LatFromGeoHash = 57941
const ST_GeoHash = 57942
const ST_AsGeoJSON = 57943
const ST_GeomFromGeoJSON = 57944
const MATCH = 57945
const AGAINST = 57946
const BOOLEAN = 57947
const LANGUAGE = 57948
const WITH = 57949
const QUERY = 57950
const EXPANSION = 57951
const WITHOUT = 57952
const VALIDATION = 57953
const ROLLUP = 57954
const UNUSED = 57955
const ARRAY = 57956
const BYTE = 57957
const CUME_DIST = 57958
const DESCRIPTION = 57959
const DENSE_RANK = 57960
const EMPTY = 57961
const EXCEPT = 57962
const FIRST_VALUE = 57963
const GROUPING = 57964
const GROUPS = 57965
const JSON_TABLE = 57966
const LAG = 57967
const LAST_VALUE = 57968
const LATERAL = 57969
const LEAD = 57970
const NTH_VALUE = 57971
const NTILE = 57972
const OF = 57973
const OVER = 57974
const PERCENT_RANK = 57975
const RANK = 57976
const RECURSIVE = 57977
const ROW_NUMBER = 57978
const SYSTEM = 57979
const WINDOW = 57980
const ACTIVE = 57981
const ADMIN = 57982
const AUTOEXTEND_SIZE = 57983
const BUCKETS = 57984
const CLONE = 57985
const COLUMN_FORMAT = 57986
const COMPONENT = 57987
const DEFINITION = 57988
const ENFORCED = 57989
const ENGINE_ATTRIBUTE = 57990
const EXCLUDE = 57991
const FOLLOWING = 57992
const GET_MASTER_PUBLIC_KEY = 57993
const GET_SOURCE_PUBLIC_KEY = 57994
const HISTOGRAM = 57995
const HISTORY = 57996
const INACTIVE = 57997
const INVISIBLE = 57998
const LOCKED = 57999
const MASTER_COMPRESSION_ALGORITHMS = 58000
const MASTER_PUBLIC_KEY_PATH = 58001
const MASTER_TLS_CIPHERSUITES = 58002
const MASTER_ZSTD_COMPRESSION_LEVEL = 58003
const NESTED = 58004
const NETWORK_NAMESPACE = 58005
const NOWAIT = 58006
const NULLS = 58007
const OJ = 58008
const OLD = 58009
const OPTIONAL = 58010
const ORDINALITY = 58011
const ORGANIZATION = 58012
const OTHERS = 58013
const PARTIAL = 58014
const PATH = 58015
const PERSIST = 58016
const PERSIST_ONLY = 58017
const PRECEDING = 58018
const PRIVILEGE_CHECKS_USER = 58019
const PROCESS = 58020
const RANDOM = 58021
const REFERENCE = 58022
const REQUIRE_ROW_FORMAT = 58023
const RESOURCE = 58024
const RESPECT = 58025
const RESTART = 58026
const RETAIN = 58027
const REUSE = 58028
const ROLE = 58029
const SECONDARY = 58030
const SECONDARY_ENGINE = 58031
const SECONDARY_ENGINE_ATTRIBUTE = 58032
const SECONDARY_LOAD = 58033
const SECONDARY_UNLOAD = 58034
const SIMPLE = 58035
const SKIP = 58036
const SOURCE_COMPRESSION_ALGORITHMS = 58037
const SOURCE_PUBLIC_KEY_PATH = 58038
const SOURCE_TLS_CIPHERSUITES = 58039
const SOURCE_ZSTD_COMPRESSION_LEVEL = 58040
const SRID = 58041
const THREAD_PRIORITY = 58042
const TIES = 58043
const UNBOUNDED = 58044
const VCPU = 58045
const VISIBLE = 58046
const RETURNING = 58047
const MANUAL = 58048
const PARALLEL = 58049
const QUALIFY = 58050
const TABLESAMPLE = 58051
const OUT = 58052
const INOUT = 58053
const FORMAT_BYTES = 58054
const FORMAT_PICO_TIME = 58055
const PS_CURRENT_THREAD_ID = 58056
const PS_THREAD_ID = 58057
const GTID_SUBSET = 58058
const GTID_SUBTRACT = 58059
const WAIT_FOR_EXECUTED_GTID_SET = 58060
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58061
const FORMAT = 58062
const TREE = 58063
const VITESS = 58064
const TRADITIONAL = 58065
const VTEXPLAIN = 58066
const VEXPLAIN = 58067
const PLAN = 58068
const LOCAL = 58069
const LOW_PRIORITY = 58070
const NO_WRITE_TO_BINLOG = 58071
const LOGS = 58072
const ERROR = 58073
const GENERAL = 58074
const HOSTS = 58075
const OPTIMIZER_COSTS = 58076
const USER_RESOURCES = 58077
const SLOW = 58078
const CHANNEL = 58079
const RELAY = 58080
const EXPORT = 58081
const CURRENT = 58082
const ROW = 58083
const ROWS = 58084
const AVG_ROW_LENGTH = 58085
const CONNECTION = 58086
const CHECKSUM = 58087
const DELAY_KEY_WRITE = 58088
const ENCRYPTION = 58089
const ENGINE = 58090
const INSERT_METHOD = 58091
const MAX_ROWS = 58092
const MIN_ROWS = 58093
const PACK_KEYS = 58094
const PASSWORD = 58095
const FIXED = 58096
const DYNAMIC = 58097
const COMPRESSED = 58098
const REDUNDANT = 58099
const COMPACT = 58100
const ROW_FORMAT = 58101
const STATS_AUTO_RECALC = 58102
const STATS_PERSISTENT = 58103
const STATS_SAMPLE_PAGES = 58104
const STORAGE = 58105
const MEMORY = 58106
const DISK = 58107
const PARTITIONS = 58108
const LINEAR = 58109
const RANGE = 58110
const LIST = 58111
const SUBPARTITION = 58112
const SUBPARTITIONS = 58113
const HASH = 58114

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"EMPTY_PARTITION_DEFINITIONS",
	"EMPTY_IGNORE_OR_REPLACE",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"TRACE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"MEMBER",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"DECLARE",
	"FOUND",
	"HANDLER",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"SQLEXCEPTION",
	"SQLSTATE",
	"SQLWARNING",
	"CONDITION",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SIGNAL",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"CUTOVER_THRESHOLD",
	"EXPIRE",
	"RATIO",
	"POSTPONE",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"GET_SOURCE_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SOURCE_COMPRESSION_ALGORITHMS",
	"SOURCE_PUBLIC_KEY_PATH",
	"SOURCE_TLS_CIPHERSUITES",
	"SOURCE_ZSTD_COMPRESSION_LEVEL",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"MANUAL",
	"PARALLEL",
	"QUALIFY",
	"TABLESAMPLE",
	"OUT",
	"INOUT",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 4,
	17, 110,
	18, 110,
	-2, 6,
	-1, 57,
	1, 227,
	790, 227,
	-2, 235,
	-1, 58,
	150, 235,
	194, 235,
	379, 235,
	-2, 595,
	-1, 66,
	39, 860,
	267, 860,
	278, 860,
	314, 874,
	315, 874,
	-2, 862,
	-1, 71,
	269, 898,
	-2, 896,
	-1, 124,
	1, 190,
	790, 190,
	-2, 1729,
	-1, 135,
	1, 228,
	790, 228,
	-2, 235,
	-1, 146,
	151, 480,
	272, 480,
	-2, 584,
	-1, 165,
	150, 235,
	194, 235,
	379, 235,
	-2, 604,
	-1, 784,
	179, 102,
	-2, 104,
	-1, 993,
	96, 1741,
	-2, 1558,
	-1, 994,
	96, 1742,
	239, 1746,
	-2, 1559,
	-1, 995,
	239, 1745,
	-2, 103,
	-1, 1081,
	66, 972,
	-2, 985,
	-1, 1086,
	266, 1721,
	-2, 1628,
	-1, 1171,
	277, 1185,
	282, 1185,
	-2, 491,
	-1, 1259,
	1, 652,
	790, 652,
	-2, 235,
	-1, 1584,
	239, 1746,
	-2, 1559,
	-1, 1797,
	66, 973,
	-2, 989,
	-1, 1798,
	66, 974,
	-2, 990,
	-1, 1877,
	150, 235,
	194, 235,
	379, 235,
	-2, 530,
	-1, 1954,
	151, 480,
	272, 480,
	-2, 584,
	-1, 1963,
	277, 1186,
	282, 1186,
	-2, 492,
	-1, 2412,
	239, 1750,
	-2, 1744,
	-1, 2413,
	239, 1746,
	-2, 1742,
	-1, 2532,
	150, 235,
	194, 235,
	379, 235,
	-2, 531,
	-1, 2539,
	29, 256,
	-2, 258,
	-1, 2998,
	96, 1686,
	-2, 965,
	-1, 3018,
	87, 160,
	97, 160,
	-2, 1052,
	-1, 3083,
	765, 777,
	-2, 751,
	-1, 3320,
	56, 1678,
	-2, 1672,
	-1, 3640,
	98, 1619,
	-2, 1624,
	-1, 4166,
	765, 777,
	-2, 765,
	-1, 4206,
	17, 110,
	18, 110,
	166, 91,
	-2, 886,
	-1, 4263,
	166, 92,
	-2, 110,
	-1, 4283,
	99, 709,
	105, 709,
	115, 709,
	196, 709,
	197, 709,
	198, 709,
	199, 709,
	200, 709,
	201, 709,
	202, 709,
	203, 709,
	204, 709,
	205, 709,
	206, 709,
	207, 709,
	208, 709,
	209, 709,
	210, 709,
	211, 709,
	212, 709,
	213, 709,
	214, 709,
	215, 709,
	216, 709,
	217, 709,
	218, 709,
	219, 709,
	220, 709,
	221, 709,
	222, 709,
	223, 709,
	224, 709,
	225, 709,
	226, 709,
	227, 709,
	228, 709,
	229, 709,
	230, 709,
	231, 709,
	232, 709,
	233, 709,
	234, 709,
	235, 709,
	236, 709,
	237, 709,
	-2, 2147,
	-1, 4356,
	164, 97,
	166, 97,
	-2, 110,
	-1, 4440,
	166, 96,
	-2, 110,
	-1, 4446,
	17, 110,
	18, 110,
	-2, 101,
}

const yyPrivate = 57344

const yyLast = 59582

var yyAct = [...]int{
	1009, 3804, 4403, 4264, 4265, 92, 4263, 3805, 4398, 3806,
	4387, 4416, 958, 4148, 816, 4404, 957, 4333, 3447, 4334,
	2528, 4245, 4361, 3754, 1004, 4281, 3598, 1329, 2085, 3372,
	1880, 3379, 4198, 3461, 4405, 4410, 2441, 4127, 2589, 4050,
	3416, 3333, 4125, 3425, 2218, 3430, 3847, 3427, 3742, 3426,
	3171, 3424, 3445, 3429, 996, 3428, 3256, 3387, 2206, 2599,
	3321, 3444, 3145, 997, 962, 788, 2499, 132, 90, 46,
	3331, 3675, 2977, 782, 2990, 2482, 2568, 2502, 3628, 2443,
	2994, 3170, 3337, 783, 9, 1937, 3053, 3334, 3127, 3469,
	3080, 1079, 2962, 92, 2573, 2630, 3054, 2516, 3055, 3652,
	174, 1106, 3858, 1141, 3004, 47, 2951, 2503, 2983, 1076,
	45, 1979, 2961, 2935, 1079, 2504, 2398, 2202, 1113, 2461,
	3638, 3117, 2152, 2608, 2366, 160, 2240, 2365, 2491, 2575,
	3046, 1166, 1151, 1161, 1867, 3020, 1847, 1137, 1961, 1153,
	1011, 1832, 1815, 1105, 1179, 2470, 2506, 3336, 111, 3663,
	1778, 1597, 2080, 107, 1968, 1078, 112, 1082, 2246, 1148,
	1522, 1085, 1505, 1145, 1172, 1169, 1149, 2564, 1167, 1168,
	2483, 1866, 2565, 1852, 1089, 106, 793, 1123, 1108, 1125,
	1101, 1252, 3842, 1800, 1102, 2254, 2273, 2933, 1580, 14,
	1556, 1317, 2143, 13, 12, 3834, 959, 1325, 1084, 2093,
	114, 138, 136, 1083, 137, 178, 3599, 143, 1953, 786,
	1074, 144, 89, 2177, 1118, 798, 113, 1263, 1087, 1303,
	1601, 99, 4261, 775, 2166, 6, 4388, 3743, 1606, 1257,
	2601, 2602, 2603, 2601, 3413, 4182, 3071, 718, 1117, 1251,
	3103, 3102, 2645, 3735, 1073, 4305, 1834, 3435, 3135, 3136,
	4177, 4178, 2438, 2439, 2159, 2158, 2157, 2156, 3700, 1142,
	1093, 4183, 1327, 139, 2155, 2154, 1208, 145, 1091, 4,
	2124, 1273, 2045, 3068, 715, 4, 716, 2931, 2700, 3317,
	2979, 1837, 2634, 1094, 4435, 4337, 3260, 3809, 785, 4332,
	4378, 2479, 1183, 3602, 1133, 3601, 1835, 2478, 2241, 2632,
	1132, 776, 3096, 1077, 4128, 1830, 1075, 3433, 3809, 2896,
	1158, 1838, 2164, 1182, 1216, 4156, 3435, 118, 119, 120,
	1519, 123, 3073, 1516, 3488, 760, 1836, 4260, 202, 3432,
	2633, 710, 1209, 1212, 1213, 1107, 3439, 1157, 1156, 3093,
	1155, 139, 4392, 773, 774, 4046, 4045, 4309, 4307, 1225,
	1811, 1207, 1206, 1067, 1068, 1069, 1070, 1010, 754, 4347,
	1081, 101, 4178, 3748, 1086, 2707, 3749, 91, 4391, 4056,
	1131, 1135, 961, 4308, 4306, 4303, 3433, 3766, 778, 1061,
	1072, 1507, 3755, 3808, 999, 1062, 1013, 1014, 1015, 1000,
	1120, 1121, 1001, 1002, 4242, 1003, 2590, 1131, 1135, 961,
	2627, 4055, 1159, 1203, 3808, 3439, 2211, 4286, 2472, 139,
	3514, 3849, 129, 1016, 1017, 2971, 2932, 2972, 2998, 754,
	3029, 2997, 3368, 3028, 2523, 2524, 3030, 3134, 1518, 1536,
	2704, 1537, 1538, 3369, 3370, 2705, 2136, 2137, 2522, 1274,
	4246, 1868, 3115, 1869, 3114, 1293, 754, 4149, 1535, 1065,
	101, 1064, 1298, 1299, 1281, 1539, 3074, 1281, 1294, 1282,
	3041, 1322, 1282, 3436, 3765, 2542, 2541, 1280, 1287, 1279,
	91, 3465, 3649, 3463, 2089, 3496, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 4250, 754,
	4291, 103, 2986, 2987, 754, 1500, 91, 3494, 2698, 93,
	754, 2584, 3436, 754, 2135, 1517, 1523, 3192, 768, 3470,
	4289, 2139, 772, 3118, 1864, 1523, 766, 3116, 2440, 2668,
	4296, 4297, 4338, 101, 3081, 2578, 1506, 4098, 1295, 4099,
	3389, 3390, 1300, 1226, 2609, 1782, 1205, 4290, 1288, 3466,
	3456, 3464, 1301, 4339, 2035, 2486, 1321, 103, 2486, 1222,
	1223, 1224, 1320, 1227, 1228, 1229, 1230, 755, 2957, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1557, 2462, 91, 101,
	2238, 2652, 1256, 3722, 1264, 1265, 1124, 127, 2090, 2036,
	2673, 2037, 2674, 2650, 2675, 1826, 2701, 1314, 2702, 3485,
	1260, 2993, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1566,
	1565, 1567, 1568, 3303, 2460, 1296, 1297, 1268, 755, 1499,
	1319, 3304, 3457, 3458, 1267, 1533, 130, 2462, 1302, 2998,
	3122, 4030, 2997, 3737, 1533, 2648, 2649, 2653, 3733, 779,
	3736, 1269, 2676, 1232, 1231, 755, 1162, 1571, 2612, 2651,
	1163, 3388, 3813, 1571, 3391, 2500, 1946, 1163, 1201, 1200,
	1199, 101, 1198, 3391, 1197, 1196, 128, 1195, 1194, 1189,
	3069, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371,
	4372, 4373, 4374, 1134, 1128, 1126, 3259, 1785, 3193, 1202,
	2577, 2230, 2219, 2220, 2221, 2222, 2232, 2223, 2224, 2225,
	2237, 2233, 2226, 2227, 2234, 2235, 2236, 2228, 2229, 2231,
	1134, 1128, 1126, 1146, 4436, 1146, 3411, 1144, 755, 1326,
	1175, 1326, 1326, 755, 1211, 1146, 4445, 1174, 1119, 755,
	1174, 3641, 755, 2471, 1210, 2081, 3123, 2638, 101, 1529,
	2637, 2077, 1521, 4420, 3139, 1508, 3075, 1219, 1529, 3307,
	2722, 3091, 3105, 2484, 2485, 1109, 2484, 2485, 1115, 1115,
	1865, 129, 2956, 2469, 2468, 3732, 3650, 2969, 2467, 2463,
	2078, 1079, 1581, 1586, 1587, 2631, 1590, 1592, 1593, 1594,
	1595, 1596, 1272, 1599, 1600, 1602, 1602, 1255, 1602, 1602,
	1607, 1607, 1607, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1834, 1497, 1498,
	1266, 1734, 4155, 1736, 1737, 1738, 1739, 1740, 1315, 3072,
	3851, 3850, 2706, 3437, 3438, 1607, 1607, 1607, 1607, 1607,
	1607, 1496, 1160, 1192, 4161, 4201, 3441, 3095, 100, 1190,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 3698, 3699, 3701, 3586, 1582, 4248,
	3807, 1278, 1967, 3764, 1574, 1575, 1576, 1577, 2047, 2046,
	2048, 2049, 2050, 1127, 1588, 3043, 1578, 4418, 2936, 2938,
	4419, 3807, 4417, 709, 1515, 3094, 1181, 94, 1181, 4321,
	1181, 4320, 3437, 3438, 4433, 130, 1603, 4247, 1604, 1605,
	1127, 2705, 2629, 4409, 3113, 3441, 4301, 3112, 4144, 1608,
	1609, 3126, 3268, 2064, 1572, 1573, 1258, 3689, 3671, 1258,
	3025, 1775, 2989, 2908, 2214, 1856, 1735, 1781, 2581, 1271,
	3267, 1568, 2984, 2529, 1771, 3486, 1079, 717, 1085, 1571,
	1079, 100, 4295, 3367, 2733, 135, 1079, 1539, 1528, 1525,
	1526, 1527, 1532, 1534, 1531, 1591, 1530, 1528, 1525, 1526,
	1527, 1532, 1534, 1531, 1291, 1530, 1524, 1551, 1097, 2582,
	2255, 1318, 4412, 4169, 1811, 1524, 1204, 2580, 3728, 1822,
	1772, 2065, 1825, 1966, 3662, 4293, 1218, 2256, 1537, 1538,
	4294, 3375, 2247, 2473, 1304, 1181, 1193, 100, 92, 2182,
	1789, 1180, 1191, 1180, 1793, 1180, 2282, 1276, 1085, 2148,
	1078, 2583, 1539, 92, 2183, 1569, 1570, 2181, 1829, 1277,
	2094, 1283, 1284, 1285, 1286, 2579, 1538, 1310, 2074, 1312,
	2660, 2655, 2657, 2658, 2656, 2661, 2662, 2663, 2664, 1870,
	1791, 2659, 3376, 3287, 111, 1323, 1324, 3285, 1792, 1539,
	1772, 4439, 112, 1741, 1742, 1743, 1744, 1745, 1746, 4276,
	2733, 4316, 46, 3166, 2937, 4399, 1085, 3378, 1309, 1311,
	2061, 1779, 2062, 4427, 2967, 2063, 1181, 46, 1787, 100,
	4348, 1085, 1876, 2247, 3129, 2742, 3867, 3373, 3706, 3128,
	1256, 1250, 1833, 1256, 3129, 1819, 114, 1940, 3705, 3128,
	2616, 1976, 1821, 1820, 1975, 1965, 2626, 3389, 3390, 1181,
	1180, 2628, 2621, 3146, 3374, 1184, 1174, 2274, 2624, 1813,
	1186, 1192, 2276, 1190, 1187, 1185, 2281, 2277, 2253, 4340,
	2278, 2279, 2280, 1959, 1875, 2275, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2621, 1826, 1776, 1790, 1259,
	3380, 1952, 1269, 1305, 1075, 2625, 1254, 1788, 1077, 2087,
	3690, 1981, 1275, 1982, 1816, 1984, 1986, 1828, 1773, 1990,
	1992, 1994, 1996, 1998, 1326, 2030, 1818, 2012, 1971, 2095,
	1307, 4422, 1969, 1969, 1308, 4212, 1823, 101, 2623, 1092,
	1181, 1180, 1290, 1970, 1313, 1861, 1862, 1174, 1177, 1178,
	4136, 1146, 1811, 1292, 2769, 1171, 1175, 2180, 3148, 1794,
	2252, 1932, 126, 3761, 2070, 3762, 2067, 2068, 2066, 2071,
	2072, 2073, 4437, 1181, 1180, 2069, 1217, 1170, 3388, 4342,
	1214, 1306, 1950, 1949, 4213, 4038, 1948, 1810, 1962, 1973,
	3391, 1561, 1562, 1563, 1564, 1566, 1565, 1567, 1568, 4137,
	2016, 2170, 2171, 2168, 2169, 2060, 1559, 1560, 1561, 1562,
	1563, 1564, 1566, 1565, 1567, 1568, 2008, 1253, 2055, 2011,
	4037, 2013, 1563, 1564, 1566, 1565, 1567, 1568, 2167, 2082,
	2083, 1104, 4028, 3158, 3157, 3156, 3778, 3777, 3150, 3713,
	3154, 2053, 3149, 760, 3147, 1255, 3712, 3702, 1255, 3152,
	1536, 3414, 1537, 1538, 3407, 1180, 2492, 2493, 3151, 4441,
	1540, 1174, 1177, 1178, 1536, 1146, 1537, 1538, 4438, 1171,
	1175, 1157, 1156, 4318, 1155, 139, 1539, 3153, 3155, 1536,
	2042, 1537, 1538, 2170, 2171, 2712, 2713, 1136, 1180, 2054,
	1539, 1598, 3051, 1184, 1174, 1013, 1014, 1015, 1186, 2100,
	3050, 3049, 1187, 1185, 2587, 1539, 1326, 1326, 2731, 2096,
	2097, 2056, 2052, 3377, 1557, 3315, 2122, 1553, 2730, 1554,
	2040, 2121, 92, 2101, 1188, 92, 1557, 1864, 3138, 2039,
	2108, 2109, 2110, 2038, 1555, 1569, 1570, 1552, 2028, 2022,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1566, 1565, 1567,
	1568, 2041, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1566,
	1565, 1567, 1568, 2019, 1557, 2018, 2017, 1988, 1786, 2729,
	1103, 1104, 1943, 1944, 1945, 1536, 1502, 1537, 1538, 1536,
	4376, 1537, 1538, 3695, 1557, 760, 46, 2783, 4341, 46,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1566, 1565, 1567,
	1568, 1539, 4353, 1811, 1811, 1539, 2144, 2209, 2209, 2144,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1566, 1565, 1567,
	1568, 1557, 4164, 2721, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1566, 1565, 1567, 1568, 1098, 2172, 2207, 2207, 2020,
	2021, 4163, 2210, 1099, 4140, 2026, 2027, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1566, 1565, 1567, 1568, 3032, 1536,
	760, 1537, 1538, 1536, 4139, 1537, 1538, 1771, 4351, 1811,
	4157, 1085, 3168, 4256, 1811, 1536, 4138, 1537, 1538, 4254,
	1811, 1942, 4389, 4065, 2293, 1539, 4033, 1103, 1104, 1539,
	2597, 2779, 2596, 2595, 1536, 2594, 1537, 1538, 4252, 1811,
	4064, 1539, 4018, 2129, 2130, 1811, 4328, 1811, 4022, 4111,
	1811, 2147, 4017, 1772, 2147, 2145, 2146, 2149, 2145, 2146,
	1539, 2593, 3866, 2592, 3864, 1536, 3774, 1537, 1538, 1770,
	1536, 2242, 1537, 1538, 4109, 1811, 1536, 2098, 1537, 1538,
	4106, 1811, 1942, 1811, 2102, 1769, 2104, 2105, 2106, 2107,
	2399, 1539, 1768, 2111, 2184, 1536, 1539, 1537, 1538, 4088,
	1811, 1536, 1539, 1537, 1538, 2123, 1536, 3381, 1537, 1538,
	1811, 3385, 2781, 2412, 2411, 2186, 1535, 1811, 2179, 3384,
	2213, 1539, 1535, 1811, 4021, 1599, 2317, 1539, 1582, 1840,
	1848, 1536, 1539, 1537, 1538, 1942, 4241, 1536, 3647, 1537,
	1538, 1104, 3503, 3710, 2738, 2400, 2248, 2257, 2258, 2259,
	2260, 2401, 3694, 3386, 2402, 3471, 1536, 1539, 1537, 1538,
	3468, 2271, 3382, 1539, 117, 2292, 1536, 3383, 1537, 1538,
	1008, 1939, 3467, 3627, 1811, 116, 3410, 115, 1841, 3620,
	1811, 108, 1539, 3617, 1811, 2477, 3409, 3615, 1811, 1942,
	4222, 109, 1539, 2185, 3119, 2187, 2188, 2189, 2190, 2191,
	2192, 2194, 2196, 2197, 2198, 2199, 2200, 2201, 1942, 4218,
	3082, 2409, 2508, 1811, 2415, 2416, 117, 3060, 3578, 1811,
	4118, 1811, 2737, 111, 3746, 4154, 92, 116, 3047, 115,
	1536, 112, 1537, 1538, 2412, 2497, 1536, 110, 1537, 1538,
	1536, 1773, 1537, 1538, 1536, 111, 1537, 1538, 4343, 110,
	1811, 2539, 1811, 112, 4041, 1811, 1539, 1767, 2445, 1761,
	2178, 2695, 1539, 1942, 4029, 2457, 1539, 1102, 2687, 1536,
	1539, 1537, 1538, 3746, 1811, 1536, 2510, 1537, 1538, 1536,
	2309, 1537, 1538, 2686, 2451, 2643, 2452, 1151, 2307, 2642,
	46, 1942, 3744, 108, 1085, 1539, 2092, 2481, 2433, 110,
	2446, 1539, 1811, 109, 1536, 1539, 1537, 1538, 2621, 1811,
	2530, 2465, 3668, 1811, 1811, 1151, 2125, 1093, 2549, 2550,
	2551, 2543, 2091, 2544, 2545, 2546, 2547, 2548, 2533, 2051,
	1539, 2552, 2534, 2458, 2043, 2514, 2033, 2554, 2863, 1811,
	2556, 2557, 2558, 2559, 3576, 1811, 3400, 3399, 2410, 2464,
	3572, 1811, 2474, 2954, 3569, 1811, 3397, 3398, 2570, 2029,
	2537, 3567, 1811, 2610, 1811, 3395, 3396, 110, 2390, 2391,
	2392, 2393, 2394, 2025, 2487, 3565, 1811, 2495, 2576, 2024,
	1845, 3563, 1811, 3065, 1133, 2414, 2023, 2520, 2417, 2418,
	1132, 2519, 1842, 2518, 3395, 3394, 2538, 2536, 2535, 3001,
	1811, 1536, 3021, 1537, 1538, 2705, 3104, 1536, 1316, 1537,
	1538, 1536, 2607, 1537, 1538, 3021, 2586, 3661, 1536, 3332,
	1537, 1538, 3561, 1811, 2435, 1936, 3085, 1539, 3078, 3079,
	3661, 2952, 1536, 1539, 1537, 1538, 3665, 1539, 1536, 4060,
	1537, 1538, 2212, 1811, 1539, 2622, 2571, 2567, 2560, 2562,
	2563, 1844, 1183, 2585, 2615, 1942, 1941, 2618, 1539, 2619,
	3559, 1811, 1969, 2991, 1539, 2635, 1936, 1935, 3362, 2410,
	3022, 2991, 2617, 1182, 2614, 3000, 2571, 2613, 2705, 1536,
	3024, 1537, 1538, 3022, 2639, 116, 2636, 1767, 2640, 2641,
	3557, 1811, 1765, 2705, 3555, 1811, 1536, 1763, 1537, 1538,
	1764, 1762, 1535, 1766, 3664, 1539, 3553, 1811, 1536, 2621,
	1537, 1538, 1878, 1877, 4196, 2710, 4168, 1536, 1942, 1537,
	1538, 4132, 1539, 3001, 1079, 1079, 1079, 3551, 1811, 3606,
	2647, 2646, 4153, 3397, 1539, 3290, 3001, 2521, 3549, 1811,
	3001, 2863, 2766, 1539, 1592, 4025, 1592, 1536, 3661, 1537,
	1538, 1536, 2765, 1537, 1538, 2160, 2161, 2162, 2163, 1535,
	3714, 2621, 2725, 1536, 2604, 1537, 1538, 3729, 2490, 2476,
	1827, 2176, 2436, 1539, 2212, 2150, 2134, 1539, 2076, 1863,
	1843, 2679, 1080, 1165, 1536, 1164, 1537, 1538, 1536, 1539,
	1537, 1538, 2412, 2411, 101, 1536, 4299, 1537, 1538, 4224,
	4052, 1536, 4019, 1537, 1538, 3879, 2215, 2216, 133, 3727,
	1539, 3724, 2239, 3708, 1539, 2243, 2244, 3715, 3716, 3717,
	2249, 1539, 3519, 1536, 3518, 1537, 1538, 1539, 1938, 2569,
	3419, 3415, 3313, 103, 3086, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2566, 2272, 2697, 2561, 1539,
	2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2303, 2555,
	2308, 2703, 2310, 2311, 2312, 101, 2314, 2315, 2316, 2553,
	2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327,
	2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337,
	2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347,
	2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357,
	2358, 2359, 2360, 2361, 2362, 2363, 2367, 2368, 2369, 2370,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2714,
	2715, 2716, 2711, 2719, 2395, 2717, 2397, 2179, 2403, 2404,
	2405, 2406, 2407, 2408, 2741, 2058, 1964, 1960, 1934, 2726,
	131, 2907, 3417, 3056, 3057, 1258, 3462, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 3718, 2428, 2429, 2430, 2431,
	2432, 3676, 3677, 3547, 1811, 4053, 2584, 3545, 1811, 2449,
	4384, 4382, 4335, 2939, 4176, 4093, 3679, 2895, 3543, 1811,
	3646, 3645, 3644, 3332, 2777, 2127, 3308, 3682, 2680, 3354,
	2004, 1812, 1814, 3681, 3355, 714, 1115, 3057, 3541, 1811,
	3352, 2718, 2209, 2720, 3351, 3353, 1079, 2728, 3719, 3720,
	3721, 3350, 2723, 3833, 2724, 3832, 3539, 1811, 4172, 4054,
	1536, 2480, 1537, 1538, 1536, 1839, 1537, 1538, 1095, 4326,
	2996, 2999, 2207, 2455, 3295, 1536, 2942, 1537, 1538, 2508,
	3294, 4135, 1079, 3017, 2488, 2489, 1539, 2005, 2006, 2007,
	1539, 2943, 2128, 2945, 2940, 1536, 3654, 1537, 1538, 3857,
	3859, 1539, 3525, 1811, 3653, 3657, 2689, 2690, 3831, 2178,
	2527, 2692, 2000, 1536, 777, 1537, 1538, 3322, 3324, 1096,
	2693, 1539, 3319, 2748, 3501, 1811, 3325, 2976, 3393, 3006,
	3009, 3010, 3011, 3007, 46, 3008, 3012, 2075, 1085, 1539,
	2763, 2928, 1811, 3014, 1063, 3670, 3016, 1085, 2997, 3039,
	3061, 2926, 1811, 1779, 2995, 2960, 3015, 2930, 2255, 1536,
	3120, 1537, 1538, 2672, 2985, 2001, 2002, 2003, 2901, 1811,
	2671, 2670, 2878, 1811, 2572, 2256, 2955, 2959, 1112, 2958,
	2950, 1536, 3684, 1537, 1538, 1539, 2669, 1833, 2974, 1772,
	3042, 3044, 1111, 3090, 3045, 2667, 2666, 2988, 1536, 2665,
	1537, 1538, 3356, 3035, 3010, 3011, 3019, 1539, 1536, 1221,
	1537, 1538, 2870, 1811, 1220, 3013, 2861, 1811, 2175, 2173,
	2174, 3023, 2859, 1811, 1539, 1536, 3026, 1537, 1538, 1536,
	3101, 1537, 1538, 108, 1539, 3033, 3036, 2576, 3479, 1536,
	3056, 1537, 1538, 109, 2846, 1811, 3132, 4324, 1501, 2844,
	1811, 1539, 4358, 2842, 1811, 1539, 3048, 2840, 1811, 3092,
	108, 2973, 2838, 1811, 3659, 1539, 110, 117, 110, 1536,
	109, 1537, 1538, 1536, 3058, 1537, 1538, 140, 116, 1536,
	115, 1537, 1538, 4414, 2836, 1811, 3312, 3066, 110, 2683,
	2834, 1811, 4259, 2492, 2493, 1539, 3622, 3098, 4048, 1539,
	1952, 1536, 3392, 1537, 1538, 1539, 1536, 1138, 1537, 1538,
	1536, 2475, 1537, 1538, 1536, 3077, 1537, 1538, 1152, 1536,
	3293, 1537, 1538, 4360, 115, 3087, 3088, 1539, 3292, 3097,
	4359, 3629, 1539, 2832, 1811, 2709, 1539, 2133, 3142, 3143,
	1539, 1536, 2132, 1537, 1538, 1539, 2435, 1536, 4117, 1537,
	1538, 4116, 4096, 1536, 3865, 1537, 1538, 3863, 2830, 1811,
	3862, 3844, 3121, 3159, 2828, 1811, 3725, 1539, 3658, 2826,
	1811, 3656, 3124, 1539, 3420, 3140, 2824, 1811, 117, 1539,
	2822, 1811, 2605, 3843, 1947, 2820, 1811, 1110, 116, 116,
	1536, 115, 1537, 1538, 2818, 1811, 1545, 1546, 1547, 1548,
	1549, 1550, 1544, 1541, 3099, 3177, 3178, 3179, 3180, 3181,
	3182, 3183, 3184, 3185, 3186, 1536, 1539, 1537, 1538, 3160,
	3639, 1536, 2991, 1537, 1538, 3194, 1536, 3052, 1537, 1538,
	3817, 2816, 1811, 1536, 2954, 1537, 1538, 1536, 3196, 1537,
	1538, 1539, 1536, 2767, 1537, 1538, 2447, 1539, 2814, 1811,
	117, 1536, 1539, 1537, 1538, 1857, 2812, 1811, 1849, 1539,
	4385, 116, 4386, 1539, 2807, 1811, 4141, 3254, 1539, 3198,
	4386, 4385, 121, 122, 3693, 4205, 3618, 1539, 3130, 5,
	8, 3131, 2399, 1536, 2399, 1537, 1538, 2743, 1536, 3,
	1537, 1538, 1, 1071, 1504, 1503, 105, 2749, 2750, 2751,
	2752, 3697, 3141, 4288, 730, 1536, 2437, 1537, 1538, 1539,
	1777, 4336, 4284, 1536, 1539, 1537, 1538, 4285, 2044, 3261,
	2034, 1536, 3756, 1537, 1538, 2508, 2364, 3263, 4049, 3845,
	3846, 1539, 3848, 1536, 3423, 1537, 1538, 2611, 3723, 1539,
	2574, 3584, 1598, 2401, 3187, 2401, 1173, 1539, 165, 3580,
	2250, 3059, 2531, 2532, 4236, 2251, 3062, 3063, 3234, 1539,
	2803, 1811, 125, 1139, 124, 3339, 1176, 92, 1289, 2606,
	3747, 3040, 2508, 2508, 2508, 2508, 2508, 3244, 3245, 3246,
	3247, 3248, 2540, 1884, 3144, 1882, 3262, 1883, 3264, 2510,
	1881, 2508, 3161, 2313, 2508, 1886, 3297, 1885, 1536, 4200,
	1537, 1538, 3299, 3162, 3271, 3487, 1536, 2768, 1537, 1538,
	2801, 1811, 3344, 3585, 2138, 767, 761, 1536, 3283, 1537,
	1538, 3289, 203, 2087, 1539, 3361, 1871, 3296, 1850, 2131,
	1215, 1082, 1539, 720, 3401, 1085, 2510, 2510, 2510, 2510,
	2510, 3298, 3516, 1539, 2644, 726, 3309, 3310, 3311, 3306,
	1589, 3284, 3286, 3288, 3440, 2510, 2794, 1811, 2510, 3326,
	3327, 2126, 3291, 3027, 3448, 1130, 1122, 1536, 3363, 1537,
	1538, 3364, 1084, 2396, 2792, 1811, 3452, 1083, 3449, 3345,
	3453, 3343, 3348, 3515, 1100, 2448, 111, 3357, 3346, 3347,
	2944, 3349, 3365, 1539, 112, 1129, 4026, 3340, 3651, 1536,
	3318, 1537, 1538, 2427, 3329, 3371, 3320, 2978, 3323, 3316,
	4134, 3507, 3856, 1536, 4357, 1537, 1538, 3505, 3402, 4223,
	1812, 2434, 3404, 3403, 3037, 1539, 1846, 3605, 2924, 2740,
	1848, 1536, 2245, 1537, 1538, 3236, 1579, 3238, 792, 1539,
	1536, 3272, 1537, 1538, 2507, 963, 1831, 2923, 2576, 3812,
	3442, 2165, 3421, 3249, 3250, 3251, 3252, 1539, 3459, 2919,
	3335, 2459, 790, 789, 787, 2946, 1539, 3335, 1536, 2992,
	1537, 1538, 2918, 1543, 1536, 1542, 1537, 1538, 2917, 998,
	2934, 3472, 3475, 3474, 2916, 1536, 1858, 1537, 1538, 3005,
	2915, 3003, 3482, 3002, 1539, 2681, 3443, 3492, 2515, 3678,
	1539, 3674, 3489, 3490, 1536, 3491, 1537, 1538, 3493, 2914,
	3495, 1539, 3497, 4280, 2509, 2905, 1536, 2505, 1537, 1538,
	2953, 2904, 3272, 949, 3508, 3509, 3510, 3511, 3512, 1536,
	1539, 1537, 1538, 948, 2903, 1536, 1592, 1537, 1538, 799,
	1592, 1536, 1539, 1537, 1538, 791, 2902, 1536, 3422, 1537,
	1538, 781, 1012, 2899, 947, 1539, 3630, 946, 3632, 3450,
	3451, 1539, 2968, 1824, 2894, 4325, 1536, 1539, 1537, 1538,
	3314, 3640, 1536, 1539, 1537, 1538, 2970, 3600, 1536, 3038,
	1537, 1538, 3302, 2887, 3604, 1520, 1796, 2588, 1799, 2456,
	1817, 1536, 1539, 1537, 1538, 3484, 4159, 2886, 1539, 2708,
	3513, 1795, 4166, 1536, 1539, 1537, 1538, 3431, 2885, 3741,
	1536, 3412, 1537, 1538, 3083, 2598, 2884, 1539, 74, 3483,
	50, 1536, 3338, 1537, 1538, 4126, 4197, 941, 938, 1539,
	3814, 3815, 3816, 2508, 3635, 3631, 1539, 3633, 3257, 3258,
	1536, 3637, 1537, 1538, 2883, 4179, 3691, 1539, 4180, 937,
	3137, 3655, 4181, 2302, 1536, 1514, 1537, 1538, 3452, 3648,
	3449, 2882, 3453, 1511, 3692, 1536, 1539, 1537, 1538, 3067,
	2140, 104, 40, 1536, 3660, 1537, 1538, 3163, 3164, 3165,
	1539, 39, 3167, 38, 37, 3169, 36, 30, 29, 3673,
	3680, 1539, 3669, 28, 27, 26, 3683, 2510, 3685, 1539,
	33, 1536, 23, 1537, 1538, 3188, 3189, 3190, 3687, 3688,
	3686, 25, 24, 22, 3195, 4396, 4397, 4426, 1536, 3197,
	1537, 1538, 3199, 3200, 3201, 4262, 4202, 1539, 3202, 3203,
	3405, 3406, 3204, 3434, 3205, 4331, 4413, 134, 4362, 4323,
	3709, 3206, 3711, 3207, 1539, 4322, 4273, 3208, 4402, 3209,
	4268, 60, 3210, 57, 3211, 55, 3212, 142, 3213, 141,
	3214, 58, 3215, 56, 3216, 54, 3217, 53, 3218, 1261,
	3219, 51, 3220, 102, 3221, 35, 3222, 34, 3223, 21,
	3224, 20, 3225, 19, 3226, 18, 3227, 2881, 3751, 3752,
	3228, 2880, 3229, 17, 3230, 16, 15, 3231, 3753, 3232,
	11, 3233, 10, 2367, 3235, 43, 42, 3237, 41, 32,
	3239, 3240, 3241, 3242, 31, 44, 7, 2, 3243, 2367,
	2367, 2367, 2367, 2367, 3607, 3070, 3609, 3610, 3611, 3730,
	3731, 2600, 0, 0, 3253, 1801, 3768, 0, 2879, 0,
	3477, 3478, 3266, 0, 1536, 3270, 1537, 1538, 1536, 1809,
	1537, 1538, 1802, 0, 3273, 3274, 3275, 3276, 3277, 3278,
	0, 2727, 0, 3279, 3280, 2732, 3281, 0, 3282, 0,
	1539, 0, 3779, 2873, 1539, 0, 0, 2453, 2454, 1808,
	1806, 1807, 1803, 0, 1804, 0, 0, 0, 2735, 0,
	2736, 0, 1115, 0, 0, 1536, 2744, 1537, 1538, 3830,
	2746, 2747, 3837, 0, 3839, 0, 0, 1805, 1773, 2753,
	2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 3810,
	2764, 1539, 3820, 0, 3821, 3822, 3823, 3773, 0, 0,
	1536, 3330, 1537, 1538, 0, 3339, 0, 0, 92, 0,
	3339, 3840, 0, 2770, 2771, 2772, 2773, 0, 2775, 2776,
	0, 2778, 0, 0, 0, 2780, 1539, 3360, 0, 2785,
	2786, 0, 2787, 0, 0, 2790, 2791, 2793, 2795, 2796,
	2797, 2798, 2799, 2800, 2802, 2804, 2805, 2806, 2808, 2209,
	2810, 2811, 2813, 2815, 2817, 2819, 2821, 2823, 2825, 2827,
	2829, 2831, 2833, 2835, 2837, 2839, 2841, 2843, 2845, 2847,
	2848, 2849, 46, 2851, 4032, 2853, 1085, 2855, 2856, 2207,
	2858, 2860, 2862, 3881, 3418, 3871, 2865, 3870, 3872, 3868,
	2869, 3861, 3873, 3860, 2874, 2875, 2876, 2877, 3841, 3885,
	3882, 3883, 2872, 0, 0, 0, 0, 2888, 2889, 2890,
	2891, 2892, 2893, 2871, 0, 2897, 2898, 0, 0, 0,
	0, 0, 2900, 0, 0, 4024, 4023, 2906, 0, 3703,
	3704, 2868, 2909, 2910, 2911, 2912, 2913, 0, 0, 4044,
	2867, 0, 4043, 2920, 2921, 0, 2922, 0, 0, 2925,
	2927, 2459, 4090, 2929, 4091, 0, 0, 3875, 0, 1536,
	4039, 1537, 1538, 2941, 0, 0, 0, 0, 3838, 0,
	1536, 0, 1537, 1538, 2209, 0, 0, 3734, 3506, 0,
	0, 3738, 3739, 3740, 0, 1539, 0, 0, 1536, 0,
	1537, 1538, 0, 0, 0, 2975, 1539, 1536, 3335, 1537,
	1538, 0, 0, 0, 2207, 0, 3521, 4027, 4094, 0,
	0, 4097, 4142, 3339, 1539, 4100, 0, 0, 0, 3801,
	0, 0, 0, 1539, 3877, 0, 0, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1730, 1731, 1732, 1733, 1747, 1748, 1749, 1750, 1751, 1752,
	1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 4051, 4147,
	4143, 4146, 3338, 4095, 4124, 4145, 4114, 3338, 4123, 2866,
	1801, 4160, 0, 4120, 0, 4122, 0, 2864, 0, 0,
	0, 2857, 0, 0, 1809, 0, 0, 1802, 2854, 92,
	3006, 3009, 3010, 3011, 3007, 0, 3008, 3012, 0, 0,
	3676, 3677, 2852, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 1798, 1808, 1806, 1807, 1803, 0, 1804,
	0, 0, 0, 0, 0, 3726, 1536, 0, 1537, 1538,
	4165, 4031, 0, 4150, 1536, 2850, 1537, 1538, 1536, 0,
	1537, 1538, 1805, 0, 0, 1536, 2809, 1537, 1538, 0,
	0, 0, 1539, 46, 4162, 0, 0, 1085, 3750, 1536,
	1539, 1537, 1538, 0, 1539, 0, 3172, 3173, 3174, 3175,
	3176, 1539, 92, 4167, 0, 4204, 4203, 0, 0, 4034,
	4035, 4036, 0, 4130, 0, 1539, 3191, 0, 4185, 0,
	4220, 4186, 1536, 0, 1537, 1538, 0, 0, 0, 4152,
	0, 0, 0, 1536, 4211, 1537, 1538, 4195, 0, 0,
	0, 3769, 0, 3770, 0, 3771, 0, 3772, 1539, 4210,
	0, 0, 0, 4214, 0, 3775, 3776, 0, 0, 1539,
	0, 0, 4170, 0, 0, 3781, 46, 4225, 4249, 0,
	0, 0, 0, 0, 0, 994, 4234, 92, 4235, 3782,
	4228, 3783, 4233, 3784, 4230, 3785, 4229, 3786, 4227, 3787,
	4232, 3788, 4231, 3789, 2789, 3790, 0, 3791, 0, 3792,
	3338, 3793, 0, 3794, 4257, 3795, 0, 3796, 0, 3797,
	0, 0, 3798, 0, 4275, 4274, 3799, 0, 3800, 0,
	0, 0, 2788, 4287, 3802, 4292, 4279, 2784, 0, 0,
	4315, 2782, 0, 4249, 92, 0, 206, 4317, 4304, 206,
	0, 46, 0, 765, 0, 4302, 3819, 0, 771, 0,
	0, 1536, 4215, 1537, 1538, 3824, 0, 3825, 3826, 206,
	3827, 4314, 3828, 4216, 4221, 0, 0, 3829, 4319, 0,
	0, 0, 0, 0, 0, 0, 206, 1539, 0, 1536,
	0, 1537, 1538, 4330, 1536, 0, 1537, 1538, 1536, 92,
	1537, 1538, 2774, 0, 0, 4356, 4346, 0, 46, 2087,
	4345, 1773, 3869, 771, 206, 1539, 0, 771, 3335, 771,
	1539, 0, 4355, 0, 1539, 0, 3878, 4375, 4267, 3880,
	0, 4379, 4383, 4381, 4377, 4349, 2209, 92, 0, 4400,
	4317, 3884, 0, 0, 0, 4249, 2745, 0, 0, 0,
	4390, 3452, 0, 3449, 3341, 3453, 4411, 4401, 4020, 1536,
	0, 1537, 1538, 46, 0, 0, 2207, 4174, 4158, 0,
	4380, 0, 0, 3359, 4415, 4184, 0, 0, 4421, 0,
	4423, 0, 0, 92, 2739, 1539, 4428, 4431, 0, 0,
	0, 0, 2734, 0, 0, 0, 0, 0, 0, 0,
	0, 46, 0, 1536, 0, 1537, 1538, 0, 92, 4434,
	0, 4051, 4238, 0, 4440, 4443, 0, 0, 0, 4344,
	0, 92, 92, 0, 4317, 0, 4447, 92, 4446, 1539,
	4317, 0, 4448, 0, 0, 4449, 0, 4091, 0, 1773,
	2209, 1536, 0, 1537, 1538, 0, 0, 46, 0, 1536,
	0, 1537, 1538, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1539, 0, 0,
	2207, 0, 46, 0, 4444, 1539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 46, 46, 0, 0, 0,
	0, 46, 0, 4129, 0, 3481, 0, 0, 0, 0,
	0, 0, 754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3498, 3499, 4310,
	3500, 3502, 3504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 749, 3517, 0,
	0, 0, 0, 3520, 0, 3522, 3523, 3524, 3526, 3527,
	3528, 3529, 3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537,
	3538, 3540, 3542, 3544, 3546, 3548, 3550, 3552, 3554, 3556,
	3558, 3560, 3562, 3564, 3566, 3568, 3570, 3571, 3573, 3574,
	3575, 3577, 0, 0, 3579, 734, 3581, 3582, 3583, 0,
	0, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 3594, 3595,
	3596, 3597, 0, 0, 0, 0, 0, 0, 732, 0,
	3603, 0, 0, 0, 3608, 0, 0, 0, 3612, 3613,
	0, 3614, 3616, 0, 3619, 3621, 0, 3623, 3624, 3625,
	3626, 0, 0, 0, 0, 0, 0, 3634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	0, 0, 0, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 742, 3666, 3667, 752,
	0, 3672, 0, 0, 0, 0, 0, 753, 0, 0,
	4173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4187, 0, 0, 4188,
	0, 4189, 0, 0, 0, 0, 0, 719, 0, 721,
	735, 0, 757, 0, 756, 725, 0, 723, 727, 736,
	728, 0, 722, 0, 733, 0, 0, 724, 737, 738,
	741, 745, 746, 747, 743, 740, 0, 731, 758, 0,
	0, 0, 3745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 140, 0, 0, 0,
	0, 0, 3763, 0, 0, 3767, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 4266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4298, 0, 0, 0, 0, 3780,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 0, 206, 3034, 0,
	0, 0, 4311, 0, 4312, 0, 4313, 0, 0, 0,
	0, 0, 180, 0, 0, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 771, 0, 771, 771, 0, 0,
	0, 200, 0, 3803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3811, 0, 771, 206,
	0, 0, 0, 3818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1584, 0, 0,
	0, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 4393, 0, 4394, 91, 48, 49, 93, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 98, 0, 0, 0, 52, 81, 82,
	0, 79, 83, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 0, 0, 0, 0, 0, 4429,
	4430, 0, 0, 0, 0, 103, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 67, 1066, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 140, 0,
	0, 0, 0, 0, 0, 0, 759, 0, 0, 4040,
	0, 0, 0, 0, 183, 0, 0, 0, 4047, 0,
	0, 0, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 1147, 0, 0, 0, 0, 0, 4057, 4058, 4059,
	0, 4061, 751, 4062, 4063, 0, 0, 88, 0, 4066,
	4067, 4068, 4069, 4070, 4071, 4072, 4073, 4074, 4075, 4076,
	4077, 4078, 4079, 4080, 4081, 4082, 4083, 4084, 4085, 4086,
	4087, 0, 4089, 4092, 180, 0, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4101, 4102,
	4103, 4104, 4105, 4107, 4108, 4110, 4112, 4113, 4115, 0,
	0, 0, 4119, 200, 0, 0, 4121, 0, 0, 0,
	0, 0, 0, 4131, 0, 0, 0, 0, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 95, 59, 62, 61, 64, 0,
	78, 0, 4151, 87, 84, 0, 0, 0, 0, 0,
	206, 0, 0, 0, 771, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 993, 66, 97,
	96, 0, 0, 76, 77, 63, 0, 0, 0, 0,
	0, 85, 86, 0, 0, 0, 0, 0, 0, 0,
	0, 771, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 771, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 206, 0, 0, 190,
	771, 0, 0, 0, 0, 0, 68, 69, 0, 70,
	71, 72, 73, 0, 748, 0, 0, 0, 0, 0,
	770, 0, 0, 0, 0, 771, 0, 771, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 0, 1584, 771,
	0, 0, 771, 771, 771, 771, 0, 771, 0, 771,
	771, 0, 771, 771, 771, 771, 771, 771, 0, 0,
	0, 0, 0, 0, 0, 1584, 771, 771, 1584, 771,
	1584, 206, 771, 65, 0, 770, 0, 0, 0, 770,
	0, 770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 771, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4175, 0,
	771, 0, 0, 0, 771, 0, 0, 206, 206, 176,
	175, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 4190, 0, 206, 0, 0, 0, 4193, 0,
	4194, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 771,
	0, 0, 0, 0, 0, 94, 4219, 0, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4243, 4244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 950, 4251, 4253, 4255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 182, 179, 185, 186, 187, 189, 191, 192,
	193, 194, 0, 4278, 0, 0, 0, 195, 197, 198,
	199, 0, 0, 0, 4300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 91, 48,
	49, 93, 0, 0, 0, 100, 0, 769, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 98, 0, 0,
	0, 52, 81, 82, 0, 79, 83, 0, 4327, 0,
	0, 0, 0, 0, 140, 0, 162, 80, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 4350,
	4352, 4354, 1143, 0, 0, 0, 1150, 0, 1154, 67,
	0, 771, 771, 0, 0, 0, 0, 0, 0, 0,
	0, 101, 4432, 0, 173, 0, 771, 0, 0, 0,
	161, 0, 1262, 0, 1270, 0, 0, 206, 0, 0,
	0, 176, 0, 4395, 0, 0, 0, 0, 188, 0,
	180, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 75, 0, 0, 0, 0, 0, 0,
	0, 88, 0, 0, 0, 149, 150, 172, 171, 200,
	0, 4424, 4425, 0, 0, 0, 0, 771, 0, 0,
	196, 0, 0, 0, 0, 0, 1510, 1584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1584, 0, 0, 4442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 182, 179, 185, 186, 187, 189,
	191, 192, 193, 194, 0, 0, 0, 0, 0, 195,
	197, 198, 199, 0, 0, 0, 0, 0, 95, 59,
	62, 61, 64, 0, 78, 0, 0, 87, 84, 0,
	4208, 0, 0, 166, 147, 169, 154, 146, 0, 167,
	168, 0, 0, 0, 0, 0, 4207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 4209, 66, 97, 96, 190, 155, 76, 77, 63,
	0, 0, 0, 0, 0, 85, 86, 0, 0, 0,
	0, 158, 156, 151, 152, 153, 157, 0, 0, 0,
	0, 0, 0, 148, 0, 0, 0, 0, 0, 0,
	0, 2413, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4206, 69, 0, 70, 71, 72, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 0, 0, 0,
	0, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 65, 0, 0,
	0, 0, 0, 206, 0, 0, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 770, 1495, 770, 770,
	0, 0, 0, 0, 0, 206, 0, 0, 0, 771,
	0, 0, 2413, 206, 0, 206, 0, 206, 206, 0,
	770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1583,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	0, 1860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 771, 0, 170, 0, 0, 0, 771, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 771, 0, 0, 0, 0, 0,
	771, 771, 0, 0, 771, 0, 771, 0, 0, 0,
	0, 0, 771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 771, 0, 0,
	0, 0, 771, 0, 0, 0, 771, 771, 2014, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 164, 4329, 0, 0,
	0, 0, 0, 2059, 206, 0, 1902, 0, 0, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 206, 0, 2088, 206, 176, 206, 206,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 206,
	0, 2099, 0, 0, 0, 0, 206, 0, 2103, 0,
	0, 0, 0, 1328, 0, 1328, 1328, 0, 0, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 196, 1509, 0, 206,
	0, 0, 0, 0, 771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 75, 0, 0,
	0, 0, 0, 0, 0, 0, 770, 770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	182, 179, 185, 186, 187, 189, 191, 192, 193, 194,
	0, 0, 0, 0, 0, 195, 197, 198, 199, 0,
	0, 0, 0, 770, 0, 0, 0, 0, 1584, 0,
	2413, 0, 0, 0, 0, 1889, 0, 0, 770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 0, 770,
	0, 0, 0, 0, 0, 0, 0, 770, 0, 0,
	1583, 770, 0, 0, 770, 770, 770, 770, 0, 770,
	0, 770, 770, 0, 770, 770, 770, 770, 770, 770,
	0, 0, 0, 0, 0, 0, 0, 1583, 770, 770,
	1583, 770, 1583, 0, 770, 0, 0, 0, 0, 0,
	1903, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 770, 0, 0, 0, 770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1916, 1919, 1920,
	1921, 1922, 1923, 1924, 0, 1925, 1926, 1928, 1929, 1927,
	1930, 1931, 1904, 1905, 1906, 1907, 1887, 1888, 1917, 0,
	1890, 770, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 0, 0, 1900, 1908, 1909, 1910, 1911, 0, 1912,
	1913, 1914, 1915, 1783, 1784, 1901, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1902, 0, 771, 771, 771, 206, 0, 0, 0,
	1854, 0, 0, 0, 0, 0, 0, 0, 0, 771,
	0, 0, 0, 0, 0, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1933,
	0, 0, 0, 0, 206, 0, 0, 0, 0, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1942, 0, 1143, 0, 1963, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 1974, 0,
	0, 1977, 1978, 1980, 1980, 0, 1980, 0, 1980, 1980,
	0, 1989, 1980, 1980, 1980, 1980, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 2009, 2010, 0, 1143, 0,
	0, 2015, 0, 0, 0, 0, 0, 0, 0, 0,
	771, 0, 0, 770, 770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 770, 0,
	0, 771, 0, 2057, 0, 0, 0, 0, 771, 0,
	0, 0, 771, 771, 0, 0, 0, 771, 0, 2079,
	1889, 0, 0, 2084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1584, 771, 0, 0, 0, 951, 0,
	0, 0, 1918, 0, 206, 206, 206, 206, 206, 206,
	0, 0, 2494, 0, 0, 0, 0, 0, 0, 770,
	2498, 0, 2501, 0, 0, 2153, 0, 0, 1328, 1583,
	0, 0, 0, 0, 0, 206, 206, 0, 2217, 0,
	0, 0, 0, 0, 0, 0, 0, 1583, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	0, 206, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1903, 0, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 0, 771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1090,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1116, 1116, 0,
	0, 0, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 771, 0, 0,
	0, 0, 1916, 1919, 1920, 1921, 1922, 1923, 1924, 0,
	1925, 1926, 1928, 1929, 1927, 1930, 1931, 1904, 1905, 1906,
	1907, 1887, 1888, 1917, 0, 1890, 0, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 0, 0, 1900, 1908,
	1909, 1910, 1911, 770, 1912, 1913, 1914, 1915, 0, 0,
	1901, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 1328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2153, 0, 0, 0, 2141, 0, 2654, 0, 0,
	0, 0, 0, 770, 0, 0, 0, 0, 0, 2677,
	2678, 0, 0, 2682, 0, 0, 2685, 0, 0, 0,
	0, 0, 771, 0, 0, 0, 2688, 0, 0, 0,
	0, 0, 0, 2691, 771, 0, 0, 770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2203, 0, 0, 2694,
	0, 0, 0, 0, 0, 771, 0, 0, 0, 0,
	0, 770, 0, 0, 770, 0, 0, 0, 0, 0,
	206, 206, 206, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 0, 0, 1584,
	0, 0, 771, 0, 0, 771, 1584, 206, 206, 206,
	206, 206, 0, 0, 0, 0, 0, 0, 0, 206,
	0, 0, 0, 0, 206, 0, 206, 0, 0, 206,
	206, 206, 0, 0, 770, 0, 0, 0, 0, 0,
	770, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3076, 770, 1918, 0, 0,
	0, 0, 770, 770, 0, 0, 770, 140, 770, 162,
	0, 0, 0, 0, 770, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 771, 0, 0, 1584, 0, 0,
	0, 0, 771, 0, 0, 0, 0, 206, 0, 0,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 770,
	0, 206, 0, 0, 770, 0, 0, 173, 770, 770,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 206,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 0, 181, 0, 0, 0,
	2450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 1956,
	172, 171, 200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 91, 48, 49, 93, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 0,
	98, 1328, 0, 0, 52, 81, 82, 0, 79, 83,
	0, 0, 0, 0, 0, 0, 770, 0, 0, 0,
	80, 0, 0, 1143, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 67, 0, 0, 0, 166, 1957, 169, 0,
	1954, 0, 167, 168, 101, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 184,
	0, 1150, 0, 0, 0, 0, 0, 2591, 190, 0,
	1583, 0, 770, 206, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 1143, 0, 0, 3018, 0, 0, 1150,
	1972, 0, 0, 1972, 88, 1972, 0, 0, 0, 0,
	0, 2620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4399, 0, 0, 0, 0, 713, 0,
	713, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 1143, 0, 0, 0,
	0, 2203, 0, 0, 0, 2203, 2203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 713, 0, 0, 771, 771, 0, 0, 0,
	0, 95, 59, 62, 61, 64, 0, 78, 0, 175,
	87, 84, 0, 4208, 0, 0, 0, 0, 0, 0,
	1585, 0, 0, 0, 0, 0, 0, 0, 0, 4207,
	0, 3106, 3107, 3108, 3109, 3110, 3111, 0, 771, 771,
	771, 771, 0, 0, 4209, 66, 97, 96, 0, 0,
	76, 77, 63, 0, 0, 0, 0, 0, 85, 86,
	0, 0, 2153, 3125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2699, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4206, 69, 0, 70, 71, 72, 73,
	0, 0, 0, 0, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 770, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 770, 770, 770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1328,
	0, 770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	65, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3031, 0, 0,
	0, 0, 0, 0, 0, 0, 771, 0, 771, 0,
	206, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	206, 206, 206, 0, 0, 201, 163, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 1951, 1584, 0, 0,
	0, 206, 0, 0, 771, 0, 0, 771, 140, 0,
	162, 0, 770, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 183, 0, 0, 188, 0, 0,
	0, 0, 94, 770, 0, 0, 0, 0, 0, 0,
	770, 0, 0, 713, 770, 770, 0, 0, 0, 770,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 771, 161, 1583, 770, 1090, 0, 196,
	0, 0, 0, 0, 0, 0, 206, 0, 0, 771,
	0, 0, 0, 0, 180, 0, 0, 181, 0, 0,
	0, 771, 0, 0, 0, 0, 0, 713, 3300, 3301,
	0, 3305, 0, 0, 0, 0, 0, 0, 0, 1955,
	1956, 172, 171, 200, 0, 0, 0, 0, 0, 713,
	0, 0, 177, 182, 179, 185, 186, 187, 189, 191,
	192, 193, 194, 0, 0, 0, 0, 0, 195, 197,
	198, 199, 100, 0, 0, 0, 0, 0, 0, 0,
	2947, 0, 0, 0, 0, 0, 0, 0, 0, 770,
	0, 1585, 2963, 2964, 2965, 0, 771, 0, 0, 0,
	0, 0, 0, 771, 0, 771, 0, 0, 2980, 0,
	0, 0, 0, 0, 771, 0, 0, 0, 1585, 0,
	0, 1585, 0, 1585, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 770,
	0, 0, 0, 0, 2031, 771, 0, 166, 1957, 169,
	0, 1954, 0, 167, 168, 0, 0, 0, 0, 713,
	0, 0, 0, 0, 3446, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 3460, 190,
	2086, 713, 0, 0, 0, 0, 0, 0, 0, 0,
	75, 0, 0, 0, 0, 0, 3473, 713, 0, 3476,
	0, 0, 0, 0, 713, 0, 0, 0, 0, 3064,
	0, 0, 0, 2112, 2113, 713, 713, 713, 713, 713,
	713, 713, 0, 0, 0, 0, 0, 0, 0, 0,
	1154, 0, 0, 0, 0, 0, 0, 3084, 0, 0,
	0, 1972, 1972, 0, 0, 0, 3089, 0, 0, 0,
	0, 0, 0, 0, 770, 0, 0, 0, 0, 0,
	0, 0, 0, 3100, 0, 0, 770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 0, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 0, 0, 0, 0, 0, 0, 771, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 0, 0,
	0, 1583, 0, 0, 770, 0, 2203, 770, 1583, 0,
	0, 0, 0, 0, 3636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3642, 3643, 0, 0, 771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2203, 1584, 771, 0,
	771, 0, 0, 0, 0, 0, 0, 0, 170, 3408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 771, 2413, 770, 0, 0, 1583,
	0, 0, 0, 0, 770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3707, 0, 0, 0, 0, 0,
	1557, 0, 0, 0, 771, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 771, 0, 0, 0,
	1585, 0, 0, 0, 3480, 0, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1566, 1565, 1567, 1568, 0, 1585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3255, 0, 0, 771, 0, 0, 163, 0, 0,
	164, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 1980, 771, 0, 206, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 770, 0, 1328, 0, 0, 0, 0, 0,
	0, 3342, 0, 0, 1980, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 182, 179, 185, 186, 187, 189,
	191, 192, 193, 194, 0, 0, 0, 0, 0, 195,
	197, 198, 199, 0, 0, 0, 0, 0, 0, 2031,
	2238, 0, 0, 0, 0, 0, 0, 0, 771, 0,
	0, 0, 0, 1143, 0, 1116, 0, 0, 0, 0,
	0, 1154, 0, 0, 3852, 0, 0, 3853, 3854, 3855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1090, 0, 3696, 1061,
	0, 0, 0, 0, 999, 1062, 1013, 1014, 1015, 1000,
	0, 0, 1001, 1002, 0, 1003, 0, 0, 713, 0,
	0, 0, 0, 0, 0, 2086, 713, 0, 713, 0,
	713, 2517, 0, 1016, 1017, 0, 0, 770, 770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2230, 2219, 2220, 2221, 2222, 2232, 2223, 2224, 2225,
	2237, 2233, 2226, 2227, 2234, 2235, 2236, 2228, 2229, 2231,
	770, 770, 770, 770, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 4250, 1933,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 91, 48,
	49, 93, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 98, 0, 0,
	0, 52, 81, 82, 0, 79, 83, 0, 0, 0,
	3456, 0, 0, 0, 0, 0, 0, 80, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 713, 0, 67,
	0, 0, 0, 713, 0, 0, 0, 0, 0, 0,
	0, 101, 0, 0, 0, 713, 713, 0, 770, 713,
	770, 2684, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 0, 0, 0, 713,
	0, 0, 3457, 3458, 0, 0, 0, 0, 0, 1583,
	0, 0, 0, 0, 0, 0, 770, 0, 0, 770,
	0, 88, 0, 0, 0, 713, 0, 0, 0, 0,
	0, 0, 2696, 0, 1154, 1154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 770, 0, 3757, 3758, 3759,
	3760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 770, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 2086, 0, 0, 4171, 0, 95, 59,
	62, 61, 64, 0, 78, 0, 0, 87, 84, 0,
	4208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4209, 66, 97, 96, 0, 0, 76, 77, 63,
	0, 0, 0, 0, 0, 85, 86, 0, 770, 0,
	0, 0, 0, 0, 0, 770, 0, 770, 0, 0,
	0, 0, 0, 0, 1061, 0, 770, 0, 0, 999,
	1062, 1013, 1014, 1015, 1000, 0, 0, 1001, 1002, 0,
	1003, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4206, 69, 0, 70, 71, 72, 73, 770, 1016, 1017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3835, 0, 3835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3874, 0, 0, 3876, 65, 0, 0,
	0, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1059, 0, 0, 713, 0, 0, 0, 0,
	0, 0, 1154, 2031, 0, 0, 0, 0, 0, 4248,
	0, 0, 0, 0, 0, 0, 0, 0, 4042, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 0, 2966,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3456, 0, 4247, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	770, 0, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 0, 713, 0, 0, 0, 0, 0, 0, 0,
	1889, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3835, 0, 0, 0, 0,
	0, 0, 3835, 0, 3835, 0, 0, 0, 0, 0,
	0, 0, 0, 4133, 0, 0, 770, 3457, 3458, 0,
	0, 0, 0, 0, 0, 0, 770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1583,
	770, 0, 770, 0, 1154, 0, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1903, 770, 770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 713, 713, 713,
	713, 713, 713, 0, 0, 0, 770, 770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 713, 713,
	0, 0, 1916, 1919, 1920, 1921, 1922, 1923, 1924, 0,
	1925, 1926, 1928, 1929, 1927, 1930, 1931, 1904, 1905, 1906,
	1907, 1887, 1888, 1917, 713, 1890, 770, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 0, 75, 1900, 1908,
	1909, 1910, 1911, 0, 1912, 1913, 1914, 1915, 0, 0,
	1901, 0, 0, 0, 1154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 770, 0, 0, 0, 1154, 0, 0,
	0, 0, 0, 0, 0, 0, 770, 0, 0, 0,
	0, 0, 0, 0, 3906, 3908, 3907, 3973, 3974, 3975,
	3976, 3977, 3978, 3979, 3909, 3910, 841, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1154, 0, 4217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	770, 0, 0, 1328, 1328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4269, 4277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1918, 0, 0,
	0, 1116, 0, 713, 713, 713, 0, 713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1585, 0, 0, 0, 0, 0, 0, 1585,
	713, 713, 713, 713, 713, 0, 0, 0, 0, 0,
	0, 0, 3358, 0, 1154, 0, 0, 2031, 0, 713,
	0, 0, 713, 3366, 2086, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3914, 4282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3922, 3923, 0,
	0, 3998, 3997, 3996, 0, 0, 3994, 3995, 3993, 0,
	0, 0, 0, 0, 4277, 0, 0, 0, 0, 0,
	1585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 713, 0, 0, 713, 0, 0, 0, 0,
	0, 0, 0, 0, 3999, 964, 0, 817, 818, 4000,
	4001, 968, 4002, 820, 821, 965, 966, 4277, 815, 819,
	967, 969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3903, 3904, 3905,
	3911, 3912, 3913, 3924, 3971, 3972, 3980, 3982, 920, 3981,
	3983, 3984, 3985, 3988, 3989, 3990, 3991, 3986, 3987, 3992,
	3886, 3890, 3887, 3888, 3889, 3901, 3891, 3892, 3893, 3894,
	3895, 3896, 3897, 3898, 3899, 3900, 3902, 4003, 4004, 4005,
	4006, 4007, 4008, 3917, 3921, 3920, 3918, 3919, 3915, 3916,
	3943, 3942, 3944, 3945, 3946, 3947, 3948, 3949, 3951, 3950,
	3952, 3953, 3954, 3955, 3956, 3957, 3925, 3926, 3929, 3930,
	3928, 3927, 3931, 3940, 3941, 3932, 3933, 3934, 3935, 3936,
	3937, 3939, 3938, 3958, 3959, 3960, 3961, 3962, 3964, 3963,
	3967, 3968, 3966, 3965, 3970, 3969, 0, 0, 0, 0,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 970,
	0, 971, 0, 0, 975, 0, 713, 713, 977, 976,
	0, 978, 940, 939, 0, 101, 972, 973, 1061, 974,
	0, 0, 0, 999, 1062, 1013, 1014, 1015, 1000, 0,
	0, 1001, 1002, 0, 1003, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1008, 0, 1016, 1017, 0, 0, 0, 0, 0, 0,
	1061, 713, 0, 1104, 0, 0, 1062, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 0, 4009, 4010, 4011, 4012, 4013,
	4014, 4015, 4016, 3454, 3455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1059, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3457, 3458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2031, 0, 0, 0, 0, 0, 0,
	713, 0, 0, 713, 713, 713, 1061, 0, 0, 0,
	0, 0, 1062, 0, 0, 0, 0, 0, 0, 0,
	1585, 0, 2208, 0, 2031, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 964, 0,
	0, 0, 0, 0, 968, 0, 0, 0, 965, 966,
	0, 0, 0, 967, 969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2031,
	0, 0, 0, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	1055, 1056, 1057, 1058, 1059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2031, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1478, 1457, 560, 0, 1398, 1481, 1363, 1384,
	1491, 1387, 1390, 1435, 1338, 1413, 441, 1381, 1367, 1333,
	1375, 1334, 1365, 1400, 289, 1362, 1459, 1417, 1480, 388,
	286, 1340, 1331, 215, 533, 1368, 456, 1386, 214, 1438,
	514, 271, 399, 396, 618, 301, 292, 288, 267, 339,
	408, 453, 550, 447, 1487, 392, 1423, 654, 525, 425,
	1585, 0, 0, 1464, 1463, 1391, 1402, 1469, 1411, 1450,
	1396, 1437, 1350, 1422, 1482, 1382, 1432, 1483, 345, 265,
	347, 213, 438, 526, 305, 0, 0, 0, 4237, 4239,
	539, 995, 0, 0, 0, 0, 4240, 0, 0, 0,
	0, 252, 0, 0, 259, 0, 0, 0, 373, 382,
	381, 361, 362, 364, 366, 372, 379, 385, 358, 367,
	1378, 1429, 644, 1476, 1379, 1431, 284, 343, 291, 283,
	615, 1488, 1468, 1337, 1410, 1475, 1405, 631, 2031, 0,
	241, 1479, 1404, 0, 1434, 0, 1494, 1332, 1425, 0,
	1335, 1339, 1490, 1473, 1371, 1372, 294, 0, 0, 0,
	0, 0, 0, 0, 1401, 1412, 1447, 1451, 1394, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 1369, 0,
	1421, 0, 0, 0, 1344, 1336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2086, 0, 0, 0, 0, 0, 0, 0, 1399, 0,
	0, 0, 0, 1349, 0, 1370, 1448, 0, 1330, 316,
	1341, 426, 276, 0, 480, 1361, 322, 337, 1347, 1376,
	1477, 1465, 1466, 1467, 1346, 1455, 1472, 1395, 665, 1474,
	1393, 1392, 1442, 1345, 1462, 1385, 387, 1343, 352, 208,
	236, 0, 1383, 437, 488, 500, 1461, 1460, 1366, 1377,
	272, 1374, 498, 451, 639, 246, 303, 485, 458, 496,
	466, 306, 1420, 1440, 497, 394, 620, 476, 636, 666,
	667, 282, 431, 650, 554, 659, 684, 237, 279, 445,
	538, 642, 522, 420, 616, 617, 351, 521, 314, 212,
	391, 672, 235, 506, 393, 256, 244, 622, 647, 318,
	270, 308, 483, 0, 679, 224, 549, 633, 253, 510,
	0, 0, 687, 261, 532, 645, 634, 226, 629, 531,
	416, 348, 349, 225, 0, 484, 287, 312, 0, 0,
	277, 440, 624, 625, 275, 688, 240, 658, 231, 1342,
	657, 433, 619, 630, 417, 405, 230, 628, 415, 404,
	356, 377, 378, 299, 327, 473, 397, 474, 326, 328,
	428, 427, 429, 218, 643, 662, 0, 219, 0, 527,
	646, 689, 478, 223, 247, 248, 251, 1360, 298, 302,
	310, 313, 323, 324, 334, 389, 444, 472, 468, 477,
	1456, 613, 637, 651, 664, 670, 671, 673, 674, 675,
	676, 677, 680, 678, 432, 332, 523, 355, 395, 1445,
	1493, 450, 499, 254, 641, 524, 243, 607, 421, 430,
	262, 264, 263, 238, 515, 612, 249, 269, 210, 1354,
	1359, 1352, 0, 273, 274, 1426, 608, 1355, 1353, 1415,
	1416, 1356, 1484, 1485, 1486, 1470, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 685, 540, 546, 541, 542, 543,
	544, 545, 0, 547, 1449, 1348, 0, 1357, 1358, 422,
	1458, 626, 627, 708, 406, 513, 638, 357, 371, 374,
	363, 383, 0, 384, 359, 360, 365, 368, 369, 370,
	375, 376, 380, 386, 266, 221, 413, 423, 611, 333,
	227, 228, 229, 556, 557, 558, 559, 655, 656, 660,
	216, 489, 490, 491, 492, 311, 649, 329, 495, 494,
	353, 354, 401, 475, 572, 574, 585, 589, 591, 593,
	599, 602, 573, 575, 586, 590, 592, 594, 600, 603,
	562, 564, 566, 568, 581, 580, 577, 605, 606, 583,
	588, 567, 579, 584, 597, 604, 601, 561, 565, 569,
	578, 596, 595, 576, 587, 598, 582, 570, 563, 571,
	1419, 207, 232, 390, 1489, 481, 307, 686, 653, 511,
	648, 217, 234, 1351, 281, 1364, 1373, 0, 1380, 1388,
	1389, 1403, 1406, 1407, 1408, 1409, 1427, 1428, 1430, 1439,
	1441, 1444, 1446, 1453, 1471, 1492, 209, 211, 220, 233,
	245, 250, 257, 280, 295, 297, 304, 317, 330, 331,
	340, 341, 344, 350, 402, 409, 410, 411, 412, 434,
	435, 436, 439, 442, 443, 446, 448, 449, 452, 457,
	461, 462, 463, 465, 467, 469, 482, 487, 501, 502,
	503, 504, 505, 508, 509, 516, 517, 518, 519, 520,
	528, 529, 534, 535, 536, 537, 548, 621, 623, 640,
	661, 668, 507, 407, 455, 479, 614, 1436, 1397, 320,
	321, 470, 471, 335, 336, 682, 683, 319, 635, 669,
	632, 681, 663, 464, 400, 1418, 1424, 403, 300, 325,
	342, 1433, 652, 530, 239, 493, 309, 268, 1452, 1454,
	222, 260, 242, 278, 293, 296, 346, 414, 424, 454,
	460, 315, 290, 258, 486, 255, 512, 551, 552, 553,
	555, 418, 285, 459, 1414, 1443, 398, 609, 610, 338,
	1478, 1457, 560, 0, 1398, 1481, 1363, 1384, 1491, 1387,
	1390, 1435, 1338, 1413, 441, 1381, 1367, 1333, 1375, 1334,
	1365, 1400, 289, 1362, 1459, 1417, 1480, 388, 286, 1340,
	1331, 215, 533, 1368, 456, 1386, 214, 1438, 514, 271,
	399, 396, 618, 301, 292, 288, 267, 339, 408, 453,
	550, 447, 1487, 392, 1423, 654, 525, 425, 0, 0,
	0, 1464, 1463, 1391, 1402, 1469, 1411, 1450, 1396, 1437,
	1350, 1422, 1482, 1382, 1432, 1483, 345, 265, 347, 213,
	438, 526, 305, 0, 0, 0, 0, 0, 539, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	0, 0, 259, 0, 0, 0, 373, 382, 381, 361,
	362, 364, 366, 372, 379, 385, 358, 367, 1378, 1429,
	644, 1476, 1379, 1431, 284, 343, 291, 283, 615, 1488,
	1468, 1337, 1410, 1475, 1405, 631, 0, 0, 241, 1479,
	1404, 0, 1434, 0, 1494, 1332, 1425, 0, 1335, 1339,
	1490, 1473, 1371, 1372, 294, 0, 0, 0, 0, 0,
	0, 0, 1401, 1412, 1447, 1451, 1394, 0, 419, 0,
	0, 0, 0, 0, 3367, 0, 1369, 0, 1421, 0,
	0, 0, 1344, 1336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1399, 0, 0, 0,
	0, 1349, 0, 1370, 1448, 0, 1330, 316, 1341, 426,
	276, 0, 480, 1361, 322, 337, 1347, 1376, 1477, 1465,
	1466, 1467, 1346, 1455, 1472, 1395, 665, 1474, 1393, 1392,
	1442, 1345, 1462, 1385, 387, 1343, 352, 208, 236, 0,
	1383, 437, 488, 500, 1461, 1460, 1366, 1377, 272, 1374,
	498, 451, 639, 246, 303, 485, 458, 496, 466, 306,
	1420, 1440, 497, 394, 620, 476, 636, 666, 667, 282,
	431, 650, 554, 659, 684, 237, 279, 445, 538, 642,
	522, 420, 616, 617, 351, 521, 314, 212, 391, 672,
	235, 506, 393, 256, 244, 622, 647, 318, 270, 308,
	483, 0, 679, 224, 549, 633, 253, 510, 0, 0,
	687, 261, 532, 645, 634, 226, 629, 531, 416, 348,
	349, 225, 0, 484, 287, 312, 0, 0, 277, 440,
	624, 625, 275, 688, 240, 658, 231, 1342, 657, 433,
	619, 630, 417, 405, 230, 628, 415, 404, 356, 377,
	378, 299, 327, 473, 397, 474, 326, 328, 428, 427,
	429, 218, 643, 662, 0, 219, 0, 527, 646, 689,
	478, 223, 247, 248, 251, 1360, 298, 302, 310, 313,
	323, 324, 334, 389, 444, 472, 468, 477, 1456, 613,
	637, 651, 664, 670, 671, 673, 674, 675, 676, 677,
	680, 678, 432, 332, 523, 355, 395, 1445, 1493, 450,
	499, 254, 641, 524, 243, 607, 421, 430, 262, 264,
	263, 238, 515, 612, 249, 269, 210, 1354, 1359, 1352,
	0, 273, 274, 1426, 608, 1355, 1353, 1415, 1416, 1356,
	1484, 1485, 1486, 1470, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 685, 540, 546, 541, 542, 543, 544, 545,
	0, 547, 1449, 1348, 0, 1357, 1358, 422, 1458, 626,
	627, 708, 406, 513, 638, 357, 371, 374, 363, 383,
	0, 384, 359, 360, 365, 368, 369, 370, 375, 376,
	380, 386, 266, 221, 413, 423, 611, 333, 227, 228,
	229, 556, 557, 558, 559, 655, 656, 660, 216, 489,
	490, 491, 492, 311, 649, 329, 495, 494, 353, 354,
	401, 475, 572, 574, 585, 589, 591, 593, 599, 602,
	573, 575, 586, 590, 592, 594, 600, 603, 562, 564,
	566, 568, 581, 580, 577, 605, 606, 583, 588, 567,
	579, 584, 597, 604, 601, 561, 565, 569, 578, 596,
	595, 576, 587, 598, 582, 570, 563, 571, 1419, 207,
	232, 390, 1489, 481, 307, 686, 653, 511, 648, 217,
	234, 1351, 281, 1364, 1373, 0, 1380, 1388, 1389, 1403,
	1406, 1407, 1408, 1409, 1427, 1428, 1430, 1439, 1441, 1444,
	1446, 1453, 1471, 1492, 209, 211, 220, 233, 245, 250,
	257, 280, 295, 297, 304, 317, 330, 331, 340, 341,
	344, 350, 402, 409, 410, 411, 412, 434, 435, 436,
	439, 442, 443, 446, 448, 449, 452, 457, 461, 462,
	463, 465, 467, 469, 482, 487, 501, 502, 503, 504,
	505, 508, 509, 516, 517, 518, 519, 520, 528, 529,
	534, 535, 536, 537, 548, 621, 623, 640, 661, 668,
	507, 407, 455, 479, 614, 1436, 1397, 320, 321, 470,
	471, 335, 336, 682, 683, 319, 635, 669, 632, 681,
	663, 464, 400, 1418, 1424, 403, 300, 325, 342, 1433,
	652, 530, 239, 493, 309, 268, 1452, 1454, 222, 260,
	242, 278, 293, 296, 346, 414, 424, 454, 460, 315,
	290, 258, 486, 255, 512, 551, 552, 553, 555, 418,
	285, 459, 1414, 1443, 398, 609, 610, 338, 1478, 1457,
	560, 0, 1398, 1481, 1363, 1384, 1491, 1387, 1390, 1435,
	1338, 1413, 441, 1381, 1367, 1333, 1375, 1334, 1365, 1400,
	289, 1362, 1459, 1417, 1480, 388, 286, 1340, 1331, 215,
	533, 1368, 456, 1386, 214, 1438, 514, 271, 399, 396,
	618, 301, 292, 288, 267, 339, 408, 453, 550, 447,
	1487, 392, 1423, 654, 525, 425, 0, 0, 0, 1464,
	1463, 1391, 1402, 1469, 1411, 1450, 1396, 1437, 1350, 1422,
	1482, 1382, 1432, 1483, 345, 265, 347, 213, 438, 526,
	305, 0, 0, 0, 0, 0, 539, 760, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 0, 0,
	259, 0, 0, 0, 373, 382, 381, 361, 362, 364,
	366, 372, 379, 385, 358, 367, 1378, 1429, 644, 1476,
	1379, 1431, 284, 343, 291, 283, 615, 1488, 1468, 1337,
	1410, 1475, 1405, 631, 0, 0, 241, 1479, 1404, 0,
	1434, 0, 1494, 1332, 1425, 0, 1335, 1339, 1490, 1473,
	1371, 1372, 294, 0, 0, 0, 0, 0, 0, 0,
	1401, 1412, 1447, 1451, 1394, 0, 419, 0, 0, 0,
	0, 0, 3328, 0, 1369, 0, 1421, 0, 0, 0,
	1344, 1336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1399, 0, 0, 0, 0, 1349,
	0, 1370, 1448, 0, 1330, 316, 1341, 426, 276, 0,
	480, 1361, 322, 337, 1347, 1376, 1477, 1465, 1466, 1467,
	1346, 1455, 1472, 1395, 665, 1474, 1393, 1392, 1442, 1345,
	1462, 1385, 387, 1343, 352, 208, 236, 0, 1383, 437,
	488, 500, 1461, 1460, 1366, 1377, 272, 1374, 498, 451,
	639, 246, 303, 485, 458, 496, 466, 306, 1420, 1440,
	497, 394, 620, 476, 636, 666, 667, 282, 431, 650,
	554, 659, 684, 237, 279, 445, 538, 642, 522, 420,
	616, 617, 351, 521, 314, 212, 391, 672, 235, 506,
	393, 256, 244, 622, 647, 318, 270, 308, 483, 0,
	679, 224, 549, 633, 253, 510, 0, 0, 687, 261,
	532, 645, 634, 226, 629, 531, 416, 348, 349, 225,
	0, 484, 287, 312, 0, 0, 277, 440, 624, 625,
	275, 688, 240, 658, 231, 1342, 657, 433, 619, 630,
	417, 405, 230, 628, 415, 404, 356, 377, 378, 299,
	327, 473, 397, 474, 326, 328, 428, 427, 429, 218,
	643, 662, 0, 219, 0, 527, 646, 689, 478, 223,
	247, 248, 251, 1360, 298, 302, 310, 313, 323, 324,
	334, 389, 444, 472, 468, 477, 1456, 613, 637, 651,
	664, 670, 671, 673, 674, 675, 676, 677, 680, 678,
	432, 332, 523, 355, 395, 1445, 1493, 450, 499, 254,
	641, 524, 243, 607, 421, 430, 262, 264, 263, 238,
	515, 612, 249, 269, 210, 1354, 1359, 1352, 0, 273,
	274, 1426, 608, 1355, 1353, 1415, 1416, 1356, 1484, 1485,
	1486, 1470, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	685, 540, 546, 541, 542, 543, 544, 545, 0, 547,
	1449, 1348, 0, 1357, 1358, 422, 1458, 626, 627, 708,
	406, 513, 638, 357, 371, 374, 363, 383, 0, 384,
	359, 360, 365, 368, 369, 370, 375, 376, 380, 386,
	266, 221, 413, 423, 611, 333, 227, 228, 229, 556,
	557, 558, 559, 655, 656, 660, 216, 489, 490, 491,
	492, 311, 649, 329, 495, 494, 353, 354, 401, 475,
	572, 574, 585, 589, 591, 593, 599, 602, 573, 575,
	586, 590, 592, 594, 600, 603, 562, 564, 566, 568,
	581, 580, 577, 605, 606, 583, 588, 567, 579, 584,
	597, 604, 601, 561, 565, 569, 578, 596, 595, 576,
	587, 598, 582, 570, 563, 571, 1419, 207, 232, 390,
	1489, 481, 307, 686, 653, 511, 648, 217, 234, 1351,
	281, 1364, 1373, 0, 1380, 1388, 1389, 1403, 1406, 1407,
	1408, 1409, 1427, 1428, 1430, 1439, 1441, 1444, 1446, 1453,
	1471, 1492, 209, 211, 220, 233, 245, 250, 257, 280,
	295, 297, 304, 317, 330, 331, 340, 341, 344, 350,
	402, 409, 410, 411, 412, 434, 435, 436, 439, 442,
	443, 446, 448, 449, 452, 457, 461, 462, 463, 465,
	467, 469, 482, 487, 501, 502, 503, 504, 505, 508,
	509, 516, 517, 518, 519, 520, 528, 529, 534, 535,
	536, 537, 548, 621, 623, 640, 661, 668, 507, 407,
	455, 479, 614, 1436, 1397, 320, 321, 470, 471, 335,
	336, 682, 683, 319, 635, 669, 632, 681, 663, 464,
	400, 1418, 1424, 403, 300, 325, 342, 1433, 652, 530,
	239, 493, 309, 268, 1452, 1454, 222, 260, 242, 278,
	293, 296, 346, 414, 424, 454, 460, 315, 290, 258,
	486, 255, 512, 551, 552, 553, 555, 418, 285, 459,
	1414, 1443, 398, 609, 610, 338, 1478, 1457, 560, 0,
	1398, 1481, 1363, 1384, 1491, 1387, 1390, 1435, 1338, 1413,
	441, 1381, 1367, 1333, 1375, 1334, 1365, 1400, 289, 1362,
	1459, 1417, 1480, 388, 286, 1340, 1331, 215, 533, 1368,
	456, 1386, 214, 1438, 514, 271, 399, 396, 618, 301,
	292, 288, 267, 339, 408, 453, 550, 447, 1487, 392,
	1423, 654, 525, 425, 0, 0, 0, 1464, 1463, 1391,
	1402, 1469, 1411, 1450, 1396, 1437, 1350, 1422, 1482, 1382,
	1432, 1483, 345, 265, 347, 213, 438, 526, 305, 0,
	0, 0, 0, 0, 539, 995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 0, 0, 259, 0,
	0, 0, 373, 382, 381, 361, 362, 364, 366, 372,
	379, 385, 358, 367, 1378, 1429, 644, 1476, 1379, 1431,
	284, 343, 291, 283, 615, 1488, 1468, 1337, 1410, 1475,
	1405, 631, 0, 0, 241, 1479, 1404, 0, 1434, 0,
	1494, 1332, 1425, 0, 1335, 1339, 1490, 1473, 1371, 1372,
	294, 0, 0, 0, 0, 0, 0, 0, 1401, 1412,
	1447, 1451, 1394, 0, 419, 0, 0, 0, 0, 0,
	2496, 0, 1369, 0, 1421, 0, 0, 0, 1344, 1336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1399, 0, 0, 0, 0, 1349, 0, 1370,
	1448, 0, 1330, 316, 1341, 426, 276, 0, 480, 1361,
	322, 337, 1347, 1376, 1477, 1465, 1466, 1467, 1346, 1455,
	1472, 1395, 665, 1474, 1393, 1392, 1442, 1345, 1462, 1385,
	387, 1343, 352, 208, 236, 0, 1383, 437, 488, 500,
	1461, 1460, 1366, 1377, 272, 1374, 498, 451, 639, 246,
	303, 485, 458, 496, 466, 306, 1420, 1440, 497, 394,
	620, 476, 636, 666, 667, 282, 431, 650, 554, 659,
	684, 237, 279, 445, 538, 642, 522, 420, 616, 617,
	351, 521, 314, 212, 391, 672, 235, 506, 393, 256,
	244, 622, 647, 318, 270, 308, 483, 0, 679, 224,
	549, 633, 253, 510, 0, 0, 687, 261, 532, 645,
	634, 226, 629, 531, 416, 348, 349, 225, 0, 484,
	287, 312, 0, 0, 277, 440, 624, 625, 275, 688,
	240, 658, 231, 1342, 657, 433, 619, 630, 417, 405,
	230, 628, 415, 404, 356, 377, 378, 299, 327, 473,
	397, 474, 326, 328, 428, 427, 429, 218, 643, 662,
	0, 219, 0, 527, 646, 689, 478, 223, 247, 248,
	251, 1360, 298, 302, 310, 313, 323, 324, 334, 389,
	444, 472, 468, 477, 1456, 613, 637, 651, 664, 670,
	671, 673, 674, 675, 676, 677, 680, 678, 432, 332,
	523, 355, 395, 1445, 1493, 450, 499, 254, 641, 524,
	243, 607, 421, 430, 262, 264, 263, 238, 515, 612,
	249, 269, 210, 1354, 1359, 1352, 0, 273, 274, 1426,
	608, 1355, 1353, 1415, 1416, 1356, 1484, 1485, 1486, 1470,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 685, 540,
	546, 541, 542, 543, 544, 545, 0, 547, 1449, 1348,
	0, 1357, 1358, 422, 1458, 626, 627, 708, 406, 513,
	638, 357, 371, 374, 363, 383, 0, 384, 359, 360,
	365, 368, 369, 370, 375, 376, 380, 386, 266, 221,
	413, 423, 611, 333, 227, 228, 229, 556, 557, 558,
	559, 655, 656, 660, 216, 489, 490, 491, 492, 311,
	649, 329, 495, 494, 353, 354, 401, 475, 572, 574,
	585, 589, 591, 593, 599, 602, 573, 575, 586, 590,
	592, 594, 600, 603, 562, 564, 566, 568, 581, 580,
	577, 605, 606, 583, 588, 567, 579, 584, 597, 604,
	601, 561, 565, 569, 578, 596, 595, 576, 587, 598,
	582, 570, 563, 571, 1419, 207, 232, 390, 1489, 481,
	307, 686, 653, 511, 648, 217, 234, 1351, 281, 1364,
	1373, 0, 1380, 1388, 1389, 1403, 1406, 1407, 1408, 1409,
	1427, 1428, 1430, 1439, 1441, 1444, 1446, 1453, 1471, 1492,
	209, 211, 220, 233, 245, 250, 257, 280, 295, 297,
	304, 317, 330, 331, 340, 341, 344, 350, 402, 409,
	410, 411, 412, 434, 435, 436, 439, 442, 443, 446,
	448, 449, 452, 457, 461, 462, 463, 465, 467, 469,
	482, 487, 501, 502, 503, 504, 505, 508, 509, 516,
	517, 518, 519, 520, 528, 529, 534, 535, 536, 537,
	548, 621, 623, 640, 661, 668, 507, 407, 455, 479,
	614, 1436, 1397, 320, 321, 470, 471, 335, 336, 682,
	683, 319, 635, 669, 632, 681, 663, 464, 400, 1418,
	1424, 403, 300, 325, 342, 1433, 652, 530, 239, 493,
	309, 268, 1452, 1454, 222, 260, 242, 278, 293, 296,
	346, 414, 424, 454, 460, 315, 290, 258, 486, 255,
	512, 551, 552, 553, 555, 418, 285, 459, 1414, 1443,
	398, 609, 610, 338, 1478, 1457, 560, 0, 1398, 1481,
	1363, 1384, 1491, 1387, 1390, 1435, 1338, 1413, 441, 1381,
	1367, 1333, 1375, 1334, 1365, 1400, 289, 1362, 1459, 1417,
	1480, 388, 286, 1340, 1331, 215, 533, 1368, 456, 1386,
	214, 1438, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 1487, 392, 1423, 654,
	525, 425, 0, 0, 0, 1464, 1463, 1391, 1402, 1469,
	1411, 1450, 1396, 1437, 1350, 1422, 1482, 1382, 1432, 1483,
	345, 265, 347, 213, 438, 526, 305, 0, 101, 0,
	0, 0, 539, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 1378, 1429, 644, 1476, 1379, 1431, 284, 343,
	291, 283, 615, 1488, 1468, 1337, 1410, 1475, 1405, 631,
	0, 0, 241, 1479, 1404, 0, 1434, 0, 1494, 1332,
	1425, 0, 1335, 1339, 1490, 1473, 1371, 1372, 294, 0,
	0, 0, 0, 0, 0, 0, 1401, 1412, 1447, 1451,
	1394, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	1369, 0, 1421, 0, 0, 0, 1344, 1336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1399, 0, 0, 0, 0, 1349, 0, 1370, 1448, 0,
	1330, 316, 1341, 426, 276, 0, 480, 1361, 322, 337,
	1347, 1376, 1477, 1465, 1466, 1467, 1346, 1455, 1472, 1395,
	665, 1474, 1393, 1392, 1442, 1345, 1462, 1385, 387, 1343,
	352, 208, 236, 0, 1383, 437, 488, 500, 1461, 1460,
	1366, 1377, 272, 1374, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 1420, 1440, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 1342, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 1360,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 1456, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 1445, 1493, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 1354, 1359, 1352, 0, 273, 274, 1426, 608, 1355,
	1353, 1415, 1416, 1356, 1484, 1485, 1486, 1470, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 1449, 1348, 0, 1357,
	1358, 422, 1458, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 1419, 207, 232, 390, 1489, 481, 307, 686,
	653, 511, 648, 217, 234, 1351, 281, 1364, 1373, 0,
	1380, 1388, 1389, 1403, 1406, 1407, 1408, 1409, 1427, 1428,
	1430, 1439, 1441, 1444, 1446, 1453, 1471, 1492, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 1436,
	1397, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 1418, 1424, 403,
	300, 325, 342, 1433, 652, 530, 239, 493, 309, 268,
	1452, 1454, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 1414, 1443, 398, 609,
	610, 338, 1478, 1457, 560, 0, 1398, 1481, 1363, 1384,
	1491, 1387, 1390, 1435, 1338, 1413, 441, 1381, 1367, 1333,
	1375, 1334, 1365, 1400, 289, 1362, 1459, 1417, 1480, 388,
	286, 1340, 1331, 215, 533, 1368, 456, 1386, 214, 1438,
	514, 271, 399, 396, 618, 301, 292, 288, 267, 339,
	408, 453, 550, 447, 1487, 392, 1423, 654, 525, 425,
	0, 0, 0, 1464, 1463, 1391, 1402, 1469, 1411, 1450,
	1396, 1437, 1350, 1422, 1482, 1382, 1432, 1483, 345, 265,
	347, 213, 438, 526, 305, 0, 0, 0, 0, 0,
	539, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 0, 0, 259, 0, 0, 0, 373, 382,
	381, 361, 362, 364, 366, 372, 379, 385, 358, 367,
	1378, 1429, 644, 1476, 1379, 1431, 284, 343, 291, 283,
	615, 1488, 1468, 1337, 1410, 1475, 1405, 631, 0, 0,
	241, 1479, 1404, 0, 1434, 0, 1494, 1332, 1425, 0,
	1335, 1339, 1490, 1473, 1371, 1372, 294, 0, 0, 0,
	0, 0, 0, 0, 1401, 1412, 1447, 1451, 1394, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 1369, 0,
	1421, 0, 0, 0, 1344, 1336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1399, 0,
	0, 0, 0, 1349, 0, 1370, 1448, 0, 1330, 316,
	1341, 426, 276, 0, 480, 1361, 322, 337, 1347, 1376,
	1477, 1465, 1466, 1467, 1346, 1455, 1472, 1395, 665, 1474,
	1393, 1392, 1442, 1345, 1462, 1385, 387, 1343, 352, 208,
	236, 0, 1383, 437, 488, 500, 1461, 1460, 1366, 1377,
	272, 1374, 498, 451, 639, 246, 303, 485, 458, 496,
	466, 306, 1420, 1440, 497, 394, 620, 476, 636, 666,
	667, 282, 431, 650, 554, 659, 684, 237, 279, 445,
	538, 642, 522, 420, 616, 617, 351, 521, 314, 212,
	391, 672, 235, 506, 393, 256, 244, 622, 647, 318,
	270, 308, 483, 0, 679, 224, 549, 633, 253, 510,
	0, 0, 687, 261, 532, 645, 634, 226, 629, 531,
	416, 348, 349, 225, 0, 484, 287, 312, 0, 0,
	277, 440, 624, 625, 275, 688, 240, 658, 231, 1342,
	657, 433, 619, 630, 417, 405, 230, 628, 415, 404,
	356, 377, 378, 299, 327, 473, 397, 474, 326, 328,
	428, 427, 429, 218, 643, 662, 0, 219, 0, 527,
	646, 689, 478, 223, 247, 248, 251, 1360, 298, 302,
	310, 313, 323, 324, 334, 389, 444, 472, 468, 477,
	1456, 613, 637, 651, 664, 670, 671, 673, 674, 675,
	676, 677, 680, 678, 432, 332, 523, 355, 395, 1445,
	1493, 450, 499, 254, 641, 524, 243, 607, 421, 430,
	262, 264, 263, 238, 515, 612, 249, 269, 210, 1354,
	1359, 1352, 0, 273, 274, 1426, 608, 1355, 1353, 1415,
	1416, 1356, 1484, 1485, 1486, 1470, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 685, 540, 546, 541, 542, 543,
	544, 545, 0, 547, 1449, 1348, 0, 1357, 1358, 422,
	1458, 626, 627, 708, 406, 513, 638, 357, 371, 374,
	363, 383, 0, 384, 359, 360, 365, 368, 369, 370,
	375, 376, 380, 386, 266, 221, 413, 423, 611, 333,
	227, 228, 229, 556, 557, 558, 559, 655, 656, 660,
	216, 489, 490, 491, 492, 311, 649, 329, 495, 494,
	353, 354, 401, 475, 572, 574, 585, 589, 591, 593,
	599, 602, 573, 575, 586, 590, 592, 594, 600, 603,
	562, 564, 566, 568, 581, 580, 577, 605, 606, 583,
	588, 567, 579, 584, 597, 604, 601, 561, 565, 569,
	578, 596, 595, 576, 587, 598, 582, 570, 563, 571,
	1419, 207, 232, 390, 1489, 481, 307, 686, 653, 511,
	648, 217, 234, 1351, 281, 1364, 1373, 0, 1380, 1388,
	1389, 1403, 1406, 1407, 1408, 1409, 1427, 1428, 1430, 1439,
	1441, 1444, 1446, 1453, 1471, 1492, 209, 211, 220, 233,
	245, 250, 257, 280, 295, 297, 304, 317, 330, 331,
	340, 341, 344, 350, 402, 409, 410, 411, 412, 434,
	435, 436, 439, 442, 443, 446, 448, 449, 452, 457,
	461, 462, 463, 465, 467, 469, 482, 487, 501, 502,
	503, 504, 505, 508, 509, 516, 517, 518, 519, 520,
	528, 529, 534, 535, 536, 537, 548, 621, 623, 640,
	661, 668, 507, 407, 455, 479, 614, 1436, 1397, 320,
	321, 470, 471, 335, 336, 682, 683, 319, 635, 669,
	632, 681, 663, 464, 400, 1418, 1424, 403, 300, 325,
	342, 1433, 652, 530, 239, 493, 309, 268, 1452, 1454,
	222, 260, 242, 278, 293, 296, 346, 414, 424, 454,
	460, 315, 290, 258, 486, 255, 512, 551, 552, 553,
	555, 418, 285, 459, 1414, 1443, 398, 609, 610, 338,
	1478, 1457, 560, 0, 1398, 1481, 1363, 1384, 1491, 1387,
	1390, 1435, 1338, 1413, 441, 1381, 1367, 1333, 1375, 1334,
	1365, 1400, 289, 1362, 1459, 1417, 1480, 388, 286, 1340,
	1331, 215, 533, 1368, 456, 1386, 214, 1438, 514, 271,
	399, 396, 618, 301, 292, 288, 267, 339, 408, 453,
	550, 447, 1487, 392, 1423, 654, 525, 425, 0, 0,
	0, 1464, 1463, 1391, 1402, 1469, 1411, 1450, 1396, 1437,
	1350, 1422, 1482, 1382, 1432, 1483, 345, 265, 347, 213,
	438, 526, 305, 0, 0, 0, 0, 0, 539, 760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	0, 0, 259, 0, 0, 0, 373, 382, 381, 361,
	362, 364, 366, 372, 379, 385, 358, 367, 1378, 1429,
	644, 1476, 1379, 1431, 284, 343, 291, 283, 615, 1488,
	1468, 1337, 1410, 1475, 1405, 631, 0, 0, 241, 1479,
	1404, 0, 1434, 0, 1494, 1332, 1425, 0, 1335, 1339,
	1490, 1473, 1371, 1372, 294, 0, 0, 0, 0, 0,
	0, 0, 1401, 1412, 1447, 1451, 1394, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 1369, 0, 1421, 0,
	0, 0, 1344, 1336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1399, 0, 0, 0,
	0, 1349, 0, 1370, 1448, 0, 1330, 316, 1341, 426,
	276, 0, 480, 1361, 322, 337, 1347, 1376, 1477, 1465,
	1466, 1467, 1346, 1455, 1472, 1395, 665, 1474, 1393, 1392,
	1442, 1345, 1462, 1385, 387, 1343, 352, 208, 236, 0,
	1383, 437, 488, 500, 1461, 1460, 1366, 1377, 272, 1374,
	498, 451, 639, 246, 303, 485, 458, 496, 466, 306,
	1420, 1440, 497, 394, 620, 476, 636, 666, 667, 282,
	431, 650, 554, 659, 684, 237, 279, 445, 538, 642,
	522, 420, 616, 617, 351, 521, 314, 212, 391, 672,
	235, 506, 393, 256, 244, 622, 647, 318, 270, 308,
	483, 0, 679, 224, 549, 633, 253, 510, 0, 0,
	687, 261, 532, 645, 634, 226, 629, 531, 416, 348,
	349, 225, 0, 484, 287, 312, 0, 0, 277, 440,
	624, 625, 275, 688, 240, 658, 231, 1342, 657, 433,
	619, 630, 417, 405, 230, 628, 415, 404, 356, 377,
	378, 299, 327, 473, 397, 474, 326, 328, 428, 427,
	429, 218, 643, 662, 0, 219, 0, 527, 646, 689,
	478, 223, 247, 248, 251, 1360, 298, 302, 310, 313,
	323, 324, 334, 389, 444, 472, 468, 477, 1456, 613,
	637, 651, 664, 670, 671, 673, 674, 675, 676, 677,
	680, 678, 432, 332, 523, 355, 395, 1445, 1493, 450,
	499, 254, 641, 524, 243, 607, 421, 430, 262, 264,
	263, 238, 515, 612, 249, 269, 210, 1354, 1359, 1352,
	0, 273, 274, 1426, 608, 1355, 1353, 1415, 1416, 1356,
	1484, 1485, 1486, 1470, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 685, 540, 546, 541, 542, 543, 544, 545,
	0, 547, 1449, 1348, 0, 1357, 1358, 422, 1458, 626,
	627, 708, 406, 513, 638, 357, 371, 374, 363, 383,
	0, 384, 359, 360, 365, 368, 369, 370, 375, 376,
	380, 386, 266, 221, 413, 423, 611, 333, 227, 228,
	229, 556, 557, 558, 559, 655, 656, 660, 216, 489,
	490, 491, 492, 311, 649, 329, 495, 494, 353, 354,
	401, 475, 572, 574, 585, 589, 591, 593, 599, 602,
	573, 575, 586, 590, 592, 594, 600, 603, 562, 564,
	566, 568, 581, 580, 577, 605, 606, 583, 588, 567,
	579, 584, 597, 604, 601, 561, 565, 569, 578, 596,
	595, 576, 587, 598, 582, 570, 563, 571, 1419, 207,
	232, 390, 1489, 481, 307, 686, 653, 511, 648, 217,
	234, 1351, 281, 1364, 1373, 0, 1380, 1388, 1389, 1403,
	1406, 1407, 1408, 1409, 1427, 1428, 1430, 1439, 1441, 1444,
	1446, 1453, 1471, 1492, 209, 211, 220, 233, 245, 250,
	257, 280, 295, 297, 304, 317, 330, 331, 340, 341,
	344, 350, 402, 409, 410, 411, 412, 434, 435, 436,
	439, 442, 443, 446, 448, 449, 452, 457, 461, 462,
	463, 465, 467, 469, 482, 487, 501, 502, 503, 504,
	505, 508, 509, 516, 517, 518, 519, 520, 528, 529,
	534, 535, 536, 537, 548, 621, 623, 640, 661, 668,
	507, 407, 455, 479, 614, 1436, 1397, 320, 321, 470,
	471, 335, 336, 682, 683, 319, 635, 669, 632, 681,
	663, 464, 400, 1418, 1424, 403, 300, 325, 342, 1433,
	652, 530, 239, 493, 309, 268, 1452, 1454, 222, 260,
	242, 278, 293, 296, 346, 414, 424, 454, 460, 315,
	290, 258, 486, 255, 512, 551, 552, 553, 555, 418,
	285, 459, 1414, 1443, 398, 609, 610, 338, 1478, 1457,
	560, 0, 1398, 1481, 1363, 1384, 1491, 1387, 1390, 1435,
	1338, 1413, 441, 1381, 1367, 1333, 1375, 1334, 1365, 1400,
	289, 1362, 1459, 1417, 1480, 388, 286, 1340, 1331, 215,
	533, 1368, 456, 1386, 214, 1438, 514, 271, 399, 396,
	618, 301, 292, 288, 267, 339, 408, 453, 550, 447,
	1487, 392, 1423, 654, 525, 425, 0, 0, 0, 1464,
	1463, 1391, 1402, 1469, 1411, 1450, 1396, 1437, 1350, 1422,
	1482, 1382, 1432, 1483, 345, 265, 347, 213, 438, 526,
	305, 0, 0, 0, 0, 0, 539, 995, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 0, 0,
	259, 0, 0, 0, 373, 382, 381, 361, 362, 364,
	366, 372, 379, 385, 358, 367, 1378, 1429, 644, 1476,
	1379, 1431, 284, 343, 291, 283, 615, 1488, 1468, 1337,
	1410, 1475, 1405, 631, 0, 0, 241, 1479, 1404, 0,
	1434, 0, 1494, 1332, 1425, 0, 1335, 1339, 1490, 1473,
	1371, 1372, 294, 0, 0, 0, 0, 0, 0, 0,
	1401, 1412, 1447, 1451, 1394, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 1369, 0, 1421, 0, 0, 0,
	1344, 1336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1399, 0, 0, 0, 0, 1349,
	0, 1370, 1448, 0, 1330, 316, 1341, 426, 276, 0,
	480, 1361, 322, 337, 1347, 1376, 1477, 1465, 1466, 1467,
	1346, 1455, 1472, 1395, 665, 1474, 1393, 1392, 1442, 1345,
	1462, 1385, 387, 1343, 352, 208, 236, 0, 1383, 437,
	488, 500, 1461, 1460, 1366, 1377, 272, 1374, 498, 451,
	639, 246, 303, 485, 458, 496, 466, 306, 1420, 1440,
	497, 394, 620, 476, 636, 666, 667, 282, 431, 650,
	554, 659, 684, 237, 279, 445, 538, 642, 522, 420,
	616, 617, 351, 521, 314, 212, 391, 672, 235, 506,
	393, 256, 244, 622, 647, 318, 270, 308, 483, 0,
	679, 224, 549, 633, 253, 510, 0, 0, 687, 261,
	532, 645, 634, 226, 629, 531, 416, 348, 349, 225,
	0, 484, 287, 312, 0, 0, 277, 440, 624, 625,
	275, 688, 240, 658, 231, 1342, 657, 433, 619, 630,
	417, 405, 230, 628, 415, 404, 356, 377, 378, 299,
	327, 473, 397, 474, 326, 328, 428, 427, 429, 218,
	643, 662, 0, 219, 0, 527, 646, 689, 478, 223,
	247, 248, 251, 1360, 298, 302, 310, 313, 323, 324,
	334, 389, 444, 472, 468, 477, 1456, 613, 637, 651,
	664, 670, 671, 673, 674, 675, 676, 677, 680, 678,
	432, 332, 523, 355, 395, 1445, 1493, 450, 499, 254,
	641, 524, 243, 607, 421, 430, 262, 264, 263, 238,
	515, 612, 249, 269, 210, 1354, 1359, 1352, 0, 273,
	274, 1426, 608, 1355, 1353, 1415, 1416, 1356, 1484, 1485,
	1486, 1470, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	685, 540, 546, 541, 542, 543, 544, 545, 0, 547,
	1449, 1348, 0, 1357, 1358, 422, 1458, 626, 627, 708,
	406, 513, 638, 357, 371, 374, 363, 383, 0, 384,
	359, 360, 365, 368, 369, 370, 375, 376, 380, 386,
	266, 221, 413, 423, 611, 333, 227, 228, 229, 556,
	557, 558, 559, 655, 656, 660, 216, 489, 490, 491,
	492, 311, 649, 329, 495, 494, 353, 354, 401, 475,
	572, 574, 585, 589, 591, 593, 599, 602, 573, 575,
	586, 590, 592, 594, 600, 603, 562, 564, 566, 568,
	581, 580, 577, 605, 606, 583, 588, 567, 579, 584,
	597, 604, 601, 561, 565, 569, 578, 596, 595, 576,
	587, 598, 582, 570, 563, 571, 1419, 207, 232, 390,
	1489, 481, 307, 686, 653, 511, 648, 217, 234, 1351,
	281, 1364, 1373, 0, 1380, 1388, 1389, 1403, 1406, 1407,
	1408, 1409, 1427, 1428, 1430, 1439, 1441, 1444, 1446, 1453,
	1471, 1492, 209, 211, 220, 233, 245, 250, 257, 280,
	295, 297, 304, 317, 330, 331, 340, 341, 344, 350,
	402, 409, 410, 411, 412, 434, 435, 436, 439, 442,
	443, 446, 448, 449, 452, 457, 461, 462, 463, 465,
	467, 469, 482, 487, 501, 502, 503, 504, 505, 508,
	509, 516, 517, 518, 519, 520, 528, 529, 534, 535,
	536, 537, 548, 621, 623, 640, 661, 668, 507, 407,
	455, 479, 614, 1436, 1397, 320, 321, 470, 471, 335,
	336, 682, 683, 319, 635, 669, 632, 681, 663, 464,
	400, 1418, 1424, 403, 300, 325, 342, 1433, 652, 530,
	239, 493, 309, 268, 1452, 1454, 222, 260, 242, 278,
	293, 296, 346, 414, 424, 454, 460, 315, 290, 258,
	486, 255, 512, 551, 552, 553, 555, 418, 285, 459,
	1414, 1443, 398, 609, 610, 338, 560, 0, 813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 800, 0, 0, 0, 289, 805, 0, 0,
	0, 388, 286, 0, 0, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 812, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	807, 808, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 101, 0,
	0, 1061, 539, 995, 784, 961, 999, 1062, 1013, 1014,
	1015, 1000, 0, 252, 1001, 1002, 259, 1003, 0, 960,
	843, 845, 844, 910, 911, 912, 913, 914, 915, 916,
	846, 847, 841, 1008, 644, 1016, 1017, 0, 284, 343,
	291, 283, 615, 0, 0, 2304, 2305, 2306, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	780, 797, 0, 811, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 794, 795, 0, 0,
	0, 0, 955, 0, 796, 0, 0, 804, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059,
	806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 954, 0, 0,
	665, 0, 0, 952, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 1005, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 1006, 1007, 275, 688, 851, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 859, 860, 299, 327, 936, 935, 934,
	326, 328, 932, 933, 931, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	942, 964, 953, 817, 818, 943, 944, 968, 945, 820,
	821, 965, 966, 814, 815, 819, 967, 969, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 956, 803, 802, 0,
	809, 810, 0, 839, 840, 842, 848, 849, 850, 861,
	908, 909, 917, 919, 920, 918, 921, 922, 923, 926,
	927, 928, 929, 924, 925, 930, 822, 826, 823, 824,
	825, 837, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 838, 979, 980, 981, 982, 983, 984, 854,
	858, 857, 855, 856, 852, 853, 880, 879, 881, 882,
	883, 884, 885, 886, 888, 887, 889, 890, 891, 892,
	893, 894, 862, 863, 866, 867, 865, 864, 868, 877,
	878, 869, 870, 871, 872, 873, 874, 876, 875, 895,
	896, 897, 898, 899, 901, 900, 904, 905, 903, 902,
	907, 906, 801, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 970, 281, 971, 0, 0,
	975, 0, 0, 0, 977, 976, 0, 978, 940, 939,
	0, 0, 972, 973, 0, 974, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 985, 986, 987, 988, 989, 990, 991, 992, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	1060, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 0, 0, 398, 609,
	610, 338, 560, 0, 813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 441, 0, 0, 0, 800, 0,
	0, 0, 289, 805, 0, 0, 0, 388, 286, 0,
	0, 215, 533, 0, 456, 0, 214, 0, 514, 271,
	399, 396, 618, 301, 292, 288, 267, 339, 408, 453,
	550, 447, 812, 392, 0, 654, 525, 425, 0, 0,
	0, 0, 0, 0, 0, 0, 807, 808, 0, 0,
	0, 0, 0, 0, 2525, 0, 345, 265, 347, 213,
	438, 526, 305, 0, 101, 0, 0, 1061, 539, 995,
	784, 961, 999, 1062, 1013, 1014, 1015, 1000, 0, 252,
	1001, 1002, 259, 1003, 0, 960, 843, 845, 844, 910,
	911, 912, 913, 914, 915, 916, 846, 847, 841, 1008,
	644, 1016, 1017, 2526, 284, 343, 291, 283, 615, 0,
	0, 0, 0, 0, 0, 631, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 780, 797, 0, 811,
	0, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 794, 795, 0, 0, 0, 0, 955, 0,
	796, 0, 0, 804, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053,
	1054, 1055, 1056, 1057, 1058, 1059, 806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 316, 0, 426,
	276, 0, 480, 0, 322, 337, 0, 0, 0, 0,
	0, 0, 0, 954, 0, 0, 665, 0, 0, 952,
	0, 0, 0, 0, 387, 0, 352, 208, 236, 0,
	0, 437, 488, 500, 0, 0, 0, 0, 1005, 0,
	498, 451, 639, 246, 303, 485, 458, 496, 466, 306,
	0, 0, 497, 394, 620, 476, 636, 666, 667, 282,
	431, 650, 554, 659, 684, 237, 279, 445, 538, 642,
	522, 420, 616, 617, 351, 521, 314, 212, 391, 672,
	235, 506, 393, 256, 244, 622, 647, 318, 270, 308,
	483, 0, 679, 224, 549, 633, 253, 510, 0, 0,
	687, 261, 532, 645, 634, 226, 629, 531, 416, 348,
	349, 225, 0, 484, 287, 312, 0, 0, 277, 440,
	1006, 1007, 275, 688, 851, 658, 231, 0, 657, 433,
	619, 630, 417, 405, 230, 628, 415, 404, 356, 859,
	860, 299, 327, 936, 935, 934, 326, 328, 932, 933,
	931, 218, 643, 662, 0, 219, 0, 527, 646, 689,
	478, 223, 247, 248, 251, 0, 298, 302, 310, 313,
	323, 324, 334, 389, 444, 472, 468, 477, 0, 613,
	637, 651, 664, 670, 671, 673, 674, 675, 676, 677,
	680, 678, 432, 332, 523, 355, 395, 0, 0, 450,
	499, 254, 641, 524, 243, 607, 421, 430, 262, 264,
	263, 238, 515, 612, 249, 269, 942, 964, 953, 817,
	818, 943, 944, 968, 945, 820, 821, 965, 966, 814,
	815, 819, 967, 969, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 685, 540, 546, 541, 542, 543, 544, 545,
	0, 547, 956, 803, 802, 0, 809, 810, 0, 839,
	840, 842, 848, 849, 850, 861, 908, 909, 917, 919,
	920, 918, 921, 922, 923, 926, 927, 928, 929, 924,
	925, 930, 822, 826, 823, 824, 825, 837, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 838, 979,
	980, 981, 982, 983, 984, 854, 858, 857, 855, 856,
	852, 853, 880, 879, 881, 882, 883, 884, 885, 886,
	888, 887, 889, 890, 891, 892, 893, 894, 862, 863,
	866, 867, 865, 864, 868, 877, 878, 869, 870, 871,
	872, 873, 874, 876, 875, 895, 896, 897, 898, 899,
	901, 900, 904, 905, 903, 902, 907, 906, 801, 207,
	232, 390, 0, 481, 307, 686, 653, 511, 648, 217,
	234, 970, 281, 971, 0, 0, 975, 0, 0, 0,
	977, 976, 0, 978, 940, 939, 0, 0, 972, 973,
	0, 974, 0, 0, 209, 211, 220, 233, 245, 250,
	257, 280, 295, 297, 304, 317, 330, 331, 340, 341,
	344, 350, 402, 409, 410, 411, 412, 434, 435, 436,
	439, 442, 443, 446, 448, 449, 452, 457, 461, 462,
	463, 465, 467, 469, 482, 487, 501, 502, 503, 504,
	505, 508, 509, 516, 517, 518, 519, 520, 528, 529,
	534, 535, 536, 537, 548, 621, 623, 640, 661, 668,
	507, 407, 455, 479, 614, 0, 0, 985, 986, 987,
	988, 989, 990, 991, 992, 319, 635, 669, 632, 681,
	663, 464, 400, 0, 0, 403, 300, 325, 342, 0,
	652, 530, 239, 493, 309, 268, 1060, 0, 222, 260,
	242, 278, 293, 296, 346, 414, 424, 454, 460, 315,
	290, 258, 486, 255, 512, 551, 552, 553, 555, 418,
	285, 459, 0, 0, 398, 609, 610, 338, 91, 560,
	0, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 441, 0, 0, 0, 800, 0, 0, 0, 289,
	805, 0, 0, 0, 388, 286, 0, 0, 215, 533,
	0, 456, 0, 214, 0, 514, 271, 399, 396, 618,
	301, 292, 288, 267, 339, 408, 453, 550, 447, 1774,
	392, 0, 654, 525, 425, 0, 0, 0, 0, 0,
	0, 0, 0, 807, 808, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 265, 347, 213, 438, 526, 305,
	0, 101, 0, 0, 1061, 539, 995, 784, 961, 999,
	1062, 1013, 1014, 1015, 1000, 0, 252, 1001, 1002, 259,
	1003, 0, 960, 843, 845, 844, 910, 911, 912, 913,
	914, 915, 916, 846, 847, 841, 1008, 644, 1016, 1017,
	0, 284, 343, 291, 283, 615, 0, 0, 0, 0,
	0, 0, 631, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 780, 797, 0, 811, 0, 0, 0,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 794,
	795, 0, 0, 0, 0, 955, 0, 796, 0, 0,
	804, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1059, 806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 426, 276, 0, 480,
	0, 322, 337, 0, 0, 0, 0, 0, 0, 0,
	954, 0, 0, 665, 0, 0, 952, 0, 0, 0,
	0, 387, 0, 352, 208, 236, 0, 0, 437, 488,
	500, 0, 0, 0, 0, 1005, 0, 498, 451, 639,
	246, 303, 485, 458, 496, 466, 306, 0, 0, 497,
	394, 620, 476, 636, 666, 667, 282, 431, 650, 554,
	659, 684, 237, 279, 445, 538, 642, 522, 420, 616,
	617, 351, 521, 314, 212, 391, 672, 235, 506, 393,
	256, 244, 622, 647, 318, 270, 308, 483, 0, 679,
	224, 549, 633, 253, 510, 0, 0, 687, 261, 532,
	645, 634, 226, 629, 531, 416, 348, 349, 225, 0,
	484, 287, 312, 0, 0, 277, 440, 1006, 1007, 275,
	688, 851, 658, 231, 0, 657, 433, 619, 630, 417,
	405, 230, 628, 415, 404, 356, 859, 860, 299, 327,
	936, 935, 934, 326, 328, 932, 933, 931, 218, 643,
	662, 0, 219, 0, 527, 646, 689, 478, 223, 247,
	248, 251, 0, 298, 302, 310, 313, 323, 324, 334,
	389, 444, 472, 468, 477, 0, 613, 637, 651, 664,
	670, 671, 673, 674, 675, 676, 677, 680, 678, 432,
	332, 523, 355, 395, 0, 0, 450, 499, 254, 641,
	524, 243, 607, 421, 430, 262, 264, 263, 238, 515,
	612, 249, 269, 942, 964, 953, 817, 818, 943, 944,
	968, 945, 820, 821, 965, 966, 814, 815, 819, 967,
	969, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 685,
	540, 546, 541, 542, 543, 544, 545, 0, 547, 956,
	803, 802, 0, 809, 810, 0, 839, 840, 842, 848,
	849, 850, 861, 908, 909, 917, 919, 920, 918, 921,
	922, 923, 926, 927, 928, 929, 924, 925, 930, 822,
	826, 823, 824, 825, 837, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 838, 979, 980, 981, 982,
	983, 984, 854, 858, 857, 855, 856, 852, 853, 880,
	879, 881, 882, 883, 884, 885, 886, 888, 887, 889,
	890, 891, 892, 893, 894, 862, 863, 866, 867, 865,
	864, 868, 877, 878, 869, 870, 871, 872, 873, 874,
	876, 875, 895, 896, 897, 898, 899, 901, 900, 904,
	905, 903, 902, 907, 906, 801, 207, 232, 390, 100,
	481, 307, 686, 653, 511, 648, 217, 234, 970, 281,
	971, 0, 0, 975, 0, 0, 0, 977, 976, 0,
	978, 940, 939, 0, 0, 972, 973, 0, 974, 0,
	0, 209, 211, 220, 233, 245, 250, 257, 280, 295,
	297, 304, 317, 330, 331, 340, 341, 344, 350, 402,
	409, 410, 411, 412, 434, 435, 436, 439, 442, 443,
	446, 448, 449, 452, 457, 461, 462, 463, 465, 467,
	469, 482, 487, 501, 502, 503, 504, 505, 508, 509,
	516, 517, 518, 519, 520, 528, 529, 534, 535, 536,
	537, 548, 621, 623, 640, 661, 668, 507, 407, 455,
	479, 614, 0, 0, 985, 986, 987, 988, 989, 990,
	991, 992, 319, 635, 669, 632, 681, 663, 464, 400,
	0, 0, 403, 300, 325, 342, 0, 652, 530, 239,
	493, 309, 268, 1060, 0, 222, 260, 242, 278, 293,
	296, 346, 414, 424, 454, 460, 315, 290, 258, 486,
	255, 512, 551, 552, 553, 555, 418, 285, 459, 0,
	0, 398, 609, 610, 338, 560, 0, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 800, 0, 0, 0, 289, 805, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 812, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 807,
	808, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 101, 0, 0,
	1061, 539, 995, 784, 961, 999, 1062, 1013, 1014, 1015,
	1000, 0, 252, 1001, 1002, 259, 1003, 0, 960, 843,
	845, 844, 910, 911, 912, 913, 914, 915, 916, 846,
	847, 841, 1008, 644, 1016, 1017, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 780,
	797, 0, 811, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 794, 795, 0, 0, 0,
	0, 955, 0, 796, 0, 0, 804, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 0, 0, 0, 954, 0, 0, 665,
	0, 0, 952, 0, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 1005, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 4226, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 1006, 1007, 275, 688, 851, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 859, 860, 299, 327, 936, 935, 934, 326,
	328, 932, 933, 931, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 942,
	964, 953, 817, 818, 943, 944, 968, 945, 820, 821,
	965, 966, 814, 815, 819, 967, 969, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 956, 803, 802, 0, 809,
	810, 0, 839, 840, 842, 848, 849, 850, 861, 908,
	909, 917, 919, 920, 918, 921, 922, 923, 926, 927,
	928, 929, 924, 925, 930, 822, 826, 823, 824, 825,
	837, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 838, 979, 980, 981, 982, 983, 984, 854, 858,
	857, 855, 856, 852, 853, 880, 879, 881, 882, 883,
	884, 885, 886, 888, 887, 889, 890, 891, 892, 893,
	894, 862, 863, 866, 867, 865, 864, 868, 877, 878,
	869, 870, 871, 872, 873, 874, 876, 875, 895, 896,
	897, 898, 899, 901, 900, 904, 905, 903, 902, 907,
	906, 801, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 970, 281, 971, 0, 0, 975,
	0, 0, 0, 977, 976, 0, 978, 940, 939, 0,
	0, 972, 973, 0, 974, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	985, 986, 987, 988, 989, 990, 991, 992, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 1060,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 0, 0, 398, 609, 610,
	338, 560, 0, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 441, 0, 0, 0, 800, 0, 0,
	0, 289, 805, 0, 0, 0, 388, 286, 0, 0,
	215, 533, 0, 456, 0, 214, 0, 514, 271, 399,
	396, 618, 301, 292, 288, 267, 339, 408, 453, 550,
	447, 812, 392, 0, 654, 525, 425, 0, 0, 0,
	0, 0, 0, 0, 0, 807, 808, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 265, 347, 213, 438,
	526, 305, 0, 101, 0, 1811, 1061, 539, 995, 784,
	961, 999, 1062, 1013, 1014, 1015, 1000, 0, 252, 1001,
	1002, 259, 1003, 0, 960, 843, 845, 844, 910, 911,
	912, 913, 914, 915, 916, 846, 847, 841, 1008, 644,
	1016, 1017, 0, 284, 343, 291, 283, 615, 0, 0,
	0, 0, 0, 0, 631, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 780, 797, 0, 811, 0,
	0, 0, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 794, 795, 0, 0, 0, 0, 955, 0, 796,
	0, 0, 804, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	1055, 1056, 1057, 1058, 1059, 806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 426, 276,
	0, 480, 0, 322, 337, 0, 0, 0, 0, 0,
	0, 0, 954, 0, 0, 665, 0, 0, 952, 0,
	0, 0, 0, 387, 0, 352, 208, 236, 0, 0,
	437, 488, 500, 0, 0, 0, 0, 1005, 0, 498,
	451, 639, 246, 303, 485, 458, 496, 466, 306, 0,
	0, 497, 394, 620, 476, 636, 666, 667, 282, 431,
	650, 554, 659, 684, 237, 279, 445, 538, 642, 522,
	420, 616, 617, 351, 521, 314, 212, 391, 672, 235,
	506, 393, 256, 244, 622, 647, 318, 270, 308, 483,
	0, 679, 224, 549, 633, 253, 510, 0, 0, 687,
	261, 532, 645, 634, 226, 629, 531, 416, 348, 349,
	225, 0, 484, 287, 312, 0, 0, 277, 440, 1006,
	1007, 275, 688, 851, 658, 231, 0, 657, 433, 619,
	630, 417, 405, 230, 628, 415, 404, 356, 859, 860,
	299, 327, 936, 935, 934, 326, 328, 932, 933, 931,
	218, 643, 662, 0, 219, 0, 527, 646, 689, 478,
	223, 247, 248, 251, 0, 298, 302, 310, 313, 323,
	324, 334, 389, 444, 472, 468, 477, 0, 613, 637,
	651, 664, 670, 671, 673, 674, 675, 676, 677, 680,
	678, 432, 332, 523, 355, 395, 0, 0, 450, 499,
	254, 641, 524, 243, 607, 421, 430, 262, 264, 263,
	238, 515, 612, 249, 269, 942, 964, 953, 817, 818,
	943, 944, 968, 945, 820, 821, 965, 966, 814, 815,
	819, 967, 969, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 685, 540, 546, 541, 542, 543, 544, 545, 0,
	547, 956, 803, 802, 0, 809, 810, 0, 839, 840,
	842, 848, 849, 850, 861, 908, 909, 917, 919, 920,
	918, 921, 922, 923, 926, 927, 928, 929, 924, 925,
	930, 822, 826, 823, 824, 825, 837, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 838, 979, 980,
	981, 982, 983, 984, 854, 858, 857, 855, 856, 852,
	853, 880, 879, 881, 882, 883, 884, 885, 886, 888,
	887, 889, 890, 891, 892, 893, 894, 862, 863, 866,
	867, 865, 864, 868, 877, 878, 869, 870, 871, 872,
	873, 874, 876, 875, 895, 896, 897, 898, 899, 901,
	900, 904, 905, 903, 902, 907, 906, 801, 207, 232,
	390, 0, 481, 307, 686, 653, 511, 648, 217, 234,
	970, 281, 971, 0, 0, 975, 0, 0, 0, 977,
	976, 0, 978, 940, 939, 0, 0, 972, 973, 0,
	974, 0, 0, 209, 211, 220, 233, 245, 250, 257,
	280, 295, 297, 304, 317, 330, 331, 340, 341, 344,
	350, 402, 409, 410, 411, 412, 434, 435, 436, 439,
	442, 443, 446, 448, 449, 452, 457, 461, 462, 463,
	465, 467, 469, 482, 487, 501, 502, 503, 504, 505,
	508, 509, 516, 517, 518, 519, 520, 528, 529, 534,
	535, 536, 537, 548, 621, 623, 640, 661, 668, 507,
	407, 455, 479, 614, 0, 0, 985, 986, 987, 988,
	989, 990, 991, 992, 319, 635, 669, 632, 681, 663,
	464, 400, 0, 0, 403, 300, 325, 342, 0, 652,
	530, 239, 493, 309, 268, 1060, 0, 222, 260, 242,
	278, 293, 296, 346, 414, 424, 454, 460, 315, 290,
	258, 486, 255, 512, 551, 552, 553, 555, 418, 285,
	459, 0, 0, 398, 609, 610, 338, 560, 0, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 441,
	0, 0, 0, 800, 0, 0, 0, 289, 805, 0,
	0, 0, 388, 286, 0, 0, 215, 533, 0, 456,
	0, 214, 0, 514, 271, 399, 396, 618, 301, 292,
	288, 267, 339, 408, 453, 550, 447, 812, 392, 0,
	654, 525, 425, 0, 0, 0, 0, 0, 0, 0,
	0, 807, 808, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 265, 347, 213, 438, 526, 305, 0, 101,
	0, 0, 1061, 539, 995, 784, 961, 999, 1062, 1013,
	1014, 1015, 1000, 0, 252, 1001, 1002, 259, 1003, 0,
	960, 843, 845, 844, 910, 911, 912, 913, 914, 915,
	916, 846, 847, 841, 1008, 644, 1016, 1017, 0, 284,
	343, 291, 283, 615, 0, 0, 0, 0, 0, 0,
	631, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 780, 797, 0, 811, 0, 0, 0, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 794, 795, 1114,
	0, 0, 0, 955, 0, 796, 0, 0, 804, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 426, 276, 0, 480, 0, 322,
	337, 0, 0, 0, 0, 0, 0, 0, 954, 0,
	0, 665, 0, 0, 952, 0, 0, 0, 0, 387,
	0, 352, 208, 236, 0, 0, 437, 488, 500, 0,
	0, 0, 0, 1005, 0, 498, 451, 639, 246, 303,
	485, 458, 496, 466, 306, 0, 0, 497, 394, 620,
	476, 636, 666, 667, 282, 431, 650, 554, 659, 684,
	237, 279, 445, 538, 642, 522, 420, 616, 617, 351,
	521, 314, 212, 391, 672, 235, 506, 393, 256, 244,
	622, 647, 318, 270, 308, 483, 0, 679, 224, 549,
	633, 253, 510, 0, 0, 687, 261, 532, 645, 634,
	226, 629, 531, 416, 348, 349, 225, 0, 484, 287,
	312, 0, 0, 277, 440, 1006, 1007, 275, 688, 851,
	658, 231, 0, 657, 433, 619, 630, 417, 405, 230,
	628, 415, 404, 356, 859, 860, 299, 327, 936, 935,
	934, 326, 328, 932, 933, 931, 218, 643, 662, 0,
	219, 0, 527, 646, 689, 478, 223, 247, 248, 251,
	0, 298, 302, 310, 313, 323, 324, 334, 389, 444,
	472, 468, 477, 0, 613, 637, 651, 664, 670, 671,
	673, 674, 675, 676, 677, 680, 678, 432, 332, 523,
	355, 395, 0, 0, 450, 499, 254, 641, 524, 243,
	607, 421, 430, 262, 264, 263, 238, 515, 612, 249,
	269, 942, 964, 953, 817, 818, 943, 944, 968, 945,
	820, 821, 965, 966, 814, 815, 819, 967, 969, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 685, 540, 546,
	541, 542, 543, 544, 545, 0, 547, 956, 803, 802,
	0, 809, 810, 0, 839, 840, 842, 848, 849, 850,
	861, 908, 909, 917, 919, 920, 918, 921, 922, 923,
	926, 927, 928, 929, 924, 925, 930, 822, 826, 823,
	824, 825, 837, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 838, 979, 980, 981, 982, 983, 984,
	854, 858, 857, 855, 856, 852, 853, 880, 879, 881,
	882, 883, 884, 885, 886, 888, 887, 889, 890, 891,
	892, 893, 894, 862, 863, 866, 867, 865, 864, 868,
	877, 878, 869, 870, 871, 872, 873, 874, 876, 875,
	895, 896, 897, 898, 899, 901, 900, 904, 905, 903,
	902, 907, 906, 801, 207, 232, 390, 0, 481, 307,
	686, 653, 511, 648, 217, 234, 970, 281, 971, 0,
	0, 975, 0, 0, 0, 977, 976, 0, 978, 940,
	939, 0, 0, 972, 973, 0, 974, 0, 0, 209,
	211, 220, 233, 245, 250, 257, 280, 295, 297, 304,
	317, 330, 331, 340, 341, 344, 350, 402, 409, 410,
	411, 412, 434, 435, 436, 439, 442, 443, 446, 448,
	449, 452, 457, 461, 462, 463, 465, 467, 469, 482,
	487, 501, 502, 503, 504, 505, 508, 509, 516, 517,
	518, 519, 520, 528, 529, 534, 535, 536, 537, 548,
	621, 623, 640, 661, 668, 507, 407, 455, 479, 614,
	0, 0, 985, 986, 987, 988, 989, 990, 991, 992,
	319, 635, 669, 632, 681, 663, 464, 400, 0, 0,
	403, 300, 325, 342, 0, 652, 530, 239, 493, 309,
	268, 1060, 0, 222, 260, 242, 278, 293, 296, 346,
	414, 424, 454, 460, 315, 290, 258, 486, 255, 512,
	551, 552, 553, 555, 418, 285, 459, 0, 0, 398,
	609, 610, 338, 560, 0, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 441, 0, 0, 0, 800,
	0, 0, 0, 289, 805, 0, 0, 0, 388, 286,
	0, 0, 215, 533, 0, 456, 0, 214, 0, 514,
	271, 399, 396, 618, 301, 292, 288, 267, 339, 408,
	453, 550, 447, 812, 392, 0, 654, 525, 425, 0,
	0, 0, 0, 0, 0, 0, 0, 807, 808, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 265, 347,
	213, 438, 526, 305, 0, 101, 0, 0, 1061, 539,
	995, 784, 961, 999, 1062, 1013, 1014, 1015, 1000, 0,
	252, 1001, 1002, 259, 1003, 0, 960, 843, 845, 844,
	910, 911, 912, 913, 914, 915, 916, 846, 847, 841,
	1008, 644, 1016, 1017, 0, 284, 343, 291, 283, 615,
	0, 0, 0, 0, 0, 0, 631, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 780, 797, 0,
	811, 0, 0, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 794, 795, 0, 0, 0, 0, 955,
	0, 796, 0, 0, 804, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1059, 806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	426, 276, 0, 480, 0, 322, 337, 0, 0, 0,
	0, 0, 0, 0, 954, 0, 0, 665, 0, 0,
	952, 0, 0, 0, 0, 387, 0, 352, 208, 236,
	0, 0, 437, 488, 500, 0, 0, 0, 0, 1005,
	0, 498, 451, 639, 246, 303, 485, 458, 496, 466,
	306, 0, 0, 497, 394, 620, 476, 636, 666, 667,
	282, 431, 650, 554, 659, 684, 237, 279, 445, 538,
	642, 522, 420, 616, 617, 351, 521, 314, 212, 391,
	672, 235, 506, 393, 256, 244, 622, 647, 318, 270,
	308, 483, 0, 679, 224, 549, 633, 253, 510, 0,
	0, 687, 261, 532, 645, 634, 226, 629, 531, 416,
	348, 349, 225, 0, 484, 287, 312, 0, 0, 277,
	440, 1006, 1007, 275, 688, 851, 658, 231, 0, 657,
	433, 619, 630, 417, 405, 230, 628, 415, 404, 356,
	859, 860, 299, 327, 936, 935, 934, 326, 328, 932,
	933, 931, 218, 643, 662, 0, 219, 0, 527, 646,
	689, 478, 223, 247, 248, 251, 0, 298, 302, 310,
	313, 323, 324, 334, 389, 444, 472, 468, 477, 0,
	613, 637, 651, 664, 670, 671, 673, 674, 675, 676,
	677, 680, 678, 432, 332, 523, 355, 395, 0, 0,
	450, 499, 254, 641, 524, 243, 607, 421, 430, 262,
	264, 263, 238, 515, 612, 249, 269, 942, 964, 953,
	817, 818, 943, 944, 968, 945, 820, 821, 965, 966,
	814, 815, 819, 967, 969, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 685, 540, 546, 541, 542, 543, 544,
	545, 0, 547, 956, 803, 802, 0, 809, 810, 0,
	839, 840, 842, 848, 849, 850, 861, 908, 909, 917,
	919, 920, 918, 921, 922, 923, 926, 927, 928, 929,
	924, 925, 930, 822, 826, 823, 824, 825, 837, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 838,
	979, 980, 981, 982, 983, 984, 854, 858, 857, 855,
	856, 852, 853, 880, 879, 881, 882, 883, 884, 885,
	886, 888, 887, 889, 890, 891, 892, 893, 894, 862,
	863, 866, 867, 865, 864, 868, 877, 878, 869, 870,
	871, 872, 873, 874, 876, 875, 895, 896, 897, 898,
	899, 901, 900, 904, 905, 903, 902, 907, 906, 801,
	207, 232, 390, 0, 481, 307, 686, 653, 511, 648,
	217, 234, 970, 281, 971, 0, 0, 975, 0, 0,
	0, 977, 976, 0, 978, 940, 939, 0, 0, 972,
	973, 0, 974, 0, 0, 209, 211, 220, 233, 245,
	250, 257, 280, 295, 297, 304, 317, 330, 331, 340,
	341, 344, 350, 402, 409, 410, 411, 412, 434, 435,
	436, 439, 442, 443, 446, 448, 449, 452, 457, 461,
	462, 463, 465, 467, 469, 482, 487, 501, 502, 503,
	504, 505, 508, 509, 516, 517, 518, 519, 520, 528,
	529, 534, 535, 536, 537, 548, 621, 623, 640, 661,
	668, 507, 407, 455, 479, 614, 0, 0, 985, 986,
	987, 988, 989, 990, 991, 992, 319, 635, 669, 632,
	681, 663, 464, 400, 0, 0, 403, 300, 325, 342,
	0, 652, 530, 239, 493, 309, 268, 1060, 0, 222,
	260, 242, 278, 293, 296, 346, 414, 424, 454, 460,
	315, 290, 258, 486, 255, 512, 551, 552, 553, 555,
	418, 285, 459, 0, 0, 398, 609, 610, 338, 560,
	0, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 441, 0, 0, 0, 800, 0, 0, 0, 289,
	805, 0, 0, 0, 388, 286, 0, 0, 215, 533,
	0, 456, 0, 214, 0, 514, 271, 399, 396, 618,
	301, 292, 288, 267, 339, 408, 453, 550, 447, 812,
	392, 0, 654, 525, 425, 0, 0, 0, 0, 0,
	0, 0, 0, 807, 808, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 265, 347, 213, 438, 526, 305,
	0, 101, 0, 0, 1061, 539, 995, 784, 961, 999,
	1062, 1013, 1014, 1015, 1000, 0, 252, 1001, 1002, 259,
	1003, 0, 960, 843, 845, 844, 910, 911, 912, 913,
	914, 915, 916, 846, 847, 841, 1008, 644, 1016, 1017,
	0, 284, 343, 291, 283, 615, 0, 0, 0, 0,
	0, 0, 631, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 780, 797, 0, 811, 0, 0, 0,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 794,
	795, 0, 0, 0, 0, 955, 0, 796, 0, 0,
	804, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1059, 3269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 426, 276, 0, 480,
	0, 322, 337, 0, 0, 0, 0, 0, 0, 0,
	954, 0, 0, 665, 0, 0, 952, 0, 0, 0,
	0, 387, 0, 352, 208, 236, 0, 0, 437, 488,
	500, 0, 0, 0, 0, 1005, 0, 498, 451, 639,
	246, 303, 485, 458, 496, 466, 306, 0, 0, 497,
	394, 620, 476, 636, 666, 667, 282, 431, 650, 554,
	659, 684, 237, 279, 445, 538, 642, 522, 420, 616,
	617, 351, 521, 314, 212, 391, 672, 235, 506, 393,
	256, 244, 622, 647, 318, 270, 308, 483, 0, 679,
	224, 549, 633, 253, 510, 0, 0, 687, 261, 532,
	645, 634, 226, 629, 531, 416, 348, 349, 225, 0,
	484, 287, 312, 0, 0, 277, 440, 1006, 1007, 275,
	688, 851, 658, 231, 0, 657, 433, 619, 630, 417,
	405, 230, 628, 415, 404, 356, 859, 860, 299, 327,
	936, 935, 934, 326, 328, 932, 933, 931, 218, 643,
	662, 0, 219, 0, 527, 646, 689, 478, 223, 247,
	248, 251, 0, 298, 302, 310, 313, 323, 324, 334,
	389, 444, 472, 468, 477, 0, 613, 637, 651, 664,
	670, 671, 673, 674, 675, 676, 677, 680, 678, 432,
	332, 523, 355, 395, 0, 0, 450, 499, 254, 641,
	524, 243, 607, 421, 430, 262, 264, 263, 238, 515,
	612, 249, 269, 942, 964, 953, 817, 818, 943, 944,
	968, 945, 820, 821, 965, 966, 814, 815, 819, 967,
	969, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 685,
	540, 546, 541, 542, 543, 544, 545, 0, 547, 956,
	803, 802, 0, 809, 810, 0, 839, 840, 842, 848,
	849, 850, 861, 908, 909, 917, 919, 920, 918, 921,
	922, 923, 926, 927, 928, 929, 924, 925, 930, 822,
	826, 823, 824, 825, 837, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 838, 979, 980, 981, 982,
	983, 984, 854, 858, 857, 855, 856, 852, 853, 880,
	879, 881, 882, 883, 884, 885, 886, 888, 887, 889,
	890, 891, 892, 893, 894, 862, 863, 866, 867, 865,
	864, 868, 877, 878, 869, 870, 871, 872, 873, 874,
	876, 875, 895, 896, 897, 898, 899, 901, 900, 904,
	905, 903, 902, 907, 906, 801, 207, 232, 390, 0,
	481, 307, 686, 653, 511, 648, 217, 234, 970, 281,
	971, 0, 0, 975, 0, 0, 0, 977, 976, 0,
	978, 940, 939, 0, 0, 972, 973, 0, 974, 0,
	0, 209, 211, 220, 233, 245, 250, 257, 280, 295,
	297, 304, 317, 330, 331, 340, 341, 344, 350, 402,
	409, 410, 411, 412, 434, 435, 436, 439, 442, 443,
	446, 448, 449, 452, 457, 461, 462, 463, 465, 467,
	469, 482, 487, 501, 502, 503, 504, 505, 508, 509,
	516, 517, 518, 519, 520, 528, 529, 534, 535, 536,
	537, 548, 621, 623, 640, 661, 668, 507, 407, 455,
	479, 614, 0, 0, 985, 986, 987, 988, 989, 990,
	991, 992, 319, 635, 669, 632, 681, 663, 464, 400,
	0, 0, 403, 300, 325, 342, 0, 652, 530, 239,
	493, 309, 268, 1060, 0, 222, 260, 242, 278, 293,
	296, 346, 414, 424, 454, 460, 315, 290, 258, 486,
	255, 512, 551, 552, 553, 555, 418, 285, 459, 0,
	0, 398, 609, 610, 338, 560, 0, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 800, 0, 0, 0, 289, 805, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 812, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 807,
	808, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 101, 0, 0,
	1061, 539, 995, 784, 961, 999, 1062, 1013, 1014, 1015,
	1000, 0, 252, 1001, 1002, 259, 1003, 0, 960, 843,
	845, 844, 910, 911, 912, 913, 914, 915, 916, 846,
	847, 841, 1008, 644, 1016, 1017, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 780,
	797, 0, 811, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 794, 795, 0, 0, 0,
	0, 955, 0, 796, 0, 0, 804, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 3265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 0, 0, 0, 954, 0, 0, 665,
	0, 0, 952, 0, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 1005, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 1006, 1007, 275, 688, 851, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 859, 860, 299, 327, 936, 935, 934, 326,
	328, 932, 933, 931, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 942,
	964, 953, 817, 818, 943, 944, 968, 945, 820, 821,
	965, 966, 814, 815, 819, 967, 969, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 956, 803, 802, 0, 809,
	810, 0, 839, 840, 842, 848, 849, 850, 861, 908,
	909, 917, 919, 920, 918, 921, 922, 923, 926, 927,
	928, 929, 924, 925, 930, 822, 826, 823, 824, 825,
	837, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 838, 979, 980, 981, 982, 983, 984, 854, 858,
	857, 855, 856, 852, 853, 880, 879, 881, 882, 883,
	884, 885, 886, 888, 887, 889, 890, 891, 892, 893,
	894, 862, 863, 866, 867, 865, 864, 868, 877, 878,
	869, 870, 871, 872, 873, 874, 876, 875, 895, 896,
	897, 898, 899, 901, 900, 904, 905, 903, 902, 907,
	906, 801, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 970, 281, 971, 0, 0, 975,
	0, 0, 0, 977, 976, 0, 978, 940, 939, 0,
	0, 972, 973, 0, 974, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	985, 986, 987, 988, 989, 990, 991, 992, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 1060,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 0, 0, 398, 609, 610,
	338, 560, 0, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 441, 0, 0, 0, 800, 0, 0,
	0, 289, 805, 0, 0, 0, 388, 286, 0, 0,
	215, 533, 0, 456, 0, 214, 0, 514, 271, 399,
	396, 618, 301, 292, 288, 267, 339, 408, 453, 550,
	447, 812, 392, 0, 654, 525, 425, 0, 0, 0,
	0, 0, 0, 0, 0, 807, 808, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 265, 347, 213, 438,
	526, 305, 0, 101, 0, 0, 1061, 539, 995, 1135,
	961, 999, 1062, 1013, 1014, 1015, 1000, 0, 252, 1001,
	1002, 259, 1003, 0, 960, 843, 845, 844, 910, 911,
	912, 913, 914, 915, 916, 846, 847, 841, 1008, 644,
	1016, 1017, 0, 284, 343, 291, 283, 615, 0, 0,
	0, 0, 0, 0, 631, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 797, 0, 811, 0,
	0, 0, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 794, 795, 0, 0, 0, 0, 955, 0, 796,
	0, 0, 804, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	1055, 1056, 1057, 1058, 1059, 806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 426, 276,
	0, 480, 0, 322, 337, 0, 0, 0, 0, 0,
	0, 0, 954, 0, 0, 665, 0, 0, 952, 0,
	0, 0, 0, 387, 0, 352, 208, 236, 0, 0,
	437, 488, 500, 0, 0, 0, 0, 1005, 0, 498,
	451, 639, 246, 303, 485, 458, 496, 466, 306, 0,
	0, 497, 394, 620, 476, 636, 666, 667, 282, 431,
	650, 554, 659, 684, 237, 279, 445, 538, 642, 522,
	420, 616, 617, 351, 521, 314, 212, 391, 672, 235,
	506, 393, 256, 244, 622, 647, 318, 270, 308, 483,
	0, 679, 224, 549, 633, 253, 510, 0, 0, 687,
	261, 532, 645, 634, 226, 629, 531, 416, 348, 349,
	225, 0, 484, 287, 312, 0, 0, 277, 440, 1006,
	1007, 275, 688, 851, 658, 231, 0, 657, 433, 619,
	630, 417, 405, 230, 628, 415, 404, 356, 859, 860,
	299, 327, 936, 935, 934, 326, 328, 932, 933, 931,
	218, 643, 662, 0, 219, 0, 527, 646, 689, 478,
	223, 247, 248, 251, 0, 298, 302, 310, 313, 323,
	324, 334, 389, 444, 472, 468, 477, 0, 613, 637,
	651, 664, 670, 671, 673, 674, 675, 676, 677, 680,
	678, 432, 332, 523, 355, 395, 0, 0, 450, 499,
	254, 641, 524, 243, 607, 421, 430, 262, 264, 263,
	238, 515, 612, 249, 269, 942, 964, 953, 817, 818,
	943, 944, 968, 945, 820, 821, 965, 966, 814, 815,
	819, 967, 969, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 685, 540, 546, 541, 542, 543, 544, 545, 0,
	547, 956, 803, 802, 0, 809, 810, 0, 839, 840,
	842, 848, 849, 850, 861, 908, 909, 917, 919, 920,
	918, 921, 922, 923, 926, 927, 928, 929, 924, 925,
	930, 822, 826, 823, 824, 825, 837, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 838, 979, 980,
	981, 982, 983, 984, 854, 858, 857, 855, 856, 852,
	853, 880, 879, 881, 882, 883, 884, 885, 886, 888,
	887, 889, 890, 891, 892, 893, 894, 862, 863, 866,
	867, 865, 864, 868, 877, 878, 869, 870, 871, 872,
	873, 874, 876, 875, 895, 896, 897, 898, 899, 901,
	900, 904, 905, 903, 902, 907, 906, 801, 207, 232,
	390, 0, 481, 307, 686, 653, 511, 648, 217, 234,
	970, 281, 971, 0, 0, 975, 0, 0, 0, 977,
	976, 0, 978, 940, 939, 0, 0, 972, 973, 0,
	974, 0, 0, 209, 211, 220, 233, 245, 250, 257,
	280, 295, 297, 304, 317, 330, 331, 340, 341, 344,
	350, 402, 409, 410, 411, 412, 434, 435, 436, 439,
	442, 443, 446, 448, 449, 452, 457, 461, 462, 463,
	465, 467, 469, 482, 487, 501, 502, 503, 504, 505,
	508, 509, 516, 517, 518, 519, 520, 528, 529, 534,
	535, 536, 537, 548, 621, 623, 640, 661, 668, 507,
	407, 455, 479, 614, 0, 0, 985, 986, 987, 988,
	989, 990, 991, 992, 319, 635, 669, 632, 681, 663,
	464, 400, 0, 0, 403, 300, 325, 342, 0, 652,
	530, 239, 493, 309, 268, 1060, 0, 222, 260, 242,
	278, 293, 296, 346, 414, 424, 454, 460, 315, 290,
	258, 486, 255, 512, 551, 552, 553, 555, 418, 285,
	459, 0, 0, 398, 609, 610, 338, 560, 0, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 441,
	0, 0, 0, 800, 0, 0, 0, 289, 805, 0,
	0, 0, 388, 286, 0, 0, 215, 533, 0, 456,
	0, 214, 0, 514, 271, 399, 396, 618, 301, 292,
	288, 267, 339, 408, 453, 550, 447, 812, 392, 0,
	654, 525, 425, 0, 0, 0, 0, 0, 0, 0,
	0, 807, 808, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 265, 347, 213, 438, 526, 305, 0, 101,
	0, 0, 1061, 539, 995, 1135, 961, 999, 1062, 1013,
	1014, 1015, 1000, 0, 252, 1001, 1002, 259, 1003, 0,
	960, 843, 845, 844, 910, 911, 912, 913, 914, 915,
	916, 846, 847, 841, 1008, 644, 1016, 1017, 0, 284,
	343, 291, 283, 615, 0, 0, 0, 0, 0, 0,
	631, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 797, 0, 811, 0, 0, 0, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 794, 795, 0,
	0, 0, 0, 955, 0, 796, 0, 0, 804, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 2195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 426, 276, 0, 480, 0, 322,
	337, 0, 0, 0, 0, 0, 0, 0, 954, 0,
	0, 665, 0, 0, 952, 0, 0, 0, 0, 387,
	0, 352, 208, 236, 0, 0, 437, 488, 500, 0,
	0, 0, 0, 1005, 0, 498, 451, 639, 246, 303,
	485, 458, 496, 466, 306, 0, 0, 497, 394, 620,
	476, 636, 666, 667, 282, 431, 650, 554, 659, 684,
	237, 279, 445, 538, 642, 522, 420, 616, 617, 351,
	521, 314, 212, 391, 672, 235, 506, 393, 256, 244,
	622, 647, 318, 270, 308, 483, 0, 679, 224, 549,
	633, 253, 510, 0, 0, 687, 261, 532, 645, 634,
	226, 629, 531, 416, 348, 349, 225, 0, 484, 287,
	312, 0, 0, 277, 440, 1006, 1007, 275, 688, 851,
	658, 231, 0, 657, 433, 619, 630, 417, 405, 230,
	628, 415, 404, 356, 859, 860, 299, 327, 936, 935,
	934, 326, 328, 932, 933, 931, 218, 643, 662, 0,
	219, 0, 527, 646, 689, 478, 223, 247, 248, 251,
	0, 298, 302, 310, 313, 323, 324, 334, 389, 444,
	472, 468, 477, 0, 613, 637, 651, 664, 670, 671,
	673, 674, 675, 676, 677, 680, 678, 432, 332, 523,
	355, 395, 0, 0, 450, 499, 254, 641, 524, 243,
	607, 421, 430, 262, 264, 263, 238, 515, 612, 249,
	269, 942, 964, 953, 817, 818, 943, 944, 968, 945,
	820, 821, 965, 966, 814, 815, 819, 967, 969, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 685, 540, 546,
	541, 542, 543, 544, 545, 0, 547, 956, 803, 802,
	0, 809, 810, 0, 839, 840, 842, 848, 849, 850,
	861, 908, 909, 917, 919, 920, 918, 921, 922, 923,
	926, 927, 928, 929, 924, 925, 930, 822, 826, 823,
	824, 825, 837, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 838, 979, 980, 981, 982, 983, 984,
	854, 858, 857, 855, 856, 852, 853, 880, 879, 881,
	882, 883, 884, 885, 886, 888, 887, 889, 890, 891,
	892, 893, 894, 862, 863, 866, 867, 865, 864, 868,
	877, 878, 869, 870, 871, 872, 873, 874, 876, 875,
	895, 896, 897, 898, 899, 901, 900, 904, 905, 903,
	902, 907, 906, 801, 207, 232, 390, 0, 481, 307,
	686, 653, 511, 648, 217, 234, 970, 281, 971, 0,
	0, 975, 0, 0, 0, 977, 976, 0, 978, 940,
	939, 0, 0, 972, 973, 0, 974, 0, 0, 209,
	211, 220, 233, 245, 250, 257, 280, 295, 297, 304,
	317, 330, 331, 340, 341, 344, 350, 402, 409, 410,
	411, 412, 434, 435, 436, 439, 442, 443, 446, 448,
	449, 452, 457, 461, 462, 463, 465, 467, 469, 482,
	487, 501, 502, 503, 504, 505, 508, 509, 516, 517,
	518, 519, 520, 528, 529, 534, 535, 536, 537, 548,
	621, 623, 640, 661, 668, 507, 407, 455, 479, 614,
	0, 0, 985, 986, 987, 988, 989, 990, 991, 992,
	319, 635, 669, 632, 681, 663, 464, 400, 0, 0,
	403, 300, 325, 342, 0, 652, 530, 239, 493, 309,
	268, 1060, 0, 222, 260, 242, 278, 293, 296, 346,
	414, 424, 454, 460, 315, 290, 258, 486, 255, 512,
	551, 552, 553, 555, 418, 285, 459, 0, 0, 398,
	609, 610, 338, 560, 0, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 441, 0, 0, 0, 800,
	0, 0, 0, 289, 805, 0, 0, 0, 388, 286,
	0, 0, 215, 533, 0, 456, 0, 214, 0, 514,
	271, 399, 396, 618, 301, 292, 288, 267, 339, 408,
	453, 550, 447, 812, 392, 0, 654, 525, 425, 0,
	0, 0, 0, 0, 0, 0, 0, 807, 808, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 265, 347,
	213, 438, 526, 305, 0, 101, 0, 0, 1061, 539,
	995, 1135, 961, 999, 1062, 1013, 1014, 1015, 1000, 0,
	252, 1001, 1002, 259, 1003, 0, 960, 843, 845, 844,
	910, 911, 912, 913, 914, 915, 916, 846, 847, 841,
	1008, 644, 1016, 1017, 0, 284, 343, 291, 283, 615,
	0, 0, 0, 0, 0, 0, 631, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 797, 0,
	811, 0, 0, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 794, 795, 0, 0, 0, 0, 955,
	0, 796, 0, 0, 804, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1059, 2193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	426, 276, 0, 480, 0, 322, 337, 0, 0, 0,
	0, 0, 0, 0, 954, 0, 0, 665, 0, 0,
	952, 0, 0, 0, 0, 387, 0, 352, 208, 236,
	0, 0, 437, 488, 500, 0, 0, 0, 0, 1005,
	0, 498, 451, 639, 246, 303, 485, 458, 496, 466,
	306, 0, 0, 497, 394, 620, 476, 636, 666, 667,
	282, 431, 650, 554, 659, 684, 237, 279, 445, 538,
	642, 522, 420, 616, 617, 351, 521, 314, 212, 391,
	672, 235, 506, 393, 256, 244, 622, 647, 318, 270,
	308, 483, 0, 679, 224, 549, 633, 253, 510, 0,
	0, 687, 261, 532, 645, 634, 226, 629, 531, 416,
	348, 349, 225, 0, 484, 287, 312, 0, 0, 277,
	440, 1006, 1007, 275, 688, 851, 658, 231, 0, 657,
	433, 619, 630, 417, 405, 230, 628, 415, 404, 356,
	859, 860, 299, 327, 936, 935, 934, 326, 328, 932,
	933, 931, 218, 643, 662, 0, 219, 0, 527, 646,
	689, 478, 223, 247, 248, 251, 0, 298, 302, 310,
	313, 323, 324, 334, 389, 444, 472, 468, 477, 0,
	613, 637, 651, 664, 670, 671, 673, 674, 675, 676,
	677, 680, 678, 432, 332, 523, 355, 395, 0, 0,
	450, 499, 254, 641, 524, 243, 607, 421, 430, 262,
	264, 263, 238, 515, 612, 249, 269, 942, 964, 953,
	817, 818, 943, 944, 968, 945, 820, 821, 965, 966,
	814, 815, 819, 967, 969, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 685, 540, 546, 541, 542, 543, 544,
	545, 0, 547, 956, 803, 802, 0, 809, 810, 0,
	839, 840, 842, 848, 849, 850, 861, 908, 909, 917,
	919, 920, 918, 921, 922, 923, 926, 927, 928, 929,
	924, 925, 930, 822, 826, 823, 824, 825, 837, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 838,
	979, 980, 981, 982, 983, 984, 854, 858, 857, 855,
	856, 852, 853, 880, 879, 881, 882, 883, 884, 885,
	886, 888, 887, 889, 890, 891, 892, 893, 894, 862,
	863, 866, 867, 865, 864, 868, 877, 878, 869, 870,
	871, 872, 873, 874, 876, 875, 895, 896, 897, 898,
	899, 901, 900, 904, 905, 903, 902, 907, 906, 801,
	207, 232, 390, 0, 481, 307, 686, 653, 511, 648,
	217, 234, 970, 281, 971, 0, 0, 975, 0, 0,
	0, 977, 976, 0, 978, 940, 939, 0, 0, 972,
	973, 0, 974, 0, 0, 209, 211, 220, 233, 245,
	250, 257, 280, 295, 297, 304, 317, 330, 331, 340,
	341, 344, 350, 402, 409, 410, 411, 412, 434, 435,
	436, 439, 442, 443, 446, 448, 449, 452, 457, 461,
	462, 463, 465, 467, 469, 482, 487, 501, 502, 503,
	504, 505, 508, 509, 516, 517, 518, 519, 520, 528,
	529, 534, 535, 536, 537, 548, 621, 623, 640, 661,
	668, 507, 407, 455, 479, 614, 0, 0, 985, 986,
	987, 988, 989, 990, 991, 992, 319, 635, 669, 632,
	681, 663, 464, 400, 0, 0, 403, 300, 325, 342,
	0, 652, 530, 239, 493, 309, 268, 1060, 0, 222,
	260, 242, 278, 293, 296, 346, 414, 424, 454, 460,
	315, 290, 258, 486, 255, 512, 551, 552, 553, 555,
	418, 285, 459, 560, 0, 398, 609, 610, 338, 0,
	0, 0, 0, 0, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 388, 286,
	0, 0, 215, 533, 0, 456, 0, 214, 0, 514,
	271, 399, 396, 618, 301, 292, 288, 267, 339, 408,
	453, 550, 447, 0, 392, 0, 654, 525, 425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 265, 347,
	213, 438, 526, 305, 0, 0, 0, 0, 0, 539,
	760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 0, 0, 259, 0, 0, 0, 373, 382, 381,
	361, 362, 364, 366, 372, 379, 385, 358, 367, 0,
	0, 644, 0, 0, 0, 284, 343, 291, 283, 615,
	0, 0, 0, 0, 0, 0, 631, 0, 0, 241,
	0, 1181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	426, 276, 0, 480, 0, 322, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1180, 665, 0, 0,
	0, 0, 0, 1177, 1178, 387, 1146, 352, 208, 236,
	1171, 1175, 437, 488, 500, 0, 0, 0, 0, 272,
	0, 498, 451, 639, 246, 303, 485, 458, 496, 466,
	306, 0, 0, 497, 394, 620, 476, 636, 666, 667,
	282, 431, 650, 554, 659, 684, 237, 279, 445, 538,
	642, 522, 420, 616, 617, 351, 521, 314, 212, 391,
	672, 235, 506, 393, 256, 244, 622, 647, 318, 270,
	308, 483, 0, 679, 224, 549, 633, 253, 510, 0,
	0, 687, 261, 532, 645, 634, 226, 629, 531, 416,
	348, 349, 225, 0, 484, 287, 312, 0, 0, 277,
	440, 624, 625, 275, 688, 240, 658, 231, 0, 657,
	433, 619, 630, 417, 405, 230, 628, 415, 404, 356,
	377, 378, 299, 327, 473, 397, 474, 326, 328, 428,
	427, 429, 218, 643, 662, 0, 219, 0, 527, 646,
	689, 478, 223, 247, 248, 251, 0, 298, 302, 310,
	313, 323, 324, 334, 389, 444, 472, 468, 477, 0,
	613, 637, 651, 664, 670, 671, 673, 674, 675, 676,
	677, 680, 678, 432, 332, 523, 355, 395, 0, 0,
	450, 499, 254, 641, 524, 243, 607, 421, 430, 262,
	264, 263, 238, 515, 612, 249, 269, 210, 0, 0,
	0, 0, 273, 274, 0, 608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 685, 540, 546, 541, 542, 543, 544,
	545, 0, 547, 0, 0, 0, 0, 0, 422, 0,
	626, 627, 708, 406, 513, 638, 357, 371, 374, 363,
	383, 0, 384, 359, 360, 365, 368, 369, 370, 375,
	376, 380, 386, 266, 221, 413, 423, 611, 333, 227,
	228, 229, 556, 557, 558, 559, 655, 656, 660, 216,
	489, 490, 491, 492, 311, 649, 329, 495, 494, 353,
	354, 401, 475, 572, 574, 585, 589, 591, 593, 599,
	602, 573, 575, 586, 590, 592, 594, 600, 603, 562,
	564, 566, 568, 581, 580, 577, 605, 606, 583, 588,
	567, 579, 584, 597, 604, 601, 561, 565, 569, 578,
	596, 595, 576, 587, 598, 582, 570, 563, 571, 0,
	207, 232, 390, 0, 481, 307, 686, 653, 511, 648,
	217, 234, 0, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 211, 220, 233, 245,
	250, 257, 280, 295, 297, 304, 317, 330, 331, 340,
	341, 344, 350, 402, 409, 410, 411, 412, 434, 435,
	436, 439, 442, 443, 446, 448, 449, 452, 457, 461,
	462, 463, 465, 467, 469, 482, 487, 501, 502, 503,
	504, 505, 508, 509, 516, 517, 518, 519, 520, 528,
	529, 534, 535, 536, 537, 548, 621, 623, 640, 661,
	668, 507, 407, 455, 479, 614, 0, 0, 320, 321,
	470, 471, 335, 336, 682, 683, 319, 635, 669, 632,
	681, 663, 464, 400, 0, 0, 403, 300, 325, 342,
	0, 652, 530, 239, 493, 309, 268, 0, 0, 222,
	260, 242, 278, 293, 296, 346, 414, 424, 454, 460,
	315, 290, 258, 486, 255, 512, 551, 552, 553, 555,
	418, 285, 459, 91, 560, 398, 609, 610, 338, 0,
	0, 0, 0, 0, 0, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 388,
	286, 0, 0, 215, 533, 0, 456, 0, 214, 0,
	514, 271, 399, 396, 618, 301, 292, 288, 267, 339,
	408, 453, 550, 447, 103, 392, 0, 654, 525, 425,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 265,
	347, 213, 438, 526, 305, 0, 101, 0, 0, 0,
	539, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 0, 0, 259, 0, 0, 0, 373, 382,
	381, 361, 362, 364, 366, 372, 379, 385, 358, 367,
	0, 0, 644, 0, 0, 0, 284, 343, 291, 283,
	615, 0, 0, 0, 0, 0, 0, 631, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 316,
	0, 426, 276, 0, 480, 0, 322, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 0,
	0, 0, 0, 0, 0, 0, 387, 0, 352, 208,
	236, 0, 0, 437, 488, 500, 0, 0, 0, 0,
	272, 0, 498, 451, 639, 246, 303, 485, 458, 496,
	466, 306, 0, 0, 497, 394, 620, 476, 636, 666,
	667, 282, 431, 650, 554, 659, 684, 237, 279, 445,
	538, 642, 522, 420, 616, 617, 351, 521, 314, 212,
	391, 672, 235, 506, 393, 256, 244, 622, 647, 318,
	270, 308, 483, 0, 679, 224, 549, 633, 253, 510,
	0, 0, 687, 261, 532, 645, 634, 226, 629, 531,
	416, 348, 349, 225, 0, 484, 287, 312, 0, 0,
	277, 440, 624, 625, 275, 688, 240, 658, 231, 0,
	657, 433, 619, 630, 417, 405, 230, 628, 415, 404,
	356, 377, 378, 299, 327, 473, 397, 474, 326, 328,
	428, 427, 429, 218, 643, 662, 0, 219, 0, 527,
	646, 689, 478, 223, 247, 248, 251, 0, 298, 302,
	310, 313, 323, 324, 334, 389, 444, 472, 468, 477,
	0, 613, 637, 651, 664, 670, 671, 673, 674, 675,
	676, 677, 680, 678, 432, 332, 523, 355, 395, 0,
	0, 450, 499, 254, 641, 524, 243, 607, 421, 430,
	262, 264, 263, 238, 515, 612, 249, 269, 210, 0,
	0, 0, 0, 273, 274, 0, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 685, 540, 546, 541, 542, 543,
	544, 545, 0, 547, 0, 0, 0, 0, 0, 422,
	0, 626, 627, 708, 406, 513, 638, 357, 371, 374,
	363, 383, 0, 384, 359, 360, 365, 368, 369, 370,
	375, 376, 380, 386, 266, 221, 413, 423, 611, 333,
	227, 228, 229, 556, 557, 558, 559, 655, 656, 660,
	216, 489, 490, 491, 492, 311, 649, 329, 495, 494,
	353, 354, 401, 475, 572, 574, 585, 589, 591, 593,
	599, 602, 573, 575, 586, 590, 592, 594, 600, 603,
	562, 564, 566, 568, 581, 580, 577, 605, 606, 583,
	588, 567, 579, 584, 597, 604, 601, 561, 565, 569,
	578, 596, 595, 576, 587, 598, 582, 570, 563, 571,
	0, 207, 232, 390, 100, 481, 307, 686, 653, 511,
	648, 217, 234, 0, 281, 0, 0, 0, 0, 0,
	0, 2512, 0, 0, 2511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 211, 220, 233,
	245, 250, 257, 280, 295, 297, 304, 317, 330, 331,
	340, 341, 344, 350, 402, 409, 410, 411, 412, 434,
	435, 436, 439, 442, 443, 446, 448, 449, 452, 457,
	461, 462, 463, 465, 467, 469, 482, 487, 501, 502,
	503, 504, 505, 508, 509, 516, 517, 518, 519, 520,
	528, 529, 534, 535, 536, 537, 548, 621, 623, 640,
	661, 668, 507, 407, 455, 479, 614, 0, 0, 320,
	321, 470, 471, 335, 336, 682, 683, 319, 635, 669,
	632, 681, 663, 464, 400, 0, 0, 403, 300, 325,
	342, 0, 652, 530, 239, 493, 309, 268, 0, 0,
	222, 260, 242, 278, 293, 296, 346, 414, 424, 454,
	460, 315, 290, 258, 486, 255, 512, 551, 552, 553,
	555, 418, 285, 459, 560, 0, 398, 609, 610, 338,
	0, 0, 0, 0, 0, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 388,
	286, 0, 0, 215, 533, 0, 456, 0, 214, 0,
	514, 271, 399, 396, 618, 301, 292, 288, 267, 339,
	408, 453, 550, 447, 0, 392, 0, 654, 525, 425,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 265,
	347, 213, 438, 526, 305, 0, 0, 0, 0, 0,
	539, 760, 0, 0, 0, 0, 4409, 0, 0, 0,
	0, 252, 0, 0, 259, 0, 0, 0, 373, 382,
	381, 361, 362, 364, 366, 372, 379, 385, 358, 367,
	0, 0, 644, 0, 0, 0, 284, 343, 291, 283,
	615, 0, 0, 0, 0, 0, 0, 631, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 4407, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 316,
	0, 426, 276, 0, 480, 0, 322, 337, 0, 0,
	0, 4408, 4276, 4406, 0, 0, 0, 0, 665, 0,
	0, 0, 0, 0, 0, 0, 387, 0, 352, 208,
	236, 0, 0, 437, 488, 500, 0, 0, 0, 0,
	272, 0, 498, 451, 639, 246, 303, 485, 458, 496,
	466, 306, 0, 0, 497, 394, 620, 476, 636, 666,
	667, 282, 431, 650, 554, 659, 684, 237, 279, 445,
	538, 642, 522, 420, 616, 617, 351, 521, 314, 212,
	391, 672, 235, 506, 393, 256, 244, 622, 647, 318,
	270, 308, 483, 0, 679, 224, 549, 633, 253, 510,
	0, 0, 687, 261, 532, 645, 634, 226, 629, 531,
	416, 348, 349, 225, 0, 484, 287, 312, 0, 0,
	277, 440, 624, 625, 275, 688, 240, 658, 231, 0,
	657, 433, 619, 630, 417, 405, 230, 628, 415, 404,
	356, 377, 378, 299, 327, 473, 397, 474, 326, 328,
	428, 427, 429, 218, 643, 662, 0, 219, 0, 527,
	646, 689, 478, 223, 247, 248, 251, 0, 298, 302,
	310, 313, 323, 324, 334, 389, 444, 472, 468, 477,
	0, 613, 637, 651, 664, 670, 671, 673, 674, 675,
	676, 677, 680, 678, 432, 332, 523, 355, 395, 0,
	0, 450, 499, 254, 641, 524, 243, 607, 421, 430,
	262, 264, 263, 238, 515, 612, 249, 269, 210, 0,
	0, 0, 0, 273, 274, 0, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 685, 540, 546, 541, 542, 543,
	544, 545, 0, 547, 0, 0, 0, 0, 0, 422,
	0, 626, 627, 708, 406, 513, 638, 357, 371, 374,
	363, 383, 0, 384, 359, 360, 365, 368, 369, 370,
	375, 376, 380, 386, 266, 221, 413, 423, 611, 333,
	227, 228, 229, 556, 557, 558, 559, 655, 656, 660,
	216, 489, 490, 491, 492, 311, 649, 329, 495, 494,
	353, 354, 401, 475, 572, 574, 585, 589, 591, 593,
	599, 602, 573, 575, 586, 590, 592, 594, 600, 603,
	562, 564, 566, 568, 581, 580, 577, 605, 606, 583,
	588, 567, 579, 584, 597, 604, 601, 561, 565, 569,
	578, 596, 595, 576, 587, 598, 582, 570, 563, 571,
	0, 207, 232, 390, 0, 481, 307, 686, 653, 511,
	648, 217, 234, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 211, 220, 233,
	245, 250, 257, 280, 295, 297, 304, 317, 330, 331,
	340, 341, 344, 350, 402, 409, 410, 411, 412, 434,
	435, 436, 439, 442, 443, 446, 448, 449, 452, 457,
	461, 462, 463, 465, 467, 469, 482, 487, 501, 502,
	503, 504, 505, 508, 509, 516, 517, 518, 519, 520,
	528, 529, 534, 535, 536, 537, 548, 621, 623, 640,
	661, 668, 507, 407, 455, 479, 614, 0, 0, 320,
	321, 470, 471, 335, 336, 682, 683, 319, 635, 669,
	632, 681, 663, 464, 400, 0, 0, 403, 300, 325,
	342, 0, 652, 530, 239, 493, 309, 268, 0, 0,
	222, 260, 242, 278, 293, 296, 346, 414, 424, 454,
	460, 315, 290, 258, 486, 255, 512, 551, 552, 553,
	555, 418, 285, 459, 91, 560, 398, 609, 610, 338,
	0, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 103, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 101, 0, 1811,
	0, 539, 760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 259, 0, 0, 0, 373,
	382, 381, 361, 362, 364, 366, 372, 379, 385, 358,
	367, 0, 0, 644, 0, 0, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 272, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 624, 625, 275, 688, 240, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 377, 378, 299, 327, 473, 397, 474, 326,
	328, 428, 427, 429, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 210,
	0, 0, 0, 0, 273, 274, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 0, 0, 0, 0, 0,
	422, 0, 626, 627, 708, 406, 513, 638, 357, 371,
	374, 363, 383, 0, 384, 359, 360, 365, 368, 369,
	370, 375, 376, 380, 386, 266, 221, 413, 423, 611,
	333, 227, 228, 229, 556, 557, 558, 559, 655, 656,
	660, 216, 489, 490, 491, 492, 311, 649, 329, 495,
	494, 353, 354, 401, 475, 572, 574, 585, 589, 591,
	593, 599, 602, 573, 575, 586, 590, 592, 594, 600,
	603, 562, 564, 566, 568, 581, 580, 577, 605, 606,
	583, 588, 567, 579, 584, 597, 604, 601, 561, 565,
	569, 578, 596, 595, 576, 587, 598, 582, 570, 563,
	571, 0, 207, 232, 390, 100, 481, 307, 686, 653,
	511, 648, 217, 234, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	320, 321, 470, 471, 335, 336, 682, 683, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 0,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 560, 0, 398, 609, 610,
	338, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	1853, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 0, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 0, 0, 0,
	1855, 539, 760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 259, 0, 0, 0, 373,
	382, 381, 361, 362, 364, 366, 372, 379, 385, 358,
	367, 0, 0, 644, 0, 0, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 1536, 0, 1537, 1538, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 272, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 624, 625, 275, 688, 240, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 377, 378, 299, 327, 473, 397, 474, 326,
	328, 428, 427, 429, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 210,
	0, 0, 0, 0, 273, 274, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 0, 0, 0, 0, 0,
	422, 0, 626, 627, 708, 406, 513, 638, 357, 371,
	374, 363, 383, 0, 384, 359, 360, 365, 368, 369,
	370, 375, 376, 380, 386, 266, 221, 413, 423, 611,
	333, 227, 228, 229, 556, 557, 558, 559, 655, 656,
	660, 216, 489, 490, 491, 492, 311, 649, 329, 495,
	494, 353, 354, 401, 475, 572, 574, 585, 589, 591,
	593, 599, 602, 573, 575, 586, 590, 592, 594, 600,
	603, 562, 564, 566, 568, 581, 580, 577, 605, 606,
	583, 588, 567, 579, 584, 597, 604, 601, 561, 565,
	569, 578, 596, 595, 576, 587, 598, 582, 570, 563,
	571, 0, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	320, 321, 470, 471, 335, 336, 682, 683, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 0,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 560, 0, 398, 609, 610,
	338, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 0, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 0, 0, 0,
	0, 539, 760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 259, 0, 0, 0, 373,
	382, 381, 361, 362, 364, 366, 372, 379, 385, 358,
	367, 0, 0, 644, 0, 0, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 4270,
	4271, 4272, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 272, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 624, 625, 275, 688, 240, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 377, 378, 299, 327, 473, 397, 474, 326,
	328, 428, 427, 429, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 210,
	0, 0, 0, 0, 273, 274, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 0, 0, 0, 0, 0,
	422, 0, 626, 627, 708, 406, 513, 638, 357, 371,
	374, 363, 383, 0, 384, 359, 360, 365, 368, 369,
	370, 375, 376, 380, 386, 266, 221, 413, 423, 611,
	333, 227, 228, 229, 556, 557, 558, 559, 655, 656,
	660, 216, 489, 490, 491, 492, 311, 649, 329, 495,
	494, 353, 354, 401, 475, 572, 574, 585, 589, 591,
	593, 599, 602, 573, 575, 586, 590, 592, 594, 600,
	603, 562, 564, 566, 568, 581, 580, 577, 605, 606,
	583, 588, 567, 579, 584, 597, 604, 601, 561, 565,
	569, 578, 596, 595, 576, 587, 598, 582, 570, 563,
	571, 0, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	320, 321, 470, 471, 335, 336, 682, 683, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 0,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 560, 0, 398, 609, 610,
	338, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 0, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 101, 0, 0,
	0, 539, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 259, 0, 0, 0, 373,
	382, 381, 361, 362, 364, 366, 372, 379, 385, 358,
	367, 0, 0, 644, 0, 0, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 272, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 624, 625, 275, 688, 240, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 377, 378, 299, 327, 473, 397, 474, 326,
	328, 428, 427, 429, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 210,
	0, 0, 0, 0, 273, 274, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 0, 0, 0, 0, 0,
	422, 0, 626, 627, 708, 406, 513, 638, 357, 371,
	374, 363, 383, 0, 384, 359, 360, 365, 368, 369,
	370, 375, 376, 380, 386, 266, 221, 413, 423, 611,
	333, 227, 228, 229, 556, 557, 558, 559, 655, 656,
	660, 216, 489, 490, 491, 492, 311, 649, 329, 495,
	494, 353, 354, 401, 475, 572, 574, 585, 589, 591,
	593, 599, 602, 573, 575, 586, 590, 592, 594, 600,
	603, 562, 564, 566, 568, 581, 580, 577, 605, 606,
	583, 588, 567, 579, 584, 597, 604, 601, 561, 565,
	569, 578, 596, 595, 576, 587, 598, 582, 570, 563,
	571, 0, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 0, 281, 0, 0, 0, 0,
	0, 0, 2512, 0, 0, 2511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	320, 321, 470, 471, 335, 336, 682, 683, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 0,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 560, 0, 398, 609, 610,
	338, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	2444, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 0, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 0, 0, 0,
	2032, 539, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 259, 0, 0, 0, 373,
	382, 381, 361, 362, 364, 366, 372, 379, 385, 358,
	367, 0, 0, 644, 0, 0, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 272, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 2442, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 624, 625, 275, 688, 240, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 377, 378, 299, 327, 473, 397, 474, 326,
	328, 428, 427, 429, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 210,
	0, 0, 0, 0, 273, 274, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 0, 0, 0, 0, 0,
	422, 0, 626, 627, 708, 406, 513, 638, 357, 371,
	374, 363, 383, 0, 384, 359, 360, 365, 368, 369,
	370, 375, 376, 380, 386, 266, 221, 413, 423, 611,
	333, 227, 228, 229, 556, 557, 558, 559, 655, 656,
	660, 216, 489, 490, 491, 492, 311, 649, 329, 495,
	494, 353, 354, 401, 475, 572, 574, 585, 589, 591,
	593, 599, 602, 573, 575, 586, 590, 592, 594, 600,
	603, 562, 564, 566, 568, 581, 580, 577, 605, 606,
	583, 588, 567, 579, 584, 597, 604, 601, 561, 565,
	569, 578, 596, 595, 576, 587, 598, 582, 570, 563,
	571, 0, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	320, 321, 470, 471, 335, 336, 682, 683, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 0,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 560, 0, 398, 609, 610,
	338, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 0, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 0, 0, 0,
	0, 539, 760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 259, 0, 0, 0, 373,
	382, 381, 361, 362, 364, 366, 372, 379, 385, 358,
	367, 0, 0, 644, 0, 0, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 1140, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 387, 1146, 352,
	208, 236, 1144, 0, 437, 488, 500, 0, 0, 0,
	0, 272, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 624, 625, 275, 688, 240, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 377, 378, 299, 327, 473, 397, 474, 326,
	328, 428, 427, 429, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 210,
	0, 0, 0, 0, 273, 274, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 0, 0, 0, 0, 0,
	422, 0, 626, 627, 708, 406, 513, 638, 357, 371,
	374, 363, 383, 0, 384, 359, 360, 365, 368, 369,
	370, 375, 376, 380, 386, 266, 221, 413, 423, 611,
	333, 227, 228, 229, 556, 557, 558, 559, 655, 656,
	660, 216, 489, 490, 491, 492, 311, 649, 329, 495,
	494, 353, 354, 401, 475, 572, 574, 585, 589, 591,
	593, 599, 602, 573, 575, 586, 590, 592, 594, 600,
	603, 562, 564, 566, 568, 581, 580, 577, 605, 606,
	583, 588, 567, 579, 584, 597, 604, 601, 561, 565,
	569, 578, 596, 595, 576, 587, 598, 582, 570, 563,
	571, 0, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	320, 321, 470, 471, 335, 336, 682, 683, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 0,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 560, 0, 398, 609, 610,
	338, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	2444, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 0, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 0, 0, 0,
	2032, 539, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 259, 0, 0, 0, 373,
	382, 381, 361, 362, 364, 366, 372, 379, 385, 358,
	367, 0, 0, 644, 0, 0, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 272, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 624, 625, 275, 688, 240, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 377, 378, 299, 327, 473, 397, 474, 326,
	328, 428, 427, 429, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 210,
	0, 0, 0, 0, 273, 274, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 0, 0, 0, 0, 0,
	422, 0, 626, 627, 708, 406, 513, 638, 357, 371,
	374, 363, 383, 0, 384, 359, 360, 365, 368, 369,
	370, 375, 376, 380, 386, 266, 221, 413, 423, 611,
	333, 227, 228, 229, 556, 557, 558, 559, 655, 656,
	660, 216, 489, 490, 491, 492, 311, 649, 329, 495,
	494, 353, 354, 401, 475, 572, 574, 585, 589, 591,
	593, 599, 602, 573, 575, 586, 590, 592, 594, 600,
	603, 562, 564, 566, 568, 581, 580, 577, 605, 606,
	583, 588, 567, 579, 584, 597, 604, 601, 561, 565,
	569, 578, 596, 595, 576, 587, 598, 582, 570, 563,
	571, 0, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	320, 321, 470, 471, 335, 336, 682, 683, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 0,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 560, 0, 398, 609, 610,
	338, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 0, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 0, 0, 1811,
	0, 539, 760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 259, 0, 0, 0, 373,
	382, 381, 361, 362, 364, 366, 372, 379, 385, 358,
	367, 0, 0, 644, 0, 0, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 3836, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 272, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 624, 625, 275, 688, 240, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 377, 378, 299, 327, 473, 397, 474, 326,
	328, 428, 427, 429, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 210,
	0, 0, 0, 0, 273, 274, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 0, 0, 0, 0, 0,
	422, 0, 626, 627, 708, 406, 513, 638, 357, 371,
	374, 363, 383, 0, 384, 359, 360, 365, 368, 369,
	370, 375, 376, 380, 386, 266, 221, 413, 423, 611,
	333, 227, 228, 229, 556, 557, 558, 559, 655, 656,
	660, 216, 489, 490, 491, 492, 311, 649, 329, 495,
	494, 353, 354, 401, 475, 572, 574, 585, 589, 591,
	593, 599, 602, 573, 575, 586, 590, 592, 594, 600,
	603, 562, 564, 566, 568, 581, 580, 577, 605, 606,
	583, 588, 567, 579, 584, 597, 604, 601, 561, 565,
	569, 578, 596, 595, 576, 587, 598, 582, 570, 563,
	571, 0, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	320, 321, 470, 471, 335, 336, 682, 683, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 0,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 560, 0, 398, 609, 610,
	338, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 0, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 0, 0, 0,
	2204, 539, 760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 259, 0, 0, 0, 373,
	382, 381, 361, 362, 364, 366, 372, 379, 385, 358,
	367, 0, 0, 644, 0, 0, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 272, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 624, 625, 275, 688, 240, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 377, 378, 299, 327, 473, 397, 474, 326,
	328, 428, 427, 429, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 210,
	0, 0, 0, 0, 273, 274, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 0, 0, 0, 0, 0,
	422, 0, 626, 627, 708, 406, 513, 638, 357, 371,
	374, 363, 383, 0, 384, 359, 360, 365, 368, 369,
	370, 375, 376, 380, 386, 266, 221, 413, 423, 611,
	333, 227, 228, 229, 556, 557, 558, 559, 655, 656,
	660, 216, 489, 490, 491, 492, 311, 649, 329, 495,
	494, 353, 354, 401, 475, 572, 574, 585, 589, 591,
	593, 599, 602, 573, 575, 586, 590, 592, 594, 600,
	603, 562, 564, 566, 568, 581, 580, 577, 605, 606,
	583, 588, 567, 579, 584, 597, 604, 601, 561, 565,
	569, 578, 596, 595, 576, 587, 598, 582, 570, 563,
	571, 0, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	320, 321, 470, 471, 335, 336, 682, 683, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 0,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 560, 0, 398, 609, 610,
	338, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 0, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 0, 0, 0,
	2981, 539, 760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 259, 0, 0, 0, 373,
	382, 381, 361, 362, 364, 366, 372, 379, 385, 358,
	367, 0, 0, 644, 0, 0, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2982, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 272, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 624, 625, 275, 688, 240, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 377, 378, 299, 327, 473, 397, 474, 326,
	328, 428, 427, 429, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 210,
	0, 0, 0, 0, 273, 274, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 0, 0, 0, 0, 0,
	422, 0, 626, 627, 708, 406, 513, 638, 357, 371,
	374, 363, 383, 0, 384, 359, 360, 365, 368, 369,
	370, 375, 376, 380, 386, 266, 221, 413, 423, 611,
	333, 227, 228, 229, 556, 557, 558, 559, 655, 656,
	660, 216, 489, 490, 491, 492, 311, 649, 329, 495,
	494, 353, 354, 401, 475, 572, 574, 585, 589, 591,
	593, 599, 602, 573, 575, 586, 590, 592, 594, 600,
	603, 562, 564, 566, 568, 581, 580, 577, 605, 606,
	583, 588, 567, 579, 584, 597, 604, 601, 561, 565,
	569, 578, 596, 595, 576, 587, 598, 582, 570, 563,
	571, 0, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	320, 321, 470, 471, 335, 336, 682, 683, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 0,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 560, 0, 398, 609, 610,
	338, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 0, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 0, 0, 0,
	0, 539, 760, 0, 0, 0, 0, 2948, 0, 0,
	0, 0, 252, 0, 0, 259, 2949, 0, 0, 373,
	382, 381, 361, 362, 364, 366, 372, 379, 385, 358,
	367, 0, 0, 644, 0, 0, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 272, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 624, 625, 275, 688, 240, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 377, 378, 299, 327, 473, 397, 474, 326,
	328, 428, 427, 429, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 210,
	0, 0, 0, 0, 273, 274, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 0, 0, 0, 0, 0,
	422, 0, 626, 627, 708, 406, 513, 638, 357, 371,
	374, 363, 383, 0, 384, 359, 360, 365, 368, 369,
	370, 375, 376, 380, 386, 266, 221, 413, 423, 611,
	333, 227, 228, 229, 556, 557, 558, 559, 655, 656,
	660, 216, 489, 490, 491, 492, 311, 649, 329, 495,
	494, 353, 354, 401, 475, 572, 574, 585, 589, 591,
	593, 599, 602, 573, 575, 586, 590, 592, 594, 600,
	603, 562, 564, 566, 568, 581, 580, 577, 605, 606,
	583, 588, 567, 579, 584, 597, 604, 601, 561, 565,
	569, 578, 596, 595, 576, 587, 598, 582, 570, 563,
	571, 0, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	320, 321, 470, 471, 335, 336, 682, 683, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 0,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 560, 0, 398, 609, 610,
	338, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 289, 1874, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 0, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 0, 0, 0,
	1873, 539, 760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 259, 0, 0, 0, 373,
	382, 381, 361, 362, 364, 366, 372, 379, 385, 358,
	367, 0, 0, 644, 0, 0, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 272, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 624, 625, 275, 688, 240, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 377, 378, 299, 327, 473, 397, 474, 326,
	328, 428, 427, 429, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 210,
	0, 0, 0, 0, 273, 274, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 0, 0, 0, 0, 0,
	422, 0, 626, 627, 708, 406, 513, 638, 357, 371,
	374, 363, 383, 0, 384, 359, 360, 365, 368, 369,
	370, 375, 376, 380, 386, 266, 221, 413, 423, 611,
	333, 227, 228, 229, 556, 557, 558, 559, 655, 656,
	660, 216, 489, 490, 491, 492, 311, 649, 329, 495,
	494, 353, 354, 401, 475, 572, 574, 585, 589, 591,
	593, 599, 602, 573, 575, 586, 590, 592, 594, 600,
	603, 562, 564, 566, 568, 581, 580, 577, 605, 606,
	583, 588, 567, 579, 584, 597, 604, 601, 561, 565,
	569, 578, 596, 595, 576, 587, 598, 582, 570, 563,
	571, 0, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	320, 321, 470, 471, 335, 336, 682, 683, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 0,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 560, 0, 398, 609, 610,
	338, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 0, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 0, 0, 0,
	0, 539, 762, 763, 764, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 259, 0, 0, 0, 373,
	382, 381, 361, 362, 364, 366, 372, 379, 385, 358,
	367, 0, 0, 644, 0, 0, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 272, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 624, 625, 275, 688, 240, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 377, 378, 299, 327, 473, 397, 474, 326,
	328, 428, 427, 429, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 210,
	0, 0, 0, 0, 273, 274, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 0, 0, 0, 0, 0,
	422, 0, 626, 627, 708, 406, 513, 638, 357, 371,
	374, 363, 383, 0, 384, 359, 360, 365, 368, 369,
	370, 375, 376, 380, 386, 266, 221, 413, 423, 611,
	333, 227, 228, 229, 556, 557, 558, 559, 655, 656,
	660, 216, 489, 490, 491, 492, 311, 649, 329, 495,
	494, 353, 354, 401, 475, 572, 574, 585, 589, 591,
	593, 599, 602, 573, 575, 586, 590, 592, 594, 600,
	603, 562, 564, 566, 568, 581, 580, 577, 605, 606,
	583, 588, 567, 579, 584, 597, 604, 601, 561, 565,
	569, 578, 596, 595, 576, 587, 598, 582, 570, 563,
	571, 0, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	320, 321, 470, 471, 335, 336, 682, 683, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 0,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 560, 0, 398, 609, 610,
	338, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 0, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 0, 0, 0,
	0, 539, 760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 259, 0, 0, 0, 373,
	382, 381, 361, 362, 364, 366, 372, 379, 385, 358,
	367, 0, 0, 644, 0, 0, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 4276, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 272, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 624, 625, 275, 688, 240, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 377, 378, 299, 327, 473, 397, 474, 326,
	328, 428, 427, 429, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 210,
	0, 0, 0, 0, 273, 274, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 0, 0, 0, 0, 0,
	422, 0, 626, 627, 708, 406, 513, 638, 357, 371,
	374, 363, 383, 0, 384, 359, 360, 365, 368, 369,
	370, 375, 376, 380, 386, 266, 221, 413, 423, 611,
	333, 227, 228, 229, 556, 557, 558, 559, 655, 656,
	660, 216, 489, 490, 491, 492, 311, 649, 329, 495,
	494, 353, 354, 401, 475, 572, 574, 585, 589, 591,
	593, 599, 602, 573, 575, 586, 590, 592, 594, 600,
	603, 562, 564, 566, 568, 581, 580, 577, 605, 606,
	583, 588, 567, 579, 584, 597, 604, 601, 561, 565,
	569, 578, 596, 595, 576, 587, 598, 582, 570, 563,
	571, 0, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	320, 321, 470, 471, 335, 336, 682, 683, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 0,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 560, 0, 398, 609, 610,
	338, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 0, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 0, 0, 0,
	0, 539, 760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 259, 0, 0, 0, 373,
	382, 381, 361, 362, 364, 366, 372, 379, 385, 358,
	367, 0, 0, 644, 0, 0, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 4192, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 272, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 624, 625, 275, 688, 240, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 377, 378, 299, 327, 473, 397, 474, 326,
	328, 428, 427, 429, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 210,
	0, 0, 0, 0, 273, 274, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 0, 0, 0, 0, 0,
	422, 0, 626, 627, 708, 406, 513, 638, 357, 371,
	374, 363, 383, 0, 384, 359, 360, 365, 368, 369,
	370, 375, 376, 380, 386, 266, 221, 413, 423, 611,
	333, 227, 228, 229, 556, 557, 558, 559, 655, 656,
	660, 216, 489, 490, 491, 492, 311, 649, 329, 495,
	494, 353, 354, 401, 475, 572, 574, 585, 589, 591,
	593, 599, 602, 573, 575, 586, 590, 592, 594, 600,
	603, 562, 564, 566, 568, 581, 580, 577, 605, 606,
	583, 588, 567, 579, 584, 597, 604, 601, 561, 565,
	569, 578, 596, 595, 576, 587, 598, 582, 570, 563,
	571, 0, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	320, 321, 470, 471, 335, 336, 682, 683, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 0,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 560, 0, 398, 609, 610,
	338, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 0, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 0, 0, 0,
	2032, 539, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 259, 0, 0, 0, 373,
	382, 381, 361, 362, 364, 366, 372, 379, 385, 358,
	367, 0, 0, 644, 0, 0, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 272, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 624, 625, 275, 688, 240, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 377, 378, 299, 327, 473, 397, 474, 326,
	328, 428, 427, 429, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 210,
	0, 0, 0, 0, 273, 274, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 0, 0, 0, 0, 0,
	422, 0, 626, 627, 708, 406, 513, 638, 357, 371,
	374, 363, 383, 0, 384, 359, 360, 365, 368, 369,
	370, 375, 376, 380, 386, 266, 221, 413, 423, 611,
	333, 227, 228, 229, 556, 557, 558, 559, 655, 656,
	660, 216, 489, 490, 491, 492, 311, 649, 329, 495,
	494, 353, 354, 401, 475, 572, 574, 585, 589, 591,
	593, 599, 602, 573, 575, 586, 590, 592, 594, 600,
	603, 562, 564, 566, 568, 581, 580, 577, 605, 606,
	583, 588, 567, 579, 584, 597, 604, 601, 561, 565,
	569, 578, 596, 595, 576, 587, 598, 582, 570, 563,
	571, 0, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	320, 321, 470, 471, 335, 336, 682, 683, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 0,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 560, 0, 398, 609, 610,
	338, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 0, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 0, 0, 0,
	0, 539, 760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 259, 0, 0, 0, 373,
	382, 381, 361, 362, 364, 366, 372, 379, 385, 358,
	367, 0, 0, 644, 0, 0, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 3836, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 272, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 624, 625, 275, 688, 240, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 377, 378, 299, 327, 473, 397, 474, 326,
	328, 428, 427, 429, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 210,
	0, 0, 0, 0, 273, 274, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 0, 0, 0, 0, 0,
	422, 0, 626, 627, 708, 406, 513, 638, 357, 371,
	374, 363, 383, 0, 384, 359, 360, 365, 368, 369,
	370, 375, 376, 380, 386, 266, 221, 413, 423, 611,
	333, 227, 228, 229, 556, 557, 558, 559, 655, 656,
	660, 216, 489, 490, 491, 492, 311, 649, 329, 495,
	494, 353, 354, 401, 475, 572, 574, 585, 589, 591,
	593, 599, 602, 573, 575, 586, 590, 592, 594, 600,
	603, 562, 564, 566, 568, 581, 580, 577, 605, 606,
	583, 588, 567, 579, 584, 597, 604, 601, 561, 565,
	569, 578, 596, 595, 576, 587, 598, 582, 570, 563,
	571, 0, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	320, 321, 470, 471, 335, 336, 682, 683, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 0,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 560, 0, 398, 609, 610,
	338, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	388, 286, 0, 0, 215, 533, 0, 456, 0, 214,
	0, 514, 271, 399, 396, 618, 301, 292, 288, 267,
	339, 408, 453, 550, 447, 0, 392, 0, 654, 525,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	265, 347, 213, 438, 526, 305, 0, 101, 0, 0,
	0, 539, 760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 259, 0, 0, 0, 373,
	382, 381, 361, 362, 364, 366, 372, 379, 385, 358,
	367, 0, 0, 644, 0, 0, 0, 284, 343, 291,
	283, 615, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 426, 276, 0, 480, 0, 322, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 352,
	208, 236, 0, 0, 437, 488, 500, 0, 0, 0,
	0, 272, 0, 498, 451, 639, 246, 303, 485, 458,
	496, 466, 306, 0, 0, 497, 394, 620, 476, 636,
	666, 667, 282, 431, 650, 554, 659, 684, 237, 279,
	445, 538, 642, 522, 420, 616, 617, 351, 521, 314,
	212, 391, 672, 235, 506, 393, 256, 244, 622, 647,
	318, 270, 308, 483, 0, 679, 224, 549, 633, 253,
	510, 0, 0, 687, 261, 532, 645, 634, 226, 629,
	531, 416, 348, 349, 225, 0, 484, 287, 312, 0,
	0, 277, 440, 624, 625, 275, 688, 240, 658, 231,
	0, 657, 433, 619, 630, 417, 405, 230, 628, 415,
	404, 356, 377, 378, 299, 327, 473, 397, 474, 326,
	328, 428, 427, 429, 218, 643, 662, 0, 219, 0,
	527, 646, 689, 478, 223, 247, 248, 251, 0, 298,
	302, 310, 313, 323, 324, 334, 389, 444, 472, 468,
	477, 0, 613, 637, 651, 664, 670, 671, 673, 674,
	675, 676, 677, 680, 678, 432, 332, 523, 355, 395,
	0, 0, 450, 499, 254, 641, 524, 243, 607, 421,
	430, 262, 264, 263, 238, 515, 612, 249, 269, 210,
	0, 0, 0, 0, 273, 274, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 685, 540, 546, 541, 542,
	543, 544, 545, 0, 547, 0, 0, 0, 0, 0,
	422, 0, 626, 627, 708, 406, 513, 638, 357, 371,
	374, 363, 383, 0, 384, 359, 360, 365, 368, 369,
	370, 375, 376, 380, 386, 266, 221, 413, 423, 611,
	333, 227, 228, 229, 556, 557, 558, 559, 655, 656,
	660, 216, 489, 490, 491, 492, 311, 649, 329, 495,
	494, 353, 354, 401, 475, 572, 574, 585, 589, 591,
	593, 599, 602, 573, 575, 586, 590, 592, 594, 600,
	603, 562, 564, 566, 568, 581, 580, 577, 605, 606,
	583, 588, 567, 579, 584, 597, 604, 601, 561, 565,
	569, 578, 596, 595, 576, 587, 598, 582, 570, 563,
	571, 0, 207, 232, 390, 0, 481, 307, 686, 653,
	511, 648, 217, 234, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 211, 220,
	233, 245, 250, 257, 280, 295, 297, 304, 317, 330,
	331, 340, 341, 344, 350, 402, 409, 410, 411, 412,
	434, 435, 436, 439, 442, 443, 446, 448, 449, 452,
	457, 461, 462, 463, 465, 467, 469, 482, 487, 501,
	502, 503, 504, 505, 508, 509, 516, 517, 518, 519,
	520, 528, 529, 534, 535, 536, 537, 548, 621, 623,
	640, 661, 668, 507, 407, 455, 479, 614, 0, 0,
	320, 321, 470, 471, 335, 336, 682, 683, 319, 635,
	669, 632, 681, 663, 464, 400, 0, 0, 403, 300,
	325, 342, 0, 652, 530, 239, 493, 309, 268, 0,
	0, 222, 260, 242, 278, 293, 296, 346, 414, 424,
	454, 460, 315, 290, 258, 486, 255, 512, 551, 552,
	553, 555, 418, 285, 459, 0, 560, 398, 609, 610,
	338, 2513, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 0, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 0, 539, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 0, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 1855, 539, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 0, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 0, 539, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 2151, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 0, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 2142, 539, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 1999, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 0, 539, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 1997, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 0, 539, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 1995, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 0, 539, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 1993, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 0, 539, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 1991, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 0, 539, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 1987, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 0, 539, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 1985, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 0, 539, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 1983, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 0, 539, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 0, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 1958, 0,
	0, 0, 539, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 1859, 289, 0, 0, 0,
	0, 388, 286, 0, 0, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 0, 539, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 0, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 101, 0,
	0, 0, 539, 995, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 0, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 0, 539, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1513,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 1512,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 0, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 0, 539, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1088, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 0, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 0, 539, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 711, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 0, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 0, 539, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 4283, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 0, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 0, 539, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 0, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 0, 539, 995, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 560, 0, 398, 609,
	610, 338, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 388, 286, 0, 0, 215, 533, 0, 456, 0,
	214, 0, 514, 271, 399, 396, 618, 301, 292, 288,
	267, 339, 408, 453, 550, 447, 0, 392, 0, 654,
	525, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 265, 347, 213, 438, 526, 305, 0, 0, 0,
	0, 0, 539, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 259, 0, 0, 0,
	373, 382, 381, 361, 362, 364, 366, 372, 379, 385,
	358, 367, 0, 0, 644, 0, 0, 0, 284, 343,
	291, 283, 615, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 426, 276, 0, 480, 0, 322, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 387, 0,
	352, 208, 236, 0, 0, 437, 488, 500, 0, 0,
	0, 0, 272, 0, 498, 451, 639, 246, 303, 485,
	458, 496, 466, 306, 0, 0, 497, 394, 620, 476,
	636, 666, 667, 282, 431, 650, 554, 659, 684, 237,
	279, 445, 538, 642, 522, 420, 616, 617, 351, 521,
	314, 212, 391, 672, 235, 506, 393, 256, 244, 622,
	647, 318, 270, 308, 483, 0, 679, 224, 549, 633,
	253, 510, 0, 0, 687, 261, 532, 645, 634, 226,
	629, 531, 416, 348, 349, 225, 0, 484, 287, 312,
	0, 0, 277, 440, 624, 625, 275, 688, 240, 658,
	231, 0, 657, 433, 619, 630, 417, 405, 230, 628,
	415, 404, 356, 377, 378, 299, 327, 473, 397, 474,
	326, 328, 428, 427, 429, 218, 643, 662, 0, 219,
	0, 527, 646, 689, 478, 223, 247, 248, 251, 0,
	298, 302, 310, 313, 323, 324, 334, 389, 444, 472,
	468, 477, 0, 613, 637, 651, 664, 670, 671, 673,
	674, 675, 676, 677, 680, 678, 432, 332, 523, 355,
	395, 0, 0, 450, 499, 254, 641, 524, 243, 607,
	421, 430, 262, 264, 263, 238, 515, 612, 249, 269,
	210, 0, 0, 0, 0, 273, 274, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 685, 540, 546, 541,
	542, 543, 544, 545, 0, 547, 0, 0, 0, 0,
	0, 422, 0, 626, 627, 708, 406, 513, 638, 357,
	371, 374, 363, 383, 0, 384, 359, 360, 365, 368,
	369, 370, 375, 376, 380, 386, 266, 221, 413, 423,
	611, 333, 227, 228, 229, 556, 557, 558, 559, 655,
	656, 660, 216, 489, 490, 491, 492, 311, 649, 329,
	495, 494, 353, 354, 401, 475, 572, 574, 585, 589,
	591, 593, 599, 602, 573, 575, 586, 590, 592, 594,
	600, 603, 562, 564, 566, 568, 581, 580, 577, 605,
	606, 583, 588, 567, 579, 584, 597, 604, 601, 561,
	565, 569, 578, 596, 595, 576, 587, 598, 582, 570,
	563, 571, 0, 207, 232, 390, 0, 481, 307, 686,
	653, 511, 648, 217, 234, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 211,
	220, 233, 245, 250, 257, 280, 295, 297, 304, 317,
	330, 331, 340, 341, 344, 350, 402, 409, 410, 411,
	412, 434, 435, 436, 439, 442, 443, 446, 448, 449,
	452, 457, 461, 462, 463, 465, 467, 469, 482, 487,
	501, 502, 503, 504, 505, 508, 509, 516, 517, 518,
	519, 520, 528, 529, 534, 535, 536, 537, 548, 621,
	623, 640, 661, 668, 507, 407, 455, 479, 614, 0,
	0, 320, 321, 470, 471, 335, 336, 682, 683, 319,
	635, 669, 632, 681, 663, 464, 400, 0, 0, 403,
	300, 325, 342, 0, 652, 530, 239, 493, 309, 268,
	0, 0, 222, 260, 242, 278, 293, 296, 346, 414,
	424, 454, 460, 315, 290, 258, 486, 255, 512, 551,
	552, 553, 555, 418, 285, 459, 0, 0, 398, 609,
	610, 338,
}

var yyPact = [...]int{
	-1000, -1000, -565, -1000, 5011, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2663, 2685, -1000, -1000, -1000,
	-1000, 2885, -1000, 521, -1000, 2314, 2162, 2672, 5629, -1000,
	58792, 757, -1000, 55712, -470, 882, 4372, 38001, -1000, 199,
	-1000, 186, 57252, 192, -1000, -1000, -1000, -1000, -470, 21799,
	2523, 20, 18, 58792, -1000, -1000, -1000, -1000, -381, 2868,
	2219, -1000, 457, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	54942, -1000, -1000, -1000, 1219, -1000, 2665, 2636, 2481, 930,
	1576, -1000, 2729, 2219, -1000, 21799, 2793, 2580, 21023, 21023,
	488, -1000, -1000, 269, 142, -1000, 2708, 32611, 58792, -1000,
	-1000, 41851, 2719, 57252, -1000, 2672, -1000, -1000, -1000, 208,
	-1000, 377, 2138, -1000, 2136, -1000, 1064, 1211, 396, 839,
	833, 395, 394, 392, 391, 389, 387, 386, 385, 421,
	-1000, 949, 949, -276, -277, 5073, 487, 484, 484, 1097,
	508, 2605, 2600, -1000, -1000, 949, 949, 949, 369, 949,
	949, 949, 949, 363, 362, 949, 949, 949, 949, 949,
	949, 949, 949, 949, 949, 949, 949, 949, 949, 949,
	949, 949, 965, 2672, 317, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 58792,
	347, 58792, -1000, 830, 546, -1000, -1000, -476, 1127, 1127,
	38, 1127, 1127, 1127, 1127, 154, 1065, 14, -1000, 144,
	331, 138, 344, 1115, 901, -1000, -1000, 312, 1115, 1959,
	-1000, 936, 336, 151, -1000, 1127, 1127, -1000, 14032, 224,
	14032, 14032, 335, 169, -1000, 2642, -1000, -1000, -1000, -1000,
	-1000, 1464, -1000, -1000, -1000, -1000, -68, 506, -1000, -1000,
	-1000, -1000, 57252, 54172, 281, -1000, -1000, 341, 2055, 1511,
	21799, 2659, 928, -1000, -1000, 1349, 885, -1000, -1000, -1000,
	-1000, -1000, 813, -1000, 24127, 24127, 24127, 24127, -1000, -1000,
	2148, 53402, 2148, 2148, 24127, 2148, 24127, 2148, 2148, 2148,
	2148, 21799, 2148, 2148, 2148, 2148, -1000, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, -1000, -1000, -1000, -1000,
	2148, 827, 2148, 2148, 2148, 2148, 2148, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2148, 2148, 2148, 2148, 2148, 2148,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, -1000, -1000, -1000, 1810, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2038, 1643, 1636, 1620, -1000, 18695,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2148, -1000, -1000, -1000, 58792, -1000, 2148, 234, 57252, 57252,
	417, 1452, -1000, -1000, 2729, 2219, -1000, 2868, 2796, 457,
	-1000, 4002, 1854, 1916, 1496, 2219, 968, 2123, 58792, -1000,
	2162, 189, -1000, -1000, -1000, -385, -400, 2427, 1729, 1943,
	2133, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2004,
	21799, -1000, -1000, 2869, -1000, 29531, 826, 2866, 52632, -1000,
	488, 488, 2132, 443, -6, -1000, -1000, -1000, -1000, 1012,
	37231, -1000, -1000, -1000, -1000, -1000, 2708, 457, -1000, 2065,
	58792, -1000, -1000, 9175, 57252, -1000, 2312, -1000, 2019, -1000,
	2182, 21799, 457, 2008, -1000, -1000, -1000, -1000, 949, 949,
	949, -1000, 388, 2790, 5629, 7843, -1000, -1000, -1000, 51862,
	2311, 57252, -1000, 2310, -1000, 1093, 851, 876, 876, 57252,
	-1000, -1000, 58022, 57252, 1092, 1089, 57252, 57252, 57252, 57252,
	-1000, 51092, -1000, 50322, 49552, 1451, 57252, 48782, 48012, 47242,
	46472, 45702, -1000, 2507, -1000, 2425, -1000, -1000, -1000, 58022,
	57252, 57252, 58022, 57252, 58022, 58792, 57252, -1000, -1000, 374,
	-1000, -1000, 1450, 1449, 1447, 949, 949, 1423, 1937, 1930,
	1924, 949, 949, 1422, 1910, 40311, 1887, 291, 1417, 1413,
	1404, 1435, 1885, 237, 1880, 1396, 1373, 1395, 57252, 2309,
	58792, -1000, 307, 967, 1022, -1000, -1000, -1000, 1001, 2672,
	2516, 2131, 502, 534, 57252, 494, 494, 494, 57252, -1000,
	-1000, 14810, 58792, 205, -1000, 1873, 21799, -1000, 1141, 1115,
	1115, -1000, -1000, -1000, -1000, -1000, -1000, 1127, 58792, 1141,
	-1000, -1000, -1000, 1115, 1127, 58792, 1127, 1127, 1127, 1127,
	1115, 1115, 1115, 1127, 58792, 58792, 58792, 58792, 58792, 58792,
	58792, 58792, 58792, 14032, 936, 1127, -477, -1000, 1867, -1000,
	-1000, -1000, 2436, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 14032, 14032, -1000, -1000, 2745,
	2740, -1000, -1000, -1000, 2129, -1000, 181, -14, 191, -1000,
	44932, 513, 982, -1000, 513, -1000, -1000, -1000, -1000, -1000,
	2128, 44162, -1000, -482, -483, -490, -491, -1000, -1000, -1000,
	-492, -493, -1000, -1000, -1000, 21799, 21799, 21799, 21799, -336,
	907, 1260, 24127, 2606, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 21799, 1231, 979, 24127, 24127, 24127, 24127, 24127, 24127,
	24127, 25679, 24903, 24127, 24127, 24127, 24127, 24127, 24127, -1000,
	-1000, 34921, 10397, 10397, 885, 885, 885, 885, -1000, -215,
	2127, 58022, -1000, -1000, -1000, 825, 21799, 21799, 885, -1000,
	1332, 8255, 18695, 21799, 21799, 21799, 21799, 970, 1511, 58022,
	21799, -1000, 1496, -1000, -1000, -1000, -1000, 1244, -1000, -1000,
	1082, 2560, 2560, 2560, 2560, 21799, 21799, 21799, 21799, 21799,
	21799, 21799, 21799, 21799, 21799, 2560, 21799, 771, 771, 235,
	21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799, 17142, 21799,
	21799, 24127, 21799, 21799, 21799, 1496, 21799, 21799, 21799, 21799,
	21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799,
	21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799,
	21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799,
	21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799,
	21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799,
	21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799,
	21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799,
	21799, 21799, 21799, 21799, 21799, 1496, 21799, 1689, 21799, 21799,
	21799, 21799, 21799, 21799, 21799, 16366, 21799, 21799, 21799, 21799,
	21799, -1000, -1000, -1000, -1000, -1000, -1000, 21799, 21799, 21799,
	21799, 21799, 21799, 21799, 21799, 1496, 21799, 21799, 21799, 21799,
	21799, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1802, 1804, 1669, 2148, 21799, -1000, 2125, -1000, -197,
	31841, 21799, 1851, 2857, 2352, 57252, -1000, -1000, -1000, -1000,
	2729, -1000, 2729, 1802, 3537, 2437, 21023, -1000, -1000, 3537,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1866, -1000, 337, 533, 2324, 307, 57252,
	531, 527, 526, 492, -1000, -106, 966, 58792, 2123, 2712,
	-1000, 2122, -1000, -1000, 2148, -1000, -377, -1000, -383, 2422,
	1848, 380, -1000, 1459, 21799, 21799, 2121, -1000, 1415, 58792,
	-1000, -336, -1000, 43392, -1000, -1000, 13254, 58792, 382, 58792,
	-1000, 31071, 42622, 296, -1000, -6, 2090, -1000, -10, -26,
	17918, 879, -1000, -1000, -1000, 457, -1000, 5073, 26449, 1948,
	879, 56, -1000, -1000, -1000, 2182, -1000, 2182, 2182, 2182,
	2182, 2182, 380, 380, 380, 2182, -1000, -1000, -1000, -1000,
	2223, 2182, 2213, -1000, 2182, 2182, 2182, 2182, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2202, 2202, 2202, 2199, 2199,
	2183, 2183, 478, -1000, 21799, 444, 41851, 2692, 1388, 1597,
	-228, -1000, 57252, 1612, 1584, 1581, -1000, -554, 2117, -1000,
	-1000, 2788, -1000, -1000, 1178, 1123, 1121, 983, 57252, 236,
	375, -1000, 468, -1000, 41851, 57252, 1088, 876, 57252, -1000,
	57252, -1000, -1000, -1000, -1000, -1000, 57252, -1000, -1000, 2114,
	-1000, 2062, 1188, 1118, 1155, 1106, 2114, -1000, -1000, -224,
	2114, -1000, 2114, -1000, 2114, -1000, 2114, -1000, 2114, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1006, 141,
	-391, 57252, 236, 501, -1000, 498, 34921, -1000, -1000, -1000,
	34921, 34921, -1000, -1000, -1000, -1000, 1840, 1836, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -538, 58792, -1000,
	287, 356, 357, 345, 58792, 838, 2587, 2584, 2583, 214,
	2574, 2559, 2558, 2551, 299, 361, 58792, 58792, 494, 2372,
	58792, 2689, 58792, 58792, -1000, -1000, -1000, -1000, -1000, 1834,
	1819, -1000, 1511, 58792, -1000, -1000, 1127, 1127, -1000, -1000,
	58792, 1127, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1127, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 58792, -1000, -1000, -1000,
	-1000, 1812, -1000, 58792, -68, 174, -1000, -1000, 57252, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -112, -1000,
	350, -19, 338, -1000, -1000, -1000, -1000, -1000, 2738, -1000,
	1511, 972, 1009, 907, 2148, -1000, -1000, 1342, -1000, -1000,
	-1000, -1000, -1000, 2148, 2148, 2148, -1000, -1000, -1000, -1000,
	-1000, 1231, 24127, 24127, 24127, 1456, 489, 1419, 1433, 1214,
	1197, 1197, 1226, 24127, 1226, 24127, 880, 880, 880, 880,
	880, -1000, -1000, -1000, -1000, -1000, -1000, 1810, -1000, 1808,
	-1000, 2148, 58022, 1995, 16366, 1530, 1411, 1496, 900, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4315,
	1496, 2055, 1496, 1775, 4307, 1061, -1000, 21799, 1496, 4269,
	-1000, -1000, 1496, 1496, 21799, -1000, -1000, 21799, 21799, 21799,
	21799, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
	1597, 21799, 1597, 2105, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2095, 2854, 1315, 1597, 1597, 1597, 1597, 4225,
	1597, 1597, 21799, 1662, -1000, -1000, -1000, 1675, 4164, 1399,
	4160, 1597, 1597, -1000, 1597, 4155, 4127, 1496, 3007, 2989,
	1597, 1597, 1597, 1597, 1597, 2943, 2893, 1597, 1597, 2797,
	1597, 4009, 1597, 2789, 2781, 2764, 2727, 2718, 2713, 2709,
	2702, 2697, 2691, 2666, 2623, 2617, 2595, 2590, 2586, 2582,
	2577, 1597, 1597, 1597, 3998, 1597, 3965, 1597, 3951, 1597,
	1597, 3944, 2555, 2549, 1496, 2094, -1000, 3940, 1597, 3932,
	3703, 3694, 2545, 3676, 3665, 3506, 1597, 1597, 1597, 2505,
	3471, 3424, 3420, 3294, 3277, 3249, 3241, 3230, 3216, 1597,
	1669, 1669, 1669, 1669, 1669, 3197, -340, 1597, 1496, -1000,
	-1000, -1000, -1000, 3186, 2501, 3179, 3167, 3154, 3148, 1496,
	2148, 824, -1000, -1000, 1669, 1496, 1496, 1669, 1669, 3142,
	3123, 3117, 3111, 3105, 3092, 1597, 1597, -1000, 1597, 3080,
	3061, 2484, 2474, 1496, -1000, 1669, 58792, -1000, -467, -1000,
	-34, 934, 2148, -1000, 40311, 1496, -1000, 10111, -1000, 1319,
	-1000, -1000, -1000, -1000, -1000, 36461, 1984, -1000, -1000, -1000,
	492, 524, 261, 492, 307, 287, 2349, 57252, 57252, 57252,
	58792, 1056, -1000, 316, -1000, 2148, -512, 20247, -1000, -1000,
	-1000, 380, 41, 35691, 877, 877, 119, -1000, 1511, 1511,
	21799, -1000, -1000, -1000, -1000, -1000, -1000, 823, 2832, 595,
	2148, -1000, 2089, 2483, -1000, -1000, -1000, 2708, 27220, -1000,
	-1000, 2148, 2148, 58792, 2046, 2033, -1000, 821, -1000, 1416,
	2090, -6, -29, -1000, -1000, -1000, -1000, 1511, -1000, 1549,
	-1000, 384, 4821, -1000, 466, -1000, -1000, -1000, -1000, 2532,
	49, -1000, -1000, -1000, 383, 380, -1000, -1000, 380, -1000,
	-1000, -1000, -1000, 1779, -1000, 1779, -1000, -1000, -1000, -1000,
	-1000, 1385, -1000, -1000, -1000, -1000, 1384, -1000, -1000, 1376,
	-1000, -1000, 2759, 2376, 444, -1000, -1000, 949, 1768, -1000,
	-1000, 2534, 949, 949, 57252, -1000, -1000, 1935, 2692, -1000,
	-44, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -547, 170,
	360, -1000, -1000, -1000, 7232, 57252, 1981, -1000, 225, -1000,
	1762, -1000, 57252, -1000, 1978, 2188, 57252, 57252, -1000, -1000,
	-1000, 57252, 2148, -1000, -1000, -1000, -1000, 515, 2654, 304,
	-1000, -1000, -362, -1000, -1000, 236, 225, 58022, 57252, 879,
	-1000, -1000, -1000, -1000, -1000, -541, 1958, 514, 58792, 58792,
	58792, 58792, 58792, 58792, 799, -1000, -1000, 5, 3, 212,
	-1000, 202, -1000, -1000, 1745, -1000, -1000, -1000, 2548, -1000,
	202, -1000, -1000, -1000, -1000, -1000, 348, 497, -1000, 58792,
	58792, 954, -1000, -1000, -1000, -1000, -1000, -1000, 1115, -1000,
	-1000, 1115, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2639, 58792, -22, -508, -1000, -505,
	21799, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1361, 483,
	1419, 24127, 24127, 8255, 8255, 24127, -1000, -1000, -1000, 1058,
	1058, 34921, -1000, 24127, 21799, -1000, -1000, 21799, 21799, 21799,
	1037, -1000, 21799, 1499, -1000, 21799, -1000, -340, 1669, 1597,
	1597, 1597, 1597, -340, -340, -340, -340, -340, -340, -340,
	-340, -340, -340, 2112, -1000, 21799, 21799, 21799, 1496, 342,
	-1000, -1000, -1000, -340, 21799, -1000, -1000, 2849, -1000, 21799,
	-1000, 34921, 21799, 21799, 21799, -1000, -1000, -1000, 21799, 21799,
	-1000, -1000, 21799, -1000, 21799, -1000, -1000, -1000, -1000, -1000,
	-1000, 21799, -1000, 21799, -1000, -1000, -1000, 21799, -1000, 21799,
	-1000, -1000, 21799, -1000, 21799, -1000, 21799, -1000, 21799, -1000,
	21799, -1000, 21799, -1000, 21799, -1000, 21799, -1000, 21799, -1000,
	21799, -1000, 21799, -1000, 21799, -1000, 21799, -1000, 21799, -1000,
	21799, -1000, 21799, -1000, 21799, -1000, 21799, -1000, -1000, -1000,
	21799, -1000, 21799, -1000, 21799, -1000, -1000, 21799, -1000, 21799,
	-1000, 21799, -1000, 21799, 21799, -1000, 21799, 21799, 21799, -1000,
	21799, 21799, 21799, 21799, -1000, -1000, -1000, -1000, 21799, 21799,
	21799, 21799, 21799, 21799, 21799, 21799, 21799, 21799, -1000, -1000,
	-1000, -1000, -1000, -1000, 21799, -1000, 41851, 16, -340, 1689,
	16, 1689, 23351, 832, 814, 22575, -1000, 21799, 15588, -1000,
	-1000, -1000, -1000, -1000, 21799, 21799, 21799, 21799, 21799, 21799,
	-1000, -1000, -1000, 21799, 21799, -1000, 21799, -1000, 21799, -1000,
	-1000, -1000, -1000, -1000, 934, -1000, 878, 874, 876, 57252,
	-1000, -1000, -1000, -1000, 2088, -1000, 2731, -1000, 2446, 2440,
	2845, 2832, 21023, -1000, 31071, 58792, 58792, 325, 58792, 287,
	511, 2370, -1000, 2349, 2349, 2349, -1000, 2686, -1000, 2186,
	1403, -1000, -1000, -1000, -1000, -1000, -458, -1000, 2499, 2493,
	877, 877, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12476,
	2729, 21799, 2367, 58022, 2148, -1000, 28761, -1000, -1000, 57252,
	58022, 31071, 31071, 31071, 31071, 31071, -1000, 2405, 2398, -1000,
	2394, 2383, 2556, 58792, 1802, 1952, -1000, 21799, 33381, 2031,
	31071, -1000, -1000, 31071, 58792, 11698, -1000, -1000, -27, -20,
	-1000, -1000, -1000, -1000, 5073, -1000, -1000, 1096, 2703, 2510,
	-1000, -1000, -1000, -1000, -1000, -1000, 1947, -1000, 1918, 2086,
	1909, 1899, 141, -1000, 2323, 2633, 949, 949, -1000, 1338,
	-1000, 1332, 1737, 1727, -1000, -1000, -1000, 469, -1000, -1000,
	-553, 1335, 2185, 2321, 21799, 2184, 2780, 2071, 57252, -1000,
	-1000, 58022, -1000, 265, -1000, 444, 57252, -1000, -1000, -1000,
	375, 58792, -1000, 10069, -1000, -1000, -1000, 225, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 58792, 2329, -1000, -1000, -1000,
	-1000, -1000, 164, 162, 1723, 1711, -1000, 197, 1706, -1000,
	-1000, 197, -1000, 58792, 944, 2376, 58792, -1000, -1000, -1000,
	1127, 1127, -1000, -1000, 2631, -1000, 1332, 1597, 24127, 24127,
	-1000, 885, -1000, -1000, 451, -307, 2182, 2182, -1000, 2182,
	2183, -1000, 2182, 165, 2182, 113, 2182, -1000, -1000, 1496,
	1496, -1000, 1669, 2457, 1765, 3050, -1000, 1511, 21799, 3044,
	-1000, -1000, -340, -340, -340, -340, -340, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -110, 3016, 2975,
	1597, -1000, 2178, 2176, -1000, 1597, 21799, 1597, 1496, 2435,
	1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
	1597, 1597, 2389, 2371, 2351, 2340, 2336, 2091, 2080, 2059,
	2047, 2043, 2013, 1975, 1934, 1928, 1914, 1907, 1597, 1597,
	1903, 1597, 1897, 1771, -1000, 1511, 1669, 2882, 1669, 1597,
	1597, 2874, 275, 1597, 1891, 1891, 1891, 1891, 1891, 1669,
	1669, 1669, 1669, 1597, 57252, -1000, -340, -1000, -1000, -387,
	-389, -1000, 1496, -340, 2082, 24127, 1597, 24127, 24127, 24127,
	1597, 1496, -1000, 1740, 1736, 2809, 1732, 1597, 2629, 1597,
	1597, 1597, 1726, -1000, 2734, 2148, 2734, 2148, 2734, 1861,
	1319, 58792, -1000, -1000, -1000, -1000, 2832, 2829, -1000, 2076,
	2148, -1000, -1000, -1000, -1000, -1000, 493, 58792, 58792, 2366,
	2365, 2364, -1000, 1690, -1000, -1000, 41, 414, -1000, 2472,
	2493, -1000, 2777, 2479, 2774, -1000, -1000, -1000, -1000, -1000,
	1511, -1000, 2660, 1983, -1000, 957, 2057, -1000, -1000, 20247,
	1865, 2511, 819, 1861, 2101, 2483, 2345, 2360, 3974, -1000,
	-1000, -1000, -1000, 2387, -1000, 2381, -1000, -1000, 2162, -1000,
	2515, 382, 31071, 2093, 2093, -1000, 818, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1169, 10069, 2887, -1000, 1703, -1000,
	1474, 223, 1331, -1000, -1000, 949, 949, -1000, 1086, 1076,
	-1000, 58792, 2167, -1000, 380, 1694, 380, 1330, -1000, -1000,
	1323, -1000, -1000, -1000, -1000, 2175, 2390, -1000, -1000, -1000,
	-1000, 294, 2165, 2772, -1000, 21799, 2163, 951, 2119, 57252,
	57252, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 490, 949, -522, 359, 352, 949, 949, 949,
	-560, -1000, -1000, 1844, 1826, -1000, -261, -1000, 21799, -1000,
	-1000, -1000, -1000, -1000, 1379, 1379, 1643, 1636, 1620, -1000,
	2162, -242, 57252, 57252, 57252, 57252, -1000, -1000, -1000, -1000,
	1247, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 885, 1496, 381, -248, 1496, -1000, -1000,
	380, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 21799, -1000, 21799, -1000, 21799, 1511, 21799, -1000, -1000,
	-1000, -1000, -1000, 2729, 1617, 21799, 21799, -1000, 1321, 1320,
	-340, 1597, -1000, -1000, -1000, 21799, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21799,
	-1000, 21799, -1000, 21799, -1000, 21799, -1000, 21799, -1000, 21799,
	-1000, 21799, -1000, 21799, -1000, 21799, -1000, 21799, -1000, 21799,
	-1000, 21799, -1000, 21799, -1000, 21799, -1000, 21799, -1000, 21799,
	-1000, -1000, 21799, -1000, -1000, -1000, 21799, -1000, 21799, -1000,
	21799, -1000, -1000, -1000, 21799, 252, 1058, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1496, 379,
	-1000, -1000, -1000, 2841, -1000, 1496, 21799, 8255, -1000, 8255,
	8255, 8255, -1000, -1000, -1000, 21799, -1000, 21799, 21799, -1000,
	21799, -1000, 21799, -1000, -1000, -1000, -1000, 21799, 2148, 2462,
	41081, 2148, 41081, 2148, 33381, -1000, -1000, 2829, 2791, 2767,
	233, 58792, -1000, -1000, 58792, 58792, 58792, -1000, 2469, 2471,
	2471, 2472, -1000, 2766, 2763, -1000, 1615, 2760, 1613, 1074,
	-1000, 58022, 21799, -1000, 2148, 40311, -1000, 354, 57252, 2148,
	-1000, 57252, -1000, 2795, -1000, -1000, 21799, 2159, -1000, 21799,
	-1000, -1000, -1000, -1000, 10397, 2832, 2093, -1000, -1000, 897,
	-1000, 21799, -1000, 9516, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1603, 1593, -1000, -1000, 2156, 21799, -1000,
	-1000, -1000, 1676, 1600, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 375, -551, 2097, 57252, 1316, -1000,
	1816, 2071, 355, 2148, 1577, 949, 949, 949, 1304, 1269,
	40311, 1807, -1000, 57252, 400, -1000, 375, -1000, -282, -283,
	1597, -1000, -1000, 2699, -1000, 15588, -1000, -1000, 2154, 2348,
	-1000, -1000, -1000, -1000, 2420, -222, -257, -1000, -1000, 1597,
	1597, 1597, 1992, 1496, -1000, 1597, 1597, 1592, 1575, -1000,
	-1000, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
	1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
	1597, 1669, 1652, -1000, 252, 1496, 2359, -1000, -1000, 10397,
	-1000, -1000, 2795, 2758, 16, -1000, -1000, 229, 16, 1511,
	1016, 1496, 1496, 1016, 1633, 1597, 1627, 1602, 1597, 1597,
	34151, -1000, 2757, 2754, 1773, -1000, -1000, 41081, 1773, 41081,
	934, 2791, -351, 21799, 21799, 1496, 2074, -1000, 57252, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2450, 1254, -1000, -1000,
	-1000, -1000, 1567, 1555, -1000, 1535, -1000, 2879, -1000, 1511,
	-1000, 2148, 2148, -1000, 809, 2057, -1000, 2729, 1511, 57252,
	1511, 31, 2795, -1000, 1597, -1000, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 2148, 2148, 2148, 2148, 2148, 2148, -1000, -1000, 57252,
	2084, -1000, -1000, 1777, 163, -1000, 1562, 2071, -1000, -1000,
	672, -1000, 21799, -1000, 40311, 1532, 1513, -1000, -1000, -1000,
	-1000, -560, -1000, -1000, -1000, -1000, -1000, -1000, 457, 2069,
	-1000, 946, 57252, 58792, -1000, 2419, -1000, -1000, -1000, -1000,
	21799, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21799, -1000,
	1496, 2358, -1000, -386, -1000, -524, 21799, -340, -1000, -1000,
	-340, -1000, -1000, -1000, -1000, -1000, 21799, -1000, -1000, 21799,
	-1000, 21799, -1000, -1000, 1773, -1000, -1000, -1000, 39541, -1000,
	1773, -1000, 1773, -1000, -351, -1000, 2067, -1000, 57252, 1511,
	351, 8825, 233, 9175, -1000, 1239, -1000, -1000, -1000, -1000,
	-1000, 58022, 57252, 2057, 57252, -1000, -1000, 1761, 1496, 2148,
	2729, -1000, 1742, -1000, -1000, 2153, 2321, -1000, -1000, -1000,
	19471, -1000, -1000, -1000, -1000, -1000, 196, -228, 15588, 10920,
	1688, -1000, -230, 1597, 1669, -1000, -497, -1000, -1000, -1000,
	-1000, 280, -1000, -1000, 2055, -1000, -1000, 1591, 1572, 1566,
	-1000, -1000, -1000, -1000, -1000, -1000, -351, -1000, -1000, 2693,
	-1000, -302, -1000, -568, -1000, -1000, 8825, 21799, 30301, 38771,
	-1000, -1000, -1000, -1000, 1970, 1635, -1000, -1000, -1000, 33381,
	56482, -1000, -213, 409, 21799, 2150, 1496, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 807, -1000, -1000,
	-1000, 2329, -250, -1000, -1000, -1000, 8580, -513, -319, -320,
	24127, -1000, 21799, -1000, 21799, -1000, 21799, -1000, 57252, 2148,
	-1000, -1000, 1035, 8825, -1000, -568, 1300, 6635, 774, 765,
	-1000, -1000, -1000, 2641, -1000, -1000, 2432, -1000, -1000, -1000,
	1599, -1000, 6230, -401, 2356, -1000, -137, -1000, -1000, -1000,
	1138, 1479, -1000, 1263, -1000, -1000, -1000, -1000, 1800, 57252,
	-1000, 14810, -242, -267, 1063, -1000, -1000, -1000, -1000, -1000,
	8255, 1561, 1495, 1597, -1000, 57252, -1000, -1000, 8825, 2647,
	2733, 2726, -1000, 245, 245, 1471, -1000, -1000, 56482, -396,
	879, 10397, -1000, 2355, 2354, 2883, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -562, 1574, -1000, -1000, -1000, 8580, -325,
	-1000, 21799, -1000, 21799, -1000, 1496, 7388, -1000, 10069, 27990,
	937, -1000, 945, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2683,
	31, -1000, 2875, -1000, 2872, 737, 737, -1000, 1215, -562,
	-1000, -1000, -1000, 1597, 1597, -1000, 1049, 1040, -1000, 21799,
	21799, -1000, 5615, -1000, -1000, -1000, -1000, 778, -1000, -1000,
	-1000, -1000, 9045, -406, -1000, -1000, -1000, -1000, -1000, 465,
	1327, -1000, -1000, -1000, -1000, -1000, 1025, 8825, -1000, 1286,
	1597, -1000, 27990, -1000, -1000, 10397, -1000, -1000, -1000, 485,
	8825, 8825, -1000, -1000, 273, -1000, 8825, 273, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3561, 3555, 40, 10, 55, 53, 3547, 2905, 3546,
	3545, 2919, 3544, 192, 3539, 3538, 3536, 3535, 3532, 3530,
	194, 193, 189, 3526, 3525, 3523, 3515, 3513, 3511, 3509,
	3507, 3505, 84, 105, 64, 110, 212, 221, 3503, 3501,
	68, 174, 218, 3499, 3497, 3495, 3493, 3491, 125, 208,
	96, 98, 211, 3489, 3487, 86, 3485, 3483, 3481, 3480,
	3478, 2, 15, 35, 34, 3476, 3475, 3469, 22, 3468,
	204, 202, 201, 1085, 3467, 205, 123, 59, 3466, 3465,
	3463, 3456, 4, 3, 3455, 6, 3447, 8, 3446, 3445,
	3443, 3442, 3441, 3432, 3430, 3425, 3424, 3423, 3418, 3417,
	3416, 3414, 3413, 3411, 3402, 268, 3401, 3400, 38, 3399,
	88, 3393, 3385, 3383, 3382, 3379, 21, 3378, 3375, 26,
	50, 81, 3369, 3368, 56, 3362, 3361, 3360, 3358, 3357,
	32, 3356, 37, 3355, 42, 3350, 3348, 133, 3345, 3344,
	3341, 48, 3339, 3337, 3332, 44, 186, 3331, 3330, 160,
	3329, 3326, 3325, 185, 216, 3320, 2465, 3319, 118, 3318,
	3316, 3315, 183, 181, 229, 3312, 119, 3309, 3306, 3300,
	3295, 142, 3293, 3292, 669, 3290, 3289, 12, 18, 288,
	3287, 3284, 209, 16, 63, 3282, 54, 58, 3281, 3275,
	14, 83, 3269, 116, 3263, 3253, 106, 77, 3250, 107,
	115, 3247, 3244, 25, 13, 3243, 7, 1, 9, 71,
	3231, 3229, 122, 3228, 3225, 3223, 104, 3221, 3219, 5012,
	3216, 97, 146, 113, 78, 3210, 187, 74, 3209, 3205,
	3203, 3199, 3195, 3194, 65, 3193, 3192, 3181, 213, 298,
	126, 3179, 3176, 147, 357, 140, 82, 141, 3175, 215,
	3174, 196, 90, 3168, 188, 3166, 3162, 158, 151, 3159,
	3157, 120, 182, 210, 3156, 109, 136, 128, 143, 101,
	153, 3154, 3149, 3144, 102, 72, 3142, 3140, 3139, 3138,
	190, 3137, 3136, 60, 3130, 99, 3128, 175, 3127, 139,
	67, 3126, 195, 176, 3125, 73, 180, 3120, 3115, 3114,
	66, 111, 70, 41, 3096, 171, 179, 134, 170, 3095,
	3093, 87, 3092, 3091, 3080, 80, 214, 1352, 280, 3075,
	3074, 439, 191, 152, 145, 95, 3064, 217, 3063, 3060,
	3059, 27, 4205, 5564, 206, 262, 173, 3058, 3056, 6848,
	28, 79, 36, 3052, 219, 3046, 149, 137, 3045, 3044,
	223, 197, 117, 177, 62, 3043, 3037, 3035, 3029, 30,
	3027, 3025, 3020, 3017, 3015, 3013, 51, 49, 47, 85,
	228, 75, 20, 108, 172, 167, 76, 3012, 3001, 3000,
	130, 103, 2999, 169, 168, 131, 144, 2998, 199, 154,
	138, 2996, 403, 45, 2994, 2993, 2992, 2984, 100, 2983,
	2982, 2978, 2976, 166, 159, 129, 92, 2970, 94, 112,
	164, 163, 61, 2968, 52, 2967, 2964, 43, 207, 46,
	2962, 2960, 2959, 39, 2958, 23, 124, 127, 2956, 5297,
	2952, 33, 239, 165, 2950, 2948, 11, 17, 19, 2947,
	2942, 2941, 2940, 150, 2936, 2934, 2933, 2931, 31, 57,
	29, 24, 121, 224, 89, 2925, 2924, 162, 2923, 2922,
	0, 1377, 135, 2909, 220,
}

//line sql.y:9340
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) compoundStatementUnion() CompoundStatement {
	v, _ := st.union.(CompoundStatement)
	return v
}

func (st *yySymType) compoundStatementsUnion() *CompoundStatements {
	v, _ := st.union.(*CompoundStatements)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createProcedureUnion() *CreateProcedure {
	v, _ := st.union.(*CreateProcedure)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) createViewUnion() *CreateView {
	v, _ := st.union.(*CreateView)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) elseIfUnion() *ElseIfBlock {
	v, _ := st.union.(*ElseIfBlock)
	return v
}

func (st *yySymType) elseIfsUnion() []*ElseIfBlock {
	v, _ := st.union.([]*ElseIfBlock)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() []Expr {
	v, _ := st.union.([]Expr)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) handlerActionUnion() HandlerAction {
	v, _ := st.union.(HandlerAction)
	return v
}

func (st *yySymType) handlerConditionUnion() HandlerCondition {
	v, _ := st.union.(HandlerCondition)
	return v
}

func (st *yySymType) handlerConditionsUnion() []HandlerCondition {
	v, _ := st.union.([]HandlerCondition)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) ignoreOrReplaceTypeUnion() IgnoreOrReplaceType {
	v, _ := st.union.(IgnoreOrReplaceType)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) procParamUnion() *ProcParameter {
	v, _ := st.union.(*ProcParameter)
	return v
}

func (st *yySymType) procParamModeUnion() ProcParameterMode {
	v, _ := st.union.(ProcParameterMode)
	return v
}

func (st *yySymType) procParamsUnion() []*ProcParameter {
	v, _ := st.union.([]*ProcParameter)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() *SelectExprs {
	v, _ := st.union.(*SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) signalConditionNameUnion() SignalConditionName {
	v, _ := st.union.(SignalConditionName)
	return v
}

func (st *yySymType) signalSetUnion() *SignalSet {
	v, _ := st.union.(*SignalSet)
	return v
}

func (st *yySymType) signalSetsUnion() []*SignalSet {
	v, _ := st.union.([]*SignalSet)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) statementsUnion() []Statement {
	v, _ := st.union.([]Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) tableStmtUnion() TableStatement {
	v, _ := st.union.(TableStatement)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 459, 7, 7, 11, 9, 9, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 82, 82, 82, 82, 82, 82, 82,
	66, 66, 67, 67, 68, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 59, 59, 59,
	60, 60, 62, 62, 65, 65, 63, 64, 61, 61,
	61, 61, 61, 170, 170, 273, 273, 273, 83, 81,
	81, 84, 84, 85, 85, 86, 86, 89, 89, 88,
	88, 87, 295, 429, 293, 293, 31, 100, 40, 40,
	39, 39, 42, 42, 41, 34, 34, 34, 35, 35,
	35, 35, 35, 35, 35, 35, 36, 36, 36, 36,
	36, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	38, 38, 18, 19, 37, 37, 37, 20, 20, 135,
	135, 21, 22, 22, 22, 22, 462, 462, 214, 214,
	212, 212, 213, 213, 300, 300, 23, 304, 304, 306,
	306, 306, 306, 294, 294, 294, 24, 24, 305, 305,
	307, 307, 307, 310, 310, 310, 310, 353, 353, 353,
	25, 25, 25, 25, 25, 25, 25, 25, 155, 431,
	431, 430, 425, 425, 424, 424, 423, 428, 428, 427,
	427, 426, 45, 44, 46, 46, 46, 47, 56, 56,
	56, 56, 57, 58, 432, 432, 394, 74, 74, 73,
	73, 73, 73, 73, 73, 75, 75, 71, 71, 70,
	70, 72, 72, 396, 396, 382, 382, 395, 395, 395,
	395, 395, 395, 395, 381, 381, 167, 167, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 447, 447, 447, 447, 446,
	446, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	178, 178, 190, 190, 190, 190, 190, 190, 176, 176,
	177, 175, 175, 175, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	451, 451, 451, 451, 451, 451, 451, 451, 451, 451,
	451, 451, 451, 451, 451, 451, 451, 451, 451, 451,
	451, 451, 451, 451, 451, 451, 451, 451, 451, 451,
	451, 451, 451, 451, 451, 451, 451, 451, 451, 451,
	451, 451, 189, 189, 184, 184, 184, 186, 186, 185,
	185, 185, 187, 187, 448, 448, 448, 448, 359, 359,
	359, 359, 362, 362, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 361, 361, 361, 361, 361, 361, 361,
	363, 363, 363, 363, 363, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 365, 365, 365, 365, 365, 365, 365, 365,
	380, 380, 369, 369, 374, 374, 375, 375, 376, 376,
	376, 377, 377, 377, 378, 378, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 373, 373, 372, 372, 372,
	383, 408, 408, 407, 407, 405, 405, 405, 405, 405,
	405, 405, 405, 392, 392, 402, 402, 402, 402, 402,
	391, 391, 387, 387, 387, 388, 388, 389, 389, 386,
	386, 390, 390, 404, 404, 403, 403, 384, 384, 385,
	385, 410, 449, 449, 449, 449, 449, 450, 450, 411,
	439, 441, 441, 441, 440, 440, 437, 438, 436, 436,
	436, 436, 436, 110, 110, 110, 325, 325, 326, 326,
	400, 400, 399, 399, 399, 401, 401, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 320, 320,
	320, 435, 435, 435, 435, 435, 435, 434, 434, 434,
	397, 397, 397, 397, 433, 433, 76, 76, 252, 252,
	452, 452, 454, 454, 454, 53, 53, 53, 53, 53,
	53, 52, 52, 52, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 54, 54, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 137, 137, 138, 138, 138, 138,
	140, 140, 140, 413, 413, 77, 77, 3, 3, 202,
	204, 205, 205, 203, 203, 203, 203, 203, 203, 79,
	79, 78, 78, 207, 206, 208, 208, 208, 1, 1,
	2, 2, 4, 4, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 379, 379, 379, 412,
	412, 414, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 143, 142, 142, 141, 144, 144, 144, 144,
	144, 144, 144, 144, 416, 416, 416, 80, 80, 417,
	366, 367, 368, 5, 6, 393, 415, 151, 151, 27,
	43, 43, 28, 28, 28, 28, 28, 29, 29, 90,
	93, 93, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 330, 330,
	319, 319, 328, 328, 318, 318, 344, 344, 344, 321,
	321, 321, 322, 322, 445, 445, 445, 313, 313, 92,
	92, 92, 345, 345, 345, 345, 95, 95, 455, 455,
	456, 456, 457, 457, 457, 96, 97, 97, 348, 348,
	349, 349, 98, 99, 111, 111, 111, 111, 111, 112,
	112, 112, 112, 112, 112, 136, 136, 136, 13, 13,
	13, 13, 107, 107, 107, 12, 12, 14, 94, 94,
	101, 442, 442, 443, 444, 444, 444, 444, 102, 104,
	30, 30, 30, 30, 30, 30, 161, 161, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	156, 156, 156, 150, 150, 463, 105, 106, 106, 154,
	154, 154, 147, 147, 147, 153, 153, 153, 15, 15,
	16, 298, 298, 17, 17, 160, 160, 159, 159, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	157, 157, 158, 158, 158, 158, 337, 337, 337, 336,
	336, 196, 196, 198, 197, 197, 199, 199, 200, 200,
	200, 200, 250, 250, 222, 222, 290, 290, 291, 291,
	289, 289, 297, 297, 292, 292, 292, 292, 301, 301,
	201, 201, 201, 201, 209, 209, 210, 210, 211, 211,
	347, 347, 342, 342, 342, 341, 341, 215, 215, 215,
	217, 216, 216, 216, 216, 218, 218, 220, 220, 219,
	219, 221, 226, 226, 225, 225, 223, 223, 223, 223,
	223, 223, 224, 224, 224, 224, 227, 227, 174, 174,
	174, 174, 174, 174, 174, 174, 453, 453, 188, 188,
	188, 188, 188, 188, 188, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 280, 280, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 255, 255,
	254, 254, 113, 113, 113, 114, 114, 115, 115, 115,
	115, 115, 116, 116, 116, 116, 116, 116, 116, 118,
	118, 117, 117, 241, 241, 334, 334, 119, 120, 120,
	121, 121, 124, 124, 123, 122, 122, 128, 128, 125,
	125, 127, 127, 126, 129, 129, 130, 131, 131, 314,
	314, 228, 228, 237, 237, 237, 237, 229, 229, 230,
	230, 230, 230, 230, 230, 238, 238, 238, 249, 239,
	239, 235, 235, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 193, 193, 193,
	193, 260, 260, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 181, 181,
	194, 194, 194, 194, 195, 195, 195, 195, 195, 195,
	195, 355, 355, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 464, 464, 370, 370, 370, 236, 236, 236, 236,
	236, 152, 152, 152, 152, 152, 352, 352, 352, 356,
	356, 356, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 357, 357, 258,
	258, 148, 148, 256, 256, 257, 259, 259, 251, 251,
	251, 251, 253, 253, 232, 232, 232, 261, 261, 358,
	358, 262, 262, 132, 133, 133, 134, 134, 263, 263,
	265, 264, 264, 266, 267, 267, 267, 268, 268, 269,
	269, 269, 55, 55, 55, 55, 55, 50, 50, 50,
	50, 51, 51, 51, 51, 163, 163, 164, 164, 164,
	166, 166, 165, 165, 108, 108, 109, 109, 109, 422,
	422, 421, 421, 419, 420, 420, 420, 420, 171, 171,
	172, 173, 173, 173, 168, 168, 169, 169, 287, 287,
	287, 287, 287, 287, 287, 270, 270, 270, 270, 299,
	299, 296, 296, 278, 278, 278, 274, 274, 276, 276,
	276, 277, 277, 277, 275, 284, 284, 286, 286, 285,
	285, 281, 281, 282, 282, 283, 283, 283, 279, 279,
	231, 231, 231, 231, 231, 315, 315, 288, 288, 288,
	288, 346, 346, 346, 302, 302, 242, 242, 243, 243,
	247, 247, 246, 246, 244, 245, 248, 248, 192, 303,
	303, 311, 308, 308, 309, 309, 338, 338, 338, 312,
	312, 327, 327, 323, 323, 324, 324, 316, 316, 317,
	317, 317, 329, 329, 329, 103, 240, 240, 409, 409,
	406, 333, 333, 335, 335, 339, 339, 343, 343, 340,
	340, 10, 458, 458, 458, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 460, 461, 350, 351, 351, 351,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 2, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 8, 4, 6, 5, 3,
	0, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	1, 2, 1, 0, 1, 0, 4, 2, 2, 1,
	1, 0, 1, 1, 2, 0, 2, 0, 1, 2,
	1, 4, 1, 1, 1, 1, 2, 3, 2, 3,
	0, 1, 3, 1, 4, 3, 3, 4, 3, 2,
	3, 4, 3, 4, 2, 7, 1, 3, 3, 3,
	3, 1, 2, 1, 1, 3, 2, 3, 3, 2,
	3, 3, 5, 7, 10, 9, 1, 7, 8, 1,
	1, 10, 11, 9, 8, 8, 1, 1, 1, 3,
	1, 3, 1, 3, 0, 4, 3, 1, 3, 3,
	3, 3, 3, 1, 1, 2, 5, 4, 1, 3,
	3, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 4, 5, 1, 6, 5, 2, 2, 0,
	2, 1, 0, 2, 1, 3, 3, 0, 1, 1,
	3, 3, 10, 6, 6, 8, 7, 4, 7, 8,
	8, 8, 5, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	1, 0, 2, 2, 3, 3, 2, 3, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 1, 1, 1, 1, 5,
	2, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 1, 3, 0, 3,
	5, 0, 1, 1, 0, 1, 0, 3, 3, 2,
	2, 2, 1, 2, 2, 0, 1, 0, 2, 2,
	5, 0, 1, 1, 2, 1, 3, 2, 1, 1,
	3, 3, 3, 0, 1, 4, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 4, 3, 1, 3,
	1, 7, 6, 7, 7, 8, 8, 0, 1, 5,
	2, 1, 1, 1, 0, 1, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 1, 2, 0, 1,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 0, 1, 0, 1, 0, 2,
	0, 2, 0, 2, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 8, 5, 5, 4, 4, 4, 6, 5,
	5, 5, 2, 2, 2, 2, 3, 3, 3, 4,
	3, 3, 1, 3, 5, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 6, 10, 7, 5, 5, 5, 5, 7, 5,
	5, 7, 5, 6, 6, 5, 5, 7, 7, 5,
	5, 5, 5, 6, 0, 6, 5, 6, 4, 5,
	0, 8, 9, 0, 3, 0, 1, 0, 3, 8,
	4, 1, 3, 3, 6, 7, 7, 8, 4, 0,
	1, 0, 1, 3, 3, 1, 1, 2, 1, 1,
	0, 2, 0, 2, 5, 3, 7, 4, 4, 4,
	4, 3, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 0, 2, 2, 1,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 3, 3, 0, 2, 2, 2,
	2, 2, 2, 2, 4, 4, 3, 0, 1, 4,
	3, 4, 4, 3, 3, 3, 2, 1, 3, 3,
	3, 5, 7, 7, 6, 5, 5, 3, 2, 4,
	5, 5, 3, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 2,
	4, 4, 4, 4, 4, 2, 3, 3, 3, 3,
	3, 5, 2, 3, 3, 2, 3, 4, 4, 4,
	3, 4, 4, 5, 3, 5, 3, 5, 0, 1,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 1, 1, 2,
	1, 3, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 3, 2, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 4, 4, 4, 2, 2,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 4,
	3, 3, 6, 4, 7, 6, 1, 3, 2, 2,
	2, 2, 1, 1, 1, 3, 2, 1, 1, 1,
	0, 1, 1, 0, 3, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 1, 0, 1, 1, 5, 5,
	4, 0, 2, 4, 4, 0, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 1, 1, 2, 3, 7, 0, 3, 0, 1,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	5, 5, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 3, 6, 1, 1, 3, 4,
	3, 4, 4, 4, 1, 3, 4, 5, 6, 3,
	4, 5, 6, 3, 4, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 5, 5, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 2, 2, 2, 1, 1, 2, 7, 7,
	6, 6, 2, 2, 5, 6, 3, 3, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 4, 2, 4, 0,
	1, 2, 5, 0, 3, 0, 1, 4, 4, 2,
	1, 0, 0, 1, 1, 2, 2, 1, 1, 2,
	2, 0, 1, 1, 1, 1, 5, 1, 3, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 4, 8, 8, 6, 8, 6,
	5, 4, 10, 2, 2, 1, 2, 2, 2, 2,
	2, 5, 6, 6, 6, 6, 6, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 8, 4, 8,
	8, 6, 5, 4, 4, 4, 5, 7, 4, 4,
	7, 4, 4, 6, 6, 6, 8, 6, 6, 4,
	4, 3, 4, 6, 6, 4, 4, 6, 4, 6,
	4, 4, 4, 4, 4, 4, 6, 4, 6, 4,
	4, 4, 6, 4, 6, 4, 4, 6, 4, 6,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 4,
	4, 6, 4, 6, 4, 8, 6, 4, 4, 6,
	4, 6, 8, 4, 6, 8, 4, 4, 6, 8,
	6, 4, 6, 6, 8, 10, 7, 8, 8, 9,
	4, 4, 4, 4, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 4, 4, 4, 4, 4, 4,
	6, 4, 6, 5, 9, 6, 9, 8, 6, 8,
	8, 8, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 6, 8, 10, 12, 14, 6, 8,
	8, 10, 12, 14, 6, 8, 10, 12, 6, 8,
	4, 4, 3, 4, 6, 6, 4, 6, 4, 6,
	8, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 3, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 0,
	5, 5, 2, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 2, 1, 1, 0, 1, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 1,
	3, 5, 1, 1, 1, 2, 2, 0, 4, 0,
	2, 0, 2, 2, 1, 3, 0, 1, 0, 1,
	3, 1, 3, 2, 0, 1, 1, 0, 1, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 0, 1, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	1, 1, 3, 3, 0, 1, 1, 1, 0, 1,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 3,
	4, 2, 3, 4, 4, 9, 3, 5, 2, 3,
	1, 1, 1, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	3, 1, 6, 5, 4, 1, 1, 1, 3, 3,
	5, 0, 2, 5, 0, 5, 1, 3, 1, 3,
	1, 3, 1, 2, 3, 4, 1, 1, 1, 1,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	1, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -459, -7, -11, -105, -463, 790, -9, -8, -32,
	-18, -19, -20, -21, -22, -23, -24, -25, -26, -27,
	-28, -29, -90, -93, -91, -92, -95, -96, -97, -98,
	-99, -12, -14, -94, -30, -31, -100, -101, -102, -103,
	-104, -15, -16, -17, -10, -35, -34, -33, 14, 15,
	-135, -39, 36, -44, -45, -56, -46, -57, -47, 244,
	-58, 246, 245, 294, 247, 412, 287, 84, 345, 346,
	348, 349, 350, 351, -136, 742, 292, 293, 249, 40,
	52, 37, 38, 41, 253, 300, 301, 252, 146, -36,
	-40, 13, -460, 16, 514, 243, 289, 288, 32, -37,
	624, 96, -38, 64, -106, -11, -287, -270, 27, 37,
	33, -269, -265, -154, -270, 25, 23, 12, -105, -105,
	-105, 17, 18, -105, -394, -396, -317, 96, 175, 270,
	514, 96, -290, 96, -74, -73, -71, -70, -72, -75,
	35, -53, -54, -418, -52, -49, 248, 245, 304, 136,
	137, 294, 295, 296, 247, 277, 293, 297, 292, 313,
	-48, 91, 37, 624, 627, -401, 244, 250, 251, 246,
	515, 139, 138, 85, -398, 407, 658, 760, -75, 762,
	111, 114, 761, 51, 267, 763, 764, 765, 665, 766,
	276, 767, 768, 769, 770, 776, 707, 777, 778, 779,
	140, 12, -105, -343, -339, 101, -332, 621, 279, 656,
	468, 657, 329, 91, 48, 43, 560, 631, 403, 407,
	658, 545, 760, 413, 345, 363, 357, 550, 551, 552,
	386, 378, 622, 659, 632, 332, 280, 317, 463, 754,
	376, 150, 762, 456, 336, 660, 295, 414, 415, 466,
	661, 416, 111, 348, 453, 775, 335, 662, 773, 114,
	761, 353, 460, 462, 461, 89, 544, 58, 757, 467,
	340, 51, 290, 473, 474, 374, 252, 370, 763, 318,
	663, 634, 311, 139, 136, 782, 40, 366, 57, 34,
	772, 138, 56, 764, 166, 664, 765, 665, 418, 393,
	748, 55, 419, 296, 666, 94, 301, 626, 341, 756,
	420, 565, 367, 421, 328, 771, 249, 667, 339, 737,
	729, 730, 256, 422, 423, 749, 398, 394, 399, 567,
	668, 669, 445, 549, 424, 733, 734, 257, 789, 59,
	670, 671, 750, 137, 672, 88, 766, 90, 361, 362,
	673, 326, 278, 570, 571, 447, 390, 527, 128, 534,
	535, 121, 122, 530, 123, 536, 124, 129, 537, 538,
	539, 528, 125, 118, 529, 540, 541, 391, 392, 126,
	542, 120, 119, 531, 533, 127, 543, 276, 39, 425,
	623, 330, 65, 334, 305, 448, 53, 396, 786, 52,
	744, 572, 674, 747, 389, 385, 524, 723, 60, 675,
	676, 677, 678, 546, 767, 388, 360, 384, 781, 180,
	323, 458, 519, 547, 768, 69, 251, 401, 400, 402,
	459, 312, 444, 381, 679, 680, 681, 283, 92, 682,
	371, 26, 683, 684, 426, 319, 685, 63, 686, 687,
	451, 293, 688, 61, 769, 724, 46, 689, 298, 783,
	770, 690, 691, 692, 743, 693, 300, 694, 428, 695,
	731, 732, 427, 395, 397, 573, 307, 429, 412, 725,
	254, 625, 696, 342, 365, 297, 774, 697, 284, 561,
	562, 563, 564, 755, 569, 568, 299, 304, 292, 452,
	285, 698, 699, 700, 701, 702, 333, 722, 703, 704,
	349, 629, 776, 525, 50, 464, 705, 706, 707, 708,
	709, 327, 322, 446, 455, 68, 93, 409, 710, 711,
	753, 359, 354, 44, 712, 713, 714, 715, 320, 100,
	505, 507, 508, 509, 510, 511, 506, 513, 716, 346,
	62, 777, 778, 779, 314, 780, 553, 554, 555, 556,
	14, 607, 590, 618, 591, 608, 592, 601, 593, 609,
	617, 619, 574, 582, 575, 583, 613, 596, 610, 602,
	595, 594, 616, 599, 603, 576, 584, 614, 600, 577,
	585, 578, 586, 579, 587, 612, 611, 604, 615, 580,
	588, 606, 581, 589, 605, 597, 598, 457, 476, 787,
	788, 548, 465, 431, 726, 140, 324, 325, 54, 382,
	306, 717, 337, 718, 372, 373, 521, 522, 387, 358,
	383, 147, 740, 347, 356, 738, 308, 432, 526, 294,
	719, 454, 321, 404, 132, 355, 410, 338, 630, 566,
	313, 433, 752, 628, 67, 557, 558, 380, 377, 315,
	559, 720, 405, 742, 434, 268, 309, 310, 721, 739,
	435, 436, 331, 437, 438, 439, 440, 441, 443, 344,
	442, 741, 735, 736, 316, 504, 627, 352, 375, 411,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 523, 266,
	-105, 266, -219, -339, -156, 744, 746, 195, -308, 415,
	-328, 417, 430, 425, 435, 423, -319, 426, 428, 307,
	-445, 445, 266, 432, 243, 418, 427, 436, 437, 331,
	443, 438, 344, 442, 316, 439, 440, 441, -429, 195,
	765, 780, 347, 355, 150, 379, 422, 420, 446, 744,
	101, -345, 101, 102, 103, -332, 347, -348, 352, -333,
	-429, -332, 350, -105, -105, -350, -350, -156, -239, -174,
	158, -188, -295, -191, 102, -179, -182, -233, -234, -235,
	-236, -189, -253, -293, 184, 185, 192, 159, -249, -192,
	30, 620, 516, 515, 195, 35, 238, 78, 79, 518,
	519, 161, 64, 16, 481, 482, -190, 471, 472, 483,
	477, 478, 544, 546, 547, 548, 545, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 549, 560, 521,
	522, 130, 523, 118, 120, 119, 128, 129, 524, 525,
	526, 376, 572, 573, 567, 570, 571, 569, 568, 391,
	392, 527, 590, 591, 595, 594, 592, 593, 596, 599,
	600, 601, 602, 603, 604, 606, 605, 597, 598, 575,
	574, 576, 577, 578, 579, 580, 581, 583, 582, 584,
	585, 586, 587, 588, 589, 607, 608, 609, 610, 611,
	613, 612, 617, 616, 614, 615, 619, 618, 528, 529,
	121, 122, 123, 124, 125, 126, 127, 530, 533, 531,
	532, 534, 535, 536, 541, 542, 537, 538, 539, 540,
	543, 402, 400, 401, 397, 396, 395, -115, -128, 647,
	646, -129, 468, 473, 474, 476, -180, -181, -194, -195,
	-333, -339, 271, 470, 265, 190, 514, -183, -177, -251,
	117, 103, -34, -248, 469, 479, 480, 484, 475, 485,
	633, 635, 650, 651, 653, 638, 643, 642, 645, 561,
	562, 563, 564, 565, 566, 729, 730, 731, 732, 733,
	734, 735, 736, -429, -332, 101, -186, -184, -228, 104,
	109, 112, 113, 115, -451, 290, 372, 373, 131, -460,
	-244, -245, -185, 106, 107, 108, 133, 134, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	758, 99, 105, 51, 431, 431, -219, -105, -105, -105,
	-105, -458, 761, 625, -263, -154, -265, -36, -34, -460,
	13, -105, -34, -35, -33, -40, -105, -42, 652, -41,
	-339, -105, 110, -270, -287, 17, 68, 178, 49, 57,
	-299, -296, -295, 101, 102, -268, -269, -37, -34, -174,
	24, 42, 28, -158, 186, -174, -339, -158, -316, 270,
	-105, -105, -304, -353, 347, -306, 446, 744, 445, -294,
	-309, 101, -293, -308, 444, 102, -317, -347, 29, -395,
	175, -381, -385, -333, 281, -411, 277, -219, -404, -403,
	-333, -460, 29, -289, -333, -70, -71, -72, -308, 194,
	764, -137, 299, 303, 97, 97, -385, -384, -383, -433,
	303, 281, -410, -402, 273, 282, -391, 274, 275, -386,
	267, 152, -433, -386, 272, 282, 277, 281, 303, 303,
	140, 303, 140, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 298, -392, 167, -392, 628, 628, -398, -433,
	277, 267, -433, -433, 273, -329, -386, 269, 29, 269,
	39, 39, -392, -392, -392, -308, 194, -392, -392, -392,
	-392, 311, 311, -392, -392, -392, -392, -392, -392, -392,
	-392, -392, -392, -392, -392, -392, -392, -392, -392, -392,
	266, -432, -163, 442, 331, 470, 265, -164, 91, -73,
	313, -43, -219, -327, 267, 268, -432, 307, 300, 324,
	-219, 239, 266, 747, -321, 175, 20, -321, -318, 431,
	429, 416, 421, -321, -321, -321, -321, 314, 414, -387,
	267, 39, 278, 431, 314, 414, 314, 315, 314, 315,
	424, 434, 314, -344, 19, 178, 470, 419, 423, 307,
	266, 308, 268, 433, 315, -344, 99, -322, 175, 314,
	431, 425, 310, -321, -321, -351, -460, -335, -333, -331,
	248, 42, 157, 29, 31, 160, 195, 143, 24, 161,
	41, 250, 379, 277, 194, 273, 264, 258, 515, 243,
	82, 633, 471, 478, 469, 477, 481, 517, 518, 470,
	417, 255, 35, 18, 635, 32, 288, 28, 45, 188,
	245, 164, 165, 636, 291, 30, 259, 289, 130, 134,
	638, 27, 85, 282, 19, 275, 47, 21, 639, 640,
	22, 75, 271, 270, 178, 267, 80, 728, 16, 238,
	33, 174, 76, 641, 152, 146, 642, 643, 644, 645,
	144, 78, 175, 25, 784, 479, 480, 37, 745, 620,
	302, 190, 83, 66, 746, 158, 475, 646, 647, 131,
	648, 135, 86, 751, 154, 23, 727, 81, 49, 649,
	303, 650, 272, 785, 651, 449, 652, 176, 246, 514,
	79, 177, 758, 653, 759, 265, 430, 13, 520, 36,
	287, 286, 274, 74, 73, 261, 262, 263, 142, 77,
	485, 654, 266, 163, 269, 145, 133, 260, 12, 151,
	38, 17, 84, 87, 482, 483, 484, 64, 141, 624,
	162, 20, 655, 450, 156, -429, 747, -351, -351, 314,
	356, 36, 102, -455, -456, -457, 624, 449, 269, -333,
	-219, -111, 737, 247, -112, 743, 42, 254, 147, 39,
	-161, 431, -149, 195, 765, 748, 749, 750, 747, 428,
	755, 753, 751, 314, 752, 97, 154, 156, 157, 180,
	-174, 174, -229, -230, 173, 167, 168, 169, 170, 171,
	172, 179, 178, 158, 160, 175, -280, 155, 181, 182,
	183, 184, 185, 186, 187, 189, 188, 190, 191, 176,
	177, 194, 241, 242, -182, -182, -182, -182, -249, -255,
	-254, -460, -251, -429, -332, -339, -460, -460, -182, -314,
	-460, -179, -460, -460, -460, -460, -460, -258, -174, -460,
	-460, -464, -460, -464, -464, -464, -370, -460, -370, -370,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, 239, -460, -460, -460, -460,
	-460, -370, -370, -370, -370, -370, -370, -460, -460, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, 99, 113, 109, 112, 104, 115, 99, 99, 99,
	99, -34, -35, -239, 64, -460, -350, -442, -443, -222,
	-219, -460, 331, -333, -333, 300, 106, -268, -37, -34,
	-263, -269, -265, -34, -105, -147, -160, 70, 71, -159,
	-162, 28, 45, 75, 77, 100, 73, 74, 72, 42,
	-461, 98, -461, -287, -461, -171, -327, -155, -164, 267,
	275, 274, 151, -432, -172, 154, 318, 97, -42, -290,
	116, -242, -247, -245, 758, 681, 711, 681, 711, 68,
	50, 99, 99, 97, 97, 26, -264, -266, -174, 19,
	-337, 180, -336, 29, -333, 99, 239, 19, -220, 33,
	-219, -316, -316, 97, 101, 347, -305, -307, 447, 449,
	167, -338, -333, 99, 35, -347, -32, 98, 97, -219,
	-359, -362, -364, -363, -365, -360, -361, 376, 377, 195,
	380, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	393, 405, 36, 290, 372, 373, 374, 375, 394, 395,
	396, 397, 399, 400, 401, 402, 357, 378, 622, 358,
	359, 360, 361, 362, 363, 365, 366, 369, 367, 368,
	370, 371, -334, -333, 96, 98, 97, -369, 96, -174,
	-32, 98, 97, -392, -392, -392, 298, 24, -52, -49,
	-418, 23, -48, -49, 248, 136, 137, 245, 96, -381,
	96, -390, -334, -333, 96, 152, 272, 151, -389, -386,
	-389, -390, -333, -251, -333, 152, 152, -333, -333, -301,
	-333, -301, -301, 42, -301, 42, -301, 42, 106, -333,
	-301, 42, -301, 42, -301, 42, -301, 42, -301, 42,
	35, 88, 89, 90, 35, 92, 93, 94, -251, -333,
	-333, -251, -381, -251, -219, -333, -308, 106, 106, 106,
	-392, -392, 106, 99, 99, 99, -392, -392, 106, 99,
	-341, -339, 99, 99, -434, 283, 328, 330, 106, 106,
	106, 106, 35, 99, -435, 35, 772, 771, 773, 774,
	775, 99, 106, 35, 106, 35, 106, -333, 96, -219,
	-171, 243, 245, 248, 86, 99, 336, 334, 335, 343,
	332, 337, 338, 339, 167, 51, 97, 269, 266, -333,
	-323, 271, -323, -323, -333, -340, -339, -331, -219, 269,
	413, 99, -174, -388, 19, 178, -344, -344, -321, -219,
	-388, -344, -321, -219, -321, -321, -321, -321, -344, -344,
	-344, -321, -339, -339, -219, -219, -219, -219, -219, -219,
	-219, -351, -322, -321, 747, 99, -313, 19, 86, -351,
	-351, -330, 27, 27, 97, 353, 450, 451, -349, 350,
	-107, -333, 99, -13, -32, -21, -20, -22, 167, -13,
	97, 624, -212, -219, 747, 747, 747, 747, 747, 747,
	-174, -174, -174, -174, 648, -237, -453, 158, 133, 134,
	131, 132, -191, 43, 44, 42, -174, -238, -244, -249,
	116, 178, 160, 175, -280, -179, -182, -179, -179, -179,
	-179, -179, -179, 238, -179, 238, -179, -179, -179, -179,
	-179, -179, -352, -333, 99, 195, -187, -186, 115, -451,
	-187, 621, 97, -254, 239, -174, -174, -429, -145, 487,
	488, 489, 490, 492, 493, 494, 497, 498, 502, 503,
	486, 504, 491, 496, 499, 500, 501, 495, 375, -174,
	-240, -239, -240, -174, -174, -256, -257, 162, -251, -174,
	-461, -461, 106, 186, -153, 28, 45, -153, -153, -153,
	-153, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -153, -174, -146, 486, 504, 491, 496, 499, 500,
	501, 495, 375, 505, 506, 507, 508, 509, 510, 511,
	512, 513, -146, -145, -174, -174, -174, -174, -174, -174,
	-174, -174, -113, -174, 143, 144, 145, -239, -174, -179,
	-174, -174, -174, -461, -174, -174, -174, -240, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -428, -427, -426, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-239, -239, -239, -239, -239, -174, -461, -174, -193, -177,
	106, -295, 115, -174, -174, -174, -174, -174, -174, -240,
	-335, -340, -331, -332, -239, -240, -240, -239, -239, -174,
	-174, -174, -174, -174, -174, -174, -174, -461, -174, -174,
	-174, -174, -174, -287, -461, -239, 97, -444, 449, 450,
	745, -342, 303, -341, 29, -240, 99, 19, -298, 87,
	-333, -268, -268, 70, 71, 66, -157, -158, -162, -461,
	307, -166, 320, 266, -163, -171, -333, 267, 267, 267,
	-324, 271, 514, 167, -41, 29, 97, -460, 674, 674,
	69, 99, -371, -308, 403, 404, 195, -296, -174, -174,
	97, -267, 31, 32, -219, -336, 186, -340, -219, -300,
	303, -219, -197, -199, -200, -201, -222, -250, -460, -202,
	-34, 644, 641, 19, -212, -213, -221, -339, -306, -353,
	-305, 97, 448, 450, 451, 86, 135, -174, -372, 194,
	-32, -400, -399, -398, -381, -383, -384, -385, 98, -372,
	-377, 410, 409, -369, -369, -369, -369, -369, -369, -371,
	-371, -371, -369, 96, -369, 96, -369, -369, -369, -369,
	-374, 96, -374, -374, -375, -374, 96, -375, -376, 96,
	-376, -411, -174, -408, -407, -405, -406, 276, 111, 721,
	673, 624, 665, 707, 87, -403, -267, 106, -461, -108,
	624, -333, 101, 99, 101, 99, 101, 99, -138, -77,
	-1, 784, 785, 786, 97, 24, -382, -381, -76, 328,
	-414, -415, 303, -410, -404, -390, 152, -389, -390, -390,
	-333, 97, 33, 140, 140, 140, 140, 624, 245, 36,
	-325, 664, 158, 721, 673, -381, -76, 269, 269, -352,
	-352, -352, 99, 99, -320, 780, -212, -166, 309, 309,
	266, 322, 266, 322, -219, 333, 336, 334, 335, 343,
	332, 337, 338, 339, 340, 42, 42, 42, 335, 42,
	42, 42, 42, 321, 323, 325, 311, -219, -219, -323,
	86, -214, -219, 30, -339, -219, 99, 99, -219, -321,
	-321, -219, -321, -321, -219, 99, -339, -457, 354, -333,
	390, 738, 740, -149, 449, 97, 624, 27, -150, 27,
	-460, -453, 133, 134, -249, -249, -249, -238, -179, -182,
	-179, 157, 291, -179, -179, -460, -251, -461, -335, 29,
	97, 87, -461, 184, 97, -461, -461, 97, 19, 97,
	-259, -257, 164, -174, -461, 97, -461, -461, -239, -174,
	-174, -174, -174, -461, -461, -461, -461, -461, -461, -461,
	-461, -461, -461, -239, -461, 97, 97, 19, -356, 29,
	-461, -461, -461, -461, 97, -461, -461, -258, -461, 19,
	-461, 87, 97, 178, 97, -461, -461, -461, 97, 97,
	-461, -461, 97, -461, 97, -461, -461, -461, -461, -461,
	-461, 97, -461, 97, -461, -461, -461, 97, -461, 97,
	-461, -461, 97, -461, 97, -461, 97, -461, 97, -461,
	97, -461, 97, -461, 97, -461, 97, -461, 97, -461,
	97, -461, 97, -461, 97, -461, 97, -461, 97, -461,
	97, -461, 97, -461, 97, -461, 97, -461, -461, -461,
	97, -461, 97, -461, 97, -461, -461, 97, -461, 97,
	-461, 97, -461, 97, 97, -461, 97, 97, 97, -461,
	97, 97, 97, 97, -461, -461, -461, -461, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 97, -461, -461,
	-461, -461, -461, -461, 97, -120, 649, -461, -461, 97,
	-461, 97, 97, 97, 97, 97, -461, -460, 239, -461,
	-461, -461, -461, -461, 97, 97, 97, 97, 97, 97,
	-461, -461, -461, 97, 97, -461, 97, -461, 97, -461,
	-443, 744, 450, -226, -225, -223, 84, 270, 85, -460,
	-341, -461, -187, -295, -297, -295, -232, -333, 106, 115,
	-270, -196, 97, -198, 19, -324, 268, 327, -324, -171,
	-166, -409, -406, -333, -333, -333, -339, 158, -173, 481,
	-168, 99, 101, -249, -247, -461, -371, -275, -281, -318,
	-333, 99, 195, -373, 195, -373, 403, 404, -266, 239,
	-227, 20, -231, 36, -315, -32, -460, 67, 64, -460,
	36, 97, -215, -217, -216, -218, 76, 80, 82, 77,
	78, 79, 83, -347, -34, -197, -34, -460, -219, -212,
	-462, 19, 87, -462, 97, 239, -307, -310, 452, 449,
	455, -429, 99, -137, 97, -398, -385, -271, -167, 47,
	-378, 411, -371, 632, -371, -371, -380, 99, -380, 106,
	106, 106, 98, -55, -50, -51, 37, 91, -405, -392,
	99, 46, -392, -392, -333, 98, -267, -109, 317, 744,
	-2, 783, 789, 152, 96, 416, 23, -289, 97, 98,
	-252, 329, 98, -139, -333, 98, 96, -390, -390, -333,
	-460, 266, 35, 35, 721, 673, 664, -76, -252, -251,
	-333, -372, 782, 781, 98, 268, -219, -219, -219, -219,
	-219, -219, 248, 245, 439, 439, 335, -452, 341, 99,
	42, -452, 312, 269, -212, -219, 97, -110, 285, 280,
	-344, -344, 37, -219, 449, 756, 754, -174, 157, 291,
	-191, -182, -145, -145, -179, -354, 195, 376, 290, 374,
	370, 390, 381, 409, 372, 410, 367, 366, 365, -354,
	-352, -179, -239, -174, -174, -174, 166, -174, 163, -174,
	-121, -120, -461, -461, -461, -461, -461, -121, -121, -121,
	-121, -121, -121, -121, -121, -121, -121, -263, -174, -174,
	-174, -461, 195, 376, -121, -174, 19, -174, -352, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -426, -174, -239, -174, -239, -174,
	-174, -174, -174, -174, -427, -427, -427, -427, -427, -239,
	-239, -239, -239, -174, -460, -333, -124, -123, -122, 700,
	270, -120, -193, -124, -193, 238, -174, 238, 238, 238,
	-174, -240, -335, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -223, -386, 309, -386, 309, -386, -301,
	97, -312, 27, 19, 64, 64, -196, -227, -158, -197,
	-219, -219, -165, 318, 326, -219, -166, 268, 86, -409,
	-409, -409, 30, 96, -169, 102, -278, 737, -284, 53,
	-282, -283, 54, -279, 55, 63, -373, -373, 186, -268,
	-174, -302, 86, -303, -311, -251, -243, -246, -244, -460,
	-288, -461, -333, -301, -303, -199, -200, -200, -199, -200,
	76, 76, 76, 81, 76, 81, 76, -216, -339, -461,
	-174, -342, 87, -197, -197, -221, -339, 186, 449, 453,
	454, -398, -450, 131, 158, 35, 86, 407, 111, -448,
	194, 661, 716, 721, 673, 665, 707, -449, 272, 151,
	152, 284, 29, 48, 98, 97, 98, 97, 98, 98,
	97, -326, -325, -51, -50, -392, -392, 106, -429, 99,
	99, 277, -140, 787, 106, 96, -3, 91, -174, 96,
	24, -381, -251, -416, -366, -417, -367, -368, -5, -6,
	-393, -143, 64, 111, -80, 51, 267, 767, 768, 140,
	-460, 780, -408, -289, -412, -414, -219, -178, -460, -190,
	-176, -175, -177, -183, 184, 185, 290, 372, 373, -252,
	-219, -431, 87, 309, 407, 309, 407, 99, 99, -454,
	342, 99, -454, -219, -110, -55, -219, -321, -321, 37,
	-429, -461, -191, -182, -152, 178, 624, -357, 631, -369,
	-369, -369, -376, -369, 362, -369, 362, -369, -461, -461,
	-461, 97, -461, 27, -461, 97, -174, 97, -121, -121,
	-121, -121, -121, -148, 520, 97, 97, -461, 96, 96,
	-461, -174, -461, -461, -461, 97, -461, -461, -461, -461,
	-461, -461, -461, -461, -461, -461, -461, -461, -461, 97,
	-461, 97, -461, 97, -461, 97, -461, 97, -461, 97,
	-461, 97, -461, 97, -461, 97, -461, 97, -461, 97,
	-461, 97, -461, 97, -461, 97, -461, 97, -461, 97,
	-461, -461, 97, -461, -461, -461, 97, -461, 97, -461,
	97, -461, -461, -461, 97, -355, 722, -461, -461, -461,
	-461, -461, -461, -461, -461, -461, -461, -461, -119, -334,
	-120, 682, 682, -461, -120, -260, 97, -179, -461, -179,
	-179, -179, -461, -461, -461, 97, -461, 97, 97, -461,
	97, -461, 97, -461, -461, -461, -461, 97, -224, 27,
	-460, -224, -460, -224, -461, -295, -219, -227, -261, 21,
	-460, 268, -219, -219, 86, 86, 86, 98, -275, 58,
	382, -286, -285, 62, 54, -283, 24, 56, 24, 34,
	-302, 97, 167, -346, 97, 29, -461, -461, 97, -315,
	64, 239, -461, -227, -210, -209, 86, 87, -211, 86,
	-209, 76, 76, -290, 97, -300, -197, -227, -227, 239,
	131, -460, -178, 17, 99, 99, -429, -447, 771, 772,
	35, 773, 106, -392, -392, 152, 152, -219, 96, -371,
	99, -371, 106, 106, 35, 92, 93, 94, 35, 88,
	89, 90, 319, -413, 96, 24, -174, 96, 167, 98,
	-289, -289, 305, 178, -392, 765, 311, 311, -392, -392,
	-392, -142, -141, 787, 98, -461, 97, -379, 624, 627,
	-174, -184, -184, -290, -425, 624, -430, -333, -333, -333,
	-333, 106, 108, -461, 622, 83, 625, -461, -371, -174,
	-174, -174, -174, -268, 99, -174, -174, 106, 106, -121,
	-461, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -239, -174, -461, -207, -206, -208, 748, 131, 35,
	-354, -461, -241, 303, -127, -126, -125, 19, -461, -174,
	-145, -145, -145, -145, -174, -174, -174, -174, -174, -174,
	-460, 76, 23, 21, -292, -333, 272, -460, -292, -460,
	-342, -261, -262, 22, 24, -422, -421, -419, -420, 178,
	728, 727, -219, -219, -219, -219, -276, 60, -274, 59,
	-274, -285, 24, 24, 99, 24, 99, 152, -311, -174,
	-246, -341, -315, -32, -333, -243, -333, -263, -174, 96,
	-174, -187, -227, -227, -174, -234, 544, 546, 547, 548,
	545, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 549, 560, 521, 522, 523, 118, 120, 119, 128,
	129, 524, 525, 526, 376, 572, 573, 567, 570, 571,
	569, 568, 391, 392, 527, 590, 591, 595, 594, 592,
	593, 596, 599, 600, 601, 602, 603, 604, 606, 605,
	597, 598, 575, 574, 576, 577, 578, 579, 580, 581,
	583, 582, 584, 585, 586, 587, 588, 589, 607, 608,
	609, 610, 611, 613, 612, 617, 616, 614, 615, 619,
	618, 528, 529, 121, 122, 123, 124, 125, 126, 127,
	530, 533, 531, 534, 535, 536, 541, 542, 537, 538,
	539, 540, 543, 402, 400, 401, 397, 396, 395, 468,
	473, 474, 476, 561, 562, 563, 564, 565, 566, 729,
	730, 731, 732, 733, 734, 735, 736, 99, 99, 96,
	-174, 98, 98, -412, -77, 98, -291, -289, 106, 98,
	306, -244, -460, 99, -392, -392, -392, 106, 106, -341,
	-461, 97, -333, -449, -414, 628, 628, -461, 29, -424,
	-423, -335, 96, 87, 69, 623, 626, -461, -461, -461,
	97, -461, -461, -461, 98, 98, -461, -461, -461, -461,
	-461, -461, -461, -461, -461, -461, -461, -461, -461, -461,
	-461, -461, -461, -461, -461, -461, -461, -461, 97, -461,
	-206, -208, -461, 86, -187, -263, 24, -124, 328, 330,
	-124, -461, -461, -461, -461, -461, 97, -461, -461, 97,
	-461, 97, -461, -461, -292, -461, 24, 24, 97, -461,
	-292, -461, -292, -226, -262, -134, -133, -132, 655, -174,
	-239, -461, 97, -333, -277, 61, 86, 135, 99, 99,
	99, 17, -460, -243, 239, -346, -268, -289, -204, 416,
	-263, -461, -289, 98, 98, 789, 152, 98, -244, -151,
	-460, 302, -341, 99, 99, -141, -144, -32, 97, 167,
	-289, -219, 69, -174, -239, -461, 86, 636, 748, -118,
	-117, -114, 759, 785, -239, -120, -120, -174, -174, -174,
	-461, -333, 272, -461, -461, -134, 97, -131, -130, -333,
	-358, 624, -81, -82, -83, -8, 345, 271, 255, 286,
	-419, -359, 86, 135, -303, -289, -346, -333, 98, -461,
	-460, -268, 98, -272, 96, -3, 302, -366, -417, -367,
	-368, -5, -6, -393, -108, -423, -397, -339, -335, 99,
	106, 98, 624, -461, -461, -116, 160, 757, 719, -183,
	238, -461, 97, -461, 97, -461, 97, -132, 97, 29,
	629, 790, -84, -85, -83, -82, -174, -289, -59, -333,
	258, 259, 260, -65, -63, -64, 262, -333, -461, -342,
	-205, -203, -333, 679, -440, -439, 620, -450, -446, 131,
	158, 111, -448, 716, 721, 673, 141, 142, -174, 96,
	-461, 239, -431, 625, -116, 758, 693, 667, 693, 667,
	-179, -174, -174, -174, -130, -460, 166, -83, 163, -359,
	257, 264, -66, -67, 36, -170, 67, -461, 97, 27,
	-359, -79, 690, -437, -438, 86, -441, 422, 689, 710,
	131, 99, 106, 98, -289, -340, -425, 626, 157, -145,
	-461, 97, -461, 97, -461, -119, -85, -273, 35, 27,
	27, -68, -69, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, -68, 99, -203, 686, -372,
	-187, -438, 86, -437, 86, 18, 17, -4, 788, 98,
	-116, 693, 667, -174, -174, -461, -89, -88, -87, 165,
	-460, -178, -60, -61, -62, -64, 263, 158, 261, 106,
	-63, -62, 167, -78, 30, -204, -436, 285, 280, 283,
	36, -436, 106, -4, -461, -461, -86, 164, -87, -174,
	-174, -82, 97, 256, -183, 690, 279, 35, 131, 166,
	-85, 163, -461, -61, -187, 271, -85, -207, -206, -206,
}

var yyDef = [...]int{
	965, -2, 1, 2, -2, 967, 965, 4, 5, 7,
	8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
	18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
	28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
	38, 39, 40, 41, 42, 131, 133, 134, 965, 965,
	965, 0, 965, 1729, 194, 0, 1026, -2, -2, 965,
	1747, 0, 965, 0, 960, 0, -2, 880, 886, 0,
	895, -2, 0, 0, 965, 965, 2424, 2424, 960, 0,
	0, 0, 0, 0, 965, 965, 965, 965, 1752, 1578,
	111, 965, 0, 149, 150, 965, 915, 916, 917, 126,
	0, 2422, 146, 965, 966, 3, 132, 136, 0, 0,
	0, 119, 1587, 0, 139, 0, 0, 969, 0, 0,
	1727, 965, 965, 0, -2, 191, 1050, 0, 0, 1730,
	1731, 0, 0, 0, 197, -2, 229, 230, 231, 0,
	236, 684, 598, 650, 596, 635, -2, 584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	601, 473, 473, 0, 0, -2, 584, 584, 584, 1732,
	0, 0, 0, 632, 535, 473, 473, 473, 0, 473,
	473, 473, 473, 0, 0, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 1605, 235, 1748, 1745, 1746, 1920, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942,
	1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,
	1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962,
	1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972,
	1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982,
	1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,
	1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052,
	2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082,
	2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122,
	2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132,
	2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142,
	2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152,
	2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162,
	2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172,
	2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182,
	2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192,
	2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202,
	2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212,
	2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222,
	2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232,
	2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242,
	2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252,
	2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262,
	2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302,
	2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312,
	2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322,
	2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332,
	2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342,
	2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352,
	2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362,
	2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372,
	2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382,
	2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392,
	2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402,
	2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412,
	2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 0,
	1721, 0, 798, 1069, 0, 961, 962, 0, 869, 869,
	0, 869, 869, 869, 869, 0, 0, 0, 812, 0,
	0, 0, 0, 866, 0, 828, 829, 0, 866, 0,
	835, 872, 0, 0, 842, 869, 869, 845, 2425, 0,
	2425, 2425, 0, 0, 1712, 0, 863, 861, 875, 876,
	103, 879, 882, 883, 884, 885, 888, 0, 899, 902,
	1741, 1742, 0, 904, 909, 928, 929, 0, 106, 1229,
	0, 1093, 0, 1104, -2, 1115, 1132, 1133, 1134, 1135,
	1136, 1138, 1139, 1140, 0, 0, 0, 0, 1145, 1146,
	0, 0, 0, 0, 0, 1209, 0, 0, 0, 0,
	2135, 1549, 0, 0, 1511, 1511, 1245, 1511, 1511, 1513,
	1513, 1513, 1979, 2126, 2136, 2324, 1934, 1940, 1941, 1942,
	2269, 2270, 2271, 2272, 2368, 2369, 2373, 2046, 1929, 2339,
	2340, 0, 2421, 2086, 2094, 2095, 2071, 2080, 2119, 2226,
	2351, 1953, 2114, 2188, 2042, 2066, 2067, 2207, 2208, 2090,
	2091, 2070, 2275, 2277, 2293, 2294, 2279, 2281, 2290, 2296,
	2301, 2280, 2292, 2297, 2310, 2314, 2317, 2318, 2319, 2287,
	2285, 2298, 2302, 2304, 2306, 2312, 2315, 2288, 2286, 2299,
	2303, 2305, 2307, 2313, 2316, 2274, 2278, 2282, 2291, 2309,
	2289, 2308, 2283, 2295, 2300, 2311, 2284, 2276, 2084, 2087,
	2074, 2075, 2077, 2079, 2085, 2092, 2098, 2076, 2097, 2096,
	0, 2072, 2073, 2078, 2089, 2093, 2081, 2082, 2083, 2088,
	2099, 2142, 2141, 2140, 2187, 2110, 2186, 0, 0, 0,
	0, 0, 1923, 1986, 1987, 2321, 1433, 1434, 1435, 1436,
	0, 0, 0, 0, 0, 0, 0, 362, 363, 1562,
	1563, 105, 1228, 1708, 1513, 1513, 1513, 1513, 1513, 1513,
	1167, 1168, 1169, 1170, 1171, 1197, 1198, 1204, 1205, 2202,
	2203, 2204, 2205, 2024, 2362, 2033, 2034, 2183, 2184, 2048,
	2049, 2395, 2396, -2, -2, -2, 304, 305, 306, 307,
	308, 309, 310, 311, 0, 1985, 2337, 2338, 300, 0,
	1706, 1707, 367, 364, 365, 366, 1211, 1212, 320, 321,
	322, 323, 324, 325, 326, 327, 328, 329, 330, 331,
	332, 333, 334, 335, 336, 337, 338, 339, 340, 341,
	342, 343, 344, 345, 346, 347, 348, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 369, 370, 2424, 0, 938, 0, 0, 0, 0,
	0, 0, 1753, 1754, 1587, 0, 1579, 1578, 124, 0,
	965, -2, 0, 0, 0, 0, -2, 108, 0, 113,
	1026, 0, 968, 138, 137, 1638, 1641, 0, 0, 0,
	1648, 1650, 1651, 1652, 102, 120, 1588, 128, 130, 1589,
	0, 970, 971, 0, 1002, 1006, 0, 0, 0, 1728,
	1727, 1727, 166, 0, 0, 167, 187, 188, 189, 0,
	0, 173, 174, 1714, 1715, 104, 1050, 0, 1051, 0,
	0, 247, 248, 0, 1185, 500, 0, 243, 0, 493,
	432, 0, 0, 0, 1030, 232, 233, 234, 473, 473,
	473, 647, 0, 0, 235, 235, 605, 606, 607, 0,
	0, -2, 498, 0, 585, 0, 0, 487, 487, 491,
	489, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	624, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 0, 474, 0, 645, 646, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 1733, 1734, 0,
	622, 623, 0, 0, 0, 473, 473, 0, 0, 0,
	0, 473, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 1628, 0, 0, 224, 225, 1606, 0, -2,
	0, 789, 0, 0, 0, 1723, 1723, 1723, 0, 1722,
	797, 0, 0, 0, 802, 0, 0, 803, 0, 866,
	866, 864, 865, 805, 806, 807, 808, 869, 0, 0,
	482, 483, 484, 866, 869, 0, 869, 869, 869, 869,
	866, 866, 866, 869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2425, 872, 869, 0, 836, 0, 837,
	838, 839, 840, 843, 844, 846, 2426, 2427, 1743, 1744,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804,
	1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814,
	1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824,
	1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844,
	1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854,
	1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864,
	1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 2425, 2425, 850, 854, 858,
	856, 1713, 881, 887, 889, 890, 0, 0, 900, 903,
	922, 110, 2032, 908, 110, 910, 911, 912, 913, 914,
	940, 941, 946, 0, 0, 0, 0, 952, 953, 954,
	0, 0, 957, 958, 959, 0, 0, 0, 0, 0,
	1091, 0, 0, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1116,
	1117, 0, 0, 0, 1141, 1142, 1143, 1144, 1147, 0,
	1158, 0, 1160, 1558, -2, 0, 0, 0, 1152, 1153,
	0, 0, 0, 1736, 1736, 0, 0, 0, 1550, 0,
	0, 1243, 0, 1244, 1246, 1247, 1248, 0, 1249, 1250,
	975, 975, 975, 975, 975, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 975, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 1736, 1736, 0,
	0, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 312, 313, 314, 315, 316, 371, 317, 318,
	319, 1228, 0, 0, 965, 0, 107, 930, 931, 0,
	1052, 1736, 0, 0, 981, 0, 1751, 118, 127, 129,
	1587, 122, 1587, 0, 985, 0, 0, -2, -2, 986,
	987, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	115, 2423, 116, 0, 135, 1610, 0, 1605, 1628, 0,
	0, 0, 0, 1725, 1629, 0, 0, 0, 109, 0,
	140, 141, 1696, 1700, 0, 1639, 0, 1642, 0, 0,
	0, 446, 1646, 0, 0, 0, 1580, 1581, 1584, 0,
	1003, 2132, 1007, 0, 1009, 1010, 0, 0, 164, 0,
	1068, 0, 0, 0, 175, 0, 177, 178, 0, 0,
	0, 457, 1716, 1717, 1718, 0, 192, -2, 480, 0,
	457, 441, 379, 380, 381, 432, 383, 432, 432, 432,
	432, 432, 446, 446, 446, 432, 415, 416, 417, 418,
	0, 432, 0, 400, 432, 432, 432, 432, 422, 423,
	424, 425, 426, 427, 428, 429, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 434, 434, 434, 434, 434,
	438, 438, 0, 1186, 0, 461, 0, 1584, 0, 0,
	1614, 1027, 0, 0, 0, 0, 648, 695, 599, 636,
	649, 0, 602, 603, -2, 0, 0, 584, 0, 586,
	0, 481, 0, -2, 0, 491, 0, 487, 491, 488,
	491, 479, 492, 626, 627, 628, 0, 630, 631, 725,
	1038, 0, 0, 0, 0, 0, 731, 732, 733, 0,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	637, 638, 639, 640, 641, 642, 643, 644, 0, 0,
	0, 0, 586, 0, 633, 0, 0, 537, 538, 539,
	0, 0, 542, 543, 544, 545, 0, 0, 548, 549,
	550, 1055, 1056, 551, 552, 577, 578, 579, 553, 554,
	555, 556, 557, 558, 559, 571, 572, 573, 574, 575,
	576, 560, 561, 562, 563, 564, 565, 568, 0, 217,
	1610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1723, 0,
	0, 0, 0, 0, 984, 1070, 1749, 1750, 799, 0,
	0, 870, 871, 0, 485, 486, 869, 869, 809, 851,
	0, 869, 813, 852, 814, 816, 815, 817, 830, 831,
	869, 820, 867, 868, 821, 822, 823, 824, 825, 826,
	827, 847, 832, 833, 834, 873, 0, 877, 878, 848,
	849, 0, 859, 0, 0, 0, 893, 894, 0, 901,
	925, 923, 924, 926, 918, 919, 920, 921, 0, 927,
	0, 0, 943, 160, 948, 949, 950, 951, 963, 956,
	1230, 1088, 1089, 1090, 0, 1092, 1098, 0, 1213, 1215,
	1096, 1097, 1100, 0, 0, 0, 1094, 1105, 1225, 1226,
	1227, 0, 0, 0, 0, 0, 1109, 1113, 1118, 1119,
	1120, 1121, 1122, 0, 1123, 0, 1126, 1127, 1128, 1129,
	1130, 1131, 1137, 1526, 1527, 1528, 1156, 372, 373, 0,
	1157, 0, 0, 0, 0, 0, 0, 0, 0, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1229,
	0, 1737, 0, 0, 0, 1556, 1553, 0, 0, 0,
	1512, 1514, 0, 0, 0, 976, 977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 0, 0, 1529, 0, 0, 0, 0, 0,
	0, 0, 1549, 0, 1162, 1163, 1164, 0, 0, 0,
	0, 0, 0, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1437,
	1438, 1439, 1440, 0, 0, 0, 0, 0, 0, 0,
	1560, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1462, 0, 0,
	0, 0, 0, 0, 1704, 0, 0, 933, 934, 936,
	0, 1072, 0, 1053, 0, 0, 939, 0, 980, 0,
	983, 121, 123, 989, 990, 0, 1011, 1000, 988, 117,
	1725, 0, 0, 1725, 1628, 1610, 1738, 0, 0, 0,
	0, 0, 198, 0, 112, 0, 0, 0, 1640, 1643,
	1644, 446, 1671, 0, 455, 455, 452, 1649, 1590, 1591,
	0, 1583, 1585, 1586, 142, 1008, 1004, 0, 1086, 0,
	0, 1067, 0, 1014, 1016, 1017, 1018, 1050, 0, 1021,
	1022, 0, 0, 0, 0, 0, 162, 1069, 168, 0,
	176, 0, 0, 181, 182, 169, 170, 171, 172, 0,
	193, 684, -2, 532, 249, 251, 252, 253, 244, -2,
	444, 442, 443, 382, 446, 446, 408, 409, 446, 411,
	412, 413, 414, 0, 420, 0, 401, 402, 403, 404,
	393, 0, 394, 395, 396, 436, 0, 397, 398, 0,
	399, 499, 0, 1592, 462, 463, 465, 473, 0, 468,
	469, 0, 473, 473, 0, 494, 495, 0, 1584, 196,
	1616, 1031, 237, 238, 239, 240, 241, 242, 720, 0,
	0, 696, 718, 719, 235, 0, 0, 245, 588, 587,
	0, 752, 0, 497, 0, 0, 491, 491, 476, 477,
	629, 0, 0, 727, 728, 729, 730, 0, 0, 0,
	615, 526, 0, 616, 617, 586, 588, 0, 0, 457,
	540, 541, 546, 547, 566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 664, 665, 667, 670, 0,
	675, 590, 679, 681, 0, 666, 669, 672, 0, 676,
	590, 680, 682, 1607, 1608, 1609, 0, 0, 790, 0,
	0, 523, 158, 1724, 795, 796, 800, 801, 866, 819,
	853, 866, 811, 818, 841, 855, 857, 891, 892, 897,
	905, 906, 907, 947, 0, 0, 0, 0, 955, 0,
	0, 1099, 1214, 1216, 1101, 1102, 1103, 1106, 0, 1110,
	1114, 0, 0, 0, 0, 0, 1161, 1159, 1560, 0,
	0, 0, 1210, 0, 0, 1233, 1234, 0, 0, 0,
	0, 1554, 0, 0, 1241, 0, 1515, 1191, 0, 0,
	0, 0, 0, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
	1191, 1191, 1191, 1578, 1268, 0, 0, 0, 0, 0,
	1273, 1274, 1275, 1191, 0, 1278, 1279, 0, 1281, 0,
	1282, 0, 0, 0, 0, 1289, 1290, 1292, 0, 0,
	1295, 1296, 0, 1298, 0, 1300, 1301, 1302, 1303, 1304,
	1305, 0, 1307, 0, 1309, 1310, 1311, 0, 1313, 0,
	1315, 1316, 0, 1318, 0, 1320, 0, 1323, 0, 1326,
	0, 1329, 0, 1332, 0, 1335, 0, 1338, 0, 1341,
	0, 1344, 0, 1347, 0, 1350, 0, 1353, 0, 1356,
	0, 1359, 0, 1362, 0, 1365, 0, 1368, 1369, 1370,
	0, 1372, 0, 1374, 0, 1377, 1378, 0, 1380, 0,
	1383, 0, 1386, 0, 0, 1387, 0, 0, 0, 1391,
	0, 0, 0, 0, 1400, 1401, 1402, 1403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1414, 1415,
	1416, 1417, 1418, 1419, 0, 1421, 0, 1192, 0, 0,
	1192, 0, 0, 0, 0, 0, 1231, 1736, 0, 1516,
	1517, 1518, 1519, 1520, 0, 0, 0, 0, 0, 0,
	1460, 1461, 1463, 0, 0, 1466, 0, 1468, 0, 1705,
	932, 935, 937, 1024, 1073, 1074, 0, 0, 0, 0,
	1054, 1735, 978, 979, 982, 1032, 0, 1564, 0, 0,
	1011, 1086, 0, 1012, 0, 0, 0, 0, 0, 1610,
	0, 0, 1739, 1738, 1738, 1738, 222, 0, 1630, 1631,
	1636, 1634, 1635, 114, 1697, 1701, 1653, 1647, 1665, 1678,
	455, 455, 449, 450, 456, 451, 453, 454, 1582, 0,
	1587, 0, 1694, 0, 0, 1681, 0, 1685, -2, 0,
	0, 0, 0, 0, 0, 0, 1057, 0, 0, 1060,
	0, 0, 0, 0, 1022, 0, 1023, 0, -2, 0,
	0, 156, 157, 0, 0, 0, 179, 180, 0, 0,
	186, 458, 459, 226, 235, 534, 250, 507, 0, 0,
	378, 445, 405, 406, 407, 410, 0, 430, 0, 0,
	0, 0, 528, 195, 1596, 1595, 473, 473, 464, 0,
	467, 0, 0, 0, 1740, 433, 496, 0, 1617, 1618,
	690, 0, 0, 697, 0, 0, 0, 597, 0, 608,
	609, 0, 724, -2, 786, 461, 0, 475, 478, 1039,
	0, 0, 610, 0, 613, 614, 527, 588, 619, 620,
	634, 621, 569, 570, 567, 0, 199, 655, 657, 661,
	656, 660, 0, 0, 0, 0, 673, 592, 0, 683,
	674, 592, 653, 0, 523, 1592, 0, 794, 524, 525,
	869, 869, 942, 161, 0, 945, 0, 0, 0, 0,
	1107, 1111, 1124, 1125, 1521, 1547, 432, 432, 1534, 432,
	438, 1537, 432, 1539, 432, 1542, 432, 1545, 1546, 0,
	0, 1154, 0, 0, 0, 0, 1240, 1557, 0, 0,
	1251, 1190, 1191, 1191, 1191, 1191, 1191, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1551, 0, 0,
	0, 1272, 0, 0, 1276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 211, 0, 0, 0, 0,
	0, 0, 1471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1185, 1189, 0, 1193, 1194, 0,
	0, 1423, 0, 0, 1441, 0, 0, 0, 0, 0,
	0, 0, 1561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1075, 1082, 0, 1082, 0, 1082, 0,
	0, 0, 1719, 1720, 1565, 1566, 1086, 1567, 1001, 1013,
	0, 214, 1611, 1612, 1613, 213, 0, 0, 0, 0,
	0, 0, 1726, 0, 1633, 1637, 1671, 0, 1664, 0,
	-2, 1673, 0, 0, 0, 1679, 447, 448, 1005, 143,
	1087, 147, 0, 1694, 1709, 0, 1691, 1698, 1702, 0,
	0, 0, 1687, 0, 1086, 1015, 1046, 1048, 0, 1043,
	1058, 1059, 1061, 0, 1063, 0, 1065, 1066, 1026, 1020,
	0, 164, 0, 1086, 1086, 163, 0, 1071, 183, 184,
	185, 533, 254, 259, 0, 0, 0, 264, 0, 266,
	0, 0, 0, 271, 272, 473, 473, 508, 0, 375,
	377, 0, 0, 257, 446, 0, 446, 0, 437, 439,
	0, 509, 529, 1593, 1594, 0, 0, 466, 470, 471,
	472, 0, 693, 0, 721, 0, 0, 0, 0, 0,
	0, 246, 589, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 0, 473, 0, 0, 0, 473, 473, 473,
	0, 778, 460, 0, 0, 749, 746, 611, 0, 290,
	291, 298, 299, 301, 0, 0, 0, 0, 0, 618,
	1026, 202, 0, 0, 0, 0, 663, 668, 671, 677,
	0, 591, 678, 791, 792, 793, 159, 804, 810, 944,
	964, 1095, 1108, 1112, 0, 0, 0, 0, 1548, 1532,
	446, 1535, 1536, 1538, 1540, 1541, 1543, 1544, 1150, 1151,
	1155, 0, 1237, 0, 1239, 0, 1555, 0, 1252, 1253,
	1254, 1255, 1256, 1587, 0, 0, 0, 1271, 0, 0,
	1191, 0, 1284, 1283, 1285, 0, 1287, 1288, 1293, 1294,
	1297, 1299, 1306, 1308, 1312, 1314, 1317, 1319, 1321, 0,
	1324, 0, 1327, 0, 1330, 0, 1333, 0, 1336, 0,
	1339, 0, 1342, 0, 1345, 0, 1348, 0, 1351, 0,
	1354, 0, 1357, 0, 1360, 0, 1363, 0, 1366, 0,
	1371, 1373, 0, 1376, 1379, 1381, 0, 1384, 0, 1388,
	0, 1390, 1392, 1393, 0, 0, 0, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1420, 0, 1183,
	1422, 1195, 1196, 1201, 1425, 0, 0, 0, 1428, 0,
	0, 0, 1432, 1232, 1443, 0, 1448, 0, 0, 1454,
	0, 1458, 0, 1464, 1465, 1467, 1469, 0, 0, 0,
	0, 0, 0, 0, 1052, 1033, 125, 1567, 1571, 0,
	-2, 0, 216, 218, 0, 0, 0, 1632, 1658, 1656,
	1656, 1666, 1667, 0, 0, 1674, 0, 0, 0, 0,
	148, 0, 0, 1680, 0, 0, 1703, 0, 0, 0,
	1686, 0, 165, 1578, 1040, 1047, 0, 0, 1041, 0,
	1042, 1062, 1064, 1019, 0, 1086, 1086, 154, 155, 0,
	260, 0, 262, 0, 265, 267, 268, 269, 275, 276,
	277, 278, 270, 0, 0, 374, 376, 0, 0, 419,
	431, 421, 0, 0, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1615, 685, 0, 695, 0, 1028, 0, 688,
	0, 600, 0, 0, 0, 473, 473, 473, 0, 0,
	0, 0, 763, 0, 0, 726, 0, 734, 0, 0,
	0, 302, 303, 0, 654, 0, 200, 201, 0, 0,
	659, 593, 594, 1148, 0, 0, 0, 1149, 1533, 0,
	0, 0, 0, 0, 1552, 0, 0, 0, 0, 1277,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1396, 0, 0, 0, 715, 716, 0,
	1472, 1188, 1578, 0, 1192, 1202, 1203, 0, 1192, 1442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1083, 0, 0, 0, 1034, 1035, 0, 0, 0,
	1072, 1571, 1576, 0, 0, 0, 1620, 1621, 0, 1625,
	1626, 1627, 215, 219, 220, 221, 1661, 0, 1654, 1657,
	1655, 1668, 0, 0, 1675, 0, 1677, 0, 1710, 1711,
	1699, 1692, 0, 1684, 1689, 1691, 1688, 1587, 1044, 0,
	1049, 0, 1578, 153, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 274, 0,
	0, 435, 440, 0, 0, 686, 0, 1029, 698, 689,
	0, 776, 0, 780, 0, 0, 0, 783, 784, 785,
	762, 0, 766, 501, 750, 747, 748, 612, 0, 203,
	204, 0, 0, 0, 1522, 0, 1525, 1235, 1238, 1236,
	0, 1267, 1269, 1270, 1530, 1531, 1286, 1322, 1325, 1328,
	1331, 1334, 1337, 1340, 1343, 1346, 1349, 1352, 1355, 1358,
	1361, 1364, 1367, 1375, 1382, 1385, 1389, 1394, 0, 1397,
	0, 0, 1398, 0, 717, 1179, 0, 0, 1199, 1200,
	0, 1427, 1429, 1430, 1431, 1444, 0, 1449, 1450, 0,
	1455, 0, 1459, 1470, 0, 1077, 1084, 1085, 0, 1080,
	0, 1081, 0, 1025, 1576, 145, 1577, 1574, 0, 1572,
	1569, 110, 1624, 0, 1645, 0, 1659, 1660, 1669, 1670,
	1676, 0, 0, 1691, 0, 1683, 151, 0, 0, 0,
	1587, 261, 0, 281, 694, 0, 697, 687, 774, 775,
	0, 787, 779, 781, 782, 764, -2, 1614, 0, 0,
	0, 662, 1523, 0, 0, 1399, 0, 713, 714, 1187,
	1180, 0, 1165, 1166, 1184, 1424, 1426, 0, 0, 0,
	1076, 1036, 1037, 1078, 1079, 144, 0, 1573, 1207, 0,
	1568, 0, 212, 89, 90, 43, -2, 0, 0, 0,
	1622, 1623, 1662, 1663, 1695, 0, 1682, 1690, 1045, 1052,
	0, 152, 514, 507, 0, 0, 0, 767, 768, 769,
	770, 771, 772, 773, 651, 205, 206, 0, 581, 582,
	583, 199, 0, 1242, 1395, 1181, 0, 0, 0, 0,
	0, 1445, 0, 1451, 0, 1456, 0, 1575, 0, 0,
	1570, 88, 0, -2, 93, 0, 0, 0, 0, 1030,
	67, 68, 69, 50, 74, 75, 83, 77, 1693, 699,
	0, 701, 0, -2, 502, 515, 0, 255, 282, 283,
	0, 0, 286, 0, 288, 289, 279, 280, 0, 0,
	788, 0, 202, 0, 0, 1172, 1173, 1174, 1175, 1177,
	0, 0, 0, 0, 1208, 1185, 44, 94, 110, 85,
	0, 0, 49, 51, 0, 0, 84, 700, 0, 0,
	457, 0, 710, 503, 504, 0, 510, 511, 512, 513,
	284, 285, 287, 722, 0, 580, 658, 1524, 0, 0,
	1446, 0, 1452, 0, 1457, 0, -2, 46, 0, 0,
	0, 52, 0, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 53, 76, 702, 703, 711,
	0, 505, 0, 506, 0, 0, 0, 691, 0, 722,
	1182, 1176, 1178, 0, 0, 1206, 95, 98, 100, 0,
	0, 87, 110, 71, 78, 79, 80, 0, 82, 72,
	73, 48, 0, 0, 712, 708, 516, 518, 519, 0,
	0, 517, 723, 692, 1447, 1453, 0, 110, 99, 0,
	0, 47, 0, 81, 54, 0, 520, 521, 522, 0,
	-2, 110, 86, 70, 704, 45, -2, 705, 706, 707,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 159, 3, 3, 3, 189, 181, 3,
	96, 98, 186, 184, 97, 185, 239, 187, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 790,
	168, 167, 169, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 191, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 155, 3, 192,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	156, 157, 158, 160, 161, 162, 163, 164, 165, 166,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 182, 183, 188, 190, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	58075, 750, 58076, 751, 58077, 752, 58078, 753, 58079, 754,
	58080, 755, 58081, 756, 58082, 757, 58083, 758, 58084, 759,
	58085, 760, 58086, 761, 58087, 762, 58088, 763, 58089, 764,
	58090, 765, 58091, 766, 58092, 767, 58093, 768, 58094, 769,
	58095, 770, 58096, 771, 58097, 772, 58098, 773, 58099, 774,
	58100, 775, 58101, 776, 58102, 777, 58103, 778, 58104, 779,
	58105, 780, 58106, 781, 58107, 782, 58108, 783, 58109, 784,
	58110, 785, 58111, 786, 58112, 787, 58113, 788, 58114, 789,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:685
		{
			setParseTrees(yylex, yyDollar[1].statementsUnion())
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Statement
//line sql.y:691
		{
			yyLOCAL = []Statement{yyDollar[1].statementUnion()}
			resetTokenizer(yylex)
		}
		yyVAL.union = yyLOCAL
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:696
		{
			yySLICE := (*[]Statement)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].statementUnion())
			resetTokenizer(yylex)
		}
	case 4:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:703
		{
			yyLOCAL = yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if yyLOCAL == nil && yyDollar[1].strs != nil {
				yyLOCAL = &CommentOnly{Comments: yyDollar[1].strs}
			}
		}
		yyVAL.union = yyLOCAL
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:716
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Statement
//line sql.y:720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:726
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:767
		{
			yyLOCAL = &SingleStatement{Statement: yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:771
		{
			yyLOCAL = &BeginEndStatement{Statements: yyDollar[2].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:775
		{
			yyLOCAL = &IfStatement{SearchCondition: yyDollar[2].exprUnion(), ThenStatements: yyDollar[4].compoundStatementsUnion(), ElseIfBlocks: yyDollar[5].elseIfsUnion(), ElseStatements: yyDollar[6].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:779
		{
			yyDollar[3].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			yyLOCAL = &DeclareVar{VarNames: yyDollar[2].columnsUnion(), Type: yyDollar[3].columnType}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:784
		{
			yyLOCAL = &DeclareHandler{Action: yyDollar[2].handlerActionUnion(), Conditions: yyDollar[5].handlerConditionsUnion(), Statement: yyDollar[6].compoundStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:788
		{
			yyLOCAL = &DeclareCondition{Name: yyDollar[2].identifierCI, Condition: yyDollar[5].handlerConditionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:792
		{
			yyLOCAL = &Signal{Condition: yyDollar[2].handlerConditionUnion(), SetValues: yyDollar[3].signalSetsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*SignalSet
//line sql.y:797
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:804
		{
			yySLICE := (*[]*SignalSet)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].signalSetUnion())
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*SignalSet
//line sql.y:808
		{
			yyLOCAL = []*SignalSet{yyDollar[2].signalSetUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SignalSet
//line sql.y:814
		{
			yyLOCAL = &SignalSet{ConditionName: yyDollar[1].signalConditionNameUnion(), Value: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:820
		{
			yyLOCAL = ClassOriginType
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:824
		{
			yyLOCAL = SubclassOriginType
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:828
		{
			yyLOCAL = MessageTextType
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:832
		{
			yyLOCAL = MySQLErrNoType
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:836
		{
			yyLOCAL = ConstraintCatalogType
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:840
		{
			yyLOCAL = ConstraintSchemaType
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:844
		{
			yyLOCAL = ConstraintNameType
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:848
		{
			yyLOCAL = CatalogNameType
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:852
		{
			yyLOCAL = SchemaNameType
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:856
		{
			yyLOCAL = TableNameType
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:860
		{
			yyLOCAL = ColumnNameType
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:864
		{
			yyLOCAL = CursorNameType
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerAction
//line sql.y:870
		{
			yyLOCAL = ContinueAction
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerAction
//line sql.y:874
		{
			yyLOCAL = ExitAction
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerAction
//line sql.y:878
		{
			yyLOCAL = UndoAction
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:884
		{
			yySLICE := (*[]HandlerCondition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].handlerConditionUnion())
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []HandlerCondition
//line sql.y:888
		{
			yyLOCAL = []HandlerCondition{yyDollar[1].handlerConditionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:894
		{
			yyLOCAL = &HandlerConditionErrorCode{ErrorCode: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:898
		{
			yyLOCAL = yyDollar[1].handlerConditionUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:908
		{
			yyLOCAL = &HandlerConditionSQLState{SQLStateValue: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:914
		{
			yyLOCAL = &HandlerConditionNamed{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:920
		{
			yyLOCAL = yyDollar[1].handlerConditionUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:924
		{
			yyLOCAL = yyDollar[1].handlerConditionUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:928
		{
			yyLOCAL = &HandlerConditionSQLWarning{}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:932
		{
			yyLOCAL = &HandlerConditionNotFound{}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:936
		{
			yyLOCAL = &HandlerConditionSQLException{}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:941
		{
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:945
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:949
		{
			yyLOCAL = &ColumnTypeOptions{Default: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:953
		{
			yyLOCAL = &ColumnTypeOptions{Default: yyDollar[2].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:959
		{
			yyLOCAL = yyDollar[1].compoundStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *CompoundStatements
//line sql.y:968
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *CompoundStatements
//line sql.y:972
		{
			yyLOCAL = yyDollar[1].compoundStatementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *CompoundStatements
//line sql.y:978
		{
			yyLOCAL = &CompoundStatements{Statements: []CompoundStatement{yyDollar[1].compoundStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *CompoundStatements
//line sql.y:982
		{
			yyDollar[1].compoundStatementsUnion().Statements = append(yyDollar[1].compoundStatementsUnion().Statements, yyDollar[2].compoundStatementUnion())
			yyLOCAL = yyDollar[1].compoundStatementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *CompoundStatements
//line sql.y:988
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *CompoundStatements
//line sql.y:992
		{
			yyLOCAL = yyDollar[2].compoundStatementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:997
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:1001
		{
			yyLOCAL = yyDollar[1].elseIfsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1007
		{
			yySLICE := (*[]*ElseIfBlock)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].elseIfUnion())
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:1011
		{
			yyLOCAL = []*ElseIfBlock{yyDollar[1].elseIfUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ElseIfBlock
//line sql.y:1017
		{
			yyLOCAL = &ElseIfBlock{SearchCondition: yyDollar[2].exprUnion(), ThenStatements: yyDollar[4].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1023
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1029
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1035
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1039
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1045
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1051
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:1057
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:1061
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:1066
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:1070
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1076
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:1080
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:1086
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion().Select}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1092
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1096
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1100
		{
			setLockIfPossible(yylex, yyDollar[2].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1123
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1129
		{
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1134
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1140
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1147
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1153
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1160
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 125:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1164
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), &SelectExprs{Exprs: []SelectExpr{&Nextval{Expr: yyDollar[5].exprUnion()}}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1170
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1174
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1178
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1182
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1186
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1192
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1196
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1201
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1205
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1211
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1215
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1220
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1226
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1232
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1239
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), ListArg: ListArg(yyDollar[3].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1243
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), Rows: yyDollar[3].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1249
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1255
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1263
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1267
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1271
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1277
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1289
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1301
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1305
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1311
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1317
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1321
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1325
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1329
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1334
		{
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1335
		{
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1339
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1343
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1349
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1353
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1359
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1363
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1368
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1372
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1378
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1384
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1394
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1398
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1402
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1406
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1412
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), NoScope)
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1416
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1420
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1426
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1430
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1436
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1440
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1446
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1450
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1454
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1460
		{
			yyVAL.str = RepeatableReadStr
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = ReadCommittedStr
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1468
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1472
		{
			yyVAL.str = SerializableStr
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1478
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1482
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1486
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1492
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1498
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1505
		{
			yyDollar[1].createTableUnion().IgnoreOrReplace = yyDollar[2].ignoreOrReplaceTypeUnion()
			yyDollar[1].createTableUnion().Select = yyDollar[4].tableStmtUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1512
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().IgnoreOrReplace = yyDollar[3].ignoreOrReplaceTypeUnion()
			yyDollar[1].createTableUnion().Select = yyDollar[5].tableStmtUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1520
		{
			yyLOCAL = yyDollar[1].createProcedureUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1524
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1533
		{
			yyDollar[1].createViewUnion().Columns = yyDollar[2].columnsUnion()
			yyDollar[1].createViewUnion().Select = yyDollar[4].tableStmtUnion()
			yyDollar[1].createViewUnion().CheckOption = yyDollar[5].str
			yyLOCAL = yyDollar[1].createViewUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1540
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1548
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1553
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1557
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1568
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1573
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1579
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1584
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1590
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1595
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1599
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1605
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1609
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1615
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 212:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *CreateProcedure
//line sql.y:1621
		{
			yyLOCAL = &CreateProcedure{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Definer: yyDollar[3].definerUnion(), Params: yyDollar[8].procParamsUnion(), Body: yyDollar[10].compoundStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1627
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1643
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[6].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Definer: yyDollar[3].definerUnion(), Security: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1647
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1651
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1658
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1665
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1670
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1675
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1680
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1687
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1694
		{
			yyLOCAL = &AlterDatabase{Comments: Comments(yyDollar[2].strs).Parsed()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1705
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1712
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1716
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1722
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1726
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1730
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1734
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1738
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1742
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 235:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1748
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1752
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1758
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1762
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1768
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1772
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1778
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1782
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1788
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1792
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1798
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1802
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1808
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1813
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1818
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1822
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1827
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1831
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1835
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 254:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1846
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1855
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1864
		{
			yyVAL.str = ""
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = ""
		}
	case 258:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1877
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1881
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1886
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1891
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1896
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1902
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1907
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1912
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1917
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1922
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1926
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1931
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1935
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1940
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1945
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1950
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1954
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1960
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1964
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1968
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1972
		{
			yyLOCAL = CompressedFormat
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1978
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1982
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1987
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1991
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1996
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2001
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2006
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2011
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2016
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2021
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:2026
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2033
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2040
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2044
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2048
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2052
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2056
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2060
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2070
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2077
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2081
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2087
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2091
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2095
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2099
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2103
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2107
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2111
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2115
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2119
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2123
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2127
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2131
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2135
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2140
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2144
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2148
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.str = Armscii8Str
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.str = ASCIIStr
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.str = Big5Str
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.str = UBinaryStr
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.str = Cp1250Str
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
			yyVAL.str = Cp1251Str
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2178
		{
			yyVAL.str = Cp1256Str
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.str = Cp1257Str
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.str = Cp850Str
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.str = Cp852Str
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.str = Cp866Str
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.str = Cp932Str
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.str = Dec8Str
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.str = EucjpmsStr
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.str = EuckrStr
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.str = Gb18030Str
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.str = Gb2312Str
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.str = GbkStr
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.str = Geostd8Str
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.str = GreekStr
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.str = HebrewStr
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.str = Hp8Str
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.str = Keybcs2Str
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2246
		{
			yyVAL.str = Koi8rStr
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2250
		{
			yyVAL.str = Koi8uStr
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2254
		{
			yyVAL.str = Latin1Str
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.str = Latin2Str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2262
		{
			yyVAL.str = Latin5Str
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2266
		{
			yyVAL.str = Latin7Str
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2270
		{
			yyVAL.str = MacceStr
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2274
		{
			yyVAL.str = MacromanStr
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			yyVAL.str = SjisStr
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2282
		{
			yyVAL.str = Swe7Str
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2286
		{
			yyVAL.str = Tis620Str
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2290
		{
			yyVAL.str = Ucs2Str
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2294
		{
			yyVAL.str = UjisStr
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2298
		{
			yyVAL.str = Utf16Str
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2302
		{
			yyVAL.str = Utf16leStr
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2306
		{
			yyVAL.str = Utf32Str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2310
		{
			yyVAL.str = Utf8mb3Str
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2314
		{
			yyVAL.str = Utf8mb4Str
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2318
		{
			yyVAL.str = Utf8mb3Str
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2328
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2332
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2336
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2342
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2346
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2352
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2356
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2360
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2366
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2370
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2376
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2380
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2384
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2388
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2394
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2405
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2410
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2416
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2420
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2424
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2428
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2432
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2436
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2440
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2444
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2454
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2460
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2466
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2472
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2478
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2484
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2490
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2502
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2506
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2510
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2514
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2520
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2524
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2530
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2534
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2538
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2542
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2546
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2550
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2554
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2558
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2562
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2566
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2570
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2574
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2578
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2582
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2587
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2593
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2597
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2601
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2605
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2609
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2613
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2617
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2621
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2627
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2632
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2637
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2641
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2646
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2650
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2663
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2670
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2674
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 440:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2680
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2688
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2692
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2696
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2701
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2705
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2710
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2714
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2718
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2722
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2726
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2731
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2741
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2746
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2752
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2756
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2761
		{
			yyVAL.str = ""
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2765
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2769
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2775
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2780
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2784
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2790
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2794
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2800
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2804
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2809
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2813
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2817
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2821
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2825
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2829
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2835
		{
			yyVAL.str = ""
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2845
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2849
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2853
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2857
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2861
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2866
		{
			yyVAL.str = ""
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2870
		{
			yyVAL.str = yyDollar[2].str
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2876
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2880
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2884
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2890
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2894
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2899
		{
			yyVAL.str = ""
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2903
		{
			yyVAL.str = yyDollar[1].str
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2909
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2913
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2918
		{
			yyVAL.str = ""
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2922
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2928
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2932
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2938
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2942
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2948
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2952
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2958
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2962
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2968
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2974
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2978
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2982
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2986
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2990
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2995
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2999
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:3005
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3011
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3017
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3021
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3025
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3030
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:3034
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3040
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3046
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3052
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3056
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3060
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3064
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3068
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3073
		{
			yyVAL.str = ""
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3077
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3081
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3087
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3091
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3096
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3100
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3109
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3115
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3119
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3123
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3129
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3133
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3139
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3143
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3147
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3151
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3155
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3159
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3163
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3167
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3171
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3175
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3179
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3183
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3187
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3191
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3195
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3199
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3203
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3207
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3211
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3215
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3219
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3223
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3227
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3231
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3235
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3239
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3243
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3247
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3251
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3255
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3259
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3264
		{
			yyVAL.str = ""
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3268
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3272
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3291
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3295
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3299
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3303
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3308
		{
			yyVAL.str = ""
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3314
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3318
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3323
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3327
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3332
		{
			yyVAL.str = ""
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3336
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3341
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3345
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3349
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3354
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3358
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3362
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3366
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3370
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 600:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3374
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3380
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3384
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3388
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3394
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3398
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3402
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3406
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3410
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3414
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3418
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3422
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3426
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3430
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3434
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3438
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3442
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3446
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3450
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3454
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3458
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3462
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3466
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3470
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3474
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3478
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3482
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3486
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3490
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3494
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3498
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3502
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3506
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3510
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3514
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3520
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3524
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3530
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3534
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3538
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3542
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3546
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3550
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3554
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3558
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3562
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3566
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3572
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3579
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3586
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3593
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3599
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].tableStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3609
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3616
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3623
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3635
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3645
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3649
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3653
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3666
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3676
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3680
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3684
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3695
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3702
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3709
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3716
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3722
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3729
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3737
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3743
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3750
		{
			yyLOCAL = &AlterMigration{
				Type:   CompleteMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3758
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3764
		{
			yyLOCAL = &AlterMigration{
				Type: PostponeCompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3771
		{
			yyLOCAL = &AlterMigration{
				Type: PostponeCompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3777
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3784
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3790
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3799
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3807
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3814
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3820
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3827
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3833
		{
			yyLOCAL = &AlterMigration{
				Type:      SetCutOverThresholdMigrationType,
				UUID:      string(yyDollar[4].str),
				Threshold: yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3842
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3846
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3855
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3863
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3872
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3879
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3887
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3891
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3900
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3912
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3916
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3921
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3925
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3930
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3934
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3940
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3946
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3952
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3956
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3962
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3966
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3972
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3978
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3984
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3990
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3996
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4000
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4004
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4008
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4014
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4020
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4026
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4030
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:4034
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:4040
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:4044
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4049
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:4053
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4058
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:4062
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4068
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4072
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4076
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4080
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4084
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4088
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4092
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4096
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4100
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4104
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4108
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4112
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4116
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4120
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4124
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4128
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4132
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4136
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4140
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4144
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4148
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4152
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4157
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4161
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4165
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4171
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4175
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4181
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4186
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4190
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4195
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4200
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4205
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4210
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4215
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4220
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4225
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4230
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4236
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4242
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4246
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:4252
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4257
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4261
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4266
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4271
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4276
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4281
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4286
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4291
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4298
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4305
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4312
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4320
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4324
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4330
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4336
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4342
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4348
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4354
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4360
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4366
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4372
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4378
		{
			yyVAL.str = ""
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4382
		{
			yyVAL.str = ""
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4388
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4394
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4398
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 792:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4404
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4408
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4417
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4421
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4425
		{
			yyLOCAL = &DropProcedure{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[5].tableName, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4431
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4435
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4441
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4447
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4451
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4457
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4461
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4465
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4469
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4473
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4477
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4481
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4485
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4489
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4493
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4497
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4501
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4505
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4509
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4513
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4517
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4521
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4525
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4529
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4533
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4537
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4541
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4545
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4549
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4553
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4557
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4561
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4565
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4569
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4573
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4577
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4581
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4585
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4589
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4593
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4597
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4601
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4605
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4609
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4613
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4617
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4621
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4625
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4629
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4636
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4640
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4644
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4648
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4652
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4656
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4660
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4664
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4668
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4672
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4676
		{
			yyLOCAL = &Show{&ShowTransactionStatus{}}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4680
		{
			yyLOCAL = &Show{&ShowTransactionStatus{Keyspace: yyDollar[5].identifierCS.String()}}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4685
		{
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4687
		{
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4691
		{
			yyVAL.str = ""
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4695
		{
			yyVAL.str = "extended "
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4701
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4705
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4711
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4715
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4721
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4725
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4729
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4735
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4739
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4743
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4749
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4753
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4759
		{
			yyVAL.empty = struct{}{}
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4763
		{
			yyVAL.empty = struct{}{}
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4767
		{
			yyVAL.empty = struct{}{}
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4773
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4777
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4783
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4787
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4791
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4798
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4802
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4806
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4810
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4817
		{
			yyLOCAL = &Begin{Type: BeginStmt}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4821
		{
			yyLOCAL = &Begin{Type: StartTransactionStmt, TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4830
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4836
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4840
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4846
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4850
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4854
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4861
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4867
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4871
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4876
		{
			yyVAL.empty = struct{}{}
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4878
		{
			yyVAL.empty = struct{}{}
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4881
		{
			yyVAL.empty = struct{}{}
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4883
		{
			yyVAL.empty = struct{}{}
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4887
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4893
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4898
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4902
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4906
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4910
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4914
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4919
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4923
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4927
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4931
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4935
		{
			yyLOCAL = TraceVExplainType
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4939
		{
			yyLOCAL = KeysVExplainType
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4945
		{
			yyVAL.str = yyDollar[1].str
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4949
		{
			yyVAL.str = yyDollar[1].str
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4953
		{
			yyVAL.str = yyDollar[1].str
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4959
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4963
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4967
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4971
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4976
		{
			yyVAL.str = ""
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4980
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4984
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4990
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4994
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5000
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5006
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5010
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5016
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:5022
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5026
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:5032
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5038
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5042
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5046
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:5050
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5056
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5062
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5068
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5072
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5076
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5080
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5084
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5088
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5094
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5098
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5104
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5108
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5112
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5116
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5120
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5124
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5128
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5132
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5136
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5140
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5144
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5148
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5153
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5157
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5161
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5166
		{
			yyVAL.str = ""
		}
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5170
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5175
		{
			setAllowComments(yylex, true)
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5179
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5185
		{
			yyVAL.strs = nil
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5189
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5195
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5199
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5203
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5208
		{
			yyVAL.str = ""
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5212
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5216
		{
			yyVAL.str = SQLCacheStr
		}
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5221
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5225
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5229
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5235
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5239
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5249
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5254
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5258
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5264
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5268
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5273
		{
			yyVAL.strs = nil
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5277
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5283
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5287
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5293
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5297
		{
			yyVAL.str = SQLCacheStr
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5301
		{
			yyVAL.str = DistinctStr
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5305
		{
			yyVAL.str = DistinctStr
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5309
		{
			yyVAL.str = HighPriorityStr
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5313
		{
			yyVAL.str = StraightJoinHint
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5317
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5321
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5325
		{
			yyVAL.str = SQLBigResultStr
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5329
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5333
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:5339
		{
			yyLOCAL = &SelectExprs{Exprs: []SelectExpr{yyDollar[1].selectExprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:5343
		{
			res := yyDollar[1].selectExprsUnion()
			res.Exprs = append(res.Exprs, yyDollar[3].selectExprUnion())
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5351
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5355
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5359
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5363
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5368
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5372
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5376
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5383
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5388
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5392
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5398
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5404
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5408
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5418
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5422
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5426
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5430
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5436
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5440
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5446
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5450
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5455
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5459
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5464
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5468
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5474
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5478
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5484
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5488
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5494
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5498
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5502
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5506
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5512
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5516
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5529
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5533
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5537
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5541
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5547
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5549
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5553
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5555
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5559
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5561
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5564
		{
			yyVAL.empty = struct{}{}
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5566
		{
			yyVAL.empty = struct{}{}
		}
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5569
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5573
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5577
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5584
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5590
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5594
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5598
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5604
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5610
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5614
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5618
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5622
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5628
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5632
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5642
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5646
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5652
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5656
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5662
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5667
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5671
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5677
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5681
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5687
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5691
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5695
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5699
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5703
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5707
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5712
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5716
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5720
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5724
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5730
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5734
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5741
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5745
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5749
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5753
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5757
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5761
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5765
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5769
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5775
		{
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5778
		{
		}
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5783
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5787
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5791
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5795
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5799
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5803
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5807
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5813
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5817
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5821
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5825
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5829
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5833
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5837
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5841
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5845
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5849
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5853
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5859
		{
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5862
		{
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5868
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5872
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5876
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5880
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5884
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5888
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5892
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5896
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5900
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5904
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5930
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5934
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5938
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5946
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5950
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5954
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5958
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5962
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5966
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5970
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5978
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5982
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6036
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6040
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:6046
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6050
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6056
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6060
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:6064
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6070
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6074
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6081
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6085
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6089
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6093
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6097
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6103
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6107
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6111
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6115
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6119
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6123
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6127
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6132
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6136
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6142
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6146
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:6151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:6155
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6160
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6164
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:6170
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6176
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6180
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6186
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6190
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6195
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6202
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6208
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6212
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6218
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6222
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6228
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6232
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6244
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6250
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6254
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:6260
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:6266
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6270
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6276
		{
			yyVAL.str = ""
		}
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6280
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6286
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6290
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6297
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6301
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6305
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6309
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6315
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6319
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6325
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6329
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6333
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6337
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6341
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6345
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6351
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6355
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6359
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6366
		{
			yyLOCAL = &Subquery{yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:6372
		{
			yyLOCAL = []Expr{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6376
		{
			yySLICE := (*[]Expr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6400
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6404
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6408
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6412
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6416
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6420
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6424
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6428
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6432
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6436
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6440
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6451
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6455
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6461
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6465
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6469
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6474
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6479
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6483
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6487
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6491
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6495
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6499
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6503
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6507
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6511
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6515
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6519
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6523
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6527
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6531
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6535
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6539
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6543
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6547
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6551
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6555
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6559
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6563
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6567
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6571
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6575
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6579
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6583
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6587
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6591
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6595
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6599
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6603
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6607
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6611
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6615
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6619
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6623
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6627
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6631
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6635
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6639
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6643
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6647
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6651
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6655
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6659
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6663
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6667
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6671
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6675
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6679
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6683
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6687
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6691
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6695
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6699
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6703
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6707
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6711
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6715
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6719
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6723
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6727
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6731
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6735
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6739
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6743
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6747
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6751
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6755
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6759
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6763
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6767
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6771
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6775
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6779
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6783
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6787
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6791
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6795
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6799
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6803
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6807
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6811
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6815
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6819
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6823
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6827
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6831
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6835
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6839
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6843
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6847
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6851
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6855
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6859
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6863
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6867
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6871
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6875
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6879
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6883
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6887
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6891
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6895
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6899
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6903
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6907
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6911
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6915
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6919
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6923
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6927
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6931
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6935
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6939
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6943
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6947
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6951
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6955
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6959
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6963
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6967
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6971
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6975
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6979
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6983
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6987
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6991
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6995
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6999
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7003
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7007
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7011
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7015
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7019
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7023
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7027
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7031
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7035
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7039
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7043
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7047
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7051
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7055
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7059
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7063
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7067
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7071
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7075
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7079
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7083
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7087
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7091
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7095
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7099
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7103
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7107
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7111
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7115
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7119
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7123
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7127
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7131
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7135
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7139
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7143
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7147
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7151
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7155
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7159
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7163
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7167
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7171
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7175
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7179
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7183
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7187
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7191
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7195
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7199
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7203
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7207
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7217
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7221
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7225
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7229
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7238
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7244
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7248
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7252
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7256
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7260
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7265
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7269
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7273
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7277
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7281
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7285
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7290
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7294
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7298
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7302
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7309
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7313
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7319
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7323
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7327
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7331
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7337
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7341
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7345
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7349
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7353
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7357
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7361
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7370
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7376
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7380
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7384
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7388
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7392
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7396
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7400
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7404
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7408
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7412
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7416
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7420
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7424
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7428
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7432
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7436
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7440
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7444
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7448
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7452
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7458
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7462
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7466
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7470
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7474
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7478
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7482
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7486
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7490
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7494
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7498
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7502
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7506
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7510
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7514
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7518
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7522
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7526
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7536
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7540
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7544
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7554
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7558
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7562
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7566
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7570
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7576
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7580
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7584
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7588
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7592
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7598
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7602
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7606
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7612
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7616
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7620
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7626
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7630
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7634
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7638
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7642
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7648
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7652
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7656
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7660
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7664
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7668
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7672
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7676
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7680
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7684
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7690
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7694
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7699
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7703
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7708
		{
			yyVAL.str = string("")
		}
	case 1552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7712
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7718
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7722
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7728
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7733
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7737
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7743
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7747
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7751
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7755
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7761
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7765
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7771
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7780
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7784
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7793
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7798
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7802
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7808
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7812
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7818
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7824
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7828
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7833
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7837
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7842
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7846
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7852
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7858
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7862
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7868
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7873
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7877
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7881
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7886
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7890
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7896
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7900
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7904
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7909
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7913
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7917
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7921
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7925
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7932
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7936
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7940
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7944
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7950
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7954
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7958
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7962
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7967
		{
			yyVAL.str = ""
		}
	case 1607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7974
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7978
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7982
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7987
		{
			yyVAL.str = ""
		}
	case 1611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7991
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7997
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8001
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8006
		{
			yyVAL.str = ""
		}
	case 1615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8010
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8015
		{
			yyVAL.str = "cascaded"
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8019
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8023
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:8028
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:8032
		{
			yyLOCAL = yyDollar[1].procParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:8038
		{
			yyLOCAL = []*ProcParameter{yyDollar[1].procParamUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8042
		{
			yySLICE := (*[]*ProcParameter)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].procParamUnion())
		}
	case 1623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ProcParameter
//line sql.y:8048
		{
			yyLOCAL = &ProcParameter{Mode: yyDollar[1].procParamModeUnion(), Name: yyDollar[2].identifierCI, Type: yyDollar[3].columnType}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:8053
		{
			yyLOCAL = InMode
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:8057
		{
			yyLOCAL = InMode
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:8061
		{
			yyLOCAL = InoutMode
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:8065
		{
			yyLOCAL = OutMode
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8070
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8077
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8083
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8089
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8095
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8104
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8108
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8113
		{
			yyVAL.str = ""
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8117
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8123
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8127
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8131
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8135
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8139
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8143
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8147
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8153
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8157
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8161
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8165
		{
			yyLOCAL = &SelectInto{Type: IntoVariables, VarList: yyDollar[2].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8171
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:8175
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:8181
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:8185
		{
			yyLOCAL = &Variable{Name: createIdentifierCI(yyDollar[1].str), Scope: NoScope}
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8190
		{
			yyVAL.str = ""
		}
	case 1654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8194
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8198
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8203
		{
			yyVAL.str = ""
		}
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8207
		{
			yyVAL.str = " header"
		}
	case 1658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8212
		{
			yyVAL.str = ""
		}
	case 1659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8216
		{
			yyVAL.str = " manifest on"
		}
	case 1660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8220
		{
			yyVAL.str = " manifest off"
		}
	case 1661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8225
		{
			yyVAL.str = ""
		}
	case 1662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8229
		{
			yyVAL.str = " overwrite on"
		}
	case 1663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8233
		{
			yyVAL.str = " overwrite off"
		}
	case 1664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8239
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8244
		{
			yyVAL.str = ""
		}
	case 1666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8248
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8254
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8258
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8264
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8268
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8273
		{
			yyVAL.str = ""
		}
	case 1672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8277
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8283
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8287
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8293
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1676:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8297
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8301
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1678:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8306
		{
			yyVAL.str = ""
		}
	case 1679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8310
		{
			yyVAL.str = " optionally"
		}
	case 1680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8323
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8327
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1682:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8331
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1683:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8335
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8339
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8349
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8353
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8357
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8361
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8370
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1693:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8374
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8379
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1695:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8383
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8389
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8393
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8399
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8403
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8409
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8413
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8419
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8423
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8429
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8435
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8445
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8455
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8459
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:8465
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8472
		{
			yyVAL.str = "charset"
		}
	case 1716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8482
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8486
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8490
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1721:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8499
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:8501
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8504
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8506
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8509
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8511
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8514
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IgnoreOrReplaceType
//line sql.y:8520
		{
			yyLOCAL = NoIgnoreOrReplace
		}
		yyVAL.union = yyLOCAL
	case 1730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IgnoreOrReplaceType
//line sql.y:8522
		{
			yyLOCAL = IgnoreType
		}
		yyVAL.union = yyLOCAL
	case 1731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IgnoreOrReplaceType
//line sql.y:8524
		{
			yyLOCAL = ReplaceType
		}
		yyVAL.union = yyLOCAL
	case 1732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8527
		{
			yyVAL.empty = struct{}{}
		}
	case 1733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8529
		{
			yyVAL.empty = struct{}{}
		}
	case 1734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8531
		{
			yyVAL.empty = struct{}{}
		}
	case 1735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8535
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8540
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8544
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8549
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8551
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8555
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8561
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8565
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8572
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8578
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8582
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8588
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8592
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8599
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8605
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8611
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8615
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8619
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9315
		{
		}
	case 2423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9320
		{
		}
	case 2424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9324
		{
			skipToEnd(yylex)
		}
	case 2425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9329
		{
			skipToEnd(yylex)
		}
	case 2426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9333
		{
			skipToEnd(yylex)
		}
	case 2427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9337
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
