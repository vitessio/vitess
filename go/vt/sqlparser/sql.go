// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const EXTRACT = 57441
const NULL = 57442
const TRUE = 57443
const FALSE = 57444
const OFF = 57445
const DISCARD = 57446
const IMPORT = 57447
const ENABLE = 57448
const DISABLE = 57449
const TABLESPACE = 57450
const VIRTUAL = 57451
const STORED = 57452
const EMPTY_FROM_CLAUSE = 57453
const LOWER_THAN_CHARSET = 57454
const CHARSET = 57455
const UNIQUE = 57456
const KEY = 57457
const EXPRESSION_PREC_SETTER = 57458
const OR = 57459
const XOR = 57460
const AND = 57461
const NOT = 57462
const BETWEEN = 57463
const CASE = 57464
const WHEN = 57465
const THEN = 57466
const ELSE = 57467
const END = 57468
const LE = 57469
const GE = 57470
const NE = 57471
const NULL_SAFE_EQUAL = 57472
const IS = 57473
const LIKE = 57474
const REGEXP = 57475
const IN = 57476
const SHIFT_LEFT = 57477
const SHIFT_RIGHT = 57478
const DIV = 57479
const MOD = 57480
const UNARY = 57481
const COLLATE = 57482
const BINARY = 57483
const UNDERSCORE_ARMSCII8 = 57484
const UNDERSCORE_ASCII = 57485
const UNDERSCORE_BIG5 = 57486
const UNDERSCORE_BINARY = 57487
const UNDERSCORE_CP1250 = 57488
const UNDERSCORE_CP1251 = 57489
const UNDERSCORE_CP1256 = 57490
const UNDERSCORE_CP1257 = 57491
const UNDERSCORE_CP850 = 57492
const UNDERSCORE_CP852 = 57493
const UNDERSCORE_CP866 = 57494
const UNDERSCORE_CP932 = 57495
const UNDERSCORE_DEC8 = 57496
const UNDERSCORE_EUCJPMS = 57497
const UNDERSCORE_EUCKR = 57498
const UNDERSCORE_GB18030 = 57499
const UNDERSCORE_GB2312 = 57500
const UNDERSCORE_GBK = 57501
const UNDERSCORE_GEOSTD8 = 57502
const UNDERSCORE_GREEK = 57503
const UNDERSCORE_HEBREW = 57504
const UNDERSCORE_HP8 = 57505
const UNDERSCORE_KEYBCS2 = 57506
const UNDERSCORE_KOI8R = 57507
const UNDERSCORE_KOI8U = 57508
const UNDERSCORE_LATIN1 = 57509
const UNDERSCORE_LATIN2 = 57510
const UNDERSCORE_LATIN5 = 57511
const UNDERSCORE_LATIN7 = 57512
const UNDERSCORE_MACCE = 57513
const UNDERSCORE_MACROMAN = 57514
const UNDERSCORE_SJIS = 57515
const UNDERSCORE_SWE7 = 57516
const UNDERSCORE_TIS620 = 57517
const UNDERSCORE_UCS2 = 57518
const UNDERSCORE_UJIS = 57519
const UNDERSCORE_UTF16 = 57520
const UNDERSCORE_UTF16LE = 57521
const UNDERSCORE_UTF32 = 57522
const UNDERSCORE_UTF8 = 57523
const UNDERSCORE_UTF8MB4 = 57524
const INTERVAL = 57525
const JSON_EXTRACT_OP = 57526
const JSON_UNQUOTE_EXTRACT_OP = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const FLUSH = 57534
const CHANGE = 57535
const MODIFY = 57536
const REVERT = 57537
const SCHEMA = 57538
const TABLE = 57539
const INDEX = 57540
const VIEW = 57541
const TO = 57542
const IGNORE = 57543
const IF = 57544
const PRIMARY = 57545
const COLUMN = 57546
const SPATIAL = 57547
const FULLTEXT = 57548
const KEY_BLOCK_SIZE = 57549
const CHECK = 57550
const INDEXES = 57551
const ACTION = 57552
const CASCADE = 57553
const CONSTRAINT = 57554
const FOREIGN = 57555
const NO = 57556
const REFERENCES = 57557
const RESTRICT = 57558
const SHOW = 57559
const DESCRIBE = 57560
const EXPLAIN = 57561
const DATE = 57562
const ESCAPE = 57563
const REPAIR = 57564
const OPTIMIZE = 57565
const TRUNCATE = 57566
const COALESCE = 57567
const EXCHANGE = 57568
const REBUILD = 57569
const PARTITIONING = 57570
const REMOVE = 57571
const MAXVALUE = 57572
const PARTITION = 57573
const REORGANIZE = 57574
const LESS = 57575
const THAN = 57576
const PROCEDURE = 57577
const TRIGGER = 57578
const VINDEX = 57579
const VINDEXES = 57580
const DIRECTORY = 57581
const NAME = 57582
const UPGRADE = 57583
const STATUS = 57584
const VARIABLES = 57585
const WARNINGS = 57586
const CASCADED = 57587
const DEFINER = 57588
const OPTION = 57589
const SQL = 57590
const UNDEFINED = 57591
const SEQUENCE = 57592
const MERGE = 57593
const TEMPORARY = 57594
const TEMPTABLE = 57595
const INVOKER = 57596
const SECURITY = 57597
const FIRST = 57598
const AFTER = 57599
const LAST = 57600
const VITESS_MIGRATION = 57601
const CANCEL = 57602
const RETRY = 57603
const COMPLETE = 57604
const CLEANUP = 57605
const BEGIN = 57606
const START = 57607
const TRANSACTION = 57608
const COMMIT = 57609
const ROLLBACK = 57610
const SAVEPOINT = 57611
const RELEASE = 57612
const WORK = 57613
const BIT = 57614
const TINYINT = 57615
const SMALLINT = 57616
const MEDIUMINT = 57617
const INT = 57618
const INTEGER = 57619
const BIGINT = 57620
const INTNUM = 57621
const REAL = 57622
const DOUBLE = 57623
const FLOAT_TYPE = 57624
const DECIMAL_TYPE = 57625
const NUMERIC = 57626
const TIME = 57627
const TIMESTAMP = 57628
const DATETIME = 57629
const YEAR = 57630
const CHAR = 57631
const VARCHAR = 57632
const BOOL = 57633
const CHARACTER = 57634
const VARBINARY = 57635
const NCHAR = 57636
const TEXT = 57637
const TINYTEXT = 57638
const MEDIUMTEXT = 57639
const LONGTEXT = 57640
const BLOB = 57641
const TINYBLOB = 57642
const MEDIUMBLOB = 57643
const LONGBLOB = 57644
const JSON = 57645
const ENUM = 57646
const GEOMETRY = 57647
const POINT = 57648
const LINESTRING = 57649
const POLYGON = 57650
const GEOMETRYCOLLECTION = 57651
const MULTIPOINT = 57652
const MULTILINESTRING = 57653
const MULTIPOLYGON = 57654
const NULLX = 57655
const AUTO_INCREMENT = 57656
const APPROXNUM = 57657
const SIGNED = 57658
const UNSIGNED = 57659
const ZEROFILL = 57660
const CODE = 57661
const COLLATION = 57662
const COLUMNS = 57663
const DATABASES = 57664
const ENGINES = 57665
const EVENT = 57666
const EXTENDED = 57667
const FIELDS = 57668
const FULL = 57669
const FUNCTION = 57670
const GTID_EXECUTED = 57671
const KEYSPACES = 57672
const OPEN = 57673
const PLUGINS = 57674
const PRIVILEGES = 57675
const PROCESSLIST = 57676
const SCHEMAS = 57677
const TABLES = 57678
const TRIGGERS = 57679
const USER = 57680
const VGTID_EXECUTED = 57681
const VITESS_KEYSPACES = 57682
const VITESS_METADATA = 57683
const VITESS_MIGRATIONS = 57684
const VITESS_REPLICATION_STATUS = 57685
const VITESS_SHARDS = 57686
const VITESS_TABLETS = 57687
const VSCHEMA = 57688
const NAMES = 57689
const GLOBAL = 57690
const SESSION = 57691
const ISOLATION = 57692
const LEVEL = 57693
const READ = 57694
const WRITE = 57695
const ONLY = 57696
const REPEATABLE = 57697
const COMMITTED = 57698
const UNCOMMITTED = 57699
const SERIALIZABLE = 57700
const CURRENT_TIMESTAMP = 57701
const DATABASE = 57702
const CURRENT_DATE = 57703
const CURRENT_TIME = 57704
const LOCALTIME = 57705
const LOCALTIMESTAMP = 57706
const CURRENT_USER = 57707
const UTC_DATE = 57708
const UTC_TIME = 57709
const UTC_TIMESTAMP = 57710
const DAY = 57711
const DAY_HOUR = 57712
const DAY_MICROSECOND = 57713
const DAY_MINUTE = 57714
const DAY_SECOND = 57715
const HOUR = 57716
const HOUR_MICROSECOND = 57717
const HOUR_MINUTE = 57718
const HOUR_SECOND = 57719
const MICROSECOND = 57720
const MINUTE = 57721
const MINUTE_MICROSECOND = 57722
const MINUTE_SECOND = 57723
const MONTH = 57724
const QUARTER = 57725
const SECOND = 57726
const SECOND_MICROSECOND = 57727
const YEAR_MONTH = 57728
const WEEK = 57729
const REPLACE = 57730
const CONVERT = 57731
const CAST = 57732
const SUBSTR = 57733
const SUBSTRING = 57734
const GROUP_CONCAT = 57735
const SEPARATOR = 57736
const TIMESTAMPADD = 57737
const TIMESTAMPDIFF = 57738
const WEIGHT_STRING = 57739
const MATCH = 57740
const AGAINST = 57741
const BOOLEAN = 57742
const LANGUAGE = 57743
const WITH = 57744
const QUERY = 57745
const EXPANSION = 57746
const WITHOUT = 57747
const VALIDATION = 57748
const UNUSED = 57749
const ARRAY = 57750
const CUME_DIST = 57751
const DESCRIPTION = 57752
const DENSE_RANK = 57753
const EMPTY = 57754
const EXCEPT = 57755
const FIRST_VALUE = 57756
const GROUPING = 57757
const GROUPS = 57758
const JSON_TABLE = 57759
const LAG = 57760
const LAST_VALUE = 57761
const LATERAL = 57762
const LEAD = 57763
const MEMBER = 57764
const NTH_VALUE = 57765
const NTILE = 57766
const OF = 57767
const OVER = 57768
const PERCENT_RANK = 57769
const RANK = 57770
const RECURSIVE = 57771
const ROW_NUMBER = 57772
const SYSTEM = 57773
const WINDOW = 57774
const ACTIVE = 57775
const ADMIN = 57776
const BUCKETS = 57777
const CLONE = 57778
const COMPONENT = 57779
const DEFINITION = 57780
const ENFORCED = 57781
const EXCLUDE = 57782
const FOLLOWING = 57783
const GEOMCOLLECTION = 57784
const GET_MASTER_PUBLIC_KEY = 57785
const HISTOGRAM = 57786
const HISTORY = 57787
const INACTIVE = 57788
const INVISIBLE = 57789
const LOCKED = 57790
const MASTER_COMPRESSION_ALGORITHMS = 57791
const MASTER_PUBLIC_KEY_PATH = 57792
const MASTER_TLS_CIPHERSUITES = 57793
const MASTER_ZSTD_COMPRESSION_LEVEL = 57794
const NESTED = 57795
const NETWORK_NAMESPACE = 57796
const NOWAIT = 57797
const NULLS = 57798
const OJ = 57799
const OLD = 57800
const OPTIONAL = 57801
const ORDINALITY = 57802
const ORGANIZATION = 57803
const OTHERS = 57804
const PATH = 57805
const PERSIST = 57806
const PERSIST_ONLY = 57807
const PRECEDING = 57808
const PRIVILEGE_CHECKS_USER = 57809
const PROCESS = 57810
const RANDOM = 57811
const REFERENCE = 57812
const REQUIRE_ROW_FORMAT = 57813
const RESOURCE = 57814
const RESPECT = 57815
const RESTART = 57816
const RETAIN = 57817
const REUSE = 57818
const ROLE = 57819
const SECONDARY = 57820
const SECONDARY_ENGINE = 57821
const SECONDARY_LOAD = 57822
const SECONDARY_UNLOAD = 57823
const SKIP = 57824
const SRID = 57825
const THREAD_PRIORITY = 57826
const TIES = 57827
const UNBOUNDED = 57828
const VCPU = 57829
const VISIBLE = 57830
const FORMAT = 57831
const TREE = 57832
const VITESS = 57833
const TRADITIONAL = 57834
const LOCAL = 57835
const LOW_PRIORITY = 57836
const NO_WRITE_TO_BINLOG = 57837
const LOGS = 57838
const ERROR = 57839
const GENERAL = 57840
const HOSTS = 57841
const OPTIMIZER_COSTS = 57842
const USER_RESOURCES = 57843
const SLOW = 57844
const CHANNEL = 57845
const RELAY = 57846
const EXPORT = 57847
const AVG_ROW_LENGTH = 57848
const CONNECTION = 57849
const CHECKSUM = 57850
const DELAY_KEY_WRITE = 57851
const ENCRYPTION = 57852
const ENGINE = 57853
const INSERT_METHOD = 57854
const MAX_ROWS = 57855
const MIN_ROWS = 57856
const PACK_KEYS = 57857
const PASSWORD = 57858
const FIXED = 57859
const DYNAMIC = 57860
const COMPRESSED = 57861
const REDUNDANT = 57862
const COMPACT = 57863
const ROW_FORMAT = 57864
const STATS_AUTO_RECALC = 57865
const STATS_PERSISTENT = 57866
const STATS_SAMPLE_PAGES = 57867
const STORAGE = 57868
const MEMORY = 57869
const DISK = 57870
const PARTITIONS = 57871
const LINEAR = 57872
const RANGE = 57873
const LIST = 57874
const SUBPARTITION = 57875
const SUBPARTITIONS = 57876
const HASH = 57877

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 137,
	553, 137,
	-2, 143,
	-1, 45,
	116, 143,
	156, 143,
	309, 143,
	-2, 442,
	-1, 52,
	33, 621,
	215, 621,
	226, 621,
	259, 635,
	260, 635,
	-2, 623,
	-1, 57,
	217, 646,
	-2, 644,
	-1, 108,
	214, 1098,
	-2, 116,
	-1, 110,
	1, 138,
	553, 138,
	-2, 143,
	-1, 120,
	117, 345,
	220, 345,
	-2, 436,
	-1, 139,
	116, 143,
	156, 143,
	309, 143,
	-2, 451,
	-1, 600,
	200, 1119,
	-2, 1115,
	-1, 601,
	200, 1120,
	-2, 1116,
	-1, 672,
	57, 714,
	-2, 722,
	-1, 709,
	132, 1477,
	-2, 109,
	-1, 710,
	132, 1354,
	-2, 110,
	-1, 716,
	132, 1408,
	-2, 1092,
	-1, 858,
	132, 1287,
	-2, 1089,
	-1, 896,
	225, 38,
	230, 38,
	-2, 356,
	-1, 973,
	1, 490,
	553, 490,
	-2, 143,
	-1, 1171,
	57, 715,
	-2, 727,
	-1, 1172,
	57, 716,
	-2, 728,
	-1, 1224,
	116, 143,
	156, 143,
	309, 143,
	-2, 386,
	-1, 1301,
	117, 345,
	220, 345,
	-2, 436,
	-1, 1310,
	225, 39,
	230, 39,
	-2, 357,
	-1, 1561,
	200, 1124,
	-2, 1118,
	-1, 1636,
	116, 143,
	156, 143,
	309, 143,
	-2, 387,
	-1, 1643,
	23, 162,
	-2, 164,
	-1, 1879,
	75, 91,
	84, 91,
	-2, 780,
	-1, 2044,
	47, 1060,
	-2, 1054,
	-1, 2246,
	5, 50,
	16, 50,
	18, 50,
	85, 50,
	-2, 755,
}

const yyPrivate = 57344

const yyLast = 33258

var yyAct = [...]int{
	600, 2499, 2493, 2305, 2464, 2452, 2385, 2165, 2095, 2102,
	2058, 3, 2136, 1153, 2055, 1036, 687, 2331, 90, 1592,
	665, 1824, 2148, 2104, 1696, 551, 2147, 2217, 2059, 1186,
	2336, 2056, 595, 1852, 2211, 603, 577, 594, 34, 1575,
	592, 1609, 2323, 555, 1596, 593, 548, 2150, 176, 2053,
	2045, 176, 1875, 515, 176, 1844, 984, 2237, 1666, 531,
	1911, 176, 549, 1940, 1913, 1981, 1912, 1864, 1686, 176,
	1671, 547, 148, 714, 35, 1622, 1613, 688, 543, 861,
	1555, 176, 1173, 1505, 1512, 1836, 926, 33, 1705, 667,
	1308, 1633, 1997, 134, 1685, 1738, 1464, 1673, 1905, 891,
	886, 1216, 1881, 531, 1195, 1616, 531, 176, 531, 669,
	1614, 673, 89, 1013, 1156, 1524, 85, 1577, 711, 1415,
	560, 1482, 1055, 1315, 1412, 1558, 897, 1683, 868, 690,
	1601, 892, 1398, 893, 1215, 1199, 679, 865, 869, 1300,
	1213, 894, 1034, 1029, 1276, 117, 701, 1420, 675, 1662,
	118, 92, 677, 151, 111, 70, 969, 1597, 112, 91,
	1121, 674, 538, 1125, 1324, 2426, 1933, 83, 2500, 79,
	2133, 1698, 904, 178, 179, 180, 1698, 1699, 1700, 1931,
	1568, 695, 1736, 700, 8, 119, 1960, 1959, 1384, 676,
	71, 7, 6, 1989, 1990, 1572, 1573, 1056, 113, 1471,
	1470, 681, 1469, 518, 1468, 862, 178, 179, 180, 1467,
	488, 1466, 931, 1453, 84, 541, 1281, 542, 1458, 2478,
	1822, 1056, 2041, 928, 1846, 539, 877, 668, 872, 2270,
	666, 2119, 2381, 2380, 930, 2298, 942, 943, 2299, 946,
	947, 948, 949, 708, 505, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	715, 689, 929, 907, 113, 883, 682, 1678, 2509, 882,
	697, 884, 96, 2462, 1776, 2503, 2437, 2492, 2306, 2453,
	1724, 2461, 932, 933, 934, 1996, 2436, 2197, 1290, 1823,
	504, 1676, 72, 72, 908, 1217, 74, 1218, 72, 1066,
	1968, 502, 2092, 2093, 1967, 876, 1628, 1629, 878, 944,
	98, 99, 881, 102, 978, 979, 108, 72, 1890, 173,
	939, 1889, 483, 1066, 1891, 2091, 1627, 583, 113, 1087,
	1988, 1773, 1003, 1008, 1009, 544, 662, 1574, 1774, 499,
	1032, 1855, 664, 972, 661, 672, 1902, 2349, 513, 2214,
	2390, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1095,
	1097, 1098, 991, 510, 691, 172, 1856, 992, 879, 81,
	81, 991, 2189, 703, 704, 81, 992, 1004, 997, 1934,
	1020, 2167, 1022, 518, 990, 2187, 989, 1646, 1645, 114,
	1062, 2020, 529, 1054, 81, 1457, 519, 533, 527, 1160,
	968, 881, 156, 873, 1404, 1459, 1460, 1461, 1941, 1706,
	875, 874, 1963, 1752, 1062, 1753, 1675, 1754, 1019, 1021,
	1010, 178, 179, 180, 489, 518, 491, 506, 1374, 521,
	1011, 520, 495, 518, 493, 497, 507, 498, 1031, 492,
	1744, 503, 1739, 2502, 494, 508, 509, 511, 525, 524,
	512, 518, 501, 522, 1005, 998, 2160, 879, 2168, 153,
	1026, 154, 1399, 1012, 2161, 945, 1755, 2479, 1006, 1007,
	1375, 171, 1376, 885, 974, 1976, 880, 951, 881, 967,
	950, 2169, 1743, 176, 1741, 176, 2291, 2144, 176, 1750,
	1747, 1749, 1748, 1745, 887, 1709, 888, 81, 1610, 888,
	924, 923, 1774, 922, 921, 920, 1024, 1017, 915, 1248,
	913, 1018, 919, 2108, 918, 1293, 531, 531, 531, 917,
	912, 1023, 1742, 925, 866, 1099, 866, 2490, 2497, 900,
	864, 1099, 1980, 2504, 531, 531, 899, 866, 906, 1413,
	2021, 971, 1001, 1016, 1684, 1314, 987, 1048, 993, 994,
	995, 996, 702, 1061, 1058, 1059, 1060, 1065, 1067, 1064,
	906, 1063, 2126, 2118, 1977, 880, 1730, 1409, 1057, 1042,
	935, 1033, 1962, 34, 2028, 157, 519, 1061, 1058, 1059,
	1060, 1065, 1067, 1064, 162, 1063, 2027, 1825, 1827, 1998,
	1952, 1405, 1057, 2026, 1288, 2143, 1965, 523, 1287, 2425,
	1932, 596, 1286, 578, 580, 597, 598, 1992, 576, 579,
	599, 1677, 2215, 1787, 1410, 516, 1284, 487, 519, 1102,
	1103, 1104, 1105, 1027, 906, 482, 519, 2391, 970, 1110,
	517, 1113, 2435, 1025, 1935, 905, 1236, 581, 582, 2362,
	909, 899, 880, 906, 519, 916, 1983, 914, 1313, 1151,
	910, 1982, 1975, 1146, 941, 1974, 2416, 905, 2251, 1038,
	1039, 2377, 176, 899, 902, 903, 1726, 866, 911, 2000,
	2233, 896, 900, 1775, 1100, 1101, 1983, 1886, 1851, 176,
	1403, 1982, 1161, 1106, 1814, 1567, 1203, 667, 1166, 1164,
	895, 149, 75, 1386, 1385, 1387, 1388, 1389, 531, 1152,
	1133, 982, 176, 110, 1163, 80, 80, 531, 1167, 1099,
	980, 80, 977, 531, 669, 988, 1249, 1634, 1098, 2090,
	1051, 905, 711, 684, 1000, 71, 2495, 1049, 1050, 2496,
	80, 2494, 2002, 1826, 2006, 1002, 2001, 1123, 1999, 1124,
	905, 1014, 1421, 2004, 1127, 909, 899, 1165, 1030, 906,
	986, 89, 2003, 105, 2431, 910, 2287, 2227, 1152, 927,
	1139, 1140, 1141, 1142, 1740, 2005, 2007, 1157, 1262, 1265,
	1266, 1267, 1268, 1269, 1270, 1406, 1271, 1272, 1273, 1274,
	1275, 1250, 1251, 1252, 1253, 1234, 1235, 1263, 1219, 1237,
	92, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1400,
	106, 1401, 1052, 2013, 1402, 1525, 1072, 1801, 1525, 1069,
	2470, 1070, 1071, 1154, 2468, 1924, 1070, 1071, 666, 1071,
	2345, 1185, 668, 2472, 2473, 2262, 1162, 2200, 2106, 2107,
	1069, 1725, 1070, 1071, 1119, 2469, 905, 2486, 940, 2015,
	1209, 1210, 2261, 906, 1713, 1182, 178, 179, 180, 2098,
	1507, 176, 1809, 1323, 715, 1277, 178, 179, 180, 1322,
	1848, 1015, 1422, 1069, 1285, 1070, 1071, 985, 973, 1312,
	1718, 2252, 544, 150, 155, 152, 158, 159, 160, 161,
	163, 164, 165, 166, 1723, 531, 1264, 1310, 1721, 167,
	168, 169, 170, 1790, 2099, 1319, 915, 1722, 2194, 1321,
	913, 1718, 531, 531, 2440, 531, 1487, 531, 531, 1204,
	531, 531, 531, 531, 531, 531, 2507, 1508, 2372, 2101,
	1488, 1489, 1486, 2096, 1393, 531, 2322, 1849, 1720, 176,
	1357, 2105, 2192, 1180, 1168, 1214, 2441, 2106, 2107, 2321,
	905, 1320, 2269, 2108, 2097, 176, 899, 902, 903, 1069,
	866, 1070, 1071, 1196, 896, 900, 531, 2268, 176, 2134,
	1391, 1291, 1292, 1180, 1306, 2124, 1352, 1353, 1069, 1411,
	1070, 1071, 81, 176, 1299, 2505, 2103, 1909, 601, 1093,
	1094, 1096, 1095, 1097, 1098, 1318, 1485, 1392, 1792, 176,
	1069, 1797, 1070, 1071, 1602, 1603, 176, 1791, 1069, 1908,
	1070, 1071, 2409, 1681, 1354, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 531, 531, 531, 1317, 1283, 1296,
	2487, 1360, 1361, 1390, 1394, 1297, 177, 1366, 1367, 177,
	1295, 1309, 177, 1069, 2410, 1070, 1071, 532, 706, 177,
	2105, 1779, 1780, 1781, 1425, 176, 1417, 177, 1379, 2506,
	1180, 1429, 2108, 1431, 1432, 1433, 1434, 1529, 1378, 177,
	1438, 2413, 1370, 1796, 1377, 1316, 1316, 1326, 1368, 1327,
	1362, 1329, 1331, 2488, 1452, 1335, 1337, 1339, 1341, 1343,
	2164, 532, 1359, 1355, 532, 177, 532, 1381, 1358, 1069,
	1506, 1070, 1071, 1423, 1424, 1414, 614, 615, 616, 1069,
	1333, 1070, 1071, 1515, 531, 1483, 1189, 1428, 1069, 1193,
	1070, 1071, 2412, 2411, 1435, 1436, 1437, 113, 883, 531,
	531, 1490, 882, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1481, 1427, 1491, 1559,
	1289, 1091, 1092, 1093, 1094, 1096, 1095, 1097, 1098, 176,
	1380, 2100, 2344, 1041, 1526, 1190, 1448, 1449, 1450, 2342,
	1451, 2318, 2266, 1580, 2258, 1918, 1477, 1479, 1480, 1906,
	1734, 1582, 1733, 1583, 1192, 176, 1595, 1581, 531, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1073, 1478, 176, 2422,
	1510, 531, 1509, 1484, 2226, 1454, 176, 1561, 176, 1418,
	176, 176, 531, 1180, 1382, 531, 1563, 1564, 1180, 1559,
	1069, 1369, 1070, 1071, 1365, 1364, 531, 711, 1363, 89,
	711, 1191, 1028, 1511, 1069, 2398, 1070, 1071, 1842, 2501,
	1517, 1518, 1842, 2459, 1087, 89, 1991, 2397, 1069, 2366,
	1070, 1071, 88, 1560, 1842, 2446, 1588, 1419, 1842, 2444,
	1562, 2365, 1612, 1565, 1566, 2370, 1088, 1089, 1090, 1091,
	1092, 1093, 1094, 1096, 1095, 1097, 1098, 1561, 178, 179,
	180, 531, 2259, 1652, 1653, 1654, 1655, 1687, 1688, 1689,
	86, 2288, 1691, 1693, 1842, 2427, 1587, 1637, 95, 681,
	1069, 87, 1070, 1071, 95, 1638, 531, 1620, 1910, 94,
	1180, 93, 531, 1319, 2304, 94, 1319, 93, 1319, 1643,
	88, 1590, 1942, 1607, 1717, 1641, 1069, 2199, 1070, 1071,
	1707, 178, 179, 180, 1668, 1893, 1605, 2296, 2424, 1472,
	1473, 1474, 1475, 1069, 1921, 1070, 1071, 1625, 1674, 178,
	179, 180, 1624, 1694, 531, 1180, 1506, 1640, 1853, 1639,
	86, 1506, 1506, 1069, 1642, 1070, 1071, 88, 2228, 715,
	1068, 87, 715, 178, 179, 180, 2054, 1692, 1180, 1513,
	1514, 178, 179, 180, 1180, 1704, 2226, 1519, 2399, 1180,
	1842, 2373, 2296, 1180, 1842, 2294, 2085, 176, 1718, 1180,
	2231, 1180, 1554, 1712, 176, 1774, 1715, 2430, 1716, 176,
	176, 94, 1680, 176, 1669, 176, 1682, 1690, 1853, 1679,
	1882, 176, 1664, 1665, 2476, 1180, 2116, 2115, 176, 1861,
	544, 2112, 2113, 1727, 2112, 2111, 1710, 1860, 1714, 1729,
	1711, 1861, 1180, 1728, 1731, 1732, 907, 1669, 1842, 1647,
	1719, 1648, 1649, 1650, 1651, 1861, 176, 531, 1788, 1180,
	1774, 1961, 2114, 1598, 1599, 1280, 1946, 1658, 1659, 1660,
	1661, 177, 1626, 177, 1938, 1939, 177, 908, 1882, 1788,
	1765, 1766, 1838, 1883, 1788, 1768, 1087, 1316, 1786, 2226,
	1632, 1861, 1885, 1737, 1769, 1842, 1841, 88, 1068, 1180,
	671, 1280, 1279, 1806, 532, 532, 532, 1718, 1088, 1089,
	1090, 1091, 1092, 1093, 1094, 1096, 1095, 1097, 1098, 1483,
	1225, 1224, 532, 532, 1089, 1090, 1091, 1092, 1093, 1094,
	1096, 1095, 1097, 1098, 1783, 1758, 1785, 1087, 2271, 1805,
	1083, 1883, 1084, 1718, 1701, 1600, 1184, 1570, 1462, 1670,
	1774, 1784, 1408, 1348, 1788, 1211, 1085, 1086, 1082, 1088,
	1089, 1090, 1091, 1092, 1093, 1094, 1096, 1095, 1097, 1098,
	890, 176, 889, 2449, 81, 2387, 1187, 81, 2363, 176,
	2356, 2286, 2283, 1820, 2264, 1772, 2203, 531, 2272, 2273,
	2274, 2202, 2166, 1282, 1667, 2162, 2139, 2135, 1847, 1947,
	1087, 1663, 1657, 1349, 1350, 1351, 1656, 1484, 1782, 1396,
	1311, 1307, 1278, 107, 2137, 1915, 1914, 2275, 972, 176,
	176, 1857, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096,
	1095, 1097, 1098, 1345, 2388, 1892, 2238, 2239, 1678, 1800,
	1843, 1561, 2483, 2465, 2241, 2131, 1798, 34, 2130, 2129,
	177, 1866, 1869, 1870, 1871, 1867, 1877, 1868, 1872, 2481,
	2054, 2238, 2239, 1915, 2276, 2277, 1925, 177, 1759, 1455,
	2076, 1839, 2074, 2244, 2243, 2077, 1157, 2075, 2073, 531,
	1346, 1347, 1811, 1812, 176, 1821, 532, 1560, 2072, 2460,
	177, 176, 1594, 1903, 1904, 532, 1829, 2078, 1188, 1870,
	1871, 532, 1586, 531, 1835, 1850, 1876, 2232, 2034, 1896,
	531, 2033, 1840, 1944, 1319, 1319, 1880, 2408, 2335, 531,
	2046, 2048, 1937, 2337, 1884, 1178, 1174, 2219, 1887, 2049,
	2043, 1958, 2222, 1407, 660, 2218, 1894, 2110, 1897, 1900,
	1175, 1674, 176, 176, 176, 176, 176, 1866, 1869, 1870,
	1871, 1867, 937, 1868, 1872, 685, 1907, 1178, 1174, 176,
	176, 1919, 1917, 686, 936, 1584, 1585, 1177, 2176, 1176,
	1916, 1521, 1175, 1914, 1986, 176, 86, 1040, 1922, 86,
	1954, 1953, 1926, 1927, 1928, 1522, 88, 87, 2224, 95,
	87, 114, 1956, 1506, 88, 1299, 1802, 1171, 1172, 1177,
	94, 1176, 93, 2127, 1948, 1949, 1602, 1603, 1778, 1762,
	2423, 88, 2383, 2109, 1874, 531, 1955, 667, 1591, 2012,
	2032, 1957, 693, 694, 1751, 95, 95, 93, 2031, 531,
	2025, 2343, 2341, 2340, 2333, 2284, 94, 94, 93, 176,
	2223, 2221, 2140, 531, 1702, 1294, 692, 94, 2332, 177,
	1994, 2212, 531, 1853, 1838, 1978, 585, 1807, 1993, 531,
	531, 1205, 176, 176, 176, 176, 176, 2025, 1197, 2051,
	2036, 1196, 2485, 1995, 176, 2066, 2009, 2414, 1984, 176,
	176, 1985, 176, 532, 2008, 176, 176, 176, 2257, 2060,
	683, 2037, 2485, 2484, 2024, 97, 673, 100, 101, 2057,
	532, 532, 82, 532, 2057, 532, 532, 1, 532, 532,
	532, 532, 532, 532, 609, 530, 1167, 2467, 500, 2084,
	2125, 2035, 2038, 532, 1571, 1155, 176, 177, 514, 2463,
	1383, 1373, 2307, 675, 2086, 2384, 1943, 2087, 2067, 531,
	2079, 2070, 1708, 177, 2282, 1672, 674, 898, 531, 139,
	1635, 1636, 2455, 176, 532, 89, 177, 104, 859, 713,
	1417, 2088, 863, 176, 870, 103, 2083, 2146, 2094, 901,
	999, 177, 1703, 2068, 2069, 2297, 2071, 2120, 176, 1901,
	2121, 176, 1644, 1231, 1229, 2142, 1230, 177, 1228, 1233,
	1232, 2177, 1227, 2029, 177, 2154, 1808, 1456, 528, 1873,
	2153, 2122, 2123, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 532, 532, 532, 1674, 174, 2145, 2141, 2157,
	1220, 1198, 938, 490, 2065, 2117, 1735, 496, 1111, 2030,
	1888, 176, 712, 705, 2062, 2216, 2042, 2044, 1845, 2047,
	2172, 2174, 2175, 177, 2171, 2040, 1179, 2407, 2334, 2447,
	1898, 1194, 1799, 1118, 1523, 2179, 1617, 1579, 1476, 553,
	552, 2185, 550, 2178, 1831, 1854, 1074, 2010, 2011, 2210,
	604, 1206, 2014, 1865, 1863, 1862, 2016, 2017, 2018, 1760,
	1621, 2240, 2236, 1615, 1837, 561, 176, 554, 546, 602,
	2254, 2152, 1964, 2163, 1966, 2220, 2213, 1899, 2159, 1053,
	2235, 1170, 532, 540, 2260, 2225, 871, 1520, 2389, 176,
	2245, 2375, 1777, 2196, 1169, 1532, 1533, 532, 532, 2132,
	2249, 2250, 1695, 60, 2052, 38, 2247, 176, 2242, 535,
	176, 176, 176, 2477, 1044, 2255, 699, 32, 2248, 2154,
	531, 531, 31, 30, 2153, 29, 2256, 177, 28, 23,
	22, 21, 20, 19, 25, 18, 2265, 17, 2267, 2289,
	2290, 16, 109, 47, 44, 42, 116, 531, 531, 531,
	531, 115, 45, 177, 41, 975, 532, 2292, 39, 27,
	26, 15, 14, 13, 2314, 12, 177, 11, 2303, 532,
	10, 2301, 2302, 9, 177, 5, 177, 4, 177, 177,
	532, 1047, 24, 532, 2, 2138, 531, 531, 531, 176,
	1930, 1697, 0, 2317, 532, 2182, 2183, 0, 2184, 0,
	0, 2186, 0, 2188, 0, 0, 0, 2312, 2313, 0,
	0, 0, 531, 0, 531, 0, 0, 0, 0, 0,
	0, 0, 2350, 2352, 2339, 2330, 2338, 0, 2329, 2327,
	2328, 0, 0, 0, 667, 0, 2354, 2348, 2346, 0,
	0, 2060, 0, 0, 0, 2060, 0, 0, 34, 532,
	2057, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2358, 2359, 2361, 0, 0, 2198, 531, 0, 0,
	0, 0, 0, 0, 532, 0, 0, 0, 0, 0,
	532, 0, 0, 0, 0, 0, 2371, 531, 2367, 2369,
	2368, 0, 0, 0, 0, 0, 0, 0, 2378, 2379,
	0, 0, 2386, 0, 2374, 0, 0, 0, 0, 0,
	0, 0, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 532, 0, 0, 0, 0, 2406, 2404, 0,
	0, 2403, 0, 0, 0, 0, 0, 531, 0, 0,
	2415, 0, 0, 0, 531, 0, 0, 0, 0, 0,
	0, 2417, 713, 713, 713, 0, 2418, 667, 0, 2419,
	0, 0, 2060, 2421, 0, 177, 0, 0, 531, 176,
	1043, 1045, 177, 0, 0, 2429, 0, 177, 177, 0,
	531, 177, 0, 177, 0, 0, 2285, 2432, 0, 177,
	0, 0, 0, 0, 0, 0, 177, 531, 0, 0,
	0, 34, 2300, 0, 0, 0, 0, 0, 0, 2442,
	0, 531, 531, 0, 0, 2448, 2445, 2454, 0, 2450,
	0, 0, 0, 0, 177, 532, 2386, 2456, 0, 0,
	0, 0, 0, 0, 2474, 0, 2466, 2471, 2057, 0,
	0, 34, 0, 2315, 0, 2316, 1149, 2480, 2482, 0,
	2319, 2320, 0, 0, 0, 0, 0, 531, 0, 0,
	0, 0, 0, 0, 2491, 0, 0, 0, 2498, 172,
	0, 0, 0, 0, 0, 0, 2489, 0, 2347, 0,
	1936, 0, 0, 2508, 0, 0, 0, 0, 0, 2355,
	0, 0, 2357, 114, 0, 136, 0, 0, 0, 0,
	0, 0, 0, 0, 2360, 0, 156, 0, 1553, 0,
	0, 0, 0, 0, 0, 2364, 1088, 1089, 1090, 1091,
	1092, 1093, 1094, 1096, 1095, 1097, 1098, 0, 0, 0,
	0, 0, 0, 0, 1201, 0, 0, 146, 0, 177,
	0, 0, 135, 713, 544, 172, 0, 177, 0, 1221,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 154, 0, 0, 0, 114,
	0, 1302, 1303, 145, 144, 171, 0, 0, 0, 0,
	0, 0, 156, 2405, 544, 0, 0, 177, 177, 1545,
	1534, 1535, 1536, 1537, 1547, 1538, 1539, 1540, 1552, 1548,
	1541, 1542, 1549, 1550, 1551, 1543, 1544, 1546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1895, 0, 0, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 154, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 171, 177, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 1304,
	147, 532, 1301, 0, 141, 142, 0, 0, 532, 157,
	0, 0, 0, 0, 0, 0, 0, 532, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2475, 1181, 1183, 0, 0, 0, 611, 73, 0, 0,
	177, 177, 177, 177, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 177, 0,
	0, 863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 1149, 0, 0, 0, 1325, 1325,
	0, 1325, 0, 1325, 1325, 157, 1334, 1325, 1325, 1325,
	1325, 1325, 0, 0, 162, 0, 0, 0, 0, 1149,
	1149, 863, 0, 0, 0, 0, 0, 0, 670, 0,
	73, 0, 0, 532, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 532, 670, 0,
	0, 0, 1395, 0, 0, 0, 0, 177, 0, 0,
	0, 532, 0, 0, 0, 0, 0, 0, 0, 0,
	532, 0, 0, 0, 0, 0, 0, 532, 532, 0,
	177, 177, 177, 177, 177, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 177, 177, 0,
	177, 0, 0, 177, 177, 177, 0, 0, 0, 0,
	713, 713, 713, 0, 0, 0, 0, 0, 0, 0,
	143, 149, 0, 0, 0, 586, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 0, 0, 0, 0, 532, 0, 0, 0,
	0, 177, 0, 175, 0, 0, 486, 0, 0, 526,
	0, 177, 0, 0, 0, 0, 486, 0, 0, 0,
	0, 0, 0, 0, 486, 0, 177, 0, 0, 177,
	1516, 0, 0, 0, 0, 0, 680, 1149, 0, 0,
	0, 0, 0, 0, 0, 1530, 1531, 0, 0, 0,
	713, 0, 698, 0, 698, 0, 0, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 150, 155, 152,
	158, 159, 160, 161, 163, 164, 165, 166, 0, 177,
	0, 0, 0, 167, 168, 169, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1201, 0, 0,
	713, 0, 0, 0, 0, 0, 0, 0, 713, 0,
	0, 713, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 863, 150, 155, 152, 158, 159, 160, 161,
	163, 164, 165, 166, 0, 0, 0, 177, 0, 167,
	168, 169, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 177, 177,
	177, 0, 0, 0, 0, 0, 0, 0, 532, 532,
	0, 0, 0, 0, 0, 0, 0, 870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 532, 532, 532, 0,
	0, 0, 863, 0, 0, 0, 0, 0, 870, 1527,
	0, 0, 0, 1528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 532, 532, 532, 177, 0, 1181,
	1569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	532, 0, 532, 0, 0, 0, 0, 0, 0, 1589,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1035, 1035, 1035, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 670,
	1107, 1108, 1109, 0, 1112, 532, 1114, 1115, 1116, 1117,
	0, 1120, 1122, 1122, 0, 1122, 1126, 1126, 1128, 1129,
	1130, 1131, 1132, 1771, 1134, 1135, 1136, 1137, 1138, 0,
	0, 0, 0, 1126, 1126, 1126, 1126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	0, 0, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 532, 177, 486, 0,
	486, 0, 0, 486, 0, 0, 0, 0, 532, 0,
	1159, 0, 0, 670, 0, 0, 0, 670, 0, 0,
	0, 0, 0, 670, 0, 532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 532,
	532, 0, 0, 0, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 72,
	36, 37, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 78,
	0, 1158, 0, 40, 66, 67, 0, 64, 68, 0,
	0, 0, 0, 0, 0, 0, 65, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 53, 0, 0, 0, 0,
	0, 0, 485, 0, 0, 0, 81, 0, 0, 0,
	0, 0, 534, 0, 0, 1920, 0, 0, 0, 0,
	663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 1789, 1593,
	0, 0, 1793, 0, 1794, 1795, 1945, 0, 0, 0,
	0, 0, 0, 1803, 680, 1950, 1804, 0, 867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 1815,
	1816, 1817, 1818, 1819, 0, 1589, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 43, 46, 49, 48,
	51, 0, 63, 0, 0, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 0, 0, 52, 77, 76,
	0, 172, 61, 62, 50, 1325, 0, 0, 0, 0,
	0, 0, 1298, 0, 0, 0, 0, 0, 0, 2039,
	0, 0, 0, 0, 0, 114, 0, 136, 713, 0,
	0, 0, 1149, 0, 0, 2064, 1325, 1149, 156, 0,
	0, 0, 0, 0, 54, 55, 0, 56, 57, 58,
	59, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 0, 0, 0, 146,
	1035, 1035, 1035, 0, 135, 0, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 154, 156, 0,
	0, 0, 0, 1302, 1303, 145, 144, 171, 0, 0,
	0, 0, 0, 0, 0, 863, 0, 0, 1149, 0,
	0, 0, 0, 1150, 1593, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1150, 1150,
	0, 0, 0, 0, 486, 153, 0, 154, 0, 0,
	0, 0, 0, 123, 124, 145, 144, 171, 75, 0,
	1371, 0, 0, 0, 0, 2019, 0, 0, 2022, 2023,
	0, 0, 80, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1416, 0,
	140, 1304, 147, 0, 1301, 0, 141, 142, 0, 0,
	0, 157, 0, 0, 486, 0, 0, 0, 0, 0,
	162, 486, 0, 0, 0, 2063, 0, 0, 0, 0,
	1439, 1440, 486, 486, 486, 486, 486, 486, 486, 0,
	0, 0, 2081, 2082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1618, 0, 0, 0,
	140, 121, 147, 128, 120, 0, 141, 142, 0, 0,
	486, 157, 0, 0, 976, 0, 981, 0, 0, 983,
	162, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 130, 125, 126, 127,
	131, 0, 0, 0, 0, 122, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 0, 1593, 1593, 0, 0,
	0, 0, 0, 698, 0, 0, 0, 149, 0, 0,
	698, 698, 0, 0, 0, 0, 1150, 0, 0, 0,
	0, 0, 0, 2308, 2309, 2310, 2311, 0, 698, 1416,
	698, 698, 698, 698, 698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1371, 2190, 2191, 2193, 2195, 0,
	0, 0, 2325, 2325, 2325, 2201, 698, 149, 0, 0,
	0, 2204, 0, 0, 0, 0, 2208, 0, 0, 0,
	680, 0, 143, 1149, 0, 0, 0, 0, 2351, 0,
	2353, 0, 0, 486, 0, 137, 0, 0, 138, 1416,
	0, 486, 0, 486, 0, 486, 1623, 0, 2229, 2230,
	0, 0, 2234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 1593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 138, 0,
	0, 0, 0, 713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2295, 0, 0, 0, 0, 150,
	155, 152, 158, 159, 160, 161, 163, 164, 165, 166,
	0, 0, 0, 1593, 0, 167, 168, 169, 170, 0,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 2324, 0, 0, 0, 2438, 0, 0, 150,
	155, 152, 158, 159, 160, 161, 163, 164, 165, 166,
	0, 1149, 0, 2443, 0, 167, 168, 169, 170, 0,
	0, 0, 0, 0, 0, 0, 1813, 713, 713, 0,
	0, 0, 486, 0, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 1828, 486, 486, 0, 0, 486, 0,
	1763, 0, 0, 0, 0, 0, 486, 0, 670, 0,
	0, 0, 0, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 1226, 1593, 0, 0, 1858, 1859, 0, 0,
	0, 0, 0, 0, 0, 1878, 0, 2382, 0, 0,
	0, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2392, 2393, 2394, 0, 2395, 2396, 0, 0,
	2400, 0, 0, 0, 2401, 2402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2420, 0, 0,
	1356, 0, 0, 0, 0, 0, 698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2434, 0, 0, 1397,
	0, 0, 0, 0, 0, 0, 1951, 0, 0, 0,
	0, 0, 698, 698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 0, 486, 0, 0, 0,
	1426, 0, 0, 0, 1371, 2451, 0, 1430, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 486, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1465, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1618, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 2061, 0, 73, 1929, 0, 1618, 1618,
	1618, 1618, 1618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1878, 0, 0, 1618, 0,
	0, 1618, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 486, 486,
	486, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 486, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1604,
	486, 0, 0, 0, 0, 0, 0, 1608, 0, 1611,
	0, 2151, 1465, 0, 698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 698,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1150, 0, 2205, 2206, 2207, 1150, 486, 486, 486,
	486, 486, 0, 0, 0, 0, 0, 0, 0, 2080,
	0, 0, 0, 0, 486, 1371, 0, 486, 0, 0,
	486, 2089, 1416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1618, 0, 0, 0, 0, 0, 0, 0,
	0, 486, 0, 0, 0, 2253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1465, 0,
	0, 2293, 0, 486, 0, 1746, 486, 0, 0, 0,
	1756, 1757, 0, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 486, 1770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 81, 73, 0, 2061,
	0, 0, 605, 612, 613, 614, 615, 616, 606, 608,
	0, 0, 0, 607, 0, 0, 610, 617, 618, 0,
	0, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2376, 2155,
	2156, 0, 486, 0, 0, 486, 486, 486, 0, 0,
	0, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 0, 0, 0, 0, 2061, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1131,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1371, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 1923, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1969, 1970, 1971, 1972, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1465, 1979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 596,
	0, 0, 0, 597, 598, 81, 0, 0, 599, 0,
	0, 605, 612, 613, 614, 615, 616, 606, 608, 0,
	0, 0, 607, 0, 0, 610, 617, 618, 0, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1150, 0, 0, 0, 0, 0, 0, 0, 2155, 2156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2128, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2170,
	0, 0, 2173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2278, 0,
	0, 2279, 2280, 2281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 841, 827, 409, 0,
	775, 844, 745, 763, 854, 766, 769, 809, 724, 788,
	332, 760, 0, 749, 720, 755, 721, 747, 777, 236,
	744, 829, 792, 843, 288, 233, 726, 750, 346, 765,
	187, 811, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 850, 292, 798, 0,
	394, 317, 0, 0, 0, 779, 833, 786, 823, 774,
	810, 734, 797, 845, 761, 806, 846, 278, 219, 186,
	329, 395, 251, 0, 0, 0, 0, 178, 179, 180,
	0, 2457, 0, 2458, 0, 0, 0, 0, 0, 0,
	210, 0, 217, 757, 803, 840, 758, 805, 231, 276,
	238, 230, 413, 851, 832, 0, 0, 202, 842, 781,
	0, 808, 0, 857, 719, 800, 0, 722, 725, 853,
	836, 753, 241, 0, 0, 0, 0, 0, 0, 0,
	778, 787, 820, 772, 0, 0, 0, 0, 0, 0,
	0, 751, 0, 796, 0, 0, 0, 730, 723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	776, 0, 0, 0, 733, 0, 752, 821, 0, 717,
	259, 727, 318, 0, 825, 835, 773, 445, 839, 771,
	770, 815, 731, 831, 764, 287, 729, 284, 182, 198,
	2433, 762, 328, 368, 374, 830, 748, 756, 222, 754,
	372, 342, 430, 206, 249, 365, 347, 370, 795, 813,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	1037, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	743, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 826, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	818, 856, 341, 373, 212, 432, 393, 738, 742, 736,
	737, 790, 791, 739, 847, 848, 849, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 822, 732, 0, 740,
	741, 0, 828, 837, 838, 481, 794, 181, 195, 290,
	852, 362, 252, 459, 439, 435, 718, 735, 228, 746,
	0, 0, 759, 767, 768, 780, 782, 783, 784, 785,
	314, 801, 802, 804, 812, 814, 817, 819, 824, 834,
	855, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 793, 799, 301, 246, 264, 275, 807, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 789, 816,
	297, 410, 411, 271, 841, 827, 409, 0, 775, 844,
	745, 763, 854, 766, 769, 809, 724, 788, 332, 760,
	0, 749, 720, 755, 721, 747, 777, 236, 744, 829,
	792, 843, 288, 233, 726, 750, 346, 765, 187, 811,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 850, 292, 798, 0, 394, 317,
	0, 0, 0, 779, 833, 786, 823, 774, 810, 734,
	797, 845, 761, 806, 846, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 757, 803, 840, 758, 805, 231, 276, 238, 230,
	413, 851, 832, 0, 0, 202, 842, 781, 0, 808,
	0, 857, 719, 800, 0, 722, 725, 853, 836, 753,
	241, 0, 0, 0, 0, 0, 0, 0, 778, 787,
	820, 772, 0, 0, 0, 0, 0, 2090, 0, 751,
	0, 796, 0, 0, 0, 730, 723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 776, 0,
	0, 0, 733, 0, 752, 821, 0, 717, 259, 727,
	318, 0, 825, 835, 773, 445, 839, 771, 770, 815,
	731, 831, 764, 287, 729, 284, 182, 198, 0, 762,
	328, 368, 374, 830, 748, 756, 222, 754, 372, 342,
	430, 206, 249, 365, 347, 370, 795, 813, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 1037, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 743, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 826, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 818, 856,
	341, 373, 212, 432, 393, 738, 742, 736, 737, 790,
	791, 739, 847, 848, 849, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 822, 732, 0, 740, 741, 0,
	828, 837, 838, 481, 794, 181, 195, 290, 852, 362,
	252, 459, 439, 435, 718, 735, 228, 746, 0, 0,
	759, 767, 768, 780, 782, 783, 784, 785, 314, 801,
	802, 804, 812, 814, 817, 819, 824, 834, 855, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	793, 799, 301, 246, 264, 275, 807, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 789, 816, 297, 410,
	411, 271, 841, 827, 409, 0, 775, 844, 745, 763,
	854, 766, 769, 809, 724, 788, 332, 760, 0, 749,
	720, 755, 721, 747, 777, 236, 744, 829, 792, 843,
	288, 233, 726, 750, 346, 765, 187, 811, 385, 221,
	298, 295, 416, 247, 239, 235, 220, 272, 304, 344,
	403, 338, 850, 292, 798, 0, 394, 317, 0, 0,
	0, 779, 833, 786, 823, 774, 810, 734, 797, 845,
	761, 806, 846, 278, 219, 186, 329, 395, 251, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 757,
	803, 840, 758, 805, 231, 276, 238, 230, 413, 851,
	832, 0, 0, 202, 842, 781, 0, 808, 0, 857,
	719, 800, 0, 722, 725, 853, 836, 753, 241, 0,
	0, 0, 0, 0, 0, 0, 778, 787, 820, 772,
	0, 0, 0, 0, 0, 2050, 0, 751, 0, 796,
	0, 0, 0, 730, 723, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 776, 0, 0, 0,
	733, 0, 752, 821, 0, 717, 259, 727, 318, 0,
	825, 835, 773, 445, 839, 771, 770, 815, 731, 831,
	764, 287, 729, 284, 182, 198, 0, 762, 328, 368,
	374, 830, 748, 756, 222, 754, 372, 342, 430, 206,
	249, 365, 347, 370, 795, 813, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 1037, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 743, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 826,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 323, 269, 392, 285, 294, 818, 856, 341, 373,
	212, 432, 393, 738, 742, 736, 737, 790, 791, 739,
	847, 848, 849, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 822, 732, 0, 740, 741, 0, 828, 837,
	838, 481, 794, 181, 195, 290, 852, 362, 252, 459,
	439, 435, 718, 735, 228, 746, 0, 0, 759, 767,
	768, 780, 782, 783, 784, 785, 314, 801, 802, 804,
	812, 814, 817, 819, 824, 834, 855, 183, 184, 196,
	205, 215, 227, 242, 250, 260, 265, 268, 273, 274,
	277, 282, 300, 305, 306, 307, 308, 325, 326, 327,
	330, 333, 334, 337, 339, 340, 343, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	381, 382, 386, 387, 388, 389, 397, 401, 419, 420,
	431, 443, 448, 261, 427, 449, 0, 299, 793, 799,
	301, 246, 264, 275, 807, 438, 398, 200, 369, 253,
	189, 218, 203, 225, 240, 243, 279, 309, 316, 345,
	349, 258, 237, 216, 366, 213, 384, 404, 405, 406,
	408, 313, 232, 348, 789, 816, 297, 410, 411, 271,
	841, 827, 409, 0, 775, 844, 745, 763, 854, 766,
	769, 809, 724, 788, 332, 760, 0, 749, 720, 755,
	721, 747, 777, 236, 744, 829, 792, 843, 288, 233,
	726, 750, 346, 765, 187, 811, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	850, 292, 798, 0, 394, 317, 0, 0, 0, 779,
	833, 786, 823, 774, 810, 734, 797, 845, 761, 806,
	846, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 757, 803, 840,
	758, 805, 231, 276, 238, 230, 413, 851, 832, 0,
	0, 202, 842, 781, 0, 808, 0, 857, 719, 800,
	0, 722, 725, 853, 836, 753, 241, 0, 0, 0,
	0, 0, 0, 0, 778, 787, 820, 772, 0, 0,
	0, 0, 0, 1606, 0, 751, 0, 796, 0, 0,
	0, 730, 723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 776, 0, 0, 0, 733, 0,
	752, 821, 0, 717, 259, 727, 318, 0, 825, 835,
	773, 445, 839, 771, 770, 815, 731, 831, 764, 287,
	729, 284, 182, 198, 0, 762, 328, 368, 374, 830,
	748, 756, 222, 754, 372, 342, 430, 206, 249, 365,
	347, 370, 795, 813, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 1037, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 743, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 826, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 818, 856, 341, 373, 212, 432,
	393, 738, 742, 736, 737, 790, 791, 739, 847, 848,
	849, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	822, 732, 0, 740, 741, 0, 828, 837, 838, 481,
	794, 181, 195, 290, 852, 362, 252, 459, 439, 435,
	718, 735, 228, 746, 0, 0, 759, 767, 768, 780,
	782, 783, 784, 785, 314, 801, 802, 804, 812, 814,
	817, 819, 824, 834, 855, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 793, 799, 301, 246,
	264, 275, 807, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 789, 816, 297, 410, 411, 271, 841, 827,
	409, 0, 775, 844, 745, 763, 854, 766, 769, 809,
	724, 788, 332, 760, 0, 749, 720, 755, 721, 747,
	777, 236, 744, 829, 792, 843, 288, 233, 726, 750,
	346, 765, 187, 811, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 850, 292,
	798, 0, 394, 317, 0, 0, 0, 779, 833, 786,
	823, 774, 810, 734, 797, 845, 761, 806, 846, 278,
	219, 186, 329, 395, 251, 0, 81, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 757, 803, 840, 758, 805,
	231, 276, 238, 230, 413, 851, 832, 0, 0, 202,
	842, 781, 0, 808, 0, 857, 719, 800, 0, 722,
	725, 853, 836, 753, 241, 0, 0, 0, 0, 0,
	0, 0, 778, 787, 820, 772, 0, 0, 0, 0,
	0, 0, 0, 751, 0, 796, 0, 0, 0, 730,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 776, 0, 0, 0, 733, 0, 752, 821,
	0, 717, 259, 727, 318, 0, 825, 835, 773, 445,
	839, 771, 770, 815, 731, 831, 764, 287, 729, 284,
	182, 198, 0, 762, 328, 368, 374, 830, 748, 756,
	222, 754, 372, 342, 430, 206, 249, 365, 347, 370,
	795, 813, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 1037, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 743, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 826, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 818, 856, 341, 373, 212, 432, 393, 738,
	742, 736, 737, 790, 791, 739, 847, 848, 849, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 822, 732,
	0, 740, 741, 0, 828, 837, 838, 481, 794, 181,
	195, 290, 852, 362, 252, 459, 439, 435, 718, 735,
	228, 746, 0, 0, 759, 767, 768, 780, 782, 783,
	784, 785, 314, 801, 802, 804, 812, 814, 817, 819,
	824, 834, 855, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 325, 326, 327, 330, 333, 334, 337,
	339, 340, 343, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 381, 382, 386, 387,
	388, 389, 397, 401, 419, 420, 431, 443, 448, 261,
	427, 449, 0, 299, 793, 799, 301, 246, 264, 275,
	807, 438, 398, 200, 369, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 316, 345, 349, 258, 237, 216,
	366, 213, 384, 404, 405, 406, 408, 313, 232, 348,
	789, 816, 297, 410, 411, 271, 841, 827, 409, 0,
	775, 844, 745, 763, 854, 766, 769, 809, 724, 788,
	332, 760, 0, 749, 720, 755, 721, 747, 777, 236,
	744, 829, 792, 843, 288, 233, 726, 750, 346, 765,
	187, 811, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 850, 292, 798, 0,
	394, 317, 0, 0, 0, 779, 833, 786, 823, 774,
	810, 734, 797, 845, 761, 806, 846, 278, 219, 186,
	329, 395, 251, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 217, 757, 803, 840, 758, 805, 231, 276,
	238, 230, 413, 851, 832, 0, 0, 202, 842, 781,
	0, 808, 0, 857, 719, 800, 0, 722, 725, 853,
	836, 753, 241, 0, 0, 0, 0, 0, 0, 0,
	778, 787, 820, 772, 0, 0, 0, 0, 0, 0,
	0, 751, 0, 796, 0, 0, 0, 730, 723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	776, 0, 0, 0, 733, 0, 752, 821, 0, 717,
	259, 727, 318, 0, 825, 835, 773, 445, 839, 771,
	770, 815, 731, 831, 764, 287, 729, 284, 182, 198,
	0, 762, 328, 368, 374, 830, 748, 756, 222, 754,
	372, 342, 430, 206, 249, 365, 347, 370, 795, 813,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	1037, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	743, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 826, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	818, 856, 341, 373, 212, 432, 393, 738, 742, 736,
	737, 790, 791, 739, 847, 848, 849, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 822, 732, 0, 740,
	741, 0, 828, 837, 838, 481, 794, 181, 195, 290,
	852, 362, 252, 459, 439, 435, 718, 735, 228, 746,
	0, 0, 759, 767, 768, 780, 782, 783, 784, 785,
	314, 801, 802, 804, 812, 814, 817, 819, 824, 834,
	855, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 793, 799, 301, 246, 264, 275, 807, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 789, 816,
	297, 410, 411, 271, 841, 827, 409, 0, 775, 844,
	745, 763, 854, 766, 769, 809, 724, 788, 332, 760,
	0, 749, 720, 755, 721, 747, 777, 236, 744, 829,
	792, 843, 288, 233, 726, 750, 346, 765, 187, 811,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 850, 292, 798, 0, 394, 317,
	0, 0, 0, 779, 833, 786, 823, 774, 810, 734,
	797, 845, 761, 806, 846, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 757, 803, 840, 758, 805, 231, 276, 238, 230,
	413, 851, 832, 0, 0, 858, 842, 781, 0, 808,
	0, 857, 719, 800, 0, 722, 725, 853, 836, 753,
	241, 0, 0, 0, 0, 0, 0, 0, 778, 787,
	820, 772, 0, 0, 0, 0, 0, 0, 0, 751,
	0, 796, 0, 0, 0, 730, 723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 776, 0,
	0, 0, 733, 0, 752, 821, 0, 717, 259, 727,
	318, 0, 825, 835, 773, 445, 839, 771, 770, 815,
	731, 831, 764, 287, 729, 284, 182, 198, 0, 762,
	328, 368, 374, 830, 748, 756, 222, 754, 372, 342,
	430, 206, 249, 365, 347, 370, 795, 813, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 728, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 743, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 826, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 716, 710, 709, 285, 294, 818, 856,
	341, 373, 212, 432, 393, 738, 742, 736, 737, 790,
	791, 739, 847, 848, 849, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 822, 732, 0, 740, 741, 0,
	828, 837, 838, 481, 794, 181, 195, 290, 852, 362,
	252, 459, 439, 435, 718, 735, 228, 746, 0, 0,
	759, 767, 768, 780, 782, 783, 784, 785, 314, 801,
	802, 804, 812, 814, 817, 819, 824, 834, 855, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	793, 799, 301, 246, 264, 275, 807, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 789, 816, 297, 410,
	411, 271, 841, 827, 409, 0, 775, 844, 745, 763,
	854, 766, 769, 809, 724, 788, 332, 760, 0, 749,
	720, 755, 721, 747, 777, 236, 744, 829, 792, 843,
	288, 233, 726, 750, 346, 765, 187, 811, 385, 221,
	298, 295, 416, 247, 239, 235, 220, 272, 304, 344,
	403, 338, 850, 292, 798, 0, 394, 317, 0, 0,
	0, 779, 833, 786, 823, 774, 810, 734, 797, 845,
	761, 806, 846, 278, 219, 186, 329, 395, 251, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 757,
	803, 840, 758, 805, 231, 276, 238, 230, 413, 851,
	832, 0, 0, 858, 842, 781, 0, 808, 0, 857,
	719, 800, 0, 722, 725, 853, 836, 753, 241, 0,
	0, 0, 0, 0, 0, 0, 778, 787, 820, 772,
	0, 0, 0, 0, 0, 0, 0, 751, 0, 796,
	0, 0, 0, 730, 723, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 776, 0, 0, 0,
	733, 0, 752, 821, 0, 717, 259, 727, 318, 0,
	825, 835, 773, 445, 839, 771, 770, 815, 731, 831,
	764, 287, 729, 284, 182, 198, 0, 762, 328, 368,
	374, 830, 748, 756, 222, 754, 372, 342, 430, 206,
	249, 365, 347, 370, 795, 813, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	1212, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 728, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 743, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 826,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 716, 710, 709, 285, 294, 818, 856, 341, 373,
	212, 432, 393, 738, 742, 736, 737, 790, 791, 739,
	847, 848, 849, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 822, 732, 0, 740, 741, 0, 828, 837,
	838, 481, 794, 181, 195, 290, 852, 362, 252, 459,
	439, 435, 718, 735, 228, 746, 0, 0, 759, 767,
	768, 780, 782, 783, 784, 785, 314, 801, 802, 804,
	812, 814, 817, 819, 824, 834, 855, 183, 184, 196,
	205, 215, 227, 242, 250, 260, 265, 268, 273, 274,
	277, 282, 300, 305, 306, 307, 308, 325, 326, 327,
	330, 333, 334, 337, 339, 340, 343, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	381, 382, 386, 387, 388, 389, 397, 401, 419, 420,
	431, 443, 448, 261, 427, 449, 0, 299, 793, 799,
	301, 246, 264, 275, 807, 438, 398, 200, 369, 253,
	189, 218, 203, 225, 240, 243, 279, 309, 316, 345,
	349, 258, 237, 216, 366, 213, 384, 404, 405, 406,
	408, 313, 232, 348, 789, 816, 297, 410, 411, 271,
	841, 827, 409, 0, 775, 844, 745, 763, 854, 766,
	769, 809, 724, 788, 332, 760, 0, 749, 720, 755,
	721, 747, 777, 236, 744, 829, 792, 843, 288, 233,
	726, 750, 346, 765, 187, 811, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	850, 292, 798, 0, 394, 317, 0, 0, 0, 779,
	833, 786, 823, 774, 810, 734, 797, 845, 761, 806,
	846, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 757, 803, 840,
	758, 805, 231, 276, 238, 230, 413, 851, 832, 0,
	0, 858, 842, 781, 0, 808, 0, 857, 719, 800,
	0, 722, 725, 853, 836, 753, 241, 0, 0, 0,
	0, 0, 0, 0, 778, 787, 820, 772, 0, 0,
	0, 0, 0, 0, 0, 751, 0, 796, 0, 0,
	0, 730, 723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 776, 0, 0, 0, 733, 0,
	752, 821, 0, 717, 259, 727, 318, 0, 825, 835,
	773, 445, 839, 771, 770, 815, 731, 831, 764, 287,
	729, 284, 182, 198, 0, 762, 328, 368, 374, 830,
	748, 756, 222, 754, 372, 342, 430, 206, 249, 365,
	347, 370, 795, 813, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 707, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 728, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 743, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 826, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 716,
	710, 709, 285, 294, 818, 856, 341, 373, 212, 432,
	393, 738, 742, 736, 737, 790, 791, 739, 847, 848,
	849, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	822, 732, 0, 740, 741, 0, 828, 837, 838, 481,
	794, 181, 195, 290, 852, 362, 252, 459, 439, 435,
	718, 735, 228, 746, 0, 0, 759, 767, 768, 780,
	782, 783, 784, 785, 314, 801, 802, 804, 812, 814,
	817, 819, 824, 834, 855, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 793, 799, 301, 246,
	264, 275, 807, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 789, 816, 297, 410, 411, 271, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 1556, 0, 562, 0, 0, 0, 236,
	567, 0, 0, 0, 288, 233, 0, 1557, 346, 0,
	187, 0, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 574, 292, 0, 0,
	394, 317, 0, 0, 0, 0, 0, 569, 570, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 219, 186,
	329, 395, 251, 0, 81, 0, 0, 178, 179, 180,
	605, 612, 613, 614, 615, 616, 606, 608, 0, 0,
	210, 607, 217, 583, 610, 617, 618, 0, 231, 276,
	238, 230, 413, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 545, 559, 0, 573, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 556, 557, 696,
	0, 0, 0, 590, 0, 558, 0, 0, 566, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 318, 0, 589, 0, 0, 445, 0, 0,
	587, 0, 0, 0, 0, 287, 0, 284, 182, 198,
	0, 0, 328, 368, 374, 0, 0, 0, 222, 0,
	372, 342, 430, 206, 249, 365, 347, 370, 0, 0,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	0, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	0, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 0, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	0, 0, 341, 373, 212, 432, 393, 596, 588, 578,
	580, 597, 598, 575, 576, 579, 599, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 591, 565, 564, 0,
	571, 572, 0, 581, 582, 584, 563, 181, 195, 290,
	0, 362, 252, 459, 439, 435, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 0, 0, 301, 246, 264, 275, 0, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 409, 0,
	297, 410, 411, 271, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 562, 0, 0, 0, 236,
	567, 0, 0, 0, 288, 233, 0, 0, 346, 0,
	187, 0, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 574, 292, 0, 0,
	394, 317, 0, 0, 0, 0, 0, 569, 570, 0,
	0, 0, 0, 0, 0, 1630, 0, 278, 219, 186,
	329, 395, 251, 0, 81, 0, 0, 178, 179, 180,
	605, 612, 613, 614, 615, 616, 606, 608, 0, 0,
	210, 607, 217, 583, 610, 617, 618, 1631, 231, 276,
	238, 230, 413, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 545, 559, 0, 573, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 556, 557, 0,
	0, 0, 0, 590, 0, 558, 0, 0, 566, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 318, 0, 589, 0, 0, 445, 0, 0,
	587, 0, 0, 0, 0, 287, 0, 284, 182, 198,
	0, 0, 328, 368, 374, 0, 0, 0, 222, 0,
	372, 342, 430, 206, 249, 365, 347, 370, 0, 0,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	0, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	0, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 0, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	0, 0, 341, 373, 212, 432, 393, 596, 588, 578,
	580, 597, 598, 575, 576, 579, 599, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 591, 565, 564, 0,
	571, 572, 0, 581, 582, 584, 563, 181, 195, 290,
	0, 362, 252, 459, 439, 435, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 0, 0, 301, 246, 264, 275, 0, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 72, 409,
	297, 410, 411, 271, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 562, 0, 0, 0,
	236, 567, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 574, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 569, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 81, 0, 0, 178, 179,
	180, 605, 612, 613, 614, 615, 616, 606, 608, 0,
	0, 210, 607, 217, 583, 610, 617, 618, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 545, 559, 0, 573,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 557,
	0, 0, 0, 0, 590, 0, 558, 0, 0, 566,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 589, 0, 0, 445, 0,
	0, 587, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 596, 588,
	578, 580, 597, 598, 575, 576, 579, 599, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 591, 565, 564,
	0, 571, 572, 0, 581, 582, 584, 563, 181, 195,
	290, 80, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 409,
	0, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 562, 0, 0, 0,
	236, 567, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 574, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 569, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 81, 0, 0, 178, 179,
	180, 605, 612, 613, 614, 615, 616, 606, 608, 0,
	0, 210, 607, 217, 583, 610, 617, 618, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 545, 559, 0, 573,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 557,
	0, 0, 0, 0, 590, 0, 558, 0, 0, 566,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 589, 0, 0, 445, 0,
	0, 587, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 2428,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 596, 588,
	578, 580, 597, 598, 575, 576, 579, 599, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 591, 565, 564,
	0, 571, 572, 0, 581, 582, 584, 563, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 409,
	0, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 562, 0, 0, 0,
	236, 567, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 574, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 569, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 81, 0, 1180, 178, 179,
	180, 605, 612, 613, 614, 615, 616, 606, 608, 0,
	0, 210, 607, 217, 583, 610, 617, 618, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 545, 559, 0, 573,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 557,
	0, 0, 0, 0, 590, 0, 558, 0, 0, 566,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 589, 0, 0, 445, 0,
	0, 587, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 596, 588,
	578, 580, 597, 598, 575, 576, 579, 599, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 591, 565, 564,
	0, 571, 572, 0, 581, 582, 584, 563, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 409,
	0, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 562, 0, 0, 0,
	236, 567, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 574, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 569, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 81, 0, 0, 178, 179,
	180, 605, 612, 613, 614, 615, 616, 606, 608, 0,
	0, 210, 607, 217, 583, 610, 617, 618, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 545, 559, 0, 573,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 557,
	696, 0, 0, 0, 590, 0, 558, 0, 0, 566,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 589, 0, 0, 445, 0,
	0, 587, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 596, 588,
	578, 580, 597, 598, 575, 576, 579, 599, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 591, 565, 564,
	0, 571, 572, 0, 581, 582, 584, 563, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 409,
	0, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 562, 0, 0, 0,
	236, 567, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 574, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 569, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 81, 0, 0, 178, 179,
	180, 605, 612, 613, 614, 615, 616, 606, 608, 0,
	0, 210, 607, 217, 583, 610, 617, 618, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 545, 559, 0, 573,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 557,
	0, 0, 0, 0, 590, 0, 558, 0, 0, 566,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 589, 0, 0, 445, 0,
	0, 587, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 596, 588,
	578, 580, 597, 598, 575, 576, 579, 599, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 591, 565, 564,
	0, 571, 572, 0, 581, 582, 584, 563, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 409,
	0, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 562, 0, 0, 0,
	236, 567, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 574, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 569, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 81, 0, 0, 178, 179,
	180, 605, 612, 613, 614, 615, 616, 606, 608, 0,
	0, 210, 607, 217, 583, 610, 617, 618, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 0, 573,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 557,
	0, 0, 0, 0, 590, 0, 558, 0, 0, 566,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 589, 0, 0, 445, 0,
	0, 587, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 596, 588,
	578, 580, 597, 598, 575, 576, 579, 599, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 591, 565, 564,
	0, 571, 572, 0, 581, 582, 584, 563, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 409,
	0, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 0, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 217, 0, 0, 0, 0, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	906, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 0, 0, 905, 445, 0,
	0, 0, 0, 0, 902, 903, 287, 866, 284, 182,
	198, 896, 900, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 481, 0, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 409,
	0, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 1200, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 0, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 0, 0, 0, 178, 179,
	180, 0, 1202, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 217, 0, 0, 0, 0, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 1069, 0, 1070, 1071, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 0, 0, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 481, 0, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 409,
	0, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 0, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 0, 0, 0, 178, 179,
	180, 1145, 1148, 0, 0, 0, 0, 1144, 1147, 0,
	0, 210, 1143, 217, 0, 0, 0, 0, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 0, 0, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 481, 0, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 72,
	409, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 288, 233, 0, 0,
	346, 0, 187, 0, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 0, 292,
	0, 0, 394, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 329, 395, 251, 0, 81, 0, 1180, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 0, 0, 0, 0, 0,
	231, 276, 238, 230, 413, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 318, 0, 0, 0, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	182, 198, 0, 0, 328, 368, 374, 0, 0, 0,
	222, 0, 372, 342, 430, 206, 249, 365, 347, 370,
	0, 0, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 0, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 0, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 0, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 0, 0, 341, 373, 212, 432, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 481, 0, 181,
	195, 290, 80, 362, 252, 459, 439, 435, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 325, 326, 327, 330, 333, 334, 337,
	339, 340, 343, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 381, 382, 386, 387,
	388, 389, 397, 401, 419, 420, 431, 443, 448, 261,
	427, 449, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 438, 398, 200, 369, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 316, 345, 349, 258, 237, 216,
	366, 213, 384, 404, 405, 406, 408, 313, 232, 348,
	72, 409, 297, 410, 411, 271, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 81, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 0,
	181, 195, 290, 80, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 1578, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 1372, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 1576, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 287, 866,
	284, 182, 198, 864, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 1578, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 1372, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 1180,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 2326, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 1833, 0, 0, 0,
	1834, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 1223, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 1222, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 2439, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 2326, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 81, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 1372, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 0, 409, 297, 410, 411, 271, 1619, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 1202, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1099, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 1463, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 1344, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 1342, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 1340, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 1338, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 1336, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 1332, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 1330, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 1328, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 1305, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 1207, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 1046, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 678, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 536, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 484,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 0, 0, 297, 410, 411, 271,
}

var yyPact = [...]int{
	3443, -1000, -386, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1759, 1784, -1000, -1000, -1000, -1000, 1887,
	-1000, 670, 1530, -1000, 1762, 3736, -1000, 32705, 411, -1000,
	32165, 403, 87, 32705, -1000, 115, -1000, 104, 32705, 111,
	31625, -1000, -1000, -295, 13802, 1692, -9, -17, 32705, -1000,
	1821, 1494, -1000, 286, -1000, -1000, -1000, -1000, -1000, -1000,
	31085, -1000, -1000, -1000, 1767, 1756, 1880, 581, 1715, -1000,
	1809, 1494, -1000, 13802, 1829, 1801, 13262, -1000, 13262, 334,
	-1000, -1000, 10015, -1000, -1000, 18124, 32705, 32705, 188, -1000,
	1762, -1000, -1000, 317, -1000, 248, 1488, -1000, 1486, -1000,
	442, 420, 272, 399, 397, 271, 266, 264, 257, 256,
	255, 253, 252, 278, -1000, 627, 627, -161, -189, 360,
	315, 315, 315, 353, 1731, 1719, -1000, 631, -1000, 627,
	627, 309, 627, 627, 627, 627, 224, 221, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 265, 1762, 216, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 32705, 99, 32705, -1000, 501, 32705, 737, 737,
	33, 737, 737, 737, 737, 119, 509, -21, -1000, 118,
	209, 74, 204, 729, 166, 120, -1000, -1000, 200, 729,
	1142, 608, 85, -1000, 737, 7823, 7823, 7823, -1000, 1747,
	-1000, -1000, -1000, -1000, -1000, -1000, 1076, -1000, 352, -1000,
	-1000, -1000, -1000, 32705, 30545, 287, 680, -1000, -1000, -1000,
	40, -1000, -1000, 1286, 699, 13802, 1057, -1000, 1416, 553,
	-1000, -1000, -1000, -1000, -1000, 473, 14342, 14342, 14342, 14342,
	-1000, -1000, 1491, 1491, 1491, 1491, 14342, 1491, 14342, 1491,
	1491, 1491, 1491, 13802, 1491, 1491, 1491, -1000, 1491, 1491,
	1491, 1491, 1491, 1491, 1491, 1491, 500, 1491, 1491, 1491,
	1491, 1491, -1000, -1000, -1000, -1000, 1491, 1491, 1491, 1491,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15962,
	-1000, 11642, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 32705, -1000, 1491, 123, 1809, 1494, -1000, 1821, 1820,
	286, -1000, 1736, 1293, 1340, 1133, 1494, 1462, 32705, -1000,
	1493, -1000, -1000, -1000, 1639, 1075, 1141, -1000, -1000, -1000,
	-1000, 1100, 13802, -1000, -1000, 1856, -1000, 15422, 486, 821,
	1849, 30005, -1000, 334, 334, 1471, 9467, -72, -1000, -1000,
	-1000, 656, 20284, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1747, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1436,
	32705, -1000, -1000, 479, 1295, -1000, 1529, -1000, 1417, -1000,
	1510, 1540, 402, 1295, 387, 383, 379, -1000, -117, -1000,
	-1000, -1000, -1000, -1000, 627, 627, -1000, 270, 1828, 3736,
	3676, -1000, -1000, -1000, 29465, 1528, 1295, -1000, 1527, -1000,
	761, 428, 506, 506, 1295, -1000, -1000, 32705, 1295, 751,
	745, 32705, 32705, -1000, 28925, -1000, 28385, 27845, 1018, 32705,
	27305, 26765, 26225, 25685, 25145, -1000, 1604, -1000, 1524, -1000,
	-1000, -1000, 32705, 32705, 32705, 267, -1000, -1000, 32705, 1295,
	-1000, -1000, 1006, 1000, 627, 627, 988, 1138, 1135, 1134,
	627, 627, 986, 1131, 22444, 197, 982, 976, 966, 1068,
	1124, 159, 941, 905, 942, 32705, 1526, 32705, -1000, 199,
	606, 314, 643, 1762, 1691, 1468, 350, 400, 1295, 320,
	320, -1000, 8371, -1000, -1000, 1119, 13802, -1000, 730, 729,
	729, -1000, -1000, -1000, -1000, -1000, -1000, 737, 32705, 730,
	-1000, -1000, -1000, 729, 737, 32705, 737, 737, 737, 737,
	729, 729, 729, 737, 32705, 32705, 32705, 32705, 32705, 32705,
	32705, 32705, 32705, 7823, 7823, 7823, 608, 737, -300, -1000,
	1115, -1000, 1595, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 109, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -102, 1464, 24605, -1000, -302, -304, -309, -311,
	-1000, -1000, -1000, -313, -314, -1000, -1000, -1000, 13802, 13802,
	13802, 13802, -1000, 1073, 14342, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 899, 790, 14342, 14342, 14342, 14342, 14342, 14342,
	14342, 14342, 14342, 14342, 14342, 14342, 14342, 14342, 14342, 770,
	1112, 1110, 553, 553, 553, 553, -1000, 13262, 13802, 13802,
	553, -1000, 1295, 24065, 13262, 13262, 13802, 1749, 690, 699,
	32705, -1000, 1133, -1000, -1000, -1000, 975, -1000, 32705, 32705,
	2223, 13802, 10561, 8371, 13262, 13262, 13262, 13262, 13262, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	485, 1299, 1270, 1414, -1000, 1463, -1000, -174, 17584, 13802,
	1097, -1000, -1000, -1000, 1809, -1000, 1809, 1299, 1704, 1645,
	13262, -1000, -1000, 1704, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1225, -1000, 32705, 1462, 1795, 32705, 1632, 1096,
	267, -1000, 13802, 13802, 1461, -1000, 979, 32705, -1000, -1000,
	23525, -1000, -1000, 7275, -1000, 32705, 250, 32705, -1000, 21904,
	22985, 8919, -72, -1000, 8919, 1388, -1000, -42, -64, 11101,
	561, -1000, -1000, -1000, 360, 14882, 1279, 561, 54, -1000,
	-1000, -1000, 1510, -1000, 1510, 1510, 1510, 1510, 267, 267,
	267, 267, -1000, -1000, -1000, -1000, -1000, 1523, 1519, -1000,
	1510, 1510, 1510, 1510, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1518, 1518, 1518, 1511, 1511, 312, -1000, 13802, 192,
	32705, 1781, 921, 199, 325, 1563, 1295, 1295, 1295, 325,
	-1000, 1287, 1263, -1000, -371, 1460, -1000, -1000, 1827, -1000,
	-1000, 735, 799, 795, 525, 32705, 136, 247, -1000, 299,
	-1000, 32705, 1295, 736, 506, 1295, -1000, 1295, -1000, -1000,
	-1000, -1000, -1000, 1295, 1459, -1000, 1423, 827, 787, 796,
	783, 1459, -1000, -1000, -139, 1459, -1000, 1459, -1000, 1459,
	-1000, 1459, -1000, 1459, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 636, 32705, 136, 770, -1000, 349, -1000, -1000,
	770, 770, -1000, -1000, -1000, -1000, 1092, 1090, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -361, 32705, -1000, 177, 632,
	230, 268, 226, 32705, 212, 1803, 147, 210, 32705, 32705,
	320, 1594, 32705, 1785, 32705, -1000, -1000, -1000, -1000, 699,
	32705, -1000, -1000, 737, 737, -1000, -1000, 32705, 737, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 737, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 32705, 32705, -1000, -1000, -1000,
	-1000, -1000, 64, -38, 254, -1000, -1000, -1000, -1000, -1000,
	1788, -1000, 699, 704, 706, -1000, -1000, -1000, 948, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 899, 14342, 14342, 14342,
	1365, 375, 1479, 2393, 1380, 1005, 1005, 841, 841, 565,
	565, 565, 565, 565, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1374, -1000, 880, 923, 1133, -1000, 1374, 1374, 989,
	13262, -1000, -1000, 687, -1000, 13802, 1133, -1000, -1000, 1133,
	1455, 1419, 1845, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 839, 1133, 13262, 13262, 1400, 1491,
	484, -1000, 1374, 1133, 1133, 1374, 1374, 8371, 1133, -1000,
	32705, -1000, -290, -1000, -81, 515, 1491, -1000, 22444, 1133,
	1286, -1000, -1000, -1000, -1000, -1000, 19744, 1470, 1704, -1000,
	-1000, 1491, 1411, -1000, -1000, 267, 24, 780, 699, 699,
	13802, -1000, -1000, -1000, -1000, -1000, -1000, 478, 1840, 311,
	1491, -1000, 1407, 1683, -1000, -1000, -1000, 1791, 17044, 32705,
	1466, 1408, -1000, 477, -1000, 1388, -72, -51, -1000, -1000,
	-1000, -1000, 699, -1000, 1245, 251, 2560, -1000, 301, -1000,
	-1000, -1000, -1000, 1701, 11, -1000, -1000, -1000, 267, 267,
	-1000, -1000, -1000, -1000, -1000, -1000, 1089, 1089, -1000, -1000,
	-1000, -1000, -1000, 917, -1000, -1000, -1000, 895, -1000, -1000,
	1223, 1585, 192, -1000, -1000, 627, 1085, 1724, 32705, -1000,
	-1000, 1259, 177, 32705, 701, 1592, -1000, 1563, 1563, 1563,
	32705, -1000, -1000, -1000, -1000, -367, 48, 296, -1000, -1000,
	-1000, 2484, 32705, 1390, -1000, 134, -1000, 1237, 1658, 32705,
	-1000, 1381, 1516, 1295, 1295, -1000, -1000, -1000, 32705, 1491,
	-1000, -1000, -1000, -1000, 376, 1752, 1751, 136, 134, 561,
	1295, -1000, -1000, -1000, -1000, -1000, -358, 1376, 356, 140,
	214, 32705, 32705, 32705, 32705, 32705, 447, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 218, 347, -1000, 32705, 32705,
	448, -1000, -1000, -1000, 729, -1000, -1000, 729, -1000, -1000,
	-1000, -1000, -1000, 1743, 32705, -39, -329, -1000, -326, -1000,
	-1000, -1000, -1000, 1123, 369, 1479, 14342, 14342, 13262, -131,
	432, 432, 770, -1000, -1000, -1000, 13802, 13802, 1395, 682,
	-1000, 13802, 720, -1000, -1000, 13802, 13802, 13802, 1133, 234,
	-1000, 1374, 1374, 13262, 8371, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 378, 371, 359, 32705, -1000,
	-1000, 1808, -1000, 1656, 1653, 1842, 1840, -1000, 21904, 1704,
	-1000, -1000, 32705, -284, -1000, 1686, 1675, -1000, -1000, -1000,
	-1000, 6727, 1809, 13802, 1586, 32705, 1491, -1000, 16503, 32705,
	32705, 21904, 21904, 21904, 21904, 21904, -1000, 1624, 1614, -1000,
	1608, 1606, 1633, 32705, -1000, 1357, 1133, 1820, 17044, 18664,
	1321, 21904, -1000, -1000, 21904, 32705, 6179, -1000, -1000, -44,
	-71, -1000, -1000, -1000, -1000, 360, -1000, -1000, 830, 1790,
	1698, -1000, -1000, -1000, -1000, 1350, -1000, 1347, 1378, 1342,
	107, -1000, 1537, 1742, 627, 627, -1000, 883, -1000, 1295,
	-1000, -1000, 346, -1000, 1779, 32705, 1575, 1574, 1571, -1000,
	-380, 877, 1514, 1536, 13802, 1513, 1825, 1364, 32705, -1000,
	-1000, 32705, -1000, -1000, 345, -1000, 192, 32705, -1000, -1000,
	-1000, 247, 32705, -1000, 5172, 134, -1000, -1000, -1000, -1000,
	-1000, -1000, 32705, 193, -1000, 1512, 1003, -1000, -1000, 1517,
	-1000, -1000, -1000, -1000, 127, 227, -1000, 32705, 418, 1585,
	32705, -1000, -1000, -1000, 737, 737, -1000, -1000, 1737, -1000,
	1295, 14342, 14342, -1000, 553, -1000, 1491, 1133, 1510, 1510,
	-1000, 1510, 1511, -1000, 1510, 91, 1510, 78, 1133, 1133,
	858, 888, -124, -1000, 699, 13802, 1243, 753, 1128, -1000,
	1508, 1503, -1000, -1000, 1133, -1000, 1491, 1491, 1491, 1314,
	32705, -1000, -1000, -1000, -1000, 1840, 1837, 1371, -1000, -1000,
	24, 300, -1000, 1682, 1675, -1000, 1824, 1685, 1823, -1000,
	-1000, -1000, 699, -1000, 1760, 1302, -1000, 625, 1284, -1000,
	-1000, 12722, 1316, 1652, 470, 1314, 1405, 1683, 1562, 1570,
	1587, -1000, -1000, -1000, -1000, 1610, -1000, 1609, -1000, -1000,
	1493, -1000, -1000, 1270, 250, 21904, 1345, 1345, -1000, 458,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 778, 4873, 1878,
	-1000, 1084, -1000, 1192, -1000, 734, 717, -1000, 32705, 1501,
	-1000, 267, 1082, 267, 875, -1000, 860, -1000, -1000, -227,
	-1000, -1000, 1509, 1588, -1000, -1000, 32705, -1000, -1000, 32705,
	32705, 32705, 1499, 1818, -1000, 13802, 1498, 624, 1206, 32705,
	32705, -1000, -1000, 235, 1491, -1000, 1310, 1308, -1000, -184,
	-1000, 13802, -1000, -1000, -1000, 1014, 1014, -1000, 1493, -1000,
	-1000, -1000, 1229, -1000, -1000, -141, 32705, 32705, 32705, 32705,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 553,
	14342, -1000, -1000, 335, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 13802, -1000, 13802, -1000, 1809, 1081, 699, 13802,
	13802, -1000, 857, 844, -1000, 19204, 21364, 21364, 18664, -1000,
	1837, 1833, 1817, 1667, 1673, 1673, 1682, -1000, 1816, 1815,
	-1000, 1079, 1814, 1072, 712, -1000, 32705, 13802, 1491, -1000,
	292, 32705, 1491, 32705, -1000, 1831, -1000, -1000, 13802, 1497,
	-1000, 13802, -1000, -1000, -1000, -1000, -1000, 1840, 1345, -1000,
	-1000, 571, -1000, 13802, -1000, -1000, -1000, 225, -1000, -1000,
	-1000, -1000, -1000, 1495, 13802, -1000, -1000, -1000, 1176, 1164,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1493, -1000,
	-1000, -1000, -1000, 247, -376, 1180, 32705, 836, -1000, 1306,
	1364, 414, -1000, 13802, 281, -1000, 247, -1000, -190, -191,
	1128, -1000, -1000, 1789, -1000, -1000, 8371, -1000, -1000, 1492,
	1559, -1000, 208, -1000, -1000, 1128, 1128, 1133, -1000, 1128,
	1128, 1162, 1150, 1304, -1000, -1000, -1000, 1304, 1304, 515,
	1833, -1000, 13802, 13802, 1665, 938, -1000, -1000, -1000, -1000,
	1033, 1032, -1000, 981, -1000, 1867, -1000, 699, -1000, 1491,
	-1000, 456, 1284, -1000, 1809, 699, 32705, 699, 1831, -1000,
	1128, -1000, 1491, 32705, 1114, -1000, -1000, 1787, 1253, 47,
	-1000, 1210, -1000, -1000, -1000, -1000, 12182, -1000, -1000, -1000,
	-1000, -1000, -1000, 286, 1323, -1000, 622, 32705, 32705, 1133,
	215, -144, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20824,
	-1000, -1000, -1000, -1000, -1000, 699, 1286, -1000, 840, -1000,
	-1000, -1000, -1000, -1000, 32705, 1284, 32705, -1000, 1174, 1809,
	-1000, 1170, -1000, 286, -1000, 1490, 1536, -1000, 1133, -140,
	8371, 5631, 1158, -1000, -1000, 1629, -137, -148, -1000, -1000,
	-1000, -1000, 1120, -1000, -1000, -1000, 1569, 721, -140, 13802,
	1341, -1000, -1000, -43, -1000, -1000, -1000, -1000, -1000, 1517,
	-1000, 1599, -1000, 1568, -1000, 1882, -1000, -1000, -1000, 744,
	940, -1000, -1000, -1000, -1000, 998, 32705, 302, -1000, -1000,
	-141, -142, -1000, 1862, 498, 498, -1000, -1000, -383, 1154,
	179, -1000, -145, -1000, -1000, -1000, 306, 956, -1000, -1000,
	834, -383, -1000, -153, -1000, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2211, 2210, 12, 1, 2204, 37, 87, 155, 11,
	169, 74, 2202, 2201, 2197, 2195, 192, 191, 184, 2193,
	2190, 2187, 2185, 2183, 2182, 2181, 2180, 2179, 2178, 189,
	136, 152, 2175, 2174, 2172, 93, 139, 66, 64, 150,
	2171, 2166, 60, 2165, 2164, 2163, 158, 154, 703, 2162,
	153, 88, 24, 2161, 2157, 2155, 2154, 2153, 2152, 2151,
	2150, 2149, 2148, 2145, 2143, 2142, 2137, 272, 2136, 2134,
	5, 2133, 65, 2129, 2125, 2123, 100, 2122, 2119, 2116,
	2115, 2114, 2113, 122, 2112, 2111, 2108, 2107, 159, 2106,
	2103, 125, 80, 84, 2101, 2099, 82, 156, 2098, 95,
	2097, 2094, 2093, 132, 2092, 270, 2091, 47, 45, 2090,
	46, 62, 40, 35, 2089, 2088, 2087, 36, 71, 2085,
	85, 52, 2084, 76, 110, 2083, 57, 2082, 2081, 96,
	2080, 2079, 2075, 67, 2074, 2073, 3471, 2071, 75, 105,
	21, 33, 2070, 2066, 2065, 2064, 2062, 25, 2060, 2059,
	2058, 121, 13, 2057, 10, 32, 28, 120, 2056, 43,
	63, 2054, 115, 2053, 2052, 34, 17, 20, 2051, 18,
	104, 130, 16, 77, 116, 2050, 2049, 30, 55, 2048,
	2047, 2045, 2039, 2038, 2037, 50, 2036, 27, 2035, 180,
	2034, 19, 29, 42, 41, 164, 49, 14, 2033, 157,
	2032, 31, 140, 101, 134, 2030, 2029, 2028, 146, 224,
	2027, 2026, 56, 143, 124, 127, 2025, 228, 2023, 2022,
	73, 988, 1856, 15, 135, 2021, 2020, 2895, 119, 117,
	39, 2016, 113, 1999, 1998, 1997, 162, 142, 83, 945,
	92, 1996, 1992, 1990, 1989, 1988, 1986, 1984, 1983, 216,
	163, 44, 91, 149, 58, 1982, 1979, 1975, 98, 79,
	1972, 133, 131, 99, 172, 1970, 147, 123, 90, 1969,
	86, 1965, 1958, 1957, 1952, 72, 1951, 1950, 1949, 1947,
	138, 128, 97, 68, 1945, 70, 94, 126, 137, 26,
	1944, 22, 1942, 1936, 145, 6, 1935, 3, 0, 1932,
	7, 144, 226, 141, 1931, 1930, 2, 1929, 4, 1928,
	1925, 114, 1924, 1918, 1917, 9, 23, 8, 1914, 1907,
	1902, 2726, 2046, 102, 1895, 160,
}

//line sql.y:6091
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 319, 320, 320, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 298, 298, 298, 301, 301,
	27, 62, 29, 29, 28, 28, 31, 31, 30, 6,
	6, 6, 7, 7, 7, 7, 7, 7, 7, 7,
	8, 8, 8, 8, 8, 9, 9, 9, 9, 11,
	11, 11, 11, 11, 14, 15, 10, 10, 16, 16,
	74, 74, 17, 18, 18, 18, 18, 323, 323, 131,
	131, 129, 129, 130, 130, 194, 194, 19, 20, 20,
	204, 204, 203, 203, 203, 205, 205, 205, 205, 239,
	239, 21, 21, 21, 21, 21, 89, 89, 300, 300,
	299, 297, 297, 296, 296, 295, 33, 34, 43, 43,
	43, 43, 44, 45, 302, 302, 271, 49, 49, 48,
	48, 48, 48, 50, 50, 47, 47, 46, 46, 273,
	273, 260, 260, 272, 272, 272, 272, 272, 272, 272,
	259, 259, 100, 100, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 314, 314, 176, 176, 176,
	176, 176, 176, 109, 109, 117, 117, 117, 117, 107,
	107, 108, 106, 106, 106, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 116, 116,
	113, 113, 113, 114, 114, 114, 315, 315, 315, 315,
	242, 242, 242, 242, 245, 245, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 244, 244, 244, 244, 244,
	246, 246, 246, 246, 246, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	248, 248, 248, 248, 248, 248, 248, 248, 258, 258,
	249, 249, 253, 253, 254, 254, 254, 255, 255, 255,
	256, 256, 251, 251, 251, 251, 252, 252, 252, 261,
	285, 285, 284, 284, 282, 282, 282, 282, 270, 270,
	279, 279, 279, 279, 279, 269, 269, 265, 265, 265,
	266, 266, 267, 267, 264, 264, 268, 268, 281, 281,
	280, 262, 262, 263, 263, 287, 316, 316, 316, 316,
	317, 317, 288, 307, 308, 306, 306, 306, 306, 306,
	72, 72, 72, 216, 216, 216, 277, 277, 276, 276,
	276, 278, 278, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 211, 211, 211, 305, 305, 305, 305, 305, 305,
	304, 304, 304, 274, 274, 274, 303, 303, 51, 51,
	160, 160, 40, 40, 40, 40, 40, 40, 39, 39,
	39, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 41, 41, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 76, 76, 77, 77, 77,
	77, 78, 78, 78, 290, 290, 52, 52, 3, 3,
	1, 1, 2, 2, 4, 4, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 257, 257,
	257, 289, 289, 291, 293, 293, 293, 293, 292, 85,
	85, 23, 32, 32, 24, 24, 24, 24, 25, 25,
	53, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 309,
	309, 210, 210, 218, 218, 209, 209, 232, 232, 232,
	212, 212, 212, 213, 213, 313, 313, 313, 55, 55,
	55, 57, 57, 58, 59, 59, 234, 234, 235, 235,
	60, 61, 73, 73, 73, 73, 73, 73, 75, 75,
	75, 13, 13, 13, 13, 69, 69, 69, 12, 12,
	56, 56, 63, 310, 310, 311, 312, 312, 312, 312,
	64, 66, 26, 26, 26, 26, 26, 26, 95, 95,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 90, 90, 90, 84, 84, 324, 67, 68,
	68, 88, 88, 88, 81, 81, 81, 87, 87, 87,
	92, 92, 94, 94, 94, 94, 94, 96, 96, 96,
	96, 96, 96, 96, 91, 91, 93, 93, 93, 93,
	225, 225, 225, 224, 224, 120, 120, 122, 121, 121,
	123, 123, 124, 124, 124, 158, 139, 139, 192, 192,
	191, 191, 193, 193, 193, 193, 195, 195, 125, 125,
	125, 125, 126, 126, 127, 127, 128, 128, 233, 233,
	230, 230, 230, 229, 229, 132, 132, 132, 134, 133,
	133, 133, 133, 135, 135, 137, 137, 136, 136, 138,
	140, 140, 140, 140, 140, 141, 141, 105, 105, 105,
	105, 105, 105, 115, 115, 115, 115, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 207, 207, 142, 142, 150, 150,
	150, 150, 143, 143, 143, 143, 143, 143, 143, 151,
	151, 151, 157, 152, 152, 148, 148, 148, 148, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 325,
	325, 250, 250, 250, 149, 149, 149, 149, 149, 86,
	86, 86, 86, 86, 238, 238, 238, 241, 241, 241,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 163, 163, 82, 82, 161, 161, 162,
	164, 164, 159, 159, 159, 145, 145, 145, 165, 165,
	166, 166, 167, 167, 169, 168, 168, 170, 171, 171,
	171, 172, 172, 173, 173, 173, 42, 42, 42, 42,
	42, 37, 37, 37, 37, 38, 38, 38, 97, 97,
	97, 97, 99, 99, 98, 98, 70, 70, 71, 71,
	71, 103, 103, 104, 104, 104, 101, 101, 102, 102,
	189, 189, 174, 174, 174, 181, 181, 181, 177, 177,
	179, 179, 179, 180, 180, 180, 178, 186, 186, 188,
	188, 187, 187, 183, 183, 184, 184, 185, 185, 185,
	182, 182, 144, 144, 144, 144, 144, 190, 190, 190,
	190, 196, 196, 154, 154, 156, 156, 155, 119, 197,
	197, 201, 198, 198, 202, 202, 202, 202, 202, 199,
	199, 200, 200, 226, 226, 226, 206, 206, 217, 217,
	214, 214, 215, 215, 208, 208, 219, 219, 219, 65,
	153, 153, 286, 286, 283, 222, 222, 223, 223, 227,
	227, 231, 231, 228, 228, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 321, 322, 236,
	237, 237, 237,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 11, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	5, 10, 0, 2, 0, 2, 3, 5, 3, 4,
	2, 3, 2, 3, 3, 1, 1, 0, 2, 2,
	3, 3, 2, 1, 1, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 2, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 2, 2, 2, 0, 2, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 3, 0, 1,
	4, 3, 3, 4, 2, 0, 2, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 1, 3,
	3, 3, 1, 3, 1, 7, 5, 6, 6, 7,
	0, 1, 5, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 0, 1, 2, 0, 1, 1, 3,
	2, 1, 2, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	0, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	6, 5, 5, 2, 2, 2, 2, 3, 3, 3,
	4, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 10,
	5, 5, 5, 5, 5, 0, 6, 5, 6, 4,
	5, 0, 8, 9, 0, 3, 0, 1, 0, 3,
	1, 1, 0, 2, 0, 2, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 2, 0, 4, 4, 3, 2, 1,
	3, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	3, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 4, 2, 4, 5, 4, 4, 4, 4, 4,
	3, 3, 3, 5, 2, 3, 3, 3, 3, 1,
	1, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 3, 3, 7, 0, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 5, 4, 5, 5, 0, 2, 3, 3, 3,
	2, 3, 1, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 9, 6, 6, 6, 2,
	2, 3, 3, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 5, 5, 6, 4,
	4, 8, 6, 8, 6, 8, 5, 4, 2, 2,
	1, 2, 2, 2, 8, 8, 6, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 2, 2, 0, 3,
	0, 2, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -319, -5, -9, -14, -15, -16, -17, -18, -19,
	-20, -21, -22, -23, -24, -25, -53, -54, -55, -57,
	-58, -59, -60, -61, -12, -56, -26, -27, -62, -63,
	-64, -65, -66, -7, -6, -11, 7, 8, -74, -28,
	30, -33, -43, 203, -44, -34, 204, -45, 206, 205,
	241, 207, 234, 72, 281, 282, 284, 285, 286, 287,
	-75, 239, 240, 209, 34, 43, 31, 32, 35, 212,
	-8, -29, 6, -321, 9, 405, 236, 235, 26, -10,
	419, 83, -320, 553, -189, -174, 20, 31, 27, -173,
	-169, -88, -174, 18, 16, 5, -67, -324, -67, -67,
	10, 11, -67, -271, -273, 83, 140, 83, -67, -49,
	-48, -47, -46, -50, 29, -40, -41, -294, -39, -36,
	208, 205, 249, 107, 108, 241, 242, 243, 207, 225,
	240, 244, 239, 258, -35, 78, 31, 419, 422, -278,
	204, 210, 211, 406, 110, 109, 73, 206, -275, 331,
	523, -50, 525, 99, 101, 524, 42, 215, 526, 527,
	528, 529, 224, 530, 531, 532, 533, 539, 540, 541,
	542, 111, 5, -67, -231, -227, -298, -221, 86, 87,
	88, 416, 227, 450, 451, 274, 78, 39, 331, 523,
	281, 295, 289, 316, 308, 417, 452, 277, 228, 262,
	520, 306, 116, 525, 280, 453, 242, 336, 337, 338,
	99, 284, 373, 538, 279, 454, 536, 101, 524, 77,
	49, 42, 237, 304, 300, 526, 263, 455, 427, 256,
	110, 107, 545, 34, 298, 48, 28, 535, 109, 47,
	527, 131, 456, 528, 340, 321, 514, 46, 341, 243,
	457, 81, 421, 522, 342, 299, 343, 273, 534, 209,
	458, 506, 344, 345, 515, 459, 322, 326, 460, 365,
	346, 552, 50, 461, 462, 516, 108, 463, 76, 529,
	293, 294, 464, 271, 226, 367, 320, 224, 33, 347,
	418, 275, 56, 250, 368, 44, 324, 549, 43, 510,
	465, 513, 319, 315, 51, 466, 467, 468, 469, 530,
	318, 292, 314, 544, 439, 268, 531, 60, 211, 328,
	327, 329, 257, 364, 311, 470, 471, 472, 231, 79,
	473, 301, 19, 474, 475, 348, 264, 476, 54, 477,
	478, 371, 240, 479, 52, 532, 37, 245, 546, 533,
	480, 481, 482, 483, 484, 350, 485, 349, 323, 325,
	252, 351, 420, 486, 297, 244, 537, 487, 232, 521,
	246, 249, 239, 372, 233, 488, 489, 490, 491, 492,
	278, 493, 494, 285, 539, 41, 495, 496, 497, 498,
	272, 267, 366, 375, 59, 80, 333, 499, 519, 291,
	265, 500, 282, 53, 540, 541, 542, 259, 543, 7,
	550, 551, 353, 111, 269, 270, 45, 312, 251, 501,
	502, 302, 303, 317, 290, 313, 283, 507, 253, 354,
	241, 503, 374, 266, 334, 424, 258, 355, 518, 423,
	310, 307, 260, 504, 356, 216, 254, 255, 505, 508,
	357, 358, 276, 359, 360, 361, 362, 363, 261, 422,
	288, 305, 335, 386, 387, 388, 389, 390, 391, 392,
	393, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	403, 414, 214, -67, 214, -136, -227, 214, -199, 337,
	-218, 339, 352, 347, 357, 345, -210, 348, 350, 252,
	-313, 365, 214, 354, 203, 157, 340, 349, 358, 359,
	276, 360, 363, 261, -309, -298, 528, 543, 116, 309,
	344, 342, 366, 510, 362, 361, -227, 283, -234, 288,
	-222, -298, -221, 286, -136, -73, 506, 207, -236, -236,
	-90, 510, 512, -152, -105, 124, -115, -118, -110, -111,
	-146, -147, -148, -149, -116, -159, 146, 147, 154, 125,
	-157, -119, 24, 415, 407, 406, 157, 29, 199, 66,
	67, 409, 410, 127, 55, 382, 383, -117, 378, 384,
	379, 412, 413, 102, 414, -222, -227, 219, 377, 213,
	152, 405, -112, -108, -6, -155, 376, 380, 381, 385,
	-298, -221, -114, -113, -142, 89, 95, 100, 96, -318,
	103, -321, 90, 91, 92, 93, 94, 104, 105, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	42, 353, 353, -136, -67, -167, -88, -169, -8, -6,
	-321, 6, -67, -6, -7, -11, -29, -31, 446, -30,
	-227, -174, -189, 10, 142, 40, 48, -172, -173, -10,
	-6, -105, 17, 21, 22, -93, 148, -105, -227, -68,
	-93, -208, 218, -67, -67, -198, -239, 283, -202, 366,
	365, -223, -200, -222, -220, -199, 364, 208, 425, 123,
	23, 25, 126, 157, 17, 127, 35, 210, 309, 225,
	156, 221, 406, 203, 70, 426, 378, 379, 376, 382,
	408, 409, 377, 339, 29, 11, 428, 26, 235, 22,
	36, 150, 205, 130, 238, 24, 236, 102, 105, 431,
	20, 73, 230, 12, 223, 38, 14, 432, 433, 15,
	219, 218, 142, 215, 68, 9, 199, 27, 139, 64,
	434, 118, 435, 436, 437, 438, 66, 140, 18, 547,
	380, 381, 31, 511, 415, 247, 152, 71, 57, 512,
	124, 440, 441, 103, 442, 106, 74, 517, 120, 16,
	69, 40, 443, 248, 444, 220, 548, 445, 369, 446,
	141, 206, 405, 67, 447, 213, 352, 6, 411, 30,
	234, 222, 113, 65, 448, 214, 129, 412, 413, 217,
	104, 5, 117, 32, 10, 72, 75, 383, 384, 385,
	55, 112, 419, 128, 13, 449, 370, 122, 116, -272,
	140, -259, -263, -222, 229, -288, 225, -136, -281, -280,
	-222, -89, -217, 215, 223, 222, 117, -302, 120, 269,
	377, 213, -46, -47, -199, 156, -76, 246, 248, 84,
	84, -263, -262, -261, -303, 248, 229, -287, -279, 221,
	230, -269, 222, 223, -264, 215, 118, -303, -264, 220,
	230, 248, 248, 111, 248, 111, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 245, -270, 132, -270, 423,
	423, -275, -303, -303, -303, 217, 33, 33, -219, -264,
	217, 23, -270, -270, -199, 156, -270, -270, -270, -270,
	256, 256, -270, -270, -270, -270, -270, -270, -270, -270,
	-270, -270, -270, -270, -270, -270, -270, 214, -302, -97,
	363, 276, 78, -48, 258, -32, -136, -217, 215, 216,
	-302, -136, 200, -136, -212, 140, 13, -212, -209, 353,
	351, 338, 343, -212, -212, -212, -212, 259, 336, -265,
	215, 33, 226, 353, 259, 336, 259, 260, 259, 260,
	346, 356, 259, -232, 12, 142, 377, 341, 345, 252,
	214, 253, 216, 355, -298, 513, 260, -232, 90, -213,
	140, 353, 255, -212, -237, -321, -223, 309, -237, -237,
	30, 87, 217, -222, -69, -222, 90, -13, -9, -17,
	-16, -18, 132, -95, 353, -83, 157, 528, 514, 515,
	516, 513, 350, 521, 519, 517, 259, 518, 84, 120,
	122, 123, -105, 139, -143, 132, 133, 134, 135, 136,
	137, 138, 142, 124, 126, 140, 141, 121, 143, 144,
	145, 146, 147, 148, 149, 151, 150, 152, 153, 156,
	201, 202, -111, -111, -111, -111, -157, -321, -321, -321,
	-111, -207, -321, -111, -321, -321, -321, -321, -163, -105,
	-321, -325, -321, -325, -325, -250, -321, -250, -321, -321,
	-321, -321, -321, 200, -321, -321, -321, -321, -321, -250,
	-250, -250, -250, 100, 95, 89, -159, 96, 90, -222,
	-227, -6, -7, -152, -236, -310, -311, -139, -136, -321,
	276, -172, -10, -6, -167, -173, -169, -6, -67, -81,
	-94, 61, 62, -96, 22, 36, 65, 63, 21, -322,
	85, -322, -189, -322, 84, -31, -192, 83, 59, 41,
	90, 90, 84, 19, -168, -170, -105, 12, -225, -224,
	23, -222, 90, 200, 98, 12, -137, 27, -136, -208,
	-208, 84, 283, -202, -239, -204, -203, 367, 369, 132,
	-226, -222, 90, 29, 85, 84, -136, -242, -245, -247,
	-246, -248, -243, -244, 306, 307, 157, 310, 312, 313,
	314, 315, 316, 317, 318, 319, 320, 321, 30, 237,
	302, 303, 304, 305, 322, 323, 324, 325, 326, 327,
	328, 329, 289, 308, 417, 290, 291, 292, 293, 294,
	295, 297, 298, 299, 300, 301, -301, -298, 83, 85,
	84, -249, 83, -97, 214, -298, 215, 215, 215, -67,
	405, -270, -270, 245, 17, -39, -36, -294, 16, -35,
	-36, 208, 107, 108, 205, 83, -259, 83, -268, -301,
	-298, 83, 118, 220, 117, -267, -264, -267, -268, -298,
	-159, -298, 118, 118, -195, -222, -195, -195, 21, -195,
	21, -195, 21, 92, -222, -195, 21, -195, 21, -195,
	21, -195, 21, -195, 21, 29, 76, 77, 29, 79,
	80, 81, -159, -159, -259, -199, -136, -298, 92, 92,
	-270, -270, 92, 90, 90, 90, -270, -270, 92, 90,
	-229, -227, 90, -304, 231, 273, 275, 92, 92, 92,
	92, 29, 90, -305, 29, 535, 534, 536, 537, 538,
	92, 29, 92, 29, 92, -222, 83, -136, -103, 263,
	203, 205, 208, 74, 90, 277, 132, 42, 84, 217,
	214, -298, -214, 219, -214, -228, -227, -220, 90, -105,
	-266, 12, 142, -232, -232, -212, -136, -266, -232, -212,
	-136, -212, -212, -212, -212, -232, -232, -232, -212, -227,
	-227, -136, -136, -136, -136, -136, -136, -136, -237, -237,
	-237, -213, -212, 513, 90, 74, -235, 286, 320, 507,
	508, 509, 84, 419, -129, -136, 513, 513, 513, 513,
	513, 513, -105, -105, -105, -105, -150, 103, 124, 104,
	105, -118, -151, -155, -157, 97, 142, 126, 140, 141,
	-110, -111, -110, -110, -110, -110, -110, -110, -110, -110,
	-110, -110, -110, -110, -110, -238, -298, 90, 157, 90,
	90, -91, -93, -105, -105, -298, -222, -91, -91, -105,
	-87, 22, 36, -161, -162, 128, -159, -322, -322, 92,
	-222, -222, -80, -79, 387, 388, 389, 390, 392, 393,
	394, 397, 398, 402, 403, 386, 404, 391, 396, 399,
	400, 401, 395, 305, -105, -92, 22, 36, -91, -223,
	-228, -220, -91, -92, -92, -91, -91, 200, -189, -322,
	84, -312, 369, 370, 511, -230, 248, -229, 23, -153,
	-152, 90, -172, -172, 61, 62, 57, -91, -96, -322,
	-30, 23, -191, -222, 60, 90, -251, -199, -105, -105,
	84, -171, 25, 26, -136, -224, 148, -228, -136, -194,
	248, -136, -121, -123, -124, -125, -139, -158, -321, 12,
	-129, -130, -138, -227, -202, -204, 84, 368, 370, 371,
	74, 106, -105, -252, 156, -277, -276, -275, -259, -261,
	-262, -263, 85, -252, -255, 334, 333, -249, -249, -249,
	-249, -249, -251, -251, -251, -251, 83, 83, -249, -249,
	-249, -249, -253, 83, -253, -253, -254, 83, -254, -288,
	-105, -285, -284, -282, -283, 224, 99, 419, 75, -280,
	-171, 92, -103, -215, 219, -286, -283, -298, -298, -298,
	-215, -298, 90, -298, 90, -77, -52, -1, 547, 548,
	549, 84, 17, -260, -259, -51, 273, -291, -292, 248,
	-287, -281, -268, 118, -267, -268, -268, -298, 84, 27,
	111, 111, 111, 111, 419, 205, 30, -259, -51, -238,
	217, -238, -238, 90, 90, -211, 543, -129, -99, 265,
	132, 254, 254, 214, 214, 267, -136, 278, 280, 279,
	277, 21, 266, 268, 270, 256, -136, -136, -214, 74,
	-131, -136, 24, -227, -136, -212, -212, -136, -212, -212,
	-136, -222, -83, 369, 84, 419, 20, -84, 20, 103,
	104, 105, -151, -110, -111, -110, 123, 238, 84, -322,
	23, 84, 75, -322, -322, -322, 84, 12, -91, -164,
	-162, 130, -105, -322, -322, 84, 84, 12, -241, 23,
	-322, -91, -91, -321, 200, -322, -322, -322, -322, -322,
	-223, -311, 510, 370, -140, 72, 218, 73, -321, -229,
	-322, -145, -222, 92, 96, -174, -120, -122, 12, -96,
	-157, 85, 84, -251, -178, -183, -209, -298, 90, 157,
	-170, 200, -141, 13, -144, 30, 55, -9, -321, -321,
	30, 84, -132, -134, -133, -135, 64, 68, 70, 65,
	66, 67, 71, -233, 23, -121, -7, -6, -321, -136,
	-129, -323, 12, 75, -323, 84, 200, -203, -205, 372,
	369, 375, -298, 90, -76, 84, -275, -263, -175, -100,
	38, -256, 335, -251, -251, -258, 90, -258, 92, 92,
	85, -42, -37, -38, 31, 78, -282, -270, 90, 37,
	-222, 85, -99, -136, 124, 74, -286, -286, -286, -227,
	-2, 546, 552, 118, 83, 338, 16, -191, 84, 85,
	-160, 274, 85, -293, 55, -222, 85, 83, -268, -268,
	-222, -321, 214, 29, 29, -51, -160, -252, -298, 545,
	544, 85, 216, 272, -104, 382, -101, 90, 86, -136,
	-136, -136, -136, -136, 208, 205, 257, 217, -129, -136,
	84, -72, 233, 228, -232, -232, 31, -136, 369, 522,
	520, 123, 238, -118, -111, -93, 416, -240, 157, 306,
	237, 304, 300, 320, 311, 333, 302, 334, -240, -238,
	-105, -105, -167, 131, -105, 129, -105, -105, -105, -322,
	157, 306, -322, -322, -92, -223, 215, 215, 215, -195,
	-206, 20, 12, 55, 55, -120, -141, -121, -96, -222,
	-181, 506, -186, 44, -184, -185, 45, -182, 46, 54,
	148, -172, -105, -196, 74, -197, -201, -159, -154, -156,
	-155, -321, -190, -322, -222, -195, -197, -123, -124, -124,
	-123, -124, 64, 64, 64, 69, 64, 69, 64, -133,
	-227, -322, -322, -7, -230, 75, -121, -121, -138, -227,
	148, 369, 373, 374, -275, -317, 103, 124, 29, 74,
	331, 99, -315, 156, -316, 220, 117, 118, 232, 23,
	39, 85, 84, 85, 84, 85, 84, -216, 456, 124,
	-38, -37, -270, -270, 92, -298, 216, 24, -136, 74,
	74, 74, -78, 550, 92, 83, -3, 78, -105, 83,
	17, -259, -159, 250, 142, -285, -191, -289, -291, -136,
	-107, -321, -106, -108, -112, 146, 147, -160, -136, -98,
	263, 271, 83, -102, 87, -300, 75, 254, 331, 254,
	-136, -72, -42, -136, -212, -212, 31, -298, -118, -111,
	-321, -322, -249, -249, -249, -254, -249, 294, -249, 294,
	-322, -322, 84, -322, 20, -322, -82, 411, -105, 84,
	84, -322, 83, 83, -322, -321, -321, -321, -322, -136,
	-141, -165, 14, -178, 49, 312, -188, -187, 53, 45,
	-185, 17, 47, 17, 28, -196, 84, 132, 84, -322,
	-322, 84, 55, 200, -322, -141, -127, -126, 74, 75,
	-128, 74, -126, 64, 64, -192, -322, -194, -121, -141,
	-141, 200, 103, -321, -109, -117, -107, 10, 90, 90,
	-298, 118, 118, -136, 83, -251, 90, -251, 92, 92,
	456, 29, 79, 80, 81, 29, 76, 77, -136, -136,
	-136, -136, -290, 83, 17, -105, 83, 132, 85, -191,
	-191, 251, -155, -321, 85, -322, 84, -257, 419, 422,
	-105, -113, -113, -192, 85, -297, 419, -299, -222, -222,
	-222, -222, -110, -251, -298, -105, -105, -172, 90, -105,
	-105, 92, 92, -193, -322, -222, 220, -193, -193, -230,
	-165, -166, 15, 17, -179, 51, -177, 50, -177, -187,
	17, 17, 90, 17, 90, 118, -201, -105, -156, 55,
	-9, -222, -154, -222, -167, -105, 83, -105, -141, -141,
	-105, -147, 414, 83, -105, 85, 85, -192, -289, -52,
	85, -191, 92, 85, -155, -85, -321, 247, -316, -291,
	423, 423, -322, 23, -296, -295, -223, 83, 75, -86,
	142, 419, -322, -322, -322, -322, -322, 85, 85, 84,
	-322, -322, -322, -140, -166, -105, -152, -180, 52, 74,
	106, 90, 90, 90, 10, -154, 200, -172, -191, -167,
	-322, -191, 85, 23, 85, 552, 118, 85, 247, -9,
	84, 132, -191, -136, -322, 417, 71, 420, -222, 220,
	74, 106, -197, -222, 85, -172, 85, -176, -9, 83,
	-3, -322, -70, 419, -295, -274, -223, 90, 92, 85,
	60, 418, 421, -307, -308, 74, -317, -314, 103, 124,
	99, -315, 112, 113, -70, -105, 83, -71, 262, 510,
	-300, 60, -308, 74, 11, 10, 103, 90, 85, -191,
	225, -297, 419, -306, 233, 228, 231, 30, -306, -4,
	551, 85, 264, 420, 227, 29, 103, 92, -4, 421,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 707, 707, 707, 0,
	707, 0, 0, 707, -2, -2, 707, 1121, 0, 707,
	0, 0, -2, 639, 641, 0, 643, -2, 0, 0,
	652, 1569, 1569, 702, 0, 0, 0, 0, 0, 707,
	982, 45, 707, 0, 80, 81, 658, 659, 660, 60,
	0, 1567, 1, 3, 66, 70, 0, 0, 0, 53,
	991, 0, 73, 0, 0, 711, 0, 709, 0, 1104,
	707, 707, 0, 111, 112, 0, 0, 0, -2, 115,
	-2, 139, 140, 0, 144, 505, 445, 488, 443, 474,
	-2, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 448, 338, 338, 0, 0, -2,
	436, 436, 436, 0, 0, 0, 471, 1106, 391, 338,
	338, 0, 338, 338, 338, 338, 0, 0, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 1008, 143, 1122, 1119, 1120, 35, 36,
	37, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 0, 1098, 0, 569, 797, 0, 630, 630,
	0, 630, 630, 630, 630, 0, 0, 0, 581, 0,
	0, 0, 0, 627, 0, 0, 600, 602, 0, 627,
	0, 633, 0, 614, 630, 1570, 1570, 1570, 1089, 0,
	624, 622, 636, 637, 619, 620, 638, 642, 0, 647,
	650, 1115, 1116, 0, 665, 44, 1346, 657, 670, 671,
	0, 703, 704, 40, 883, 0, 812, 816, 827, 840,
	841, 842, 843, 844, 846, 847, 0, 0, 0, 0,
	852, 853, 0, 0, 0, 0, 0, 864, 0, 0,
	0, 0, 0, 963, 0, 929, 929, 900, 929, 931,
	931, 0, 0, 0, 1566, 972, 0, 0, 0, 0,
	0, 0, 248, 249, 882, 1078, 931, 931, 931, 931,
	-2, -2, 195, 196, 197, 198, 199, 200, 201, 0,
	191, 0, 253, 254, 250, 251, 252, 866, 867, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
	1569, 0, 680, 0, 0, 991, 0, 983, 982, 58,
	0, 707, -2, 0, 0, 0, 0, 42, 0, 47,
	758, 72, 71, 1030, 0, 0, 0, 54, 992, 62,
	64, 993, 0, 712, 713, 0, 736, 740, 0, 708,
	0, 0, 1105, 1104, 1104, 97, 0, 1511, 1082, -2,
	-2, 0, 0, 1117, 1118, 1091, -2, 1125, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
	1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147,
	1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217,
	1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, -2, 0,
	0, 153, 154, 0, 38, 364, 0, 149, 0, 358,
	310, 1008, 0, 0, 0, 0, 0, 707, 0, 1099,
	134, 135, 141, 142, 338, 338, 485, 0, 0, 143,
	143, 452, 453, 454, 0, 0, -2, 362, 0, 437,
	0, 0, 352, 352, 356, 354, 355, 0, 0, 0,
	0, 0, 0, 465, 0, 466, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 547, 0, 339, 0, 483,
	484, 392, 0, 0, 0, 0, 463, 464, 0, 0,
	1107, 1108, 0, 0, 338, 338, 0, 0, 0, 0,
	338, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 1021,
	0, 0, 0, -2, 0, 561, 0, 0, 0, 1100,
	1100, 568, 0, 570, 571, 0, 0, 572, 0, 627,
	627, 625, 626, 574, 575, 576, 577, 630, 0, 0,
	347, 348, 349, 627, 630, 0, 630, 630, 630, 630,
	627, 627, 627, 630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1570, 1570, 1570, 633, 630, 0, 610,
	0, 611, 612, 615, 616, 1571, 1572, 1136, 617, 618,
	1090, 640, 648, 651, 668, 666, 667, 669, 661, 662,
	663, 664, 0, 682, 683, 688, 0, 0, 0, 0,
	694, 695, 696, 0, 0, 699, 700, 701, 0, 0,
	0, 0, 810, 0, 0, 872, 873, 874, 875, 876,
	877, 878, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 848, 849, 850, 851, 854, 0, 0, 0,
	859, 860, 0, 0, 0, 0, 0, 717, 0, 964,
	0, 898, 0, 899, 901, 902, 0, 903, 0, 0,
	0, 0, 720, 0, 0, 720, 720, 0, 0, 185,
	186, 187, 188, 202, 203, 204, 205, 206, 255, 972,
	0, 882, 0, 0, 41, 672, 673, 0, 780, 1110,
	0, 52, 61, 63, 991, 56, 991, 0, 722, 0,
	0, -2, -2, 723, 729, 730, 731, 732, 733, 49,
	1568, 50, 0, 69, 0, 43, 0, 0, 0, 0,
	322, 1033, 0, 0, 984, 985, 988, 0, 737, 741,
	0, 743, 744, 0, 710, 0, 95, 0, 796, 0,
	0, 0, 1511, 1088, 0, 99, 100, 0, 0, 0,
	326, 1093, 1094, 1095, -2, 345, 0, 326, 317, 261,
	262, 263, 310, 265, 310, 310, 310, 310, 322, 322,
	322, 322, 293, 294, 295, 296, 297, 0, 0, 280,
	310, 310, 310, 310, 300, 301, 302, 303, 304, 305,
	306, 307, 266, 267, 268, 269, 270, 271, 272, 273,
	274, 312, 312, 312, 314, 314, 0, 39, 0, 330,
	0, 988, 0, 1021, 1102, 1112, 0, 0, 0, 1102,
	117, 0, 0, 486, 516, 446, 475, 487, 0, 449,
	450, -2, 0, 0, 436, 0, 438, 0, 346, 0,
	-2, 0, 356, 0, 352, 356, 353, 356, 344, 357,
	467, 468, 469, 0, 527, 766, 0, 0, 0, 0,
	0, 533, 534, 535, 0, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 476, 477, 478, 479, 480,
	481, 482, 0, 0, 438, 0, 472, 0, 393, 394,
	0, 0, 397, 398, 399, 400, 0, 0, 403, 404,
	405, 783, 784, 406, 430, 431, 432, 407, 408, 409,
	410, 411, 412, 413, 424, 425, 426, 427, 428, 429,
	414, 415, 416, 417, 418, 421, 0, 127, 1012, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1100, 0, 0, 0, 0, 798, 1123, 1124, 631, 632,
	0, 350, 351, 630, 630, 578, 601, 0, 630, 582,
	603, 583, 585, 584, 586, 605, 606, 630, 589, 628,
	629, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 607, 608, 609, 634, 0, 0, 649, 653, 654,
	655, 656, 0, 0, 685, 91, 690, 691, 692, 693,
	705, 698, 884, 807, 808, 809, 811, 813, 0, 868,
	870, 815, 817, 879, 880, 881, 0, 0, 0, 0,
	0, 821, 825, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 845, 944, 945, 946, 862,
	863, 0, 734, 0, 0, 0, 861, 0, 0, 0,
	0, 718, 719, 970, 967, 0, 0, 930, 932, 0,
	0, 0, 0, 908, 909, 910, 911, 912, 913, 914,
	915, 916, 917, 918, 919, 920, 921, 922, 923, 924,
	925, 926, 927, 928, 947, 0, 0, 0, 721, 973,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 1077,
	0, 675, 676, 678, 0, 800, 0, 781, 0, 0,
	1111, 681, 55, 57, 727, 728, 0, 745, 724, 51,
	46, 0, 0, 760, 1031, 322, 1053, 0, 994, 995,
	0, 987, 989, 990, 74, 742, 738, 0, 805, 0,
	0, 795, 0, 748, 750, 751, 752, 778, 0, 0,
	0, 0, 93, 797, 1083, 98, 0, 0, 103, 104,
	1084, 1085, 1086, 1087, 0, 505, -2, 388, 155, 157,
	158, 159, 150, -2, 320, 318, 319, 264, 322, 322,
	287, 288, 289, 290, 291, 292, 0, 0, 281, 282,
	283, 284, 275, 0, 276, 277, 278, 0, 279, 363,
	0, 996, 331, 332, 334, 338, 0, 0, 0, 359,
	360, 0, 1012, 0, 0, 0, 1113, 1112, 1112, 1112,
	0, 145, 146, 147, 148, 522, 0, 0, 517, 520,
	521, 143, 0, 0, 151, 440, 439, 0, 554, 0,
	361, 0, 0, 356, 356, 341, 342, 470, 0, 0,
	529, 530, 531, 532, 0, 0, 0, 438, 440, 326,
	0, 395, 396, 401, 402, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 500, 501, 502,
	503, 504, 1009, 1010, 1011, 0, 0, 562, 0, 0,
	380, 89, 1101, 567, 627, 588, 604, 627, 580, 587,
	613, 645, 689, 0, 0, 0, 0, 697, 0, 814,
	869, 871, 818, 0, 822, 826, 0, 0, 0, 0,
	0, 0, 0, 865, 889, 890, 0, 0, 982, 0,
	968, 0, 0, 897, 933, 0, 0, 0, 0, 0,
	885, 0, 0, 720, 0, 934, 935, 936, 937, 938,
	973, 674, 677, 679, 756, 0, 0, 0, 0, 782,
	1109, 0, 975, 0, 0, 745, 805, 746, 0, 725,
	48, 759, 0, 1035, 1034, 1047, 1060, 323, 324, 325,
	986, 0, 991, 0, 1071, 0, 0, 1063, 0, 0,
	0, 0, 0, 0, 0, 0, 785, 0, 0, 788,
	0, 0, 0, 0, 779, 0, 0, 0, 0, -2,
	0, 0, 87, 88, 0, 0, 0, 101, 102, 0,
	0, 108, 327, 328, 136, 143, 390, 156, 370, 0,
	0, 260, 321, 285, 286, 0, 308, 0, 0, 0,
	383, 113, 1000, 999, 338, 338, 333, 0, 336, 0,
	1114, 311, 0, 126, 0, 0, 0, 0, 0, 132,
	511, 0, 0, 518, 0, 0, 0, 444, 0, 455,
	456, 0, 526, 553, 0, 558, 330, 0, 340, 343,
	767, 0, 0, 457, 0, 440, 461, 462, 473, 422,
	423, 420, 0, 0, 1022, 1023, 1028, 1026, 1027, 118,
	493, 495, 494, 498, 0, 0, 491, 0, 380, 996,
	0, 566, 381, 382, 630, 630, 684, 92, 0, 687,
	0, 0, 0, 819, 823, 735, 0, 0, 310, 310,
	953, 310, 314, 956, 310, 958, 310, 961, 0, 0,
	0, 0, 965, 896, 971, 0, 0, 0, 0, 907,
	0, 0, 886, 887, 0, 974, 0, 0, 0, 0,
	0, 1096, 1097, 976, 977, 805, 978, 747, 726, 761,
	1053, 0, 1046, 0, -2, 1055, 0, 0, 0, 1061,
	739, 75, 806, 78, 0, 1071, 1079, 0, 1062, 1073,
	1075, 0, 0, 0, 1067, 0, 805, 749, 774, 776,
	0, 771, 786, 787, 789, 0, 791, 0, 793, 794,
	758, 754, 755, 0, 95, 0, 805, 805, 94, 0,
	799, 105, 106, 107, 389, 160, 165, 0, 0, 0,
	170, 0, 172, 0, 371, 0, 257, 259, 0, 0,
	163, 322, 0, 322, 0, 315, 0, 372, 384, 0,
	997, 998, 0, 0, 335, 337, 0, 1103, 128, 0,
	0, 0, 514, 0, 523, 0, 0, 0, 0, 0,
	0, 152, 441, 0, 0, 329, 0, 0, 551, 548,
	458, 0, 189, 190, 192, 0, 0, 460, 758, 1013,
	1014, 1015, 0, 1025, 1029, 121, 0, 0, 0, 0,
	563, 564, 565, 90, 573, 579, 686, 706, 820, 824,
	0, 856, 950, 322, 954, 955, 957, 959, 960, 962,
	857, 858, 0, 892, 0, 894, 991, 0, 969, 0,
	0, 906, 0, 0, 888, 0, 0, 0, 780, 59,
	978, 980, 0, 1040, 1038, 1038, 1048, 1049, 0, 0,
	1056, 0, 0, 0, 0, 79, 0, 0, 0, 1076,
	0, 0, 0, 0, 96, 982, 768, 775, 0, 0,
	769, 0, 770, 790, 792, 753, -2, 805, 805, 85,
	86, 0, 166, 0, 168, 183, 184, 0, 171, 173,
	174, 256, 258, 0, 0, 298, 309, 299, 0, 0,
	385, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 758, 129,
	130, 131, 506, 0, 516, 0, 0, 0, 509, 0,
	447, 0, 557, 0, 0, 528, 0, 536, 0, 0,
	0, 193, 194, 0, 1024, 492, 0, 119, 120, 0,
	0, 497, 939, 951, 952, 0, 0, 0, 966, 0,
	0, 0, 0, 0, 802, 762, 763, 0, 0, 800,
	980, 77, 0, 0, 1043, 0, 1036, 1039, 1037, 1050,
	0, 0, 1057, 0, 1059, 0, 1080, 1081, 1074, 0,
	1066, 1069, 1065, 1068, 991, 772, 0, 777, 982, 84,
	0, 169, 0, 0, 0, 313, 316, 0, 0, 0,
	507, 0, 519, 510, 555, 556, 0, 559, 365, 552,
	549, 550, 459, 0, 122, 123, 0, 0, 0, 0,
	0, 0, 891, 893, 895, 904, 905, 948, 949, 0,
	801, 803, 804, 757, 76, 981, 979, 1032, 0, 1041,
	1042, 1051, 1052, 1058, 0, 1064, 0, 82, 0, 991,
	167, 0, 177, 0, 515, 0, 518, 508, 0, 1016,
	0, 0, 0, 499, 855, 0, 0, 0, 764, 765,
	1044, 1045, 1072, 1070, 773, 83, 366, 370, 1016, 0,
	0, 560, 489, 1018, 124, 125, 433, 434, 435, 118,
	940, 0, 943, 367, 368, 0, 161, 178, 179, 0,
	0, 182, 175, 176, 114, 0, 0, 0, 1019, 1020,
	121, 941, 369, 0, 0, 0, 180, 181, 524, 0,
	0, 496, 0, 373, 375, 376, 0, 0, 374, 512,
	0, 524, 1017, 0, 377, 378, 379, 525, 513, 942,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 125, 3, 3, 3, 151, 143, 3,
	83, 85, 148, 146, 84, 147, 200, 149, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 553,
	133, 132, 134, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 153, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 121, 3, 154,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 122, 123, 124, 126,
	127, 128, 129, 130, 131, 135, 136, 137, 138, 139,
	140, 141, 142, 144, 145, 150, 152, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:468
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:473
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:474
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:478
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:511
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:517
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:521
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:525
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:530
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:534
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:540
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:546
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:552
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:556
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:561
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:565
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:571
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:575
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:581
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:587
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:591
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:595
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:618
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:624
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:629
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:635
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:642
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:648
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:655
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:659
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:665
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:669
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:673
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:677
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:681
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:687
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:691
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:734
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:740
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:760
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:772
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:784
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:788
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:794
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:800
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:804
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:808
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:812
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:817
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:818
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:822
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:826
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:832
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:836
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:842
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:846
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:851
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:855
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:861
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:867
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:871
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:877
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:881
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:887
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:891
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:895
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:901
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:905
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:909
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:913
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:919
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:923
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:929
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:935
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:942
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:951
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:955
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:962
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:966
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:971
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:975
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:981
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:986
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:991
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:997
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1002
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1008
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1014
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1021
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1028
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1033
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1038
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1043
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1050
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1057
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1068
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1075
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1079
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1085
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1089
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1093
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1103
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1107
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1113
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1117
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1123
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1127
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1134
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1138
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1144
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1148
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1154
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1159
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1164
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1168
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1173
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1177
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1181
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1192
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1201
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1210
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1214
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1223
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1227
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1233
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1239
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1244
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1249
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1254
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1259
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1264
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1269
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1273
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1280
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1284
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1289
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1293
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1298
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1304
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1310
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1315
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1322
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1329
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1333
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1337
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1341
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1352
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1359
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1363
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1369
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1373
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1377
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1381
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1385
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1389
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1393
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1398
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1402
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1406
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1410
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1414
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1421
		{
			yyVAL.str = Armscii8Str
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1425
		{
			yyVAL.str = ASCIIStr
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1429
		{
			yyVAL.str = Big5Str
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1433
		{
			yyVAL.str = UBinaryStr
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1437
		{
			yyVAL.str = Cp1250Str
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1441
		{
			yyVAL.str = Cp1251Str
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.str = Cp1256Str
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1449
		{
			yyVAL.str = Cp1257Str
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1453
		{
			yyVAL.str = Cp850Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1457
		{
			yyVAL.str = Cp852Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1461
		{
			yyVAL.str = Cp866Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1465
		{
			yyVAL.str = Cp932Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1469
		{
			yyVAL.str = Dec8Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.str = EucjpmsStr
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1477
		{
			yyVAL.str = EuckrStr
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1481
		{
			yyVAL.str = Gb18030Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.str = Gb2312Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.str = GbkStr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1493
		{
			yyVAL.str = Geostd8Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1497
		{
			yyVAL.str = GreekStr
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1501
		{
			yyVAL.str = HebrewStr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1505
		{
			yyVAL.str = Hp8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1509
		{
			yyVAL.str = Keybcs2Str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1513
		{
			yyVAL.str = Koi8rStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1517
		{
			yyVAL.str = Koi8uStr
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1521
		{
			yyVAL.str = Latin1Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1525
		{
			yyVAL.str = Latin2Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1529
		{
			yyVAL.str = Latin5Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1533
		{
			yyVAL.str = Latin7Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1537
		{
			yyVAL.str = MacceStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1541
		{
			yyVAL.str = MacromanStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1545
		{
			yyVAL.str = SjisStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1549
		{
			yyVAL.str = Swe7Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1553
		{
			yyVAL.str = Tis620Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1557
		{
			yyVAL.str = Ucs2Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1561
		{
			yyVAL.str = UjisStr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1565
		{
			yyVAL.str = Utf16Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1569
		{
			yyVAL.str = Utf16leStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1573
		{
			yyVAL.str = Utf32Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1577
		{
			yyVAL.str = Utf8Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1581
		{
			yyVAL.str = Utf8mb4Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1591
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1595
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1599
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1606
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1610
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1614
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1620
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1624
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1628
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1632
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1638
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1649
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1698
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1704
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1710
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1716
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1722
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1734
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1738
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1742
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1746
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, IsText: true}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1756
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, IsText: true}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1764
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, IsText: true}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1772
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, IsText: true}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1776
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, IsText: true}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1780
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, IsText: true}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), IsText: true}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1804
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, IsText: true}
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, IsText: true}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1854
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1859
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1863
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1868
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1872
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1880
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1884
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1890
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1898
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1902
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1906
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1911
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1915
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1920
		{
			yyVAL.str = ""
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1924
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1928
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1932
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1937
		{
			yyVAL.str = ""
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1941
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1952
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1957
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1961
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1967
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1971
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1977
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1981
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1986
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1990
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1996
		{
			yyVAL.str = ""
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2000
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2006
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2010
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2014
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2018
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2022
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2027
		{
			yyVAL.str = ""
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2031
		{
			yyVAL.str = yyDollar[2].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2052
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2061
		{
			yyVAL.str = "key"
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.str = yyDollar[1].str
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2080
		{
			yyVAL.str = ""
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2084
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2090
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2094
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2100
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2106
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2110
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2116
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2120
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2126
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2132
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2136
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2140
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2144
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2149
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2153
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2159
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2165
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2171
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2177
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2181
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2185
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2189
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2193
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2198
		{
			yyVAL.str = ""
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2211
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2215
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2219
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2224
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2228
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2234
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2238
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2242
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2248
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2252
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2258
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2262
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2266
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2270
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2274
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2278
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2282
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2286
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2290
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2294
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2298
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2302
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2306
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2310
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2314
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2318
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2322
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2326
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2330
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2334
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2338
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2342
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2346
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2350
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2354
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2358
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2362
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2366
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2371
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2375
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2379
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2398
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2402
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2406
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2411
		{
			yyVAL.str = ""
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2417
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2421
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2430
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2435
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2439
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2443
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2447
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2451
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 447:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2455
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2461
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2465
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2469
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2475
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2479
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2483
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2487
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2491
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2495
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2499
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2503
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2507
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2511
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2515
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2519
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2523
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2527
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2531
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2535
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2539
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2543
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2547
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2551
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2555
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2559
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2563
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2569
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2573
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2579
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2583
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2587
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2591
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2595
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2599
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2603
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2607
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2611
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2617
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2624
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2631
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2638
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2644
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2648
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2655
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2662
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2674
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2684
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2688
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2692
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2705
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2715
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2719
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2730
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2737
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2744
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2751
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2758
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2765
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2769
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2778
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2786
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2795
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2802
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2810
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2814
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2823
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2838
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2843
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2847
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2852
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2856
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2862
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2866
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2871
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2875
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2880
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2884
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2890
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2894
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2898
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2902
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2906
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2910
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2914
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2918
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2922
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2926
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2930
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2934
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2938
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2942
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2946
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2950
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2954
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2958
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2962
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2966
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2970
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2974
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2979
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2983
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2987
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2994
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2998
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3004
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3009
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3013
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3020
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3027
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3036
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3042
		{
			yyVAL.str = ""
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3046
		{
			yyVAL.str = ""
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3052
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3058
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3062
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 564:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3068
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3072
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3081
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3085
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3091
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3095
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3100
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3106
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3110
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3114
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3118
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3122
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3126
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3130
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3134
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3138
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3142
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3146
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3150
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3154
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3158
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3166
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3170
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3178
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3190
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3194
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3198
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3202
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3210
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3214
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3218
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3222
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3226
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3230
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3234
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3238
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3242
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3246
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3250
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3255
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3259
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3268
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3272
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3276
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3299
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3303
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3307
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3313
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3317
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3323
		{
			yyVAL.str = ""
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3327
		{
			yyVAL.str = "extended "
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3333
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3337
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3343
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3347
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3353
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3357
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3361
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3367
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3371
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3375
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3385
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3391
		{
			yyVAL.empty = struct{}{}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3395
		{
			yyVAL.empty = struct{}{}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3399
		{
			yyVAL.empty = struct{}{}
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3405
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3409
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3413
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3419
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3423
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3429
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3435
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3439
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3444
		{
			yyVAL.empty = struct{}{}
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3446
		{
			yyVAL.empty = struct{}{}
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3449
		{
			yyVAL.empty = struct{}{}
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3451
		{
			yyVAL.empty = struct{}{}
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3456
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3462
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3467
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3471
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3475
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3479
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3483
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3487
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3493
		{
			yyVAL.str = yyDollar[1].str
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3497
		{
			yyVAL.str = yyDollar[1].str
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3501
		{
			yyVAL.str = yyDollar[1].str
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3507
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3511
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3515
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3519
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3524
		{
			yyVAL.str = ""
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3528
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3532
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3538
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3542
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3548
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3552
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3558
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3564
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3568
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3574
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3580
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3584
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3588
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3592
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3598
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3604
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3610
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3614
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3618
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3622
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3626
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3630
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3636
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3640
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3646
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3650
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3654
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3658
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3662
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3666
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3670
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3674
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3678
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3682
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3686
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3690
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3695
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3699
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3703
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3708
		{
			yyVAL.str = ""
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3712
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3717
		{
			setAllowComments(yylex, true)
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3721
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3727
		{
			yyVAL.strs = nil
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3731
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3737
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3741
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3745
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3750
		{
			yyVAL.str = ""
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3754
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3758
		{
			yyVAL.str = SQLCacheStr
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3763
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3767
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3771
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3776
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3780
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3785
		{
			yyVAL.strs = nil
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3789
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3793
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3797
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3801
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3807
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3811
		{
			yyVAL.str = SQLCacheStr
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3815
		{
			yyVAL.str = DistinctStr
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3819
		{
			yyVAL.str = DistinctStr
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3823
		{
			yyVAL.str = StraightJoinHint
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3827
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3831
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3837
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3841
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3847
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3851
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3855
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3859
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3864
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3868
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3872
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3884
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3888
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3894
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3900
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3904
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3914
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3918
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3922
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3928
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3934
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3938
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3947
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3953
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3957
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3963
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3967
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3971
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3975
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3981
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3985
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3998
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4002
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4006
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4010
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4016
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4018
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4022
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4024
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4028
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4030
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4033
		{
			yyVAL.empty = struct{}{}
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4035
		{
			yyVAL.empty = struct{}{}
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4038
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4042
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4046
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4053
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4059
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4063
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4067
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4073
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4079
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4083
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4087
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4091
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4097
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4101
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4111
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4115
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4121
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4125
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4131
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4136
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4140
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4144
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4148
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4152
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4157
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4161
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4168
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4172
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4176
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4180
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4184
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4188
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4195
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4199
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4203
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4207
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4213
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4217
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4221
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4225
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4229
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4233
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4237
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4241
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4245
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4249
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4253
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4259
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4263
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4267
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4271
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4275
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4279
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4283
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4287
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4291
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4295
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4299
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4303
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4307
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4313
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4317
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4321
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4325
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4329
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4333
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4337
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4341
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4345
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4349
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4353
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4357
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4361
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4365
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4369
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4373
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4377
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4381
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4385
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4389
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4393
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4401
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4405
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4412
		{
			yyVAL.str = ""
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4416
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4422
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4426
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4433
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4437
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4441
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4445
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4451
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4455
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4459
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4463
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4467
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4471
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4475
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4481
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4485
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4489
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4496
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4502
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4506
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4516
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4520
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4524
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4528
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4538
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4542
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4546
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4550
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4554
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4558
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4562
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4566
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4570
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4574
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4585
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4589
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4595
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4599
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4604
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4608
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4612
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4616
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4620
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4626
		{
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4628
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4632
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4636
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4640
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4644
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4648
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4652
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4656
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4660
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4664
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4668
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4674
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4678
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4682
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4686
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4690
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4694
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4698
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4702
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4706
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4716
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4724
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4734
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4738
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4742
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4746
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4750
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4756
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4760
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4764
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4768
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4772
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4778
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4782
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4786
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4792
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4796
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4800
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4806
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4810
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4814
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4818
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4822
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4826
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4832
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4836
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4840
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4844
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4848
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4852
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4856
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4861
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4865
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4870
		{
			yyVAL.str = string("")
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4874
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4880
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4884
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4890
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4899
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4905
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4909
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4913
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4919
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4928
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4932
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4938
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4942
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4951
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4960
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4966
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4972
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4976
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4982
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4987
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4991
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4995
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5000
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5004
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5010
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5014
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5018
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5023
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5027
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5031
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5035
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5039
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5046
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5050
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5054
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5058
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5064
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5068
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5072
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5077
		{
			yyVAL.str = ""
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5081
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5085
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5089
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5094
		{
			yyVAL.str = ""
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5098
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5104
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5108
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5113
		{
			yyVAL.str = ""
		}
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5117
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5122
		{
			yyVAL.str = "cascaded"
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5126
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5130
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5135
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5139
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5145
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5151
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5157
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5166
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5170
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5175
		{
			yyVAL.str = ""
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5179
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5185
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5189
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5195
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5199
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5203
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5208
		{
			yyVAL.str = ""
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5212
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5216
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5221
		{
			yyVAL.str = ""
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5225
		{
			yyVAL.str = " header"
		}
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5230
		{
			yyVAL.str = ""
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5234
		{
			yyVAL.str = " manifest on"
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5238
		{
			yyVAL.str = " manifest off"
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5243
		{
			yyVAL.str = ""
		}
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5247
		{
			yyVAL.str = " overwrite on"
		}
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5251
		{
			yyVAL.str = " overwrite off"
		}
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5257
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5262
		{
			yyVAL.str = ""
		}
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5266
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5272
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5276
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5282
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5286
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5291
		{
			yyVAL.str = ""
		}
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5295
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5301
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5305
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5311
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5315
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5319
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5324
		{
			yyVAL.str = ""
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5328
		{
			yyVAL.str = " optionally"
		}
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5341
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5345
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5349
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5353
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5357
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5363
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5367
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5371
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5375
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5380
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5384
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5390
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5394
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5400
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5404
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5410
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5425
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5429
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5435
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5441
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5445
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5451
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5455
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5459
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5463
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5467
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5475
		{
			yyVAL.str = "charset"
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5489
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5493
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5502
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5504
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5507
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5509
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5512
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5514
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5517
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5519
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5522
		{
			yyVAL.empty = struct{}{}
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5524
		{
			yyVAL.empty = struct{}{}
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5526
		{
			yyVAL.empty = struct{}{}
		}
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5530
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5535
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5539
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5544
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5546
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5550
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5556
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5560
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5567
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5573
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5577
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5583
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5587
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5594
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6061
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6070
		{
			decNesting(yylex)
		}
	case 1569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6075
		{
			skipToEnd(yylex)
		}
	case 1570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6080
		{
			skipToEnd(yylex)
		}
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6084
		{
			skipToEnd(yylex)
		}
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6088
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
