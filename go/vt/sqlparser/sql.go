// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const QUERIES = 57561
const EXHAUSTIVE = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const VITESS_MIGRATION = 57628
const CANCEL = 57629
const RETRY = 57630
const LAUNCH = 57631
const COMPLETE = 57632
const CLEANUP = 57633
const THROTTLE = 57634
const UNTHROTTLE = 57635
const EXPIRE = 57636
const RATIO = 57637
const BEGIN = 57638
const START = 57639
const TRANSACTION = 57640
const COMMIT = 57641
const ROLLBACK = 57642
const SAVEPOINT = 57643
const RELEASE = 57644
const WORK = 57645
const BIT = 57646
const TINYINT = 57647
const SMALLINT = 57648
const MEDIUMINT = 57649
const INT = 57650
const INTEGER = 57651
const BIGINT = 57652
const INTNUM = 57653
const REAL = 57654
const DOUBLE = 57655
const FLOAT_TYPE = 57656
const DECIMAL_TYPE = 57657
const NUMERIC = 57658
const TIME = 57659
const TIMESTAMP = 57660
const DATETIME = 57661
const YEAR = 57662
const CHAR = 57663
const VARCHAR = 57664
const BOOL = 57665
const CHARACTER = 57666
const VARBINARY = 57667
const NCHAR = 57668
const TEXT = 57669
const TINYTEXT = 57670
const MEDIUMTEXT = 57671
const LONGTEXT = 57672
const BLOB = 57673
const TINYBLOB = 57674
const MEDIUMBLOB = 57675
const LONGBLOB = 57676
const JSON = 57677
const JSON_SCHEMA_VALID = 57678
const JSON_SCHEMA_VALIDATION_REPORT = 57679
const ENUM = 57680
const GEOMETRY = 57681
const POINT = 57682
const LINESTRING = 57683
const POLYGON = 57684
const GEOMCOLLECTION = 57685
const GEOMETRYCOLLECTION = 57686
const MULTIPOINT = 57687
const MULTILINESTRING = 57688
const MULTIPOLYGON = 57689
const ASCII = 57690
const UNICODE = 57691
const NULLX = 57692
const AUTO_INCREMENT = 57693
const APPROXNUM = 57694
const SIGNED = 57695
const UNSIGNED = 57696
const ZEROFILL = 57697
const CODE = 57698
const COLLATION = 57699
const COLUMNS = 57700
const DATABASES = 57701
const ENGINES = 57702
const EVENT = 57703
const EXTENDED = 57704
const FIELDS = 57705
const FULL = 57706
const FUNCTION = 57707
const GTID_EXECUTED = 57708
const KEYSPACES = 57709
const OPEN = 57710
const PLUGINS = 57711
const PRIVILEGES = 57712
const PROCESSLIST = 57713
const SCHEMAS = 57714
const TABLES = 57715
const TRIGGERS = 57716
const USER = 57717
const VGTID_EXECUTED = 57718
const VITESS_KEYSPACES = 57719
const VITESS_METADATA = 57720
const VITESS_MIGRATIONS = 57721
const VITESS_REPLICATION_STATUS = 57722
const VITESS_SHARDS = 57723
const VITESS_TABLETS = 57724
const VITESS_TARGET = 57725
const VSCHEMA = 57726
const VITESS_THROTTLED_APPS = 57727
const NAMES = 57728
const GLOBAL = 57729
const SESSION = 57730
const ISOLATION = 57731
const LEVEL = 57732
const READ = 57733
const WRITE = 57734
const ONLY = 57735
const REPEATABLE = 57736
const COMMITTED = 57737
const UNCOMMITTED = 57738
const SERIALIZABLE = 57739
const CURRENT_TIMESTAMP = 57740
const DATABASE = 57741
const CURRENT_DATE = 57742
const NOW = 57743
const CURRENT_TIME = 57744
const LOCALTIME = 57745
const LOCALTIMESTAMP = 57746
const CURRENT_USER = 57747
const UTC_DATE = 57748
const UTC_TIME = 57749
const UTC_TIMESTAMP = 57750
const DAY = 57751
const DAY_HOUR = 57752
const DAY_MICROSECOND = 57753
const DAY_MINUTE = 57754
const DAY_SECOND = 57755
const HOUR = 57756
const HOUR_MICROSECOND = 57757
const HOUR_MINUTE = 57758
const HOUR_SECOND = 57759
const MICROSECOND = 57760
const MINUTE = 57761
const MINUTE_MICROSECOND = 57762
const MINUTE_SECOND = 57763
const MONTH = 57764
const QUARTER = 57765
const SECOND = 57766
const SECOND_MICROSECOND = 57767
const YEAR_MONTH = 57768
const WEEK = 57769
const REPLACE = 57770
const CONVERT = 57771
const CAST = 57772
const SUBSTR = 57773
const SUBSTRING = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const WEIGHT_STRING = 57778
const LTRIM = 57779
const RTRIM = 57780
const TRIM = 57781
const JSON_ARRAY = 57782
const JSON_OBJECT = 57783
const JSON_QUOTE = 57784
const JSON_DEPTH = 57785
const JSON_TYPE = 57786
const JSON_LENGTH = 57787
const JSON_VALID = 57788
const JSON_ARRAY_APPEND = 57789
const JSON_ARRAY_INSERT = 57790
const JSON_INSERT = 57791
const JSON_MERGE = 57792
const JSON_MERGE_PATCH = 57793
const JSON_MERGE_PRESERVE = 57794
const JSON_REMOVE = 57795
const JSON_REPLACE = 57796
const JSON_SET = 57797
const JSON_UNQUOTE = 57798
const COUNT = 57799
const AVG = 57800
const MAX = 57801
const MIN = 57802
const SUM = 57803
const GROUP_CONCAT = 57804
const BIT_AND = 57805
const BIT_OR = 57806
const BIT_XOR = 57807
const STD = 57808
const STDDEV = 57809
const STDDEV_POP = 57810
const STDDEV_SAMP = 57811
const VAR_POP = 57812
const VAR_SAMP = 57813
const VARIANCE = 57814
const REGEXP_INSTR = 57815
const REGEXP_LIKE = 57816
const REGEXP_REPLACE = 57817
const REGEXP_SUBSTR = 57818
const ExtractValue = 57819
const UpdateXML = 57820
const GET_LOCK = 57821
const RELEASE_LOCK = 57822
const RELEASE_ALL_LOCKS = 57823
const IS_FREE_LOCK = 57824
const IS_USED_LOCK = 57825
const LOCATE = 57826
const POSITION = 57827
const MATCH = 57828
const AGAINST = 57829
const BOOLEAN = 57830
const LANGUAGE = 57831
const WITH = 57832
const QUERY = 57833
const EXPANSION = 57834
const WITHOUT = 57835
const VALIDATION = 57836
const UNUSED = 57837
const ARRAY = 57838
const BYTE = 57839
const CUME_DIST = 57840
const DESCRIPTION = 57841
const DENSE_RANK = 57842
const EMPTY = 57843
const EXCEPT = 57844
const FIRST_VALUE = 57845
const GROUPING = 57846
const GROUPS = 57847
const JSON_TABLE = 57848
const LAG = 57849
const LAST_VALUE = 57850
const LATERAL = 57851
const LEAD = 57852
const NTH_VALUE = 57853
const NTILE = 57854
const OF = 57855
const OVER = 57856
const PERCENT_RANK = 57857
const RANK = 57858
const RECURSIVE = 57859
const ROW_NUMBER = 57860
const SYSTEM = 57861
const WINDOW = 57862
const ACTIVE = 57863
const ADMIN = 57864
const AUTOEXTEND_SIZE = 57865
const BUCKETS = 57866
const CLONE = 57867
const COLUMN_FORMAT = 57868
const COMPONENT = 57869
const DEFINITION = 57870
const ENFORCED = 57871
const ENGINE_ATTRIBUTE = 57872
const EXCLUDE = 57873
const FOLLOWING = 57874
const GET_MASTER_PUBLIC_KEY = 57875
const HISTOGRAM = 57876
const HISTORY = 57877
const INACTIVE = 57878
const INVISIBLE = 57879
const LOCKED = 57880
const MASTER_COMPRESSION_ALGORITHMS = 57881
const MASTER_PUBLIC_KEY_PATH = 57882
const MASTER_TLS_CIPHERSUITES = 57883
const MASTER_ZSTD_COMPRESSION_LEVEL = 57884
const NESTED = 57885
const NETWORK_NAMESPACE = 57886
const NOWAIT = 57887
const NULLS = 57888
const OJ = 57889
const OLD = 57890
const OPTIONAL = 57891
const ORDINALITY = 57892
const ORGANIZATION = 57893
const OTHERS = 57894
const PARTIAL = 57895
const PATH = 57896
const PERSIST = 57897
const PERSIST_ONLY = 57898
const PRECEDING = 57899
const PRIVILEGE_CHECKS_USER = 57900
const PROCESS = 57901
const RANDOM = 57902
const REFERENCE = 57903
const REQUIRE_ROW_FORMAT = 57904
const RESOURCE = 57905
const RESPECT = 57906
const RESTART = 57907
const RETAIN = 57908
const REUSE = 57909
const ROLE = 57910
const SECONDARY = 57911
const SECONDARY_ENGINE = 57912
const SECONDARY_ENGINE_ATTRIBUTE = 57913
const SECONDARY_LOAD = 57914
const SECONDARY_UNLOAD = 57915
const SIMPLE = 57916
const SKIP = 57917
const SRID = 57918
const THREAD_PRIORITY = 57919
const TIES = 57920
const UNBOUNDED = 57921
const VCPU = 57922
const VISIBLE = 57923
const RETURNING = 57924
const FORMAT_BYTES = 57925
const FORMAT_PICO_TIME = 57926
const PS_CURRENT_THREAD_ID = 57927
const PS_THREAD_ID = 57928
const GTID_SUBSET = 57929
const GTID_SUBTRACT = 57930
const WAIT_FOR_EXECUTED_GTID_SET = 57931
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57932
const FORMAT = 57933
const TREE = 57934
const VITESS = 57935
const TRADITIONAL = 57936
const VTEXPLAIN = 57937
const LOCAL = 57938
const LOW_PRIORITY = 57939
const NO_WRITE_TO_BINLOG = 57940
const LOGS = 57941
const ERROR = 57942
const GENERAL = 57943
const HOSTS = 57944
const OPTIMIZER_COSTS = 57945
const USER_RESOURCES = 57946
const SLOW = 57947
const CHANNEL = 57948
const RELAY = 57949
const EXPORT = 57950
const CURRENT = 57951
const ROW = 57952
const ROWS = 57953
const AVG_ROW_LENGTH = 57954
const CONNECTION = 57955
const CHECKSUM = 57956
const DELAY_KEY_WRITE = 57957
const ENCRYPTION = 57958
const ENGINE = 57959
const INSERT_METHOD = 57960
const MAX_ROWS = 57961
const MIN_ROWS = 57962
const PACK_KEYS = 57963
const PASSWORD = 57964
const FIXED = 57965
const DYNAMIC = 57966
const COMPRESSED = 57967
const REDUNDANT = 57968
const COMPACT = 57969
const ROW_FORMAT = 57970
const STATS_AUTO_RECALC = 57971
const STATS_PERSISTENT = 57972
const STATS_SAMPLE_PAGES = 57973
const STORAGE = 57974
const MEMORY = 57975
const DISK = 57976
const PARTITIONS = 57977
const LINEAR = 57978
const RANGE = 57979
const LIST = 57980
const SUBPARTITION = 57981
const SUBPARTITIONS = 57982
const HASH = 57983

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"EXHAUSTIVE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 49,
	14, 49,
	-2, 38,
	-1, 50,
	1, 148,
	659, 148,
	-2, 156,
	-1, 51,
	135, 156,
	176, 156,
	341, 156,
	-2, 506,
	-1, 58,
	36, 752,
	240, 752,
	251, 752,
	286, 766,
	287, 766,
	-2, 754,
	-1, 63,
	242, 783,
	-2, 781,
	-1, 118,
	239, 1445,
	-2, 122,
	-1, 120,
	1, 149,
	659, 149,
	-2, 156,
	-1, 131,
	136, 392,
	245, 392,
	-2, 495,
	-1, 150,
	135, 156,
	176, 156,
	341, 156,
	-2, 515,
	-1, 803,
	87, 1462,
	-2, 1307,
	-1, 804,
	87, 1463,
	221, 1467,
	-2, 1308,
	-1, 805,
	221, 1466,
	-2, 40,
	-1, 885,
	60, 858,
	-2, 873,
	-1, 971,
	250, 41,
	255, 41,
	-2, 403,
	-1, 1056,
	1, 563,
	659, 563,
	-2, 156,
	-1, 1347,
	221, 1467,
	-2, 1308,
	-1, 1495,
	60, 859,
	-2, 878,
	-1, 1496,
	60, 860,
	-2, 879,
	-1, 1547,
	135, 156,
	176, 156,
	341, 156,
	-2, 442,
	-1, 1626,
	136, 392,
	245, 392,
	-2, 495,
	-1, 1635,
	250, 42,
	255, 42,
	-2, 404,
	-1, 1991,
	221, 1471,
	-2, 1465,
	-1, 1992,
	221, 1467,
	-2, 1463,
	-1, 2092,
	135, 156,
	176, 156,
	341, 156,
	-2, 443,
	-1, 2099,
	26, 177,
	-2, 179,
	-1, 2464,
	78, 96,
	88, 96,
	-2, 937,
	-1, 2532,
	634, 679,
	-2, 653,
	-1, 2699,
	50, 1404,
	-2, 1398,
	-1, 3351,
	634, 679,
	-2, 667,
	-1, 3439,
	23, 1824,
	33, 1824,
	177, 1824,
	262, 1824,
	321, 1824,
	322, 1824,
	323, 1824,
	324, 1824,
	325, 1824,
	326, 1824,
	327, 1824,
	329, 1824,
	330, 1824,
	331, 1824,
	332, 1824,
	333, 1824,
	334, 1824,
	335, 1824,
	336, 1824,
	337, 1824,
	338, 1824,
	339, 1824,
	340, 1824,
	342, 1824,
	344, 1824,
	345, 1824,
	346, 1824,
	347, 1824,
	348, 1824,
	349, 1824,
	350, 1824,
	351, 1824,
	352, 1824,
	355, 1824,
	356, 1824,
	357, 1824,
	358, 1824,
	359, 1824,
	361, 1824,
	362, 1824,
	363, 1824,
	364, 1824,
	505, 1824,
	-2, 611,
}

const yyPrivate = 57344

const yyLast = 47155

var yyAct = [...]int{
	1503, 3510, 3099, 3100, 3332, 814, 3480, 3098, 3521, 807,
	677, 3416, 3479, 3437, 3069, 1550, 2926, 657, 806, 1858,
	2848, 3382, 2040, 3405, 2089, 2751, 2758, 3316, 3264, 2808,
	2799, 2813, 2810, 2020, 2809, 2807, 2812, 2811, 3314, 2364,
	1803, 3056, 1119, 5, 878, 2715, 3128, 3304, 2398, 2828,
	2022, 2658, 2766, 2159, 659, 2827, 2713, 2712, 2716, 2965,
	2593, 2959, 767, 769, 1510, 3133, 2044, 687, 2830, 2060,
	2985, 2437, 2710, 2700, 2424, 1982, 768, 655, 2529, 1068,
	2498, 2951, 2497, 2147, 2577, 2854, 2127, 2063, 2499, 2122,
	159, 1604, 933, 773, 2190, 2077, 40, 1003, 2449, 2416,
	1651, 2400, 2065, 39, 1953, 2064, 774, 2430, 1854, 902,
	1873, 901, 880, 1497, 2569, 41, 1633, 1097, 1812, 2168,
	1979, 145, 2146, 2052, 2207, 2129, 2491, 961, 966, 2466,
	1539, 2067, 1121, 1519, 669, 1477, 1359, 1877, 652, 96,
	1831, 1640, 1287, 1987, 1750, 940, 2144, 1732, 972, 937,
	100, 919, 941, 101, 2118, 969, 1949, 967, 968, 1524,
	892, 1343, 1802, 1319, 1117, 979, 1111, 1538, 1988, 1759,
	163, 123, 664, 921, 2045, 882, 1754, 886, 889, 121,
	103, 81, 122, 1599, 1625, 128, 129, 887, 1052, 95,
	914, 890, 663, 1363, 89, 94, 904, 646, 3341, 888,
	2522, 3511, 1367, 2161, 2162, 2163, 3367, 3057, 2796, 102,
	2161, 2552, 2551, 80, 2520, 2205, 3012, 3049, 909, 913,
	91, 124, 91, 3463, 2585, 1717, 1952, 823, 824, 825,
	91, 2586, 3368, 592, 3103, 895, 130, 3363, 2248, 1834,
	2818, 1008, 1819, 905, 934, 1005, 911, 911, 1886, 631,
	3362, 1818, 625, 3103, 2017, 2018, 1817, 1816, 1022, 1023,
	1024, 1815, 1027, 1028, 1029, 1030, 1814, 647, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 928, 896, 929, 982, 2,
	879, 124, 957, 959, 1790, 881, 2816, 903, 983, 958,
	956, 1288, 3458, 955, 2818, 2396, 631, 1009, 1012, 1013,
	1504, 186, 823, 824, 825, 2696, 649, 2815, 650, 1284,
	1016, 3102, 2822, 2662, 1288, 3531, 927, 771, 772, 1304,
	2194, 3483, 107, 108, 109, 125, 112, 147, 1025, 118,
	3102, 1473, 187, 2542, 3478, 587, 91, 3501, 168, 3363,
	625, 3423, 2426, 927, 771, 772, 644, 645, 950, 124,
	2816, 3417, 3467, 3465, 945, 2931, 874, 875, 876, 877,
	625, 656, 885, 2930, 2193, 2192, 2545, 3317, 2365, 158,
	1824, 2873, 3260, 3259, 1007, 146, 2822, 3466, 3464, 1006,
	3062, 3492, 622, 3063, 82, 3461, 82, 625, 3270, 3081,
	916, 917, 3070, 2261, 165, 3406, 3413, 166, 2187, 3346,
	1298, 3269, 82, 651, 3080, 1863, 3442, 2893, 2440, 1614,
	1540, 3447, 1541, 625, 2559, 2560, 134, 135, 157, 156,
	185, 82, 2397, 1298, 84, 2819, 3423, 2747, 2475, 3445,
	608, 2474, 2083, 2441, 2476, 3146, 2748, 2749, 3451, 3452,
	2084, 2085, 2138, 2584, 606, 1320, 2768, 2769, 626, 2258,
	2019, 1087, 2568, 3446, 1301, 2048, 1302, 1303, 2259, 872,
	1114, 1055, 91, 871, 91, 2132, 3333, 2870, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1329, 1328, 1330, 1331, 2523,
	91, 2487, 2962, 1088, 603, 2249, 2250, 2252, 2251, 2819,
	1075, 625, 1075, 617, 1104, 1076, 1106, 1076, 1081, 91,
	639, 1294, 625, 1074, 1286, 1073, 2102, 2101, 613, 2627,
	3484, 2850, 2881, 954, 2879, 1061, 1062, 1092, 1093, 151,
	132, 154, 139, 131, 1294, 152, 153, 2433, 2434, 637,
	2855, 3485, 1026, 169, 1103, 1105, 1051, 1798, 2255, 2256,
	920, 2254, 175, 140, 643, 1537, 626, 1064, 2220, 2216,
	2218, 2219, 2217, 2221, 2222, 2767, 2570, 143, 141, 136,
	137, 138, 142, 3292, 1481, 3293, 626, 2770, 1113, 133,
	1089, 952, 2530, 2169, 2208, 2843, 1707, 2213, 144, 593,
	2555, 595, 609, 2844, 628, 1082, 627, 599, 3513, 597,
	601, 610, 602, 626, 596, 1108, 607, 1733, 2851, 598,
	611, 612, 615, 618, 619, 620, 616, 614, 1096, 605,
	629, 1057, 949, 2131, 1094, 951, 3459, 954, 1050, 626,
	1708, 2228, 1709, 2229, 1095, 2230, 2572, 1738, 930, 924,
	922, 2852, 2214, 1101, 1090, 1091, 625, 1102, 3051, 2212,
	3050, 2231, 1032, 2046, 2047, 1031, 2210, 1107, 3047, 3244,
	992, 2661, 1484, 990, 2253, 930, 924, 922, 962, 2172,
	3107, 160, 963, 1071, 2061, 1077, 1078, 1079, 1080, 186,
	2628, 1100, 963, 1337, 1338, 1339, 1340, 1001, 2048, 1000,
	2525, 2211, 1054, 1351, 999, 998, 1355, 3532, 1115, 1116,
	997, 953, 996, 125, 995, 147, 994, 626, 989, 1618,
	2770, 1002, 938, 1334, 1334, 1085, 168, 975, 626, 3340,
	2259, 2521, 1011, 3490, 954, 938, 946, 3419, 974, 936,
	1109, 938, 1010, 948, 947, 3525, 1345, 1639, 974, 1751,
	1293, 1290, 1291, 1292, 1297, 1299, 1296, 158, 1295, 155,
	960, 1018, 2576, 146, 2145, 915, 2557, 3418, 1289, 2573,
	820, 2198, 820, 1293, 1290, 1291, 1292, 1297, 1299, 1296,
	820, 1295, 165, 3046, 1272, 166, 2197, 2524, 2191, 1536,
	2789, 1289, 952, 1747, 2963, 2401, 2403, 1277, 1273, 1274,
	1053, 1019, 1305, 2554, 1627, 1628, 157, 156, 185, 1612,
	2589, 2273, 2489, 981, 1611, 953, 1341, 1610, 993, 2540,
	148, 991, 3419, 149, 1748, 1608, 591, 586, 3329, 3101,
	2567, 1360, 2871, 2566, 3010, 3011, 2189, 120, 630, 1335,
	1336, 2820, 2821, 1719, 1718, 1720, 1721, 1722, 3101, 2999,
	2981, 1737, 3418, 161, 2824, 3079, 1638, 2471, 923, 623,
	173, 1741, 626, 1739, 1740, 2436, 1742, 1743, 2594, 2373,
	1866, 1528, 981, 1436, 624, 2544, 1066, 85, 1326, 1327,
	1329, 1328, 1330, 1331, 3450, 923, 2046, 2047, 2431, 2090,
	1365, 2135, 1366, 1334, 1331, 2579, 1887, 2260, 1505, 1507,
	2578, 181, 90, 1369, 90, 2820, 2821, 151, 1629, 154,
	1888, 1626, 953, 152, 153, 2746, 980, 1098, 2824, 2543,
	90, 169, 1760, 1471, 898, 1112, 115, 2579, 3449, 1084,
	175, 2136, 2578, 1472, 2915, 981, 1488, 1070, 2134, 90,
	1086, 3354, 162, 167, 164, 170, 171, 172, 174, 176,
	177, 178, 179, 2596, 1878, 1004, 1063, 1072, 180, 182,
	183, 184, 1060, 2402, 3042, 3523, 2975, 2209, 3524, 1809,
	3522, 1807, 2137, 1744, 1542, 980, 2613, 1017, 1878, 2513,
	2290, 1014, 2133, 1487, 1826, 1828, 1829, 1491, 1442, 1443,
	1444, 1445, 1446, 882, 1302, 1303, 3493, 1472, 116, 1734,
	1485, 1735, 1489, 1303, 1736, 1490, 100, 3142, 1827, 101,
	3017, 981, 3016, 1478, 2176, 1648, 1647, 1465, 1637, 2186,
	2606, 2605, 2604, 2598, 2181, 2602, 1056, 2597, 981, 2595,
	2188, 2184, 2181, 992, 2600, 990, 103, 3384, 980, 1885,
	3322, 894, 3486, 2599, 974, 977, 978, 3000, 938, 160,
	3527, 3533, 971, 975, 3252, 1520, 1645, 1727, 1304, 981,
	1836, 2601, 2603, 2185, 1099, 3251, 1615, 1616, 1617, 1761,
	1304, 2183, 1631, 970, 1837, 1332, 1333, 1835, 1475, 3076,
	1069, 3077, 3385, 1680, 1486, 3323, 1683, 1506, 1685, 2265,
	2266, 2267, 1606, 1509, 3242, 3092, 1702, 1624, 1304, 1725,
	1653, 879, 1654, 1714, 1656, 1658, 1643, 1304, 1662, 1664,
	1666, 1668, 1670, 881, 980, 1984, 1684, 1533, 1534, 984,
	974, 1726, 2053, 2054, 986, 3091, 2888, 155, 987, 985,
	1642, 980, 2280, 1692, 1693, 3024, 984, 974, 3534, 1698,
	1699, 986, 2279, 1607, 3023, 987, 985, 3013, 1504, 988,
	2847, 2797, 2785, 1641, 1641, 1883, 823, 824, 825, 1621,
	1622, 1620, 980, 1724, 1884, 1634, 2495, 1713, 974, 977,
	978, 1764, 938, 2494, 2141, 1728, 971, 975, 1768, 1712,
	1770, 1771, 1772, 1773, 1492, 1984, 1304, 1777, 148, 1981,
	631, 149, 1504, 1301, 1711, 1302, 1303, 1927, 1983, 1789,
	1710, 1762, 1763, 1700, 1688, 1301, 1694, 1302, 1303, 1756,
	1304, 1691, 818, 1690, 2615, 1767, 1689, 1660, 1752, 1758,
	1276, 161, 1774, 1775, 1776, 3007, 631, 1537, 173, 1320,
	3487, 2588, 2317, 1301, 3349, 1302, 1303, 124, 957, 2478,
	631, 3348, 1301, 3326, 1302, 1303, 956, 3325, 1320, 955,
	1613, 3324, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329,
	1328, 1330, 1331, 1766, 2157, 2156, 2155, 2154, 3247, 181,
	2329, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1328,
	1330, 1331, 1787, 2153, 2152, 1788, 1919, 1908, 1909, 1910,
	1911, 1921, 1912, 1913, 1914, 1926, 1922, 1915, 1916, 1923,
	1924, 1925, 1917, 1918, 1920, 1304, 3231, 1320, 3230, 2272,
	162, 167, 164, 170, 171, 172, 174, 176, 177, 178,
	179, 1301, 3141, 1302, 1303, 3139, 180, 182, 183, 184,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1328, 1330,
	1331, 3088, 1513, 1470, 1469, 1301, 1840, 1302, 1303, 1468,
	1304, 1861, 1861, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1329, 1328, 1330, 1331, 1859, 1859, 1862, 1324, 1325, 1326,
	1327, 1329, 1328, 1330, 1331, 1881, 3021, 1320, 3006, 1882,
	1316, 2327, 1317, 1304, 40, 2422, 3512, 40, 1514, 3497,
	1504, 1300, 1504, 1504, 2287, 1830, 1318, 1332, 1333, 1315,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1328, 1330,
	1331, 3474, 1504, 1945, 1300, 1504, 2422, 3412, 1345, 1322,
	1323, 1324, 1325, 1326, 1327, 1329, 1328, 1330, 1331, 2422,
	3392, 3342, 1832, 2856, 3273, 1879, 2422, 3388, 3375, 1504,
	1301, 1977, 1302, 1303, 3060, 3339, 1795, 1796, 97, 1820,
	1821, 1822, 1823, 3255, 1504, 99, 1808, 2853, 1471, 98,
	1833, 2422, 3243, 3060, 1504, 3278, 2006, 2286, 1472, 81,
	2788, 97, 81, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1306, 2787, 98, 1505, 2013, 1301, 2504, 1302, 1303, 1989,
	1838, 2422, 3058, 2181, 1504, 2979, 1504, 3277, 1867, 1868,
	2338, 1504, 3235, 1870, 2492, 911, 911, 1875, 2778, 2777,
	3234, 1880, 2774, 2775, 1504, 3068, 1865, 2037, 1301, 1980,
	1302, 1303, 2774, 2773, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1467, 1872, 1874, 1504, 1928, 1929,
	1930, 1931, 1932, 1933, 1935, 1304, 1940, 2203, 1942, 1943,
	1944, 1304, 1946, 1947, 1948, 2202, 1954, 1955, 1956, 1957,
	1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967,
	1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1991,
	1978, 1989, 1985, 1986, 911, 2099, 911, 911, 911, 911,
	911, 100, 1994, 1995, 101, 2467, 1998, 1999, 2000, 2001,
	2002, 2003, 2004, 2005, 1304, 2007, 2008, 2009, 2010, 2011,
	2030, 100, 2031, 2043, 101, 2025, 1993, 2142, 1791, 1996,
	1997, 2036, 99, 1990, 2446, 1504, 2278, 2259, 2553, 2994,
	1889, 1890, 1891, 1892, 1757, 3495, 1504, 2071, 2108, 2109,
	2110, 2111, 1723, 911, 1903, 1715, 1304, 2024, 2093, 1705,
	1304, 2094, 1603, 2534, 2527, 2528, 895, 2103, 2468, 2104,
	2105, 2106, 2107, 2075, 1304, 2049, 2050, 1701, 2470, 2422,
	2421, 1991, 2012, 2035, 2467, 2114, 2115, 2116, 2117, 2038,
	1301, 1504, 1302, 1303, 2283, 1504, 1301, 2097, 1302, 1303,
	1304, 2088, 2170, 1864, 1504, 2056, 2130, 2080, 2124, 1839,
	1697, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 2081, 2058, 2096, 2095, 928, 2079,
	929, 1696, 1695, 1304, 1603, 1602, 1548, 1547, 2438, 1515,
	3429, 1504, 1304, 2167, 3427, 1504, 1304, 2468, 2140, 1301,
	1304, 1302, 1303, 1110, 2711, 2531, 2438, 2259, 1939, 1504,
	2126, 2509, 2098, 2741, 105, 2974, 2418, 2974, 1950, 2125,
	2120, 2121, 1304, 2259, 2175, 2143, 2139, 2178, 1300, 2179,
	2151, 99, 2976, 3380, 3425, 1504, 2445, 3353, 2422, 1304,
	1941, 1301, 2446, 1302, 1303, 1301, 2195, 1302, 1303, 2935,
	2182, 2177, 2174, 2173, 2125, 982, 2776, 1304, 3025, 1301,
	2446, 1302, 1303, 2684, 2082, 983, 2283, 2199, 3488, 2338,
	1320, 2200, 2201, 2314, 2196, 1641, 3301, 1504, 2974, 2313,
	3299, 1504, 2181, 1300, 2945, 1301, 2014, 1302, 1303, 2283,
	1304, 2446, 1950, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1329, 1328, 1330, 1331, 1304, 2164, 3296, 1504, 2181, 3026,
	3027, 3028, 2241, 2242, 2800, 2051, 1508, 2244, 1301, 2206,
	1302, 1303, 2015, 3282, 1504, 2270, 2245, 1301, 1864, 1302,
	1303, 1301, 1810, 1302, 1303, 1301, 2276, 1302, 1303, 1746,
	2281, 2950, 1504, 2284, 1535, 2285, 965, 964, 91, 3455,
	2292, 884, 3395, 3266, 2294, 2295, 2296, 1301, 1511, 1302,
	1303, 3232, 3153, 2234, 2302, 2303, 2304, 2305, 2306, 2307,
	2308, 2309, 2310, 2311, 1301, 3337, 1302, 1303, 3041, 2277,
	3038, 3019, 2898, 2897, 1605, 2123, 1304, 2501, 2943, 1504,
	2845, 2802, 1301, 2798, 1302, 1303, 106, 2535, 2275, 2119,
	2318, 2319, 2320, 2321, 2322, 2113, 2324, 105, 2112, 104,
	2326, 1730, 1832, 1304, 2331, 2332, 1636, 2333, 99, 1304,
	2336, 1632, 2337, 2257, 1304, 1301, 2340, 1302, 1303, 91,
	2344, 1517, 1304, 1601, 2349, 2350, 2351, 2352, 117, 1301,
	1833, 1302, 1303, 2325, 1304, 2500, 2268, 2363, 1304, 2366,
	2367, 1055, 1304, 2849, 1676, 3267, 1304, 2369, 2371, 2138,
	1793, 1304, 2986, 2987, 2374, 2375, 2376, 2377, 2378, 1991,
	2940, 1504, 2028, 1304, 3507, 2385, 2386, 1504, 2387, 106,
	3505, 2390, 2392, 2037, 2289, 2394, 3357, 2291, 2992, 3481,
	105, 1304, 104, 2501, 3361, 2406, 3287, 1516, 2298, 2299,
	2300, 2301, 1861, 2938, 1504, 1677, 1678, 1679, 2903, 1504,
	2989, 2794, 1304, 1990, 2793, 1859, 2407, 1504, 2792, 1304,
	2711, 1301, 1794, 1302, 1303, 2991, 2514, 2235, 2886, 1504,
	1304, 2730, 2393, 1504, 1304, 2729, 2391, 1504, 2034, 3268,
	2941, 2323, 2733, 1360, 2405, 2370, 1504, 2734, 1301, 2042,
	1302, 1303, 1512, 1304, 1301, 2980, 1302, 1303, 3239, 1301,
	1504, 1302, 1303, 2731, 2701, 2703, 3321, 1301, 2732, 1302,
	1303, 2442, 2408, 2704, 2410, 2353, 1504, 2689, 2688, 1301,
	2423, 1302, 1303, 1301, 2967, 1302, 1303, 1301, 1304, 1302,
	1303, 1301, 2966, 1302, 1303, 1304, 1301, 3043, 1302, 1303,
	3132, 3134, 1304, 2345, 1504, 899, 2970, 2698, 1301, 1745,
	1302, 1303, 1304, 900, 2913, 870, 1304, 1478, 2909, 2772,
	2419, 2395, 1304, 2485, 40, 2432, 1301, 2461, 1302, 1303,
	2505, 1021, 2735, 2460, 2455, 2456, 2462, 2895, 1304, 1020,
	2864, 2488, 2490, 1472, 2420, 2415, 1275, 1301, 2500, 1302,
	1303, 1304, 1887, 2481, 1301, 2435, 1302, 1303, 2526, 3123,
	1520, 3122, 1304, 2465, 97, 1301, 1888, 1302, 1303, 1301,
	2582, 1302, 1303, 2496, 2972, 98, 2469, 2541, 2269, 2894,
	2271, 1304, 2130, 2472, 125, 99, 2891, 3519, 1301, 2479,
	1302, 1303, 2790, 2482, 2550, 1304, 2389, 2238, 2297, 2503,
	2388, 97, 2053, 2054, 2506, 2507, 2384, 1304, 99, 3121,
	2493, 1304, 98, 3434, 3338, 2312, 3262, 1304, 2771, 2459,
	2039, 2687, 2383, 1301, 2502, 1302, 1303, 2952, 1304, 2686,
	1301, 2548, 1302, 1303, 2227, 2382, 2510, 1301, 2511, 1302,
	1303, 2515, 2516, 2517, 2226, 2547, 2381, 1301, 2263, 1302,
	1303, 1301, 1304, 1302, 1303, 3029, 1624, 1301, 1672, 1302,
	1303, 2591, 2225, 2536, 2537, 2380, 1304, 2224, 2617, 2618,
	2619, 2620, 2621, 1301, 1304, 1302, 1303, 907, 908, 2379,
	2223, 106, 104, 1304, 3309, 2546, 1301, 2626, 1302, 1303,
	1304, 2368, 105, 105, 104, 2362, 3308, 1301, 1304, 1302,
	1303, 2361, 3030, 3031, 3032, 1673, 1674, 1675, 3290, 3140,
	2607, 2571, 2360, 106, 106, 3138, 1301, 3137, 1302, 1303,
	2590, 3130, 3039, 2574, 105, 105, 104, 2622, 2580, 2971,
	1301, 2581, 1302, 1303, 2969, 99, 2359, 2803, 2165, 1619,
	906, 3129, 1301, 2960, 1302, 1303, 1301, 2438, 1302, 1303,
	2358, 3111, 1301, 2418, 1302, 1303, 3509, 3508, 2357, 2608,
	2629, 2315, 2026, 1301, 2610, 1302, 1303, 2356, 1529, 1521,
	110, 111, 3508, 2587, 2355, 3509, 3327, 2663, 3005, 897,
	1806, 1804, 2354, 10, 9, 1805, 2668, 1301, 8, 1302,
	1303, 2665, 911, 3, 93, 2611, 2612, 1, 3009, 2614,
	3444, 1301, 2616, 1302, 1303, 604, 2631, 2016, 1476, 1301,
	3482, 1302, 1303, 2637, 2720, 1980, 3440, 1980, 1301, 3441,
	1302, 1303, 2623, 2624, 2625, 1301, 1716, 1302, 1303, 1706,
	3071, 1951, 2738, 1301, 2630, 1302, 1303, 2632, 2633, 2634,
	3263, 2806, 2171, 2635, 2636, 3037, 2128, 1954, 2638, 2668,
	973, 2640, 150, 2091, 2642, 2643, 2644, 2645, 2691, 2664,
	2092, 2666, 2646, 1954, 1954, 1954, 1954, 1954, 2740, 3408,
	114, 2679, 931, 2723, 2714, 2683, 2692, 113, 976, 2714,
	1083, 911, 2071, 2166, 3061, 2690, 2667, 2486, 2669, 2670,
	2671, 2672, 2673, 2674, 2100, 1554, 1552, 2675, 2676, 1553,
	2677, 1551, 2678, 2693, 1556, 2705, 2706, 886, 1555, 2872,
	2071, 2071, 2071, 2071, 2071, 2722, 2316, 887, 2717, 2708,
	2725, 2726, 2724, 2728, 2742, 2727, 2736, 2743, 2826, 888,
	2071, 2914, 1797, 2071, 638, 2458, 2744, 2680, 2681, 2682,
	100, 2750, 632, 101, 188, 1543, 1522, 2709, 2927, 1304,
	2782, 2647, 2648, 2649, 2650, 2651, 1015, 2781, 2866, 594,
	2779, 2780, 2204, 600, 2805, 1352, 1792, 2685, 2783, 2784,
	2473, 926, 2739, 918, 1756, 2834, 1304, 2868, 2883, 2884,
	2885, 1304, 2887, 2889, 2027, 804, 2409, 925, 2130, 2833,
	2804, 2825, 3240, 2719, 2609, 2840, 2896, 2964, 2697, 2699,
	2425, 2900, 2901, 2902, 2904, 2905, 2906, 2907, 2702, 2695,
	2908, 1304, 2910, 2911, 2912, 1304, 2592, 2916, 2917, 2918,
	2919, 2920, 2921, 2922, 2923, 2924, 2925, 2857, 2860, 2859,
	2862, 2863, 2801, 2348, 3320, 2932, 2867, 3131, 2936, 191,
	2937, 2939, 191, 2942, 2944, 636, 2946, 2947, 2948, 2949,
	642, 1304, 3393, 2639, 2955, 2641, 2874, 2875, 2877, 2876,
	2347, 191, 2878, 2483, 2880, 2346, 2882, 1518, 2929, 2934,
	2754, 2652, 2653, 2654, 2655, 2933, 191, 2288, 1876, 1342,
	2068, 3106, 1304, 1825, 1301, 661, 1302, 1303, 660, 2977,
	2978, 658, 1304, 2982, 2411, 2343, 2439, 1307, 808, 2342,
	2399, 642, 191, 642, 1530, 2450, 2448, 1304, 2447, 2236,
	2076, 1301, 2988, 1302, 1303, 2755, 1301, 2984, 1302, 1303,
	1304, 3436, 2070, 2066, 2890, 1304, 2417, 759, 758, 1304,
	2956, 670, 2958, 2953, 2954, 2341, 662, 1304, 2899, 2757,
	2961, 654, 757, 2968, 756, 3002, 1301, 2832, 1302, 1303,
	1301, 3420, 1302, 1303, 2556, 2973, 2846, 2752, 2558, 2484,
	2842, 1285, 1494, 648, 944, 2983, 2339, 2869, 2990, 3344,
	2262, 2892, 2993, 1493, 2768, 2769, 2335, 1906, 1907, 3351,
	2995, 2753, 1502, 1498, 2997, 2998, 1301, 2834, 1302, 1303,
	2814, 2334, 3003, 3004, 3055, 3044, 3045, 1499, 3059, 2996,
	2795, 2833, 2532, 2158, 2330, 2071, 66, 44, 3315, 2328,
	3020, 3381, 3022, 2293, 2759, 3065, 3066, 1301, 755, 1302,
	1303, 2282, 2032, 2033, 1501, 752, 1500, 1301, 3108, 1302,
	1303, 3109, 3014, 3015, 3110, 2659, 2660, 3364, 3365, 751,
	3078, 3366, 1301, 3082, 1302, 1303, 2451, 2454, 2455, 2456,
	2452, 1934, 2453, 2457, 1283, 1301, 1280, 1302, 1303, 3457,
	1301, 1799, 1302, 1303, 1301, 92, 1302, 1303, 35, 34,
	3093, 33, 1301, 32, 1302, 1303, 3067, 31, 25, 24,
	23, 22, 21, 2767, 3048, 3097, 1502, 1498, 3052, 3053,
	3054, 28, 20, 19, 18, 2770, 2817, 3105, 3477, 3518,
	119, 1499, 53, 50, 48, 3112, 127, 3040, 126, 51,
	47, 1058, 3083, 2451, 2454, 2455, 2456, 2452, 45, 2453,
	2457, 30, 29, 2986, 2987, 17, 1495, 1496, 1501, 16,
	1500, 15, 14, 13, 12, 11, 7, 6, 38, 37,
	3064, 27, 36, 26, 4, 2519, 3104, 2160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1861, 0, 0, 0, 3087, 0, 0, 0, 0, 0,
	0, 0, 0, 1859, 3155, 0, 0, 0, 0, 3147,
	3127, 0, 0, 0, 3136, 3084, 3149, 3085, 3151, 3135,
	3086, 3143, 0, 3089, 3090, 3145, 2756, 0, 2714, 0,
	0, 0, 3094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3096, 0, 0, 0, 3254, 0, 0, 819,
	3159, 0, 83, 0, 3241, 3261, 0, 3156, 3157, 0,
	0, 0, 40, 0, 3113, 0, 0, 3114, 0, 3115,
	3116, 0, 3117, 2717, 3118, 3271, 3272, 2717, 3274, 3119,
	3275, 3276, 0, 3238, 3237, 3279, 3280, 3281, 3236, 3283,
	3286, 3284, 3285, 0, 0, 3253, 0, 0, 0, 1861,
	3258, 3257, 0, 3265, 3144, 3295, 3297, 3298, 3300, 3302,
	3303, 3305, 1859, 3288, 0, 3152, 0, 0, 3154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3158, 883, 0, 83, 0, 0, 0, 3248, 3249, 3250,
	0, 3289, 0, 0, 3245, 0, 0, 0, 3233, 3335,
	3291, 0, 883, 0, 3294, 0, 0, 0, 0, 0,
	0, 0, 3310, 3311, 3313, 3312, 3331, 943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3328, 0, 0, 0, 0, 0, 0, 0,
	0, 3334, 191, 0, 191, 0, 0, 191, 0, 0,
	0, 2760, 0, 0, 0, 2764, 0, 0, 0, 0,
	0, 0, 2763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 642, 0, 642,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3095, 0, 2717, 0, 3336, 2765, 0, 0, 642,
	191, 2761, 0, 3330, 0, 0, 2762, 0, 3318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3360, 0, 0, 1347, 3355,
	0, 0, 0, 0, 0, 0, 0, 3350, 0, 3347,
	0, 0, 0, 3352, 0, 3376, 0, 0, 0, 0,
	0, 3377, 3378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3370, 0, 3389, 3371, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3343, 3379, 0, 0, 0, 40, 0, 0, 3414,
	3415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3396, 3424, 3426, 3428, 3421, 3422, 0, 3394,
	0, 3399, 3407, 3404, 3401, 3386, 3400, 3398, 3403, 3402,
	0, 2714, 0, 0, 0, 0, 3265, 3409, 3456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3432, 0,
	0, 0, 3358, 0, 0, 0, 0, 0, 3453, 3443,
	3448, 0, 0, 3435, 0, 0, 0, 3421, 3422, 3462,
	1347, 0, 40, 3460, 0, 3372, 0, 3473, 3373, 0,
	3374, 1355, 0, 0, 0, 0, 3391, 0, 0, 0,
	0, 0, 0, 0, 3476, 3471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3494,
	3496, 3498, 3319, 0, 0, 3491, 0, 0, 3489, 0,
	0, 0, 0, 1861, 0, 0, 3504, 191, 3500, 3499,
	0, 642, 642, 3506, 0, 0, 1859, 3503, 0, 0,
	3517, 3502, 0, 3421, 3422, 3514, 0, 191, 3520, 0,
	0, 0, 0, 0, 3528, 0, 3529, 3530, 3526, 0,
	0, 0, 0, 0, 0, 0, 0, 642, 0, 0,
	191, 0, 0, 0, 3454, 0, 0, 1861, 3537, 3538,
	3285, 0, 642, 3536, 0, 0, 0, 0, 191, 0,
	1859, 3535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3468, 0, 3469, 0, 3470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1347, 0,
	0, 0, 0, 0, 642, 642, 0, 642, 0, 642,
	642, 0, 642, 642, 642, 642, 642, 642, 0, 0,
	0, 0, 0, 0, 3359, 1347, 0, 0, 1347, 642,
	1347, 191, 3369, 0, 3515, 0, 3516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 642, 0, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	642, 1118, 191, 1118, 1118, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 642, 0, 0, 0, 0, 0, 0,
	0, 883, 1344, 1349, 1350, 0, 1353, 0, 1354, 1356,
	1357, 1358, 0, 1361, 1362, 1364, 1364, 0, 1364, 1368,
	1368, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 0, 0, 0, 0,
	1435, 0, 1437, 1438, 1439, 1440, 1441, 0, 0, 0,
	0, 0, 0, 0, 0, 1368, 1368, 1368, 1368, 1368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1474, 0, 0, 0, 0, 0, 0, 642, 642, 0,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1480, 0, 0, 0, 0, 0, 883,
	0, 0, 0, 883, 0, 0, 0, 0, 0, 883,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 0, 1347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 642, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 82, 42, 43, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 0, 0, 0,
	46, 73, 74, 0, 71, 75, 0, 0, 0, 0,
	0, 0, 1992, 72, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 59, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 91, 191, 0, 0, 0, 0,
	642, 0, 125, 0, 147, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 0, 0, 642, 0, 0,
	125, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 642, 0, 168, 1992, 191, 158, 191, 0, 191,
	191, 0, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 642, 0, 0, 1118, 0, 0,
	0, 165, 0, 0, 166, 0, 0, 0, 0, 3177,
	3179, 3178, 3196, 3197, 3198, 3199, 3200, 3201, 3202, 709,
	0, 0, 0, 1627, 1628, 157, 156, 185, 0, 165,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 49, 52, 55, 54, 57, 0, 70, 0,
	0, 79, 76, 0, 0, 0, 642, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 803, 0, 0, 58, 87, 86, 0,
	0, 68, 69, 56, 0, 0, 0, 0, 0, 77,
	78, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 1629, 154, 642,
	1626, 0, 152, 153, 642, 0, 0, 0, 642, 642,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	60, 61, 621, 62, 63, 64, 65, 0, 641, 0,
	0, 1118, 1118, 0, 0, 0, 0, 0, 169, 0,
	83, 0, 0, 83, 0, 0, 191, 175, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 191, 0, 0, 191, 0, 191, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 641,
	0, 641, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 1479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 3183,
	0, 0, 0, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3191, 3192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 589, 0,
	0, 0, 85, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 873, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1347, 0, 1992, 0, 0, 0, 775, 0, 688, 779,
	690, 776, 777, 0, 686, 689, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 939, 0,
	0, 0, 0, 0, 90, 0, 155, 0, 0, 0,
	0, 0, 707, 708, 3176, 3180, 3181, 3182, 3193, 3194,
	3195, 3203, 3205, 740, 3204, 3206, 3207, 3208, 3211, 3212,
	3213, 3214, 3209, 3210, 3215, 3160, 3164, 3161, 3162, 3163,
	3175, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173,
	3174, 3216, 3217, 3218, 3219, 3220, 3221, 3186, 3190, 3189,
	3187, 3188, 3184, 3185, 0, 0, 0, 148, 0, 0,
	149, 0, 0, 0, 0, 0, 780, 0, 781, 0,
	0, 785, 0, 2069, 0, 787, 786, 0, 788, 754,
	753, 0, 0, 782, 783, 0, 784, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 173, 0, 67,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 161, 191,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 642, 0, 943, 0, 0, 0, 0, 0, 0,
	0, 3222, 3223, 3224, 3225, 3226, 3227, 3228, 3229, 0,
	0, 0, 0, 0, 0, 191, 181, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 943, 0, 0, 162,
	167, 164, 170, 171, 172, 174, 176, 177, 178, 179,
	0, 0, 0, 0, 0, 180, 182, 183, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 167, 164,
	170, 171, 172, 174, 176, 177, 178, 179, 0, 0,
	0, 0, 0, 180, 182, 183, 184, 0, 0, 0,
	0, 0, 186, 0, 642, 0, 0, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 0, 0, 642, 168,
	0, 0, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 191, 191, 191,
	191, 0, 2480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 166, 0,
	191, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 2264, 641, 1271, 641, 641, 0,
	0, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1059, 0,
	1065, 642, 0, 1067, 169, 0, 0, 0, 0, 642,
	0, 0, 0, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 0, 1279, 0, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2372,
	0, 0, 642, 0, 0, 0, 1347, 0, 0, 642,
	642, 1347, 191, 191, 191, 191, 191, 0, 0, 0,
	0, 0, 0, 0, 191, 0, 0, 0, 1346, 0,
	191, 2404, 191, 760, 0, 191, 191, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 883,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	2443, 2444, 0, 0, 0, 0, 0, 0, 0, 2069,
	191, 0, 883, 2463, 0, 0, 0, 0, 0, 641,
	641, 0, 0, 642, 0, 0, 1347, 0, 640, 0,
	0, 642, 0, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	641, 0, 191, 0, 0, 0, 0, 0, 0, 935,
	1600, 942, 0, 0, 0, 0, 0, 0, 0, 0,
	1609, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 0, 1635, 0, 0, 0, 0,
	0, 0, 2539, 1644, 0, 0, 1346, 1646, 0, 0,
	1649, 1650, 641, 641, 0, 641, 0, 641, 641, 0,
	641, 641, 641, 641, 641, 641, 0, 0, 0, 0,
	0, 0, 642, 1346, 1681, 1682, 1346, 641, 1346, 0,
	1687, 0, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 1532, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1549, 1749, 0, 0, 641, 0,
	0, 0, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 0, 162, 167, 164, 170, 171, 172, 174,
	176, 177, 178, 179, 0, 0, 191, 0, 0, 180,
	182, 183, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 1686, 191, 191,
	191, 0, 0, 0, 0, 0, 0, 0, 642, 642,
	0, 0, 0, 0, 0, 2656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 642, 642, 642, 642, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 2069, 0,
	0, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 0,
	0, 2718, 0, 83, 0, 0, 2069, 2069, 2069, 2069,
	2069, 0, 0, 0, 0, 0, 0, 3475, 0, 0,
	0, 0, 0, 0, 0, 0, 2069, 1571, 0, 2069,
	0, 0, 0, 0, 0, 641, 641, 0, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1347, 0, 2823, 0, 0, 642, 0, 642, 641, 0,
	0, 0, 2831, 0, 0, 0, 0, 0, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 641,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 641, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 1559, 0, 642, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 1120, 0, 1120, 1120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1278, 0, 0,
	0, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	642, 642, 0, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 0, 0, 0, 1572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	0, 0, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 2069, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 0, 3001, 1585, 1588, 1589, 1590, 1591,
	1592, 1593, 0, 1594, 1595, 1596, 1597, 1598, 1573, 1574,
	1575, 1576, 1557, 1558, 1586, 0, 1560, 0, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 0, 642, 1570,
	1577, 1578, 1579, 1580, 0, 1581, 1582, 1583, 1584, 0,
	0, 0, 0, 0, 191, 0, 0, 641, 0, 0,
	0, 0, 0, 0, 2148, 2149, 2150, 0, 0, 0,
	0, 0, 642, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 0,
	641, 1644, 0, 0, 1644, 0, 1644, 0, 0, 0,
	0, 0, 2180, 2055, 0, 0, 0, 0, 0, 0,
	0, 2059, 0, 2062, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 642, 0, 641, 0, 0,
	0, 0, 641, 0, 0, 0, 641, 641, 0, 1482,
	1483, 0, 0, 0, 0, 0, 0, 0, 0, 642,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 1526, 0, 0, 0, 1587,
	0, 0, 0, 0, 0, 191, 642, 0, 0, 0,
	1544, 3120, 0, 3124, 3125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2718, 0, 83, 0,
	2718, 0, 0, 0, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 935, 0, 0, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 642, 1652, 1652, 0, 1652, 0, 1652, 1652, 0,
	1661, 1652, 1652, 1652, 1652, 1652, 0, 0, 642, 0,
	642, 0, 0, 0, 0, 0, 0, 935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 1346, 2215,
	641, 0, 1729, 0, 0, 0, 0, 0, 2232, 2233,
	0, 0, 2237, 0, 0, 0, 0, 0, 1753, 0,
	0, 2240, 0, 0, 0, 0, 0, 0, 2243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2246, 0, 1571, 0, 0, 0,
	0, 1120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	0, 761, 0, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 0, 3345, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 83, 0, 0, 0, 0, 0, 0, 0,
	1559, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 590, 0,
	0, 0, 0, 0, 2477, 1120, 1120, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 893, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3390, 0, 0, 0, 0, 83, 912,
	912, 0, 641, 0, 0, 0, 0, 0, 590, 0,
	0, 0, 0, 0, 0, 1572, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 0, 0, 641, 0, 0, 1871,
	1644, 1644, 0, 0, 0, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 2549, 0, 0, 0, 2464, 0, 0, 0,
	1904, 1905, 0, 0, 1585, 1588, 1589, 1590, 1591, 1592,
	1593, 0, 1594, 1595, 1596, 1597, 1598, 1573, 1574, 1575,
	1576, 1557, 1558, 1586, 3472, 1560, 0, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 0, 0, 1570, 1577,
	1578, 1579, 1580, 0, 1581, 1582, 1583, 1584, 0, 0,
	1120, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2512, 0, 0, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2029, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 2041, 0, 0, 0, 0,
	0, 0, 2561, 2562, 2563, 2564, 2565, 0, 0, 1526,
	0, 0, 1120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 2575, 0, 641,
	0, 0, 935, 821, 0, 1984, 0, 641, 822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 2583, 0, 0, 0, 0, 0, 0, 1587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 641, 942, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 1346, 0, 0, 641, 641, 1346,
	0, 0, 0, 0, 935, 0, 0, 0, 0, 0,
	942, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 0, 0, 0, 0, 935, 0, 2786,
	0, 0, 1855, 0, 0, 0, 1855, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 0, 0, 1346, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 590, 91,
	590, 2247, 821, 590, 0, 0, 809, 822, 823, 824,
	825, 810, 0, 0, 811, 812, 0, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 2791, 0, 0, 0,
	0, 818, 826, 827, 0, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2829, 0, 0, 0, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2841, 0, 0, 0,
	1120, 0, 0, 0, 0, 0, 0, 0, 2835, 2836,
	0, 0, 0, 0, 1348, 2858, 0, 0, 2861, 0,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 867,
	868, 869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3008, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 641, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1348, 0, 0, 0,
	0, 0, 0, 641, 641, 641, 641, 0, 2412, 0,
	0, 0, 0, 0, 0, 0, 2838, 2839, 0, 2427,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3018, 590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3033, 0, 893, 3034, 3035, 3036, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 775, 0, 0,
	779, 0, 776, 777, 0, 0, 0, 778, 0, 0,
	0, 0, 2508, 0, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	0, 0, 0, 641, 0, 641, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 2533, 0, 0, 0,
	0, 0, 0, 0, 0, 2538, 0, 0, 0, 0,
	0, 0, 0, 0, 1348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1348, 0, 0, 1348, 641, 1348, 590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 0, 1703, 0, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 0,
	0, 0, 590, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 590, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 641, 0, 0, 0, 641, 641,
	1778, 1779, 590, 590, 590, 590, 590, 590, 590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 821, 0, 0, 0, 0, 822, 2657,
	0, 0, 0, 0, 0, 0, 0, 1120, 1860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1652, 0,
	0, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1120, 0, 0, 0, 0, 0, 0, 2721, 1652, 0,
	641, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 0, 0, 0, 0, 0, 590, 0,
	0, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 0, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 935, 0, 0, 0, 0, 0, 641, 641, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1348, 0, 0, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 912, 912,
	0, 0, 0, 1348, 641, 0, 0, 0, 0, 3356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 0, 0, 0, 912, 1755, 912,
	912, 912, 912, 912, 0, 0, 641, 0, 641, 0,
	2928, 0, 0, 0, 0, 0, 0, 0, 91, 0,
	0, 821, 0, 0, 0, 809, 822, 823, 824, 825,
	810, 0, 0, 811, 812, 0, 813, 0, 0, 0,
	0, 1703, 0, 0, 0, 0, 0, 0, 0, 0,
	818, 826, 827, 0, 0, 0, 912, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	893, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 590, 0, 0, 0, 0, 0, 0,
	1755, 590, 0, 590, 0, 590, 2078, 2835, 2836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 0, 0, 0, 0, 0, 2041, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3072, 3073, 3074, 3075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2838, 2839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 590, 0, 0, 0, 0, 0, 0, 590,
	0, 0, 0, 0, 0, 0, 0, 0, 590, 590,
	0, 0, 590, 0, 2239, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 0, 0, 0, 0, 590, 0,
	0, 0, 0, 3148, 0, 3150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2041, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1120, 0, 1348, 0, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3306, 0, 0, 0, 3306, 3306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 590, 0, 0,
	0, 0, 0, 0, 0, 1703, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 0, 0, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 1120, 1120, 0,
	0, 0, 0, 2518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3430,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 590, 590, 590, 590, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3383, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 0, 0, 2928, 0, 3438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 912, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 912, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1348, 0, 0, 0, 0, 1348, 590, 590,
	590, 590, 590, 0, 0, 0, 0, 0, 0, 0,
	2737, 0, 0, 0, 0, 0, 1703, 0, 590, 0,
	0, 590, 2745, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 590, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 590, 0, 0, 590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 590, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 590, 590, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1703, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	1254, 1239, 500, 0, 1182, 1257, 1151, 1170, 1267, 1173,
	1176, 1218, 1130, 1196, 402, 1167, 1123, 1155, 1125, 1162,
	1126, 1153, 1184, 259, 1150, 1241, 1200, 1256, 353, 256,
	1132, 1156, 416, 1172, 198, 1220, 470, 243, 364, 361,
	508, 271, 262, 258, 241, 306, 372, 414, 490, 408,
	1263, 357, 1206, 0, 480, 387, 0, 0, 0, 1186,
	1245, 1194, 1232, 1181, 1219, 1140, 1205, 1258, 1168, 1215,
	1259, 312, 239, 314, 197, 399, 481, 275, 0, 0,
	1703, 0, 3410, 631, 0, 0, 0, 0, 3411, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 590,
	338, 347, 346, 327, 328, 330, 332, 337, 344, 350,
	1164, 1212, 1253, 1165, 1214, 254, 310, 261, 253, 505,
	1264, 1244, 1129, 1193, 1252, 0, 0, 221, 1255, 1188,
	0, 1217, 0, 1270, 1124, 1208, 0, 1127, 1131, 1266,
	1248, 1159, 264, 0, 0, 0, 0, 0, 0, 0,
	1185, 1195, 1229, 1233, 1179, 0, 0, 0, 0, 1348,
	0, 0, 1157, 0, 1204, 0, 0, 0, 1136, 1128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1183, 0, 0, 0, 0, 1139, 0, 1158,
	1230, 1703, 1122, 287, 1133, 388, 246, 0, 437, 277,
	1237, 1247, 1180, 545, 1251, 1178, 1177, 1224, 1137, 1243,
	1171, 352, 1135, 319, 193, 217, 0, 1169, 398, 445,
	457, 1242, 1154, 1163, 244, 1161, 455, 412, 524, 225,
	273, 442, 418, 453, 425, 276, 1203, 1222, 454, 359,
	510, 435, 521, 546, 547, 252, 392, 533, 494, 541,
	562, 218, 249, 406, 487, 527, 477, 384, 506, 507,
	318, 476, 285, 196, 356, 552, 216, 463, 358, 234,
	223, 512, 530, 279, 440, 205, 489, 519, 231, 467,
	0, 0, 564, 207, 517, 486, 380, 315, 316, 206,
	0, 441, 257, 283, 247, 401, 514, 515, 245, 565,
	220, 540, 212, 1134, 539, 394, 509, 518, 381, 370,
	211, 516, 379, 369, 323, 342, 343, 269, 296, 432,
	362, 433, 295, 297, 390, 389, 391, 200, 528, 0,
	201, 0, 482, 529, 566, 226, 227, 229, 1149, 268,
	272, 281, 284, 292, 293, 302, 354, 405, 431, 427,
	436, 1238, 504, 522, 534, 544, 550, 551, 553, 554,
	555, 556, 557, 559, 558, 393, 300, 478, 322, 360,
	1227, 1269, 411, 456, 232, 526, 479, 1144, 1148, 1142,
	1209, 1143, 1198, 1199, 1145, 1260, 1261, 1262, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 1231, 1138, 0,
	1146, 1147, 1240, 1249, 1250, 585, 371, 469, 523, 324,
	336, 339, 329, 348, 0, 349, 325, 326, 331, 333,
	334, 335, 340, 341, 345, 351, 240, 203, 377, 385,
	503, 301, 208, 209, 210, 496, 497, 498, 499, 537,
	538, 542, 446, 447, 448, 449, 282, 532, 298, 452,
	451, 320, 321, 366, 434, 1202, 192, 213, 355, 1265,
	438, 278, 563, 536, 531, 199, 215, 1141, 251, 1152,
	1160, 0, 1166, 1174, 1175, 1187, 1189, 1190, 1191, 1192,
	1210, 1211, 1213, 1221, 1223, 1226, 1228, 1235, 1246, 1268,
	194, 195, 202, 214, 224, 228, 235, 250, 265, 267,
	274, 288, 299, 307, 308, 311, 317, 367, 373, 374,
	375, 376, 395, 396, 397, 400, 403, 404, 407, 409,
	410, 413, 417, 421, 422, 423, 424, 426, 428, 439,
	444, 458, 459, 460, 461, 462, 465, 466, 471, 472,
	473, 474, 475, 483, 484, 488, 511, 513, 525, 543,
	548, 464, 290, 291, 429, 430, 303, 304, 560, 561,
	289, 520, 549, 0, 0, 365, 1201, 1207, 368, 270,
	294, 309, 1216, 535, 485, 219, 450, 280, 242, 1234,
	1236, 204, 238, 222, 248, 263, 266, 313, 378, 386,
	415, 420, 286, 260, 236, 443, 233, 468, 491, 492,
	493, 495, 382, 255, 419, 1197, 1225, 363, 501, 502,
	305, 383, 0, 0, 0, 1254, 1239, 500, 0, 1182,
	1257, 1151, 1170, 1267, 1173, 1176, 1218, 1130, 1196, 402,
	1167, 1123, 1155, 1125, 1162, 1126, 1153, 1184, 259, 1150,
	1241, 1200, 1256, 353, 256, 1132, 1156, 416, 1172, 198,
	1220, 470, 243, 364, 361, 508, 271, 262, 258, 241,
	306, 372, 414, 490, 408, 1263, 357, 1206, 0, 480,
	387, 0, 0, 0, 1186, 1245, 1194, 1232, 1181, 1219,
	1140, 1205, 1258, 1168, 1215, 1259, 312, 239, 314, 197,
	399, 481, 275, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 237, 0, 0, 0, 338, 347, 346, 327, 328,
	330, 332, 337, 344, 350, 1164, 1212, 1253, 1165, 1214,
	254, 310, 261, 253, 505, 1264, 1244, 1129, 1193, 1252,
	0, 0, 221, 1255, 1188, 0, 1217, 0, 1270, 1124,
	1208, 0, 1127, 1131, 1266, 1248, 1159, 264, 0, 0,
	0, 0, 0, 0, 0, 1185, 1195, 1229, 1233, 1179,
	0, 0, 0, 0, 0, 2746, 0, 1157, 0, 1204,
	0, 0, 0, 1136, 1128, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1183, 0, 0,
	0, 0, 1139, 0, 1158, 1230, 0, 1122, 287, 1133,
	388, 246, 0, 437, 277, 1237, 1247, 1180, 545, 1251,
	1178, 1177, 1224, 1137, 1243, 1171, 352, 1135, 319, 193,
	217, 0, 1169, 398, 445, 457, 1242, 1154, 1163, 244,
	1161, 455, 412, 524, 225, 273, 442, 418, 453, 425,
	276, 1203, 1222, 454, 359, 510, 435, 521, 546, 547,
	252, 392, 533, 494, 541, 562, 218, 249, 406, 487,
	527, 477, 384, 506, 507, 318, 476, 285, 196, 356,
	552, 216, 463, 358, 234, 223, 512, 530, 279, 440,
	205, 489, 519, 231, 467, 0, 0, 564, 207, 517,
	486, 380, 315, 316, 206, 0, 441, 257, 283, 247,
	401, 514, 515, 245, 565, 220, 540, 212, 1134, 539,
	394, 509, 518, 381, 370, 211, 516, 379, 369, 323,
	342, 343, 269, 296, 432, 362, 433, 295, 297, 390,
	389, 391, 200, 528, 0, 201, 0, 482, 529, 566,
	226, 227, 229, 1149, 268, 272, 281, 284, 292, 293,
	302, 354, 405, 431, 427, 436, 1238, 504, 522, 534,
	544, 550, 551, 553, 554, 555, 556, 557, 559, 558,
	393, 300, 478, 322, 360, 1227, 1269, 411, 456, 232,
	526, 479, 1144, 1148, 1142, 1209, 1143, 1198, 1199, 1145,
	1260, 1261, 1262, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 1231, 1138, 0, 1146, 1147, 1240, 1249, 1250,
	585, 371, 469, 523, 324, 336, 339, 329, 348, 0,
	349, 325, 326, 331, 333, 334, 335, 340, 341, 345,
	351, 240, 203, 377, 385, 503, 301, 208, 209, 210,
	496, 497, 498, 499, 537, 538, 542, 446, 447, 448,
	449, 282, 532, 298, 452, 451, 320, 321, 366, 434,
	1202, 192, 213, 355, 1265, 438, 278, 563, 536, 531,
	199, 215, 1141, 251, 1152, 1160, 0, 1166, 1174, 1175,
	1187, 1189, 1190, 1191, 1192, 1210, 1211, 1213, 1221, 1223,
	1226, 1228, 1235, 1246, 1268, 194, 195, 202, 214, 224,
	228, 235, 250, 265, 267, 274, 288, 299, 307, 308,
	311, 317, 367, 373, 374, 375, 376, 395, 396, 397,
	400, 403, 404, 407, 409, 410, 413, 417, 421, 422,
	423, 424, 426, 428, 439, 444, 458, 459, 460, 461,
	462, 465, 466, 471, 472, 473, 474, 475, 483, 484,
	488, 511, 513, 525, 543, 548, 464, 290, 291, 429,
	430, 303, 304, 560, 561, 289, 520, 549, 0, 0,
	365, 1201, 1207, 368, 270, 294, 309, 1216, 535, 485,
	219, 450, 280, 242, 1234, 1236, 204, 238, 222, 248,
	263, 266, 313, 378, 386, 415, 420, 286, 260, 236,
	443, 233, 468, 491, 492, 493, 495, 382, 255, 419,
	1197, 1225, 363, 501, 502, 305, 383, 0, 0, 0,
	1254, 1239, 500, 0, 1182, 1257, 1151, 1170, 1267, 1173,
	1176, 1218, 1130, 1196, 402, 1167, 1123, 1155, 1125, 1162,
	1126, 1153, 1184, 259, 1150, 1241, 1200, 1256, 353, 256,
	1132, 1156, 416, 1172, 198, 1220, 470, 243, 364, 361,
	508, 271, 262, 258, 241, 306, 372, 414, 490, 408,
	1263, 357, 1206, 0, 480, 387, 0, 0, 0, 1186,
	1245, 1194, 1232, 1181, 1219, 1140, 1205, 1258, 1168, 1215,
	1259, 312, 239, 314, 197, 399, 481, 275, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	338, 347, 346, 327, 328, 330, 332, 337, 344, 350,
	1164, 1212, 1253, 1165, 1214, 254, 310, 261, 253, 505,
	1264, 1244, 1129, 1193, 1252, 0, 0, 221, 1255, 1188,
	0, 1217, 0, 1270, 1124, 1208, 0, 1127, 1131, 1266,
	1248, 1159, 264, 0, 0, 0, 0, 0, 0, 0,
	1185, 1195, 1229, 1233, 1179, 0, 0, 0, 0, 0,
	2707, 0, 1157, 0, 1204, 0, 0, 0, 1136, 1128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1183, 0, 0, 0, 0, 1139, 0, 1158,
	1230, 0, 1122, 287, 1133, 388, 246, 0, 437, 277,
	1237, 1247, 1180, 545, 1251, 1178, 1177, 1224, 1137, 1243,
	1171, 352, 1135, 319, 193, 217, 0, 1169, 398, 445,
	457, 1242, 1154, 1163, 244, 1161, 455, 412, 524, 225,
	273, 442, 418, 453, 425, 276, 1203, 1222, 454, 359,
	510, 435, 521, 546, 547, 252, 392, 533, 494, 541,
	562, 218, 249, 406, 487, 527, 477, 384, 506, 507,
	318, 476, 285, 196, 356, 552, 216, 463, 358, 234,
	223, 512, 530, 279, 440, 205, 489, 519, 231, 467,
	0, 0, 564, 207, 517, 486, 380, 315, 316, 206,
	0, 441, 257, 283, 247, 401, 514, 515, 245, 565,
	220, 540, 212, 1134, 539, 394, 509, 518, 381, 370,
	211, 516, 379, 369, 323, 342, 343, 269, 296, 432,
	362, 433, 295, 297, 390, 389, 391, 200, 528, 0,
	201, 0, 482, 529, 566, 226, 227, 229, 1149, 268,
	272, 281, 284, 292, 293, 302, 354, 405, 431, 427,
	436, 1238, 504, 522, 534, 544, 550, 551, 553, 554,
	555, 556, 557, 559, 558, 393, 300, 478, 322, 360,
	1227, 1269, 411, 456, 232, 526, 479, 1144, 1148, 1142,
	1209, 1143, 1198, 1199, 1145, 1260, 1261, 1262, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 1231, 1138, 0,
	1146, 1147, 1240, 1249, 1250, 585, 371, 469, 523, 324,
	336, 339, 329, 348, 0, 349, 325, 326, 331, 333,
	334, 335, 340, 341, 345, 351, 240, 203, 377, 385,
	503, 301, 208, 209, 210, 496, 497, 498, 499, 537,
	538, 542, 446, 447, 448, 449, 282, 532, 298, 452,
	451, 320, 321, 366, 434, 1202, 192, 213, 355, 1265,
	438, 278, 563, 536, 531, 199, 215, 1141, 251, 1152,
	1160, 0, 1166, 1174, 1175, 1187, 1189, 1190, 1191, 1192,
	1210, 1211, 1213, 1221, 1223, 1226, 1228, 1235, 1246, 1268,
	194, 195, 202, 214, 224, 228, 235, 250, 265, 267,
	274, 288, 299, 307, 308, 311, 317, 367, 373, 374,
	375, 376, 395, 396, 397, 400, 403, 404, 407, 409,
	410, 413, 417, 421, 422, 423, 424, 426, 428, 439,
	444, 458, 459, 460, 461, 462, 465, 466, 471, 472,
	473, 474, 475, 483, 484, 488, 511, 513, 525, 543,
	548, 464, 290, 291, 429, 430, 303, 304, 560, 561,
	289, 520, 549, 0, 0, 365, 1201, 1207, 368, 270,
	294, 309, 1216, 535, 485, 219, 450, 280, 242, 1234,
	1236, 204, 238, 222, 248, 263, 266, 313, 378, 386,
	415, 420, 286, 260, 236, 443, 233, 468, 491, 492,
	493, 495, 382, 255, 419, 1197, 1225, 363, 501, 502,
	305, 383, 0, 0, 0, 1254, 1239, 500, 0, 1182,
	1257, 1151, 1170, 1267, 1173, 1176, 1218, 1130, 1196, 402,
	1167, 1123, 1155, 1125, 1162, 1126, 1153, 1184, 259, 1150,
	1241, 1200, 1256, 353, 256, 1132, 1156, 416, 1172, 198,
	1220, 470, 243, 364, 361, 508, 271, 262, 258, 241,
	306, 372, 414, 490, 408, 1263, 357, 1206, 0, 480,
	387, 0, 0, 0, 1186, 1245, 1194, 1232, 1181, 1219,
	1140, 1205, 1258, 1168, 1215, 1259, 312, 239, 314, 197,
	399, 481, 275, 0, 0, 0, 0, 0, 805, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 237, 0, 0, 0, 338, 347, 346, 327, 328,
	330, 332, 337, 344, 350, 1164, 1212, 1253, 1165, 1214,
	254, 310, 261, 253, 505, 1264, 1244, 1129, 1193, 1252,
	0, 0, 221, 1255, 1188, 0, 1217, 0, 1270, 1124,
	1208, 0, 1127, 1131, 1266, 1248, 1159, 264, 0, 0,
	0, 0, 0, 0, 0, 1185, 1195, 1229, 1233, 1179,
	0, 0, 0, 0, 0, 2057, 0, 1157, 0, 1204,
	0, 0, 0, 1136, 1128, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1183, 0, 0,
	0, 0, 1139, 0, 1158, 1230, 0, 1122, 287, 1133,
	388, 246, 0, 437, 277, 1237, 1247, 1180, 545, 1251,
	1178, 1177, 1224, 1137, 1243, 1171, 352, 1135, 319, 193,
	217, 0, 1169, 398, 445, 457, 1242, 1154, 1163, 244,
	1161, 455, 412, 524, 225, 273, 442, 418, 453, 425,
	276, 1203, 1222, 454, 359, 510, 435, 521, 546, 547,
	252, 392, 533, 494, 541, 562, 218, 249, 406, 487,
	527, 477, 384, 506, 507, 318, 476, 285, 196, 356,
	552, 216, 463, 358, 234, 223, 512, 530, 279, 440,
	205, 489, 519, 231, 467, 0, 0, 564, 207, 517,
	486, 380, 315, 316, 206, 0, 441, 257, 283, 247,
	401, 514, 515, 245, 565, 220, 540, 212, 1134, 539,
	394, 509, 518, 381, 370, 211, 516, 379, 369, 323,
	342, 343, 269, 296, 432, 362, 433, 295, 297, 390,
	389, 391, 200, 528, 0, 201, 0, 482, 529, 566,
	226, 227, 229, 1149, 268, 272, 281, 284, 292, 293,
	302, 354, 405, 431, 427, 436, 1238, 504, 522, 534,
	544, 550, 551, 553, 554, 555, 556, 557, 559, 558,
	393, 300, 478, 322, 360, 1227, 1269, 411, 456, 232,
	526, 479, 1144, 1148, 1142, 1209, 1143, 1198, 1199, 1145,
	1260, 1261, 1262, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 1231, 1138, 0, 1146, 1147, 1240, 1249, 1250,
	585, 371, 469, 523, 324, 336, 339, 329, 348, 0,
	349, 325, 326, 331, 333, 334, 335, 340, 341, 345,
	351, 240, 203, 377, 385, 503, 301, 208, 209, 210,
	496, 497, 498, 499, 537, 538, 542, 446, 447, 448,
	449, 282, 532, 298, 452, 451, 320, 321, 366, 434,
	1202, 192, 213, 355, 1265, 438, 278, 563, 536, 531,
	199, 215, 1141, 251, 1152, 1160, 0, 1166, 1174, 1175,
	1187, 1189, 1190, 1191, 1192, 1210, 1211, 1213, 1221, 1223,
	1226, 1228, 1235, 1246, 1268, 194, 195, 202, 214, 224,
	228, 235, 250, 265, 267, 274, 288, 299, 307, 308,
	311, 317, 367, 373, 374, 375, 376, 395, 396, 397,
	400, 403, 404, 407, 409, 410, 413, 417, 421, 422,
	423, 424, 426, 428, 439, 444, 458, 459, 460, 461,
	462, 465, 466, 471, 472, 473, 474, 475, 483, 484,
	488, 511, 513, 525, 543, 548, 464, 290, 291, 429,
	430, 303, 304, 560, 561, 289, 520, 549, 0, 0,
	365, 1201, 1207, 368, 270, 294, 309, 1216, 535, 485,
	219, 450, 280, 242, 1234, 1236, 204, 238, 222, 248,
	263, 266, 313, 378, 386, 415, 420, 286, 260, 236,
	443, 233, 468, 491, 492, 493, 495, 382, 255, 419,
	1197, 1225, 363, 501, 502, 305, 383, 0, 0, 0,
	1254, 1239, 500, 0, 1182, 1257, 1151, 1170, 1267, 1173,
	1176, 1218, 1130, 1196, 402, 1167, 1123, 1155, 1125, 1162,
	1126, 1153, 1184, 259, 1150, 1241, 1200, 1256, 353, 256,
	1132, 1156, 416, 1172, 198, 1220, 470, 243, 364, 361,
	508, 271, 262, 258, 241, 306, 372, 414, 490, 408,
	1263, 357, 1206, 0, 480, 387, 0, 0, 0, 1186,
	1245, 1194, 1232, 1181, 1219, 1140, 1205, 1258, 1168, 1215,
	1259, 312, 239, 314, 197, 399, 481, 275, 0, 91,
	0, 0, 0, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	338, 347, 346, 327, 328, 330, 332, 337, 344, 350,
	1164, 1212, 1253, 1165, 1214, 254, 310, 261, 253, 505,
	1264, 1244, 1129, 1193, 1252, 0, 0, 221, 1255, 1188,
	0, 1217, 0, 1270, 1124, 1208, 0, 1127, 1131, 1266,
	1248, 1159, 264, 0, 0, 0, 0, 0, 0, 0,
	1185, 1195, 1229, 1233, 1179, 0, 0, 0, 0, 0,
	0, 0, 1157, 0, 1204, 0, 0, 0, 1136, 1128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1183, 0, 0, 0, 0, 1139, 0, 1158,
	1230, 0, 1122, 287, 1133, 388, 246, 0, 437, 277,
	1237, 1247, 1180, 545, 1251, 1178, 1177, 1224, 1137, 1243,
	1171, 352, 1135, 319, 193, 217, 0, 1169, 398, 445,
	457, 1242, 1154, 1163, 244, 1161, 455, 412, 524, 225,
	273, 442, 418, 453, 425, 276, 1203, 1222, 454, 359,
	510, 435, 521, 546, 547, 252, 392, 533, 494, 541,
	562, 218, 249, 406, 487, 527, 477, 384, 506, 507,
	318, 476, 285, 196, 356, 552, 216, 463, 358, 234,
	223, 512, 530, 279, 440, 205, 489, 519, 231, 467,
	0, 0, 564, 207, 517, 486, 380, 315, 316, 206,
	0, 441, 257, 283, 247, 401, 514, 515, 245, 565,
	220, 540, 212, 1134, 539, 394, 509, 518, 381, 370,
	211, 516, 379, 369, 323, 342, 343, 269, 296, 432,
	362, 433, 295, 297, 390, 389, 391, 200, 528, 0,
	201, 0, 482, 529, 566, 226, 227, 229, 1149, 268,
	272, 281, 284, 292, 293, 302, 354, 405, 431, 427,
	436, 1238, 504, 522, 534, 544, 550, 551, 553, 554,
	555, 556, 557, 559, 558, 393, 300, 478, 322, 360,
	1227, 1269, 411, 456, 232, 526, 479, 1144, 1148, 1142,
	1209, 1143, 1198, 1199, 1145, 1260, 1261, 1262, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 1231, 1138, 0,
	1146, 1147, 1240, 1249, 1250, 585, 371, 469, 523, 324,
	336, 339, 329, 348, 0, 349, 325, 326, 331, 333,
	334, 335, 340, 341, 345, 351, 240, 203, 377, 385,
	503, 301, 208, 209, 210, 496, 497, 498, 499, 537,
	538, 542, 446, 447, 448, 449, 282, 532, 298, 452,
	451, 320, 321, 366, 434, 1202, 192, 213, 355, 1265,
	438, 278, 563, 536, 531, 199, 215, 1141, 251, 1152,
	1160, 0, 1166, 1174, 1175, 1187, 1189, 1190, 1191, 1192,
	1210, 1211, 1213, 1221, 1223, 1226, 1228, 1235, 1246, 1268,
	194, 195, 202, 214, 224, 228, 235, 250, 265, 267,
	274, 288, 299, 307, 308, 311, 317, 367, 373, 374,
	375, 376, 395, 396, 397, 400, 403, 404, 407, 409,
	410, 413, 417, 421, 422, 423, 424, 426, 428, 439,
	444, 458, 459, 460, 461, 462, 465, 466, 471, 472,
	473, 474, 475, 483, 484, 488, 511, 513, 525, 543,
	548, 464, 290, 291, 429, 430, 303, 304, 560, 561,
	289, 520, 549, 0, 0, 365, 1201, 1207, 368, 270,
	294, 309, 1216, 535, 485, 219, 450, 280, 242, 1234,
	1236, 204, 238, 222, 248, 263, 266, 313, 378, 386,
	415, 420, 286, 260, 236, 443, 233, 468, 491, 492,
	493, 495, 382, 255, 419, 1197, 1225, 363, 501, 502,
	305, 383, 0, 0, 0, 1254, 1239, 500, 0, 1182,
	1257, 1151, 1170, 1267, 1173, 1176, 1218, 1130, 1196, 402,
	1167, 1123, 1155, 1125, 1162, 1126, 1153, 1184, 259, 1150,
	1241, 1200, 1256, 353, 256, 1132, 1156, 416, 1172, 198,
	1220, 470, 243, 364, 361, 508, 271, 262, 258, 241,
	306, 372, 414, 490, 408, 1263, 357, 1206, 0, 480,
	387, 0, 0, 0, 1186, 1245, 1194, 1232, 1181, 1219,
	1140, 1205, 1258, 1168, 1215, 1259, 312, 239, 314, 197,
	399, 481, 275, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 237, 0, 0, 0, 338, 347, 346, 327, 328,
	330, 332, 337, 344, 350, 1164, 1212, 1253, 1165, 1214,
	254, 310, 261, 253, 505, 1264, 1244, 1129, 1193, 1252,
	0, 0, 221, 1255, 1188, 0, 1217, 0, 1270, 1124,
	1208, 0, 1127, 1131, 1266, 1248, 1159, 264, 0, 0,
	0, 0, 0, 0, 0, 1185, 1195, 1229, 1233, 1179,
	0, 0, 0, 0, 0, 0, 0, 1157, 0, 1204,
	0, 0, 0, 1136, 1128, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1183, 0, 0,
	0, 0, 1139, 0, 1158, 1230, 0, 1122, 287, 1133,
	388, 246, 0, 437, 277, 1237, 1247, 1180, 545, 1251,
	1178, 1177, 1224, 1137, 1243, 1171, 352, 1135, 319, 193,
	217, 0, 1169, 398, 445, 457, 1242, 1154, 1163, 244,
	1161, 455, 412, 524, 225, 273, 442, 418, 453, 425,
	276, 1203, 1222, 454, 359, 510, 435, 521, 546, 547,
	252, 392, 533, 494, 541, 562, 218, 249, 406, 487,
	527, 477, 384, 506, 507, 318, 476, 285, 196, 356,
	552, 216, 463, 358, 234, 223, 512, 530, 279, 440,
	205, 489, 519, 231, 467, 0, 0, 564, 207, 517,
	486, 380, 315, 316, 206, 0, 441, 257, 283, 247,
	401, 514, 515, 245, 565, 220, 540, 212, 1134, 539,
	394, 509, 518, 381, 370, 211, 516, 379, 369, 323,
	342, 343, 269, 296, 432, 362, 433, 295, 297, 390,
	389, 391, 200, 528, 0, 201, 0, 482, 529, 566,
	226, 227, 229, 1149, 268, 272, 281, 284, 292, 293,
	302, 354, 405, 431, 427, 436, 1238, 504, 522, 534,
	544, 550, 551, 553, 554, 555, 556, 557, 559, 558,
	393, 300, 478, 322, 360, 1227, 1269, 411, 456, 232,
	526, 479, 1144, 1148, 1142, 1209, 1143, 1198, 1199, 1145,
	1260, 1261, 1262, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 1231, 1138, 0, 1146, 1147, 1240, 1249, 1250,
	585, 371, 469, 523, 324, 336, 339, 329, 348, 0,
	349, 325, 326, 331, 333, 334, 335, 340, 341, 345,
	351, 240, 203, 377, 385, 503, 301, 208, 209, 210,
	496, 497, 498, 499, 537, 538, 542, 446, 447, 448,
	449, 282, 532, 298, 452, 451, 320, 321, 366, 434,
	1202, 192, 213, 355, 1265, 438, 278, 563, 536, 531,
	199, 215, 1141, 251, 1152, 1160, 0, 1166, 1174, 1175,
	1187, 1189, 1190, 1191, 1192, 1210, 1211, 1213, 1221, 1223,
	1226, 1228, 1235, 1246, 1268, 194, 195, 202, 214, 224,
	228, 235, 250, 265, 267, 274, 288, 299, 307, 308,
	311, 317, 367, 373, 374, 375, 376, 395, 396, 397,
	400, 403, 404, 407, 409, 410, 413, 417, 421, 422,
	423, 424, 426, 428, 439, 444, 458, 459, 460, 461,
	462, 465, 466, 471, 472, 473, 474, 475, 483, 484,
	488, 511, 513, 525, 543, 548, 464, 290, 291, 429,
	430, 303, 304, 560, 561, 289, 520, 549, 0, 0,
	365, 1201, 1207, 368, 270, 294, 309, 1216, 535, 485,
	219, 450, 280, 242, 1234, 1236, 204, 238, 222, 248,
	263, 266, 313, 378, 386, 415, 420, 286, 260, 236,
	443, 233, 468, 491, 492, 493, 495, 382, 255, 419,
	1197, 1225, 363, 501, 502, 305, 383, 0, 0, 0,
	1254, 1239, 500, 0, 1182, 1257, 1151, 1170, 1267, 1173,
	1176, 1218, 1130, 1196, 402, 1167, 1123, 1155, 1125, 1162,
	1126, 1153, 1184, 259, 1150, 1241, 1200, 1256, 353, 256,
	1132, 1156, 416, 1172, 198, 1220, 470, 243, 364, 361,
	508, 271, 262, 258, 241, 306, 372, 414, 490, 408,
	1263, 357, 1206, 0, 480, 387, 0, 0, 0, 1186,
	1245, 1194, 1232, 1181, 1219, 1140, 1205, 1258, 1168, 1215,
	1259, 312, 239, 314, 197, 399, 481, 275, 0, 0,
	0, 0, 0, 805, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	338, 347, 346, 327, 328, 330, 332, 337, 344, 350,
	1164, 1212, 1253, 1165, 1214, 254, 310, 261, 253, 505,
	1264, 1244, 1129, 1193, 1252, 0, 0, 221, 1255, 1188,
	0, 1217, 0, 1270, 1124, 1208, 0, 1127, 1131, 1266,
	1248, 1159, 264, 0, 0, 0, 0, 0, 0, 0,
	1185, 1195, 1229, 1233, 1179, 0, 0, 0, 0, 0,
	0, 0, 1157, 0, 1204, 0, 0, 0, 1136, 1128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1183, 0, 0, 0, 0, 1139, 0, 1158,
	1230, 0, 1122, 287, 1133, 388, 246, 0, 437, 277,
	1237, 1247, 1180, 545, 1251, 1178, 1177, 1224, 1137, 1243,
	1171, 352, 1135, 319, 193, 217, 0, 1169, 398, 445,
	457, 1242, 1154, 1163, 244, 1161, 455, 412, 524, 225,
	273, 442, 418, 453, 425, 276, 1203, 1222, 454, 359,
	510, 435, 521, 546, 547, 252, 392, 533, 494, 541,
	562, 218, 249, 406, 487, 527, 477, 384, 506, 507,
	318, 476, 285, 196, 356, 552, 216, 463, 358, 234,
	223, 512, 530, 279, 440, 205, 489, 519, 231, 467,
	0, 0, 564, 207, 517, 486, 380, 315, 316, 206,
	0, 441, 257, 283, 247, 401, 514, 515, 245, 565,
	220, 540, 212, 1134, 539, 394, 509, 518, 381, 370,
	211, 516, 379, 369, 323, 342, 343, 269, 296, 432,
	362, 433, 295, 297, 390, 389, 391, 200, 528, 0,
	201, 0, 482, 529, 566, 226, 227, 229, 1149, 268,
	272, 281, 284, 292, 293, 302, 354, 405, 431, 427,
	436, 1238, 504, 522, 534, 544, 550, 551, 553, 554,
	555, 556, 557, 559, 558, 393, 300, 478, 322, 360,
	1227, 1269, 411, 456, 232, 526, 479, 1144, 1148, 1142,
	1209, 1143, 1198, 1199, 1145, 1260, 1261, 1262, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 1231, 1138, 0,
	1146, 1147, 1240, 1249, 1250, 585, 371, 469, 523, 324,
	336, 339, 329, 348, 0, 349, 325, 326, 331, 333,
	334, 335, 340, 341, 345, 351, 240, 203, 377, 385,
	503, 301, 208, 209, 210, 496, 497, 498, 499, 537,
	538, 542, 446, 447, 448, 449, 282, 532, 298, 452,
	451, 320, 321, 366, 434, 1202, 192, 213, 355, 1265,
	438, 278, 563, 536, 531, 199, 215, 1141, 251, 1152,
	1160, 0, 1166, 1174, 1175, 1187, 1189, 1190, 1191, 1192,
	1210, 1211, 1213, 1221, 1223, 1226, 1228, 1235, 1246, 1268,
	194, 195, 202, 214, 224, 228, 235, 250, 265, 267,
	274, 288, 299, 307, 308, 311, 317, 367, 373, 374,
	375, 376, 395, 396, 397, 400, 403, 404, 407, 409,
	410, 413, 417, 421, 422, 423, 424, 426, 428, 439,
	444, 458, 459, 460, 461, 462, 465, 466, 471, 472,
	473, 474, 475, 483, 484, 488, 511, 513, 525, 543,
	548, 464, 290, 291, 429, 430, 303, 304, 560, 561,
	289, 520, 549, 0, 0, 365, 1201, 1207, 368, 270,
	294, 309, 1216, 535, 485, 219, 450, 280, 242, 1234,
	1236, 204, 238, 222, 248, 263, 266, 313, 378, 386,
	415, 420, 286, 260, 236, 443, 233, 468, 491, 492,
	493, 495, 382, 255, 419, 1197, 1225, 363, 501, 502,
	305, 383, 0, 0, 0, 1254, 1239, 500, 0, 1182,
	1257, 1151, 1170, 1267, 1173, 1176, 1218, 1130, 1196, 402,
	1167, 1123, 1155, 1125, 1162, 1126, 1153, 1184, 259, 1150,
	1241, 1200, 1256, 353, 256, 1132, 1156, 416, 1172, 198,
	1220, 470, 243, 364, 361, 508, 271, 262, 258, 241,
	306, 372, 414, 490, 408, 1263, 357, 1206, 0, 480,
	387, 0, 0, 0, 1186, 1245, 1194, 1232, 1181, 1219,
	1140, 1205, 1258, 1168, 1215, 1259, 312, 239, 314, 197,
	399, 481, 275, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 237, 0, 0, 0, 338, 347, 346, 327, 328,
	330, 332, 337, 344, 350, 1164, 1212, 1253, 1165, 1214,
	254, 310, 261, 253, 505, 1264, 1244, 1129, 1193, 1252,
	0, 0, 221, 1255, 1188, 0, 1217, 0, 1270, 1124,
	1208, 0, 1127, 1131, 1266, 1248, 1159, 264, 0, 0,
	0, 0, 0, 0, 0, 1185, 1195, 1229, 1233, 1179,
	0, 0, 0, 0, 0, 0, 0, 1157, 0, 1204,
	0, 0, 0, 1136, 1128, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1183, 0, 0,
	0, 0, 1139, 0, 1158, 1230, 0, 1122, 287, 1133,
	388, 246, 0, 437, 277, 1237, 1247, 1180, 545, 1251,
	1178, 1177, 1224, 1137, 1243, 1171, 352, 1135, 319, 193,
	217, 0, 1169, 398, 445, 457, 1242, 1154, 1163, 244,
	1161, 455, 412, 524, 225, 273, 442, 418, 453, 425,
	276, 1203, 1222, 454, 359, 510, 435, 521, 546, 547,
	252, 392, 533, 494, 541, 562, 218, 249, 406, 487,
	527, 477, 384, 506, 507, 318, 476, 285, 196, 356,
	552, 216, 463, 358, 234, 223, 512, 530, 279, 440,
	205, 489, 519, 231, 467, 0, 0, 564, 207, 517,
	486, 380, 315, 316, 206, 0, 441, 257, 283, 247,
	401, 514, 515, 245, 565, 220, 540, 212, 1134, 539,
	394, 509, 518, 381, 370, 211, 516, 379, 369, 323,
	342, 343, 269, 296, 432, 362, 433, 295, 297, 390,
	389, 391, 200, 528, 0, 201, 0, 482, 529, 566,
	226, 227, 229, 1149, 268, 272, 281, 284, 292, 293,
	302, 354, 405, 431, 427, 436, 1238, 504, 522, 534,
	544, 550, 551, 553, 554, 555, 556, 557, 559, 558,
	393, 300, 478, 322, 360, 1227, 1269, 411, 456, 232,
	526, 479, 1144, 1148, 1142, 1209, 1143, 1198, 1199, 1145,
	1260, 1261, 1262, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 1231, 1138, 0, 1146, 1147, 1240, 1249, 1250,
	585, 371, 469, 523, 324, 336, 339, 329, 348, 0,
	349, 325, 326, 331, 333, 334, 335, 340, 341, 345,
	351, 240, 203, 377, 385, 503, 301, 208, 209, 210,
	496, 497, 498, 499, 537, 538, 542, 446, 447, 448,
	449, 282, 532, 298, 452, 451, 320, 321, 366, 434,
	1202, 192, 213, 355, 1265, 438, 278, 563, 536, 531,
	199, 215, 1141, 251, 1152, 1160, 0, 1166, 1174, 1175,
	1187, 1189, 1190, 1191, 1192, 1210, 1211, 1213, 1221, 1223,
	1226, 1228, 1235, 1246, 1268, 194, 195, 202, 214, 224,
	228, 235, 250, 265, 267, 274, 288, 299, 307, 308,
	311, 317, 367, 373, 374, 375, 376, 395, 396, 397,
	400, 403, 404, 407, 409, 410, 413, 417, 421, 422,
	423, 424, 426, 428, 439, 444, 458, 459, 460, 461,
	462, 465, 466, 471, 472, 473, 474, 475, 483, 484,
	488, 511, 513, 525, 543, 548, 464, 290, 291, 429,
	430, 303, 304, 560, 561, 289, 520, 549, 0, 0,
	365, 1201, 1207, 368, 270, 294, 309, 1216, 535, 485,
	219, 450, 280, 242, 1234, 1236, 204, 238, 222, 248,
	263, 266, 313, 378, 386, 415, 420, 286, 260, 236,
	443, 233, 468, 491, 492, 493, 495, 382, 255, 419,
	1197, 1225, 363, 501, 502, 305, 383, 0, 0, 0,
	0, 0, 500, 0, 684, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 671,
	0, 0, 0, 259, 676, 0, 0, 0, 353, 256,
	0, 0, 416, 0, 198, 0, 470, 243, 364, 361,
	508, 271, 262, 258, 241, 306, 372, 414, 490, 408,
	683, 357, 0, 0, 480, 387, 0, 0, 0, 0,
	0, 679, 680, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 239, 314, 197, 399, 481, 275, 0, 91,
	0, 0, 821, 805, 771, 772, 809, 822, 823, 824,
	825, 810, 0, 230, 811, 812, 237, 813, 0, 770,
	711, 713, 712, 730, 731, 732, 733, 734, 735, 736,
	709, 818, 826, 827, 0, 254, 310, 261, 253, 505,
	0, 0, 1936, 1937, 1938, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 653, 668, 0, 682, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 666,
	0, 0, 0, 0, 765, 0, 667, 0, 0, 675,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 867,
	868, 869, 678, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 388, 246, 0, 437, 277,
	764, 0, 0, 545, 0, 0, 762, 0, 0, 0,
	0, 352, 0, 319, 193, 217, 0, 0, 398, 445,
	457, 0, 0, 0, 815, 0, 455, 412, 524, 225,
	273, 442, 418, 453, 425, 276, 0, 0, 454, 359,
	510, 435, 521, 546, 547, 252, 392, 533, 494, 541,
	562, 218, 249, 406, 487, 527, 477, 384, 506, 507,
	318, 476, 285, 196, 356, 552, 216, 463, 358, 234,
	223, 512, 530, 279, 440, 205, 489, 519, 231, 467,
	0, 0, 564, 207, 517, 486, 380, 315, 316, 206,
	0, 441, 257, 283, 247, 401, 816, 817, 245, 565,
	717, 540, 212, 0, 539, 394, 509, 518, 381, 370,
	211, 516, 379, 369, 323, 725, 726, 269, 296, 432,
	362, 433, 295, 297, 390, 389, 391, 200, 528, 0,
	201, 0, 482, 529, 566, 226, 227, 229, 0, 268,
	272, 281, 284, 292, 293, 302, 354, 405, 431, 427,
	436, 0, 504, 522, 534, 544, 550, 551, 553, 554,
	555, 556, 557, 559, 558, 393, 300, 478, 322, 360,
	0, 0, 411, 456, 232, 526, 479, 775, 763, 688,
	779, 690, 776, 777, 685, 686, 689, 778, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 766, 674, 673,
	0, 681, 0, 707, 708, 710, 714, 715, 716, 727,
	728, 729, 737, 739, 740, 738, 741, 742, 743, 746,
	747, 748, 749, 744, 745, 750, 691, 695, 692, 693,
	694, 706, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 789, 790, 791, 792, 793, 794, 720, 724,
	723, 721, 722, 718, 719, 672, 192, 213, 355, 0,
	438, 278, 563, 536, 531, 199, 215, 780, 251, 781,
	0, 0, 785, 0, 0, 0, 787, 786, 0, 788,
	754, 753, 0, 0, 782, 783, 0, 784, 0, 0,
	194, 195, 202, 214, 224, 228, 235, 250, 265, 267,
	274, 288, 299, 307, 308, 311, 317, 367, 373, 374,
	375, 376, 395, 396, 397, 400, 403, 404, 407, 409,
	410, 413, 417, 421, 422, 423, 424, 426, 428, 439,
	444, 458, 459, 460, 461, 462, 465, 466, 471, 472,
	473, 474, 475, 483, 484, 488, 511, 513, 525, 543,
	548, 464, 795, 796, 797, 798, 799, 800, 801, 802,
	289, 520, 549, 0, 0, 365, 0, 0, 368, 270,
	294, 309, 0, 535, 485, 219, 450, 280, 242, 820,
	0, 204, 238, 222, 248, 263, 266, 313, 378, 386,
	415, 420, 286, 260, 236, 443, 233, 468, 491, 492,
	493, 495, 382, 255, 419, 383, 0, 363, 501, 502,
	305, 500, 0, 684, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 671, 0,
	0, 0, 259, 676, 0, 0, 0, 353, 256, 0,
	0, 416, 0, 198, 0, 470, 243, 364, 361, 508,
	271, 262, 258, 241, 306, 372, 414, 490, 408, 683,
	357, 0, 0, 480, 387, 0, 0, 0, 0, 0,
	679, 680, 0, 0, 0, 0, 0, 0, 2086, 0,
	312, 239, 314, 197, 399, 481, 275, 0, 91, 0,
	0, 821, 805, 771, 772, 809, 822, 823, 824, 825,
	810, 0, 230, 811, 812, 237, 813, 0, 770, 711,
	713, 712, 730, 731, 732, 733, 734, 735, 736, 709,
	818, 826, 827, 2087, 254, 310, 261, 253, 505, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 653, 668, 0, 682, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 665, 666, 0,
	0, 0, 0, 765, 0, 667, 0, 0, 675, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 388, 246, 0, 437, 277, 764,
	0, 0, 545, 0, 0, 762, 0, 0, 0, 0,
	352, 0, 319, 193, 217, 0, 0, 398, 445, 457,
	0, 0, 0, 815, 0, 455, 412, 524, 225, 273,
	442, 418, 453, 425, 276, 0, 0, 454, 359, 510,
	435, 521, 546, 547, 252, 392, 533, 494, 541, 562,
	218, 249, 406, 487, 527, 477, 384, 506, 507, 318,
	476, 285, 196, 356, 552, 216, 463, 358, 234, 223,
	512, 530, 279, 440, 205, 489, 519, 231, 467, 0,
	0, 564, 207, 517, 486, 380, 315, 316, 206, 0,
	441, 257, 283, 247, 401, 816, 817, 245, 565, 717,
	540, 212, 0, 539, 394, 509, 518, 381, 370, 211,
	516, 379, 369, 323, 725, 726, 269, 296, 432, 362,
	433, 295, 297, 390, 389, 391, 200, 528, 0, 201,
	0, 482, 529, 566, 226, 227, 229, 0, 268, 272,
	281, 284, 292, 293, 302, 354, 405, 431, 427, 436,
	0, 504, 522, 534, 544, 550, 551, 553, 554, 555,
	556, 557, 559, 558, 393, 300, 478, 322, 360, 0,
	0, 411, 456, 232, 526, 479, 775, 763, 688, 779,
	690, 776, 777, 685, 686, 689, 778, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 766, 674, 673, 0,
	681, 0, 707, 708, 710, 714, 715, 716, 727, 728,
	729, 737, 739, 740, 738, 741, 742, 743, 746, 747,
	748, 749, 744, 745, 750, 691, 695, 692, 693, 694,
	706, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 789, 790, 791, 792, 793, 794, 720, 724, 723,
	721, 722, 718, 719, 672, 192, 213, 355, 0, 438,
	278, 563, 536, 531, 199, 215, 780, 251, 781, 0,
	0, 785, 0, 0, 0, 787, 786, 0, 788, 754,
	753, 0, 0, 782, 783, 0, 784, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 250, 265, 267, 274,
	288, 299, 307, 308, 311, 317, 367, 373, 374, 375,
	376, 395, 396, 397, 400, 403, 404, 407, 409, 410,
	413, 417, 421, 422, 423, 424, 426, 428, 439, 444,
	458, 459, 460, 461, 462, 465, 466, 471, 472, 473,
	474, 475, 483, 484, 488, 511, 513, 525, 543, 548,
	464, 795, 796, 797, 798, 799, 800, 801, 802, 289,
	520, 549, 0, 0, 365, 0, 0, 368, 270, 294,
	309, 0, 535, 485, 219, 450, 280, 242, 820, 0,
	204, 238, 222, 248, 263, 266, 313, 378, 386, 415,
	420, 286, 260, 236, 443, 233, 468, 491, 492, 493,
	495, 382, 255, 419, 0, 383, 363, 501, 502, 305,
	82, 500, 0, 684, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 671, 0,
	0, 0, 259, 676, 0, 0, 0, 353, 256, 0,
	0, 416, 0, 198, 0, 470, 243, 364, 361, 508,
	271, 262, 258, 241, 306, 372, 414, 490, 408, 683,
	357, 0, 0, 480, 387, 0, 0, 0, 0, 0,
	679, 680, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 239, 314, 197, 399, 481, 275, 0, 91, 0,
	0, 821, 805, 771, 772, 809, 822, 823, 824, 825,
	810, 0, 230, 811, 812, 237, 813, 0, 770, 711,
	713, 712, 730, 731, 732, 733, 734, 735, 736, 709,
	818, 826, 827, 0, 254, 310, 261, 253, 505, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 653, 668, 0, 682, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 665, 666, 0,
	0, 0, 0, 765, 0, 667, 0, 0, 675, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 388, 246, 0, 437, 277, 764,
	0, 0, 545, 0, 0, 762, 0, 0, 0, 0,
	352, 0, 319, 193, 217, 0, 0, 398, 445, 457,
	0, 0, 0, 815, 0, 455, 412, 524, 225, 273,
	442, 418, 453, 425, 276, 0, 0, 454, 359, 510,
	435, 521, 546, 547, 252, 392, 533, 494, 541, 562,
	218, 249, 406, 487, 527, 477, 384, 506, 507, 318,
	476, 285, 196, 356, 552, 216, 463, 358, 234, 223,
	512, 530, 279, 440, 205, 489, 519, 231, 467, 0,
	0, 564, 207, 517, 486, 380, 315, 316, 206, 0,
	441, 257, 283, 247, 401, 816, 817, 245, 565, 717,
	540, 212, 0, 539, 394, 509, 518, 381, 370, 211,
	516, 379, 369, 323, 725, 726, 269, 296, 432, 362,
	433, 295, 297, 390, 389, 391, 200, 528, 0, 201,
	0, 482, 529, 566, 226, 227, 229, 0, 268, 272,
	281, 284, 292, 293, 302, 354, 405, 431, 427, 436,
	0, 504, 522, 534, 544, 550, 551, 553, 554, 555,
	556, 557, 559, 558, 393, 300, 478, 322, 360, 0,
	0, 411, 456, 232, 526, 479, 775, 763, 688, 779,
	690, 776, 777, 685, 686, 689, 778, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 766, 674, 673, 0,
	681, 0, 707, 708, 710, 714, 715, 716, 727, 728,
	729, 737, 739, 740, 738, 741, 742, 743, 746, 747,
	748, 749, 744, 745, 750, 691, 695, 692, 693, 694,
	706, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 789, 790, 791, 792, 793, 794, 720, 724, 723,
	721, 722, 718, 719, 672, 192, 213, 355, 90, 438,
	278, 563, 536, 531, 199, 215, 780, 251, 781, 0,
	0, 785, 0, 0, 0, 787, 786, 0, 788, 754,
	753, 0, 0, 782, 783, 0, 784, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 250, 265, 267, 274,
	288, 299, 307, 308, 311, 317, 367, 373, 374, 375,
	376, 395, 396, 397, 400, 403, 404, 407, 409, 410,
	413, 417, 421, 422, 423, 424, 426, 428, 439, 444,
	458, 459, 460, 461, 462, 465, 466, 471, 472, 473,
	474, 475, 483, 484, 488, 511, 513, 525, 543, 548,
	464, 795, 796, 797, 798, 799, 800, 801, 802, 289,
	520, 549, 0, 0, 365, 0, 0, 368, 270, 294,
	309, 0, 535, 485, 219, 450, 280, 242, 820, 0,
	204, 238, 222, 248, 263, 266, 313, 378, 386, 415,
	420, 286, 260, 236, 443, 233, 468, 491, 492, 493,
	495, 382, 255, 419, 383, 0, 363, 501, 502, 305,
	500, 0, 684, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 0, 0, 0, 0, 671, 0, 0,
	0, 259, 676, 0, 0, 0, 353, 256, 0, 0,
	416, 0, 198, 0, 470, 243, 364, 361, 508, 271,
	262, 258, 241, 306, 372, 414, 490, 408, 683, 357,
	0, 0, 480, 387, 0, 0, 0, 0, 0, 679,
	680, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	239, 314, 197, 399, 481, 275, 0, 91, 0, 0,
	821, 805, 771, 772, 809, 822, 823, 824, 825, 810,
	0, 230, 811, 812, 237, 813, 0, 770, 711, 713,
	712, 730, 731, 732, 733, 734, 735, 736, 709, 818,
	826, 827, 0, 254, 310, 261, 253, 505, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 653, 668, 0, 682, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 666, 0, 0,
	0, 0, 765, 0, 667, 0, 0, 675, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	678, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 388, 246, 0, 437, 277, 764, 0,
	0, 545, 0, 0, 762, 0, 0, 0, 0, 352,
	0, 319, 193, 217, 0, 0, 398, 445, 457, 0,
	0, 0, 815, 0, 455, 412, 524, 225, 273, 442,
	418, 453, 425, 276, 3397, 0, 454, 359, 510, 435,
	521, 546, 547, 252, 392, 533, 494, 541, 562, 218,
	249, 406, 487, 527, 477, 384, 506, 507, 318, 476,
	285, 196, 356, 552, 216, 463, 358, 234, 223, 512,
	530, 279, 440, 205, 489, 519, 231, 467, 0, 0,
	564, 207, 517, 486, 380, 315, 316, 206, 0, 441,
	257, 283, 247, 401, 816, 817, 245, 565, 717, 540,
	212, 0, 539, 394, 509, 518, 381, 370, 211, 516,
	379, 369, 323, 725, 726, 269, 296, 432, 362, 433,
	295, 297, 390, 389, 391, 200, 528, 0, 201, 0,
	482, 529, 566, 226, 227, 229, 0, 268, 272, 281,
	284, 292, 293, 302, 354, 405, 431, 427, 436, 0,
	504, 522, 534, 544, 550, 551, 553, 554, 555, 556,
	557, 559, 558, 393, 300, 478, 322, 360, 0, 0,
	411, 456, 232, 526, 479, 775, 763, 688, 779, 690,
	776, 777, 685, 686, 689, 778, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 766, 674, 673, 0, 681,
	0, 707, 708, 710, 714, 715, 716, 727, 728, 729,
	737, 739, 740, 738, 741, 742, 743, 746, 747, 748,
	749, 744, 745, 750, 691, 695, 692, 693, 694, 706,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	789, 790, 791, 792, 793, 794, 720, 724, 723, 721,
	722, 718, 719, 672, 192, 213, 355, 0, 438, 278,
	563, 536, 531, 199, 215, 780, 251, 781, 0, 0,
	785, 0, 0, 0, 787, 786, 0, 788, 754, 753,
	0, 0, 782, 783, 0, 784, 0, 0, 194, 195,
	202, 214, 224, 228, 235, 250, 265, 267, 274, 288,
	299, 307, 308, 311, 317, 367, 373, 374, 375, 376,
	395, 396, 397, 400, 403, 404, 407, 409, 410, 413,
	417, 421, 422, 423, 424, 426, 428, 439, 444, 458,
	459, 460, 461, 462, 465, 466, 471, 472, 473, 474,
	475, 483, 484, 488, 511, 513, 525, 543, 548, 464,
	795, 796, 797, 798, 799, 800, 801, 802, 289, 520,
	549, 0, 0, 365, 0, 0, 368, 270, 294, 309,
	0, 535, 485, 219, 450, 280, 242, 820, 0, 204,
	238, 222, 248, 263, 266, 313, 378, 386, 415, 420,
	286, 260, 236, 443, 233, 468, 491, 492, 493, 495,
	382, 255, 419, 383, 0, 363, 501, 502, 305, 500,
	0, 684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 671, 0, 0, 0,
	259, 676, 0, 0, 0, 353, 256, 0, 0, 416,
	0, 198, 0, 470, 243, 364, 361, 508, 271, 262,
	258, 241, 306, 372, 414, 490, 408, 683, 357, 0,
	0, 480, 387, 0, 0, 0, 0, 0, 679, 680,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 239,
	314, 197, 399, 481, 275, 0, 91, 0, 1504, 821,
	805, 771, 772, 809, 822, 823, 824, 825, 810, 0,
	230, 811, 812, 237, 813, 0, 770, 711, 713, 712,
	730, 731, 732, 733, 734, 735, 736, 709, 818, 826,
	827, 0, 254, 310, 261, 253, 505, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 653, 668, 0, 682, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 665, 666, 0, 0, 0,
	0, 765, 0, 667, 0, 0, 675, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 246, 0, 437, 277, 764, 0, 0,
	545, 0, 0, 762, 0, 0, 0, 0, 352, 0,
	319, 193, 217, 0, 0, 398, 445, 457, 0, 0,
	0, 815, 0, 455, 412, 524, 225, 273, 442, 418,
	453, 425, 276, 0, 0, 454, 359, 510, 435, 521,
	546, 547, 252, 392, 533, 494, 541, 562, 218, 249,
	406, 487, 527, 477, 384, 506, 507, 318, 476, 285,
	196, 356, 552, 216, 463, 358, 234, 223, 512, 530,
	279, 440, 205, 489, 519, 231, 467, 0, 0, 564,
	207, 517, 486, 380, 315, 316, 206, 0, 441, 257,
	283, 247, 401, 816, 817, 245, 565, 717, 540, 212,
	0, 539, 394, 509, 518, 381, 370, 211, 516, 379,
	369, 323, 725, 726, 269, 296, 432, 362, 433, 295,
	297, 390, 389, 391, 200, 528, 0, 201, 0, 482,
	529, 566, 226, 227, 229, 0, 268, 272, 281, 284,
	292, 293, 302, 354, 405, 431, 427, 436, 0, 504,
	522, 534, 544, 550, 551, 553, 554, 555, 556, 557,
	559, 558, 393, 300, 478, 322, 360, 0, 0, 411,
	456, 232, 526, 479, 775, 763, 688, 779, 690, 776,
	777, 685, 686, 689, 778, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 0, 766, 674, 673, 0, 681, 0,
	707, 708, 710, 714, 715, 716, 727, 728, 729, 737,
	739, 740, 738, 741, 742, 743, 746, 747, 748, 749,
	744, 745, 750, 691, 695, 692, 693, 694, 706, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 789,
	790, 791, 792, 793, 794, 720, 724, 723, 721, 722,
	718, 719, 672, 192, 213, 355, 0, 438, 278, 563,
	536, 531, 199, 215, 780, 251, 781, 0, 0, 785,
	0, 0, 0, 787, 786, 0, 788, 754, 753, 0,
	0, 782, 783, 0, 784, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 250, 265, 267, 274, 288, 299,
	307, 308, 311, 317, 367, 373, 374, 375, 376, 395,
	396, 397, 400, 403, 404, 407, 409, 410, 413, 417,
	421, 422, 423, 424, 426, 428, 439, 444, 458, 459,
	460, 461, 462, 465, 466, 471, 472, 473, 474, 475,
	483, 484, 488, 511, 513, 525, 543, 548, 464, 795,
	796, 797, 798, 799, 800, 801, 802, 289, 520, 549,
	0, 0, 365, 0, 0, 368, 270, 294, 309, 0,
	535, 485, 219, 450, 280, 242, 820, 0, 204, 238,
	222, 248, 263, 266, 313, 378, 386, 415, 420, 286,
	260, 236, 443, 233, 468, 491, 492, 493, 495, 382,
	255, 419, 383, 0, 363, 501, 502, 305, 500, 0,
	684, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 0, 0, 0, 0, 671, 0, 0, 0, 259,
	676, 0, 0, 0, 353, 256, 0, 0, 416, 0,
	198, 0, 470, 243, 364, 361, 508, 271, 262, 258,
	241, 306, 372, 414, 490, 408, 683, 357, 0, 0,
	480, 387, 0, 0, 0, 0, 0, 679, 680, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 239, 314,
	197, 399, 481, 275, 0, 91, 0, 0, 821, 805,
	771, 772, 809, 822, 823, 824, 825, 810, 0, 230,
	811, 812, 237, 813, 0, 770, 711, 713, 712, 730,
	731, 732, 733, 734, 735, 736, 709, 818, 826, 827,
	0, 254, 310, 261, 253, 505, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 653, 668, 0, 682, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 666, 910, 0, 0, 0,
	765, 0, 667, 0, 0, 675, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 869, 678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 388, 246, 0, 437, 277, 764, 0, 0, 545,
	0, 0, 762, 0, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 445, 457, 0, 0, 0,
	815, 0, 455, 412, 524, 225, 273, 442, 418, 453,
	425, 276, 0, 0, 454, 359, 510, 435, 521, 546,
	547, 252, 392, 533, 494, 541, 562, 218, 249, 406,
	487, 527, 477, 384, 506, 507, 318, 476, 285, 196,
	356, 552, 216, 463, 358, 234, 223, 512, 530, 279,
	440, 205, 489, 519, 231, 467, 0, 0, 564, 207,
	517, 486, 380, 315, 316, 206, 0, 441, 257, 283,
	247, 401, 816, 817, 245, 565, 717, 540, 212, 0,
	539, 394, 509, 518, 381, 370, 211, 516, 379, 369,
	323, 725, 726, 269, 296, 432, 362, 433, 295, 297,
	390, 389, 391, 200, 528, 0, 201, 0, 482, 529,
	566, 226, 227, 229, 0, 268, 272, 281, 284, 292,
	293, 302, 354, 405, 431, 427, 436, 0, 504, 522,
	534, 544, 550, 551, 553, 554, 555, 556, 557, 559,
	558, 393, 300, 478, 322, 360, 0, 0, 411, 456,
	232, 526, 479, 775, 763, 688, 779, 690, 776, 777,
	685, 686, 689, 778, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 766, 674, 673, 0, 681, 0, 707,
	708, 710, 714, 715, 716, 727, 728, 729, 737, 739,
	740, 738, 741, 742, 743, 746, 747, 748, 749, 744,
	745, 750, 691, 695, 692, 693, 694, 706, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 789, 790,
	791, 792, 793, 794, 720, 724, 723, 721, 722, 718,
	719, 672, 192, 213, 355, 0, 438, 278, 563, 536,
	531, 199, 215, 780, 251, 781, 0, 0, 785, 0,
	0, 0, 787, 786, 0, 788, 754, 753, 0, 0,
	782, 783, 0, 784, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 250, 265, 267, 274, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 424, 426, 428, 439, 444, 458, 459, 460,
	461, 462, 465, 466, 471, 472, 473, 474, 475, 483,
	484, 488, 511, 513, 525, 543, 548, 464, 795, 796,
	797, 798, 799, 800, 801, 802, 289, 520, 549, 0,
	0, 365, 0, 0, 368, 270, 294, 309, 0, 535,
	485, 219, 450, 280, 242, 820, 0, 204, 238, 222,
	248, 263, 266, 313, 378, 386, 415, 420, 286, 260,
	236, 443, 233, 468, 491, 492, 493, 495, 382, 255,
	419, 383, 0, 363, 501, 502, 305, 500, 0, 684,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 671, 0, 0, 0, 259, 676,
	0, 0, 0, 353, 256, 0, 0, 416, 0, 198,
	0, 470, 243, 364, 361, 508, 271, 262, 258, 241,
	306, 372, 414, 490, 408, 683, 357, 0, 0, 480,
	387, 0, 0, 0, 0, 0, 679, 680, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 239, 314, 197,
	399, 481, 275, 0, 91, 0, 0, 821, 805, 771,
	772, 809, 822, 823, 824, 825, 810, 0, 230, 811,
	812, 237, 813, 0, 770, 711, 713, 712, 730, 731,
	732, 733, 734, 735, 736, 709, 818, 826, 827, 0,
	254, 310, 261, 253, 505, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	653, 668, 0, 682, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 665, 666, 0, 0, 0, 0, 765,
	0, 667, 0, 0, 675, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 868, 869, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	388, 246, 0, 437, 277, 764, 0, 0, 545, 0,
	0, 762, 0, 0, 0, 0, 352, 0, 319, 193,
	217, 0, 0, 398, 445, 457, 0, 0, 0, 815,
	0, 455, 412, 524, 225, 273, 442, 418, 453, 425,
	276, 0, 0, 454, 359, 510, 435, 521, 546, 547,
	252, 392, 533, 494, 541, 562, 218, 249, 406, 487,
	527, 477, 384, 506, 507, 318, 476, 285, 196, 356,
	552, 216, 463, 358, 234, 223, 512, 530, 279, 440,
	205, 489, 519, 231, 467, 0, 0, 564, 207, 517,
	486, 380, 315, 316, 206, 0, 441, 257, 283, 247,
	401, 816, 817, 245, 565, 717, 540, 212, 0, 539,
	394, 509, 518, 381, 370, 211, 516, 379, 369, 323,
	725, 726, 269, 296, 432, 362, 433, 295, 297, 390,
	389, 391, 200, 528, 0, 201, 0, 482, 529, 566,
	226, 227, 229, 0, 268, 272, 281, 284, 292, 293,
	302, 354, 405, 431, 427, 436, 0, 504, 522, 534,
	544, 550, 551, 553, 554, 555, 556, 557, 559, 558,
	393, 300, 478, 322, 360, 0, 0, 411, 456, 232,
	526, 479, 775, 763, 688, 779, 690, 776, 777, 685,
	686, 689, 778, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 766, 674, 673, 0, 681, 0, 707, 708,
	710, 714, 715, 716, 727, 728, 729, 737, 739, 740,
	738, 741, 742, 743, 746, 747, 748, 749, 744, 745,
	750, 691, 695, 692, 693, 694, 706, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 789, 790, 791,
	792, 793, 794, 720, 724, 723, 721, 722, 718, 719,
	672, 192, 213, 355, 0, 438, 278, 563, 536, 531,
	199, 215, 780, 251, 781, 0, 0, 785, 0, 0,
	0, 787, 786, 0, 788, 754, 753, 0, 0, 782,
	783, 0, 784, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 250, 265, 267, 274, 288, 299, 307, 308,
	311, 317, 367, 373, 374, 375, 376, 395, 396, 397,
	400, 403, 404, 407, 409, 410, 413, 417, 421, 422,
	423, 424, 426, 428, 439, 444, 458, 459, 460, 461,
	462, 465, 466, 471, 472, 473, 474, 475, 483, 484,
	488, 511, 513, 525, 543, 548, 464, 795, 796, 797,
	798, 799, 800, 801, 802, 289, 520, 549, 0, 0,
	365, 0, 0, 368, 270, 294, 309, 0, 535, 485,
	219, 450, 280, 242, 820, 0, 204, 238, 222, 248,
	263, 266, 313, 378, 386, 415, 420, 286, 260, 236,
	443, 233, 468, 491, 492, 493, 495, 382, 255, 419,
	383, 0, 363, 501, 502, 305, 500, 0, 684, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 0,
	0, 0, 0, 671, 0, 0, 0, 259, 676, 0,
	0, 0, 353, 256, 0, 0, 416, 0, 198, 0,
	470, 243, 364, 361, 508, 271, 262, 258, 241, 306,
	372, 414, 490, 408, 683, 357, 0, 0, 480, 387,
	0, 0, 0, 0, 0, 679, 680, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 239, 314, 197, 399,
	481, 275, 0, 91, 0, 0, 821, 805, 771, 772,
	809, 822, 823, 824, 825, 810, 0, 230, 811, 812,
	237, 813, 0, 770, 711, 713, 712, 730, 731, 732,
	733, 734, 735, 736, 709, 818, 826, 827, 0, 254,
	310, 261, 253, 505, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	668, 0, 682, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 0, 0, 0, 0, 765, 0,
	667, 0, 0, 675, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 678, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 388,
	246, 0, 437, 277, 764, 0, 0, 545, 0, 0,
	762, 0, 0, 0, 0, 352, 0, 319, 193, 217,
	0, 0, 398, 445, 457, 0, 0, 0, 815, 0,
	455, 412, 524, 225, 273, 442, 418, 453, 425, 276,
	0, 0, 454, 359, 510, 435, 521, 546, 547, 252,
	392, 533, 494, 541, 562, 218, 249, 406, 487, 527,
	477, 384, 506, 507, 318, 476, 285, 196, 356, 552,
	216, 463, 358, 234, 223, 512, 530, 279, 440, 205,
	489, 519, 231, 467, 0, 0, 564, 207, 517, 486,
	380, 315, 316, 206, 0, 441, 257, 283, 247, 401,
	816, 817, 245, 565, 717, 540, 212, 0, 539, 394,
	509, 518, 381, 370, 211, 516, 379, 369, 323, 725,
	726, 269, 296, 432, 362, 433, 295, 297, 390, 389,
	391, 200, 528, 0, 201, 0, 482, 529, 566, 226,
	227, 229, 0, 268, 272, 281, 284, 292, 293, 302,
	354, 405, 431, 427, 436, 0, 504, 522, 534, 544,
	550, 551, 553, 554, 555, 556, 557, 559, 558, 393,
	300, 478, 322, 360, 0, 0, 411, 456, 232, 526,
	479, 775, 763, 688, 779, 690, 776, 777, 685, 686,
	689, 778, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 766, 674, 673, 0, 681, 0, 707, 708, 710,
	714, 715, 716, 727, 728, 729, 737, 739, 740, 738,
	741, 742, 743, 746, 747, 748, 749, 744, 745, 750,
	691, 695, 692, 693, 694, 706, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 789, 790, 791, 792,
	793, 794, 720, 724, 723, 721, 722, 718, 719, 672,
	192, 213, 355, 0, 438, 278, 563, 536, 531, 199,
	215, 780, 251, 781, 0, 0, 785, 0, 0, 0,
	787, 786, 0, 788, 754, 753, 0, 0, 782, 783,
	0, 784, 0, 0, 194, 195, 202, 214, 224, 228,
	235, 250, 265, 267, 274, 288, 299, 307, 308, 311,
	317, 367, 373, 374, 375, 376, 395, 396, 397, 400,
	403, 404, 407, 409, 410, 413, 417, 421, 422, 423,
	424, 426, 428, 439, 444, 458, 459, 460, 461, 462,
	465, 466, 471, 472, 473, 474, 475, 483, 484, 488,
	511, 513, 525, 543, 548, 464, 795, 796, 797, 798,
	799, 800, 801, 802, 289, 520, 549, 0, 0, 365,
	0, 0, 368, 270, 294, 309, 0, 535, 485, 219,
	450, 280, 242, 820, 0, 204, 238, 222, 248, 263,
	266, 313, 378, 386, 415, 420, 286, 260, 236, 443,
	233, 468, 491, 492, 493, 495, 382, 255, 419, 383,
	0, 363, 501, 502, 305, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 353, 256, 0, 0, 416, 0, 198, 0, 470,
	243, 364, 361, 508, 271, 262, 258, 241, 306, 372,
	414, 490, 408, 0, 357, 0, 0, 480, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 239, 314, 197, 399, 481,
	275, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 237,
	0, 0, 0, 338, 347, 346, 327, 328, 330, 332,
	337, 344, 350, 0, 0, 0, 0, 0, 254, 310,
	261, 253, 505, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 388, 246,
	0, 437, 277, 0, 0, 980, 545, 0, 0, 0,
	0, 0, 977, 978, 352, 938, 319, 193, 217, 971,
	975, 398, 445, 457, 0, 0, 0, 244, 0, 455,
	412, 524, 225, 273, 442, 418, 453, 425, 276, 0,
	0, 454, 359, 510, 435, 521, 546, 547, 252, 392,
	533, 494, 541, 562, 218, 249, 406, 487, 527, 477,
	384, 506, 507, 318, 476, 285, 196, 356, 552, 216,
	463, 358, 234, 223, 512, 530, 279, 440, 205, 489,
	519, 231, 467, 0, 0, 564, 207, 517, 486, 380,
	315, 316, 206, 0, 441, 257, 283, 247, 401, 514,
	515, 245, 565, 220, 540, 212, 0, 539, 394, 509,
	518, 381, 370, 211, 516, 379, 369, 323, 342, 343,
	269, 296, 432, 362, 433, 295, 297, 390, 389, 391,
	200, 528, 0, 201, 0, 482, 529, 566, 226, 227,
	229, 0, 268, 272, 281, 284, 292, 293, 302, 354,
	405, 431, 427, 436, 0, 504, 522, 534, 544, 550,
	551, 553, 554, 555, 556, 557, 559, 558, 393, 300,
	478, 322, 360, 0, 0, 411, 456, 232, 526, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 585, 371,
	469, 523, 324, 336, 339, 329, 348, 0, 349, 325,
	326, 331, 333, 334, 335, 340, 341, 345, 351, 240,
	203, 377, 385, 503, 301, 208, 209, 210, 496, 497,
	498, 499, 537, 538, 542, 446, 447, 448, 449, 282,
	532, 298, 452, 451, 320, 321, 366, 434, 0, 192,
	213, 355, 0, 438, 278, 563, 536, 531, 199, 215,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	250, 265, 267, 274, 288, 299, 307, 308, 311, 317,
	367, 373, 374, 375, 376, 395, 396, 397, 400, 403,
	404, 407, 409, 410, 413, 417, 421, 422, 423, 424,
	426, 428, 439, 444, 458, 459, 460, 461, 462, 465,
	466, 471, 472, 473, 474, 475, 483, 484, 488, 511,
	513, 525, 543, 548, 464, 290, 291, 429, 430, 303,
	304, 560, 561, 289, 520, 549, 0, 0, 365, 0,
	0, 368, 270, 294, 309, 0, 535, 485, 219, 450,
	280, 242, 0, 0, 204, 238, 222, 248, 263, 266,
	313, 378, 386, 415, 420, 286, 260, 236, 443, 233,
	468, 491, 492, 493, 495, 382, 255, 419, 383, 0,
	363, 501, 502, 305, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	353, 256, 0, 0, 416, 0, 198, 0, 470, 243,
	364, 361, 508, 271, 262, 258, 241, 306, 372, 414,
	490, 408, 0, 357, 0, 0, 480, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 239, 314, 197, 399, 481, 275,
	0, 0, 0, 0, 1467, 805, 0, 0, 1464, 0,
	0, 0, 0, 1462, 0, 230, 1463, 1461, 237, 1466,
	0, 770, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 254, 310, 261,
	253, 505, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 246, 0,
	437, 277, 0, 0, 0, 545, 0, 0, 0, 0,
	0, 0, 0, 352, 0, 319, 193, 217, 0, 0,
	398, 445, 457, 0, 0, 0, 244, 0, 455, 412,
	524, 225, 273, 442, 418, 453, 425, 276, 0, 0,
	454, 359, 510, 435, 521, 546, 547, 252, 392, 533,
	494, 541, 562, 218, 249, 406, 487, 527, 477, 384,
	506, 507, 318, 476, 285, 196, 356, 552, 216, 463,
	358, 234, 223, 512, 530, 279, 440, 205, 489, 519,
	231, 467, 0, 0, 564, 207, 517, 486, 380, 315,
	316, 206, 0, 441, 257, 283, 247, 401, 514, 515,
	245, 565, 220, 540, 212, 0, 539, 394, 509, 518,
	381, 370, 211, 516, 379, 369, 323, 342, 343, 269,
	296, 432, 362, 433, 295, 297, 390, 389, 391, 200,
	528, 0, 201, 0, 482, 529, 566, 226, 227, 229,
	0, 268, 272, 281, 284, 292, 293, 302, 354, 405,
	431, 427, 436, 0, 504, 522, 534, 544, 550, 551,
	553, 554, 555, 556, 557, 559, 558, 393, 300, 478,
	322, 360, 0, 0, 411, 456, 232, 526, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 371, 469,
	523, 324, 336, 339, 329, 348, 0, 349, 325, 326,
	331, 333, 334, 335, 340, 341, 345, 351, 240, 203,
	377, 385, 503, 301, 208, 209, 210, 496, 497, 498,
	499, 537, 538, 542, 446, 447, 448, 449, 282, 532,
	298, 452, 451, 320, 321, 366, 434, 0, 192, 213,
	355, 0, 438, 278, 563, 536, 531, 199, 215, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 195, 202, 214, 224, 228, 235, 250,
	265, 267, 274, 288, 299, 307, 308, 311, 317, 367,
	373, 374, 375, 376, 395, 396, 397, 400, 403, 404,
	407, 409, 410, 413, 417, 421, 422, 423, 424, 426,
	428, 439, 444, 458, 459, 460, 461, 462, 465, 466,
	471, 472, 473, 474, 475, 483, 484, 488, 511, 513,
	525, 543, 548, 464, 290, 291, 429, 430, 303, 304,
	560, 561, 289, 520, 549, 0, 0, 365, 0, 0,
	368, 270, 294, 309, 0, 535, 485, 219, 450, 280,
	242, 0, 0, 204, 238, 222, 248, 263, 266, 313,
	378, 386, 415, 420, 286, 260, 236, 443, 233, 468,
	491, 492, 493, 495, 382, 255, 419, 0, 383, 363,
	501, 502, 305, 82, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	353, 256, 0, 0, 416, 0, 198, 0, 470, 243,
	364, 361, 508, 271, 262, 258, 241, 306, 372, 414,
	490, 408, 0, 357, 0, 0, 480, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 239, 314, 197, 399, 481, 275,
	0, 91, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 254, 310, 261,
	253, 505, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 246, 0,
	437, 277, 0, 0, 0, 545, 0, 0, 0, 0,
	0, 0, 0, 352, 0, 319, 193, 217, 0, 0,
	398, 445, 457, 0, 0, 0, 244, 0, 455, 412,
	524, 225, 273, 442, 418, 453, 425, 276, 0, 0,
	454, 359, 510, 435, 521, 546, 547, 252, 392, 533,
	494, 541, 562, 218, 249, 406, 487, 527, 477, 384,
	506, 507, 318, 476, 285, 196, 356, 552, 216, 463,
	358, 234, 223, 512, 530, 279, 440, 205, 489, 519,
	231, 467, 0, 0, 564, 207, 517, 486, 380, 315,
	316, 206, 0, 441, 257, 283, 247, 401, 514, 515,
	245, 565, 220, 540, 212, 0, 539, 394, 509, 518,
	381, 370, 211, 516, 379, 369, 323, 342, 343, 269,
	296, 432, 362, 433, 295, 297, 390, 389, 391, 200,
	528, 0, 201, 0, 482, 529, 566, 226, 227, 229,
	0, 268, 272, 281, 284, 292, 293, 302, 354, 405,
	431, 427, 436, 0, 504, 522, 534, 544, 550, 551,
	553, 554, 555, 556, 557, 559, 558, 393, 300, 478,
	322, 360, 0, 0, 411, 456, 232, 526, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 371, 469,
	523, 324, 336, 339, 329, 348, 0, 349, 325, 326,
	331, 333, 334, 335, 340, 341, 345, 351, 240, 203,
	377, 385, 503, 301, 208, 209, 210, 496, 497, 498,
	499, 537, 538, 542, 446, 447, 448, 449, 282, 532,
	298, 452, 451, 320, 321, 366, 434, 0, 192, 213,
	355, 90, 438, 278, 563, 536, 531, 199, 215, 0,
	251, 0, 0, 0, 0, 0, 0, 2073, 0, 0,
	2072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 195, 202, 214, 224, 228, 235, 250,
	265, 267, 274, 288, 299, 307, 308, 311, 317, 367,
	373, 374, 375, 376, 395, 396, 397, 400, 403, 404,
	407, 409, 410, 413, 417, 421, 422, 423, 424, 426,
	428, 439, 444, 458, 459, 460, 461, 462, 465, 466,
	471, 472, 473, 474, 475, 483, 484, 488, 511, 513,
	525, 543, 548, 464, 290, 291, 429, 430, 303, 304,
	560, 561, 289, 520, 549, 0, 0, 365, 0, 0,
	368, 270, 294, 309, 0, 535, 485, 219, 450, 280,
	242, 0, 0, 204, 238, 222, 248, 263, 266, 313,
	378, 386, 415, 420, 286, 260, 236, 443, 233, 468,
	491, 492, 493, 495, 382, 255, 419, 1523, 0, 363,
	501, 502, 305, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 1525,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 353,
	256, 0, 0, 416, 0, 198, 0, 470, 243, 364,
	361, 508, 271, 262, 258, 241, 306, 372, 414, 490,
	408, 0, 357, 0, 0, 480, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 239, 314, 197, 399, 481, 275, 0,
	0, 0, 0, 1527, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 237, 0, 0,
	0, 338, 347, 346, 327, 328, 330, 332, 337, 344,
	350, 0, 0, 0, 0, 0, 254, 310, 261, 253,
	505, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 1301, 0, 1302, 1303, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 388, 246, 0, 437,
	277, 0, 0, 0, 545, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	445, 457, 0, 0, 0, 244, 0, 455, 412, 524,
	225, 273, 442, 418, 453, 425, 276, 0, 0, 454,
	359, 510, 435, 521, 546, 547, 252, 392, 533, 494,
	541, 562, 218, 249, 406, 487, 527, 477, 384, 506,
	507, 318, 476, 285, 196, 356, 552, 216, 463, 358,
	234, 223, 512, 530, 279, 440, 205, 489, 519, 231,
	467, 0, 0, 564, 207, 517, 486, 380, 315, 316,
	206, 0, 441, 257, 283, 247, 401, 514, 515, 245,
	565, 220, 540, 212, 0, 539, 394, 509, 518, 381,
	370, 211, 516, 379, 369, 323, 342, 343, 269, 296,
	432, 362, 433, 295, 297, 390, 389, 391, 200, 528,
	0, 201, 0, 482, 529, 566, 226, 227, 229, 0,
	268, 272, 281, 284, 292, 293, 302, 354, 405, 431,
	427, 436, 0, 504, 522, 534, 544, 550, 551, 553,
	554, 555, 556, 557, 559, 558, 393, 300, 478, 322,
	360, 0, 0, 411, 456, 232, 526, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 371, 469, 523,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 240, 203, 377,
	385, 503, 301, 208, 209, 210, 496, 497, 498, 499,
	537, 538, 542, 446, 447, 448, 449, 282, 532, 298,
	452, 451, 320, 321, 366, 434, 0, 192, 213, 355,
	0, 438, 278, 563, 536, 531, 199, 215, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 250, 265,
	267, 274, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 424, 426, 428,
	439, 444, 458, 459, 460, 461, 462, 465, 466, 471,
	472, 473, 474, 475, 483, 484, 488, 511, 513, 525,
	543, 548, 464, 290, 291, 429, 430, 303, 304, 560,
	561, 289, 520, 549, 0, 0, 365, 0, 0, 368,
	270, 294, 309, 0, 535, 485, 219, 450, 280, 242,
	0, 0, 204, 238, 222, 248, 263, 266, 313, 378,
	386, 415, 420, 286, 260, 236, 443, 233, 468, 491,
	492, 493, 495, 382, 255, 419, 0, 383, 363, 501,
	502, 305, 82, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 353,
	256, 0, 0, 416, 0, 198, 0, 470, 243, 364,
	361, 508, 271, 262, 258, 241, 306, 372, 414, 490,
	408, 0, 357, 0, 0, 480, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 239, 314, 197, 399, 481, 275, 0,
	91, 0, 1504, 0, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 237, 0, 0,
	0, 338, 347, 346, 327, 328, 330, 332, 337, 344,
	350, 0, 0, 0, 0, 0, 254, 310, 261, 253,
	505, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 388, 246, 0, 437,
	277, 0, 0, 0, 545, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	445, 457, 0, 0, 0, 244, 0, 455, 412, 524,
	225, 273, 442, 418, 453, 425, 276, 0, 0, 454,
	359, 510, 435, 521, 546, 547, 252, 392, 533, 494,
	541, 562, 218, 249, 406, 487, 527, 477, 384, 506,
	507, 318, 476, 285, 196, 356, 552, 216, 463, 358,
	234, 223, 512, 530, 279, 440, 205, 489, 519, 231,
	467, 0, 0, 564, 207, 517, 486, 380, 315, 316,
	206, 0, 441, 257, 283, 247, 401, 514, 515, 245,
	565, 220, 540, 212, 0, 539, 394, 509, 518, 381,
	370, 211, 516, 379, 369, 323, 342, 343, 269, 296,
	432, 362, 433, 295, 297, 390, 389, 391, 200, 528,
	0, 201, 0, 482, 529, 566, 226, 227, 229, 0,
	268, 272, 281, 284, 292, 293, 302, 354, 405, 431,
	427, 436, 0, 504, 522, 534, 544, 550, 551, 553,
	554, 555, 556, 557, 559, 558, 393, 300, 478, 322,
	360, 0, 0, 411, 456, 232, 526, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 371, 469, 523,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 240, 203, 377,
	385, 503, 301, 208, 209, 210, 496, 497, 498, 499,
	537, 538, 542, 446, 447, 448, 449, 282, 532, 298,
	452, 451, 320, 321, 366, 434, 0, 192, 213, 355,
	90, 438, 278, 563, 536, 531, 199, 215, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 250, 265,
	267, 274, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 424, 426, 428,
	439, 444, 458, 459, 460, 461, 462, 465, 466, 471,
	472, 473, 474, 475, 483, 484, 488, 511, 513, 525,
	543, 548, 464, 290, 291, 429, 430, 303, 304, 560,
	561, 289, 520, 549, 0, 0, 365, 0, 0, 368,
	270, 294, 309, 0, 535, 485, 219, 450, 280, 242,
	0, 0, 204, 238, 222, 248, 263, 266, 313, 378,
	386, 415, 420, 286, 260, 236, 443, 233, 468, 491,
	492, 493, 495, 382, 255, 419, 383, 0, 363, 501,
	502, 305, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 353, 256,
	0, 0, 416, 0, 198, 0, 470, 243, 364, 361,
	508, 271, 262, 258, 241, 306, 372, 414, 490, 408,
	0, 357, 0, 0, 480, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 239, 314, 197, 399, 481, 275, 0, 91,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	338, 347, 346, 327, 328, 330, 332, 337, 344, 350,
	0, 0, 0, 0, 0, 254, 310, 261, 253, 505,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 388, 246, 0, 437, 277,
	0, 0, 0, 545, 0, 0, 0, 0, 0, 0,
	0, 352, 0, 319, 193, 217, 0, 0, 398, 445,
	457, 0, 0, 0, 244, 0, 455, 412, 524, 225,
	273, 442, 418, 453, 425, 276, 0, 0, 454, 359,
	510, 435, 521, 546, 547, 252, 392, 533, 494, 541,
	562, 218, 249, 406, 487, 527, 477, 384, 506, 507,
	318, 476, 285, 196, 356, 552, 216, 463, 358, 234,
	223, 512, 530, 279, 440, 205, 489, 519, 231, 467,
	0, 0, 564, 207, 517, 486, 380, 315, 316, 206,
	0, 441, 257, 283, 247, 401, 514, 515, 245, 565,
	220, 540, 212, 0, 539, 394, 509, 518, 381, 370,
	211, 516, 379, 369, 323, 342, 343, 269, 296, 432,
	362, 433, 295, 297, 390, 389, 391, 200, 528, 0,
	201, 0, 482, 529, 566, 226, 227, 229, 0, 268,
	272, 281, 284, 292, 293, 302, 354, 405, 431, 427,
	436, 0, 504, 522, 534, 544, 550, 551, 553, 554,
	555, 556, 557, 559, 558, 393, 300, 478, 322, 360,
	0, 0, 411, 456, 232, 526, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 371, 469, 523, 324,
	336, 339, 329, 348, 0, 349, 325, 326, 331, 333,
	334, 335, 340, 341, 345, 351, 240, 203, 377, 385,
	503, 301, 208, 209, 210, 496, 497, 498, 499, 537,
	538, 542, 446, 447, 448, 449, 282, 532, 298, 452,
	451, 320, 321, 366, 434, 0, 192, 213, 355, 0,
	438, 278, 563, 536, 531, 199, 215, 0, 251, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 2072, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 195, 202, 214, 224, 228, 235, 250, 265, 267,
	274, 288, 299, 307, 308, 311, 317, 367, 373, 374,
	375, 376, 395, 396, 397, 400, 403, 404, 407, 409,
	410, 413, 417, 421, 422, 423, 424, 426, 428, 439,
	444, 458, 459, 460, 461, 462, 465, 466, 471, 472,
	473, 474, 475, 483, 484, 488, 511, 513, 525, 543,
	548, 464, 290, 291, 429, 430, 303, 304, 560, 561,
	289, 520, 549, 0, 0, 365, 0, 0, 368, 270,
	294, 309, 0, 535, 485, 219, 450, 280, 242, 0,
	0, 204, 238, 222, 248, 263, 266, 313, 378, 386,
	415, 420, 286, 260, 236, 443, 233, 468, 491, 492,
	493, 495, 382, 255, 419, 383, 0, 363, 501, 502,
	305, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 2023, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 353, 256, 0,
	0, 416, 0, 198, 0, 470, 243, 364, 361, 508,
	271, 262, 258, 241, 306, 372, 414, 490, 408, 0,
	357, 0, 0, 480, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 239, 314, 197, 399, 481, 275, 0, 0, 0,
	0, 1704, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 237, 0, 0, 0, 338,
	347, 346, 327, 328, 330, 332, 337, 344, 350, 0,
	0, 0, 0, 0, 254, 310, 261, 253, 505, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 388, 246, 0, 437, 277, 0,
	0, 0, 545, 0, 0, 0, 0, 0, 0, 0,
	352, 0, 319, 193, 217, 0, 0, 398, 445, 457,
	0, 0, 0, 244, 0, 455, 412, 524, 225, 273,
	442, 418, 453, 425, 276, 0, 2021, 454, 359, 510,
	435, 521, 546, 547, 252, 392, 533, 494, 541, 562,
	218, 249, 406, 487, 527, 477, 384, 506, 507, 318,
	476, 285, 196, 356, 552, 216, 463, 358, 234, 223,
	512, 530, 279, 440, 205, 489, 519, 231, 467, 0,
	0, 564, 207, 517, 486, 380, 315, 316, 206, 0,
	441, 257, 283, 247, 401, 514, 515, 245, 565, 220,
	540, 212, 0, 539, 394, 509, 518, 381, 370, 211,
	516, 379, 369, 323, 342, 343, 269, 296, 432, 362,
	433, 295, 297, 390, 389, 391, 200, 528, 0, 201,
	0, 482, 529, 566, 226, 227, 229, 0, 268, 272,
	281, 284, 292, 293, 302, 354, 405, 431, 427, 436,
	0, 504, 522, 534, 544, 550, 551, 553, 554, 555,
	556, 557, 559, 558, 393, 300, 478, 322, 360, 0,
	0, 411, 456, 232, 526, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 585, 371, 469, 523, 324, 336,
	339, 329, 348, 0, 349, 325, 326, 331, 333, 334,
	335, 340, 341, 345, 351, 240, 203, 377, 385, 503,
	301, 208, 209, 210, 496, 497, 498, 499, 537, 538,
	542, 446, 447, 448, 449, 282, 532, 298, 452, 451,
	320, 321, 366, 434, 0, 192, 213, 355, 0, 438,
	278, 563, 536, 531, 199, 215, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 250, 265, 267, 274,
	288, 299, 307, 308, 311, 317, 367, 373, 374, 375,
	376, 395, 396, 397, 400, 403, 404, 407, 409, 410,
	413, 417, 421, 422, 423, 424, 426, 428, 439, 444,
	458, 459, 460, 461, 462, 465, 466, 471, 472, 473,
	474, 475, 483, 484, 488, 511, 513, 525, 543, 548,
	464, 290, 291, 429, 430, 303, 304, 560, 561, 289,
	520, 549, 0, 0, 365, 0, 0, 368, 270, 294,
	309, 0, 535, 485, 219, 450, 280, 242, 0, 0,
	204, 238, 222, 248, 263, 266, 313, 378, 386, 415,
	420, 286, 260, 236, 443, 233, 468, 491, 492, 493,
	495, 382, 255, 419, 383, 0, 363, 501, 502, 305,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 353, 256, 0, 0,
	416, 0, 198, 0, 470, 243, 364, 361, 508, 271,
	262, 258, 241, 306, 372, 414, 490, 408, 0, 357,
	0, 0, 480, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	239, 314, 197, 399, 481, 275, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 338, 347,
	346, 327, 328, 330, 332, 337, 344, 350, 0, 0,
	0, 0, 0, 254, 310, 261, 253, 505, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 932,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 388, 246, 0, 437, 277, 0, 0,
	0, 545, 0, 0, 0, 0, 0, 0, 0, 352,
	938, 319, 193, 217, 936, 0, 398, 445, 457, 0,
	0, 0, 244, 0, 455, 412, 524, 225, 273, 442,
	418, 453, 425, 276, 0, 0, 454, 359, 510, 435,
	521, 546, 547, 252, 392, 533, 494, 541, 562, 218,
	249, 406, 487, 527, 477, 384, 506, 507, 318, 476,
	285, 196, 356, 552, 216, 463, 358, 234, 223, 512,
	530, 279, 440, 205, 489, 519, 231, 467, 0, 0,
	564, 207, 517, 486, 380, 315, 316, 206, 0, 441,
	257, 283, 247, 401, 514, 515, 245, 565, 220, 540,
	212, 0, 539, 394, 509, 518, 381, 370, 211, 516,
	379, 369, 323, 342, 343, 269, 296, 432, 362, 433,
	295, 297, 390, 389, 391, 200, 528, 0, 201, 0,
	482, 529, 566, 226, 227, 229, 0, 268, 272, 281,
	284, 292, 293, 302, 354, 405, 431, 427, 436, 0,
	504, 522, 534, 544, 550, 551, 553, 554, 555, 556,
	557, 559, 558, 393, 300, 478, 322, 360, 0, 0,
	411, 456, 232, 526, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 371, 469, 523, 324, 336, 339,
	329, 348, 0, 349, 325, 326, 331, 333, 334, 335,
	340, 341, 345, 351, 240, 203, 377, 385, 503, 301,
	208, 209, 210, 496, 497, 498, 499, 537, 538, 542,
	446, 447, 448, 449, 282, 532, 298, 452, 451, 320,
	321, 366, 434, 0, 192, 213, 355, 0, 438, 278,
	563, 536, 531, 199, 215, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 195,
	202, 214, 224, 228, 235, 250, 265, 267, 274, 288,
	299, 307, 308, 311, 317, 367, 373, 374, 375, 376,
	395, 396, 397, 400, 403, 404, 407, 409, 410, 413,
	417, 421, 422, 423, 424, 426, 428, 439, 444, 458,
	459, 460, 461, 462, 465, 466, 471, 472, 473, 474,
	475, 483, 484, 488, 511, 513, 525, 543, 548, 464,
	290, 291, 429, 430, 303, 304, 560, 561, 289, 520,
	549, 0, 0, 365, 0, 0, 368, 270, 294, 309,
	0, 535, 485, 219, 450, 280, 242, 0, 0, 204,
	238, 222, 248, 263, 266, 313, 378, 386, 415, 420,
	286, 260, 236, 443, 233, 468, 491, 492, 493, 495,
	382, 255, 419, 383, 0, 363, 501, 502, 305, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 2023, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 353, 256, 0, 0, 416,
	0, 198, 0, 470, 243, 364, 361, 508, 271, 262,
	258, 241, 306, 372, 414, 490, 408, 0, 357, 0,
	0, 480, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 239,
	314, 197, 399, 481, 275, 0, 0, 0, 0, 1704,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 254, 310, 261, 253, 505, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 246, 0, 437, 277, 0, 0, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 352, 0,
	319, 193, 217, 0, 0, 398, 445, 457, 0, 0,
	0, 244, 0, 455, 412, 524, 225, 273, 442, 418,
	453, 425, 276, 0, 0, 454, 359, 510, 435, 521,
	546, 547, 252, 392, 533, 494, 541, 562, 218, 249,
	406, 487, 527, 477, 384, 506, 507, 318, 476, 285,
	196, 356, 552, 216, 463, 358, 234, 223, 512, 530,
	279, 440, 205, 489, 519, 231, 467, 0, 0, 564,
	207, 517, 486, 380, 315, 316, 206, 0, 441, 257,
	283, 247, 401, 514, 515, 245, 565, 220, 540, 212,
	0, 539, 394, 509, 518, 381, 370, 211, 516, 379,
	369, 323, 342, 343, 269, 296, 432, 362, 433, 295,
	297, 390, 389, 391, 200, 528, 0, 201, 0, 482,
	529, 566, 226, 227, 229, 0, 268, 272, 281, 284,
	292, 293, 302, 354, 405, 431, 427, 436, 0, 504,
	522, 534, 544, 550, 551, 553, 554, 555, 556, 557,
	559, 558, 393, 300, 478, 322, 360, 0, 0, 411,
	456, 232, 526, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 371, 469, 523, 324, 336, 339, 329,
	348, 0, 349, 325, 326, 331, 333, 334, 335, 340,
	341, 345, 351, 240, 203, 377, 385, 503, 301, 208,
	209, 210, 496, 497, 498, 499, 537, 538, 542, 446,
	447, 448, 449, 282, 532, 298, 452, 451, 320, 321,
	366, 434, 0, 192, 213, 355, 0, 438, 278, 563,
	536, 531, 199, 215, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 250, 265, 267, 274, 288, 299,
	307, 308, 311, 317, 367, 373, 374, 375, 376, 395,
	396, 397, 400, 403, 404, 407, 409, 410, 413, 417,
	421, 422, 423, 424, 426, 428, 439, 444, 458, 459,
	460, 461, 462, 465, 466, 471, 472, 473, 474, 475,
	483, 484, 488, 511, 513, 525, 543, 548, 464, 290,
	291, 429, 430, 303, 304, 560, 561, 289, 520, 549,
	0, 0, 365, 0, 0, 368, 270, 294, 309, 0,
	535, 485, 219, 450, 280, 242, 0, 0, 204, 238,
	222, 248, 263, 266, 313, 378, 386, 415, 420, 286,
	260, 236, 443, 233, 468, 491, 492, 493, 495, 382,
	255, 419, 383, 0, 363, 501, 502, 305, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 353, 256, 0, 0, 416, 0,
	198, 0, 470, 243, 364, 361, 508, 271, 262, 258,
	241, 306, 372, 414, 490, 408, 0, 357, 0, 0,
	480, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 239, 314,
	197, 399, 481, 275, 0, 0, 0, 1504, 0, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 338, 347, 346, 327,
	328, 330, 332, 337, 344, 350, 0, 0, 0, 0,
	0, 254, 310, 261, 253, 505, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 388, 246, 0, 437, 277, 0, 0, 0, 545,
	0, 0, 0, 3307, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 445, 457, 0, 0, 0,
	244, 0, 455, 412, 524, 225, 273, 442, 418, 453,
	425, 276, 0, 0, 454, 359, 510, 435, 521, 546,
	547, 252, 392, 533, 494, 541, 562, 218, 249, 406,
	487, 527, 477, 384, 506, 507, 318, 476, 285, 196,
	356, 552, 216, 463, 358, 234, 223, 512, 530, 279,
	440, 205, 489, 519, 231, 467, 0, 0, 564, 207,
	517, 486, 380, 315, 316, 206, 0, 441, 257, 283,
	247, 401, 514, 515, 245, 565, 220, 540, 212, 0,
	539, 394, 509, 518, 381, 370, 211, 516, 379, 369,
	323, 342, 343, 269, 296, 432, 362, 433, 295, 297,
	390, 389, 391, 200, 528, 0, 201, 0, 482, 529,
	566, 226, 227, 229, 0, 268, 272, 281, 284, 292,
	293, 302, 354, 405, 431, 427, 436, 0, 504, 522,
	534, 544, 550, 551, 553, 554, 555, 556, 557, 559,
	558, 393, 300, 478, 322, 360, 0, 0, 411, 456,
	232, 526, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 371, 469, 523, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 240, 203, 377, 385, 503, 301, 208, 209,
	210, 496, 497, 498, 499, 537, 538, 542, 446, 447,
	448, 449, 282, 532, 298, 452, 451, 320, 321, 366,
	434, 0, 192, 213, 355, 0, 438, 278, 563, 536,
	531, 199, 215, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 250, 265, 267, 274, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 424, 426, 428, 439, 444, 458, 459, 460,
	461, 462, 465, 466, 471, 472, 473, 474, 475, 483,
	484, 488, 511, 513, 525, 543, 548, 464, 290, 291,
	429, 430, 303, 304, 560, 561, 289, 520, 549, 0,
	0, 365, 0, 0, 368, 270, 294, 309, 0, 535,
	485, 219, 450, 280, 242, 0, 0, 204, 238, 222,
	248, 263, 266, 313, 378, 386, 415, 420, 286, 260,
	236, 443, 233, 468, 491, 492, 493, 495, 382, 255,
	419, 383, 0, 363, 501, 502, 305, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 353, 256, 0, 0, 416, 0, 198,
	0, 470, 243, 364, 361, 508, 271, 262, 258, 241,
	306, 372, 414, 490, 408, 0, 357, 0, 0, 480,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 239, 314, 197,
	399, 481, 275, 0, 0, 0, 0, 1856, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 237, 0, 0, 0, 338, 347, 346, 327, 328,
	330, 332, 337, 344, 350, 0, 0, 0, 0, 0,
	254, 310, 261, 253, 505, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	388, 246, 0, 437, 277, 0, 0, 0, 545, 0,
	0, 0, 0, 0, 0, 0, 352, 0, 319, 193,
	217, 0, 0, 398, 445, 457, 0, 0, 0, 244,
	0, 455, 412, 524, 225, 273, 442, 418, 453, 425,
	276, 0, 0, 454, 359, 510, 435, 521, 546, 547,
	252, 392, 533, 494, 541, 562, 218, 249, 406, 487,
	527, 477, 384, 506, 507, 318, 476, 285, 196, 356,
	552, 216, 463, 358, 234, 223, 512, 530, 279, 440,
	205, 489, 519, 231, 467, 0, 0, 564, 207, 517,
	486, 380, 315, 316, 206, 0, 441, 257, 283, 247,
	401, 514, 515, 245, 565, 220, 540, 212, 0, 539,
	394, 509, 518, 381, 370, 211, 516, 379, 369, 323,
	342, 343, 269, 296, 432, 362, 433, 295, 297, 390,
	389, 391, 200, 528, 0, 201, 0, 482, 529, 566,
	226, 227, 229, 0, 268, 272, 281, 284, 292, 293,
	302, 354, 405, 431, 427, 436, 0, 504, 522, 534,
	544, 550, 551, 553, 554, 555, 556, 557, 559, 558,
	393, 300, 478, 322, 360, 0, 0, 411, 456, 232,
	526, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 371, 469, 523, 324, 336, 339, 329, 348, 0,
	349, 325, 326, 331, 333, 334, 335, 340, 341, 345,
	351, 240, 203, 377, 385, 503, 301, 208, 209, 210,
	496, 497, 498, 499, 537, 538, 542, 446, 447, 448,
	449, 282, 532, 298, 452, 451, 320, 321, 366, 434,
	0, 192, 213, 355, 0, 438, 278, 563, 536, 531,
	199, 215, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 250, 265, 267, 274, 288, 299, 307, 308,
	311, 317, 367, 373, 374, 375, 376, 395, 396, 397,
	400, 403, 404, 407, 409, 410, 413, 417, 421, 422,
	423, 424, 426, 428, 439, 444, 458, 459, 460, 461,
	462, 465, 466, 471, 472, 473, 474, 475, 483, 484,
	488, 511, 513, 525, 543, 548, 464, 290, 291, 429,
	430, 303, 304, 560, 561, 289, 520, 549, 0, 0,
	365, 0, 0, 368, 270, 294, 309, 0, 535, 485,
	219, 450, 280, 242, 0, 0, 204, 238, 222, 248,
	263, 266, 313, 378, 386, 415, 420, 286, 260, 236,
	443, 233, 468, 491, 492, 493, 495, 382, 255, 419,
	383, 0, 363, 501, 502, 305, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 353, 256, 0, 0, 416, 0, 198, 0,
	470, 243, 364, 361, 508, 271, 262, 258, 241, 306,
	372, 414, 490, 408, 0, 357, 0, 0, 480, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 239, 314, 197, 399,
	481, 275, 0, 0, 0, 0, 2428, 631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	237, 0, 0, 0, 338, 347, 346, 327, 328, 330,
	332, 337, 344, 350, 0, 0, 0, 0, 0, 254,
	310, 261, 253, 505, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2429, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 388,
	246, 0, 437, 277, 0, 0, 0, 545, 0, 0,
	0, 0, 0, 0, 0, 352, 0, 319, 193, 217,
	0, 0, 398, 445, 457, 0, 0, 0, 244, 0,
	455, 412, 524, 225, 273, 442, 418, 453, 425, 276,
	0, 0, 454, 359, 510, 435, 521, 546, 547, 252,
	392, 533, 494, 541, 562, 218, 249, 406, 487, 527,
	477, 384, 506, 507, 318, 476, 285, 196, 356, 552,
	216, 463, 358, 234, 223, 512, 530, 279, 440, 205,
	489, 519, 231, 467, 0, 0, 564, 207, 517, 486,
	380, 315, 316, 206, 0, 441, 257, 283, 247, 401,
	514, 515, 245, 565, 220, 540, 212, 0, 539, 394,
	509, 518, 381, 370, 211, 516, 379, 369, 323, 342,
	343, 269, 296, 432, 362, 433, 295, 297, 390, 389,
	391, 200, 528, 0, 201, 0, 482, 529, 566, 226,
	227, 229, 0, 268, 272, 281, 284, 292, 293, 302,
	354, 405, 431, 427, 436, 0, 504, 522, 534, 544,
	550, 551, 553, 554, 555, 556, 557, 559, 558, 393,
	300, 478, 322, 360, 0, 0, 411, 456, 232, 526,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 585,
	371, 469, 523, 324, 336, 339, 329, 348, 0, 349,
	325, 326, 331, 333, 334, 335, 340, 341, 345, 351,
	240, 203, 377, 385, 503, 301, 208, 209, 210, 496,
	497, 498, 499, 537, 538, 542, 446, 447, 448, 449,
	282, 532, 298, 452, 451, 320, 321, 366, 434, 0,
	192, 213, 355, 0, 438, 278, 563, 536, 531, 199,
	215, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 195, 202, 214, 224, 228,
	235, 250, 265, 267, 274, 288, 299, 307, 308, 311,
	317, 367, 373, 374, 375, 376, 395, 396, 397, 400,
	403, 404, 407, 409, 410, 413, 417, 421, 422, 423,
	424, 426, 428, 439, 444, 458, 459, 460, 461, 462,
	465, 466, 471, 472, 473, 474, 475, 483, 484, 488,
	511, 513, 525, 543, 548, 464, 290, 291, 429, 430,
	303, 304, 560, 561, 289, 520, 549, 0, 0, 365,
	0, 0, 368, 270, 294, 309, 0, 535, 485, 219,
	450, 280, 242, 0, 0, 204, 238, 222, 248, 263,
	266, 313, 378, 386, 415, 420, 286, 260, 236, 443,
	233, 468, 491, 492, 493, 495, 382, 255, 419, 383,
	0, 363, 501, 502, 305, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 353, 256, 0, 0, 416, 0, 198, 0, 470,
	243, 364, 361, 508, 271, 262, 258, 241, 306, 372,
	414, 490, 408, 0, 357, 0, 0, 480, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 239, 314, 197, 399, 481,
	275, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 2413, 0, 0, 0, 0, 230, 0, 0, 237,
	2414, 0, 0, 338, 347, 346, 327, 328, 330, 332,
	337, 344, 350, 0, 0, 0, 0, 0, 254, 310,
	261, 253, 505, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 388, 246,
	0, 437, 277, 0, 0, 0, 545, 0, 0, 0,
	0, 0, 0, 0, 352, 0, 319, 193, 217, 0,
	0, 398, 445, 457, 0, 0, 0, 244, 0, 455,
	412, 524, 225, 273, 442, 418, 453, 425, 276, 0,
	0, 454, 359, 510, 435, 521, 546, 547, 252, 392,
	533, 494, 541, 562, 218, 249, 406, 487, 527, 477,
	384, 506, 507, 318, 476, 285, 196, 356, 552, 216,
	463, 358, 234, 223, 512, 530, 279, 440, 205, 489,
	519, 231, 467, 0, 0, 564, 207, 517, 486, 380,
	315, 316, 206, 0, 441, 257, 283, 247, 401, 514,
	515, 245, 565, 220, 540, 212, 0, 539, 394, 509,
	518, 381, 370, 211, 516, 379, 369, 323, 342, 343,
	269, 296, 432, 362, 433, 295, 297, 390, 389, 391,
	200, 528, 0, 201, 0, 482, 529, 566, 226, 227,
	229, 0, 268, 272, 281, 284, 292, 293, 302, 354,
	405, 431, 427, 436, 0, 504, 522, 534, 544, 550,
	551, 553, 554, 555, 556, 557, 559, 558, 393, 300,
	478, 322, 360, 0, 0, 411, 456, 232, 526, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 585, 371,
	469, 523, 324, 336, 339, 329, 348, 0, 349, 325,
	326, 331, 333, 334, 335, 340, 341, 345, 351, 240,
	203, 377, 385, 503, 301, 208, 209, 210, 496, 497,
	498, 499, 537, 538, 542, 446, 447, 448, 449, 282,
	532, 298, 452, 451, 320, 321, 366, 434, 0, 192,
	213, 355, 0, 438, 278, 563, 536, 531, 199, 215,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	250, 265, 267, 274, 288, 299, 307, 308, 311, 317,
	367, 373, 374, 375, 376, 395, 396, 397, 400, 403,
	404, 407, 409, 410, 413, 417, 421, 422, 423, 424,
	426, 428, 439, 444, 458, 459, 460, 461, 462, 465,
	466, 471, 472, 473, 474, 475, 483, 484, 488, 511,
	513, 525, 543, 548, 464, 290, 291, 429, 430, 303,
	304, 560, 561, 289, 520, 549, 0, 0, 365, 0,
	0, 368, 270, 294, 309, 0, 535, 485, 219, 450,
	280, 242, 0, 0, 204, 238, 222, 248, 263, 266,
	313, 378, 386, 415, 420, 286, 260, 236, 443, 233,
	468, 491, 492, 493, 495, 382, 255, 419, 383, 0,
	363, 501, 502, 305, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 1546, 0, 0, 0,
	353, 256, 0, 0, 416, 0, 198, 0, 470, 243,
	364, 361, 508, 271, 262, 258, 241, 306, 372, 414,
	490, 408, 0, 357, 0, 0, 480, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 239, 314, 197, 399, 481, 275,
	0, 0, 0, 0, 1545, 631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 254, 310, 261,
	253, 505, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 246, 0,
	437, 277, 0, 0, 0, 545, 0, 0, 0, 0,
	0, 0, 0, 352, 0, 319, 193, 217, 0, 0,
	398, 445, 457, 0, 0, 0, 244, 0, 455, 412,
	524, 225, 273, 442, 418, 453, 425, 276, 0, 0,
	454, 359, 510, 435, 521, 546, 547, 252, 392, 533,
	494, 541, 562, 218, 249, 406, 487, 527, 477, 384,
	506, 507, 318, 476, 285, 196, 356, 552, 216, 463,
	358, 234, 223, 512, 530, 279, 440, 205, 489, 519,
	231, 467, 0, 0, 564, 207, 517, 486, 380, 315,
	316, 206, 0, 441, 257, 283, 247, 401, 514, 515,
	245, 565, 220, 540, 212, 0, 539, 394, 509, 518,
	381, 370, 211, 516, 379, 369, 323, 342, 343, 269,
	296, 432, 362, 433, 295, 297, 390, 389, 391, 200,
	528, 0, 201, 0, 482, 529, 566, 226, 227, 229,
	0, 268, 272, 281, 284, 292, 293, 302, 354, 405,
	431, 427, 436, 0, 504, 522, 534, 544, 550, 551,
	553, 554, 555, 556, 557, 559, 558, 393, 300, 478,
	322, 360, 0, 0, 411, 456, 232, 526, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 371, 469,
	523, 324, 336, 339, 329, 348, 0, 349, 325, 326,
	331, 333, 334, 335, 340, 341, 345, 351, 240, 203,
	377, 385, 503, 301, 208, 209, 210, 496, 497, 498,
	499, 537, 538, 542, 446, 447, 448, 449, 282, 532,
	298, 452, 451, 320, 321, 366, 434, 0, 192, 213,
	355, 0, 438, 278, 563, 536, 531, 199, 215, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 195, 202, 214, 224, 228, 235, 250,
	265, 267, 274, 288, 299, 307, 308, 311, 317, 367,
	373, 374, 375, 376, 395, 396, 397, 400, 403, 404,
	407, 409, 410, 413, 417, 421, 422, 423, 424, 426,
	428, 439, 444, 458, 459, 460, 461, 462, 465, 466,
	471, 472, 473, 474, 475, 483, 484, 488, 511, 513,
	525, 543, 548, 464, 290, 291, 429, 430, 303, 304,
	560, 561, 289, 520, 549, 0, 0, 365, 0, 0,
	368, 270, 294, 309, 0, 535, 485, 219, 450, 280,
	242, 0, 0, 204, 238, 222, 248, 263, 266, 313,
	378, 386, 415, 420, 286, 260, 236, 443, 233, 468,
	491, 492, 493, 495, 382, 255, 419, 383, 0, 363,
	501, 502, 305, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 353,
	256, 0, 0, 416, 0, 198, 0, 470, 243, 364,
	361, 508, 271, 262, 258, 241, 306, 372, 414, 490,
	408, 0, 357, 0, 0, 480, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 239, 314, 197, 399, 481, 275, 0,
	0, 0, 0, 0, 633, 634, 635, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 237, 0, 0,
	0, 338, 347, 346, 327, 328, 330, 332, 337, 344,
	350, 0, 0, 0, 0, 0, 254, 310, 261, 253,
	505, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 388, 246, 0, 437,
	277, 0, 0, 0, 545, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	445, 457, 0, 0, 0, 244, 0, 455, 412, 524,
	225, 273, 442, 418, 453, 425, 276, 0, 0, 454,
	359, 510, 435, 521, 546, 547, 252, 392, 533, 494,
	541, 562, 218, 249, 406, 487, 527, 477, 384, 506,
	507, 318, 476, 285, 196, 356, 552, 216, 463, 358,
	234, 223, 512, 530, 279, 440, 205, 489, 519, 231,
	467, 0, 0, 564, 207, 517, 486, 380, 315, 316,
	206, 0, 441, 257, 283, 247, 401, 514, 515, 245,
	565, 220, 540, 212, 0, 539, 394, 509, 518, 381,
	370, 211, 516, 379, 369, 323, 342, 343, 269, 296,
	432, 362, 433, 295, 297, 390, 389, 391, 200, 528,
	0, 201, 0, 482, 529, 566, 226, 227, 229, 0,
	268, 272, 281, 284, 292, 293, 302, 354, 405, 431,
	427, 436, 0, 504, 522, 534, 544, 550, 551, 553,
	554, 555, 556, 557, 559, 558, 393, 300, 478, 322,
	360, 0, 0, 411, 456, 232, 526, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 371, 469, 523,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 240, 203, 377,
	385, 503, 301, 208, 209, 210, 496, 497, 498, 499,
	537, 538, 542, 446, 447, 448, 449, 282, 532, 298,
	452, 451, 320, 321, 366, 434, 0, 192, 213, 355,
	0, 438, 278, 563, 536, 531, 199, 215, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 250, 265,
	267, 274, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 424, 426, 428,
	439, 444, 458, 459, 460, 461, 462, 465, 466, 471,
	472, 473, 474, 475, 483, 484, 488, 511, 513, 525,
	543, 548, 464, 290, 291, 429, 430, 303, 304, 560,
	561, 289, 520, 549, 0, 0, 365, 0, 0, 368,
	270, 294, 309, 0, 535, 485, 219, 450, 280, 242,
	0, 0, 204, 238, 222, 248, 263, 266, 313, 378,
	386, 415, 420, 286, 260, 236, 443, 233, 468, 491,
	492, 493, 495, 382, 255, 419, 383, 0, 363, 501,
	502, 305, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 353, 256,
	0, 0, 416, 0, 198, 0, 470, 243, 364, 361,
	508, 271, 262, 258, 241, 306, 372, 414, 490, 408,
	0, 357, 0, 0, 480, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 239, 314, 197, 399, 481, 275, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	338, 347, 346, 327, 328, 330, 332, 337, 344, 350,
	0, 0, 0, 0, 0, 254, 310, 261, 253, 505,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 388, 246, 0, 437, 277,
	0, 0, 0, 545, 0, 0, 0, 3431, 0, 0,
	0, 352, 0, 319, 193, 217, 0, 0, 398, 445,
	457, 0, 0, 0, 244, 0, 455, 412, 524, 225,
	273, 442, 418, 453, 425, 276, 0, 0, 454, 359,
	510, 435, 521, 546, 547, 252, 392, 533, 494, 541,
	562, 218, 249, 406, 487, 527, 477, 384, 506, 507,
	318, 476, 285, 196, 356, 552, 216, 463, 358, 234,
	223, 512, 530, 279, 440, 205, 489, 519, 231, 467,
	0, 0, 564, 207, 517, 486, 380, 315, 316, 206,
	0, 441, 257, 283, 247, 401, 514, 515, 245, 565,
	220, 540, 212, 0, 539, 394, 509, 518, 381, 370,
	211, 516, 379, 369, 323, 342, 343, 269, 296, 432,
	362, 433, 295, 297, 390, 389, 391, 200, 528, 0,
	201, 0, 482, 529, 566, 226, 227, 229, 0, 268,
	272, 281, 284, 292, 293, 302, 354, 405, 431, 427,
	436, 0, 504, 522, 534, 544, 550, 551, 553, 554,
	555, 556, 557, 559, 558, 393, 300, 478, 322, 360,
	0, 0, 411, 456, 232, 526, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 371, 469, 523, 324,
	336, 339, 329, 348, 0, 349, 325, 326, 331, 333,
	334, 335, 340, 341, 345, 351, 240, 203, 377, 385,
	503, 301, 208, 209, 210, 496, 497, 498, 499, 537,
	538, 542, 446, 447, 448, 449, 282, 532, 298, 452,
	451, 320, 321, 366, 434, 0, 192, 213, 355, 0,
	438, 278, 563, 536, 531, 199, 215, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 195, 202, 214, 224, 228, 235, 250, 265, 267,
	274, 288, 299, 307, 308, 311, 317, 367, 373, 374,
	375, 376, 395, 396, 397, 400, 403, 404, 407, 409,
	410, 413, 417, 421, 422, 423, 424, 426, 428, 439,
	444, 458, 459, 460, 461, 462, 465, 466, 471, 472,
	473, 474, 475, 483, 484, 488, 511, 513, 525, 543,
	548, 464, 290, 291, 429, 430, 303, 304, 560, 561,
	289, 520, 549, 0, 0, 365, 0, 0, 368, 270,
	294, 309, 0, 535, 485, 219, 450, 280, 242, 0,
	0, 204, 238, 222, 248, 263, 266, 313, 378, 386,
	415, 420, 286, 260, 236, 443, 233, 468, 491, 492,
	493, 495, 382, 255, 419, 383, 0, 363, 501, 502,
	305, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 353, 256, 0,
	0, 416, 0, 198, 0, 470, 243, 364, 361, 508,
	271, 262, 258, 241, 306, 372, 414, 490, 408, 0,
	357, 0, 0, 480, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 239, 314, 197, 399, 481, 275, 0, 0, 0,
	0, 1704, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 237, 0, 0, 0, 338,
	347, 346, 327, 328, 330, 332, 337, 344, 350, 0,
	0, 0, 0, 0, 254, 310, 261, 253, 505, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 388, 246, 0, 437, 277, 0,
	0, 0, 545, 0, 0, 0, 0, 0, 0, 0,
	352, 0, 319, 193, 217, 0, 0, 398, 445, 457,
	0, 0, 0, 244, 0, 455, 412, 524, 225, 273,
	442, 418, 453, 425, 276, 0, 0, 454, 359, 510,
	435, 521, 546, 547, 252, 392, 533, 494, 541, 562,
	218, 249, 406, 487, 527, 477, 384, 506, 507, 318,
	476, 285, 196, 356, 552, 216, 463, 358, 234, 223,
	512, 530, 279, 440, 205, 489, 519, 231, 467, 0,
	0, 564, 207, 517, 486, 380, 315, 316, 206, 0,
	441, 257, 283, 247, 401, 514, 515, 245, 565, 220,
	540, 212, 0, 539, 394, 509, 518, 381, 370, 211,
	516, 379, 369, 323, 342, 343, 269, 296, 432, 362,
	433, 295, 297, 390, 389, 391, 200, 528, 0, 201,
	0, 482, 529, 566, 226, 227, 229, 0, 268, 272,
	281, 284, 292, 293, 302, 354, 405, 431, 427, 436,
	0, 504, 522, 534, 544, 550, 551, 553, 554, 555,
	556, 557, 559, 558, 393, 300, 478, 322, 360, 0,
	0, 411, 456, 232, 526, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 585, 371, 469, 523, 324, 336,
	339, 329, 348, 0, 349, 325, 326, 331, 333, 334,
	335, 340, 341, 345, 351, 240, 203, 377, 385, 503,
	301, 208, 209, 210, 496, 497, 498, 499, 537, 538,
	542, 446, 447, 448, 449, 282, 532, 298, 452, 451,
	320, 321, 366, 434, 0, 192, 213, 355, 0, 438,
	278, 563, 536, 531, 199, 215, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 250, 265, 267, 274,
	288, 299, 307, 308, 311, 317, 367, 373, 374, 375,
	376, 395, 396, 397, 400, 403, 404, 407, 409, 410,
	413, 417, 421, 422, 423, 424, 426, 428, 439, 444,
	458, 459, 460, 461, 462, 465, 466, 471, 472, 473,
	474, 475, 483, 484, 488, 511, 513, 525, 543, 548,
	464, 290, 291, 429, 430, 303, 304, 560, 561, 289,
	520, 549, 0, 0, 365, 0, 0, 368, 270, 294,
	309, 0, 535, 485, 219, 450, 280, 242, 0, 0,
	204, 238, 222, 248, 263, 266, 313, 378, 386, 415,
	420, 286, 260, 236, 443, 233, 468, 491, 492, 493,
	495, 382, 255, 419, 383, 0, 363, 501, 502, 305,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 353, 256, 0, 0,
	416, 0, 198, 0, 470, 243, 364, 361, 508, 271,
	262, 258, 241, 306, 372, 414, 490, 408, 0, 357,
	0, 0, 480, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	239, 314, 197, 399, 481, 275, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 338, 347,
	346, 327, 328, 330, 332, 337, 344, 350, 0, 0,
	0, 0, 0, 254, 310, 261, 253, 505, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 388, 246, 0, 437, 277, 0, 0,
	0, 545, 0, 0, 0, 3307, 0, 0, 0, 352,
	0, 319, 193, 217, 0, 0, 398, 445, 457, 0,
	0, 0, 244, 0, 455, 412, 524, 225, 273, 442,
	418, 453, 425, 276, 0, 0, 454, 359, 510, 435,
	521, 546, 547, 252, 392, 533, 494, 541, 562, 218,
	249, 406, 487, 527, 477, 384, 506, 507, 318, 476,
	285, 196, 356, 552, 216, 463, 358, 234, 223, 512,
	530, 279, 440, 205, 489, 519, 231, 467, 0, 0,
	564, 207, 517, 486, 380, 315, 316, 206, 0, 441,
	257, 283, 247, 401, 514, 515, 245, 565, 220, 540,
	212, 0, 539, 394, 509, 518, 381, 370, 211, 516,
	379, 369, 323, 342, 343, 269, 296, 432, 362, 433,
	295, 297, 390, 389, 391, 200, 528, 0, 201, 0,
	482, 529, 566, 226, 227, 229, 0, 268, 272, 281,
	284, 292, 293, 302, 354, 405, 431, 427, 436, 0,
	504, 522, 534, 544, 550, 551, 553, 554, 555, 556,
	557, 559, 558, 393, 300, 478, 322, 360, 0, 0,
	411, 456, 232, 526, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 371, 469, 523, 324, 336, 339,
	329, 348, 0, 349, 325, 326, 331, 333, 334, 335,
	340, 341, 345, 351, 240, 203, 377, 385, 503, 301,
	208, 209, 210, 496, 497, 498, 499, 537, 538, 542,
	446, 447, 448, 449, 282, 532, 298, 452, 451, 320,
	321, 366, 434, 0, 192, 213, 355, 0, 438, 278,
	563, 536, 531, 199, 215, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 195,
	202, 214, 224, 228, 235, 250, 265, 267, 274, 288,
	299, 307, 308, 311, 317, 367, 373, 374, 375, 376,
	395, 396, 397, 400, 403, 404, 407, 409, 410, 413,
	417, 421, 422, 423, 424, 426, 428, 439, 444, 458,
	459, 460, 461, 462, 465, 466, 471, 472, 473, 474,
	475, 483, 484, 488, 511, 513, 525, 543, 548, 464,
	290, 291, 429, 430, 303, 304, 560, 561, 289, 520,
	549, 0, 0, 365, 0, 0, 368, 270, 294, 309,
	0, 535, 485, 219, 450, 280, 242, 0, 0, 204,
	238, 222, 248, 263, 266, 313, 378, 386, 415, 420,
	286, 260, 236, 443, 233, 468, 491, 492, 493, 495,
	382, 255, 419, 383, 0, 363, 501, 502, 305, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 353, 256, 0, 0, 416,
	0, 198, 0, 470, 243, 364, 361, 508, 271, 262,
	258, 241, 306, 372, 414, 490, 408, 0, 357, 0,
	0, 480, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 239,
	314, 197, 399, 481, 275, 0, 91, 0, 0, 0,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 254, 310, 261, 253, 505, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 246, 0, 437, 277, 0, 0, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 352, 0,
	319, 193, 217, 0, 0, 398, 445, 457, 0, 0,
	0, 244, 0, 455, 412, 524, 225, 273, 442, 418,
	453, 425, 276, 0, 0, 454, 359, 510, 435, 521,
	546, 547, 252, 392, 533, 494, 541, 562, 218, 249,
	406, 487, 527, 477, 384, 506, 507, 318, 476, 285,
	196, 356, 552, 216, 463, 358, 234, 223, 512, 530,
	279, 440, 205, 489, 519, 231, 467, 0, 0, 564,
	207, 517, 486, 380, 315, 316, 206, 0, 441, 257,
	283, 247, 401, 514, 515, 245, 565, 220, 540, 212,
	0, 539, 394, 509, 518, 381, 370, 211, 516, 379,
	369, 323, 342, 343, 269, 296, 432, 362, 433, 295,
	297, 390, 389, 391, 200, 528, 0, 201, 0, 482,
	529, 566, 226, 227, 229, 0, 268, 272, 281, 284,
	292, 293, 302, 354, 405, 431, 427, 436, 0, 504,
	522, 534, 544, 550, 551, 553, 554, 555, 556, 557,
	559, 558, 393, 300, 478, 322, 360, 0, 0, 411,
	456, 232, 526, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 371, 469, 523, 324, 336, 339, 329,
	348, 0, 349, 325, 326, 331, 333, 334, 335, 340,
	341, 345, 351, 240, 203, 377, 385, 503, 301, 208,
	209, 210, 496, 497, 498, 499, 537, 538, 542, 446,
	447, 448, 449, 282, 532, 298, 452, 451, 320, 321,
	366, 434, 0, 192, 213, 355, 0, 438, 278, 563,
	536, 531, 199, 215, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 250, 265, 267, 274, 288, 299,
	307, 308, 311, 317, 367, 373, 374, 375, 376, 395,
	396, 397, 400, 403, 404, 407, 409, 410, 413, 417,
	421, 422, 423, 424, 426, 428, 439, 444, 458, 459,
	460, 461, 462, 465, 466, 471, 472, 473, 474, 475,
	483, 484, 488, 511, 513, 525, 543, 548, 464, 290,
	291, 429, 430, 303, 304, 560, 561, 289, 520, 549,
	0, 0, 365, 0, 0, 368, 270, 294, 309, 0,
	535, 485, 219, 450, 280, 242, 0, 0, 204, 238,
	222, 248, 263, 266, 313, 378, 386, 415, 420, 286,
	260, 236, 443, 233, 468, 491, 492, 493, 495, 382,
	255, 419, 383, 0, 363, 501, 502, 305, 500, 0,
	0, 0, 0, 2074, 0, 0, 0, 0, 0, 0,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 353, 256, 0, 0, 416, 0,
	198, 0, 470, 243, 364, 361, 508, 271, 262, 258,
	241, 306, 372, 414, 490, 408, 0, 357, 0, 0,
	480, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 239, 314,
	197, 399, 481, 275, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 338, 347, 346, 327,
	328, 330, 332, 337, 344, 350, 0, 0, 0, 0,
	0, 254, 310, 261, 253, 505, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 388, 246, 0, 437, 277, 0, 0, 0, 545,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 445, 457, 0, 0, 0,
	244, 0, 455, 412, 524, 225, 273, 442, 418, 453,
	425, 276, 0, 0, 454, 359, 510, 435, 521, 546,
	547, 252, 392, 533, 494, 541, 562, 218, 249, 406,
	487, 527, 477, 384, 506, 507, 318, 476, 285, 196,
	356, 552, 216, 463, 358, 234, 223, 512, 530, 279,
	440, 205, 489, 519, 231, 467, 0, 0, 564, 207,
	517, 486, 380, 315, 316, 206, 0, 441, 257, 283,
	247, 401, 514, 515, 245, 565, 220, 540, 212, 0,
	539, 394, 509, 518, 381, 370, 211, 516, 379, 369,
	323, 342, 343, 269, 296, 432, 362, 433, 295, 297,
	390, 389, 391, 200, 528, 0, 201, 0, 482, 529,
	566, 226, 227, 229, 0, 268, 272, 281, 284, 292,
	293, 302, 354, 405, 431, 427, 436, 0, 504, 522,
	534, 544, 550, 551, 553, 554, 555, 556, 557, 559,
	558, 393, 300, 478, 322, 360, 0, 0, 411, 456,
	232, 526, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 371, 469, 523, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 240, 203, 377, 385, 503, 301, 208, 209,
	210, 496, 497, 498, 499, 537, 538, 542, 446, 447,
	448, 449, 282, 532, 298, 452, 451, 320, 321, 366,
	434, 0, 192, 213, 355, 0, 438, 278, 563, 536,
	531, 199, 215, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 250, 265, 267, 274, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 424, 426, 428, 439, 444, 458, 459, 460,
	461, 462, 465, 466, 471, 472, 473, 474, 475, 483,
	484, 488, 511, 513, 525, 543, 548, 464, 290, 291,
	429, 430, 303, 304, 560, 561, 289, 520, 549, 0,
	0, 365, 0, 0, 368, 270, 294, 309, 0, 535,
	485, 219, 450, 280, 242, 0, 0, 204, 238, 222,
	248, 263, 266, 313, 378, 386, 415, 420, 286, 260,
	236, 443, 233, 468, 491, 492, 493, 495, 382, 255,
	419, 383, 0, 363, 501, 502, 305, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 353, 256, 0, 0, 416, 0, 198,
	0, 470, 243, 364, 361, 508, 271, 262, 258, 241,
	306, 372, 414, 490, 408, 0, 357, 0, 0, 480,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 239, 314, 197,
	399, 481, 275, 0, 0, 0, 0, 1527, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 237, 0, 0, 0, 338, 347, 346, 327, 328,
	330, 332, 337, 344, 350, 0, 0, 0, 0, 0,
	254, 310, 261, 253, 505, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	388, 246, 0, 437, 277, 0, 0, 0, 545, 0,
	0, 0, 0, 0, 0, 0, 352, 0, 319, 193,
	217, 0, 0, 398, 445, 457, 0, 0, 0, 244,
	0, 455, 412, 524, 225, 273, 442, 418, 453, 425,
	276, 0, 0, 454, 359, 510, 435, 521, 546, 547,
	252, 392, 533, 494, 541, 562, 218, 249, 406, 487,
	527, 477, 384, 506, 507, 318, 476, 285, 196, 356,
	552, 216, 463, 358, 234, 223, 512, 530, 279, 440,
	205, 489, 519, 231, 467, 0, 0, 564, 207, 517,
	486, 380, 315, 316, 206, 0, 441, 257, 283, 247,
	401, 514, 515, 245, 565, 220, 540, 212, 0, 539,
	394, 509, 518, 381, 370, 211, 516, 379, 369, 323,
	342, 343, 269, 296, 432, 362, 433, 295, 297, 390,
	389, 391, 200, 528, 0, 201, 0, 482, 529, 566,
	226, 227, 229, 0, 268, 272, 281, 284, 292, 293,
	302, 354, 405, 431, 427, 436, 0, 504, 522, 534,
	544, 550, 551, 553, 554, 555, 556, 557, 559, 558,
	393, 300, 478, 322, 360, 0, 0, 411, 456, 232,
	526, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 371, 469, 523, 324, 336, 339, 329, 348, 0,
	349, 325, 326, 331, 333, 334, 335, 340, 341, 345,
	351, 240, 203, 377, 385, 503, 301, 208, 209, 210,
	496, 497, 498, 499, 537, 538, 542, 446, 447, 448,
	449, 282, 532, 298, 452, 451, 320, 321, 366, 434,
	0, 192, 213, 355, 0, 438, 278, 563, 536, 531,
	199, 215, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 250, 265, 267, 274, 288, 299, 307, 308,
	311, 317, 367, 373, 374, 375, 376, 395, 396, 397,
	400, 403, 404, 407, 409, 410, 413, 417, 421, 422,
	423, 424, 426, 428, 439, 444, 458, 459, 460, 461,
	462, 465, 466, 471, 472, 473, 474, 475, 483, 484,
	488, 511, 513, 525, 543, 548, 464, 290, 291, 429,
	430, 303, 304, 560, 561, 289, 520, 549, 0, 0,
	365, 0, 0, 368, 270, 294, 309, 0, 535, 485,
	219, 450, 280, 242, 0, 0, 204, 238, 222, 248,
	263, 266, 313, 378, 386, 415, 420, 286, 260, 236,
	443, 233, 468, 491, 492, 493, 495, 382, 255, 419,
	383, 0, 363, 501, 502, 305, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 353, 256, 0, 0, 416, 0, 198, 0,
	470, 243, 364, 361, 508, 271, 262, 258, 241, 306,
	372, 414, 490, 408, 0, 357, 0, 0, 480, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 239, 314, 197, 399,
	481, 275, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	237, 0, 0, 0, 338, 347, 346, 327, 328, 330,
	332, 337, 344, 350, 0, 0, 0, 0, 0, 254,
	310, 261, 253, 505, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 388,
	246, 0, 437, 277, 0, 0, 0, 545, 0, 0,
	0, 0, 0, 0, 0, 352, 0, 319, 193, 217,
	0, 0, 398, 445, 457, 0, 0, 0, 244, 0,
	455, 412, 524, 225, 273, 442, 418, 453, 425, 276,
	0, 0, 454, 359, 510, 435, 521, 546, 547, 252,
	392, 533, 494, 541, 562, 218, 249, 406, 487, 527,
	477, 384, 506, 507, 318, 476, 285, 196, 356, 552,
	216, 463, 358, 234, 223, 512, 530, 279, 440, 205,
	489, 519, 231, 467, 0, 0, 564, 207, 517, 486,
	380, 315, 316, 206, 0, 441, 257, 283, 247, 401,
	514, 515, 245, 565, 220, 540, 212, 0, 539, 394,
	509, 518, 381, 370, 211, 516, 379, 369, 323, 342,
	343, 269, 296, 432, 362, 433, 295, 297, 390, 389,
	391, 200, 528, 0, 201, 0, 482, 529, 566, 226,
	227, 229, 0, 268, 272, 281, 284, 292, 293, 302,
	354, 405, 431, 427, 436, 0, 504, 522, 534, 544,
	550, 551, 553, 554, 555, 556, 557, 559, 558, 393,
	300, 478, 322, 360, 0, 0, 411, 456, 232, 526,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 585,
	371, 469, 523, 324, 336, 339, 329, 348, 0, 349,
	325, 326, 331, 333, 334, 335, 340, 341, 345, 351,
	240, 203, 377, 385, 503, 301, 208, 209, 210, 496,
	497, 498, 499, 537, 538, 542, 446, 447, 448, 449,
	282, 532, 298, 452, 451, 320, 321, 366, 434, 0,
	192, 213, 355, 0, 438, 278, 563, 536, 531, 199,
	215, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 195, 202, 214, 224, 228,
	235, 250, 265, 267, 274, 288, 299, 307, 308, 311,
	317, 367, 373, 374, 375, 376, 395, 396, 397, 400,
	403, 404, 407, 409, 410, 413, 417, 421, 422, 423,
	424, 426, 428, 439, 444, 458, 459, 460, 461, 462,
	465, 466, 471, 472, 473, 474, 475, 483, 484, 488,
	511, 513, 525, 543, 548, 464, 290, 291, 429, 430,
	303, 304, 560, 561, 289, 520, 549, 0, 0, 365,
	0, 0, 368, 270, 294, 309, 0, 535, 485, 219,
	450, 280, 242, 0, 0, 204, 238, 222, 248, 263,
	266, 313, 378, 386, 415, 420, 286, 260, 236, 443,
	233, 468, 491, 492, 493, 495, 382, 255, 419, 383,
	0, 363, 501, 502, 305, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 353, 256, 0, 0, 416, 0, 198, 0, 470,
	243, 364, 361, 508, 271, 262, 258, 241, 306, 372,
	414, 490, 408, 0, 357, 0, 0, 480, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 239, 314, 197, 399, 481,
	275, 0, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 237,
	0, 0, 0, 338, 347, 346, 327, 328, 330, 332,
	337, 344, 350, 0, 0, 0, 0, 0, 254, 310,
	261, 253, 505, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 388, 246,
	0, 437, 277, 0, 0, 0, 545, 0, 0, 0,
	0, 0, 0, 0, 352, 0, 319, 193, 217, 0,
	0, 398, 445, 457, 0, 0, 0, 244, 0, 455,
	412, 524, 225, 273, 442, 418, 453, 425, 276, 0,
	0, 454, 359, 510, 435, 521, 546, 547, 252, 392,
	533, 494, 541, 562, 218, 249, 406, 487, 527, 477,
	384, 506, 507, 318, 476, 285, 196, 356, 552, 216,
	463, 358, 234, 223, 512, 530, 279, 440, 205, 489,
	519, 231, 467, 0, 0, 564, 207, 517, 486, 380,
	315, 316, 206, 0, 441, 257, 283, 247, 401, 514,
	515, 245, 565, 220, 540, 212, 0, 539, 394, 509,
	518, 381, 370, 211, 516, 379, 369, 323, 342, 343,
	269, 296, 432, 362, 433, 295, 297, 390, 389, 391,
	200, 528, 0, 201, 0, 482, 529, 566, 226, 227,
	229, 0, 268, 272, 281, 284, 292, 293, 302, 354,
	405, 431, 427, 436, 0, 504, 522, 534, 544, 550,
	551, 553, 554, 555, 556, 557, 559, 558, 393, 300,
	478, 322, 360, 0, 0, 411, 456, 232, 526, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 585, 371,
	469, 523, 324, 336, 339, 329, 348, 0, 349, 325,
	326, 331, 333, 334, 335, 340, 341, 345, 351, 240,
	203, 377, 385, 503, 301, 208, 209, 210, 496, 497,
	498, 499, 537, 538, 542, 446, 447, 448, 449, 282,
	532, 298, 452, 451, 320, 321, 366, 434, 0, 192,
	213, 355, 1811, 438, 278, 563, 536, 531, 199, 215,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	250, 265, 267, 274, 288, 299, 307, 308, 311, 317,
	367, 373, 374, 375, 376, 395, 396, 397, 400, 403,
	404, 407, 409, 410, 413, 417, 421, 422, 423, 424,
	426, 428, 439, 444, 458, 459, 460, 461, 462, 465,
	466, 471, 472, 473, 474, 475, 483, 484, 488, 511,
	513, 525, 543, 548, 464, 290, 291, 429, 430, 303,
	304, 560, 561, 289, 520, 549, 0, 0, 365, 0,
	0, 368, 270, 294, 309, 0, 535, 485, 219, 450,
	280, 242, 0, 0, 204, 238, 222, 248, 263, 266,
	313, 378, 386, 415, 420, 286, 260, 236, 443, 233,
	468, 491, 492, 493, 495, 382, 255, 419, 383, 0,
	363, 501, 502, 305, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	353, 256, 0, 0, 416, 0, 198, 0, 470, 243,
	364, 361, 508, 271, 262, 258, 241, 306, 372, 414,
	490, 408, 0, 357, 0, 0, 480, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 239, 314, 197, 399, 481, 275,
	0, 0, 0, 0, 1801, 631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 254, 310, 261,
	253, 505, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 246, 0,
	437, 277, 0, 0, 0, 545, 0, 0, 0, 0,
	0, 0, 0, 352, 0, 319, 193, 217, 0, 0,
	398, 445, 457, 0, 0, 0, 244, 0, 455, 412,
	524, 225, 273, 442, 418, 453, 425, 276, 0, 0,
	454, 359, 510, 435, 521, 546, 547, 252, 392, 533,
	494, 541, 562, 218, 249, 406, 487, 527, 477, 384,
	506, 507, 318, 476, 285, 196, 356, 552, 216, 463,
	358, 234, 223, 512, 530, 279, 440, 205, 489, 519,
	231, 467, 0, 0, 564, 207, 517, 486, 380, 315,
	316, 206, 0, 441, 257, 283, 247, 401, 514, 515,
	245, 565, 220, 540, 212, 0, 539, 394, 509, 518,
	381, 370, 211, 516, 379, 369, 323, 342, 343, 269,
	296, 432, 362, 433, 295, 297, 390, 389, 391, 200,
	528, 0, 201, 0, 482, 529, 566, 226, 227, 229,
	0, 268, 272, 281, 284, 292, 293, 302, 354, 405,
	431, 427, 436, 0, 504, 522, 534, 544, 550, 551,
	553, 554, 555, 556, 557, 559, 558, 393, 300, 478,
	322, 360, 0, 0, 411, 456, 232, 526, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 371, 469,
	523, 324, 336, 339, 329, 348, 0, 349, 325, 326,
	331, 333, 334, 335, 340, 341, 345, 351, 240, 203,
	377, 385, 503, 301, 208, 209, 210, 496, 497, 498,
	499, 537, 538, 542, 446, 447, 448, 449, 282, 532,
	298, 452, 451, 320, 321, 366, 434, 0, 192, 213,
	355, 0, 438, 278, 563, 536, 531, 199, 215, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 195, 202, 214, 224, 228, 235, 250,
	265, 267, 274, 288, 299, 307, 308, 311, 317, 367,
	373, 374, 375, 376, 395, 396, 397, 400, 403, 404,
	407, 409, 410, 413, 417, 421, 422, 423, 424, 426,
	428, 439, 444, 458, 459, 460, 461, 462, 465, 466,
	471, 472, 473, 474, 475, 483, 484, 488, 511, 513,
	525, 543, 548, 464, 290, 291, 429, 430, 303, 304,
	560, 561, 289, 520, 549, 0, 0, 365, 0, 0,
	368, 270, 294, 309, 0, 535, 485, 219, 450, 280,
	242, 0, 0, 204, 238, 222, 248, 263, 266, 313,
	378, 386, 415, 420, 286, 260, 236, 443, 233, 468,
	491, 492, 493, 495, 382, 255, 419, 383, 0, 363,
	501, 502, 305, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 0, 1671, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 353,
	256, 0, 0, 416, 0, 198, 0, 470, 243, 364,
	361, 508, 271, 262, 258, 241, 306, 372, 414, 490,
	408, 0, 357, 0, 0, 480, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 239, 314, 197, 399, 481, 275, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 237, 0, 0,
	0, 338, 347, 346, 327, 328, 330, 332, 337, 344,
	350, 0, 0, 0, 0, 0, 254, 310, 261, 253,
	505, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 388, 246, 0, 437,
	277, 0, 0, 0, 545, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	445, 457, 0, 0, 0, 244, 0, 455, 412, 524,
	225, 273, 442, 418, 453, 425, 276, 0, 0, 454,
	359, 510, 435, 521, 546, 547, 252, 392, 533, 494,
	541, 562, 218, 249, 406, 487, 527, 477, 384, 506,
	507, 318, 476, 285, 196, 356, 552, 216, 463, 358,
	234, 223, 512, 530, 279, 440, 205, 489, 519, 231,
	467, 0, 0, 564, 207, 517, 486, 380, 315, 316,
	206, 0, 441, 257, 283, 247, 401, 514, 515, 245,
	565, 220, 540, 212, 0, 539, 394, 509, 518, 381,
	370, 211, 516, 379, 369, 323, 342, 343, 269, 296,
	432, 362, 433, 295, 297, 390, 389, 391, 200, 528,
	0, 201, 0, 482, 529, 566, 226, 227, 229, 0,
	268, 272, 281, 284, 292, 293, 302, 354, 405, 431,
	427, 436, 0, 504, 522, 534, 544, 550, 551, 553,
	554, 555, 556, 557, 559, 558, 393, 300, 478, 322,
	360, 0, 0, 411, 456, 232, 526, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 371, 469, 523,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 240, 203, 377,
	385, 503, 301, 208, 209, 210, 496, 497, 498, 499,
	537, 538, 542, 446, 447, 448, 449, 282, 532, 298,
	452, 451, 320, 321, 366, 434, 0, 192, 213, 355,
	0, 438, 278, 563, 536, 531, 199, 215, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 250, 265,
	267, 274, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 424, 426, 428,
	439, 444, 458, 459, 460, 461, 462, 465, 466, 471,
	472, 473, 474, 475, 483, 484, 488, 511, 513, 525,
	543, 548, 464, 290, 291, 429, 430, 303, 304, 560,
	561, 289, 520, 549, 0, 0, 365, 0, 0, 368,
	270, 294, 309, 0, 535, 485, 219, 450, 280, 242,
	0, 0, 204, 238, 222, 248, 263, 266, 313, 378,
	386, 415, 420, 286, 260, 236, 443, 233, 468, 491,
	492, 493, 495, 382, 255, 419, 383, 0, 363, 501,
	502, 305, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 0, 1669, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 353, 256,
	0, 0, 416, 0, 198, 0, 470, 243, 364, 361,
	508, 271, 262, 258, 241, 306, 372, 414, 490, 408,
	0, 357, 0, 0, 480, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 239, 314, 197, 399, 481, 275, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	338, 347, 346, 327, 328, 330, 332, 337, 344, 350,
	0, 0, 0, 0, 0, 254, 310, 261, 253, 505,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 388, 246, 0, 437, 277,
	0, 0, 0, 545, 0, 0, 0, 0, 0, 0,
	0, 352, 0, 319, 193, 217, 0, 0, 398, 445,
	457, 0, 0, 0, 244, 0, 455, 412, 524, 225,
	273, 442, 418, 453, 425, 276, 0, 0, 454, 359,
	510, 435, 521, 546, 547, 252, 392, 533, 494, 541,
	562, 218, 249, 406, 487, 527, 477, 384, 506, 507,
	318, 476, 285, 196, 356, 552, 216, 463, 358, 234,
	223, 512, 530, 279, 440, 205, 489, 519, 231, 467,
	0, 0, 564, 207, 517, 486, 380, 315, 316, 206,
	0, 441, 257, 283, 247, 401, 514, 515, 245, 565,
	220, 540, 212, 0, 539, 394, 509, 518, 381, 370,
	211, 516, 379, 369, 323, 342, 343, 269, 296, 432,
	362, 433, 295, 297, 390, 389, 391, 200, 528, 0,
	201, 0, 482, 529, 566, 226, 227, 229, 0, 268,
	272, 281, 284, 292, 293, 302, 354, 405, 431, 427,
	436, 0, 504, 522, 534, 544, 550, 551, 553, 554,
	555, 556, 557, 559, 558, 393, 300, 478, 322, 360,
	0, 0, 411, 456, 232, 526, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 371, 469, 523, 324,
	336, 339, 329, 348, 0, 349, 325, 326, 331, 333,
	334, 335, 340, 341, 345, 351, 240, 203, 377, 385,
	503, 301, 208, 209, 210, 496, 497, 498, 499, 537,
	538, 542, 446, 447, 448, 449, 282, 532, 298, 452,
	451, 320, 321, 366, 434, 0, 192, 213, 355, 0,
	438, 278, 563, 536, 531, 199, 215, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 195, 202, 214, 224, 228, 235, 250, 265, 267,
	274, 288, 299, 307, 308, 311, 317, 367, 373, 374,
	375, 376, 395, 396, 397, 400, 403, 404, 407, 409,
	410, 413, 417, 421, 422, 423, 424, 426, 428, 439,
	444, 458, 459, 460, 461, 462, 465, 466, 471, 472,
	473, 474, 475, 483, 484, 488, 511, 513, 525, 543,
	548, 464, 290, 291, 429, 430, 303, 304, 560, 561,
	289, 520, 549, 0, 0, 365, 0, 0, 368, 270,
	294, 309, 0, 535, 485, 219, 450, 280, 242, 0,
	0, 204, 238, 222, 248, 263, 266, 313, 378, 386,
	415, 420, 286, 260, 236, 443, 233, 468, 491, 492,
	493, 495, 382, 255, 419, 383, 0, 363, 501, 502,
	305, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 0, 1667, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 353, 256, 0,
	0, 416, 0, 198, 0, 470, 243, 364, 361, 508,
	271, 262, 258, 241, 306, 372, 414, 490, 408, 0,
	357, 0, 0, 480, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 239, 314, 197, 399, 481, 275, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 237, 0, 0, 0, 338,
	347, 346, 327, 328, 330, 332, 337, 344, 350, 0,
	0, 0, 0, 0, 254, 310, 261, 253, 505, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 388, 246, 0, 437, 277, 0,
	0, 0, 545, 0, 0, 0, 0, 0, 0, 0,
	352, 0, 319, 193, 217, 0, 0, 398, 445, 457,
	0, 0, 0, 244, 0, 455, 412, 524, 225, 273,
	442, 418, 453, 425, 276, 0, 0, 454, 359, 510,
	435, 521, 546, 547, 252, 392, 533, 494, 541, 562,
	218, 249, 406, 487, 527, 477, 384, 506, 507, 318,
	476, 285, 196, 356, 552, 216, 463, 358, 234, 223,
	512, 530, 279, 440, 205, 489, 519, 231, 467, 0,
	0, 564, 207, 517, 486, 380, 315, 316, 206, 0,
	441, 257, 283, 247, 401, 514, 515, 245, 565, 220,
	540, 212, 0, 539, 394, 509, 518, 381, 370, 211,
	516, 379, 369, 323, 342, 343, 269, 296, 432, 362,
	433, 295, 297, 390, 389, 391, 200, 528, 0, 201,
	0, 482, 529, 566, 226, 227, 229, 0, 268, 272,
	281, 284, 292, 293, 302, 354, 405, 431, 427, 436,
	0, 504, 522, 534, 544, 550, 551, 553, 554, 555,
	556, 557, 559, 558, 393, 300, 478, 322, 360, 0,
	0, 411, 456, 232, 526, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 585, 371, 469, 523, 324, 336,
	339, 329, 348, 0, 349, 325, 326, 331, 333, 334,
	335, 340, 341, 345, 351, 240, 203, 377, 385, 503,
	301, 208, 209, 210, 496, 497, 498, 499, 537, 538,
	542, 446, 447, 448, 449, 282, 532, 298, 452, 451,
	320, 321, 366, 434, 0, 192, 213, 355, 0, 438,
	278, 563, 536, 531, 199, 215, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 250, 265, 267, 274,
	288, 299, 307, 308, 311, 317, 367, 373, 374, 375,
	376, 395, 396, 397, 400, 403, 404, 407, 409, 410,
	413, 417, 421, 422, 423, 424, 426, 428, 439, 444,
	458, 459, 460, 461, 462, 465, 466, 471, 472, 473,
	474, 475, 483, 484, 488, 511, 513, 525, 543, 548,
	464, 290, 291, 429, 430, 303, 304, 560, 561, 289,
	520, 549, 0, 0, 365, 0, 0, 368, 270, 294,
	309, 0, 535, 485, 219, 450, 280, 242, 0, 0,
	204, 238, 222, 248, 263, 266, 313, 378, 386, 415,
	420, 286, 260, 236, 443, 233, 468, 491, 492, 493,
	495, 382, 255, 419, 383, 0, 363, 501, 502, 305,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 0, 1665, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 353, 256, 0, 0,
	416, 0, 198, 0, 470, 243, 364, 361, 508, 271,
	262, 258, 241, 306, 372, 414, 490, 408, 0, 357,
	0, 0, 480, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	239, 314, 197, 399, 481, 275, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 338, 347,
	346, 327, 328, 330, 332, 337, 344, 350, 0, 0,
	0, 0, 0, 254, 310, 261, 253, 505, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 388, 246, 0, 437, 277, 0, 0,
	0, 545, 0, 0, 0, 0, 0, 0, 0, 352,
	0, 319, 193, 217, 0, 0, 398, 445, 457, 0,
	0, 0, 244, 0, 455, 412, 524, 225, 273, 442,
	418, 453, 425, 276, 0, 0, 454, 359, 510, 435,
	521, 546, 547, 252, 392, 533, 494, 541, 562, 218,
	249, 406, 487, 527, 477, 384, 506, 507, 318, 476,
	285, 196, 356, 552, 216, 463, 358, 234, 223, 512,
	530, 279, 440, 205, 489, 519, 231, 467, 0, 0,
	564, 207, 517, 486, 380, 315, 316, 206, 0, 441,
	257, 283, 247, 401, 514, 515, 245, 565, 220, 540,
	212, 0, 539, 394, 509, 518, 381, 370, 211, 516,
	379, 369, 323, 342, 343, 269, 296, 432, 362, 433,
	295, 297, 390, 389, 391, 200, 528, 0, 201, 0,
	482, 529, 566, 226, 227, 229, 0, 268, 272, 281,
	284, 292, 293, 302, 354, 405, 431, 427, 436, 0,
	504, 522, 534, 544, 550, 551, 553, 554, 555, 556,
	557, 559, 558, 393, 300, 478, 322, 360, 0, 0,
	411, 456, 232, 526, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 371, 469, 523, 324, 336, 339,
	329, 348, 0, 349, 325, 326, 331, 333, 334, 335,
	340, 341, 345, 351, 240, 203, 377, 385, 503, 301,
	208, 209, 210, 496, 497, 498, 499, 537, 538, 542,
	446, 447, 448, 449, 282, 532, 298, 452, 451, 320,
	321, 366, 434, 0, 192, 213, 355, 0, 438, 278,
	563, 536, 531, 199, 215, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 195,
	202, 214, 224, 228, 235, 250, 265, 267, 274, 288,
	299, 307, 308, 311, 317, 367, 373, 374, 375, 376,
	395, 396, 397, 400, 403, 404, 407, 409, 410, 413,
	417, 421, 422, 423, 424, 426, 428, 439, 444, 458,
	459, 460, 461, 462, 465, 466, 471, 472, 473, 474,
	475, 483, 484, 488, 511, 513, 525, 543, 548, 464,
	290, 291, 429, 430, 303, 304, 560, 561, 289, 520,
	549, 0, 0, 365, 0, 0, 368, 270, 294, 309,
	0, 535, 485, 219, 450, 280, 242, 0, 0, 204,
	238, 222, 248, 263, 266, 313, 378, 386, 415, 420,
	286, 260, 236, 443, 233, 468, 491, 492, 493, 495,
	382, 255, 419, 383, 0, 363, 501, 502, 305, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 1663, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 353, 256, 0, 0, 416,
	0, 198, 0, 470, 243, 364, 361, 508, 271, 262,
	258, 241, 306, 372, 414, 490, 408, 0, 357, 0,
	0, 480, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 239,
	314, 197, 399, 481, 275, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 254, 310, 261, 253, 505, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 246, 0, 437, 277, 0, 0, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 352, 0,
	319, 193, 217, 0, 0, 398, 445, 457, 0, 0,
	0, 244, 0, 455, 412, 524, 225, 273, 442, 418,
	453, 425, 276, 0, 0, 454, 359, 510, 435, 521,
	546, 547, 252, 392, 533, 494, 541, 562, 218, 249,
	406, 487, 527, 477, 384, 506, 507, 318, 476, 285,
	196, 356, 552, 216, 463, 358, 234, 223, 512, 530,
	279, 440, 205, 489, 519, 231, 467, 0, 0, 564,
	207, 517, 486, 380, 315, 316, 206, 0, 441, 257,
	283, 247, 401, 514, 515, 245, 565, 220, 540, 212,
	0, 539, 394, 509, 518, 381, 370, 211, 516, 379,
	369, 323, 342, 343, 269, 296, 432, 362, 433, 295,
	297, 390, 389, 391, 200, 528, 0, 201, 0, 482,
	529, 566, 226, 227, 229, 0, 268, 272, 281, 284,
	292, 293, 302, 354, 405, 431, 427, 436, 0, 504,
	522, 534, 544, 550, 551, 553, 554, 555, 556, 557,
	559, 558, 393, 300, 478, 322, 360, 0, 0, 411,
	456, 232, 526, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 371, 469, 523, 324, 336, 339, 329,
	348, 0, 349, 325, 326, 331, 333, 334, 335, 340,
	341, 345, 351, 240, 203, 377, 385, 503, 301, 208,
	209, 210, 496, 497, 498, 499, 537, 538, 542, 446,
	447, 448, 449, 282, 532, 298, 452, 451, 320, 321,
	366, 434, 0, 192, 213, 355, 0, 438, 278, 563,
	536, 531, 199, 215, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 250, 265, 267, 274, 288, 299,
	307, 308, 311, 317, 367, 373, 374, 375, 376, 395,
	396, 397, 400, 403, 404, 407, 409, 410, 413, 417,
	421, 422, 423, 424, 426, 428, 439, 444, 458, 459,
	460, 461, 462, 465, 466, 471, 472, 473, 474, 475,
	483, 484, 488, 511, 513, 525, 543, 548, 464, 290,
	291, 429, 430, 303, 304, 560, 561, 289, 520, 549,
	0, 0, 365, 0, 0, 368, 270, 294, 309, 0,
	535, 485, 219, 450, 280, 242, 0, 0, 204, 238,
	222, 248, 263, 266, 313, 378, 386, 415, 420, 286,
	260, 236, 443, 233, 468, 491, 492, 493, 495, 382,
	255, 419, 383, 0, 363, 501, 502, 305, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 0, 1659, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 353, 256, 0, 0, 416, 0,
	198, 0, 470, 243, 364, 361, 508, 271, 262, 258,
	241, 306, 372, 414, 490, 408, 0, 357, 0, 0,
	480, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 239, 314,
	197, 399, 481, 275, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 338, 347, 346, 327,
	328, 330, 332, 337, 344, 350, 0, 0, 0, 0,
	0, 254, 310, 261, 253, 505, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 388, 246, 0, 437, 277, 0, 0, 0, 545,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 445, 457, 0, 0, 0,
	244, 0, 455, 412, 524, 225, 273, 442, 418, 453,
	425, 276, 0, 0, 454, 359, 510, 435, 521, 546,
	547, 252, 392, 533, 494, 541, 562, 218, 249, 406,
	487, 527, 477, 384, 506, 507, 318, 476, 285, 196,
	356, 552, 216, 463, 358, 234, 223, 512, 530, 279,
	440, 205, 489, 519, 231, 467, 0, 0, 564, 207,
	517, 486, 380, 315, 316, 206, 0, 441, 257, 283,
	247, 401, 514, 515, 245, 565, 220, 540, 212, 0,
	539, 394, 509, 518, 381, 370, 211, 516, 379, 369,
	323, 342, 343, 269, 296, 432, 362, 433, 295, 297,
	390, 389, 391, 200, 528, 0, 201, 0, 482, 529,
	566, 226, 227, 229, 0, 268, 272, 281, 284, 292,
	293, 302, 354, 405, 431, 427, 436, 0, 504, 522,
	534, 544, 550, 551, 553, 554, 555, 556, 557, 559,
	558, 393, 300, 478, 322, 360, 0, 0, 411, 456,
	232, 526, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 371, 469, 523, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 240, 203, 377, 385, 503, 301, 208, 209,
	210, 496, 497, 498, 499, 537, 538, 542, 446, 447,
	448, 449, 282, 532, 298, 452, 451, 320, 321, 366,
	434, 0, 192, 213, 355, 0, 438, 278, 563, 536,
	531, 199, 215, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 250, 265, 267, 274, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 424, 426, 428, 439, 444, 458, 459, 460,
	461, 462, 465, 466, 471, 472, 473, 474, 475, 483,
	484, 488, 511, 513, 525, 543, 548, 464, 290, 291,
	429, 430, 303, 304, 560, 561, 289, 520, 549, 0,
	0, 365, 0, 0, 368, 270, 294, 309, 0, 535,
	485, 219, 450, 280, 242, 0, 0, 204, 238, 222,
	248, 263, 266, 313, 378, 386, 415, 420, 286, 260,
	236, 443, 233, 468, 491, 492, 493, 495, 382, 255,
	419, 383, 0, 363, 501, 502, 305, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	0, 1657, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 353, 256, 0, 0, 416, 0, 198,
	0, 470, 243, 364, 361, 508, 271, 262, 258, 241,
	306, 372, 414, 490, 408, 0, 357, 0, 0, 480,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 239, 314, 197,
	399, 481, 275, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 237, 0, 0, 0, 338, 347, 346, 327, 328,
	330, 332, 337, 344, 350, 0, 0, 0, 0, 0,
	254, 310, 261, 253, 505, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	388, 246, 0, 437, 277, 0, 0, 0, 545, 0,
	0, 0, 0, 0, 0, 0, 352, 0, 319, 193,
	217, 0, 0, 398, 445, 457, 0, 0, 0, 244,
	0, 455, 412, 524, 225, 273, 442, 418, 453, 425,
	276, 0, 0, 454, 359, 510, 435, 521, 546, 547,
	252, 392, 533, 494, 541, 562, 218, 249, 406, 487,
	527, 477, 384, 506, 507, 318, 476, 285, 196, 356,
	552, 216, 463, 358, 234, 223, 512, 530, 279, 440,
	205, 489, 519, 231, 467, 0, 0, 564, 207, 517,
	486, 380, 315, 316, 206, 0, 441, 257, 283, 247,
	401, 514, 515, 245, 565, 220, 540, 212, 0, 539,
	394, 509, 518, 381, 370, 211, 516, 379, 369, 323,
	342, 343, 269, 296, 432, 362, 433, 295, 297, 390,
	389, 391, 200, 528, 0, 201, 0, 482, 529, 566,
	226, 227, 229, 0, 268, 272, 281, 284, 292, 293,
	302, 354, 405, 431, 427, 436, 0, 504, 522, 534,
	544, 550, 551, 553, 554, 555, 556, 557, 559, 558,
	393, 300, 478, 322, 360, 0, 0, 411, 456, 232,
	526, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 371, 469, 523, 324, 336, 339, 329, 348, 0,
	349, 325, 326, 331, 333, 334, 335, 340, 341, 345,
	351, 240, 203, 377, 385, 503, 301, 208, 209, 210,
	496, 497, 498, 499, 537, 538, 542, 446, 447, 448,
	449, 282, 532, 298, 452, 451, 320, 321, 366, 434,
	0, 192, 213, 355, 0, 438, 278, 563, 536, 531,
	199, 215, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 250, 265, 267, 274, 288, 299, 307, 308,
	311, 317, 367, 373, 374, 375, 376, 395, 396, 397,
	400, 403, 404, 407, 409, 410, 413, 417, 421, 422,
	423, 424, 426, 428, 439, 444, 458, 459, 460, 461,
	462, 465, 466, 471, 472, 473, 474, 475, 483, 484,
	488, 511, 513, 525, 543, 548, 464, 290, 291, 429,
	430, 303, 304, 560, 561, 289, 520, 549, 0, 0,
	365, 0, 0, 368, 270, 294, 309, 0, 535, 485,
	219, 450, 280, 242, 0, 0, 204, 238, 222, 248,
	263, 266, 313, 378, 386, 415, 420, 286, 260, 236,
	443, 233, 468, 491, 492, 493, 495, 382, 255, 419,
	383, 0, 363, 501, 502, 305, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 0,
	1655, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 353, 256, 0, 0, 416, 0, 198, 0,
	470, 243, 364, 361, 508, 271, 262, 258, 241, 306,
	372, 414, 490, 408, 0, 357, 0, 0, 480, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 239, 314, 197, 399,
	481, 275, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	237, 0, 0, 0, 338, 347, 346, 327, 328, 330,
	332, 337, 344, 350, 0, 0, 0, 0, 0, 254,
	310, 261, 253, 505, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 388,
	246, 0, 437, 277, 0, 0, 0, 545, 0, 0,
	0, 0, 0, 0, 0, 352, 0, 319, 193, 217,
	0, 0, 398, 445, 457, 0, 0, 0, 244, 0,
	455, 412, 524, 225, 273, 442, 418, 453, 425, 276,
	0, 0, 454, 359, 510, 435, 521, 546, 547, 252,
	392, 533, 494, 541, 562, 218, 249, 406, 487, 527,
	477, 384, 506, 507, 318, 476, 285, 196, 356, 552,
	216, 463, 358, 234, 223, 512, 530, 279, 440, 205,
	489, 519, 231, 467, 0, 0, 564, 207, 517, 486,
	380, 315, 316, 206, 0, 441, 257, 283, 247, 401,
	514, 515, 245, 565, 220, 540, 212, 0, 539, 394,
	509, 518, 381, 370, 211, 516, 379, 369, 323, 342,
	343, 269, 296, 432, 362, 433, 295, 297, 390, 389,
	391, 200, 528, 0, 201, 0, 482, 529, 566, 226,
	227, 229, 0, 268, 272, 281, 284, 292, 293, 302,
	354, 405, 431, 427, 436, 0, 504, 522, 534, 544,
	550, 551, 553, 554, 555, 556, 557, 559, 558, 393,
	300, 478, 322, 360, 0, 0, 411, 456, 232, 526,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 585,
	371, 469, 523, 324, 336, 339, 329, 348, 0, 349,
	325, 326, 331, 333, 334, 335, 340, 341, 345, 351,
	240, 203, 377, 385, 503, 301, 208, 209, 210, 496,
	497, 498, 499, 537, 538, 542, 446, 447, 448, 449,
	282, 532, 298, 452, 451, 320, 321, 366, 434, 0,
	192, 213, 355, 0, 438, 278, 563, 536, 531, 199,
	215, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 195, 202, 214, 224, 228,
	235, 250, 265, 267, 274, 288, 299, 307, 308, 311,
	317, 367, 373, 374, 375, 376, 395, 396, 397, 400,
	403, 404, 407, 409, 410, 413, 417, 421, 422, 423,
	424, 426, 428, 439, 444, 458, 459, 460, 461, 462,
	465, 466, 471, 472, 473, 474, 475, 483, 484, 488,
	511, 513, 525, 543, 548, 464, 290, 291, 429, 430,
	303, 304, 560, 561, 289, 520, 549, 0, 0, 365,
	0, 0, 368, 270, 294, 309, 0, 535, 485, 219,
	450, 280, 242, 0, 0, 204, 238, 222, 248, 263,
	266, 313, 378, 386, 415, 420, 286, 260, 236, 443,
	233, 468, 491, 492, 493, 495, 382, 255, 419, 383,
	0, 363, 501, 502, 305, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 353, 256, 0, 0, 416, 0, 198, 0, 470,
	243, 364, 361, 508, 271, 262, 258, 241, 306, 372,
	414, 490, 408, 0, 357, 0, 0, 480, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 239, 314, 197, 399, 481,
	275, 0, 1630, 0, 0, 0, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 237,
	0, 0, 0, 338, 347, 346, 327, 328, 330, 332,
	337, 344, 350, 0, 0, 0, 0, 0, 254, 310,
	261, 253, 505, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 388, 246,
	0, 437, 277, 0, 0, 0, 545, 0, 0, 0,
	0, 0, 0, 0, 352, 0, 319, 193, 217, 0,
	0, 398, 445, 457, 0, 0, 0, 244, 0, 455,
	412, 524, 225, 273, 442, 418, 453, 425, 276, 0,
	0, 454, 359, 510, 435, 521, 546, 547, 252, 392,
	533, 494, 541, 562, 218, 249, 406, 487, 527, 477,
	384, 506, 507, 318, 476, 285, 196, 356, 552, 216,
	463, 358, 234, 223, 512, 530, 279, 440, 205, 489,
	519, 231, 467, 0, 0, 564, 207, 517, 486, 380,
	315, 316, 206, 0, 441, 257, 283, 247, 401, 514,
	515, 245, 565, 220, 540, 212, 0, 539, 394, 509,
	518, 381, 370, 211, 516, 379, 369, 323, 342, 343,
	269, 296, 432, 362, 433, 295, 297, 390, 389, 391,
	200, 528, 0, 201, 0, 482, 529, 566, 226, 227,
	229, 0, 268, 272, 281, 284, 292, 293, 302, 354,
	405, 431, 427, 436, 0, 504, 522, 534, 544, 550,
	551, 553, 554, 555, 556, 557, 559, 558, 393, 300,
	478, 322, 360, 0, 0, 411, 456, 232, 526, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 585, 371,
	469, 523, 324, 336, 339, 329, 348, 0, 349, 325,
	326, 331, 333, 334, 335, 340, 341, 345, 351, 240,
	203, 377, 385, 503, 301, 208, 209, 210, 496, 497,
	498, 499, 537, 538, 542, 446, 447, 448, 449, 282,
	532, 298, 452, 451, 320, 321, 366, 434, 0, 192,
	213, 355, 0, 438, 278, 563, 536, 531, 199, 215,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	250, 265, 267, 274, 288, 299, 307, 308, 311, 317,
	367, 373, 374, 375, 376, 395, 396, 397, 400, 403,
	404, 407, 409, 410, 413, 417, 421, 422, 423, 424,
	426, 428, 439, 444, 458, 459, 460, 461, 462, 465,
	466, 471, 472, 473, 474, 475, 483, 484, 488, 511,
	513, 525, 543, 548, 464, 290, 291, 429, 430, 303,
	304, 560, 561, 289, 520, 549, 0, 0, 365, 0,
	0, 368, 270, 294, 309, 0, 535, 485, 219, 450,
	280, 242, 0, 0, 204, 238, 222, 248, 263, 266,
	313, 378, 386, 415, 420, 286, 260, 236, 443, 233,
	468, 491, 492, 493, 495, 382, 255, 419, 383, 0,
	363, 501, 502, 305, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 1531, 259, 0, 0, 0, 0,
	353, 256, 0, 0, 416, 0, 198, 0, 470, 243,
	364, 361, 508, 271, 262, 258, 241, 306, 372, 414,
	490, 408, 0, 357, 0, 0, 480, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 239, 314, 197, 399, 481, 275,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 338, 347, 346, 327, 328, 330, 332, 337,
	344, 350, 0, 0, 0, 0, 0, 254, 310, 261,
	253, 505, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 388, 246, 0,
	437, 277, 0, 0, 0, 545, 0, 0, 0, 0,
	0, 0, 0, 352, 0, 319, 193, 217, 0, 0,
	398, 445, 457, 0, 0, 0, 244, 0, 455, 412,
	524, 225, 273, 442, 418, 453, 425, 276, 0, 0,
	454, 359, 510, 435, 521, 546, 547, 252, 392, 533,
	494, 541, 562, 218, 249, 406, 487, 527, 477, 384,
	506, 507, 318, 476, 285, 196, 356, 552, 216, 463,
	358, 234, 223, 512, 530, 279, 440, 205, 489, 519,
	231, 467, 0, 0, 564, 207, 517, 486, 380, 315,
	316, 206, 0, 441, 257, 283, 247, 401, 514, 515,
	245, 565, 220, 540, 212, 0, 539, 394, 509, 518,
	381, 370, 211, 516, 379, 369, 323, 342, 343, 269,
	296, 432, 362, 433, 295, 297, 390, 389, 391, 200,
	528, 0, 201, 0, 482, 529, 566, 226, 227, 229,
	0, 268, 272, 281, 284, 292, 293, 302, 354, 405,
	431, 427, 436, 0, 504, 522, 534, 544, 550, 551,
	553, 554, 555, 556, 557, 559, 558, 393, 300, 478,
	322, 360, 0, 0, 411, 456, 232, 526, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 371, 469,
	523, 324, 336, 339, 329, 348, 0, 349, 325, 326,
	331, 333, 334, 335, 340, 341, 345, 351, 240, 203,
	377, 385, 503, 301, 208, 209, 210, 496, 497, 498,
	499, 537, 538, 542, 446, 447, 448, 449, 282, 532,
	298, 452, 451, 320, 321, 366, 434, 0, 192, 213,
	355, 0, 438, 278, 563, 536, 531, 199, 215, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 195, 202, 214, 224, 228, 235, 250,
	265, 267, 274, 288, 299, 307, 308, 311, 317, 367,
	373, 374, 375, 376, 395, 396, 397, 400, 403, 404,
	407, 409, 410, 413, 417, 421, 422, 423, 424, 426,
	428, 439, 444, 458, 459, 460, 461, 462, 465, 466,
	471, 472, 473, 474, 475, 483, 484, 488, 511, 513,
	525, 543, 548, 464, 290, 291, 429, 430, 303, 304,
	560, 561, 289, 520, 549, 0, 0, 365, 0, 0,
	368, 270, 294, 309, 0, 535, 485, 219, 450, 280,
	242, 0, 0, 204, 238, 222, 248, 263, 266, 313,
	378, 386, 415, 420, 286, 260, 236, 443, 233, 468,
	491, 492, 493, 495, 382, 255, 419, 383, 0, 363,
	501, 502, 305, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 353,
	256, 0, 0, 416, 0, 198, 0, 470, 243, 364,
	361, 508, 271, 262, 258, 241, 306, 372, 414, 490,
	408, 0, 357, 0, 0, 480, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 239, 314, 197, 399, 481, 275, 0,
	91, 0, 0, 0, 805, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 237, 0, 0,
	0, 338, 347, 346, 327, 328, 330, 332, 337, 344,
	350, 0, 0, 0, 0, 0, 254, 310, 261, 253,
	505, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 388, 246, 0, 437,
	277, 0, 0, 0, 545, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 319, 193, 217, 0, 0, 398,
	445, 457, 0, 0, 0, 244, 0, 455, 412, 524,
	225, 273, 442, 418, 453, 425, 276, 0, 0, 454,
	359, 510, 435, 521, 546, 547, 252, 392, 533, 494,
	541, 562, 218, 249, 406, 487, 527, 477, 384, 506,
	507, 318, 476, 285, 196, 356, 552, 216, 463, 358,
	234, 223, 512, 530, 279, 440, 205, 489, 519, 231,
	467, 0, 0, 564, 207, 517, 486, 380, 315, 316,
	206, 0, 441, 257, 283, 247, 401, 514, 515, 245,
	565, 220, 540, 212, 0, 539, 394, 509, 518, 381,
	370, 211, 516, 379, 369, 323, 342, 343, 269, 296,
	432, 362, 433, 295, 297, 390, 389, 391, 200, 528,
	0, 201, 0, 482, 529, 566, 226, 227, 229, 0,
	268, 272, 281, 284, 292, 293, 302, 354, 405, 431,
	427, 436, 0, 504, 522, 534, 544, 550, 551, 553,
	554, 555, 556, 557, 559, 558, 393, 300, 478, 322,
	360, 0, 0, 411, 456, 232, 526, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 371, 469, 523,
	324, 336, 339, 329, 348, 0, 349, 325, 326, 331,
	333, 334, 335, 340, 341, 345, 351, 240, 203, 377,
	385, 503, 301, 208, 209, 210, 496, 497, 498, 499,
	537, 538, 542, 446, 447, 448, 449, 282, 532, 298,
	452, 451, 320, 321, 366, 434, 0, 192, 213, 355,
	0, 438, 278, 563, 536, 531, 199, 215, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 250, 265,
	267, 274, 288, 299, 307, 308, 311, 317, 367, 373,
	374, 375, 376, 395, 396, 397, 400, 403, 404, 407,
	409, 410, 413, 417, 421, 422, 423, 424, 426, 428,
	439, 444, 458, 459, 460, 461, 462, 465, 466, 471,
	472, 473, 474, 475, 483, 484, 488, 511, 513, 525,
	543, 548, 464, 290, 291, 429, 430, 303, 304, 560,
	561, 289, 520, 549, 0, 0, 365, 0, 0, 368,
	270, 294, 309, 0, 535, 485, 219, 450, 280, 242,
	0, 0, 204, 238, 222, 248, 263, 266, 313, 378,
	386, 415, 420, 286, 260, 236, 443, 233, 468, 491,
	492, 493, 495, 382, 255, 419, 383, 0, 363, 501,
	502, 305, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 353, 256,
	0, 0, 416, 0, 198, 0, 470, 243, 364, 361,
	508, 271, 262, 258, 241, 306, 372, 414, 490, 408,
	0, 357, 0, 0, 480, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 239, 314, 197, 399, 481, 275, 0, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	338, 347, 346, 327, 328, 330, 332, 337, 344, 350,
	0, 0, 0, 0, 0, 254, 310, 261, 253, 505,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1282, 0, 287, 0, 388, 246, 0, 437, 277,
	0, 0, 0, 545, 0, 0, 0, 0, 0, 0,
	0, 352, 0, 319, 193, 217, 0, 0, 398, 445,
	457, 0, 0, 0, 244, 0, 455, 412, 524, 225,
	273, 442, 418, 453, 425, 276, 0, 0, 454, 359,
	510, 435, 521, 546, 547, 252, 392, 533, 494, 541,
	562, 218, 249, 406, 487, 527, 477, 384, 506, 507,
	318, 476, 285, 196, 356, 552, 216, 463, 358, 234,
	223, 512, 530, 279, 440, 205, 489, 519, 231, 467,
	0, 0, 564, 207, 517, 486, 380, 315, 316, 206,
	0, 441, 257, 283, 247, 401, 514, 515, 245, 565,
	220, 540, 212, 0, 539, 394, 509, 518, 381, 370,
	211, 516, 379, 369, 323, 342, 343, 269, 296, 432,
	362, 433, 295, 297, 390, 389, 391, 200, 528, 0,
	201, 0, 482, 529, 566, 226, 227, 229, 0, 268,
	272, 281, 284, 292, 293, 302, 354, 405, 431, 427,
	436, 0, 504, 522, 534, 544, 550, 551, 553, 554,
	555, 556, 557, 559, 558, 393, 300, 478, 322, 360,
	0, 0, 411, 456, 232, 526, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 371, 469, 523, 324,
	336, 339, 329, 348, 0, 349, 325, 326, 331, 333,
	334, 335, 340, 341, 345, 351, 240, 203, 377, 385,
	503, 301, 208, 209, 210, 496, 497, 498, 499, 537,
	538, 542, 446, 447, 448, 449, 282, 532, 298, 452,
	451, 320, 321, 366, 434, 0, 192, 213, 355, 0,
	438, 278, 563, 536, 531, 199, 215, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 195, 202, 214, 224, 228, 235, 250, 265, 267,
	274, 288, 299, 307, 308, 311, 317, 367, 373, 374,
	375, 376, 395, 396, 397, 400, 403, 404, 407, 409,
	410, 413, 417, 421, 422, 423, 424, 426, 428, 439,
	444, 458, 459, 460, 461, 462, 465, 466, 471, 472,
	473, 474, 475, 483, 484, 488, 511, 513, 525, 543,
	548, 464, 290, 291, 429, 430, 303, 304, 560, 561,
	1281, 520, 549, 0, 0, 365, 0, 0, 368, 270,
	294, 309, 0, 535, 485, 219, 450, 280, 242, 0,
	0, 204, 238, 222, 248, 263, 266, 313, 378, 386,
	415, 420, 286, 260, 236, 443, 233, 468, 491, 492,
	493, 495, 382, 255, 419, 383, 0, 363, 501, 502,
	305, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 353, 256, 0,
	0, 416, 0, 198, 0, 470, 243, 364, 361, 508,
	271, 262, 258, 241, 306, 372, 414, 490, 408, 0,
	357, 0, 0, 480, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 239, 314, 197, 399, 481, 275, 0, 0, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 237, 0, 0, 0, 338,
	347, 346, 327, 328, 330, 332, 337, 344, 350, 0,
	0, 0, 0, 0, 254, 310, 261, 253, 505, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 388, 246, 0, 437, 277, 0,
	0, 0, 545, 0, 0, 0, 0, 0, 0, 0,
	352, 0, 319, 193, 217, 0, 0, 398, 445, 457,
	0, 0, 0, 244, 0, 455, 412, 524, 225, 273,
	442, 418, 453, 425, 276, 0, 0, 454, 359, 510,
	435, 521, 546, 547, 252, 392, 533, 494, 541, 562,
	218, 249, 406, 487, 527, 477, 384, 506, 507, 318,
	476, 285, 196, 356, 552, 216, 463, 358, 234, 223,
	512, 530, 279, 440, 205, 489, 519, 231, 467, 0,
	0, 564, 207, 517, 486, 380, 315, 316, 206, 0,
	441, 257, 283, 247, 401, 514, 515, 245, 565, 220,
	540, 212, 0, 539, 394, 509, 518, 381, 370, 211,
	516, 379, 369, 323, 342, 343, 269, 296, 432, 362,
	433, 295, 297, 390, 389, 391, 200, 528, 0, 201,
	0, 482, 529, 566, 226, 227, 229, 0, 268, 272,
	281, 284, 292, 293, 302, 354, 405, 431, 427, 436,
	0, 504, 522, 534, 544, 550, 551, 553, 554, 555,
	556, 557, 559, 558, 393, 300, 478, 322, 360, 0,
	0, 411, 456, 232, 526, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 585, 371, 469, 523, 324, 336,
	339, 329, 348, 0, 349, 325, 326, 331, 333, 334,
	335, 340, 341, 345, 351, 240, 203, 377, 385, 503,
	301, 208, 209, 210, 496, 497, 498, 499, 537, 538,
	542, 446, 447, 448, 449, 282, 532, 298, 452, 451,
	320, 321, 366, 434, 0, 192, 213, 355, 0, 438,
	278, 563, 536, 531, 199, 215, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 891, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 250, 265, 267, 274,
	288, 299, 307, 308, 311, 317, 367, 373, 374, 375,
	376, 395, 396, 397, 400, 403, 404, 407, 409, 410,
	413, 417, 421, 422, 423, 424, 426, 428, 439, 444,
	458, 459, 460, 461, 462, 465, 466, 471, 472, 473,
	474, 475, 483, 484, 488, 511, 513, 525, 543, 548,
	464, 290, 291, 429, 430, 303, 304, 560, 561, 289,
	520, 549, 0, 0, 365, 0, 0, 368, 270, 294,
	309, 0, 535, 485, 219, 450, 280, 242, 0, 0,
	204, 238, 222, 248, 263, 266, 313, 378, 386, 415,
	420, 286, 260, 236, 443, 233, 468, 491, 492, 493,
	495, 382, 255, 419, 383, 0, 363, 501, 502, 305,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 353, 256, 0, 0,
	416, 0, 198, 0, 470, 243, 364, 361, 508, 271,
	262, 258, 241, 306, 372, 414, 490, 408, 0, 357,
	0, 0, 480, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	239, 314, 197, 399, 481, 275, 0, 0, 0, 0,
	0, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 338, 347,
	346, 327, 328, 330, 332, 337, 344, 350, 0, 0,
	0, 0, 0, 254, 310, 261, 253, 505, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 388, 246, 0, 437, 277, 0, 588,
	0, 545, 0, 0, 0, 0, 0, 0, 0, 352,
	0, 319, 193, 217, 0, 0, 398, 445, 457, 0,
	0, 0, 244, 0, 455, 412, 524, 225, 273, 442,
	418, 453, 425, 276, 0, 0, 454, 359, 510, 435,
	521, 546, 547, 252, 392, 533, 494, 541, 562, 218,
	249, 406, 487, 527, 477, 384, 506, 507, 318, 476,
	285, 196, 356, 552, 216, 463, 358, 234, 223, 512,
	530, 279, 440, 205, 489, 519, 231, 467, 0, 0,
	564, 207, 517, 486, 380, 315, 316, 206, 0, 441,
	257, 283, 247, 401, 514, 515, 245, 565, 220, 540,
	212, 0, 539, 394, 509, 518, 381, 370, 211, 516,
	379, 369, 323, 342, 343, 269, 296, 432, 362, 433,
	295, 297, 390, 389, 391, 200, 528, 0, 201, 0,
	482, 529, 566, 226, 227, 229, 0, 268, 272, 281,
	284, 292, 293, 302, 354, 405, 431, 427, 436, 0,
	504, 522, 534, 544, 550, 551, 553, 554, 555, 556,
	557, 559, 558, 393, 300, 478, 322, 360, 0, 0,
	411, 456, 232, 526, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 371, 469, 523, 324, 336, 339,
	329, 348, 0, 349, 325, 326, 331, 333, 334, 335,
	340, 341, 345, 351, 240, 203, 377, 385, 503, 301,
	208, 209, 210, 496, 497, 498, 499, 537, 538, 542,
	446, 447, 448, 449, 282, 532, 298, 452, 451, 320,
	321, 366, 434, 0, 192, 213, 355, 0, 438, 278,
	563, 536, 531, 199, 215, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 195,
	202, 214, 224, 228, 235, 250, 265, 267, 274, 288,
	299, 307, 308, 311, 317, 367, 373, 374, 375, 376,
	395, 396, 397, 400, 403, 404, 407, 409, 410, 413,
	417, 421, 422, 423, 424, 426, 428, 439, 444, 458,
	459, 460, 461, 462, 465, 466, 471, 472, 473, 474,
	475, 483, 484, 488, 511, 513, 525, 543, 548, 464,
	290, 291, 429, 430, 303, 304, 560, 561, 289, 520,
	549, 0, 0, 365, 0, 0, 368, 270, 294, 309,
	0, 535, 485, 219, 450, 280, 242, 0, 0, 204,
	238, 222, 248, 263, 266, 313, 378, 386, 415, 420,
	286, 260, 236, 443, 233, 468, 491, 492, 493, 495,
	382, 255, 419, 383, 0, 363, 501, 502, 305, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 353, 256, 0, 0, 416,
	0, 198, 0, 470, 243, 364, 361, 508, 271, 262,
	258, 241, 306, 372, 414, 490, 408, 0, 357, 0,
	0, 480, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 239,
	314, 197, 399, 481, 275, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 338, 347, 346,
	327, 328, 330, 332, 337, 344, 350, 0, 0, 0,
	0, 0, 254, 310, 261, 253, 505, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 388, 246, 0, 437, 277, 0, 0, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 352, 0,
	319, 193, 217, 0, 0, 398, 445, 457, 0, 0,
	0, 244, 0, 455, 412, 524, 225, 273, 442, 418,
	453, 425, 276, 0, 0, 454, 359, 510, 435, 521,
	546, 547, 252, 392, 533, 494, 541, 562, 218, 249,
	406, 487, 527, 477, 384, 506, 507, 318, 476, 285,
	196, 356, 552, 216, 463, 358, 234, 223, 512, 530,
	279, 440, 205, 489, 519, 231, 467, 0, 0, 564,
	207, 517, 486, 380, 315, 316, 206, 0, 441, 257,
	283, 247, 401, 514, 515, 245, 565, 220, 540, 212,
	0, 539, 394, 509, 518, 381, 370, 211, 516, 379,
	369, 323, 342, 343, 269, 296, 432, 362, 433, 295,
	297, 390, 389, 391, 200, 528, 0, 201, 0, 482,
	529, 566, 226, 227, 229, 0, 268, 272, 281, 284,
	292, 293, 302, 354, 405, 431, 427, 436, 0, 504,
	522, 534, 544, 550, 551, 553, 554, 555, 556, 557,
	559, 558, 393, 300, 478, 322, 360, 0, 0, 411,
	456, 232, 526, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 371, 469, 523, 324, 336, 339, 329,
	348, 0, 349, 325, 326, 331, 333, 334, 335, 340,
	341, 345, 351, 240, 203, 377, 385, 503, 301, 208,
	209, 210, 496, 497, 498, 499, 537, 538, 542, 446,
	447, 448, 449, 282, 532, 298, 452, 451, 320, 321,
	366, 434, 0, 192, 213, 355, 0, 438, 278, 563,
	536, 531, 199, 215, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 250, 265, 267, 274, 288, 299,
	307, 308, 311, 317, 367, 373, 374, 375, 376, 3439,
	396, 397, 400, 403, 404, 407, 409, 410, 413, 417,
	421, 422, 423, 424, 426, 428, 439, 444, 458, 459,
	460, 461, 462, 465, 466, 471, 472, 473, 474, 475,
	483, 484, 488, 511, 513, 525, 543, 548, 464, 290,
	291, 429, 430, 303, 304, 560, 561, 289, 520, 549,
	0, 0, 365, 0, 0, 368, 270, 294, 309, 0,
	535, 485, 219, 450, 280, 242, 0, 0, 204, 238,
	222, 248, 263, 266, 313, 378, 386, 415, 420, 286,
	260, 236, 443, 233, 468, 491, 492, 493, 495, 382,
	255, 419, 383, 0, 363, 501, 502, 305, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 353, 256, 0, 0, 416, 0,
	198, 0, 470, 243, 364, 361, 508, 271, 262, 258,
	241, 306, 372, 414, 490, 408, 0, 357, 0, 0,
	480, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 239, 314,
	197, 399, 481, 275, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 338, 347, 346, 327,
	328, 330, 332, 337, 344, 350, 0, 0, 0, 0,
	0, 254, 310, 261, 253, 505, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 388, 246, 0, 437, 277, 0, 0, 0, 545,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 319,
	193, 217, 0, 0, 398, 445, 457, 0, 0, 0,
	244, 0, 455, 412, 524, 225, 273, 442, 418, 453,
	425, 276, 0, 0, 454, 359, 510, 435, 521, 546,
	547, 252, 392, 533, 494, 541, 562, 218, 249, 406,
	487, 527, 477, 384, 506, 507, 318, 476, 285, 196,
	356, 552, 216, 463, 358, 234, 223, 512, 530, 279,
	440, 205, 489, 519, 231, 467, 0, 0, 564, 207,
	517, 486, 380, 315, 316, 206, 0, 441, 257, 283,
	247, 401, 514, 515, 245, 565, 220, 540, 212, 0,
	539, 394, 509, 518, 381, 370, 211, 516, 379, 369,
	323, 342, 343, 269, 296, 432, 362, 433, 295, 297,
	390, 389, 391, 200, 528, 0, 201, 0, 482, 529,
	566, 226, 227, 229, 0, 268, 272, 281, 284, 292,
	293, 302, 354, 405, 431, 427, 436, 0, 504, 522,
	534, 544, 550, 551, 553, 554, 555, 556, 557, 559,
	558, 393, 300, 478, 322, 360, 0, 0, 411, 456,
	232, 526, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 371, 469, 523, 324, 336, 339, 329, 348,
	0, 349, 325, 326, 331, 333, 334, 335, 340, 341,
	345, 351, 240, 203, 377, 385, 503, 301, 208, 209,
	210, 496, 497, 498, 499, 537, 538, 542, 446, 447,
	448, 449, 282, 532, 298, 452, 451, 320, 321, 366,
	434, 0, 192, 213, 355, 0, 438, 278, 563, 536,
	531, 199, 215, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 250, 265, 267, 274, 288, 299, 307,
	308, 311, 317, 367, 373, 374, 375, 376, 395, 396,
	397, 400, 403, 404, 407, 409, 410, 413, 417, 421,
	422, 423, 424, 426, 428, 439, 444, 458, 459, 460,
	461, 462, 465, 466, 471, 472, 473, 474, 475, 483,
	484, 488, 511, 513, 525, 543, 548, 464, 290, 291,
	429, 430, 303, 304, 560, 561, 289, 520, 549, 0,
	0, 365, 0, 0, 368, 270, 294, 309, 0, 535,
	485, 219, 450, 280, 242, 0, 0, 204, 238, 222,
	248, 263, 266, 313, 378, 386, 415, 420, 286, 260,
	236, 443, 233, 468, 491, 492, 493, 495, 382, 255,
	419, 383, 0, 363, 501, 502, 305, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 353, 256, 0, 0, 416, 0, 198,
	0, 470, 243, 364, 361, 508, 271, 262, 258, 241,
	306, 372, 414, 490, 408, 0, 357, 0, 0, 480,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 239, 314, 197,
	399, 481, 275, 0, 0, 0, 0, 0, 805, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 237, 0, 0, 0, 338, 347, 346, 327, 328,
	330, 332, 337, 344, 350, 0, 0, 0, 0, 0,
	254, 310, 261, 253, 505, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	388, 246, 0, 437, 277, 0, 0, 0, 545, 0,
	0, 0, 0, 0, 0, 0, 352, 0, 319, 193,
	217, 0, 0, 398, 445, 457, 0, 0, 0, 244,
	0, 455, 412, 524, 225, 273, 442, 418, 453, 425,
	276, 0, 0, 454, 359, 510, 435, 521, 546, 547,
	252, 392, 533, 494, 541, 562, 218, 249, 406, 487,
	527, 477, 384, 506, 507, 318, 476, 285, 196, 356,
	552, 216, 463, 358, 234, 223, 512, 530, 279, 440,
	205, 489, 519, 231, 467, 0, 0, 564, 207, 517,
	486, 380, 315, 316, 206, 0, 441, 257, 283, 247,
	401, 514, 515, 245, 565, 220, 540, 212, 0, 539,
	394, 509, 518, 381, 370, 211, 516, 379, 369, 323,
	342, 343, 269, 296, 432, 362, 433, 295, 297, 390,
	389, 391, 200, 528, 0, 201, 0, 482, 529, 566,
	226, 227, 229, 0, 268, 272, 281, 284, 292, 293,
	302, 354, 405, 431, 427, 436, 0, 504, 522, 534,
	544, 550, 551, 553, 554, 555, 556, 557, 559, 558,
	393, 300, 478, 322, 360, 0, 0, 411, 456, 232,
	526, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 371, 469, 523, 324, 336, 339, 329, 348, 0,
	349, 325, 326, 331, 333, 334, 335, 340, 341, 345,
	351, 240, 203, 377, 385, 503, 301, 208, 209, 210,
	496, 497, 498, 499, 537, 538, 542, 446, 447, 448,
	449, 282, 532, 298, 452, 451, 320, 321, 366, 434,
	0, 192, 213, 355, 0, 438, 278, 563, 536, 531,
	199, 215, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 250, 265, 267, 274, 288, 299, 307, 308,
	311, 317, 367, 373, 374, 375, 376, 395, 396, 397,
	400, 403, 404, 407, 409, 410, 413, 417, 421, 422,
	423, 424, 426, 428, 439, 444, 458, 459, 460, 461,
	462, 465, 466, 471, 472, 473, 474, 475, 483, 484,
	488, 511, 513, 525, 543, 548, 464, 290, 291, 429,
	430, 303, 304, 560, 561, 289, 520, 549, 0, 0,
	365, 0, 0, 368, 270, 294, 309, 0, 535, 485,
	219, 450, 280, 242, 0, 0, 204, 238, 222, 248,
	263, 266, 313, 378, 386, 415, 420, 286, 260, 236,
	443, 233, 468, 491, 492, 493, 495, 382, 255, 419,
	383, 0, 363, 501, 502, 305, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 353, 256, 0, 0, 416, 0, 198, 0,
	470, 243, 364, 361, 508, 271, 262, 258, 241, 306,
	372, 414, 490, 408, 0, 357, 0, 0, 480, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 239, 314, 197, 399,
	481, 275, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	237, 0, 0, 0, 338, 347, 346, 327, 328, 330,
	332, 337, 344, 350, 0, 0, 0, 0, 0, 254,
	310, 261, 253, 505, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 388,
	246, 0, 437, 277, 0, 0, 0, 545, 0, 0,
	0, 0, 0, 0, 0, 352, 0, 319, 193, 217,
	0, 0, 398, 445, 457, 0, 0, 0, 244, 0,
	455, 412, 524, 225, 273, 442, 418, 453, 425, 276,
	0, 0, 454, 359, 510, 435, 521, 546, 547, 252,
	392, 533, 494, 541, 562, 218, 249, 406, 487, 527,
	477, 384, 506, 507, 318, 476, 285, 196, 356, 552,
	216, 463, 358, 234, 223, 512, 530, 279, 440, 205,
	489, 519, 231, 467, 0, 0, 564, 207, 517, 486,
	380, 315, 316, 206, 0, 441, 257, 283, 247, 401,
	514, 515, 245, 565, 220, 540, 212, 0, 539, 394,
	509, 518, 381, 370, 211, 516, 379, 369, 323, 342,
	343, 269, 296, 432, 362, 433, 295, 297, 390, 389,
	391, 200, 528, 0, 201, 0, 482, 529, 566, 226,
	227, 229, 0, 268, 272, 281, 284, 292, 293, 302,
	354, 405, 431, 427, 436, 0, 504, 522, 534, 544,
	550, 551, 553, 554, 555, 556, 557, 559, 558, 393,
	300, 478, 322, 360, 0, 0, 411, 456, 232, 526,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 585,
	371, 469, 523, 324, 336, 339, 329, 348, 0, 349,
	325, 326, 331, 333, 334, 335, 340, 341, 345, 351,
	240, 203, 377, 385, 503, 301, 208, 209, 210, 496,
	497, 498, 499, 537, 538, 542, 446, 447, 448, 449,
	282, 532, 298, 452, 451, 320, 321, 366, 434, 0,
	192, 213, 355, 0, 438, 278, 563, 536, 531, 199,
	215, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 195, 202, 214, 224, 228,
	235, 250, 265, 267, 274, 288, 299, 307, 308, 311,
	317, 367, 373, 374, 375, 376, 395, 396, 397, 400,
	403, 404, 407, 409, 410, 413, 417, 421, 422, 423,
	424, 426, 428, 439, 444, 458, 459, 460, 461, 462,
	465, 466, 471, 472, 473, 474, 475, 483, 484, 488,
	511, 513, 525, 543, 548, 464, 290, 291, 429, 430,
	303, 304, 560, 561, 289, 520, 549, 0, 0, 365,
	0, 0, 368, 270, 294, 309, 0, 535, 485, 219,
	450, 280, 242, 0, 0, 204, 238, 222, 248, 263,
	266, 313, 378, 386, 415, 420, 286, 260, 236, 443,
	233, 468, 491, 492, 493, 495, 382, 255, 419, 0,
	0, 363, 501, 502, 305,
}

var yyPact = [...]int{
	-1000, -1000, 4007, -1000, -464, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2208,
	2335, -1000, -1000, -1000, -1000, 2387, -1000, 829, 1881, -1000,
	2182, 303, -1000, 46496, 578, -1000, 43900, 577, 215, 28973,
	-1000, 224, -1000, 190, 45198, 236, -1000, -1000, -1000, -1000,
	-297, 18587, 2100, 83, 79, 46496, -1000, -1000, -1000, -1000,
	2336, 1872, -1000, 403, -1000, -1000, -1000, -1000, -1000, -1000,
	43251, -1000, 931, -1000, -1000, 2185, 2171, 2396, 752, 2092,
	-1000, 2291, 1872, -1000, 18587, 2350, 2283, 17938, 17938, 512,
	-1000, -1000, 235, -1000, -1000, 24430, 46496, 31569, 486, -1000,
	2182, -1000, -1000, -1000, 117, -1000, 397, 1789, -1000, 1788,
	-1000, 788, 864, 433, 536, 533, 431, 429, 427, 425,
	420, 419, 414, 412, 441, -1000, 794, 794, -122, -127,
	4098, 482, 492, 492, 725, 549, 2133, 2125, -1000, -1000,
	794, 794, 794, 366, 794, 794, 794, 794, 372, 369,
	794, 794, 794, 794, 794, 794, 794, 794, 794, 794,
	794, 794, 794, 794, 794, 794, 794, 389, 2182, 336,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 46496, 285, 46496, -1000,
	645, 46496, 911, 911, 125, 911, 911, 911, 911, 222,
	679, 71, -1000, 207, 358, 241, 332, 892, 265, -1000,
	-1000, 318, 892, 1643, -1000, 756, 188, -1000, 911, 911,
	-1000, 12072, 158, 12072, 12072, -1000, 2143, -1000, -1000, -1000,
	-1000, -1000, 1118, -1000, -1000, -1000, -1000, -1000, 545, -1000,
	-1000, -1000, -1000, 45198, 42602, -289, -1000, -1000, 124, -1000,
	-1000, 1670, 1172, 18587, 1312, -1000, 1227, 707, -1000, -1000,
	-1000, -1000, -1000, 606, -1000, 19236, 19236, 19236, 19236, -1000,
	-1000, 1791, 41953, 1791, 1791, 19236, 1791, -1000, 19236, 1791,
	1791, 1791, 18587, 1791, 1791, 1791, 1791, -1000, 1791, 1791,
	1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791,
	1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791,
	1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791,
	1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791,
	1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791,
	1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791,
	1791, 1791, 1791, 1791, 1791, 1791, -1000, -1000, -1000, -1000,
	1791, 642, 1791, 1791, 1791, 1791, 1791, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1791, 1791, 1791, 1791, 1791,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1791,
	1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791,
	1791, 1791, 1791, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 20534, 1249, 1244, 1243, -1000, 15991,
	1791, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 46496, -1000, 1791, 271, 45198, 45198, 390, 2291, 1872,
	-1000, 2336, 2303, 403, -1000, 2892, 1918, 1415, 1294, 1872,
	1758, 46496, -1000, 1801, -1000, -1000, -1000, -1000, 2020, 1288,
	1629, -1000, -1000, -1000, -1000, 1939, 18587, -1000, -1000, 2384,
	-1000, 21833, 640, 2383, 41304, -1000, 512, 512, 1786, 464,
	14, -1000, -1000, -1000, -1000, 813, 28324, -1000, -1000, -1000,
	-1000, 1628, 46496, -1000, -1000, 6153, 1089, -1000, 1876, -1000,
	1626, -1000, 1827, 18587, 1899, 576, 1089, 567, 564, 559,
	-1000, -26, -1000, -1000, -1000, -1000, -1000, -1000, 794, 794,
	794, -1000, 439, 2349, 303, 4070, -1000, -1000, -1000, 40655,
	1864, 1089, -1000, 1859, -1000, 871, 601, 666, 666, 1089,
	-1000, -1000, 45847, 1089, 869, 868, 1089, 1089, 45198, 45198,
	-1000, 40006, -1000, 39357, 38708, 1111, 45198, 38059, 37410, 36761,
	36112, 35463, -1000, 2256, -1000, 1952, -1000, -1000, -1000, 45847,
	1089, 1089, 45847, 45198, 45847, 46496, 1089, -1000, -1000, 377,
	-1000, -1000, 1110, 1107, 1105, 794, 794, 1100, 1622, 1621,
	1600, 794, 794, 1097, 1567, 30271, 1549, 330, 1094, 1088,
	1073, 1061, 1545, 193, 1542, 1057, 1015, 1069, 45198, 1854,
	46496, -1000, 317, 764, 547, 812, 2182, 2094, 1781, 541,
	575, 1089, 495, 495, 45198, -1000, 14037, -1000, -1000, 1534,
	18587, -1000, 897, 892, 892, -1000, -1000, -1000, -1000, -1000,
	-1000, 911, 46496, 897, -1000, -1000, -1000, 892, 911, 46496,
	911, 911, 911, 911, 892, 892, 892, 911, 46496, 46496,
	46496, 46496, 46496, 46496, 46496, 46496, 46496, 12072, 756, 911,
	-322, -1000, 1518, -1000, 1975, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 12072, 12072, -1000, -1000, -1000, -1000, 229, -1000, 34814,
	422, 810, -1000, 422, 808, 1774, 34165, -1000, -350, -355,
	-359, -360, -1000, -1000, -1000, -365, -374, -1000, -1000, -1000,
	18587, 18587, 18587, 18587, -150, -1000, 855, 19236, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 133, 905, 19236, 19236, 19236,
	19236, 19236, 19236, 19236, 19236, 19236, 19236, 19236, 19236, 19236,
	19236, 19236, -1000, -1000, 26377, 7353, 7353, 707, 707, 707,
	707, -1000, -89, 1770, 45847, -1000, -1000, -1000, 639, 18587,
	18587, 707, -1000, 1089, 15991, 33516, 17938, 17938, 18587, 797,
	1172, 45847, 18587, -1000, 1294, -1000, -1000, -1000, 1049, -1000,
	861, 2157, 2157, 2157, 2157, 18587, 18587, 18587, 18587, 18587,
	18587, 18587, 18587, 18587, 18587, 2157, 45198, 45198, 850, 18587,
	18587, 18587, 18587, 18587, 18587, 14692, 18587, 18587, 19236, 18587,
	18587, 18587, 1294, 18587, 18587, 18587, 18587, 18587, 18587, 18587,
	18587, 18587, 18587, 18587, 18587, 18587, 18587, 18587, 18587, 18587,
	18587, 18587, 18587, 18587, 18587, 18587, 18587, 18587, 18587, 18587,
	1294, 18587, 1083, 18587, 18587, 17938, 13382, 17938, 17938, 17938,
	17938, 17938, -1000, -1000, -1000, -1000, -1000, 18587, 18587, 18587,
	18587, 18587, 18587, 18587, 18587, 1294, 18587, 18587, 18587, 18587,
	18587, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2001, 1438, 1316, 18587, -1000, 1764, -1000, -154, 23781,
	18587, 1515, 2377, 1924, 45198, -1000, -1000, -1000, 2291, -1000,
	2291, 2001, 2788, 2008, 17938, -1000, -1000, 2788, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1582, -1000, 46496, 1758,
	2224, 45198, 2016, 1513, 511, -1000, 18587, 18587, 1757, -1000,
	1084, 46496, -1000, -150, -1000, 32867, -1000, -1000, 11417, 46496,
	399, 46496, -1000, 23132, 32218, 262, 14, -1000, 1706, -1000,
	35, 41, 15341, 703, -1000, -1000, -1000, 4098, 19885, 1653,
	703, 146, -1000, -1000, -1000, 1827, -1000, 1827, 1827, 1827,
	1827, 511, 511, 511, 511, -1000, -1000, -1000, -1000, -1000,
	1851, 1848, -1000, 1827, 1827, 1827, 1827, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1842, 1842, 1842, 1828, 1828, 481,
	-1000, 18587, 374, 31569, 2204, 1068, 1650, 317, 510, 1911,
	1089, 1089, 1089, 510, -1000, 1183, 1166, 1164, -1000, -450,
	1747, -1000, -1000, 2348, -1000, -1000, 912, 898, 896, 881,
	45198, 283, 394, -1000, 462, -1000, 31569, 1089, 867, 666,
	1089, -1000, 1089, -1000, -1000, -1000, -1000, -1000, 1089, -1000,
	-1000, 1724, -1000, 1750, 934, 894, 926, 882, 1724, -1000,
	-1000, -99, 1724, -1000, 1724, -1000, 1724, -1000, 1724, -1000,
	1724, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	793, 232, -224, 45198, 283, 534, -1000, 519, 26377, -1000,
	-1000, -1000, 26377, 26377, -1000, -1000, -1000, -1000, 1455, 1447,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -434,
	46496, -1000, 292, 806, 375, 410, 348, 46496, 254, 2286,
	2273, 2268, 2250, 2240, 338, 368, 46496, 46496, 495, 1980,
	46496, 2200, 46496, -1000, -1000, -1000, -1000, -1000, 1172, 46496,
	-1000, -1000, 911, 911, -1000, -1000, 46496, 911, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 911, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 46496, -1000, -1000, -1000, -1000, 45198, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -114, -1000, 312,
	147, 51, 380, -1000, -1000, -1000, -1000, -1000, 2255, -1000,
	1172, 843, 851, -1000, 1791, -1000, -1000, 960, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 133, 19236, 19236, 19236, 1157,
	538, 1660, 1180, 1245, 1191, 1191, 700, 700, 711, 711,
	711, 711, 711, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1434, -1000, 1791, 45847, 1595, 13382, 1590, 1044, 1294,
	2763, -1000, 1586, -1000, 1586, 1369, 821, -1000, 18587, 1294,
	2755, -1000, -1000, 1294, 1294, 1294, 18587, -1000, -1000, 18587,
	18587, 18587, 18587, 1650, 1650, 1650, 1650, 1650, 1650, 1650,
	1650, 1650, 1650, 18587, 1721, 1715, 2376, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1196, 1650,
	1650, 1650, 1650, 1650, 18587, 1958, -1000, -1000, -1000, 1293,
	2751, 1098, 2746, 1650, 1650, -1000, 1650, 2733, 2718, 1294,
	1670, 1294, 1711, -1000, 2708, 1650, 2677, 2641, 2637, 2045,
	2607, 2602, 2575, 1650, 1650, 1650, 2017, 2324, 2316, 2309,
	2300, 2292, 2278, 2254, 2243, 2237, 1650, -153, 1650, 1294,
	-1000, -1000, -1000, -1000, -1000, 2233, 1987, 1294, 1708, 1791,
	638, -1000, -1000, 1586, 1294, 1294, 1586, 1586, 2221, 2207,
	2188, 2177, 2164, 2148, 1650, 1650, -1000, 1650, 2142, 2138,
	1978, 1974, 1294, -1000, 1316, 46496, -1000, -308, -1000, 23,
	710, 1791, -1000, 30271, 1294, -1000, 6543, -1000, 1013, -1000,
	-1000, -1000, -1000, -1000, 27675, 1731, 2788, -1000, -1000, 1791,
	1571, -1000, -1000, 511, 127, 27026, 701, 701, 172, 1172,
	1172, 18587, -1000, -1000, -1000, -1000, -1000, -1000, 634, 2361,
	385, 1791, -1000, 1733, 2809, -1000, -1000, -1000, 2223, 21184,
	-1000, -1000, 1791, 1791, 46496, 1649, 1570, -1000, 626, -1000,
	1126, 1706, 14, 30, -1000, -1000, -1000, -1000, 1172, -1000,
	1139, 407, 4744, -1000, 475, -1000, -1000, -1000, -1000, 2112,
	119, -1000, -1000, -1000, 288, 511, -1000, -1000, -1000, -1000,
	-1000, -1000, 1404, 1404, -1000, -1000, -1000, -1000, -1000, 1067,
	-1000, -1000, -1000, 1060, -1000, -1000, 2114, 1941, 374, -1000,
	-1000, 794, 1386, -1000, -1000, 2120, 794, 794, 45198, -1000,
	-1000, 1652, 2204, 292, 46496, 826, 1979, -1000, 1911, 1911,
	1911, 46496, -1000, -1000, -1000, -1000, -1000, -1000, -438, 63,
	402, -1000, -1000, -1000, 671, 45198, 1556, -1000, 281, -1000,
	1646, -1000, 45198, -1000, 1554, 1840, 1089, 1089, -1000, -1000,
	-1000, 45198, 1791, -1000, -1000, -1000, -1000, 570, 2175, 311,
	-1000, -1000, -170, -1000, -1000, 283, 281, 45847, 1089, 703,
	-1000, -1000, -1000, -1000, -1000, -439, 1529, 552, 291, 334,
	46496, 46496, 46496, 46496, 46496, 593, -1000, -1000, 64, -1000,
	-1000, 255, -1000, -1000, -1000, -1000, 255, -1000, -1000, -1000,
	-1000, 352, 517, -1000, 46496, 46496, 664, -1000, -1000, -1000,
	892, -1000, -1000, 892, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2166, 46496,
	45, -401, -1000, -392, 18587, -1000, -1000, -1000, -1000, 1079,
	537, 1660, 19236, 19236, 19236, -1000, -1000, -1000, 681, 681,
	26377, -1000, 18587, 17938, -1000, -1000, 18587, 18587, 816, -1000,
	18587, 1056, -1000, 18587, -1000, -1000, -1000, 1316, 1650, 1650,
	1650, 1650, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1725, 18587, 18587, 18587, 1294, 342, -1000, -1000,
	-1000, -1000, -1000, 2375, -1000, 18587, -1000, 26377, 18587, 18587,
	18587, -1000, -1000, -1000, 18587, 18587, -1000, -1000, 18587, 18587,
	-1000, 18587, 18587, 18587, -1000, 18587, 18587, 18587, 18587, -1000,
	-1000, -1000, -1000, 18587, 18587, 18587, 18587, 18587, 18587, 18587,
	18587, 18587, 18587, -1000, -1000, 31569, 80, -153, 1083, 80,
	1083, -1000, 17938, 12727, -1000, -1000, -1000, -1000, -1000, 18587,
	18587, 18587, 18587, 18587, 18587, -1000, -1000, -1000, 18587, 18587,
	-1000, 18587, -1000, 18587, -1000, -1000, -1000, -1000, -1000, 710,
	-1000, 666, 666, 666, 45198, -1000, -1000, -1000, -1000, 1705,
	-1000, 2236, -1000, 2050, 2049, 2368, 2361, -1000, 23132, 2788,
	-1000, -1000, 45198, -293, -1000, 2090, 2046, 701, 701, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 10762, 2291, 18587, 1973,
	45847, 143, -1000, 22483, 45198, 45847, 23132, 23132, 23132, 23132,
	23132, -1000, 1998, 1994, -1000, 2026, 2005, 2095, 46496, -1000,
	2001, 1526, -1000, 18587, 25079, 1665, 23132, -1000, -1000, 23132,
	46496, 10107, -1000, -1000, 29, 34, -1000, -1000, -1000, -1000,
	4098, -1000, -1000, 2668, 2222, 2107, -1000, -1000, -1000, -1000,
	-1000, 1424, -1000, 1414, 1698, 1410, 232, -1000, 1835, 2144,
	794, 794, -1000, 1046, -1000, 1089, 1381, 1370, -1000, -1000,
	-1000, 539, -1000, 2195, 46496, 1971, 1967, 1964, -1000, -448,
	1045, 1836, 1762, 18587, 1834, 2347, 1680, 45198, -1000, -1000,
	45847, -1000, 259, -1000, 374, 45198, -1000, -1000, -1000, 394,
	46496, -1000, 7661, -1000, -1000, -1000, 281, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 46496, 295, -1000, 1833, 1048, -1000,
	-1000, 1905, -1000, -1000, -1000, -1000, 240, 360, 1357, 228,
	1333, 228, -1000, 46496, 632, 1941, 46496, -1000, -1000, -1000,
	911, 911, -1000, -1000, 2136, -1000, 1089, 1650, 19236, 19236,
	-1000, 707, 315, -132, 1827, 1827, -1000, 1827, 1828, -1000,
	1827, 198, 1827, 196, 1827, -1000, -1000, 1294, 1294, 1316,
	-1000, 1970, 1093, -1000, 1172, 18587, 2128, -1000, -1000, -1000,
	-1000, -1000, -33, 2121, 2079, 1650, -1000, 1826, 1825, 18587,
	1650, 1294, 1950, 1650, 1650, 1650, 1650, -1000, 1172, 1316,
	2060, 1316, 1650, 1650, 2056, 325, 1650, 1402, 1402, 1402,
	1402, 1402, 1316, 1316, 1316, 1316, 45198, -1000, -153, -1000,
	-1000, -190, -198, -1000, 1294, -153, 1691, 1294, -1000, 1945,
	1912, 1982, 1830, 1650, 1726, 1650, 1650, 1650, 1783, -1000,
	2234, 2234, 2234, 1395, 1013, 46496, -1000, -1000, -1000, -1000,
	2361, 2356, 1684, -1000, -1000, 127, 440, -1000, 2066, 2046,
	-1000, 2344, 2086, 2339, -1000, -1000, -1000, -1000, -1000, 1172,
	-1000, 2173, 1657, -1000, 805, 1674, -1000, -1000, 17289, 1397,
	2027, 619, 1395, 1720, 2809, 1915, 1963, 2876, -1000, -1000,
	-1000, -1000, 1988, -1000, 1951, -1000, -1000, 1801, -1000, 1531,
	399, 23132, 1702, 1702, -1000, 618, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 918, 6792, 2395, -1000, 1278, -1000, 1125,
	184, 1041, -1000, -1000, 794, 794, -1000, 865, 863, -1000,
	46496, 1824, -1000, 511, 1276, 511, 1038, -1000, 1029, -1000,
	-1000, -1000, -1000, 1756, 2253, -1000, -1000, -1000, -1000, 46496,
	-1000, -1000, 46496, 46496, 46496, 1823, 2332, -1000, 18587, 1821,
	803, 2038, 45198, 45198, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 496, 794, -417, 367, 365,
	794, 794, 794, -449, -1000, -1000, 1393, 1365, -1000, -117,
	-1000, 18587, -1000, -1000, -1000, 1050, 1050, 1249, 1244, 1243,
	-1000, 1801, -1000, -1000, -1000, 1416, -1000, -1000, -105, 45198,
	45198, 45198, 45198, -1000, -1000, 973, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 707, 1294,
	340, -109, 1294, -1000, -1000, 511, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18587, -1000, 18587, -1000,
	1172, 18587, 2291, 1241, 18587, 18587, -1000, 1019, 989, 1650,
	-1000, -1000, -1000, 18587, -1000, -1000, -1000, -1000, -1000, 18587,
	-1000, -1000, -1000, 18587, 221, 681, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1294, 395, -1000, -1000,
	-1000, -1000, 2366, -1000, 1294, 18587, -1000, -1000, 18587, -1000,
	18587, 18587, -1000, 18587, -1000, 18587, -1000, -1000, -1000, -1000,
	18587, 1791, 2172, 1791, 1791, 25079, -1000, -1000, 2356, 2353,
	2331, 2076, 2078, 2078, 2066, -1000, 2327, 2325, -1000, 1225,
	2319, 1222, 860, -1000, 45847, 18587, 143, -1000, 387, 45198,
	143, 45198, -1000, 2304, -1000, -1000, 18587, 1805, -1000, 18587,
	-1000, -1000, -1000, -1000, 7353, 2361, 1702, -1000, -1000, 737,
	-1000, 18587, -1000, -1000, -1000, 4071, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1208, 1206, -1000, -1000, 1804, 18587,
	-1000, -1000, -1000, 1411, 1403, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1801, -1000, -1000, -1000, -1000, 394, -443,
	1999, 45198, 988, -1000, 1363, 1680, 381, 143, 1168, 794,
	794, 794, 959, 948, 30271, 1355, -1000, 45198, 453, -1000,
	394, -1000, -128, -129, 1650, -1000, -1000, 2220, -1000, -1000,
	12727, -1000, -1000, 1796, 1907, -1000, -1000, -1000, -1000, 2006,
	-95, -111, -1000, -1000, 1650, 1650, 1336, 1294, -1000, 1650,
	1650, 1398, 1366, -1000, 1650, 1316, 1765, -1000, 221, 1294,
	1949, -1000, -1000, 7353, -1000, -1000, 2304, 2318, 80, -1000,
	-1000, 273, 80, 1172, 1748, 1650, 1722, 1718, 1650, 1650,
	25728, -1000, 2306, 2294, 30920, 30920, 710, 2353, -160, 18587,
	18587, 2041, 953, -1000, -1000, -1000, -1000, 1151, 1147, -1000,
	1143, -1000, 2393, -1000, 1172, -1000, 143, -1000, 597, 1674,
	-1000, 2291, 1172, 45198, 1172, 101, 2304, -1000, 1650, -1000,
	1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791,
	1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791,
	1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791,
	1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791,
	1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791,
	1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791,
	1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791,
	-1000, -1000, 45198, 1816, -1000, -1000, 2218, 1346, 61, -1000,
	1332, 1680, -1000, -1000, 135, -1000, 18587, -1000, 30271, 1141,
	1134, -1000, -1000, -1000, -1000, -449, -1000, -1000, -1000, -1000,
	-1000, -1000, 403, 1679, -1000, 780, 45198, 46496, -1000, 1953,
	-1000, -1000, -1000, 18587, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 18587, -1000, 1294, 1947, -1000, -268, -1000, -422,
	18587, -153, -1000, -1000, -153, -1000, 18587, -1000, -1000, 18587,
	-1000, 18587, -1000, -1000, 1340, -1000, -1000, -1000, -1000, -1000,
	1340, 1340, -1000, -160, -1000, 1675, -1000, 45198, 1172, 1670,
	-1000, 950, -1000, -1000, -1000, -1000, -1000, 45847, 1674, 45198,
	-1000, 1338, 1294, 1791, 2291, -1000, 1331, -1000, 403, -1000,
	1795, 1762, -1000, -1000, -1000, 16640, -1000, -1000, -1000, -1000,
	-1000, 195, -102, 12727, 9452, 1318, -1000, -101, 1650, 1316,
	-1000, -380, -1000, -1000, -1000, -1000, 216, -1000, -1000, 1670,
	-1000, -1000, 1676, 1636, 1632, 29622, -1000, -1000, -1000, -1000,
	-160, -1000, -1000, 2217, -1000, -1000, 1659, -1000, -1000, 25079,
	44549, -1000, -87, 320, -102, 18587, 1792, 1294, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 13, -1000, -1000, -1000,
	-1000, -1000, 1905, -113, -1000, -1000, -1000, 131, -404, -186,
	-187, -1000, -1000, 19236, -1000, 18587, -1000, 18587, -1000, 18587,
	-1000, -1000, -1000, 45198, 1791, -1000, 1313, -1000, 5494, -227,
	1942, -1000, -50, -1000, -1000, -1000, 913, 1130, -1000, -1000,
	-1000, -1000, -1000, -1000, 1709, 45198, -1000, 473, -1000, -1000,
	-105, -118, 844, -1000, -1000, -1000, -1000, -1000, 1537, 1291,
	1650, -1000, 45198, -1000, 44549, -220, 703, 7353, -1000, 1933,
	1927, 2373, -1000, -1000, -1000, -1000, -1000, -1000, -456, 1287,
	307, -1000, -1000, 131, -1000, 18587, -1000, 18587, -1000, 1294,
	-1000, -1000, 2190, 101, -1000, 2392, -1000, 2388, 702, 702,
	-1000, 944, -456, -1000, -1000, 1650, 1650, -1000, -246, -1000,
	-1000, -1000, -1000, -1000, 445, 1009, -1000, -1000, -1000, -1000,
	-1000, 7353, -1000, -1000, -1000, 202, 202, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2977, 2975, 30, 1, 37, 36, 2974, 93, 103,
	213, 40, 194, 115, 2973, 162, 2972, 2971, 2969, 2968,
	2967, 2966, 2415, 2411, 2410, 2965, 2964, 2963, 2962, 2961,
	2959, 2955, 2952, 2951, 2948, 178, 160, 191, 2941, 2940,
	2939, 121, 184, 80, 88, 186, 2938, 2936, 82, 2934,
	2933, 2932, 182, 179, 171, 827, 2930, 170, 119, 53,
	2929, 2928, 2926, 2924, 2923, 2922, 2921, 2912, 2911, 2910,
	2909, 2908, 2907, 2903, 2901, 2899, 2898, 289, 2895, 2891,
	23, 2889, 84, 2886, 2884, 2881, 2871, 2869, 11, 2868,
	2867, 16, 39, 2866, 2865, 51, 2864, 2861, 2858, 2855,
	2848, 21, 2841, 27, 2838, 38, 2837, 2836, 127, 2833,
	2832, 2830, 41, 2824, 2820, 2809, 2808, 2807, 2803, 2801,
	142, 2800, 2799, 2797, 248, 209, 2794, 2793, 168, 143,
	110, 2792, 2791, 113, 188, 2790, 124, 2789, 2788, 2786,
	147, 2784, 138, 2781, 2777, 68, 76, 2775, 371, 2774,
	2772, 10, 17, 62, 9, 18, 19, 2771, 2766, 67,
	77, 2761, 120, 2758, 2757, 99, 87, 2756, 105, 102,
	2753, 2752, 13, 4, 2751, 2, 7, 3, 70, 2747,
	2742, 118, 2740, 2739, 2738, 98, 2736, 2735, 4391, 2734,
	95, 131, 101, 81, 2730, 48, 71, 2728, 2727, 2726,
	2724, 2721, 54, 2718, 2715, 2713, 140, 341, 156, 2711,
	45, 106, 58, 134, 2710, 63, 78, 192, 161, 2709,
	2708, 137, 136, 2707, 2699, 61, 46, 44, 2697, 112,
	133, 123, 111, 109, 139, 2693, 2682, 65, 74, 2667,
	2664, 2639, 2638, 163, 2630, 2629, 73, 2628, 59, 2627,
	189, 2623, 22, 64, 2622, 47, 172, 2617, 75, 2616,
	2614, 69, 100, 72, 57, 2603, 174, 2601, 56, 173,
	130, 167, 2600, 2597, 2596, 2595, 190, 352, 2593, 2592,
	79, 166, 144, 146, 94, 2590, 364, 2589, 2586, 132,
	2615, 5083, 2578, 42, 159, 2576, 2575, 6291, 176, 50,
	33, 2574, 117, 2572, 2565, 2564, 2562, 197, 164, 108,
	151, 60, 2561, 2546, 2539, 15, 2538, 2534, 2531, 2529,
	2526, 2525, 91, 35, 34, 32, 202, 66, 24, 107,
	154, 89, 2524, 2517, 2514, 126, 92, 2513, 158, 157,
	128, 165, 2510, 169, 141, 116, 2508, 97, 31, 2507,
	2502, 2500, 2499, 90, 2490, 2483, 2482, 2480, 152, 145,
	125, 83, 2476, 86, 122, 148, 149, 55, 2475, 49,
	2472, 2471, 29, 185, 28, 2470, 14, 104, 226, 2461,
	4263, 183, 2460, 20, 358, 155, 2459, 2456, 8, 12,
	6, 2449, 2446, 2440, 2438, 135, 2437, 2435, 2430, 2428,
	26, 52, 25, 5, 114, 85, 2427, 2424, 3059, 0,
	129, 2423, 193,
}

//line sql.y:7917
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) vtexplainTypeUnion() VtExplainType {
	v, _ := st.union.(VtExplainType)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 406, 407, 407, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 258,
	380, 381, 381, 256, 256, 33, 72, 35, 35, 34,
	34, 37, 37, 36, 8, 8, 8, 9, 9, 9,
	9, 9, 9, 9, 9, 10, 10, 10, 10, 10,
	11, 11, 11, 11, 13, 13, 13, 13, 13, 20,
	21, 12, 12, 22, 22, 106, 106, 23, 24, 24,
	24, 24, 410, 410, 183, 183, 181, 181, 182, 182,
	261, 261, 25, 26, 26, 271, 271, 270, 270, 270,
	272, 272, 272, 272, 310, 310, 310, 27, 27, 27,
	27, 27, 126, 126, 383, 383, 382, 376, 376, 375,
	375, 374, 379, 379, 378, 378, 377, 39, 40, 49,
	49, 49, 49, 50, 51, 384, 384, 349, 56, 56,
	55, 55, 55, 55, 55, 55, 57, 57, 53, 53,
	52, 52, 54, 54, 351, 351, 337, 337, 350, 350,
	350, 350, 350, 350, 350, 336, 336, 137, 137, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 399, 399, 399, 398,
	398, 236, 236, 236, 236, 236, 236, 236, 236, 147,
	147, 159, 159, 159, 159, 159, 145, 145, 146, 144,
	144, 144, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 158, 158, 154, 154, 154, 155, 155, 155, 156,
	156, 400, 400, 400, 400, 315, 315, 315, 315, 318,
	318, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	317, 317, 317, 317, 317, 319, 319, 319, 319, 319,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 321, 321, 321, 321,
	321, 321, 321, 321, 335, 335, 322, 322, 330, 330,
	331, 331, 331, 332, 332, 332, 333, 333, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 329, 329, 328,
	328, 328, 338, 363, 363, 362, 362, 360, 360, 360,
	360, 360, 360, 360, 360, 347, 347, 357, 357, 357,
	357, 357, 346, 346, 342, 342, 342, 343, 343, 344,
	344, 341, 341, 345, 345, 359, 359, 358, 358, 339,
	339, 340, 340, 365, 401, 401, 401, 401, 401, 402,
	402, 366, 391, 393, 393, 393, 392, 392, 389, 390,
	388, 388, 388, 388, 388, 82, 82, 82, 284, 284,
	285, 285, 355, 355, 354, 354, 354, 356, 356, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	279, 279, 279, 387, 387, 387, 387, 387, 387, 386,
	386, 386, 352, 352, 352, 385, 385, 58, 58, 216,
	216, 404, 404, 405, 405, 405, 46, 46, 46, 46,
	46, 46, 45, 45, 45, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 47, 47, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 108, 108, 109, 109,
	109, 109, 111, 111, 111, 368, 368, 59, 59, 3,
	3, 171, 173, 174, 174, 172, 172, 172, 172, 172,
	172, 61, 61, 60, 60, 176, 175, 177, 177, 177,
	1, 1, 2, 2, 4, 4, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 334, 334,
	334, 367, 367, 369, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 114, 113, 113, 112, 115, 115,
	115, 115, 115, 115, 115, 115, 371, 371, 371, 62,
	62, 372, 323, 324, 325, 5, 6, 348, 370, 122,
	122, 29, 38, 38, 30, 30, 30, 30, 31, 31,
	63, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 278, 278, 287, 287, 277, 277, 302, 302,
	302, 280, 280, 280, 281, 281, 397, 397, 397, 274,
	274, 65, 65, 65, 303, 303, 303, 303, 67, 67,
	68, 69, 69, 305, 305, 306, 306, 70, 71, 83,
	83, 83, 83, 83, 83, 83, 84, 84, 84, 84,
	84, 107, 107, 107, 15, 15, 15, 15, 79, 79,
	79, 14, 14, 17, 66, 66, 73, 394, 394, 395,
	396, 396, 396, 396, 74, 76, 32, 32, 32, 32,
	32, 32, 132, 132, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 127, 127, 127, 121,
	121, 411, 77, 78, 78, 125, 125, 125, 118, 118,
	118, 124, 124, 124, 16, 16, 18, 260, 260, 19,
	19, 129, 129, 131, 131, 131, 131, 131, 133, 133,
	133, 133, 133, 133, 133, 128, 128, 130, 130, 130,
	130, 295, 295, 295, 294, 294, 165, 165, 167, 166,
	166, 168, 168, 169, 169, 169, 169, 214, 214, 191,
	191, 253, 253, 254, 254, 252, 252, 259, 259, 255,
	255, 255, 255, 262, 262, 170, 170, 170, 170, 178,
	178, 179, 179, 180, 180, 304, 304, 300, 300, 300,
	299, 299, 184, 184, 184, 186, 185, 185, 185, 185,
	187, 187, 189, 189, 188, 188, 190, 195, 195, 194,
	194, 192, 192, 192, 192, 193, 193, 193, 193, 196,
	196, 142, 142, 142, 142, 142, 142, 142, 157, 157,
	157, 157, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 243, 243, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 151, 219, 219, 218, 218, 85, 85,
	85, 86, 86, 87, 87, 87, 87, 87, 88, 88,
	88, 88, 88, 143, 143, 90, 90, 89, 89, 209,
	209, 292, 292, 91, 92, 92, 95, 95, 94, 93,
	93, 99, 99, 96, 96, 98, 98, 97, 100, 100,
	101, 102, 102, 275, 275, 197, 197, 205, 205, 205,
	205, 198, 198, 198, 198, 198, 198, 198, 206, 206,
	206, 213, 207, 207, 203, 203, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 162, 162, 162, 162, 224, 224, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 150, 150, 163, 163, 163, 163, 164,
	164, 164, 164, 164, 164, 164, 312, 312, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 412,
	412, 326, 326, 326, 326, 204, 204, 204, 204, 204,
	123, 123, 123, 123, 123, 309, 309, 309, 313, 313,
	313, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 314, 314, 222, 222,
	119, 119, 220, 220, 221, 223, 223, 215, 215, 215,
	215, 217, 217, 200, 200, 200, 225, 225, 226, 226,
	103, 104, 104, 105, 105, 227, 227, 229, 228, 228,
	230, 231, 231, 231, 232, 232, 233, 233, 233, 48,
	48, 48, 48, 48, 43, 43, 43, 43, 44, 44,
	44, 44, 134, 134, 134, 134, 136, 136, 135, 135,
	80, 80, 81, 81, 81, 140, 140, 141, 141, 141,
	138, 138, 139, 139, 250, 250, 234, 234, 234, 241,
	241, 241, 237, 237, 239, 239, 239, 240, 240, 240,
	238, 247, 247, 249, 249, 248, 248, 244, 244, 245,
	245, 246, 246, 246, 242, 242, 199, 199, 199, 199,
	199, 251, 251, 251, 251, 263, 263, 210, 210, 212,
	212, 211, 211, 161, 264, 264, 268, 265, 265, 269,
	269, 269, 269, 257, 257, 257, 266, 266, 267, 267,
	296, 296, 296, 273, 273, 286, 286, 282, 282, 283,
	283, 276, 276, 288, 288, 288, 75, 208, 208, 364,
	364, 361, 291, 291, 293, 293, 297, 297, 301, 301,
	298, 298, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 408, 409, 307, 308, 308,
	308,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 0, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 5,
	7, 10, 9, 7, 8, 1, 1, 10, 11, 9,
	8, 8, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 6,
	12, 2, 0, 2, 0, 2, 1, 0, 2, 1,
	3, 3, 0, 1, 1, 3, 3, 6, 4, 7,
	8, 8, 8, 6, 3, 1, 1, 5, 0, 1,
	1, 1, 1, 2, 2, 2, 0, 1, 4, 4,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 5, 10, 0, 2, 0,
	2, 3, 5, 3, 4, 2, 3, 2, 3, 3,
	3, 3, 2, 2, 4, 4, 1, 1, 1, 1,
	1, 0, 2, 2, 3, 3, 2, 2, 2, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 5, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 0, 3,
	3, 2, 2, 2, 1, 2, 2, 0, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	1, 1, 3, 3, 3, 0, 1, 4, 3, 3,
	4, 2, 0, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 3, 3, 4, 3,
	1, 3, 1, 7, 6, 7, 7, 8, 8, 0,
	1, 5, 2, 1, 1, 1, 0, 1, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 1, 1, 2,
	0, 1, 0, 1, 1, 3, 2, 1, 2, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	0, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 1, 0,
	2, 0, 2, 0, 2, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 8, 5, 5, 4, 4, 4, 6,
	5, 5, 5, 2, 2, 2, 2, 3, 3, 3,
	4, 3, 3, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 7, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 0, 6, 5, 6,
	4, 5, 0, 8, 9, 0, 3, 0, 1, 0,
	3, 8, 4, 1, 3, 3, 6, 7, 7, 8,
	4, 0, 1, 0, 1, 3, 3, 1, 1, 2,
	1, 1, 0, 2, 0, 2, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 3, 3, 0, 2,
	2, 2, 2, 2, 2, 2, 4, 4, 3, 0,
	1, 4, 3, 4, 4, 3, 3, 3, 2, 1,
	3, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	3, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 2, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 3, 1, 0, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 4, 4, 4, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 6, 4,
	7, 6, 1, 3, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 1, 1, 0, 1, 1, 0,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	1, 0, 1, 1, 5, 5, 4, 0, 2, 4,
	4, 0, 1, 0, 1, 2, 3, 4, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 3, 1, 1, 2, 3,
	7, 0, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 3, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 1, 1,
	2, 6, 5, 6, 6, 0, 2, 3, 3, 0,
	2, 3, 3, 3, 2, 3, 1, 6, 3, 4,
	3, 1, 3, 4, 5, 6, 3, 4, 5, 6,
	3, 4, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 2, 2, 2,
	1, 1, 2, 7, 7, 6, 6, 2, 2, 1,
	6, 3, 3, 3, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 0, 1, 2, 5, 0,
	3, 0, 1, 4, 4, 2, 0, 1, 1, 2,
	2, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	5, 1, 3, 0, 3, 1, 1, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 4, 8, 6,
	8, 6, 5, 4, 10, 2, 2, 1, 2, 2,
	2, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 8, 8, 8,
	6, 5, 4, 4, 4, 4, 4, 7, 4, 4,
	6, 6, 6, 8, 6, 6, 4, 4, 3, 4,
	6, 6, 4, 4, 4, 6, 8, 6, 4, 6,
	6, 8, 10, 7, 8, 8, 9, 4, 4, 4,
	4, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 4, 4, 6, 5, 9, 6, 9, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 6, 8,
	10, 12, 14, 6, 8, 8, 10, 12, 14, 6,
	8, 10, 12, 6, 8, 4, 4, 3, 4, 6,
	6, 4, 6, 4, 6, 8, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 3, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 1, 3,
	5, 1, 1, 1, 2, 2, 0, 3, 0, 2,
	2, 1, 3, 0, 1, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 4, 1, 1, 3, 3, 1, 3, 3,
	3, 3, 3, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -406, -77, -411, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -64,
	-65, -67, -68, -69, -70, -71, -14, -17, -66, -32,
	-33, -72, -73, -74, -75, -76, -16, -18, -19, -9,
	-8, -13, 10, 11, -106, -34, 33, -39, -49, 225,
	-50, -40, 226, -51, 228, 227, 266, 229, 259, 75,
	313, 314, 316, 317, 318, 319, -107, 612, 264, 265,
	231, 37, 46, 34, 35, 38, 235, 272, 273, 234,
	-10, -35, 9, -408, 12, 445, 261, 260, 29, -12,
	507, 87, -78, -407, 659, -250, -234, 23, 34, 30,
	-233, -229, -125, -234, 21, 19, 8, -77, -77, -77,
	13, 14, -77, -349, -351, 87, 159, 87, -77, -56,
	-55, -53, -52, -54, -57, 32, -46, -47, -373, -45,
	-42, 230, 227, 276, 123, 124, 266, 267, 268, 229,
	250, 265, 269, 264, 285, -41, 82, 34, 507, 510,
	-356, 226, 232, 233, 228, 446, 126, 125, 76, -353,
	368, 540, 629, -57, 631, 101, 104, 630, 45, 240,
	632, 633, 634, 547, 635, 249, 636, 637, 638, 639,
	645, 588, 646, 647, 648, 127, 8, -77, -301, -297,
	91, -290, 504, 252, 538, 539, 301, 82, 42, 513,
	365, 368, 540, 475, 629, 313, 327, 321, 480, 481,
	482, 348, 340, 505, 541, 514, 304, 253, 289, 623,
	338, 135, 631, 308, 542, 267, 373, 374, 543, 375,
	101, 316, 412, 644, 307, 544, 642, 104, 630, 80,
	474, 52, 626, 45, 262, 336, 234, 332, 632, 290,
	545, 516, 283, 126, 123, 651, 37, 330, 51, 31,
	641, 125, 50, 633, 150, 546, 634, 547, 377, 355,
	617, 49, 378, 268, 548, 85, 273, 237, 509, 311,
	625, 379, 494, 331, 380, 300, 640, 231, 549, 608,
	600, 601, 381, 382, 618, 360, 356, 361, 496, 550,
	404, 479, 383, 604, 605, 658, 53, 551, 552, 619,
	124, 553, 79, 635, 81, 325, 326, 554, 298, 251,
	499, 500, 406, 352, 457, 464, 465, 111, 112, 460,
	113, 466, 114, 467, 468, 469, 458, 115, 108, 459,
	470, 471, 353, 354, 116, 472, 110, 109, 461, 463,
	117, 473, 249, 36, 384, 506, 302, 59, 306, 277,
	407, 47, 358, 655, 46, 613, 501, 555, 616, 351,
	347, 454, 54, 556, 557, 558, 559, 476, 636, 350,
	324, 346, 650, 4, 295, 477, 637, 63, 233, 363,
	362, 364, 284, 403, 343, 560, 561, 562, 256, 83,
	563, 333, 22, 564, 565, 385, 291, 566, 57, 567,
	568, 410, 265, 569, 55, 638, 40, 570, 270, 652,
	639, 571, 572, 573, 574, 272, 575, 387, 576, 602,
	603, 386, 357, 359, 502, 279, 388, 236, 508, 577,
	312, 329, 269, 643, 578, 257, 490, 491, 492, 493,
	624, 498, 497, 271, 276, 264, 411, 258, 579, 580,
	581, 582, 583, 305, 599, 584, 585, 317, 645, 455,
	44, 586, 587, 588, 589, 590, 299, 294, 405, 414,
	62, 84, 370, 591, 592, 622, 323, 292, 593, 314,
	56, 646, 647, 648, 286, 649, 483, 484, 485, 486,
	10, 656, 657, 478, 390, 127, 296, 297, 48, 344,
	278, 594, 309, 595, 334, 335, 349, 322, 345, 315,
	609, 280, 391, 456, 266, 596, 413, 293, 366, 371,
	310, 512, 495, 285, 392, 621, 511, 487, 488, 342,
	339, 287, 489, 597, 393, 241, 281, 282, 598, 610,
	394, 395, 303, 396, 397, 398, 399, 400, 402, 401,
	606, 607, 288, 510, 320, 337, 372, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 453, 239, -77, 239, -188,
	-297, 239, -266, 374, -287, 376, 389, 384, 394, 382,
	-278, 385, 387, 279, -397, 404, 239, 391, 225, 377,
	386, 395, 396, 303, 402, 397, 401, 288, 398, 399,
	400, -380, 177, 634, 649, 135, 341, 381, 379, 405,
	613, 91, -303, 91, 92, 93, -290, 315, -305, 320,
	-291, -380, -290, 318, -77, -77, -307, -307, -127, 613,
	615, -207, -142, 143, -157, -160, -148, -152, -201, -202,
	-203, -204, -158, -217, -256, 166, 167, 174, 144, -213,
	-161, 27, 503, 447, 446, 177, 32, -151, 220, 69,
	70, 449, 146, 58, 12, 422, 423, -159, 417, 424,
	419, 474, 476, 477, 478, 475, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 479, 451, 452, 118,
	453, 108, 110, 109, 454, 455, 456, 338, 501, 502,
	496, 499, 500, 498, 497, 353, 354, 457, 458, 459,
	111, 112, 113, 114, 115, 116, 117, 460, 463, 461,
	462, 464, 465, 466, 471, 472, 467, 468, 469, 470,
	473, -87, -99, 529, 528, -100, -149, -150, -163, -164,
	-291, -297, 244, 416, 238, 172, 445, -153, -146, -215,
	107, 92, 93, -8, -211, 415, 420, 421, 425, 418,
	515, 517, 532, 533, 535, 520, 525, 524, 527, 490,
	491, 492, 493, 494, 495, 600, 601, 602, 603, 604,
	605, 606, 607, -380, -290, 91, -155, -154, -197, 94,
	99, 102, 103, 105, -403, 262, 334, 335, 119, -408,
	627, 90, 95, 96, 97, 98, 120, 121, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	45, 390, 390, -188, -77, -77, -77, -77, -227, -125,
	-229, -10, -8, -408, 9, -77, -8, -9, -13, -35,
	-37, 534, -36, -297, 100, -234, -250, 13, 162, 43,
	51, -232, -233, -12, -8, -142, 20, 24, 25, -130,
	168, -142, -297, -130, -276, 243, -77, -77, -265, -310,
	315, -269, 405, 613, 404, -257, -267, 91, -256, -266,
	403, -350, 159, -336, -340, -291, 254, -366, 250, -188,
	-359, -358, -291, -408, -126, -286, 240, 248, 247, 136,
	-384, 139, 296, 416, 238, -52, -53, -54, -266, 176,
	633, -108, 271, 275, 88, 88, -340, -339, -338, -385,
	275, 254, -365, -357, 246, 255, -346, 247, 248, -341,
	240, 137, -385, -341, 245, 255, 250, 254, 275, 275,
	127, 275, 127, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 270, -347, 151, -347, 511, 511, -353, -385,
	250, 240, -385, -385, 246, -288, -341, 242, 26, 242,
	36, 36, -347, -347, -347, -266, 176, -347, -347, -347,
	-347, 283, 283, -347, -347, -347, -347, -347, -347, -347,
	-347, -347, -347, -347, -347, -347, -347, -347, -347, -347,
	239, -384, -134, 401, 303, 82, -55, 285, -38, -188,
	-286, 240, 241, -384, 272, -188, 221, -188, -280, 159,
	16, -280, -277, 390, 388, 375, 380, -280, -280, -280,
	-280, 286, 373, -342, 240, 36, 251, 390, 286, 373,
	286, 287, 286, 287, 383, 393, 286, -302, 15, 162,
	416, 378, 382, 279, 239, 280, 241, 392, 287, -302,
	90, -281, 159, 390, 282, -280, -280, -308, -408, -293,
	-291, -289, 230, 24, 142, 26, 28, 145, 177, 130,
	20, 146, 38, 232, 341, 250, 176, 246, 446, 225,
	73, 515, 417, 419, 415, 422, 448, 449, 416, 376,
	32, 14, 517, 29, 260, 25, 39, 170, 227, 149,
	518, 263, 27, 261, 118, 121, 520, 23, 76, 255,
	15, 248, 41, 17, 521, 522, 18, 244, 243, 162,
	240, 71, 12, 220, 30, 158, 67, 523, 137, 524,
	525, 526, 527, 131, 69, 159, 21, 653, 420, 421,
	34, 614, 503, 274, 172, 74, 60, 615, 143, 418,
	528, 529, 119, 530, 122, 77, 620, 139, 19, 72,
	43, 531, 275, 532, 245, 654, 533, 408, 534, 160,
	228, 445, 70, 161, 627, 535, 628, 238, 389, 9,
	450, 33, 259, 247, 129, 68, 536, 239, 148, 451,
	452, 242, 132, 120, 8, 136, 35, 13, 75, 78,
	423, 424, 425, 58, 128, 507, 147, 16, 537, 409,
	141, -380, 616, -308, -308, 33, 92, 242, -291, -188,
	-83, 608, 229, -84, 608, -132, 390, -120, 177, 634,
	617, 618, 619, 616, 387, 624, 622, 620, 286, 621,
	88, 139, 141, 142, 4, -142, 158, -198, 151, 152,
	153, 154, 155, 156, 157, 162, 143, 145, 159, -243,
	140, 163, 164, 165, 166, 167, 168, 169, 171, 170,
	172, 173, 160, 161, 176, 223, 224, -152, -152, -152,
	-152, -213, -219, -218, -408, -215, -380, -290, -297, -408,
	-408, -152, -275, -408, -408, -152, -408, -408, -408, -222,
	-142, -408, -408, -412, -408, -412, -412, -326, -408, -326,
	-408, -408, -408, -408, -408, -408, -408, -408, -408, -408,
	-408, -408, -408, -408, -408, -408, -408, -408, -408, -408,
	-408, -408, -408, -408, -408, -408, -408, -408, -408, -408,
	-408, -408, -408, -408, -408, -408, -408, -408, -408, -408,
	-408, -408, -408, -408, -408, -408, -408, -408, -408, -408,
	-408, -408, -408, -408, -408, -408, -408, -408, -408, -408,
	-408, -408, -408, -408, -408, -408, 221, -408, -408, -408,
	-408, -408, -326, -326, -326, -326, -326, -408, -408, -408,
	-408, -408, -408, -408, -408, -408, -408, -408, -408, -408,
	-408, 103, 99, 102, 94, -217, 105, 90, 90, 90,
	90, -8, -9, -207, -408, -307, -394, -395, -191, -188,
	-408, 303, -291, -291, 272, -232, -12, -8, -227, -233,
	-229, -8, -77, -118, -131, 64, 65, -133, 25, 39,
	68, 66, 24, -409, 89, -409, -250, -409, 88, -37,
	-253, 87, 62, 44, 90, 90, 88, 22, -228, -230,
	-142, 15, -295, 4, -294, 26, -291, 90, 221, 15,
	-189, 30, -188, -276, -276, 88, 315, 91, -271, -270,
	406, 408, 151, -296, -291, 90, 32, 89, 88, -188,
	-315, -318, -320, -319, -321, -316, -317, 338, 339, 177,
	342, 344, 345, 346, 347, 348, 349, 350, 351, 352,
	355, 33, 262, 334, 335, 336, 337, 356, 357, 358,
	359, 361, 362, 363, 364, 321, 340, 505, 322, 323,
	324, 325, 326, 327, 329, 330, 331, 332, 333, -381,
	-380, 87, 89, 88, -322, 87, -142, -134, 239, -380,
	240, 240, 240, -77, 445, -347, -347, -347, 270, 20,
	-45, -42, -373, 19, -41, -42, 230, 123, 124, 227,
	87, -336, 87, -345, -381, -380, 87, 137, 245, 136,
	-344, -341, -344, -345, -380, -215, -380, 137, 137, -380,
	-380, -262, -291, -262, -262, 24, -262, 24, -262, 24,
	96, -291, -262, 24, -262, 24, -262, 24, -262, 24,
	-262, 24, 32, 79, 80, 81, 32, 83, 84, 85,
	-215, -380, -380, -215, -336, -215, -188, -380, -266, 96,
	96, 96, -347, -347, 96, 90, 90, 90, -347, -347,
	96, 90, -299, -297, 90, 90, -386, 256, 300, 302,
	96, 96, 96, 96, 32, 90, -387, 32, 641, 640,
	642, 643, 644, 90, 96, 32, 96, 32, 96, -291,
	87, -188, -140, 290, 225, 227, 230, 77, 90, 306,
	307, 304, 309, 310, 151, 45, 88, 242, 239, -380,
	-282, 244, -282, -291, -298, -297, -289, 90, -142, -343,
	15, 162, -302, -302, -280, -188, -343, -302, -280, -188,
	-280, -280, -280, -280, -302, -302, -302, -280, -297, -297,
	-188, -188, -188, -188, -188, -188, -188, -308, -281, -280,
	616, 90, -274, 15, 77, -308, -308, -306, 318, -79,
	-291, 90, -15, -11, -23, -22, -24, 151, -15, 151,
	88, 507, -181, -188, 616, 616, 616, 616, 616, 616,
	-142, -142, -142, -142, 530, -205, 119, 143, 120, 121,
	-160, -206, -211, -213, 106, 162, 145, 159, -243, -148,
	-152, -148, -148, -148, -148, -148, -148, -148, -148, -148,
	-148, -148, -148, -148, -309, -291, 90, 177, -156, -155,
	105, -403, -156, 504, 88, -218, 221, -142, -142, -380,
	-142, -291, -128, -130, -128, -142, -220, -221, 147, -215,
	-142, -409, -409, 96, 105, 168, -124, 25, 39, -124,
	-124, -124, -124, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -124, -291, -291, -117, -116, 427, 428,
	429, 430, 432, 433, 434, 437, 438, 442, 443, 426,
	444, 431, 436, 439, 440, 441, 435, 337, -142, -142,
	-142, -142, -142, -142, -85, -142, 130, 131, 132, -207,
	-142, -148, -142, -142, -142, -409, -142, -142, -142, -208,
	-207, -379, -378, -377, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -409, -142, -162,
	-146, 96, -258, 105, 92, -142, -142, -129, -128, -293,
	-298, -289, -290, -128, -129, -129, -128, -128, -142, -142,
	-142, -142, -142, -142, -142, -142, -409, -142, -142, -142,
	-142, -142, -250, -409, -207, 88, -396, 408, 409, 614,
	-300, 275, -299, 26, -208, 90, 15, -260, 78, -291,
	-232, -232, 64, 65, 60, -128, -133, -409, -36, 26,
	-252, -291, 63, 90, -327, -266, 365, 366, 177, -142,
	-142, 88, -231, 28, 29, -188, -294, 168, -298, -188,
	-261, 275, -188, -166, -168, -169, -170, -191, -214, -408,
	-171, -8, 526, 523, 15, -181, -182, -190, -297, -269,
	-310, -271, 88, 407, 409, 410, 77, 122, -142, -328,
	176, -355, -354, -353, -336, -338, -339, -340, 89, -328,
	-332, 371, 370, -322, -322, -322, -322, -322, -327, -327,
	-327, -327, 87, 87, -322, -322, -322, -322, -330, 87,
	-330, -330, -331, 87, -331, -366, -142, -363, -362, -360,
	-361, 249, 101, 598, 554, 507, 547, 588, 78, -358,
	-231, 96, -409, -140, -283, 244, -364, -361, -380, -380,
	-380, -283, 91, 90, 91, 90, 91, 90, -109, -59,
	-1, 653, 654, 655, 88, 20, -337, -336, -58, 300,
	-369, -370, 275, -365, -359, -345, 137, -344, -345, -345,
	-380, 88, 30, 127, 127, 127, 127, 507, 227, 33,
	-284, 546, 143, 598, 554, -336, -58, 242, 242, -309,
	-309, -309, 90, 90, -279, 649, -181, -136, 292, 151,
	281, 281, 239, 239, 294, -188, 305, 308, 306, 307,
	304, 309, 310, 24, 24, 24, 24, 24, 293, 295,
	297, 283, -188, -188, -282, 77, -183, -188, 27, -297,
	-188, -280, -280, -188, -280, -280, -188, -291, 352, 609,
	610, 612, 611, 352, 239, 236, 237, -120, 408, 88,
	507, 23, -121, 23, -408, 119, 120, 121, -206, -148,
	-152, -148, 142, 263, -408, -215, -409, -293, 26, 88,
	78, -409, 88, 88, -409, -409, 88, 15, -223, -221,
	149, -142, -409, 88, -409, -409, -409, -207, -142, -142,
	-142, -142, -409, -409, -409, -409, -409, -409, -409, -409,
	-409, -409, -207, 88, 88, 15, -313, 26, -409, -409,
	-409, -409, -409, -222, -409, 15, -409, 78, 88, 162,
	88, -409, -409, -409, 88, 88, -409, -409, 88, 88,
	-409, 88, 88, 88, -409, 88, 88, 88, 88, -409,
	-409, -409, -409, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, -409, -92, 531, -409, -409, 88, -409,
	88, -409, -408, 221, -409, -409, -409, -409, -409, 88,
	88, 88, 88, 88, 88, -409, -409, -409, 88, 88,
	-409, 88, -409, 88, -409, -395, 613, 409, -195, -194,
	-192, 75, 243, 76, -408, -299, -409, -156, -258, -259,
	-258, -200, -291, 96, 105, -234, -165, -167, 15, -133,
	-213, 89, 88, -327, -238, -244, -277, -291, 90, 177,
	-329, 177, -329, 365, 366, -230, 221, -196, 16, -199,
	33, 58, -11, -408, -408, 33, 88, -184, -186, -185,
	-187, 67, 71, 73, 68, 69, 70, 74, -304, 26,
	-8, -166, -8, -408, -188, -181, -410, 15, 78, -410,
	88, 221, -270, -272, 411, 408, 414, -380, 90, -108,
	88, -353, -340, -235, -137, 41, -333, 372, -327, 514,
	-327, -335, 90, -335, 96, 96, 89, -48, -43, -44,
	34, 82, -360, -347, 90, 40, -347, -347, -291, 89,
	-231, -136, -188, 143, 77, -364, -364, -364, -297, -2,
	652, 658, 137, 87, 375, 19, -252, 88, 89, -216,
	301, 89, -110, -291, 89, 87, -345, -345, -291, -408,
	239, 32, 32, 598, 554, 546, -58, -216, -215, -380,
	-328, 651, 650, 89, 241, 299, -141, 422, -138, 90,
	91, -188, -188, -188, -188, -188, 230, 227, 398, -404,
	311, -404, 284, 242, -181, -188, 88, -82, 258, 253,
	-302, -302, 34, -188, 408, 625, 623, -142, 142, 263,
	-160, -152, -148, -311, 177, 338, 262, 336, 332, 352,
	343, 370, 334, 371, 331, 330, 329, -311, -309, -207,
	-130, -142, -142, 150, -142, 148, -142, -409, -409, -409,
	-409, -409, -227, -142, -142, -142, -409, 177, 338, 15,
	-142, -309, -142, -142, -142, -142, -142, -377, -142, -207,
	-142, -207, -142, -142, -142, -142, -142, -378, -378, -378,
	-378, -378, -207, -207, -207, -207, -408, -291, -95, -94,
	-93, 581, 243, -92, -162, -95, -162, -129, -293, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -192,
	-341, -341, -341, -262, 88, -273, 23, 15, 58, 58,
	-165, -196, -166, -133, -291, -241, 608, -247, 47, -245,
	-246, 48, -242, 49, 57, -329, -329, 168, -232, -142,
	-263, 77, -264, -268, -215, -210, -212, -211, -408, -251,
	-409, -291, -262, -264, -168, -169, -169, -168, -169, 67,
	67, 67, 72, 67, 72, 67, -185, -297, -409, -142,
	-300, 78, -166, -166, -190, -297, 168, 408, 412, 413,
	-353, -402, 119, 143, 32, 77, 368, 101, -400, 176,
	543, 593, 598, 554, 547, 588, -401, 245, 136, 137,
	257, 26, 42, 89, 88, 89, 88, 89, 88, -285,
	-284, -44, -43, -347, -347, 96, -380, 90, 90, 241,
	27, -188, 77, 77, 77, -111, 656, 96, 87, -3,
	82, -142, 87, 20, -336, -215, -371, -323, -372, -324,
	-325, -5, -6, -348, -114, 58, 101, -62, 45, 240,
	636, 637, 127, -408, 649, -363, -252, -367, -369, -188,
	-145, -408, -144, -146, -153, 166, 167, 262, 334, 335,
	-216, -188, -135, 290, 298, 87, -139, 92, -383, 78,
	281, 368, 281, 90, -405, 312, 90, -405, -188, -82,
	-48, -188, -280, -280, 34, -380, -409, -160, -152, -123,
	162, 507, -314, 513, -322, -322, -322, -331, -322, 326,
	-322, 326, -322, -409, -409, -409, 88, -409, 23, -409,
	-142, 88, -119, 450, 88, 88, -409, 87, 87, -142,
	-409, -409, -409, 88, -409, -409, -409, -409, -409, 88,
	-409, -409, -409, 88, -312, 599, -409, -409, -409, -409,
	-409, -409, -409, -409, -409, -409, -91, -292, -291, -92,
	563, 563, -409, -92, -224, 88, -409, -409, 88, -409,
	88, 88, -409, 88, -409, 88, -409, -409, -409, -409,
	88, -193, 23, -193, -193, -409, -258, -188, -196, -225,
	17, -238, 52, 344, -249, -248, 56, 48, -246, 20,
	50, 20, 31, -263, 88, 151, 88, -409, -409, 88,
	58, 221, -409, -196, -179, -178, 77, 78, -180, 77,
	-178, 67, 67, -253, 88, -261, -166, -196, -196, 221,
	119, -408, -147, -159, -145, 13, 90, 90, -380, -399,
	640, 641, 32, 96, -347, -347, 137, 137, -188, 87,
	-327, 90, -327, 96, 96, 32, 83, 84, 85, 32,
	79, 80, 81, -188, -188, -188, -188, -368, 87, 20,
	-142, 87, 151, 89, -252, -252, 277, 162, -347, 634,
	283, 283, -347, -347, -347, -113, -112, 656, 89, -409,
	88, -334, 507, 510, -142, -154, -154, -253, 89, -376,
	507, -382, -291, -291, -291, -291, 96, 98, -409, 505,
	74, 508, -409, -327, -142, -142, -142, -232, 90, -142,
	-142, 96, 96, -409, -142, -207, -142, -409, -176, -175,
	-177, 617, 119, 32, -311, -409, -209, 275, -98, -97,
	-96, 15, -409, -142, -142, -142, -142, -142, -142, -142,
	-408, 67, 19, 17, -408, -408, -300, -225, -226, 18,
	20, -239, 54, -237, 53, -237, -248, 20, 20, 90,
	20, 90, 137, -268, -142, -212, 58, -11, -291, -210,
	-291, -227, -142, 87, -142, -156, -196, -196, -142, -202,
	474, 476, 477, 478, 475, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 479, 453, 108, 110, 109,
	454, 455, 456, 338, 501, 502, 496, 499, 500, 498,
	497, 353, 354, 457, 458, 459, 111, 112, 113, 114,
	115, 116, 117, 460, 463, 461, 464, 465, 466, 471,
	472, 467, 468, 469, 470, 473, 490, 491, 492, 493,
	494, 495, 600, 601, 602, 603, 604, 605, 606, 607,
	90, 90, 87, -142, 89, 89, -253, -367, -59, 89,
	-254, -252, 96, 89, 278, -211, -408, 90, -347, -347,
	-347, 96, 96, -299, -409, 88, -291, -401, -369, 511,
	511, -409, 26, -375, -374, -293, 87, 78, 63, 506,
	509, -409, -409, 88, -409, -409, -409, 89, 89, -409,
	-409, -409, 88, -409, -175, -177, -409, 77, -156, -227,
	20, -95, 300, 302, -95, -409, 88, -409, -409, 88,
	-409, 88, -409, -409, -255, -409, -291, 245, 20, 20,
	-255, -255, -195, -226, -105, -104, -103, 537, -142, -207,
	-240, 55, 77, 122, 90, 90, 90, 13, -210, 221,
	-232, -252, -173, 375, -227, -409, -252, 89, 26, 89,
	658, 137, 89, -211, -122, -408, 274, -299, 90, 90,
	-112, -115, -11, 88, 151, -252, -188, 63, -142, -207,
	-409, 77, 518, 617, -90, -89, -86, 628, 654, -207,
	-92, -92, -142, -142, -142, 88, -409, -409, -409, -105,
	88, -102, -101, -291, 77, 122, -264, -291, 89, -409,
	-408, -232, 89, -236, -11, 87, -3, 274, -323, -372,
	-324, -325, -5, -6, -348, -80, 507, -374, -352, -293,
	90, 96, 89, 507, -409, -409, -88, 145, 626, 596,
	-143, -154, -151, 220, -409, 88, -409, 88, -409, 88,
	-291, 245, -103, 88, 26, -300, -174, -172, -291, 560,
	-392, -391, 503, -402, -398, 119, 143, 101, -400, 598,
	554, 128, 129, -80, -142, 87, -409, -81, 289, 613,
	-383, 508, -88, 627, 574, 549, 574, 549, -142, -142,
	-142, -101, -408, -409, 88, 23, -315, -61, 571, -389,
	-390, 77, -393, 381, 570, 591, 119, 90, 89, -252,
	250, -376, 509, 142, -409, 88, -409, 88, -409, -91,
	-172, 567, -328, -156, -390, 77, -389, 77, 14, 13,
	-4, 657, 89, 291, -88, -142, -142, -409, -60, 27,
	-173, -388, 258, 253, 256, 33, -388, 96, -4, -409,
	-409, 571, 252, 32, 119, -156, -176, -175, -175,
}

var yyDef = [...]int{
	851, -2, -2, 853, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 70,
	72, 73, 851, 851, 851, 0, 851, 0, 0, 851,
	-2, -2, 851, 1468, 0, 851, 0, 0, -2, 772,
	778, 0, 780, -2, 0, 0, 851, 851, 2017, 2017,
	846, 0, 0, 0, 0, 0, 851, 851, 851, 851,
	1325, 50, 851, 0, 85, 86, 801, 802, 803, 65,
	0, 2015, 852, 1, 3, 71, 75, 0, 0, 0,
	58, 1334, 0, 78, 0, 0, 855, 0, 0, 1451,
	851, 851, 0, 117, 118, 0, 0, 0, -2, 121,
	-2, 150, 151, 152, 0, 157, 586, 509, 561, 507,
	546, -2, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 512, 385, 385, 0, 0,
	-2, 495, 495, 495, 1453, 0, 0, 0, 543, 447,
	385, 385, 385, 0, 385, 385, 385, 385, 0, 0,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 1352, 156, 1469,
	1466, 1467, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758,
	1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768,
	1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908,
	1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918,
	1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928,
	1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938,
	1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948,
	1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958,
	1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968,
	1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978,
	1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
	1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, 2014, 0, 1445, 0, 699,
	954, 0, 761, 761, 0, 761, 761, 761, 761, 0,
	0, 0, 711, 0, 0, 0, 0, 758, 0, 727,
	728, 0, 758, 0, 734, 764, 0, 739, 761, 761,
	742, 2018, 0, 2018, 2018, 1436, 0, 755, 753, 767,
	768, 40, 771, 774, 775, 776, 777, 779, 0, 784,
	787, 1462, 1463, 0, 789, 796, 814, 815, 0, 847,
	848, 45, 1102, 0, 976, 981, 992, 1007, 1008, 1009,
	1010, 1011, 1013, 1014, 1015, 0, 0, 0, 0, 1020,
	1021, 0, 0, 0, 0, 0, 1083, 1029, 0, 0,
	0, 0, 1298, 0, 0, 1259, 1259, 1117, 1259, 1261,
	1261, 1669, 1806, 1814, 1932, 1632, 1637, 1638, 1639, 1925,
	1926, 1927, 1928, 1966, 1967, 1971, 1730, 0, 0, 0,
	2014, 1767, 1775, 1776, 1800, 1898, 1952, 1649, 1795, 1863,
	1727, 1749, 1750, 1880, 1881, 1771, 1772, 1753, 1765, 1768,
	1756, 1757, 1759, 1761, 1766, 1773, 1779, 1758, 1778, 1777,
	0, 1754, 1755, 1760, 1770, 1774, 1762, 1763, 1764, 1769,
	1780, 0, 0, 0, 0, 0, 1198, 1199, 1200, 1201,
	0, 0, 0, 0, 0, 0, 0, 281, 282, 1311,
	1312, 43, 44, 1101, 1423, 1261, 1261, 1261, 1261, 1261,
	1043, 1044, 1045, 1046, 1047, 1071, 1072, 1078, 1079, 1875,
	1876, 1877, 1878, 1711, 1961, 1719, 1720, 1858, 1859, 1732,
	1733, 1989, 1990, -2, -2, -2, 222, 223, 224, 225,
	226, 227, 228, 229, 0, 1673, 1943, 1944, 218, 0,
	0, 286, 287, 283, 284, 285, 1085, 1086, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
	2017, 0, 824, 0, 0, 0, 0, 0, 1334, 0,
	1326, 1325, 63, 0, 851, -2, 0, 0, 0, 0,
	47, 0, 52, 911, 854, 77, 76, 1374, 0, 0,
	0, 59, 1335, 67, 69, 1336, 0, 856, 857, 0,
	887, 891, 0, 0, 0, 1452, 1451, 1451, 102, 0,
	0, 1427, 114, 115, 116, 0, 0, 1433, 1434, 1438,
	1439, 0, 0, 168, 169, 0, 41, 412, 0, 164,
	0, 405, 346, 0, 1352, 0, 0, 0, 0, 0,
	851, 0, 1446, 145, 146, 153, 154, 155, 385, 385,
	385, 558, 0, 0, 156, 156, 516, 517, 518, 0,
	0, -2, 410, 0, 496, 0, 0, 399, 399, 403,
	401, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	535, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 647, 0, 386, 0, 556, 557, 448, 0,
	0, 0, 0, 0, 0, 0, 0, 1454, 1455, 0,
	533, 534, 0, 0, 0, 385, 385, 0, 0, 0,
	0, 385, 385, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 1365, 0, 0, 0, -2, 0, 691, 0,
	0, 0, 1447, 1447, 0, 698, 0, 700, 701, 0,
	0, 702, 0, 758, 758, 756, 757, 704, 705, 706,
	707, 761, 0, 0, 394, 395, 396, 758, 761, 0,
	761, 761, 761, 761, 758, 758, 758, 761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2018, 764, 761,
	0, 735, 0, 736, 737, 740, 741, 743, 2019, 2020,
	1464, 1465, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 2018, 2018, 747, 751, 1437, 773, 785, 788, 808,
	49, 1718, 795, 49, 0, 826, 827, 832, 0, 0,
	0, 0, 838, 839, 840, 0, 0, 843, 844, 845,
	0, 0, 0, 0, 0, 974, 0, 0, 1091, 1092,
	1093, 1094, 1095, 1096, 1097, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 993, 994, 0, 0, 0, 1016, 1017, 1018,
	1019, 1022, 0, 1034, 0, 1036, 1307, -2, 0, 0,
	0, 1027, 1028, 0, 0, 0, 0, 0, 0, 0,
	1299, 0, 0, 1115, 0, 1116, 1118, 1119, 0, 1120,
	861, 861, 861, 861, 861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 861, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1457, 132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 871, 0, 0, 871, 871,
	0, 0, 211, 212, 213, 214, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 231, 232, 233, 234, 235, 288, 236, 237,
	238, 1101, 0, 0, 0, 46, 816, 817, 0, 937,
	1457, 0, 0, 867, 0, 57, 66, 68, 1334, 61,
	1334, 0, 873, 0, 0, -2, -2, 874, 880, 881,
	882, 883, 884, 54, 2016, 55, 0, 74, 0, 48,
	0, 0, 0, 0, 358, 1377, 0, 0, 1327, 1328,
	1331, 0, 888, 1812, 892, 0, 894, 895, 0, 0,
	100, 0, 953, 0, 0, 0, 0, 1435, 104, 105,
	0, 0, 0, 369, 1440, 1441, 1442, -2, 392, 0,
	369, 353, 296, 297, 298, 346, 300, 346, 346, 346,
	346, 358, 358, 358, 358, 329, 330, 331, 332, 333,
	0, 0, 315, 346, 346, 346, 346, 336, 337, 338,
	339, 340, 341, 342, 343, 301, 302, 303, 304, 305,
	306, 307, 308, 309, 348, 348, 348, 350, 350, 0,
	42, 0, 373, 0, 1331, 0, 0, 1365, 1449, 1459,
	0, 0, 0, 1449, 123, 0, 0, 0, 559, 597,
	510, 547, 560, 0, 513, 514, -2, 0, 0, 495,
	0, 497, 0, 393, 0, -2, 0, 403, 0, 399,
	403, 400, 403, 391, 404, 537, 538, 539, 0, 541,
	542, 627, 923, 0, 0, 0, 0, 0, 633, 634,
	635, 0, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 0, 0, 0, 497, 0, 544, 0, 0, 449,
	450, 451, 0, 0, 454, 455, 456, 457, 0, 0,
	460, 461, 462, 940, 941, 463, 464, 489, 490, 491,
	465, 466, 467, 468, 469, 470, 471, 483, 484, 485,
	486, 487, 488, 472, 473, 474, 475, 476, 477, 480,
	0, 138, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1447, 0,
	0, 0, 0, 870, 955, 1470, 1471, 762, 763, 0,
	397, 398, 761, 761, 708, 748, 0, 761, 712, 749,
	713, 715, 714, 716, 729, 730, 761, 719, 759, 760,
	720, 721, 722, 723, 724, 725, 726, 744, 731, 732,
	733, 765, 0, 769, 770, 745, 746, 0, 786, 811,
	809, 810, 812, 804, 805, 806, 807, 0, 813, 0,
	0, 0, 829, 96, 834, 835, 836, 837, 849, 842,
	1103, 971, 972, 973, 0, 975, 978, 0, 1087, 1089,
	980, 982, 1098, 1099, 1100, 0, 0, 0, 0, 0,
	986, 990, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1012, 1275, 1276, 1277, 1031, 289,
	290, 0, 1032, 0, 0, 0, 0, 0, 0, 0,
	1102, 1033, 0, 885, 0, 0, 1305, 1302, 0, 0,
	0, 1260, 1262, 0, 0, 0, 0, 862, 863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1278, 0,
	0, 0, 0, 0, 1298, 0, 1038, 1039, 1040, 0,
	0, 0, 0, 0, 0, 1158, 0, 0, 0, 0,
	1458, 0, 133, 134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1202, 1203, 1204, 1205, 39, 0, 0, 0, 872, 1309,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1227, 0, 0, 0,
	0, 0, 0, 1421, 0, 0, 819, 820, 822, 0,
	957, 0, 938, 0, 0, 825, 0, 866, 0, 869,
	60, 62, 878, 879, 0, 896, 875, 56, 51, 0,
	0, 915, 1375, 358, 1397, 0, 367, 367, 364, 1337,
	1338, 0, 1330, 1332, 1333, 79, 893, 889, 0, 969,
	0, 0, 952, 0, 899, 901, 902, 903, 935, 0,
	906, 907, 0, 0, 0, 0, 0, 98, 954, 1428,
	0, 103, 0, 0, 108, 109, 1429, 1430, 1431, 1432,
	0, 586, -2, 444, 170, 172, 173, 174, 165, -2,
	356, 354, 355, 299, 358, 358, 323, 324, 325, 326,
	327, 328, 0, 0, 316, 317, 318, 319, 310, 0,
	311, 312, 313, 0, 314, 411, 0, 1339, 374, 375,
	377, 385, 0, 380, 381, 0, 385, 385, 0, 406,
	407, 0, 1331, 1356, 0, 0, 0, 1460, 1459, 1459,
	1459, 0, 158, 159, 160, 161, 162, 163, 622, 0,
	0, 598, 620, 621, 156, 0, 0, 166, 499, 498,
	0, 654, 0, 409, 0, 0, 403, 403, 388, 389,
	540, 0, 0, 629, 630, 631, 632, 0, 0, 0,
	526, 438, 0, 527, 528, 497, 499, 0, 0, 369,
	452, 453, 458, 459, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 573, 574, 575, 578,
	580, 501, 584, 577, 579, 581, 501, 585, 1353, 1354,
	1355, 0, 0, 692, 0, 0, 435, 94, 1448, 697,
	758, 718, 750, 758, 710, 717, 738, 782, 790, 791,
	792, 793, 794, 797, 798, 799, 800, 833, 0, 0,
	0, 0, 841, 0, 0, 979, 1088, 1090, 983, 0,
	987, 991, 0, 0, 0, 1037, 1035, 1309, 0, 0,
	0, 1084, 0, 0, 1106, 1107, 0, 0, 0, 1303,
	0, 0, 1113, 0, 1263, 1264, 1121, 0, 0, 0,
	0, 0, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
	1135, 1136, 1325, 0, 0, 0, 0, 0, 1142, 1143,
	1144, 1145, 1146, 0, 1148, 0, 1149, 0, 0, 0,
	0, 1156, 1157, 1159, 0, 0, 1162, 1163, 0, 0,
	1164, 0, 0, 0, 1168, 0, 0, 0, 0, 1177,
	1178, 1179, 1180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1191, 1192, 0, 1066, 0, 0, 1066,
	0, 1104, 871, 0, 1265, 1266, 1267, 1268, 1269, 0,
	0, 0, 0, 0, 0, 1225, 1226, 1228, 0, 0,
	1231, 0, 1233, 0, 1422, 818, 821, 823, 909, 958,
	959, 0, 0, 0, 0, 939, 1456, 864, 865, 868,
	917, 0, 1313, 0, 0, 896, 969, 897, 0, 876,
	53, 912, 0, 1379, 1378, 1391, 1404, 367, 367, 361,
	362, 368, 363, 365, 366, 1329, 0, 1334, 0, 1415,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 942, 0, 0, 945, 0, 0, 0, 0, 936,
	907, 0, 908, 0, -2, 0, 0, 92, 93, 0,
	0, 0, 106, 107, 0, 0, 113, 370, 371, 147,
	156, 446, 171, 419, 0, 0, 295, 357, 320, 321,
	322, 0, 344, 0, 0, 0, 440, 119, 1343, 1342,
	385, 385, 376, 0, 379, 0, 0, 0, 1461, 347,
	408, 0, 137, 0, 0, 0, 0, 0, 143, 592,
	0, 0, 599, 0, 0, 0, 508, 0, 519, 520,
	0, 626, -2, 688, 373, 0, 387, 390, 924, 0,
	0, 521, 0, 524, 525, 439, 499, 530, 531, 545,
	532, 481, 482, 479, 0, 0, 1366, 1367, 1372, 1370,
	1371, 124, 566, 568, 567, 571, 0, 0, 0, 503,
	0, 503, 564, 0, 435, 1339, 0, 696, 436, 437,
	761, 761, 828, 97, 0, 831, 0, 0, 0, 0,
	984, 988, 1270, 1296, 346, 346, 1283, 346, 350, 1286,
	346, 1288, 346, 1291, 346, 1294, 1295, 0, 0, 0,
	886, 0, 0, 1112, 1306, 0, 0, 1122, 1123, 1124,
	1125, 1126, 1300, 0, 0, 0, 1141, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 136, 0,
	0, 0, 0, 0, 0, 1236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1061, 1065, 0, 1067,
	1068, 0, 0, 1194, 0, 0, 1206, 0, 1310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 960,
	965, 965, 965, 0, 0, 0, 1443, 1444, 1314, 1315,
	969, 1316, 898, 877, 916, 1397, 0, 1390, 0, -2,
	1399, 0, 0, 0, 1405, 359, 360, 890, 80, 970,
	83, 0, 1415, 1424, 0, 1406, 1417, 1419, 0, 0,
	0, 1411, 0, 969, 900, 931, 933, 0, 928, 943,
	944, 946, 0, 948, 0, 950, 951, 911, 905, 0,
	100, 0, 969, 969, 99, 0, 956, 110, 111, 112,
	445, 175, 180, 0, 0, 0, 185, 0, 187, 0,
	0, 0, 192, 193, 385, 385, 420, 0, 292, 294,
	0, 0, 178, 358, 0, 358, 0, 351, 0, 421,
	441, 1340, 1341, 0, 0, 378, 382, 383, 384, 0,
	1450, 139, 0, 0, 0, 595, 0, 623, 0, 0,
	0, 0, 0, 0, 167, 500, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 0, 385, 0, 0, 0,
	385, 385, 385, 0, 680, 372, 0, 0, 651, 648,
	522, 0, 216, 217, 219, 0, 0, 0, 0, 0,
	529, 911, 1357, 1358, 1359, 0, 1369, 1373, 127, 0,
	0, 0, 0, 576, 582, 0, 502, 583, 693, 694,
	695, 95, 703, 709, 830, 850, 977, 985, 989, 0,
	0, 0, 0, 1297, 1281, 358, 1284, 1285, 1287, 1289,
	1290, 1292, 1293, 1025, 1026, 1030, 0, 1109, 0, 1111,
	1304, 0, 1334, 0, 0, 0, 1140, 0, 0, 0,
	1151, 1150, 1152, 0, 1154, 1155, 1160, 1161, 1165, 0,
	1167, 1169, 1170, 0, 0, 0, 1181, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1189, 1190, 0, 1059, 1062, 1193,
	1069, 1070, 1075, 1196, 0, 0, 1105, 1208, 0, 1213,
	0, 0, 1219, 0, 1223, 0, 1229, 1230, 1232, 1234,
	0, 0, 0, 0, 0, 937, 918, 64, 1316, 1318,
	0, 1384, 1382, 1382, 1392, 1393, 0, 0, 1400, 0,
	0, 0, 0, 84, 0, 0, 0, 1420, 0, 0,
	0, 0, 101, 1325, 925, 932, 0, 0, 926, 0,
	927, 947, 949, 904, 0, 969, 969, 90, 91, 0,
	181, 0, 183, 209, 210, 0, 186, 188, 189, 190,
	196, 197, 198, 191, 0, 0, 291, 293, 0, 0,
	334, 345, 335, 0, 0, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 911, 140, 141, 142, 587, 0, 597,
	0, 913, 0, 590, 0, 511, 0, 0, 0, 385,
	385, 385, 0, 0, 0, 0, 665, 0, 0, 628,
	0, 636, 0, 0, 0, 220, 221, 0, 1368, 565,
	0, 125, 126, 0, 0, 570, 504, 505, 1023, 0,
	0, 0, 1024, 1282, 0, 0, 0, 0, 1301, 0,
	0, 0, 0, 1147, 0, 0, 0, 1173, 0, 0,
	0, 617, 618, 0, 1237, 1064, 1325, 0, 1066, 1076,
	1077, 0, 1066, 1207, 0, 0, 0, 0, 0, 0,
	0, 966, 0, 0, 0, 0, 957, 1318, 1323, 0,
	0, 1387, 0, 1380, 1383, 1381, 1394, 0, 0, 1401,
	0, 1403, 0, 1425, 1426, 1418, 0, 1410, 1413, 1409,
	1412, 1334, 929, 0, 934, 0, 1325, 89, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 195, 0, 0, 349, 352, 0, 0, 0, 588,
	0, 914, 600, 591, 0, 678, 0, 682, 0, 0,
	0, 685, 686, 687, 664, 0, 668, 413, 652, 649,
	650, 523, 0, 128, 129, 0, 0, 0, 1271, 0,
	1274, 1108, 1110, 0, 1137, 1138, 1139, 1279, 1280, 1153,
	1166, 1171, 0, 1174, 0, 0, 1175, 0, 619, 1055,
	0, 0, 1073, 1074, 0, 1209, 0, 1214, 1215, 0,
	1220, 0, 1224, 1235, 0, 962, 919, 920, 967, 968,
	0, 0, 910, 1323, 82, 1324, 1321, 0, 1319, 1317,
	1376, 0, 1385, 1386, 1395, 1396, 1402, 0, 1408, 0,
	87, 0, 0, 0, 1334, 182, 0, 201, 0, 596,
	0, 599, 589, 676, 677, 0, 689, 681, 683, 684,
	666, -2, 1360, 0, 0, 0, 572, 1272, 0, 0,
	1176, 0, 615, 616, 1063, 1056, 0, 1041, 1042, 1060,
	1195, 1197, 0, 0, 0, 0, 961, 963, 964, 81,
	0, 1320, 1081, 0, 1388, 1389, 1416, 1414, 930, 937,
	0, 88, 426, 419, 1360, 0, 0, 0, 669, 670,
	671, 672, 673, 674, 675, 562, 1362, 130, 131, 492,
	493, 494, 124, 0, 1114, 1172, 1057, 0, 0, 0,
	0, 1053, 1054, 0, 1210, 0, 1216, 0, 1221, 0,
	921, 922, 1322, 0, 0, 601, 0, 603, 0, -2,
	414, 427, 0, 176, 202, 203, 0, 0, 206, 207,
	208, 199, 200, 120, 0, 0, 690, 0, 1363, 1364,
	127, 0, 0, 1048, 1049, 1050, 1051, 1052, 0, 0,
	0, 1082, 1061, 602, 0, 0, 369, 0, 612, 415,
	416, 0, 422, 423, 424, 425, 204, 205, 624, 0,
	0, 569, 1273, 0, 1211, 0, 1217, 0, 1222, 0,
	604, 605, 613, 0, 417, 0, 418, 0, 0, 0,
	593, 0, 624, 1361, 1058, 0, 0, 1080, 0, 614,
	610, 428, 430, 431, 0, 0, 429, 625, 594, 1212,
	1218, 0, 432, 433, 434, 606, 607, 608, 609,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 659,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:601
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:614
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:615
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:619
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:656
		{
			setParseTree(yylex, nil)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:662
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:668
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:673
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:677
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:683
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:687
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:693
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:699
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:705
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:709
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:714
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:718
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:724
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:728
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:734
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:782
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:788
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:808
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:812
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:818
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:822
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:830
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:834
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:840
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:849
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:853
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:859
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:868
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:874
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:880
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:887
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:893
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:901
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:905
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:911
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:923
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:935
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:939
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:945
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:951
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:955
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:959
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:963
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:968
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:973
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:977
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:983
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:987
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:993
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:997
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1002
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1006
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1012
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1018
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1022
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: NoScope}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:1028
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1032
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1038
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1042
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1046
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1052
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1056
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1060
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1064
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1070
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1074
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1078
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1084
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1090
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1097
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1106
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1110
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1117
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1121
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1126
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1130
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1136
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1141
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1146
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1152
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1157
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1163
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1172
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1178
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1182
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1188
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 137:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1194
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1201
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1208
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1213
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1218
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1223
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1230
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1237
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1248
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1255
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1259
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1265
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1269
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1273
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1277
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1281
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1285
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 156:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1291
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1295
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1301
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1305
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1311
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1315
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1321
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1325
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1331
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1335
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1341
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1345
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1351
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1356
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1361
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1365
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1370
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1374
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1378
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1389
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1398
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1407
		{
			yyVAL.str = ""
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1411
		{
			yyVAL.str = ""
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1420
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1424
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1430
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1436
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1441
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1446
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1451
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1456
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1461
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1466
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1470
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1475
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1479
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1484
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1490
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1496
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1500
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1506
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1510
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1514
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1520
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1524
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1529
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1533
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1538
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1544
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1550
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1555
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1560
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1566
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1574
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1581
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1585
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1589
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1593
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1597
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1607
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1614
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1618
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1624
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1628
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1632
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1644
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1648
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1652
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1657
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1665
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1669
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1673
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1677
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1682
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1686
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1690
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			yyVAL.str = Armscii8Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.str = ASCIIStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.str = Big5Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.str = UBinaryStr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.str = Cp1250Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.str = Cp1251Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1720
		{
			yyVAL.str = Cp1256Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1724
		{
			yyVAL.str = Cp1257Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.str = Cp850Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = Cp852Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.str = Cp866Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.str = Cp932Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.str = Dec8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.str = EucjpmsStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.str = EuckrStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = Gb18030Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = Gb2312Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = GbkStr
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = Geostd8Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = GreekStr
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = HebrewStr
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = Hp8Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Keybcs2Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = Koi8rStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Koi8uStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = Latin1Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = Latin2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = Latin5Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = Latin7Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = MacceStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = MacromanStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = SjisStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = Swe7Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = Tis620Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = Ucs2Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = UjisStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = Utf16Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = Utf16leStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = Utf32Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = Utf8Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = Utf8mb4Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = Utf8Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1870
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1874
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1878
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1884
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1888
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1892
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1898
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1902
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1909
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1913
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1917
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1921
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1927
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1938
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1943
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1949
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1957
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1961
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1965
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1969
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1981
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1987
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2023
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2027
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2031
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2035
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2045
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2051
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2055
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2063
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2067
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2071
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2075
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2079
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2087
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2091
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2095
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2099
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2104
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2114
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2126
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2130
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2149
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2154
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2158
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2163
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2167
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2175
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2179
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 352:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2185
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2193
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2197
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2201
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2206
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2210
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2215
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2219
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2223
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2227
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2236
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2241
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2246
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2251
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2257
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2261
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2266
		{
			yyVAL.str = ""
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2280
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2285
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2289
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2295
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2299
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2305
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2309
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2314
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2318
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2322
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2326
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2330
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2334
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2340
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2344
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2350
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2354
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2358
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2362
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2366
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2371
		{
			yyVAL.str = ""
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2375
		{
			yyVAL.str = yyDollar[2].str
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2381
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2385
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2389
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2395
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2399
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2404
		{
			yyVAL.str = "key"
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2408
		{
			yyVAL.str = yyDollar[1].str
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2414
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2423
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2433
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2437
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2443
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2447
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2453
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2457
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2463
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2467
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2473
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2479
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2483
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2487
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2491
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2495
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2500
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2504
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2510
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2516
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2522
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2526
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2530
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2535
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2539
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2545
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2551
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2557
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2561
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2565
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2569
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2573
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2578
		{
			yyVAL.str = ""
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2582
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2586
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2592
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2596
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2601
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2605
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2614
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2620
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2624
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2628
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2634
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2638
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2644
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2648
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2652
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2656
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2660
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2664
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2668
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2672
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2676
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2680
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2684
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2688
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2692
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2696
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2700
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2704
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2708
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2712
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2716
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2720
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2724
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2728
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2732
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2736
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2740
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2744
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2748
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2752
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2756
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2760
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2764
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2769
		{
			yyVAL.str = ""
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2773
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2777
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2796
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2804
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2809
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2815
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2819
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2824
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2828
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2833
		{
			yyVAL.str = ""
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2837
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2842
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2846
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2850
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2855
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2859
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2863
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2867
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2871
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 511:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2875
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2881
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2885
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2889
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2895
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2899
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2903
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2907
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2911
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2915
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2919
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2923
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2927
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2931
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2936
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2941
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2945
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2949
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2953
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2957
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2961
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2965
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2969
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2973
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2977
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2981
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2985
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2989
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2993
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2997
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3001
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3005
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3009
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3013
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3017
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3023
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3027
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3033
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3037
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3041
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3045
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3049
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3053
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3057
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3061
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3065
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3069
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3075
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3082
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3089
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3096
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3102
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3112
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3119
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3126
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3138
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3148
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3152
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3156
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3194
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3201
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3208
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3215
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3229
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3236
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3242
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3255
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3264
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3272
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3286
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3290
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3299
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3307
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3316
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3323
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3331
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3335
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3344
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3359
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3364
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3368
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3373
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3377
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3383
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3389
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3395
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3399
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3405
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3409
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3415
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3421
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3427
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3433
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3439
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3443
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3447
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3451
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3457
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3463
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3469
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3473
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3477
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3483
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3487
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3492
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3496
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3501
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3505
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3511
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3515
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3519
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3523
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3527
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3531
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3535
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3539
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3543
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3547
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3551
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3555
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3559
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3563
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3567
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3571
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3575
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3579
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3583
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3587
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3591
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3595
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3600
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3604
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3608
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3614
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3618
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3624
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3629
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3633
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3638
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3643
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3648
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3653
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3658
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3664
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3670
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3675
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3681
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3687
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3691
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3697
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3702
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3706
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3711
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3716
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3721
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3726
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3732
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3738
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3745
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3752
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3759
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3767
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3771
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3777
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3783
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3789
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3795
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3801
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3807
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3813
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3819
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3825
		{
			yyVAL.str = ""
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3829
		{
			yyVAL.str = ""
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3835
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3841
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3845
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 694:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3851
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3855
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3864
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3868
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3874
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3878
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3884
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3890
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3894
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3898
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3902
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3906
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3910
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3914
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3918
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3922
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3926
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3930
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3934
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3938
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3942
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3946
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3950
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3954
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3962
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3966
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3978
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3982
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3986
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3990
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3994
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3998
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4002
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4006
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4010
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4014
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4018
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4022
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4026
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4030
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4034
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4038
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4042
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4046
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4050
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4054
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4099
		{
			yyVAL.str = ""
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4103
		{
			yyVAL.str = "extended "
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4109
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4113
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4119
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4123
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4129
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4133
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4137
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4143
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4147
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4151
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4157
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4161
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4167
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4171
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4175
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4181
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4185
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4191
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4195
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4199
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4206
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4214
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4225
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4229
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4235
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4241
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4245
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4250
		{
			yyVAL.empty = struct{}{}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4252
		{
			yyVAL.empty = struct{}{}
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4255
		{
			yyVAL.empty = struct{}{}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4257
		{
			yyVAL.empty = struct{}{}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4261
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4267
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4272
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4276
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4280
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4284
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4288
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4292
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4296
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VtExplainType
//line sql.y:4301
		{
			yyLOCAL = QueriesVtExplainType
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL VtExplainType
//line sql.y:4305
		{
			yyLOCAL = JSONVtExplainType
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL VtExplainType
//line sql.y:4309
		{
			yyLOCAL = TableVtExplainType
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL VtExplainType
//line sql.y:4313
		{
			yyLOCAL = QueriesVtExplainType
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL VtExplainType
//line sql.y:4317
		{
			yyLOCAL = ExhaustiveVtExplainType
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4323
		{
			yyVAL.str = yyDollar[1].str
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4327
		{
			yyVAL.str = yyDollar[1].str
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4331
		{
			yyVAL.str = yyDollar[1].str
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4337
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4341
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4345
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4349
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4354
		{
			yyVAL.str = ""
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4358
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4362
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4368
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4372
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4378
		{
			yyLOCAL = &VtExplainStmt{Type: yyDollar[3].vtexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4384
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4388
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4394
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4400
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4404
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4410
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4416
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4420
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4424
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4428
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4434
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4440
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4446
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4450
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4454
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4458
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4462
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4466
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4482
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4486
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4490
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4494
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4498
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4506
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4510
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4514
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4518
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4522
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4526
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4531
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4535
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4539
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4544
		{
			yyVAL.str = ""
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4548
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4553
		{
			setAllowComments(yylex, true)
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4557
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4563
		{
			yyVAL.strs = nil
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4567
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4573
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4577
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4581
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4586
		{
			yyVAL.str = ""
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4590
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4594
		{
			yyVAL.str = SQLCacheStr
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4599
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4603
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4607
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4613
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4617
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4627
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4636
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4642
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4646
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4651
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4655
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4660
		{
			yyVAL.strs = nil
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4664
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4668
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4672
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4676
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4682
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.str = SQLCacheStr
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4690
		{
			yyVAL.str = DistinctStr
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4694
		{
			yyVAL.str = DistinctStr
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4698
		{
			yyVAL.str = StraightJoinHint
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4702
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4706
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4712
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4716
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4722
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4726
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4730
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4734
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4739
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4743
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4747
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4754
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4759
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4763
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4769
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4775
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4779
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4789
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4793
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4797
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4801
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4807
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4811
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4817
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4821
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4830
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4839
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4845
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4849
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4855
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4859
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4865
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4869
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4873
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4877
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4883
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4887
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4900
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4904
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4908
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4912
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4918
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4920
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4924
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4926
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4930
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4932
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4935
		{
			yyVAL.empty = struct{}{}
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4937
		{
			yyVAL.empty = struct{}{}
		}
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4940
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4944
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4948
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4955
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4961
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4965
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4969
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4975
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4981
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4985
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4989
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4993
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4999
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5003
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5013
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5017
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5023
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5027
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5033
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5038
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5042
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5048
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5052
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5058
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5062
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5066
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5070
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5075
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5079
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5083
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5087
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5093
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5097
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5104
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5108
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5112
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5116
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5120
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5124
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5128
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5134
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5138
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5142
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5152
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5156
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5160
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5164
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5168
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5172
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5176
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5180
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5184
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5188
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5192
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5198
		{
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5201
		{
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5207
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5211
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5215
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5219
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5223
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5227
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5231
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5235
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5239
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5243
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5247
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5255
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5261
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5265
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5269
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5273
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5277
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5297
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5301
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5313
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5317
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5321
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5325
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5329
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5333
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5337
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5345
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5349
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5357
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5361
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5365
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5371
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5377
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5381
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5387
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5391
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5397
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5401
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5405
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5411
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5415
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5422
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5426
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5430
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5434
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5438
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5444
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5448
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5452
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5456
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5460
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5470
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5475
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5479
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5485
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5489
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5494
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5498
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5503
		{
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5506
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5512
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5518
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5522
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5527
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5534
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5540
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5544
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5550
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5554
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5560
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5564
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5569
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5576
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5582
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5586
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5592
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5598
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5602
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5608
		{
			yyVAL.str = ""
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5612
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5618
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5622
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5629
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5633
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5637
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5641
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5647
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5651
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5655
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5659
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5663
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5667
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5671
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5677
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5681
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5685
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5692
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5698
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5702
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5712
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5716
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5726
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5730
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5734
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5738
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5742
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5746
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5750
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5754
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5758
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5762
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5773
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5777
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5783
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5787
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5792
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5796
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5800
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5804
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5808
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5812
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5816
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5820
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5824
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5828
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5832
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5836
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5840
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5844
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5848
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5852
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5856
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5860
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5864
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5868
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5872
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5876
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5880
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5884
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5888
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5892
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5896
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5900
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5904
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5932
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5936
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5940
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5944
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5964
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5968
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5992
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5996
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6000
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6004
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6008
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6012
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6016
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6020
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6024
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6028
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6032
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6036
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6040
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6044
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6048
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6096
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6100
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6114
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6132
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6159
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6163
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6167
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6171
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6175
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6179
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6184
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6188
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6192
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6196
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6203
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6207
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6213
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6231
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6235
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6239
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6243
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6247
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6251
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6255
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6260
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6264
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6270
		{
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6272
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6276
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6280
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6284
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6288
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6292
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6296
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6300
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6304
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6308
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6312
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6318
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6322
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6326
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6330
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6334
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6338
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6342
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6346
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6350
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6360
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6364
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6368
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6372
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6383
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6387
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6391
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6395
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6399
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6405
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6409
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6413
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6417
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6421
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6427
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6431
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6435
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1278:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6441
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6445
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6449
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6455
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6459
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6463
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6467
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6471
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6477
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6481
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6485
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6489
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6493
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6497
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6501
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6505
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6509
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6513
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6519
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6523
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6528
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6532
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6537
		{
			yyVAL.str = string("")
		}
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6541
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6547
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6551
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6557
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6562
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6566
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6572
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6576
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6580
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6584
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6590
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6594
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6600
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6609
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6613
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6619
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6623
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6628
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6632
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6638
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6644
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6648
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6657
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6662
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6666
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6672
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6678
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6682
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6688
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6693
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6697
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6701
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6706
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6710
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6716
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6720
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6724
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6729
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6733
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6737
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6741
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6745
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6752
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6756
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6760
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6764
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6770
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6774
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6778
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6782
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6787
		{
			yyVAL.str = ""
		}
	case 1353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6791
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6795
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6799
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6804
		{
			yyVAL.str = ""
		}
	case 1357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6808
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6814
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6818
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6823
		{
			yyVAL.str = ""
		}
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6827
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6832
		{
			yyVAL.str = "cascaded"
		}
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6836
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6840
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6845
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6849
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6855
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6861
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6867
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6876
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6880
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6885
		{
			yyVAL.str = ""
		}
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6889
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6895
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6899
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6905
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6909
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6913
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6918
		{
			yyVAL.str = ""
		}
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6922
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6926
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6931
		{
			yyVAL.str = ""
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6935
		{
			yyVAL.str = " header"
		}
	case 1384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6940
		{
			yyVAL.str = ""
		}
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6944
		{
			yyVAL.str = " manifest on"
		}
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6948
		{
			yyVAL.str = " manifest off"
		}
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6953
		{
			yyVAL.str = ""
		}
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6957
		{
			yyVAL.str = " overwrite on"
		}
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6961
		{
			yyVAL.str = " overwrite off"
		}
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6967
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6972
		{
			yyVAL.str = ""
		}
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6976
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6982
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6986
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6992
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6996
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7001
		{
			yyVAL.str = ""
		}
	case 1398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7005
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7011
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7015
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7021
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1402:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7025
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7029
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7034
		{
			yyVAL.str = ""
		}
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7038
		{
			yyVAL.str = " optionally"
		}
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7051
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7055
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7059
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7063
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7067
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7073
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7077
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7081
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1414:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7085
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1415:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7094
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7100
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7104
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7110
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7114
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7120
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7124
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7129
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7139
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7143
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7149
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:7155
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7159
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7165
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7169
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7173
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7177
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7183
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7187
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7191
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7198
		{
			yyVAL.str = "charset"
		}
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7208
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7212
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7216
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7225
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7227
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7230
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7232
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7235
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7237
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7240
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7242
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7245
		{
			yyVAL.empty = struct{}{}
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7247
		{
			yyVAL.empty = struct{}{}
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7249
		{
			yyVAL.empty = struct{}{}
		}
	case 1456:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7253
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7258
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7262
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7269
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7273
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7279
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7283
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7290
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7296
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7300
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7306
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7310
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7317
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7887
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7896
		{
			decNesting(yylex)
		}
	case 2017:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7901
		{
			skipToEnd(yylex)
		}
	case 2018:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7906
		{
			skipToEnd(yylex)
		}
	case 2019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7910
		{
			skipToEnd(yylex)
		}
	case 2020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7914
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
