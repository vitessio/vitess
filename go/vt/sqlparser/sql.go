// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const SCHEMA = 57561
const TABLE = 57562
const INDEX = 57563
const VIEW = 57564
const TO = 57565
const IGNORE = 57566
const IF = 57567
const PRIMARY = 57568
const COLUMN = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const KEY_BLOCK_SIZE = 57572
const CHECK = 57573
const INDEXES = 57574
const ACTION = 57575
const CASCADE = 57576
const CONSTRAINT = 57577
const FOREIGN = 57578
const NO = 57579
const REFERENCES = 57580
const RESTRICT = 57581
const SHOW = 57582
const DESCRIBE = 57583
const EXPLAIN = 57584
const DATE = 57585
const ESCAPE = 57586
const REPAIR = 57587
const OPTIMIZE = 57588
const TRUNCATE = 57589
const COALESCE = 57590
const EXCHANGE = 57591
const REBUILD = 57592
const PARTITIONING = 57593
const REMOVE = 57594
const PREPARE = 57595
const EXECUTE = 57596
const MAXVALUE = 57597
const PARTITION = 57598
const REORGANIZE = 57599
const LESS = 57600
const THAN = 57601
const PROCEDURE = 57602
const TRIGGER = 57603
const VINDEX = 57604
const VINDEXES = 57605
const DIRECTORY = 57606
const NAME = 57607
const UPGRADE = 57608
const STATUS = 57609
const VARIABLES = 57610
const WARNINGS = 57611
const CASCADED = 57612
const DEFINER = 57613
const OPTION = 57614
const SQL = 57615
const UNDEFINED = 57616
const SEQUENCE = 57617
const MERGE = 57618
const TEMPORARY = 57619
const TEMPTABLE = 57620
const INVOKER = 57621
const SECURITY = 57622
const FIRST = 57623
const AFTER = 57624
const LAST = 57625
const VITESS_MIGRATION = 57626
const CANCEL = 57627
const RETRY = 57628
const LAUNCH = 57629
const COMPLETE = 57630
const CLEANUP = 57631
const THROTTLE = 57632
const UNTHROTTLE = 57633
const EXPIRE = 57634
const RATIO = 57635
const VITESS_THROTTLER = 57636
const BEGIN = 57637
const START = 57638
const TRANSACTION = 57639
const COMMIT = 57640
const ROLLBACK = 57641
const SAVEPOINT = 57642
const RELEASE = 57643
const WORK = 57644
const CONSISTENT = 57645
const SNAPSHOT = 57646
const BIT = 57647
const TINYINT = 57648
const SMALLINT = 57649
const MEDIUMINT = 57650
const INT = 57651
const INTEGER = 57652
const BIGINT = 57653
const INTNUM = 57654
const REAL = 57655
const DOUBLE = 57656
const FLOAT_TYPE = 57657
const DECIMAL_TYPE = 57658
const NUMERIC = 57659
const TIME = 57660
const TIMESTAMP = 57661
const DATETIME = 57662
const YEAR = 57663
const CHAR = 57664
const VARCHAR = 57665
const BOOL = 57666
const CHARACTER = 57667
const VARBINARY = 57668
const NCHAR = 57669
const TEXT = 57670
const TINYTEXT = 57671
const MEDIUMTEXT = 57672
const LONGTEXT = 57673
const BLOB = 57674
const TINYBLOB = 57675
const MEDIUMBLOB = 57676
const LONGBLOB = 57677
const JSON = 57678
const JSON_SCHEMA_VALID = 57679
const JSON_SCHEMA_VALIDATION_REPORT = 57680
const ENUM = 57681
const GEOMETRY = 57682
const POINT = 57683
const LINESTRING = 57684
const POLYGON = 57685
const GEOMCOLLECTION = 57686
const GEOMETRYCOLLECTION = 57687
const MULTIPOINT = 57688
const MULTILINESTRING = 57689
const MULTIPOLYGON = 57690
const ASCII = 57691
const UNICODE = 57692
const NULLX = 57693
const AUTO_INCREMENT = 57694
const APPROXNUM = 57695
const SIGNED = 57696
const UNSIGNED = 57697
const ZEROFILL = 57698
const CODE = 57699
const COLLATION = 57700
const COLUMNS = 57701
const DATABASES = 57702
const ENGINES = 57703
const EVENT = 57704
const EXTENDED = 57705
const FIELDS = 57706
const FULL = 57707
const FUNCTION = 57708
const GTID_EXECUTED = 57709
const KEYSPACES = 57710
const OPEN = 57711
const PLUGINS = 57712
const PRIVILEGES = 57713
const PROCESSLIST = 57714
const SCHEMAS = 57715
const TABLES = 57716
const TRIGGERS = 57717
const USER = 57718
const VGTID_EXECUTED = 57719
const VITESS_KEYSPACES = 57720
const VITESS_METADATA = 57721
const VITESS_MIGRATIONS = 57722
const VITESS_REPLICATION_STATUS = 57723
const VITESS_SHARDS = 57724
const VITESS_TABLETS = 57725
const VITESS_TARGET = 57726
const VSCHEMA = 57727
const VITESS_THROTTLED_APPS = 57728
const NAMES = 57729
const GLOBAL = 57730
const SESSION = 57731
const ISOLATION = 57732
const LEVEL = 57733
const READ = 57734
const WRITE = 57735
const ONLY = 57736
const REPEATABLE = 57737
const COMMITTED = 57738
const UNCOMMITTED = 57739
const SERIALIZABLE = 57740
const CURRENT_TIMESTAMP = 57741
const DATABASE = 57742
const CURRENT_DATE = 57743
const NOW = 57744
const CURRENT_TIME = 57745
const LOCALTIME = 57746
const LOCALTIMESTAMP = 57747
const CURRENT_USER = 57748
const UTC_DATE = 57749
const UTC_TIME = 57750
const UTC_TIMESTAMP = 57751
const DAY = 57752
const DAY_HOUR = 57753
const DAY_MICROSECOND = 57754
const DAY_MINUTE = 57755
const DAY_SECOND = 57756
const HOUR = 57757
const HOUR_MICROSECOND = 57758
const HOUR_MINUTE = 57759
const HOUR_SECOND = 57760
const MICROSECOND = 57761
const MINUTE = 57762
const MINUTE_MICROSECOND = 57763
const MINUTE_SECOND = 57764
const MONTH = 57765
const QUARTER = 57766
const SECOND = 57767
const SECOND_MICROSECOND = 57768
const YEAR_MONTH = 57769
const WEEK = 57770
const REPLACE = 57771
const CONVERT = 57772
const CAST = 57773
const SUBSTR = 57774
const SUBSTRING = 57775
const SEPARATOR = 57776
const TIMESTAMPADD = 57777
const TIMESTAMPDIFF = 57778
const WEIGHT_STRING = 57779
const LTRIM = 57780
const RTRIM = 57781
const TRIM = 57782
const JSON_ARRAY = 57783
const JSON_OBJECT = 57784
const JSON_QUOTE = 57785
const JSON_DEPTH = 57786
const JSON_TYPE = 57787
const JSON_LENGTH = 57788
const JSON_VALID = 57789
const JSON_ARRAY_APPEND = 57790
const JSON_ARRAY_INSERT = 57791
const JSON_INSERT = 57792
const JSON_MERGE = 57793
const JSON_MERGE_PATCH = 57794
const JSON_MERGE_PRESERVE = 57795
const JSON_REMOVE = 57796
const JSON_REPLACE = 57797
const JSON_SET = 57798
const JSON_UNQUOTE = 57799
const COUNT = 57800
const AVG = 57801
const MAX = 57802
const MIN = 57803
const SUM = 57804
const GROUP_CONCAT = 57805
const BIT_AND = 57806
const BIT_OR = 57807
const BIT_XOR = 57808
const STD = 57809
const STDDEV = 57810
const STDDEV_POP = 57811
const STDDEV_SAMP = 57812
const VAR_POP = 57813
const VAR_SAMP = 57814
const VARIANCE = 57815
const REGEXP_INSTR = 57816
const REGEXP_LIKE = 57817
const REGEXP_REPLACE = 57818
const REGEXP_SUBSTR = 57819
const ExtractValue = 57820
const UpdateXML = 57821
const GET_LOCK = 57822
const RELEASE_LOCK = 57823
const RELEASE_ALL_LOCKS = 57824
const IS_FREE_LOCK = 57825
const IS_USED_LOCK = 57826
const LOCATE = 57827
const POSITION = 57828
const MATCH = 57829
const AGAINST = 57830
const BOOLEAN = 57831
const LANGUAGE = 57832
const WITH = 57833
const QUERY = 57834
const EXPANSION = 57835
const WITHOUT = 57836
const VALIDATION = 57837
const UNUSED = 57838
const ARRAY = 57839
const BYTE = 57840
const CUME_DIST = 57841
const DESCRIPTION = 57842
const DENSE_RANK = 57843
const EMPTY = 57844
const EXCEPT = 57845
const FIRST_VALUE = 57846
const GROUPING = 57847
const GROUPS = 57848
const JSON_TABLE = 57849
const LAG = 57850
const LAST_VALUE = 57851
const LATERAL = 57852
const LEAD = 57853
const NTH_VALUE = 57854
const NTILE = 57855
const OF = 57856
const OVER = 57857
const PERCENT_RANK = 57858
const RANK = 57859
const RECURSIVE = 57860
const ROW_NUMBER = 57861
const SYSTEM = 57862
const WINDOW = 57863
const ACTIVE = 57864
const ADMIN = 57865
const AUTOEXTEND_SIZE = 57866
const BUCKETS = 57867
const CLONE = 57868
const COLUMN_FORMAT = 57869
const COMPONENT = 57870
const DEFINITION = 57871
const ENFORCED = 57872
const ENGINE_ATTRIBUTE = 57873
const EXCLUDE = 57874
const FOLLOWING = 57875
const GET_MASTER_PUBLIC_KEY = 57876
const HISTOGRAM = 57877
const HISTORY = 57878
const INACTIVE = 57879
const INVISIBLE = 57880
const LOCKED = 57881
const MASTER_COMPRESSION_ALGORITHMS = 57882
const MASTER_PUBLIC_KEY_PATH = 57883
const MASTER_TLS_CIPHERSUITES = 57884
const MASTER_ZSTD_COMPRESSION_LEVEL = 57885
const NESTED = 57886
const NETWORK_NAMESPACE = 57887
const NOWAIT = 57888
const NULLS = 57889
const OJ = 57890
const OLD = 57891
const OPTIONAL = 57892
const ORDINALITY = 57893
const ORGANIZATION = 57894
const OTHERS = 57895
const PARTIAL = 57896
const PATH = 57897
const PERSIST = 57898
const PERSIST_ONLY = 57899
const PRECEDING = 57900
const PRIVILEGE_CHECKS_USER = 57901
const PROCESS = 57902
const RANDOM = 57903
const REFERENCE = 57904
const REQUIRE_ROW_FORMAT = 57905
const RESOURCE = 57906
const RESPECT = 57907
const RESTART = 57908
const RETAIN = 57909
const REUSE = 57910
const ROLE = 57911
const SECONDARY = 57912
const SECONDARY_ENGINE = 57913
const SECONDARY_ENGINE_ATTRIBUTE = 57914
const SECONDARY_LOAD = 57915
const SECONDARY_UNLOAD = 57916
const SIMPLE = 57917
const SKIP = 57918
const SRID = 57919
const THREAD_PRIORITY = 57920
const TIES = 57921
const UNBOUNDED = 57922
const VCPU = 57923
const VISIBLE = 57924
const RETURNING = 57925
const FORMAT_BYTES = 57926
const FORMAT_PICO_TIME = 57927
const PS_CURRENT_THREAD_ID = 57928
const PS_THREAD_ID = 57929
const GTID_SUBSET = 57930
const GTID_SUBTRACT = 57931
const WAIT_FOR_EXECUTED_GTID_SET = 57932
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57933
const FORMAT = 57934
const TREE = 57935
const VITESS = 57936
const TRADITIONAL = 57937
const VTEXPLAIN = 57938
const LOCAL = 57939
const LOW_PRIORITY = 57940
const NO_WRITE_TO_BINLOG = 57941
const LOGS = 57942
const ERROR = 57943
const GENERAL = 57944
const HOSTS = 57945
const OPTIMIZER_COSTS = 57946
const USER_RESOURCES = 57947
const SLOW = 57948
const CHANNEL = 57949
const RELAY = 57950
const EXPORT = 57951
const CURRENT = 57952
const ROW = 57953
const ROWS = 57954
const AVG_ROW_LENGTH = 57955
const CONNECTION = 57956
const CHECKSUM = 57957
const DELAY_KEY_WRITE = 57958
const ENCRYPTION = 57959
const ENGINE = 57960
const INSERT_METHOD = 57961
const MAX_ROWS = 57962
const MIN_ROWS = 57963
const PACK_KEYS = 57964
const PASSWORD = 57965
const FIXED = 57966
const DYNAMIC = 57967
const COMPRESSED = 57968
const REDUNDANT = 57969
const COMPACT = 57970
const ROW_FORMAT = 57971
const STATS_AUTO_RECALC = 57972
const STATS_PERSISTENT = 57973
const STATS_SAMPLE_PAGES = 57974
const STORAGE = 57975
const MEMORY = 57976
const DISK = 57977
const PARTITIONS = 57978
const LINEAR = 57979
const RANGE = 57980
const LIST = 57981
const SUBPARTITION = 57982
const SUBPARTITIONS = 57983
const HASH = 57984

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 48,
	14, 48,
	-2, 37,
	-1, 49,
	1, 156,
	660, 156,
	-2, 164,
	-1, 50,
	135, 164,
	176, 164,
	342, 164,
	-2, 514,
	-1, 57,
	36, 761,
	238, 761,
	249, 761,
	284, 775,
	285, 775,
	-2, 763,
	-1, 62,
	240, 799,
	-2, 797,
	-1, 116,
	237, 1446,
	-2, 130,
	-1, 118,
	1, 157,
	660, 157,
	-2, 164,
	-1, 129,
	136, 400,
	243, 400,
	-2, 503,
	-1, 148,
	135, 164,
	176, 164,
	342, 164,
	-2, 523,
	-1, 802,
	87, 1463,
	-2, 1317,
	-1, 803,
	87, 1464,
	221, 1468,
	-2, 1318,
	-1, 804,
	221, 1467,
	-2, 39,
	-1, 884,
	60, 868,
	-2, 883,
	-1, 970,
	248, 40,
	253, 40,
	-2, 411,
	-1, 1055,
	1, 571,
	660, 571,
	-2, 164,
	-1, 1350,
	221, 1468,
	-2, 1318,
	-1, 1498,
	60, 869,
	-2, 888,
	-1, 1499,
	60, 870,
	-2, 889,
	-1, 1550,
	135, 164,
	176, 164,
	342, 164,
	-2, 450,
	-1, 1629,
	136, 400,
	243, 400,
	-2, 503,
	-1, 1638,
	248, 41,
	253, 41,
	-2, 412,
	-1, 1996,
	221, 1472,
	-2, 1466,
	-1, 1997,
	221, 1468,
	-2, 1464,
	-1, 2097,
	135, 164,
	176, 164,
	342, 164,
	-2, 451,
	-1, 2104,
	26, 185,
	-2, 187,
	-1, 2467,
	78, 95,
	88, 95,
	-2, 947,
	-1, 2535,
	635, 687,
	-2, 661,
	-1, 2702,
	50, 1414,
	-2, 1408,
	-1, 3354,
	635, 687,
	-2, 675,
	-1, 3442,
	23, 1825,
	33, 1825,
	177, 1825,
	260, 1825,
	322, 1825,
	323, 1825,
	324, 1825,
	325, 1825,
	326, 1825,
	327, 1825,
	328, 1825,
	330, 1825,
	331, 1825,
	332, 1825,
	333, 1825,
	334, 1825,
	335, 1825,
	336, 1825,
	337, 1825,
	338, 1825,
	339, 1825,
	340, 1825,
	341, 1825,
	343, 1825,
	345, 1825,
	346, 1825,
	347, 1825,
	348, 1825,
	349, 1825,
	350, 1825,
	351, 1825,
	352, 1825,
	353, 1825,
	356, 1825,
	357, 1825,
	358, 1825,
	359, 1825,
	360, 1825,
	362, 1825,
	363, 1825,
	364, 1825,
	365, 1825,
	506, 1825,
	-2, 619,
}

const yyPrivate = 57344

const yyLast = 47480

var yyAct = [...]int{
	1506, 3513, 3102, 3103, 3335, 813, 3483, 3101, 3524, 806,
	676, 3419, 3482, 3440, 3072, 1553, 2929, 2045, 805, 1863,
	2851, 656, 3385, 3408, 2094, 2754, 2761, 3319, 3267, 2811,
	5, 2816, 2813, 2025, 2812, 2810, 2815, 2814, 2802, 3317,
	2367, 3059, 1119, 2715, 877, 2718, 3131, 3307, 2401, 2831,
	2027, 2661, 2769, 2164, 2440, 2830, 658, 2716, 2719, 2968,
	2962, 2596, 766, 768, 1513, 3136, 2049, 686, 2833, 2068,
	2713, 767, 2065, 2988, 2703, 2427, 1987, 2954, 1067, 2501,
	2532, 2500, 2152, 773, 2132, 2502, 2580, 932, 2195, 2127,
	1121, 1607, 654, 772, 2857, 2082, 39, 2452, 2069, 2419,
	157, 2403, 1002, 2070, 1958, 1654, 1859, 1878, 1096, 901,
	2572, 900, 879, 40, 38, 1500, 2173, 143, 2151, 1817,
	2057, 2212, 2134, 2494, 965, 960, 1542, 2469, 1522, 2072,
	1480, 1984, 1362, 668, 94, 1836, 1636, 1882, 651, 2433,
	1290, 1279, 1753, 1992, 1643, 939, 936, 2149, 971, 98,
	1735, 940, 99, 2123, 918, 966, 967, 1757, 968, 1954,
	891, 1527, 93, 1346, 1322, 1117, 1110, 1993, 1541, 10,
	9, 920, 978, 881, 101, 885, 8, 2050, 888, 663,
	1762, 79, 161, 121, 1602, 119, 120, 126, 1628, 889,
	127, 1051, 913, 662, 903, 887, 886, 87, 1366, 3344,
	184, 2525, 1370, 92, 3514, 2166, 2167, 2168, 2166, 3060,
	2799, 2523, 78, 908, 912, 2210, 100, 3370, 2555, 2554,
	3052, 3466, 2588, 645, 123, 3015, 89, 2589, 894, 3365,
	89, 89, 122, 1720, 1957, 591, 3366, 166, 933, 128,
	631, 904, 2255, 3371, 910, 910, 1824, 3106, 1004, 1007,
	1839, 1891, 1823, 625, 1822, 2022, 2023, 895, 1821, 1820,
	1819, 1021, 1022, 1023, 1793, 1026, 1027, 1028, 1029, 2,
	2821, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 928, 981,
	927, 646, 880, 163, 958, 878, 164, 648, 902, 649,
	957, 122, 956, 982, 955, 954, 2399, 3461, 1008, 1011,
	1012, 105, 106, 107, 2699, 110, 184, 1291, 116, 183,
	3106, 185, 2429, 2665, 586, 1015, 2819, 2545, 3366, 3470,
	944, 2199, 631, 3486, 3105, 644, 926, 770, 771, 1024,
	123, 1476, 145, 949, 873, 874, 875, 876, 3504, 3534,
	884, 2934, 2825, 166, 3469, 3481, 3468, 2933, 2548, 3320,
	2821, 2368, 1829, 2876, 2197, 822, 823, 824, 3263, 122,
	3262, 655, 1006, 2818, 1307, 2198, 625, 1507, 915, 916,
	625, 3467, 3065, 1005, 156, 3066, 3495, 3273, 3464, 3084,
	144, 3073, 822, 823, 824, 1281, 3409, 1868, 3416, 2192,
	3272, 3445, 89, 2896, 80, 3083, 1617, 3105, 2400, 163,
	80, 650, 164, 82, 3420, 3349, 2819, 1543, 622, 1544,
	2562, 2563, 2264, 2478, 1301, 1323, 2477, 80, 2750, 2479,
	167, 132, 133, 155, 154, 183, 2088, 1291, 2587, 173,
	2751, 2752, 2825, 2261, 1054, 2571, 2757, 2873, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1332, 1331, 1333, 1334, 1086,
	626, 2024, 871, 2822, 2089, 2090, 607, 1114, 3450, 1802,
	1803, 870, 3336, 926, 770, 771, 3149, 625, 605, 1087,
	2526, 2490, 89, 625, 1091, 1092, 3448, 2262, 89, 3426,
	2143, 2758, 1074, 1074, 1280, 3454, 3455, 1075, 1075, 2256,
	2257, 2259, 2258, 2771, 2772, 89, 1073, 1080, 1072, 1304,
	3449, 1305, 1306, 2137, 2853, 2760, 3426, 625, 602, 2053,
	2436, 2437, 3487, 2107, 2106, 2053, 2884, 617, 1297, 1050,
	80, 1289, 625, 2755, 149, 130, 152, 137, 129, 625,
	150, 151, 612, 3488, 1301, 2630, 167, 2882, 2253, 1801,
	2771, 2772, 615, 2822, 2443, 173, 138, 2756, 2965, 919,
	1805, 158, 953, 639, 1060, 1061, 643, 637, 2858, 1088,
	141, 139, 134, 135, 136, 140, 2573, 1539, 1113, 2444,
	1025, 1484, 131, 626, 1093, 2533, 1710, 626, 2174, 2558,
	2762, 142, 948, 1741, 1094, 950, 1063, 1081, 953, 1049,
	3295, 2846, 3296, 2233, 2854, 2234, 2218, 2235, 89, 2847,
	2770, 2213, 3516, 1736, 1107, 3054, 592, 1112, 594, 608,
	951, 628, 2773, 627, 598, 1095, 596, 600, 609, 601,
	1711, 595, 1712, 606, 3462, 1056, 597, 610, 611, 614,
	618, 619, 620, 616, 613, 2575, 604, 629, 1297, 929,
	923, 921, 3247, 3053, 2236, 1089, 1090, 2770, 1031, 2136,
	1030, 2219, 2855, 1053, 2664, 2215, 991, 3050, 2217, 2773,
	1487, 1070, 989, 1076, 1077, 1078, 1079, 158, 961, 2177,
	184, 3110, 962, 2066, 626, 1621, 1340, 1341, 1342, 1343,
	626, 2528, 953, 962, 945, 1000, 1354, 1115, 1116, 1358,
	999, 947, 946, 998, 123, 997, 145, 2631, 2051, 2052,
	2216, 996, 995, 994, 2051, 2052, 993, 166, 988, 1001,
	1108, 3343, 2773, 2524, 626, 2225, 2221, 2223, 2224, 2222,
	2226, 2227, 1337, 159, 3535, 1348, 1337, 937, 3493, 626,
	171, 937, 974, 952, 973, 2262, 626, 937, 156, 1754,
	951, 935, 959, 2560, 144, 153, 2150, 1296, 1293, 1294,
	1295, 1300, 1302, 1299, 1052, 1298, 1272, 819, 2196, 2527,
	914, 819, 819, 163, 2576, 1292, 164, 2203, 2202, 952,
	3049, 179, 1642, 2759, 2404, 2406, 929, 923, 921, 1273,
	1274, 1308, 1750, 2874, 1282, 1630, 1631, 155, 154, 183,
	1540, 1018, 1084, 1010, 1344, 1744, 2792, 1742, 1743, 973,
	1745, 1746, 992, 1009, 980, 2557, 146, 2592, 990, 147,
	1363, 2276, 160, 165, 162, 168, 169, 170, 172, 174,
	175, 176, 177, 3104, 3013, 3014, 3528, 3082, 178, 180,
	181, 182, 1722, 1721, 1723, 1724, 1725, 83, 1615, 159,
	2547, 2966, 1614, 2579, 1613, 630, 171, 2492, 2543, 922,
	1751, 1611, 2823, 2824, 590, 585, 3422, 2570, 1338, 1339,
	2569, 2194, 3332, 952, 3002, 2827, 623, 1296, 1293, 1294,
	1295, 1300, 1302, 1299, 1368, 1298, 1369, 1508, 1510, 1641,
	2984, 624, 1372, 3422, 2546, 1292, 3421, 179, 149, 1632,
	152, 2474, 1629, 88, 150, 151, 3104, 2263, 2582, 88,
	167, 980, 1474, 2581, 2439, 979, 1071, 1059, 1740, 173,
	2140, 2376, 3453, 3421, 1871, 1491, 88, 980, 1017, 1531,
	1062, 1439, 1065, 1475, 118, 2434, 2095, 1337, 160, 165,
	162, 168, 169, 170, 172, 174, 175, 176, 177, 1334,
	2405, 2749, 2823, 2824, 178, 180, 181, 182, 2763, 897,
	2141, 113, 2767, 980, 1097, 2827, 3452, 2139, 1111, 2766,
	2918, 1763, 1490, 1892, 1069, 3357, 1494, 1445, 1446, 1447,
	1448, 1449, 881, 1103, 1003, 1105, 3045, 1893, 2978, 1488,
	2214, 1492, 1883, 1814, 1493, 98, 922, 1475, 99, 2616,
	1481, 2142, 1747, 2768, 1083, 1545, 1307, 1468, 2764, 2516,
	1307, 2138, 979, 2765, 3496, 1085, 2582, 983, 973, 1306,
	101, 2581, 985, 1102, 1104, 3145, 986, 984, 979, 88,
	1883, 3020, 2293, 114, 973, 976, 977, 3019, 937, 980,
	2181, 158, 970, 974, 1523, 1648, 2191, 987, 1651, 1509,
	1305, 1306, 1650, 1640, 3526, 2189, 1634, 3527, 991, 3525,
	1618, 1619, 1620, 969, 979, 2193, 1737, 989, 1738, 983,
	973, 1739, 1683, 3536, 985, 1686, 1489, 1688, 986, 984,
	1512, 1609, 1627, 980, 2186, 1705, 1329, 1330, 1332, 1331,
	1333, 1334, 2186, 1478, 1656, 1507, 1657, 878, 1659, 1661,
	1687, 880, 1665, 1667, 1669, 1671, 1673, 3489, 1536, 1537,
	3003, 1098, 1831, 1833, 1834, 1646, 1890, 1068, 1764, 153,
	3387, 1055, 1645, 2190, 893, 1100, 3530, 1695, 1696, 1101,
	3079, 2188, 3080, 1701, 1702, 1610, 1832, 1989, 3255, 1106,
	979, 1304, 1016, 1305, 1306, 1304, 1013, 1305, 1306, 1644,
	1644, 1625, 1624, 1495, 1623, 1637, 1759, 1507, 3254, 1767,
	3537, 3325, 1841, 1099, 1888, 3388, 1771, 3245, 1773, 1774,
	1775, 1776, 2597, 1889, 3095, 1780, 1842, 1335, 1336, 1840,
	146, 1765, 1766, 147, 979, 3094, 1932, 1792, 3027, 3026,
	973, 976, 977, 1730, 937, 1770, 1691, 3016, 970, 974,
	1307, 1323, 1777, 1778, 1779, 1755, 3326, 2800, 1761, 2268,
	2269, 2270, 1307, 159, 822, 823, 824, 2788, 2498, 1616,
	171, 1323, 2320, 2591, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1332, 1331, 1333, 1334, 2497, 1307, 2146, 122, 956,
	1731, 955, 954, 1715, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1332, 1331, 1333, 1334, 2599, 1714, 1729, 2281, 1713,
	1728, 179, 1703, 1769, 1327, 1328, 1329, 1330, 1332, 1331,
	1333, 1334, 1790, 1697, 1791, 1924, 1913, 1914, 1915, 1916,
	1926, 1917, 1918, 1919, 1931, 1927, 1920, 1921, 1928, 1929,
	1930, 1922, 1923, 1925, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1309, 160, 165, 162, 168, 169, 170, 172, 174,
	175, 176, 177, 1717, 1694, 1693, 1810, 1692, 178, 180,
	181, 182, 1663, 1307, 1727, 2609, 2608, 2607, 2601, 2850,
	2605, 1276, 2600, 631, 2598, 1304, 1307, 1305, 1306, 2603,
	1539, 3490, 1989, 1845, 1866, 1866, 1986, 1304, 2602, 1305,
	1306, 1307, 3010, 631, 1516, 1988, 2618, 1864, 1864, 1867,
	2058, 2059, 2481, 631, 2162, 2161, 2604, 2606, 1886, 817,
	3352, 1304, 1887, 1305, 1306, 2160, 2159, 1716, 1307, 39,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1331, 1333,
	1334, 2158, 2157, 1323, 2330, 3351, 1319, 2891, 1320, 95,
	1517, 3329, 1837, 1835, 1303, 1507, 1950, 3500, 1507, 1507,
	96, 1348, 1321, 1335, 1336, 1318, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1332, 1331, 1333, 1334, 3328, 1884, 2425,
	3515, 3477, 1507, 3345, 1982, 3498, 1507, 1798, 1799, 95,
	1303, 1507, 1825, 1826, 1827, 1828, 97, 2425, 3415, 3281,
	96, 1474, 1838, 2425, 3395, 1813, 1811, 104, 1304, 2011,
	1305, 1306, 1812, 1507, 79, 1507, 3280, 104, 103, 3327,
	102, 1304, 1475, 1305, 1306, 3250, 1508, 2018, 103, 97,
	102, 3234, 1994, 3233, 1843, 3144, 1304, 3142, 1305, 1306,
	3091, 1872, 1873, 2425, 3391, 3238, 1875, 1473, 910, 910,
	1880, 3378, 1507, 3237, 1885, 1507, 3071, 1985, 3063, 3342,
	2042, 1870, 1472, 1304, 1471, 1305, 1306, 1898, 1899, 1900,
	1901, 1902, 1903, 1904, 1905, 1906, 1907, 1877, 1879, 1307,
	1996, 1933, 1934, 1935, 1936, 1937, 1938, 1940, 1507, 1945,
	1307, 1947, 1948, 1949, 3024, 1951, 1952, 1953, 1507, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 3009, 1983, 1994, 1990, 1991, 910, 2104, 910,
	910, 910, 910, 910, 98, 1999, 2000, 99, 2859, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 1995, 2012, 2013,
	2014, 2015, 2016, 2035, 98, 2036, 2856, 99, 1998, 2791,
	2147, 2001, 2002, 3432, 1507, 2534, 2041, 3258, 1507, 2425,
	3246, 2512, 1996, 2790, 3430, 1507, 1894, 1895, 1896, 1897,
	2076, 2113, 2114, 2115, 2116, 2507, 910, 2495, 2017, 2099,
	1908, 1307, 1470, 2029, 894, 3063, 1507, 2425, 3061, 2103,
	2108, 2098, 2109, 2110, 2111, 2112, 2208, 2080, 2054, 2055,
	2186, 1507, 1307, 2207, 1304, 2040, 1305, 1306, 2119, 2120,
	2121, 2122, 2043, 2982, 1507, 1304, 2102, 1305, 1306, 1307,
	2341, 1507, 2977, 1307, 2093, 2175, 2781, 2780, 2135, 2063,
	2061, 2129, 1844, 2085, 1846, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 2101, 2100, 2086,
	2084, 2777, 2778, 2777, 2776, 1303, 928, 1307, 927, 2449,
	1507, 2172, 2262, 2556, 1307, 3428, 1507, 2979, 2145, 1325,
	1326, 1327, 1328, 1329, 1330, 1332, 1331, 1333, 1334, 1307,
	2048, 1944, 2030, 2131, 1606, 2537, 3304, 1507, 97, 2130,
	1794, 1955, 2125, 2126, 2421, 2530, 2531, 3383, 2144, 2425,
	2424, 2148, 1760, 3276, 2156, 2286, 1507, 3302, 1507, 97,
	1869, 1507, 3356, 1946, 2200, 1726, 1304, 2180, 1305, 1306,
	2183, 1307, 2184, 2470, 2130, 2179, 2178, 2182, 1307, 1718,
	1708, 981, 1704, 1700, 1307, 1699, 1698, 1304, 2204, 1305,
	1306, 2997, 2205, 2206, 2201, 982, 1323, 1507, 3299, 1507,
	1606, 1605, 1551, 1550, 1304, 1644, 1305, 1306, 1304, 2019,
	1305, 1306, 1518, 3285, 1507, 1955, 1109, 2286, 2332, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1332, 1331, 1333, 1334,
	2441, 2441, 2448, 1307, 2246, 2247, 2471, 2425, 2470, 2249,
	2744, 103, 1304, 2211, 1305, 1306, 2473, 2714, 2250, 1304,
	2262, 1305, 1306, 2449, 2273, 2953, 1507, 2938, 2977, 1307,
	2779, 2279, 2946, 1507, 1304, 2284, 1305, 1306, 2287, 3491,
	2288, 2687, 2187, 2087, 2286, 2295, 2341, 2317, 2316, 2297,
	2298, 2299, 2186, 2169, 2239, 2056, 1511, 2449, 2020, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 1869,
	1307, 2471, 2449, 2977, 2280, 1815, 1304, 1800, 1305, 1306,
	1303, 2262, 1749, 1304, 1837, 1305, 1306, 2943, 1507, 1304,
	1538, 1305, 1306, 2278, 883, 2321, 2322, 2323, 2324, 2325,
	2186, 2327, 2252, 964, 963, 2329, 89, 1307, 3458, 2334,
	2335, 3398, 2336, 2941, 1507, 2339, 2260, 2340, 3269, 1514,
	3235, 2343, 1996, 3156, 1307, 2347, 3044, 3041, 1307, 2352,
	2353, 2354, 2355, 3028, 1838, 2328, 2271, 3022, 1304, 2901,
	1305, 1306, 2366, 2900, 2369, 2370, 1608, 2128, 2848, 1307,
	1679, 2805, 2372, 2374, 2906, 1507, 1307, 2801, 2538, 2377,
	2378, 2379, 2380, 2381, 1304, 1307, 1305, 1306, 2124, 2118,
	2388, 2389, 89, 2390, 2117, 1733, 2393, 2395, 2042, 2292,
	2397, 1639, 2294, 1307, 3029, 3030, 3031, 1307, 3032, 1995,
	2409, 2889, 1507, 2301, 2302, 2303, 2304, 1866, 1323, 1635,
	2275, 1680, 1681, 1682, 1307, 1304, 1604, 1305, 1306, 1507,
	1864, 2410, 2396, 1507, 115, 2290, 1307, 2803, 2504, 1054,
	2852, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1331,
	1333, 1334, 2326, 2394, 1507, 3033, 3034, 3035, 1363, 2408,
	2373, 1507, 1304, 1307, 1305, 1306, 3270, 2503, 1307, 2356,
	1507, 2989, 2990, 2143, 2033, 3510, 2445, 2283, 3508, 1304,
	1307, 1305, 1306, 1304, 1796, 1305, 1306, 2282, 2411, 3484,
	2413, 2348, 1507, 3364, 3290, 2426, 1307, 2995, 1520, 2992,
	1307, 2797, 2796, 2795, 1304, 1307, 1305, 1306, 2289, 2994,
	2733, 1304, 2714, 1305, 1306, 2504, 2517, 2240, 2732, 3360,
	1304, 3340, 1305, 1306, 2464, 3271, 1307, 2736, 2734, 2047,
	1481, 2398, 2737, 2735, 1515, 2039, 1307, 2422, 1304, 39,
	1305, 1306, 1304, 2983, 1305, 1306, 1797, 2948, 2463, 2692,
	3324, 2465, 2691, 3242, 3135, 2418, 2491, 2493, 2423, 1304,
	3137, 1305, 1306, 2973, 1519, 2438, 2701, 1307, 2529, 1475,
	1748, 1304, 2435, 1305, 1306, 1523, 1307, 2488, 2484, 2468,
	869, 3046, 1307, 2738, 2944, 2458, 2459, 2775, 1307, 2472,
	2499, 2508, 1307, 2272, 2475, 2274, 2135, 3126, 1304, 3125,
	1305, 1306, 2482, 1304, 2485, 1305, 1306, 1307, 2970, 2553,
	2916, 1020, 1307, 2300, 1275, 1304, 2969, 1305, 1306, 2506,
	2912, 1675, 2496, 1307, 2509, 2510, 1019, 2867, 1307, 2503,
	2315, 1304, 2544, 1305, 1306, 1304, 2505, 1305, 1306, 2585,
	1304, 898, 1305, 1306, 1307, 1892, 2551, 3124, 2513, 899,
	2514, 2898, 2518, 2519, 2520, 123, 2975, 1307, 97, 1893,
	2897, 1304, 2550, 1305, 1306, 3522, 2894, 1627, 1676, 1677,
	1678, 1304, 2392, 1305, 1306, 95, 2391, 2793, 2594, 2704,
	2706, 2620, 2621, 2622, 2623, 2624, 96, 2243, 2707, 2058,
	2059, 2387, 3437, 1307, 3341, 3265, 2386, 2549, 2539, 2540,
	2629, 2774, 1304, 1307, 1305, 1306, 2462, 2385, 2044, 906,
	907, 1304, 2384, 1305, 1306, 2232, 2231, 1304, 2230, 1305,
	1306, 2229, 2574, 1304, 2610, 1305, 1306, 1304, 2383, 1305,
	1306, 1505, 1501, 2228, 2583, 2690, 2955, 2584, 2266, 2577,
	2625, 2382, 1304, 2689, 1305, 1306, 1502, 1304, 2593, 1305,
	1306, 102, 3312, 3311, 3132, 3293, 104, 95, 1304, 3143,
	1305, 1306, 3141, 1304, 97, 1305, 1306, 103, 96, 102,
	2611, 2037, 2038, 1504, 2613, 1503, 3140, 2371, 97, 1304,
	3133, 1305, 1306, 3042, 2974, 104, 2590, 2365, 2972, 2806,
	2170, 2666, 1304, 1622, 1305, 1306, 103, 103, 102, 2671,
	104, 905, 2963, 2441, 2668, 910, 3512, 3511, 2614, 2615,
	3114, 103, 2617, 2421, 2632, 2619, 2318, 2634, 2031, 1532,
	1524, 108, 109, 1985, 3511, 1985, 2640, 2723, 1304, 3512,
	1305, 1306, 3330, 3008, 896, 2626, 2627, 2628, 1304, 3,
	1305, 1306, 91, 1, 1278, 2741, 1307, 2633, 1277, 3012,
	2635, 2636, 2637, 3447, 2694, 603, 2638, 2639, 2021, 1479,
	1959, 2641, 2671, 3485, 2643, 3443, 3444, 2645, 2646, 2647,
	2648, 2695, 2726, 1719, 1709, 2649, 1959, 1959, 1959, 1959,
	1959, 2743, 3074, 2667, 2682, 2669, 1956, 2717, 3266, 2809,
	2176, 3040, 2717, 2686, 910, 2076, 2133, 972, 2693, 2670,
	148, 2672, 2673, 2674, 2675, 2676, 2677, 2096, 2720, 2097,
	2678, 2679, 3411, 2680, 112, 2681, 930, 111, 2696, 2745,
	885, 975, 2746, 2076, 2076, 2076, 2076, 2076, 2727, 1082,
	2364, 2730, 2711, 2725, 2728, 2729, 2829, 2731, 2739, 2171,
	887, 886, 3064, 2076, 2489, 1759, 2076, 2105, 1557, 2747,
	2708, 2709, 1555, 98, 1556, 1554, 99, 2683, 2684, 2685,
	2712, 1559, 2785, 1307, 2753, 1558, 2875, 2784, 2783, 2319,
	2917, 2869, 2650, 2651, 2652, 2653, 2654, 2808, 1804, 638,
	2461, 1304, 632, 1305, 1306, 2742, 2786, 2787, 2837, 186,
	1546, 2886, 2887, 2888, 2871, 2890, 2892, 2836, 2807, 803,
	2135, 1525, 2828, 2930, 1014, 593, 2782, 2612, 2209, 2899,
	2843, 1307, 599, 1355, 2903, 2904, 2905, 2907, 2908, 2909,
	2910, 1307, 1795, 2911, 2688, 2913, 2914, 2915, 2476, 2595,
	2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928,
	2863, 1307, 2865, 2866, 2862, 2804, 925, 2363, 2935, 2860,
	917, 2939, 189, 2940, 2942, 189, 2945, 2947, 636, 2949,
	2950, 2951, 2952, 642, 2870, 2032, 2642, 2958, 2644, 2877,
	2878, 2880, 2879, 189, 2412, 2881, 924, 2883, 1307, 2885,
	3243, 2722, 2932, 2967, 2655, 2656, 2657, 2658, 189, 2936,
	2454, 2457, 2458, 2459, 2455, 2362, 2456, 2460, 1304, 1307,
	1305, 1306, 2980, 2981, 1307, 2361, 2985, 2700, 1307, 2702,
	2428, 2705, 2698, 642, 189, 642, 3323, 1307, 3134, 3396,
	2486, 1521, 2937, 1307, 2291, 2360, 1881, 1345, 2961, 2073,
	1307, 3109, 1830, 660, 659, 1307, 657, 2893, 2414, 2442,
	1307, 1310, 2956, 2957, 2959, 807, 1304, 1307, 1305, 1306,
	2402, 2902, 1533, 2453, 2964, 2451, 1304, 2971, 1305, 1306,
	2450, 2986, 2359, 2241, 2081, 2991, 2976, 2987, 3439, 2075,
	2071, 2420, 758, 757, 669, 661, 1304, 653, 1305, 1306,
	3000, 3001, 756, 2358, 2993, 2996, 755, 3005, 2357, 2835,
	3423, 2559, 2351, 2849, 2999, 1307, 2998, 2561, 2487, 2845,
	2837, 2350, 1307, 3047, 3048, 3006, 3007, 2349, 1307, 2836,
	1288, 3062, 1307, 1304, 2346, 1305, 1306, 1307, 2076, 2345,
	1497, 1307, 647, 3023, 2344, 3025, 943, 2872, 3068, 3069,
	3347, 2342, 2265, 2895, 1304, 1496, 1305, 1306, 1911, 1304,
	1912, 1305, 1306, 1304, 3354, 1305, 1306, 2817, 3058, 2798,
	3017, 3018, 1304, 3081, 1305, 1306, 3085, 2535, 1304, 2163,
	1305, 1306, 65, 43, 3318, 1304, 3384, 1305, 1306, 754,
	1304, 751, 1305, 1306, 3111, 1304, 3112, 1305, 1306, 2338,
	3113, 2662, 1304, 3096, 1305, 1306, 2337, 2663, 3367, 3070,
	3368, 750, 2333, 3369, 1505, 1501, 2331, 1939, 3100, 1285,
	3460, 2296, 3051, 1806, 90, 2285, 3055, 3056, 3057, 1502,
	3108, 34, 33, 32, 31, 30, 25, 24, 3115, 23,
	3043, 22, 21, 27, 20, 3086, 19, 18, 2820, 3480,
	1304, 3521, 1305, 1306, 1498, 1499, 1504, 1304, 1503, 1305,
	1306, 117, 52, 1304, 49, 1305, 1306, 1304, 47, 1305,
	1306, 125, 1304, 3067, 1305, 1306, 1304, 124, 1305, 1306,
	3107, 50, 46, 2454, 2457, 2458, 2459, 2455, 1057, 2456,
	2460, 44, 3129, 2989, 2990, 29, 28, 17, 16, 15,
	14, 13, 12, 1866, 11, 7, 6, 3090, 37, 36,
	35, 1809, 3150, 26, 4, 2522, 1864, 3158, 2165, 0,
	0, 0, 3130, 0, 0, 0, 0, 3139, 3087, 3152,
	3088, 3154, 3138, 3089, 0, 3146, 3092, 3093, 3148, 0,
	0, 2717, 0, 0, 0, 3097, 0, 0, 0, 0,
	0, 0, 0, 3159, 3160, 3099, 0, 0, 0, 3257,
	0, 0, 3244, 2720, 0, 3162, 0, 2720, 3264, 818,
	0, 0, 81, 0, 0, 39, 0, 3116, 0, 0,
	3117, 0, 3118, 3119, 0, 3120, 0, 3121, 3274, 3275,
	0, 3277, 3122, 3278, 3279, 0, 3241, 3240, 3282, 3283,
	3284, 3239, 3286, 3289, 3287, 3288, 0, 0, 3256, 0,
	0, 0, 1866, 3261, 3260, 0, 3268, 3147, 3298, 3300,
	3301, 3303, 3305, 3306, 3308, 1864, 3291, 0, 3155, 0,
	0, 3157, 0, 0, 3248, 0, 0, 0, 0, 0,
	0, 0, 0, 3161, 0, 0, 0, 0, 0, 882,
	0, 81, 0, 0, 3292, 3251, 3252, 3253, 0, 0,
	0, 3236, 3338, 3294, 0, 0, 0, 3297, 0, 0,
	882, 0, 0, 0, 3334, 3313, 3314, 3316, 3315, 0,
	0, 0, 0, 0, 0, 942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3331, 0, 0, 0, 0,
	0, 0, 0, 0, 3337, 189, 0, 189, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2720, 0, 0, 0, 0, 0, 0,
	0, 642, 0, 642, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 3339, 3098, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 189, 0, 3333, 0, 0, 0,
	0, 3321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3358, 3363, 0,
	0, 1350, 0, 0, 0, 0, 3355, 0, 0, 0,
	3353, 0, 3350, 0, 0, 0, 0, 0, 3379, 0,
	0, 0, 0, 0, 3380, 3381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3346, 0, 0, 0, 3373, 3392, 0, 3374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3382, 0, 0, 39,
	0, 0, 3417, 3418, 0, 0, 0, 0, 0, 0,
	0, 0, 3397, 0, 3389, 0, 3427, 3429, 3431, 3424,
	3425, 0, 0, 3399, 3402, 3410, 3407, 3404, 0, 3403,
	3401, 3406, 3405, 0, 2717, 0, 0, 0, 0, 3268,
	3412, 3459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3435, 0, 0, 0, 3361, 0, 0, 0, 0,
	0, 3456, 3446, 3451, 0, 0, 3438, 0, 0, 0,
	3424, 3425, 3465, 1350, 0, 39, 3463, 0, 3375, 0,
	3476, 3376, 0, 3377, 0, 0, 0, 0, 1358, 3394,
	0, 0, 0, 0, 0, 0, 0, 3479, 0, 3474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3497, 3499, 3501, 3322, 3492, 0, 3494, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 3507,
	189, 3503, 3502, 0, 642, 642, 3509, 0, 0, 1864,
	3506, 0, 0, 3520, 3505, 0, 3424, 3425, 3517, 0,
	189, 3523, 0, 0, 0, 0, 0, 3531, 0, 3532,
	3533, 3529, 0, 0, 0, 0, 0, 0, 0, 0,
	642, 0, 0, 189, 0, 0, 0, 3457, 0, 0,
	1866, 3540, 3541, 3288, 0, 642, 3539, 0, 0, 0,
	0, 189, 0, 1864, 3538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3471, 0, 3472,
	0, 3473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 642, 642, 0,
	642, 0, 642, 642, 0, 642, 642, 642, 642, 642,
	642, 0, 0, 0, 0, 0, 0, 3362, 1350, 0,
	0, 1350, 642, 1350, 189, 3372, 0, 3518, 0, 3519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 642, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 0, 189, 0, 0, 0, 0,
	0, 1118, 0, 1118, 1118, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 642, 3478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1574, 0, 0,
	882, 1347, 1352, 1353, 0, 1356, 0, 1357, 1359, 1360,
	1361, 0, 1364, 1365, 1367, 1367, 0, 1367, 1371, 1371,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 0, 0, 0, 0, 1438,
	0, 1440, 1441, 1442, 1443, 1444, 0, 0, 0, 0,
	0, 0, 0, 0, 1371, 1371, 1371, 1371, 1371, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1562, 0, 0, 0, 0, 0, 0, 0, 1477,
	0, 642, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1483, 0, 0, 0, 0, 0, 882, 0,
	0, 0, 882, 0, 0, 0, 0, 642, 882, 0,
	0, 0, 0, 0, 1575, 0, 0, 1350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 642,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1588, 1591, 1592, 1593,
	1594, 1595, 1596, 0, 1597, 1598, 1599, 1600, 1601, 1576,
	1577, 1578, 1579, 1560, 1561, 1589, 0, 1563, 0, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 0, 1997,
	1573, 1580, 1581, 1582, 1583, 0, 1584, 1585, 1586, 1587,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 0, 0, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 189, 0, 0, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 642, 0,
	0, 1997, 189, 0, 189, 0, 189, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2483, 642, 0, 0, 0, 0, 1118, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 164, 3180, 3182, 3181,
	3199, 3200, 3201, 3202, 3203, 3204, 3205, 708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	1590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1626,
	0, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 642, 123, 0, 145, 642, 642, 0, 0, 0,
	167, 0, 0, 0, 0, 166, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1118, 1118, 0, 0, 0, 0, 0, 0, 0,
	759, 0, 0, 189, 0, 81, 156, 0, 0, 0,
	189, 0, 144, 0, 0, 0, 0, 0, 0, 189,
	189, 0, 0, 189, 0, 189, 0, 0, 0, 0,
	0, 163, 189, 0, 164, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 1631, 155, 154, 183, 0, 0,
	0, 0, 0, 0, 640, 189, 0, 0, 3186, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 3194, 3195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 934, 0, 941, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1350,
	0, 1997, 0, 0, 0, 774, 0, 687, 778, 689,
	775, 776, 0, 685, 688, 777, 149, 1632, 152, 0,
	1629, 0, 150, 151, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 706, 707, 3179, 3183, 3184, 3185, 3196, 3197, 3198,
	3206, 3208, 739, 3207, 3209, 3210, 3211, 3214, 3215, 3216,
	3217, 3212, 3213, 3218, 3163, 3167, 3164, 3165, 3166, 3178,
	3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177,
	3219, 3220, 3221, 3222, 3223, 3224, 3189, 3193, 3192, 3190,
	3191, 3187, 3188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 779, 0, 780, 0, 0,
	784, 0, 0, 0, 786, 785, 2074, 787, 753, 752,
	0, 0, 781, 782, 0, 783, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 189, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	642, 179, 0, 0, 0, 0, 942, 0, 0, 0,
	3225, 3226, 3227, 3228, 3229, 3230, 3231, 3232, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 942,
	0, 0, 160, 165, 162, 168, 169, 170, 172, 174,
	175, 176, 177, 0, 0, 0, 0, 153, 178, 180,
	181, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 0,
	642, 147, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 1350, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 189, 189, 189, 189, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2267,
	0, 0, 0, 642, 0, 0, 0, 0, 0, 0,
	160, 165, 162, 168, 169, 170, 172, 174, 175, 176,
	177, 0, 0, 0, 0, 0, 178, 180, 181, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 2277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1120, 0, 1120, 1120, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 0, 1283, 0, 642, 1574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 1350, 2375, 0, 642, 642, 1350, 189,
	189, 189, 189, 189, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 189, 0, 189,
	0, 0, 189, 189, 189, 0, 2407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2446, 2447, 189, 0, 0,
	0, 1562, 0, 0, 2074, 0, 0, 882, 2466, 0,
	642, 0, 0, 1350, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1575, 1485, 1486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2542, 0, 0,
	0, 1529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1547, 0, 0, 642,
	0, 0, 0, 0, 0, 0, 1588, 1591, 1592, 1593,
	1594, 1595, 1596, 0, 1597, 1598, 1599, 1600, 1601, 1576,
	1577, 1578, 1579, 1560, 1561, 1589, 0, 1563, 189, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 0, 934,
	1573, 1580, 1581, 1582, 1583, 0, 1584, 1585, 1586, 1587,
	0, 0, 0, 0, 0, 0, 0, 0, 1655, 1655,
	0, 1655, 0, 1655, 1655, 0, 1664, 1655, 1655, 1655,
	1655, 1655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 934, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 1732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 1756, 189, 189, 189, 0, 0,
	0, 80, 41, 42, 82, 642, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2659, 0,
	0, 86, 0, 0, 0, 45, 71, 72, 0, 69,
	73, 0, 0, 0, 0, 0, 0, 1120, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1590, 0, 642, 642, 642, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 58, 0, 0,
	0, 2074, 802, 0, 0, 0, 0, 0, 0, 89,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2721, 0, 81, 0, 0, 2074,
	2074, 2074, 2074, 2074, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	0, 0, 2074, 0, 0, 0, 0, 0, 0, 0,
	621, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 0, 0,
	0, 0, 642, 0, 642, 2826, 641, 0, 641, 0,
	0, 0, 0, 0, 0, 2834, 0, 0, 0, 0,
	0, 0, 1120, 1120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 0, 48, 51, 54,
	53, 56, 0, 68, 0, 0, 77, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 57,
	85, 84, 0, 0, 66, 67, 55, 189, 0, 0,
	642, 0, 75, 76, 0, 0, 0, 0, 1860, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 60, 0, 61, 62, 63,
	64, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1909, 1910, 1482, 642, 0, 0, 0, 642, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1120, 0, 0, 0, 0, 0, 0, 0, 588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2074, 0, 872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3004, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2034, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 642, 0, 938, 83, 0,
	0, 0, 0, 0, 0, 2046, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 1529,
	0, 0, 1120, 0, 0, 0, 0, 0, 0, 642,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 642, 0, 0, 0, 0, 941, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 642, 642, 0, 0,
	0, 0, 0, 0, 934, 0, 0, 0, 0, 0,
	941, 0, 0, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3123, 0, 3127, 3128, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 934, 0, 0,
	0, 0, 1860, 0, 0, 0, 1860, 1860, 0, 2721,
	0, 81, 0, 2721, 0, 0, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 820, 642, 1989,
	0, 0, 821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 642, 0, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 641, 1271, 641, 641, 0, 0,
	3249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2254, 0, 0, 0, 0,
	0, 0, 0, 0, 1349, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2721,
	0, 0, 1120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 0, 0, 0, 1349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	1064, 0, 0, 1066, 0, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1284, 0, 0,
	2415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2430, 0, 641, 0, 0, 3393, 0, 0, 0,
	0, 81, 0, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1612, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 0, 1638, 0, 0, 0, 0, 0, 0,
	0, 1647, 0, 0, 1349, 1649, 0, 0, 1652, 1653,
	641, 641, 0, 641, 0, 641, 641, 0, 641, 641,
	641, 641, 641, 641, 2511, 0, 0, 0, 0, 0,
	0, 1349, 1684, 1685, 1349, 641, 1349, 3475, 1690, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2046, 0, 0, 0, 0, 0, 0, 2536, 0,
	0, 0, 0, 0, 0, 0, 0, 2541, 0, 0,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1752, 0, 760, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 589, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 589,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 892, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1535, 0, 0, 0,
	0, 911, 911, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 0, 0, 1552, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2660,
	0, 0, 0, 0, 0, 0, 0, 1120, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1689, 1655, 0,
	0, 0, 0, 0, 641, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2697, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1120, 0, 1734, 0, 0, 0, 0, 2724, 1655, 0,
	0, 0, 820, 0, 0, 0, 0, 821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	641, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	1349, 0, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1874,
	0, 641, 0, 0, 0, 0, 0, 1349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 934, 641, 641, 0, 0, 0, 0, 0, 2046,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 820, 0, 0, 0, 808, 821,
	822, 823, 824, 809, 0, 0, 810, 811, 0, 812,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 817, 825, 826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 0, 0,
	2931, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 0, 0, 641, 0, 0, 0, 0, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	2838, 2839, 0, 0, 641, 0, 0, 0, 0, 0,
	0, 0, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 0, 0, 2153, 2154, 2155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 0, 641, 1647, 2840, 0, 1647, 0, 1647, 0,
	0, 589, 0, 589, 2185, 0, 589, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2046, 2046, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 641, 0, 0, 0, 641, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 0, 3075, 3076, 3077, 3078, 0, 0, 2841,
	2842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2060, 0, 0,
	0, 0, 0, 0, 0, 2064, 0, 2067, 0, 0,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	774, 0, 0, 778, 0, 775, 776, 641, 0, 0,
	777, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3151, 0, 3153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1349, 0, 641, 0, 0, 0, 0, 1351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1120, 0, 589, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 892, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 589,
	0, 0, 0, 0, 3309, 0, 1818, 0, 3309, 3309,
	0, 0, 0, 2220, 0, 0, 0, 589, 0, 0,
	0, 0, 2237, 2238, 0, 0, 2242, 0, 0, 0,
	0, 0, 0, 0, 0, 2245, 0, 2046, 0, 0,
	0, 0, 2248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 1351, 2251, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1351, 0, 0, 1351, 0, 1351,
	589, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2046, 0, 2480, 0,
	1706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 589, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2046, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 641, 589, 0, 0,
	0, 0, 0, 0, 589, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 1782, 589, 589, 589, 589, 589,
	589, 589, 0, 641, 0, 0, 0, 0, 0, 0,
	641, 3386, 0, 0, 1647, 1647, 0, 0, 0, 641,
	0, 0, 0, 3390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1349, 2552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1120, 1120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3386, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2046,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2467, 641, 0, 0, 2931, 0, 3441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 589, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2515, 0, 0, 0, 0, 0, 0, 0,
	641, 0, 0, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 911, 911, 0, 641, 0,
	1351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 1349, 0, 0, 641,
	641, 1349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2564, 2565,
	2566, 2567, 2568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 2578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 911, 1758, 911, 911, 911, 911,
	911, 2789, 0, 0, 0, 2586, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 0, 0, 1349, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 0, 0, 1706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 911, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 892, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 2868, 0, 0, 0, 0, 1758, 589, 0,
	589, 89, 589, 2083, 820, 0, 0, 0, 808, 821,
	822, 823, 824, 809, 0, 0, 810, 811, 0, 812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 817, 825, 826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2838, 2839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3011, 0, 0, 0, 0,
	2794, 0, 0, 0, 2840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2832, 0, 0, 589,
	0, 0, 0, 0, 0, 0, 589, 0, 641, 641,
	2844, 0, 0, 0, 0, 589, 589, 0, 0, 589,
	0, 2244, 0, 0, 0, 0, 0, 0, 589, 2861,
	0, 0, 2864, 0, 0, 589, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2841,
	2842, 0, 0, 0, 0, 641, 641, 641, 641, 0,
	0, 589, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1351, 0, 1758, 0, 0,
	0, 2960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1349, 0, 0, 0, 0, 641, 0, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3021, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3036, 0, 641, 3037, 3038,
	3039, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 589, 0, 0, 0,
	0, 0, 0, 0, 1706, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	641, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 0, 0, 0, 589, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 589, 0, 0, 0, 0,
	0, 0, 2521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1351, 0,
	0, 0, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 589, 589, 589, 589, 589, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 589, 589, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 589, 0,
	0, 0, 0, 1349, 0, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 911, 0, 0, 0, 0, 0, 0, 641,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	0, 911, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 641, 0,
	641, 0, 0, 0, 0, 0, 0, 589, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1351,
	0, 0, 0, 0, 1351, 589, 589, 589, 589, 589,
	0, 0, 0, 3359, 0, 0, 0, 2740, 0, 0,
	0, 0, 0, 1706, 0, 589, 0, 0, 589, 2748,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 589, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 589,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 589, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 589, 0, 0, 589, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 589, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 589,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 589, 0,
	0, 589, 589, 589, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1706, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1706, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 1254, 1239, 498,
	0, 1182, 1257, 1151, 1170, 1267, 1173, 1176, 1218, 1130,
	1196, 400, 1167, 1123, 1155, 1125, 1162, 1126, 1153, 1184,
	258, 1150, 1241, 1200, 1256, 351, 255, 1132, 1156, 414,
	1172, 196, 1220, 467, 242, 362, 359, 506, 270, 261,
	257, 240, 304, 370, 412, 488, 406, 1263, 355, 1206,
	0, 477, 385, 0, 0, 0, 1186, 1245, 1194, 1232,
	1181, 1219, 1140, 1205, 1258, 1168, 1215, 1259, 310, 238,
	312, 195, 397, 478, 274, 0, 0, 1706, 0, 3413,
	631, 0, 0, 0, 0, 3414, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 589, 336, 345, 344,
	325, 326, 328, 330, 335, 342, 348, 1164, 1212, 1253,
	1165, 1214, 253, 308, 260, 252, 503, 1264, 1244, 1129,
	1193, 1252, 0, 0, 219, 1255, 1188, 0, 1217, 0,
	1270, 1124, 1208, 0, 1127, 1131, 1266, 1248, 1159, 263,
	0, 0, 0, 0, 0, 0, 0, 1185, 1195, 1229,
	1233, 1179, 0, 0, 0, 0, 1351, 0, 0, 1157,
	0, 1204, 0, 0, 0, 1136, 1128, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1183,
	0, 0, 0, 0, 1139, 0, 1158, 1230, 1706, 1122,
	285, 1133, 386, 245, 0, 1237, 1247, 1180, 543, 1251,
	1178, 1177, 1224, 1137, 1243, 1171, 350, 1135, 317, 191,
	215, 0, 1169, 396, 442, 454, 1242, 1154, 1163, 243,
	1161, 452, 410, 522, 223, 272, 439, 416, 450, 423,
	275, 1203, 1222, 451, 357, 508, 433, 519, 544, 545,
	251, 390, 531, 492, 539, 561, 216, 248, 404, 485,
	525, 474, 382, 504, 505, 316, 473, 283, 194, 354,
	550, 214, 460, 356, 232, 221, 510, 528, 277, 437,
	557, 203, 487, 517, 229, 464, 0, 0, 563, 237,
	484, 205, 515, 483, 378, 313, 314, 204, 0, 438,
	256, 281, 246, 399, 512, 513, 244, 564, 218, 538,
	210, 1134, 537, 392, 507, 516, 379, 368, 209, 514,
	377, 367, 321, 340, 341, 268, 294, 430, 360, 431,
	293, 295, 388, 387, 389, 198, 526, 0, 199, 0,
	479, 527, 565, 224, 225, 227, 1149, 267, 271, 279,
	282, 290, 291, 300, 352, 403, 429, 425, 434, 1238,
	502, 520, 532, 542, 548, 549, 551, 552, 553, 554,
	555, 558, 556, 391, 298, 475, 320, 358, 1227, 1269,
	409, 453, 230, 524, 476, 1144, 1148, 1142, 1209, 1143,
	1198, 1199, 1145, 1260, 1261, 1262, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 0, 1231, 1138, 0, 1146, 1147,
	1240, 1249, 1250, 584, 369, 466, 521, 322, 334, 337,
	327, 346, 0, 347, 323, 324, 329, 331, 332, 333,
	338, 339, 343, 349, 239, 201, 375, 383, 501, 299,
	206, 207, 208, 494, 495, 496, 497, 535, 536, 540,
	443, 444, 445, 446, 280, 530, 296, 449, 448, 318,
	319, 364, 432, 1202, 190, 211, 353, 1265, 435, 276,
	562, 534, 529, 197, 213, 1141, 250, 1152, 1160, 0,
	1166, 1174, 1175, 1187, 1189, 1190, 1191, 1192, 1210, 1211,
	1213, 1221, 1223, 1226, 1228, 1235, 1246, 1268, 192, 193,
	200, 212, 222, 226, 233, 249, 264, 266, 273, 286,
	297, 305, 306, 309, 315, 365, 371, 372, 373, 374,
	393, 394, 395, 398, 401, 402, 405, 407, 408, 411,
	415, 419, 420, 421, 422, 424, 426, 436, 441, 455,
	456, 457, 458, 459, 462, 463, 468, 469, 470, 471,
	472, 480, 481, 486, 509, 511, 523, 541, 546, 461,
	288, 289, 427, 428, 301, 302, 559, 560, 287, 518,
	547, 0, 0, 363, 1201, 1207, 366, 269, 292, 307,
	1216, 533, 482, 217, 447, 278, 241, 1234, 1236, 202,
	236, 220, 247, 262, 265, 311, 376, 384, 413, 418,
	284, 259, 234, 440, 231, 465, 489, 490, 491, 493,
	380, 254, 417, 1197, 1225, 361, 499, 500, 303, 381,
	0, 0, 0, 1254, 1239, 498, 0, 1182, 1257, 1151,
	1170, 1267, 1173, 1176, 1218, 1130, 1196, 400, 1167, 1123,
	1155, 1125, 1162, 1126, 1153, 1184, 258, 1150, 1241, 1200,
	1256, 351, 255, 1132, 1156, 414, 1172, 196, 1220, 467,
	242, 362, 359, 506, 270, 261, 257, 240, 304, 370,
	412, 488, 406, 1263, 355, 1206, 0, 477, 385, 0,
	0, 0, 1186, 1245, 1194, 1232, 1181, 1219, 1140, 1205,
	1258, 1168, 1215, 1259, 310, 238, 312, 195, 397, 478,
	274, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 336, 345, 344, 325, 326, 328, 330,
	335, 342, 348, 1164, 1212, 1253, 1165, 1214, 253, 308,
	260, 252, 503, 1264, 1244, 1129, 1193, 1252, 0, 0,
	219, 1255, 1188, 0, 1217, 0, 1270, 1124, 1208, 0,
	1127, 1131, 1266, 1248, 1159, 263, 0, 0, 0, 0,
	0, 0, 0, 1185, 1195, 1229, 1233, 1179, 0, 0,
	0, 0, 0, 2749, 0, 1157, 0, 1204, 0, 0,
	0, 1136, 1128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1183, 0, 0, 0, 0,
	1139, 0, 1158, 1230, 0, 1122, 285, 1133, 386, 245,
	0, 1237, 1247, 1180, 543, 1251, 1178, 1177, 1224, 1137,
	1243, 1171, 350, 1135, 317, 191, 215, 0, 1169, 396,
	442, 454, 1242, 1154, 1163, 243, 1161, 452, 410, 522,
	223, 272, 439, 416, 450, 423, 275, 1203, 1222, 451,
	357, 508, 433, 519, 544, 545, 251, 390, 531, 492,
	539, 561, 216, 248, 404, 485, 525, 474, 382, 504,
	505, 316, 473, 283, 194, 354, 550, 214, 460, 356,
	232, 221, 510, 528, 277, 437, 557, 203, 487, 517,
	229, 464, 0, 0, 563, 237, 484, 205, 515, 483,
	378, 313, 314, 204, 0, 438, 256, 281, 246, 399,
	512, 513, 244, 564, 218, 538, 210, 1134, 537, 392,
	507, 516, 379, 368, 209, 514, 377, 367, 321, 340,
	341, 268, 294, 430, 360, 431, 293, 295, 388, 387,
	389, 198, 526, 0, 199, 0, 479, 527, 565, 224,
	225, 227, 1149, 267, 271, 279, 282, 290, 291, 300,
	352, 403, 429, 425, 434, 1238, 502, 520, 532, 542,
	548, 549, 551, 552, 553, 554, 555, 558, 556, 391,
	298, 475, 320, 358, 1227, 1269, 409, 453, 230, 524,
	476, 1144, 1148, 1142, 1209, 1143, 1198, 1199, 1145, 1260,
	1261, 1262, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	0, 1231, 1138, 0, 1146, 1147, 1240, 1249, 1250, 584,
	369, 466, 521, 322, 334, 337, 327, 346, 0, 347,
	323, 324, 329, 331, 332, 333, 338, 339, 343, 349,
	239, 201, 375, 383, 501, 299, 206, 207, 208, 494,
	495, 496, 497, 535, 536, 540, 443, 444, 445, 446,
	280, 530, 296, 449, 448, 318, 319, 364, 432, 1202,
	190, 211, 353, 1265, 435, 276, 562, 534, 529, 197,
	213, 1141, 250, 1152, 1160, 0, 1166, 1174, 1175, 1187,
	1189, 1190, 1191, 1192, 1210, 1211, 1213, 1221, 1223, 1226,
	1228, 1235, 1246, 1268, 192, 193, 200, 212, 222, 226,
	233, 249, 264, 266, 273, 286, 297, 305, 306, 309,
	315, 365, 371, 372, 373, 374, 393, 394, 395, 398,
	401, 402, 405, 407, 408, 411, 415, 419, 420, 421,
	422, 424, 426, 436, 441, 455, 456, 457, 458, 459,
	462, 463, 468, 469, 470, 471, 472, 480, 481, 486,
	509, 511, 523, 541, 546, 461, 288, 289, 427, 428,
	301, 302, 559, 560, 287, 518, 547, 0, 0, 363,
	1201, 1207, 366, 269, 292, 307, 1216, 533, 482, 217,
	447, 278, 241, 1234, 1236, 202, 236, 220, 247, 262,
	265, 311, 376, 384, 413, 418, 284, 259, 234, 440,
	231, 465, 489, 490, 491, 493, 380, 254, 417, 1197,
	1225, 361, 499, 500, 303, 381, 0, 0, 0, 1254,
	1239, 498, 0, 1182, 1257, 1151, 1170, 1267, 1173, 1176,
	1218, 1130, 1196, 400, 1167, 1123, 1155, 1125, 1162, 1126,
	1153, 1184, 258, 1150, 1241, 1200, 1256, 351, 255, 1132,
	1156, 414, 1172, 196, 1220, 467, 242, 362, 359, 506,
	270, 261, 257, 240, 304, 370, 412, 488, 406, 1263,
	355, 1206, 0, 477, 385, 0, 0, 0, 1186, 1245,
	1194, 1232, 1181, 1219, 1140, 1205, 1258, 1168, 1215, 1259,
	310, 238, 312, 195, 397, 478, 274, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 336,
	345, 344, 325, 326, 328, 330, 335, 342, 348, 1164,
	1212, 1253, 1165, 1214, 253, 308, 260, 252, 503, 1264,
	1244, 1129, 1193, 1252, 0, 0, 219, 1255, 1188, 0,
	1217, 0, 1270, 1124, 1208, 0, 1127, 1131, 1266, 1248,
	1159, 263, 0, 0, 0, 0, 0, 0, 0, 1185,
	1195, 1229, 1233, 1179, 0, 0, 0, 0, 0, 2710,
	0, 1157, 0, 1204, 0, 0, 0, 1136, 1128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1183, 0, 0, 0, 0, 1139, 0, 1158, 1230,
	0, 1122, 285, 1133, 386, 245, 0, 1237, 1247, 1180,
	543, 1251, 1178, 1177, 1224, 1137, 1243, 1171, 350, 1135,
	317, 191, 215, 0, 1169, 396, 442, 454, 1242, 1154,
	1163, 243, 1161, 452, 410, 522, 223, 272, 439, 416,
	450, 423, 275, 1203, 1222, 451, 357, 508, 433, 519,
	544, 545, 251, 390, 531, 492, 539, 561, 216, 248,
	404, 485, 525, 474, 382, 504, 505, 316, 473, 283,
	194, 354, 550, 214, 460, 356, 232, 221, 510, 528,
	277, 437, 557, 203, 487, 517, 229, 464, 0, 0,
	563, 237, 484, 205, 515, 483, 378, 313, 314, 204,
	0, 438, 256, 281, 246, 399, 512, 513, 244, 564,
	218, 538, 210, 1134, 537, 392, 507, 516, 379, 368,
	209, 514, 377, 367, 321, 340, 341, 268, 294, 430,
	360, 431, 293, 295, 388, 387, 389, 198, 526, 0,
	199, 0, 479, 527, 565, 224, 225, 227, 1149, 267,
	271, 279, 282, 290, 291, 300, 352, 403, 429, 425,
	434, 1238, 502, 520, 532, 542, 548, 549, 551, 552,
	553, 554, 555, 558, 556, 391, 298, 475, 320, 358,
	1227, 1269, 409, 453, 230, 524, 476, 1144, 1148, 1142,
	1209, 1143, 1198, 1199, 1145, 1260, 1261, 1262, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 0, 1231, 1138, 0,
	1146, 1147, 1240, 1249, 1250, 584, 369, 466, 521, 322,
	334, 337, 327, 346, 0, 347, 323, 324, 329, 331,
	332, 333, 338, 339, 343, 349, 239, 201, 375, 383,
	501, 299, 206, 207, 208, 494, 495, 496, 497, 535,
	536, 540, 443, 444, 445, 446, 280, 530, 296, 449,
	448, 318, 319, 364, 432, 1202, 190, 211, 353, 1265,
	435, 276, 562, 534, 529, 197, 213, 1141, 250, 1152,
	1160, 0, 1166, 1174, 1175, 1187, 1189, 1190, 1191, 1192,
	1210, 1211, 1213, 1221, 1223, 1226, 1228, 1235, 1246, 1268,
	192, 193, 200, 212, 222, 226, 233, 249, 264, 266,
	273, 286, 297, 305, 306, 309, 315, 365, 371, 372,
	373, 374, 393, 394, 395, 398, 401, 402, 405, 407,
	408, 411, 415, 419, 420, 421, 422, 424, 426, 436,
	441, 455, 456, 457, 458, 459, 462, 463, 468, 469,
	470, 471, 472, 480, 481, 486, 509, 511, 523, 541,
	546, 461, 288, 289, 427, 428, 301, 302, 559, 560,
	287, 518, 547, 0, 0, 363, 1201, 1207, 366, 269,
	292, 307, 1216, 533, 482, 217, 447, 278, 241, 1234,
	1236, 202, 236, 220, 247, 262, 265, 311, 376, 384,
	413, 418, 284, 259, 234, 440, 231, 465, 489, 490,
	491, 493, 380, 254, 417, 1197, 1225, 361, 499, 500,
	303, 381, 0, 0, 0, 1254, 1239, 498, 0, 1182,
	1257, 1151, 1170, 1267, 1173, 1176, 1218, 1130, 1196, 400,
	1167, 1123, 1155, 1125, 1162, 1126, 1153, 1184, 258, 1150,
	1241, 1200, 1256, 351, 255, 1132, 1156, 414, 1172, 196,
	1220, 467, 242, 362, 359, 506, 270, 261, 257, 240,
	304, 370, 412, 488, 406, 1263, 355, 1206, 0, 477,
	385, 0, 0, 0, 1186, 1245, 1194, 1232, 1181, 1219,
	1140, 1205, 1258, 1168, 1215, 1259, 310, 238, 312, 195,
	397, 478, 274, 0, 0, 0, 0, 0, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 336, 345, 344, 325, 326,
	328, 330, 335, 342, 348, 1164, 1212, 1253, 1165, 1214,
	253, 308, 260, 252, 503, 1264, 1244, 1129, 1193, 1252,
	0, 0, 219, 1255, 1188, 0, 1217, 0, 1270, 1124,
	1208, 0, 1127, 1131, 1266, 1248, 1159, 263, 0, 0,
	0, 0, 0, 0, 0, 1185, 1195, 1229, 1233, 1179,
	0, 0, 0, 0, 0, 2062, 0, 1157, 0, 1204,
	0, 0, 0, 1136, 1128, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1183, 0, 0,
	0, 0, 1139, 0, 1158, 1230, 0, 1122, 285, 1133,
	386, 245, 0, 1237, 1247, 1180, 543, 1251, 1178, 1177,
	1224, 1137, 1243, 1171, 350, 1135, 317, 191, 215, 0,
	1169, 396, 442, 454, 1242, 1154, 1163, 243, 1161, 452,
	410, 522, 223, 272, 439, 416, 450, 423, 275, 1203,
	1222, 451, 357, 508, 433, 519, 544, 545, 251, 390,
	531, 492, 539, 561, 216, 248, 404, 485, 525, 474,
	382, 504, 505, 316, 473, 283, 194, 354, 550, 214,
	460, 356, 232, 221, 510, 528, 277, 437, 557, 203,
	487, 517, 229, 464, 0, 0, 563, 237, 484, 205,
	515, 483, 378, 313, 314, 204, 0, 438, 256, 281,
	246, 399, 512, 513, 244, 564, 218, 538, 210, 1134,
	537, 392, 507, 516, 379, 368, 209, 514, 377, 367,
	321, 340, 341, 268, 294, 430, 360, 431, 293, 295,
	388, 387, 389, 198, 526, 0, 199, 0, 479, 527,
	565, 224, 225, 227, 1149, 267, 271, 279, 282, 290,
	291, 300, 352, 403, 429, 425, 434, 1238, 502, 520,
	532, 542, 548, 549, 551, 552, 553, 554, 555, 558,
	556, 391, 298, 475, 320, 358, 1227, 1269, 409, 453,
	230, 524, 476, 1144, 1148, 1142, 1209, 1143, 1198, 1199,
	1145, 1260, 1261, 1262, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 0, 1231, 1138, 0, 1146, 1147, 1240, 1249,
	1250, 584, 369, 466, 521, 322, 334, 337, 327, 346,
	0, 347, 323, 324, 329, 331, 332, 333, 338, 339,
	343, 349, 239, 201, 375, 383, 501, 299, 206, 207,
	208, 494, 495, 496, 497, 535, 536, 540, 443, 444,
	445, 446, 280, 530, 296, 449, 448, 318, 319, 364,
	432, 1202, 190, 211, 353, 1265, 435, 276, 562, 534,
	529, 197, 213, 1141, 250, 1152, 1160, 0, 1166, 1174,
	1175, 1187, 1189, 1190, 1191, 1192, 1210, 1211, 1213, 1221,
	1223, 1226, 1228, 1235, 1246, 1268, 192, 193, 200, 212,
	222, 226, 233, 249, 264, 266, 273, 286, 297, 305,
	306, 309, 315, 365, 371, 372, 373, 374, 393, 394,
	395, 398, 401, 402, 405, 407, 408, 411, 415, 419,
	420, 421, 422, 424, 426, 436, 441, 455, 456, 457,
	458, 459, 462, 463, 468, 469, 470, 471, 472, 480,
	481, 486, 509, 511, 523, 541, 546, 461, 288, 289,
	427, 428, 301, 302, 559, 560, 287, 518, 547, 0,
	0, 363, 1201, 1207, 366, 269, 292, 307, 1216, 533,
	482, 217, 447, 278, 241, 1234, 1236, 202, 236, 220,
	247, 262, 265, 311, 376, 384, 413, 418, 284, 259,
	234, 440, 231, 465, 489, 490, 491, 493, 380, 254,
	417, 1197, 1225, 361, 499, 500, 303, 381, 0, 0,
	0, 1254, 1239, 498, 0, 1182, 1257, 1151, 1170, 1267,
	1173, 1176, 1218, 1130, 1196, 400, 1167, 1123, 1155, 1125,
	1162, 1126, 1153, 1184, 258, 1150, 1241, 1200, 1256, 351,
	255, 1132, 1156, 414, 1172, 196, 1220, 467, 242, 362,
	359, 506, 270, 261, 257, 240, 304, 370, 412, 488,
	406, 1263, 355, 1206, 0, 477, 385, 0, 0, 0,
	1186, 1245, 1194, 1232, 1181, 1219, 1140, 1205, 1258, 1168,
	1215, 1259, 310, 238, 312, 195, 397, 478, 274, 0,
	89, 0, 0, 0, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 336, 345, 344, 325, 326, 328, 330, 335, 342,
	348, 1164, 1212, 1253, 1165, 1214, 253, 308, 260, 252,
	503, 1264, 1244, 1129, 1193, 1252, 0, 0, 219, 1255,
	1188, 0, 1217, 0, 1270, 1124, 1208, 0, 1127, 1131,
	1266, 1248, 1159, 263, 0, 0, 0, 0, 0, 0,
	0, 1185, 1195, 1229, 1233, 1179, 0, 0, 0, 0,
	0, 0, 0, 1157, 0, 1204, 0, 0, 0, 1136,
	1128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1183, 0, 0, 0, 0, 1139, 0,
	1158, 1230, 0, 1122, 285, 1133, 386, 245, 0, 1237,
	1247, 1180, 543, 1251, 1178, 1177, 1224, 1137, 1243, 1171,
	350, 1135, 317, 191, 215, 0, 1169, 396, 442, 454,
	1242, 1154, 1163, 243, 1161, 452, 410, 522, 223, 272,
	439, 416, 450, 423, 275, 1203, 1222, 451, 357, 508,
	433, 519, 544, 545, 251, 390, 531, 492, 539, 561,
	216, 248, 404, 485, 525, 474, 382, 504, 505, 316,
	473, 283, 194, 354, 550, 214, 460, 356, 232, 221,
	510, 528, 277, 437, 557, 203, 487, 517, 229, 464,
	0, 0, 563, 237, 484, 205, 515, 483, 378, 313,
	314, 204, 0, 438, 256, 281, 246, 399, 512, 513,
	244, 564, 218, 538, 210, 1134, 537, 392, 507, 516,
	379, 368, 209, 514, 377, 367, 321, 340, 341, 268,
	294, 430, 360, 431, 293, 295, 388, 387, 389, 198,
	526, 0, 199, 0, 479, 527, 565, 224, 225, 227,
	1149, 267, 271, 279, 282, 290, 291, 300, 352, 403,
	429, 425, 434, 1238, 502, 520, 532, 542, 548, 549,
	551, 552, 553, 554, 555, 558, 556, 391, 298, 475,
	320, 358, 1227, 1269, 409, 453, 230, 524, 476, 1144,
	1148, 1142, 1209, 1143, 1198, 1199, 1145, 1260, 1261, 1262,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 0, 1231,
	1138, 0, 1146, 1147, 1240, 1249, 1250, 584, 369, 466,
	521, 322, 334, 337, 327, 346, 0, 347, 323, 324,
	329, 331, 332, 333, 338, 339, 343, 349, 239, 201,
	375, 383, 501, 299, 206, 207, 208, 494, 495, 496,
	497, 535, 536, 540, 443, 444, 445, 446, 280, 530,
	296, 449, 448, 318, 319, 364, 432, 1202, 190, 211,
	353, 1265, 435, 276, 562, 534, 529, 197, 213, 1141,
	250, 1152, 1160, 0, 1166, 1174, 1175, 1187, 1189, 1190,
	1191, 1192, 1210, 1211, 1213, 1221, 1223, 1226, 1228, 1235,
	1246, 1268, 192, 193, 200, 212, 222, 226, 233, 249,
	264, 266, 273, 286, 297, 305, 306, 309, 315, 365,
	371, 372, 373, 374, 393, 394, 395, 398, 401, 402,
	405, 407, 408, 411, 415, 419, 420, 421, 422, 424,
	426, 436, 441, 455, 456, 457, 458, 459, 462, 463,
	468, 469, 470, 471, 472, 480, 481, 486, 509, 511,
	523, 541, 546, 461, 288, 289, 427, 428, 301, 302,
	559, 560, 287, 518, 547, 0, 0, 363, 1201, 1207,
	366, 269, 292, 307, 1216, 533, 482, 217, 447, 278,
	241, 1234, 1236, 202, 236, 220, 247, 262, 265, 311,
	376, 384, 413, 418, 284, 259, 234, 440, 231, 465,
	489, 490, 491, 493, 380, 254, 417, 1197, 1225, 361,
	499, 500, 303, 381, 0, 0, 0, 1254, 1239, 498,
	0, 1182, 1257, 1151, 1170, 1267, 1173, 1176, 1218, 1130,
	1196, 400, 1167, 1123, 1155, 1125, 1162, 1126, 1153, 1184,
	258, 1150, 1241, 1200, 1256, 351, 255, 1132, 1156, 414,
	1172, 196, 1220, 467, 242, 362, 359, 506, 270, 261,
	257, 240, 304, 370, 412, 488, 406, 1263, 355, 1206,
	0, 477, 385, 0, 0, 0, 1186, 1245, 1194, 1232,
	1181, 1219, 1140, 1205, 1258, 1168, 1215, 1259, 310, 238,
	312, 195, 397, 478, 274, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 336, 345, 344,
	325, 326, 328, 330, 335, 342, 348, 1164, 1212, 1253,
	1165, 1214, 253, 308, 260, 252, 503, 1264, 1244, 1129,
	1193, 1252, 0, 0, 219, 1255, 1188, 0, 1217, 0,
	1270, 1124, 1208, 0, 1127, 1131, 1266, 1248, 1159, 263,
	0, 0, 0, 0, 0, 0, 0, 1185, 1195, 1229,
	1233, 1179, 0, 0, 0, 0, 0, 0, 0, 1157,
	0, 1204, 0, 0, 0, 1136, 1128, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1183,
	0, 0, 0, 0, 1139, 0, 1158, 1230, 0, 1122,
	285, 1133, 386, 245, 0, 1237, 1247, 1180, 543, 1251,
	1178, 1177, 1224, 1137, 1243, 1171, 350, 1135, 317, 191,
	215, 0, 1169, 396, 442, 454, 1242, 1154, 1163, 243,
	1161, 452, 410, 522, 223, 272, 439, 416, 450, 423,
	275, 1203, 1222, 451, 357, 508, 433, 519, 544, 545,
	251, 390, 531, 492, 539, 561, 216, 248, 404, 485,
	525, 474, 382, 504, 505, 316, 473, 283, 194, 354,
	550, 214, 460, 356, 232, 221, 510, 528, 277, 437,
	557, 203, 487, 517, 229, 464, 0, 0, 563, 237,
	484, 205, 515, 483, 378, 313, 314, 204, 0, 438,
	256, 281, 246, 399, 512, 513, 244, 564, 218, 538,
	210, 1134, 537, 392, 507, 516, 379, 368, 209, 514,
	377, 367, 321, 340, 341, 268, 294, 430, 360, 431,
	293, 295, 388, 387, 389, 198, 526, 0, 199, 0,
	479, 527, 565, 224, 225, 227, 1149, 267, 271, 279,
	282, 290, 291, 300, 352, 403, 429, 425, 434, 1238,
	502, 520, 532, 542, 548, 549, 551, 552, 553, 554,
	555, 558, 556, 391, 298, 475, 320, 358, 1227, 1269,
	409, 453, 230, 524, 476, 1144, 1148, 1142, 1209, 1143,
	1198, 1199, 1145, 1260, 1261, 1262, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 0, 1231, 1138, 0, 1146, 1147,
	1240, 1249, 1250, 584, 369, 466, 521, 322, 334, 337,
	327, 346, 0, 347, 323, 324, 329, 331, 332, 333,
	338, 339, 343, 349, 239, 201, 375, 383, 501, 299,
	206, 207, 208, 494, 495, 496, 497, 535, 536, 540,
	443, 444, 445, 446, 280, 530, 296, 449, 448, 318,
	319, 364, 432, 1202, 190, 211, 353, 1265, 435, 276,
	562, 534, 529, 197, 213, 1141, 250, 1152, 1160, 0,
	1166, 1174, 1175, 1187, 1189, 1190, 1191, 1192, 1210, 1211,
	1213, 1221, 1223, 1226, 1228, 1235, 1246, 1268, 192, 193,
	200, 212, 222, 226, 233, 249, 264, 266, 273, 286,
	297, 305, 306, 309, 315, 365, 371, 372, 373, 374,
	393, 394, 395, 398, 401, 402, 405, 407, 408, 411,
	415, 419, 420, 421, 422, 424, 426, 436, 441, 455,
	456, 457, 458, 459, 462, 463, 468, 469, 470, 471,
	472, 480, 481, 486, 509, 511, 523, 541, 546, 461,
	288, 289, 427, 428, 301, 302, 559, 560, 287, 518,
	547, 0, 0, 363, 1201, 1207, 366, 269, 292, 307,
	1216, 533, 482, 217, 447, 278, 241, 1234, 1236, 202,
	236, 220, 247, 262, 265, 311, 376, 384, 413, 418,
	284, 259, 234, 440, 231, 465, 489, 490, 491, 493,
	380, 254, 417, 1197, 1225, 361, 499, 500, 303, 381,
	0, 0, 0, 1254, 1239, 498, 0, 1182, 1257, 1151,
	1170, 1267, 1173, 1176, 1218, 1130, 1196, 400, 1167, 1123,
	1155, 1125, 1162, 1126, 1153, 1184, 258, 1150, 1241, 1200,
	1256, 351, 255, 1132, 1156, 414, 1172, 196, 1220, 467,
	242, 362, 359, 506, 270, 261, 257, 240, 304, 370,
	412, 488, 406, 1263, 355, 1206, 0, 477, 385, 0,
	0, 0, 1186, 1245, 1194, 1232, 1181, 1219, 1140, 1205,
	1258, 1168, 1215, 1259, 310, 238, 312, 195, 397, 478,
	274, 0, 0, 0, 0, 0, 804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 336, 345, 344, 325, 326, 328, 330,
	335, 342, 348, 1164, 1212, 1253, 1165, 1214, 253, 308,
	260, 252, 503, 1264, 1244, 1129, 1193, 1252, 0, 0,
	219, 1255, 1188, 0, 1217, 0, 1270, 1124, 1208, 0,
	1127, 1131, 1266, 1248, 1159, 263, 0, 0, 0, 0,
	0, 0, 0, 1185, 1195, 1229, 1233, 1179, 0, 0,
	0, 0, 0, 0, 0, 1157, 0, 1204, 0, 0,
	0, 1136, 1128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1183, 0, 0, 0, 0,
	1139, 0, 1158, 1230, 0, 1122, 285, 1133, 386, 245,
	0, 1237, 1247, 1180, 543, 1251, 1178, 1177, 1224, 1137,
	1243, 1171, 350, 1135, 317, 191, 215, 0, 1169, 396,
	442, 454, 1242, 1154, 1163, 243, 1161, 452, 410, 522,
	223, 272, 439, 416, 450, 423, 275, 1203, 1222, 451,
	357, 508, 433, 519, 544, 545, 251, 390, 531, 492,
	539, 561, 216, 248, 404, 485, 525, 474, 382, 504,
	505, 316, 473, 283, 194, 354, 550, 214, 460, 356,
	232, 221, 510, 528, 277, 437, 557, 203, 487, 517,
	229, 464, 0, 0, 563, 237, 484, 205, 515, 483,
	378, 313, 314, 204, 0, 438, 256, 281, 246, 399,
	512, 513, 244, 564, 218, 538, 210, 1134, 537, 392,
	507, 516, 379, 368, 209, 514, 377, 367, 321, 340,
	341, 268, 294, 430, 360, 431, 293, 295, 388, 387,
	389, 198, 526, 0, 199, 0, 479, 527, 565, 224,
	225, 227, 1149, 267, 271, 279, 282, 290, 291, 300,
	352, 403, 429, 425, 434, 1238, 502, 520, 532, 542,
	548, 549, 551, 552, 553, 554, 555, 558, 556, 391,
	298, 475, 320, 358, 1227, 1269, 409, 453, 230, 524,
	476, 1144, 1148, 1142, 1209, 1143, 1198, 1199, 1145, 1260,
	1261, 1262, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	0, 1231, 1138, 0, 1146, 1147, 1240, 1249, 1250, 584,
	369, 466, 521, 322, 334, 337, 327, 346, 0, 347,
	323, 324, 329, 331, 332, 333, 338, 339, 343, 349,
	239, 201, 375, 383, 501, 299, 206, 207, 208, 494,
	495, 496, 497, 535, 536, 540, 443, 444, 445, 446,
	280, 530, 296, 449, 448, 318, 319, 364, 432, 1202,
	190, 211, 353, 1265, 435, 276, 562, 534, 529, 197,
	213, 1141, 250, 1152, 1160, 0, 1166, 1174, 1175, 1187,
	1189, 1190, 1191, 1192, 1210, 1211, 1213, 1221, 1223, 1226,
	1228, 1235, 1246, 1268, 192, 193, 200, 212, 222, 226,
	233, 249, 264, 266, 273, 286, 297, 305, 306, 309,
	315, 365, 371, 372, 373, 374, 393, 394, 395, 398,
	401, 402, 405, 407, 408, 411, 415, 419, 420, 421,
	422, 424, 426, 436, 441, 455, 456, 457, 458, 459,
	462, 463, 468, 469, 470, 471, 472, 480, 481, 486,
	509, 511, 523, 541, 546, 461, 288, 289, 427, 428,
	301, 302, 559, 560, 287, 518, 547, 0, 0, 363,
	1201, 1207, 366, 269, 292, 307, 1216, 533, 482, 217,
	447, 278, 241, 1234, 1236, 202, 236, 220, 247, 262,
	265, 311, 376, 384, 413, 418, 284, 259, 234, 440,
	231, 465, 489, 490, 491, 493, 380, 254, 417, 1197,
	1225, 361, 499, 500, 303, 381, 0, 0, 0, 1254,
	1239, 498, 0, 1182, 1257, 1151, 1170, 1267, 1173, 1176,
	1218, 1130, 1196, 400, 1167, 1123, 1155, 1125, 1162, 1126,
	1153, 1184, 258, 1150, 1241, 1200, 1256, 351, 255, 1132,
	1156, 414, 1172, 196, 1220, 467, 242, 362, 359, 506,
	270, 261, 257, 240, 304, 370, 412, 488, 406, 1263,
	355, 1206, 0, 477, 385, 0, 0, 0, 1186, 1245,
	1194, 1232, 1181, 1219, 1140, 1205, 1258, 1168, 1215, 1259,
	310, 238, 312, 195, 397, 478, 274, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 336,
	345, 344, 325, 326, 328, 330, 335, 342, 348, 1164,
	1212, 1253, 1165, 1214, 253, 308, 260, 252, 503, 1264,
	1244, 1129, 1193, 1252, 0, 0, 219, 1255, 1188, 0,
	1217, 0, 1270, 1124, 1208, 0, 1127, 1131, 1266, 1248,
	1159, 263, 0, 0, 0, 0, 0, 0, 0, 1185,
	1195, 1229, 1233, 1179, 0, 0, 0, 0, 0, 0,
	0, 1157, 0, 1204, 0, 0, 0, 1136, 1128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1183, 0, 0, 0, 0, 1139, 0, 1158, 1230,
	0, 1122, 285, 1133, 386, 245, 0, 1237, 1247, 1180,
	543, 1251, 1178, 1177, 1224, 1137, 1243, 1171, 350, 1135,
	317, 191, 215, 0, 1169, 396, 442, 454, 1242, 1154,
	1163, 243, 1161, 452, 410, 522, 223, 272, 439, 416,
	450, 423, 275, 1203, 1222, 451, 357, 508, 433, 519,
	544, 545, 251, 390, 531, 492, 539, 561, 216, 248,
	404, 485, 525, 474, 382, 504, 505, 316, 473, 283,
	194, 354, 550, 214, 460, 356, 232, 221, 510, 528,
	277, 437, 557, 203, 487, 517, 229, 464, 0, 0,
	563, 237, 484, 205, 515, 483, 378, 313, 314, 204,
	0, 438, 256, 281, 246, 399, 512, 513, 244, 564,
	218, 538, 210, 1134, 537, 392, 507, 516, 379, 368,
	209, 514, 377, 367, 321, 340, 341, 268, 294, 430,
	360, 431, 293, 295, 388, 387, 389, 198, 526, 0,
	199, 0, 479, 527, 565, 224, 225, 227, 1149, 267,
	271, 279, 282, 290, 291, 300, 352, 403, 429, 425,
	434, 1238, 502, 520, 532, 542, 548, 549, 551, 552,
	553, 554, 555, 558, 556, 391, 298, 475, 320, 358,
	1227, 1269, 409, 453, 230, 524, 476, 1144, 1148, 1142,
	1209, 1143, 1198, 1199, 1145, 1260, 1261, 1262, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 0, 1231, 1138, 0,
	1146, 1147, 1240, 1249, 1250, 584, 369, 466, 521, 322,
	334, 337, 327, 346, 0, 347, 323, 324, 329, 331,
	332, 333, 338, 339, 343, 349, 239, 201, 375, 383,
	501, 299, 206, 207, 208, 494, 495, 496, 497, 535,
	536, 540, 443, 444, 445, 446, 280, 530, 296, 449,
	448, 318, 319, 364, 432, 1202, 190, 211, 353, 1265,
	435, 276, 562, 534, 529, 197, 213, 1141, 250, 1152,
	1160, 0, 1166, 1174, 1175, 1187, 1189, 1190, 1191, 1192,
	1210, 1211, 1213, 1221, 1223, 1226, 1228, 1235, 1246, 1268,
	192, 193, 200, 212, 222, 226, 233, 249, 264, 266,
	273, 286, 297, 305, 306, 309, 315, 365, 371, 372,
	373, 374, 393, 394, 395, 398, 401, 402, 405, 407,
	408, 411, 415, 419, 420, 421, 422, 424, 426, 436,
	441, 455, 456, 457, 458, 459, 462, 463, 468, 469,
	470, 471, 472, 480, 481, 486, 509, 511, 523, 541,
	546, 461, 288, 289, 427, 428, 301, 302, 559, 560,
	287, 518, 547, 0, 0, 363, 1201, 1207, 366, 269,
	292, 307, 1216, 533, 482, 217, 447, 278, 241, 1234,
	1236, 202, 236, 220, 247, 262, 265, 311, 376, 384,
	413, 418, 284, 259, 234, 440, 231, 465, 489, 490,
	491, 493, 380, 254, 417, 1197, 1225, 361, 499, 500,
	303, 381, 0, 0, 0, 0, 0, 498, 0, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 400,
	0, 0, 0, 0, 670, 0, 0, 0, 258, 675,
	0, 0, 0, 351, 255, 0, 0, 414, 0, 196,
	0, 467, 242, 362, 359, 506, 270, 261, 257, 240,
	304, 370, 412, 488, 406, 682, 355, 0, 0, 477,
	385, 0, 0, 0, 0, 0, 678, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 238, 312, 195,
	397, 478, 274, 0, 89, 0, 0, 820, 804, 770,
	771, 808, 821, 822, 823, 824, 809, 0, 228, 810,
	811, 235, 812, 0, 769, 710, 712, 711, 729, 730,
	731, 732, 733, 734, 735, 708, 817, 825, 826, 0,
	253, 308, 260, 252, 503, 0, 0, 1941, 1942, 1943,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	652, 667, 0, 681, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 664, 665, 0, 0, 0, 0, 764,
	0, 666, 0, 0, 674, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 677, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	386, 245, 0, 763, 0, 0, 543, 0, 0, 761,
	0, 0, 0, 0, 350, 0, 317, 191, 215, 0,
	0, 396, 442, 454, 0, 0, 0, 814, 0, 452,
	410, 522, 223, 272, 439, 416, 450, 423, 275, 0,
	0, 451, 357, 508, 433, 519, 544, 545, 251, 390,
	531, 492, 539, 561, 216, 248, 404, 485, 525, 474,
	382, 504, 505, 316, 473, 283, 194, 354, 550, 214,
	460, 356, 232, 221, 510, 528, 277, 437, 557, 203,
	487, 517, 229, 464, 0, 0, 563, 237, 484, 205,
	515, 483, 378, 313, 314, 204, 0, 438, 256, 281,
	246, 399, 815, 816, 244, 564, 716, 538, 210, 0,
	537, 392, 507, 516, 379, 368, 209, 514, 377, 367,
	321, 724, 725, 268, 294, 430, 360, 431, 293, 295,
	388, 387, 389, 198, 526, 0, 199, 0, 479, 527,
	565, 224, 225, 227, 0, 267, 271, 279, 282, 290,
	291, 300, 352, 403, 429, 425, 434, 0, 502, 520,
	532, 542, 548, 549, 551, 552, 553, 554, 555, 558,
	556, 391, 298, 475, 320, 358, 0, 0, 409, 453,
	230, 524, 476, 774, 762, 687, 778, 689, 775, 776,
	684, 685, 688, 777, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 0, 765, 673, 672, 0, 680, 0, 706,
	707, 709, 713, 714, 715, 726, 727, 728, 736, 738,
	739, 737, 740, 741, 742, 745, 746, 747, 748, 743,
	744, 749, 690, 694, 691, 692, 693, 705, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 788, 789,
	790, 791, 792, 793, 719, 723, 722, 720, 721, 717,
	718, 671, 190, 211, 353, 0, 435, 276, 562, 534,
	529, 197, 213, 779, 250, 780, 0, 0, 784, 0,
	0, 0, 786, 785, 0, 787, 753, 752, 0, 0,
	781, 782, 0, 783, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 249, 264, 266, 273, 286, 297, 305,
	306, 309, 315, 365, 371, 372, 373, 374, 393, 394,
	395, 398, 401, 402, 405, 407, 408, 411, 415, 419,
	420, 421, 422, 424, 426, 436, 441, 455, 456, 457,
	458, 459, 462, 463, 468, 469, 470, 471, 472, 480,
	481, 486, 509, 511, 523, 541, 546, 461, 794, 795,
	796, 797, 798, 799, 800, 801, 287, 518, 547, 0,
	0, 363, 0, 0, 366, 269, 292, 307, 0, 533,
	482, 217, 447, 278, 241, 819, 0, 202, 236, 220,
	247, 262, 265, 311, 376, 384, 413, 418, 284, 259,
	234, 440, 231, 465, 489, 490, 491, 493, 380, 254,
	417, 381, 0, 361, 499, 500, 303, 498, 0, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 400,
	0, 0, 0, 0, 670, 0, 0, 0, 258, 675,
	0, 0, 0, 351, 255, 0, 0, 414, 0, 196,
	0, 467, 242, 362, 359, 506, 270, 261, 257, 240,
	304, 370, 412, 488, 406, 682, 355, 0, 0, 477,
	385, 0, 0, 0, 0, 0, 678, 679, 0, 0,
	0, 0, 0, 0, 2091, 0, 310, 238, 312, 195,
	397, 478, 274, 0, 89, 0, 0, 820, 804, 770,
	771, 808, 821, 822, 823, 824, 809, 0, 228, 810,
	811, 235, 812, 0, 769, 710, 712, 711, 729, 730,
	731, 732, 733, 734, 735, 708, 817, 825, 826, 2092,
	253, 308, 260, 252, 503, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	652, 667, 0, 681, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 664, 665, 0, 0, 0, 0, 764,
	0, 666, 0, 0, 674, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 677, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	386, 245, 0, 763, 0, 0, 543, 0, 0, 761,
	0, 0, 0, 0, 350, 0, 317, 191, 215, 0,
	0, 396, 442, 454, 0, 0, 0, 814, 0, 452,
	410, 522, 223, 272, 439, 416, 450, 423, 275, 0,
	0, 451, 357, 508, 433, 519, 544, 545, 251, 390,
	531, 492, 539, 561, 216, 248, 404, 485, 525, 474,
	382, 504, 505, 316, 473, 283, 194, 354, 550, 214,
	460, 356, 232, 221, 510, 528, 277, 437, 557, 203,
	487, 517, 229, 464, 0, 0, 563, 237, 484, 205,
	515, 483, 378, 313, 314, 204, 0, 438, 256, 281,
	246, 399, 815, 816, 244, 564, 716, 538, 210, 0,
	537, 392, 507, 516, 379, 368, 209, 514, 377, 367,
	321, 724, 725, 268, 294, 430, 360, 431, 293, 295,
	388, 387, 389, 198, 526, 0, 199, 0, 479, 527,
	565, 224, 225, 227, 0, 267, 271, 279, 282, 290,
	291, 300, 352, 403, 429, 425, 434, 0, 502, 520,
	532, 542, 548, 549, 551, 552, 553, 554, 555, 558,
	556, 391, 298, 475, 320, 358, 0, 0, 409, 453,
	230, 524, 476, 774, 762, 687, 778, 689, 775, 776,
	684, 685, 688, 777, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 0, 765, 673, 672, 0, 680, 0, 706,
	707, 709, 713, 714, 715, 726, 727, 728, 736, 738,
	739, 737, 740, 741, 742, 745, 746, 747, 748, 743,
	744, 749, 690, 694, 691, 692, 693, 705, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 788, 789,
	790, 791, 792, 793, 719, 723, 722, 720, 721, 717,
	718, 671, 190, 211, 353, 0, 435, 276, 562, 534,
	529, 197, 213, 779, 250, 780, 0, 0, 784, 0,
	0, 0, 786, 785, 0, 787, 753, 752, 0, 0,
	781, 782, 0, 783, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 249, 264, 266, 273, 286, 297, 305,
	306, 309, 315, 365, 371, 372, 373, 374, 393, 394,
	395, 398, 401, 402, 405, 407, 408, 411, 415, 419,
	420, 421, 422, 424, 426, 436, 441, 455, 456, 457,
	458, 459, 462, 463, 468, 469, 470, 471, 472, 480,
	481, 486, 509, 511, 523, 541, 546, 461, 794, 795,
	796, 797, 798, 799, 800, 801, 287, 518, 547, 0,
	0, 363, 0, 0, 366, 269, 292, 307, 0, 533,
	482, 217, 447, 278, 241, 819, 0, 202, 236, 220,
	247, 262, 265, 311, 376, 384, 413, 418, 284, 259,
	234, 440, 231, 465, 489, 490, 491, 493, 380, 254,
	417, 0, 381, 361, 499, 500, 303, 80, 498, 0,
	683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 670, 0, 0, 0, 258,
	675, 0, 0, 0, 351, 255, 0, 0, 414, 0,
	196, 0, 467, 242, 362, 359, 506, 270, 261, 257,
	240, 304, 370, 412, 488, 406, 682, 355, 0, 0,
	477, 385, 0, 0, 0, 0, 0, 678, 679, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 238, 312,
	195, 397, 478, 274, 0, 89, 0, 0, 820, 804,
	770, 771, 808, 821, 822, 823, 824, 809, 0, 228,
	810, 811, 235, 812, 0, 769, 710, 712, 711, 729,
	730, 731, 732, 733, 734, 735, 708, 817, 825, 826,
	0, 253, 308, 260, 252, 503, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 652, 667, 0, 681, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 0, 0, 0, 0,
	764, 0, 666, 0, 0, 674, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 677, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 386, 245, 0, 763, 0, 0, 543, 0, 0,
	761, 0, 0, 0, 0, 350, 0, 317, 191, 215,
	0, 0, 396, 442, 454, 0, 0, 0, 814, 0,
	452, 410, 522, 223, 272, 439, 416, 450, 423, 275,
	0, 0, 451, 357, 508, 433, 519, 544, 545, 251,
	390, 531, 492, 539, 561, 216, 248, 404, 485, 525,
	474, 382, 504, 505, 316, 473, 283, 194, 354, 550,
	214, 460, 356, 232, 221, 510, 528, 277, 437, 557,
	203, 487, 517, 229, 464, 0, 0, 563, 237, 484,
	205, 515, 483, 378, 313, 314, 204, 0, 438, 256,
	281, 246, 399, 815, 816, 244, 564, 716, 538, 210,
	0, 537, 392, 507, 516, 379, 368, 209, 514, 377,
	367, 321, 724, 725, 268, 294, 430, 360, 431, 293,
	295, 388, 387, 389, 198, 526, 0, 199, 0, 479,
	527, 565, 224, 225, 227, 0, 267, 271, 279, 282,
	290, 291, 300, 352, 403, 429, 425, 434, 0, 502,
	520, 532, 542, 548, 549, 551, 552, 553, 554, 555,
	558, 556, 391, 298, 475, 320, 358, 0, 0, 409,
	453, 230, 524, 476, 774, 762, 687, 778, 689, 775,
	776, 684, 685, 688, 777, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 0, 765, 673, 672, 0, 680, 0,
	706, 707, 709, 713, 714, 715, 726, 727, 728, 736,
	738, 739, 737, 740, 741, 742, 745, 746, 747, 748,
	743, 744, 749, 690, 694, 691, 692, 693, 705, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 788,
	789, 790, 791, 792, 793, 719, 723, 722, 720, 721,
	717, 718, 671, 190, 211, 353, 88, 435, 276, 562,
	534, 529, 197, 213, 779, 250, 780, 0, 0, 784,
	0, 0, 0, 786, 785, 0, 787, 753, 752, 0,
	0, 781, 782, 0, 783, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 249, 264, 266, 273, 286, 297,
	305, 306, 309, 315, 365, 371, 372, 373, 374, 393,
	394, 395, 398, 401, 402, 405, 407, 408, 411, 415,
	419, 420, 421, 422, 424, 426, 436, 441, 455, 456,
	457, 458, 459, 462, 463, 468, 469, 470, 471, 472,
	480, 481, 486, 509, 511, 523, 541, 546, 461, 794,
	795, 796, 797, 798, 799, 800, 801, 287, 518, 547,
	0, 0, 363, 0, 0, 366, 269, 292, 307, 0,
	533, 482, 217, 447, 278, 241, 819, 0, 202, 236,
	220, 247, 262, 265, 311, 376, 384, 413, 418, 284,
	259, 234, 440, 231, 465, 489, 490, 491, 493, 380,
	254, 417, 381, 0, 361, 499, 500, 303, 498, 0,
	683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 670, 0, 0, 0, 258,
	675, 0, 0, 0, 351, 255, 0, 0, 414, 0,
	196, 0, 467, 242, 362, 359, 506, 270, 261, 257,
	240, 304, 370, 412, 488, 406, 682, 355, 0, 0,
	477, 385, 0, 0, 0, 0, 0, 678, 679, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 238, 312,
	195, 397, 478, 274, 0, 89, 0, 0, 820, 804,
	770, 771, 808, 821, 822, 823, 824, 809, 0, 228,
	810, 811, 235, 812, 0, 769, 710, 712, 711, 729,
	730, 731, 732, 733, 734, 735, 708, 817, 825, 826,
	0, 253, 308, 260, 252, 503, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 652, 667, 0, 681, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 0, 0, 0, 0,
	764, 0, 666, 0, 0, 674, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 677, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 386, 245, 0, 763, 0, 0, 543, 0, 0,
	761, 0, 0, 0, 0, 350, 0, 317, 191, 215,
	0, 0, 396, 442, 454, 0, 0, 0, 814, 0,
	452, 410, 522, 223, 272, 439, 416, 450, 423, 275,
	3400, 0, 451, 357, 508, 433, 519, 544, 545, 251,
	390, 531, 492, 539, 561, 216, 248, 404, 485, 525,
	474, 382, 504, 505, 316, 473, 283, 194, 354, 550,
	214, 460, 356, 232, 221, 510, 528, 277, 437, 557,
	203, 487, 517, 229, 464, 0, 0, 563, 237, 484,
	205, 515, 483, 378, 313, 314, 204, 0, 438, 256,
	281, 246, 399, 815, 816, 244, 564, 716, 538, 210,
	0, 537, 392, 507, 516, 379, 368, 209, 514, 377,
	367, 321, 724, 725, 268, 294, 430, 360, 431, 293,
	295, 388, 387, 389, 198, 526, 0, 199, 0, 479,
	527, 565, 224, 225, 227, 0, 267, 271, 279, 282,
	290, 291, 300, 352, 403, 429, 425, 434, 0, 502,
	520, 532, 542, 548, 549, 551, 552, 553, 554, 555,
	558, 556, 391, 298, 475, 320, 358, 0, 0, 409,
	453, 230, 524, 476, 774, 762, 687, 778, 689, 775,
	776, 684, 685, 688, 777, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 0, 765, 673, 672, 0, 680, 0,
	706, 707, 709, 713, 714, 715, 726, 727, 728, 736,
	738, 739, 737, 740, 741, 742, 745, 746, 747, 748,
	743, 744, 749, 690, 694, 691, 692, 693, 705, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 788,
	789, 790, 791, 792, 793, 719, 723, 722, 720, 721,
	717, 718, 671, 190, 211, 353, 0, 435, 276, 562,
	534, 529, 197, 213, 779, 250, 780, 0, 0, 784,
	0, 0, 0, 786, 785, 0, 787, 753, 752, 0,
	0, 781, 782, 0, 783, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 249, 264, 266, 273, 286, 297,
	305, 306, 309, 315, 365, 371, 372, 373, 374, 393,
	394, 395, 398, 401, 402, 405, 407, 408, 411, 415,
	419, 420, 421, 422, 424, 426, 436, 441, 455, 456,
	457, 458, 459, 462, 463, 468, 469, 470, 471, 472,
	480, 481, 486, 509, 511, 523, 541, 546, 461, 794,
	795, 796, 797, 798, 799, 800, 801, 287, 518, 547,
	0, 0, 363, 0, 0, 366, 269, 292, 307, 0,
	533, 482, 217, 447, 278, 241, 819, 0, 202, 236,
	220, 247, 262, 265, 311, 376, 384, 413, 418, 284,
	259, 234, 440, 231, 465, 489, 490, 491, 493, 380,
	254, 417, 381, 0, 361, 499, 500, 303, 498, 0,
	683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 670, 0, 0, 0, 258,
	675, 0, 0, 0, 351, 255, 0, 0, 414, 0,
	196, 0, 467, 242, 362, 359, 506, 270, 261, 257,
	240, 304, 370, 412, 488, 406, 682, 355, 0, 0,
	477, 385, 0, 0, 0, 0, 0, 678, 679, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 238, 312,
	195, 397, 478, 274, 0, 89, 0, 1507, 820, 804,
	770, 771, 808, 821, 822, 823, 824, 809, 0, 228,
	810, 811, 235, 812, 0, 769, 710, 712, 711, 729,
	730, 731, 732, 733, 734, 735, 708, 817, 825, 826,
	0, 253, 308, 260, 252, 503, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 652, 667, 0, 681, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 0, 0, 0, 0,
	764, 0, 666, 0, 0, 674, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 677, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 386, 245, 0, 763, 0, 0, 543, 0, 0,
	761, 0, 0, 0, 0, 350, 0, 317, 191, 215,
	0, 0, 396, 442, 454, 0, 0, 0, 814, 0,
	452, 410, 522, 223, 272, 439, 416, 450, 423, 275,
	0, 0, 451, 357, 508, 433, 519, 544, 545, 251,
	390, 531, 492, 539, 561, 216, 248, 404, 485, 525,
	474, 382, 504, 505, 316, 473, 283, 194, 354, 550,
	214, 460, 356, 232, 221, 510, 528, 277, 437, 557,
	203, 487, 517, 229, 464, 0, 0, 563, 237, 484,
	205, 515, 483, 378, 313, 314, 204, 0, 438, 256,
	281, 246, 399, 815, 816, 244, 564, 716, 538, 210,
	0, 537, 392, 507, 516, 379, 368, 209, 514, 377,
	367, 321, 724, 725, 268, 294, 430, 360, 431, 293,
	295, 388, 387, 389, 198, 526, 0, 199, 0, 479,
	527, 565, 224, 225, 227, 0, 267, 271, 279, 282,
	290, 291, 300, 352, 403, 429, 425, 434, 0, 502,
	520, 532, 542, 548, 549, 551, 552, 553, 554, 555,
	558, 556, 391, 298, 475, 320, 358, 0, 0, 409,
	453, 230, 524, 476, 774, 762, 687, 778, 689, 775,
	776, 684, 685, 688, 777, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 0, 765, 673, 672, 0, 680, 0,
	706, 707, 709, 713, 714, 715, 726, 727, 728, 736,
	738, 739, 737, 740, 741, 742, 745, 746, 747, 748,
	743, 744, 749, 690, 694, 691, 692, 693, 705, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 788,
	789, 790, 791, 792, 793, 719, 723, 722, 720, 721,
	717, 718, 671, 190, 211, 353, 0, 435, 276, 562,
	534, 529, 197, 213, 779, 250, 780, 0, 0, 784,
	0, 0, 0, 786, 785, 0, 787, 753, 752, 0,
	0, 781, 782, 0, 783, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 249, 264, 266, 273, 286, 297,
	305, 306, 309, 315, 365, 371, 372, 373, 374, 393,
	394, 395, 398, 401, 402, 405, 407, 408, 411, 415,
	419, 420, 421, 422, 424, 426, 436, 441, 455, 456,
	457, 458, 459, 462, 463, 468, 469, 470, 471, 472,
	480, 481, 486, 509, 511, 523, 541, 546, 461, 794,
	795, 796, 797, 798, 799, 800, 801, 287, 518, 547,
	0, 0, 363, 0, 0, 366, 269, 292, 307, 0,
	533, 482, 217, 447, 278, 241, 819, 0, 202, 236,
	220, 247, 262, 265, 311, 376, 384, 413, 418, 284,
	259, 234, 440, 231, 465, 489, 490, 491, 493, 380,
	254, 417, 381, 0, 361, 499, 500, 303, 498, 0,
	683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 670, 0, 0, 0, 258,
	675, 0, 0, 0, 351, 255, 0, 0, 414, 0,
	196, 0, 467, 242, 362, 359, 506, 270, 261, 257,
	240, 304, 370, 412, 488, 406, 682, 355, 0, 0,
	477, 385, 0, 0, 0, 0, 0, 678, 679, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 238, 312,
	195, 397, 478, 274, 0, 89, 0, 0, 820, 804,
	770, 771, 808, 821, 822, 823, 824, 809, 0, 228,
	810, 811, 235, 812, 0, 769, 710, 712, 711, 729,
	730, 731, 732, 733, 734, 735, 708, 817, 825, 826,
	0, 253, 308, 260, 252, 503, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 652, 667, 0, 681, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 909, 0, 0, 0,
	764, 0, 666, 0, 0, 674, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 677, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 386, 245, 0, 763, 0, 0, 543, 0, 0,
	761, 0, 0, 0, 0, 350, 0, 317, 191, 215,
	0, 0, 396, 442, 454, 0, 0, 0, 814, 0,
	452, 410, 522, 223, 272, 439, 416, 450, 423, 275,
	0, 0, 451, 357, 508, 433, 519, 544, 545, 251,
	390, 531, 492, 539, 561, 216, 248, 404, 485, 525,
	474, 382, 504, 505, 316, 473, 283, 194, 354, 550,
	214, 460, 356, 232, 221, 510, 528, 277, 437, 557,
	203, 487, 517, 229, 464, 0, 0, 563, 237, 484,
	205, 515, 483, 378, 313, 314, 204, 0, 438, 256,
	281, 246, 399, 815, 816, 244, 564, 716, 538, 210,
	0, 537, 392, 507, 516, 379, 368, 209, 514, 377,
	367, 321, 724, 725, 268, 294, 430, 360, 431, 293,
	295, 388, 387, 389, 198, 526, 0, 199, 0, 479,
	527, 565, 224, 225, 227, 0, 267, 271, 279, 282,
	290, 291, 300, 352, 403, 429, 425, 434, 0, 502,
	520, 532, 542, 548, 549, 551, 552, 553, 554, 555,
	558, 556, 391, 298, 475, 320, 358, 0, 0, 409,
	453, 230, 524, 476, 774, 762, 687, 778, 689, 775,
	776, 684, 685, 688, 777, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 0, 765, 673, 672, 0, 680, 0,
	706, 707, 709, 713, 714, 715, 726, 727, 728, 736,
	738, 739, 737, 740, 741, 742, 745, 746, 747, 748,
	743, 744, 749, 690, 694, 691, 692, 693, 705, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 788,
	789, 790, 791, 792, 793, 719, 723, 722, 720, 721,
	717, 718, 671, 190, 211, 353, 0, 435, 276, 562,
	534, 529, 197, 213, 779, 250, 780, 0, 0, 784,
	0, 0, 0, 786, 785, 0, 787, 753, 752, 0,
	0, 781, 782, 0, 783, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 249, 264, 266, 273, 286, 297,
	305, 306, 309, 315, 365, 371, 372, 373, 374, 393,
	394, 395, 398, 401, 402, 405, 407, 408, 411, 415,
	419, 420, 421, 422, 424, 426, 436, 441, 455, 456,
	457, 458, 459, 462, 463, 468, 469, 470, 471, 472,
	480, 481, 486, 509, 511, 523, 541, 546, 461, 794,
	795, 796, 797, 798, 799, 800, 801, 287, 518, 547,
	0, 0, 363, 0, 0, 366, 269, 292, 307, 0,
	533, 482, 217, 447, 278, 241, 819, 0, 202, 236,
	220, 247, 262, 265, 311, 376, 384, 413, 418, 284,
	259, 234, 440, 231, 465, 489, 490, 491, 493, 380,
	254, 417, 381, 0, 361, 499, 500, 303, 498, 0,
	683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 670, 0, 0, 0, 258,
	675, 0, 0, 0, 351, 255, 0, 0, 414, 0,
	196, 0, 467, 242, 362, 359, 506, 270, 261, 257,
	240, 304, 370, 412, 488, 406, 682, 355, 0, 0,
	477, 385, 0, 0, 0, 0, 0, 678, 679, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 238, 312,
	195, 397, 478, 274, 0, 89, 0, 0, 820, 804,
	770, 771, 808, 821, 822, 823, 824, 809, 0, 228,
	810, 811, 235, 812, 0, 769, 710, 712, 711, 729,
	730, 731, 732, 733, 734, 735, 708, 817, 825, 826,
	0, 253, 308, 260, 252, 503, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 652, 667, 0, 681, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 0, 0, 0, 0,
	764, 0, 666, 0, 0, 674, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 677, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 386, 245, 0, 763, 0, 0, 543, 0, 0,
	761, 0, 0, 0, 0, 350, 0, 317, 191, 215,
	0, 0, 396, 442, 454, 0, 0, 0, 814, 0,
	452, 410, 522, 223, 272, 439, 416, 450, 423, 275,
	0, 0, 451, 357, 508, 433, 519, 544, 545, 251,
	390, 531, 492, 539, 561, 216, 248, 404, 485, 525,
	474, 382, 504, 505, 316, 473, 283, 194, 354, 550,
	214, 460, 356, 232, 221, 510, 528, 277, 437, 557,
	203, 487, 517, 229, 464, 0, 0, 563, 237, 484,
	205, 515, 483, 378, 313, 314, 204, 0, 438, 256,
	281, 246, 399, 815, 816, 244, 564, 716, 538, 210,
	0, 537, 392, 507, 516, 379, 368, 209, 514, 377,
	367, 321, 724, 725, 268, 294, 430, 360, 431, 293,
	295, 388, 387, 389, 198, 526, 0, 199, 0, 479,
	527, 565, 224, 225, 227, 0, 267, 271, 279, 282,
	290, 291, 300, 352, 403, 429, 425, 434, 0, 502,
	520, 532, 542, 548, 549, 551, 552, 553, 554, 555,
	558, 556, 391, 298, 475, 320, 358, 0, 0, 409,
	453, 230, 524, 476, 774, 762, 687, 778, 689, 775,
	776, 684, 685, 688, 777, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 0, 765, 673, 672, 0, 680, 0,
	706, 707, 709, 713, 714, 715, 726, 727, 728, 736,
	738, 739, 737, 740, 741, 742, 745, 746, 747, 748,
	743, 744, 749, 690, 694, 691, 692, 693, 705, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 788,
	789, 790, 791, 792, 793, 719, 723, 722, 720, 721,
	717, 718, 671, 190, 211, 353, 0, 435, 276, 562,
	534, 529, 197, 213, 779, 250, 780, 0, 0, 784,
	0, 0, 0, 786, 785, 0, 787, 753, 752, 0,
	0, 781, 782, 0, 783, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 249, 264, 266, 273, 286, 297,
	305, 306, 309, 315, 365, 371, 372, 373, 374, 393,
	394, 395, 398, 401, 402, 405, 407, 408, 411, 415,
	419, 420, 421, 422, 424, 426, 436, 441, 455, 456,
	457, 458, 459, 462, 463, 468, 469, 470, 471, 472,
	480, 481, 486, 509, 511, 523, 541, 546, 461, 794,
	795, 796, 797, 798, 799, 800, 801, 287, 518, 547,
	0, 0, 363, 0, 0, 366, 269, 292, 307, 0,
	533, 482, 217, 447, 278, 241, 819, 0, 202, 236,
	220, 247, 262, 265, 311, 376, 384, 413, 418, 284,
	259, 234, 440, 231, 465, 489, 490, 491, 493, 380,
	254, 417, 381, 0, 361, 499, 500, 303, 498, 0,
	683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 670, 0, 0, 0, 258,
	675, 0, 0, 0, 351, 255, 0, 0, 414, 0,
	196, 0, 467, 242, 362, 359, 506, 270, 261, 257,
	240, 304, 370, 412, 488, 406, 682, 355, 0, 0,
	477, 385, 0, 0, 0, 0, 0, 678, 679, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 238, 312,
	195, 397, 478, 274, 0, 89, 0, 0, 820, 804,
	770, 771, 808, 821, 822, 823, 824, 809, 0, 228,
	810, 811, 235, 812, 0, 769, 710, 712, 711, 729,
	730, 731, 732, 733, 734, 735, 708, 817, 825, 826,
	0, 253, 308, 260, 252, 503, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 0, 681, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 665, 0, 0, 0, 0,
	764, 0, 666, 0, 0, 674, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 677, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 386, 245, 0, 763, 0, 0, 543, 0, 0,
	761, 0, 0, 0, 0, 350, 0, 317, 191, 215,
	0, 0, 396, 442, 454, 0, 0, 0, 814, 0,
	452, 410, 522, 223, 272, 439, 416, 450, 423, 275,
	0, 0, 451, 357, 508, 433, 519, 544, 545, 251,
	390, 531, 492, 539, 561, 216, 248, 404, 485, 525,
	474, 382, 504, 505, 316, 473, 283, 194, 354, 550,
	214, 460, 356, 232, 221, 510, 528, 277, 437, 557,
	203, 487, 517, 229, 464, 0, 0, 563, 237, 484,
	205, 515, 483, 378, 313, 314, 204, 0, 438, 256,
	281, 246, 399, 815, 816, 244, 564, 716, 538, 210,
	0, 537, 392, 507, 516, 379, 368, 209, 514, 377,
	367, 321, 724, 725, 268, 294, 430, 360, 431, 293,
	295, 388, 387, 389, 198, 526, 0, 199, 0, 479,
	527, 565, 224, 225, 227, 0, 267, 271, 279, 282,
	290, 291, 300, 352, 403, 429, 425, 434, 0, 502,
	520, 532, 542, 548, 549, 551, 552, 553, 554, 555,
	558, 556, 391, 298, 475, 320, 358, 0, 0, 409,
	453, 230, 524, 476, 774, 762, 687, 778, 689, 775,
	776, 684, 685, 688, 777, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 0, 765, 673, 672, 0, 680, 0,
	706, 707, 709, 713, 714, 715, 726, 727, 728, 736,
	738, 739, 737, 740, 741, 742, 745, 746, 747, 748,
	743, 744, 749, 690, 694, 691, 692, 693, 705, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 788,
	789, 790, 791, 792, 793, 719, 723, 722, 720, 721,
	717, 718, 671, 190, 211, 353, 0, 435, 276, 562,
	534, 529, 197, 213, 779, 250, 780, 0, 0, 784,
	0, 0, 0, 786, 785, 0, 787, 753, 752, 0,
	0, 781, 782, 0, 783, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 249, 264, 266, 273, 286, 297,
	305, 306, 309, 315, 365, 371, 372, 373, 374, 393,
	394, 395, 398, 401, 402, 405, 407, 408, 411, 415,
	419, 420, 421, 422, 424, 426, 436, 441, 455, 456,
	457, 458, 459, 462, 463, 468, 469, 470, 471, 472,
	480, 481, 486, 509, 511, 523, 541, 546, 461, 794,
	795, 796, 797, 798, 799, 800, 801, 287, 518, 547,
	0, 0, 363, 0, 0, 366, 269, 292, 307, 0,
	533, 482, 217, 447, 278, 241, 819, 0, 202, 236,
	220, 247, 262, 265, 311, 376, 384, 413, 418, 284,
	259, 234, 440, 231, 465, 489, 490, 491, 493, 380,
	254, 417, 381, 0, 361, 499, 500, 303, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 351, 255, 0, 0, 414, 0,
	196, 0, 467, 242, 362, 359, 506, 270, 261, 257,
	240, 304, 370, 412, 488, 406, 0, 355, 0, 0,
	477, 385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 238, 312,
	195, 397, 478, 274, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 336, 345, 344, 325,
	326, 328, 330, 335, 342, 348, 0, 0, 0, 0,
	0, 253, 308, 260, 252, 503, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 386, 245, 0, 0, 0, 979, 543, 0, 0,
	0, 0, 0, 976, 977, 350, 937, 317, 191, 215,
	970, 974, 396, 442, 454, 0, 0, 0, 243, 0,
	452, 410, 522, 223, 272, 439, 416, 450, 423, 275,
	0, 0, 451, 357, 508, 433, 519, 544, 545, 251,
	390, 531, 492, 539, 561, 216, 248, 404, 485, 525,
	474, 382, 504, 505, 316, 473, 283, 194, 354, 550,
	214, 460, 356, 232, 221, 510, 528, 277, 437, 557,
	203, 487, 517, 229, 464, 0, 0, 563, 237, 484,
	205, 515, 483, 378, 313, 314, 204, 0, 438, 256,
	281, 246, 399, 512, 513, 244, 564, 218, 538, 210,
	0, 537, 392, 507, 516, 379, 368, 209, 514, 377,
	367, 321, 340, 341, 268, 294, 430, 360, 431, 293,
	295, 388, 387, 389, 198, 526, 0, 199, 0, 479,
	527, 565, 224, 225, 227, 0, 267, 271, 279, 282,
	290, 291, 300, 352, 403, 429, 425, 434, 0, 502,
	520, 532, 542, 548, 549, 551, 552, 553, 554, 555,
	558, 556, 391, 298, 475, 320, 358, 0, 0, 409,
	453, 230, 524, 476, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 584, 369, 466, 521, 322, 334, 337, 327,
	346, 0, 347, 323, 324, 329, 331, 332, 333, 338,
	339, 343, 349, 239, 201, 375, 383, 501, 299, 206,
	207, 208, 494, 495, 496, 497, 535, 536, 540, 443,
	444, 445, 446, 280, 530, 296, 449, 448, 318, 319,
	364, 432, 0, 190, 211, 353, 0, 435, 276, 562,
	534, 529, 197, 213, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 249, 264, 266, 273, 286, 297,
	305, 306, 309, 315, 365, 371, 372, 373, 374, 393,
	394, 395, 398, 401, 402, 405, 407, 408, 411, 415,
	419, 420, 421, 422, 424, 426, 436, 441, 455, 456,
	457, 458, 459, 462, 463, 468, 469, 470, 471, 472,
	480, 481, 486, 509, 511, 523, 541, 546, 461, 288,
	289, 427, 428, 301, 302, 559, 560, 287, 518, 547,
	0, 0, 363, 0, 0, 366, 269, 292, 307, 0,
	533, 482, 217, 447, 278, 241, 0, 0, 202, 236,
	220, 247, 262, 265, 311, 376, 384, 413, 418, 284,
	259, 234, 440, 231, 465, 489, 490, 491, 493, 380,
	254, 417, 381, 0, 361, 499, 500, 303, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 351, 255, 0, 0, 414, 0,
	196, 0, 467, 242, 362, 359, 506, 270, 261, 257,
	240, 304, 370, 412, 488, 406, 0, 355, 0, 0,
	477, 385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 238, 312,
	195, 397, 478, 274, 0, 0, 0, 0, 1470, 804,
	0, 0, 1467, 0, 0, 0, 0, 1465, 0, 228,
	1466, 1464, 235, 1469, 0, 769, 336, 345, 344, 325,
	326, 328, 330, 335, 342, 348, 0, 0, 0, 0,
	0, 253, 308, 260, 252, 503, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 386, 245, 0, 0, 0, 0, 543, 0, 0,
	0, 0, 0, 0, 0, 350, 0, 317, 191, 215,
	0, 0, 396, 442, 454, 0, 0, 0, 243, 0,
	452, 410, 522, 223, 272, 439, 416, 450, 423, 275,
	0, 0, 451, 357, 508, 433, 519, 544, 545, 251,
	390, 531, 492, 539, 561, 216, 248, 404, 485, 525,
	474, 382, 504, 505, 316, 473, 283, 194, 354, 550,
	214, 460, 356, 232, 221, 510, 528, 277, 437, 557,
	203, 487, 517, 229, 464, 0, 0, 563, 237, 484,
	205, 515, 483, 378, 313, 314, 204, 0, 438, 256,
	281, 246, 399, 512, 513, 244, 564, 218, 538, 210,
	0, 537, 392, 507, 516, 379, 368, 209, 514, 377,
	367, 321, 340, 341, 268, 294, 430, 360, 431, 293,
	295, 388, 387, 389, 198, 526, 0, 199, 0, 479,
	527, 565, 224, 225, 227, 0, 267, 271, 279, 282,
	290, 291, 300, 352, 403, 429, 425, 434, 0, 502,
	520, 532, 542, 548, 549, 551, 552, 553, 554, 555,
	558, 556, 391, 298, 475, 320, 358, 0, 0, 409,
	453, 230, 524, 476, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 584, 369, 466, 521, 322, 334, 337, 327,
	346, 0, 347, 323, 324, 329, 331, 332, 333, 338,
	339, 343, 349, 239, 201, 375, 383, 501, 299, 206,
	207, 208, 494, 495, 496, 497, 535, 536, 540, 443,
	444, 445, 446, 280, 530, 296, 449, 448, 318, 319,
	364, 432, 0, 190, 211, 353, 0, 435, 276, 562,
	534, 529, 197, 213, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 249, 264, 266, 273, 286, 297,
	305, 306, 309, 315, 365, 371, 372, 373, 374, 393,
	394, 395, 398, 401, 402, 405, 407, 408, 411, 415,
	419, 420, 421, 422, 424, 426, 436, 441, 455, 456,
	457, 458, 459, 462, 463, 468, 469, 470, 471, 472,
	480, 481, 486, 509, 511, 523, 541, 546, 461, 288,
	289, 427, 428, 301, 302, 559, 560, 287, 518, 547,
	0, 0, 363, 0, 0, 366, 269, 292, 307, 0,
	533, 482, 217, 447, 278, 241, 0, 0, 202, 236,
	220, 247, 262, 265, 311, 376, 384, 413, 418, 284,
	259, 234, 440, 231, 465, 489, 490, 491, 493, 380,
	254, 417, 0, 381, 361, 499, 500, 303, 80, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 351, 255, 0, 0, 414,
	0, 196, 0, 467, 242, 362, 359, 506, 270, 261,
	257, 240, 304, 370, 412, 488, 406, 0, 355, 0,
	0, 477, 385, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 238,
	312, 195, 397, 478, 274, 0, 89, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 336, 345, 344,
	325, 326, 328, 330, 335, 342, 348, 0, 0, 0,
	0, 0, 253, 308, 260, 252, 503, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 386, 245, 0, 0, 0, 0, 543, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 317, 191,
	215, 0, 0, 396, 442, 454, 0, 0, 0, 243,
	0, 452, 410, 522, 223, 272, 439, 416, 450, 423,
	275, 0, 0, 451, 357, 508, 433, 519, 544, 545,
	251, 390, 531, 492, 539, 561, 216, 248, 404, 485,
	525, 474, 382, 504, 505, 316, 473, 283, 194, 354,
	550, 214, 460, 356, 232, 221, 510, 528, 277, 437,
	557, 203, 487, 517, 229, 464, 0, 0, 563, 237,
	484, 205, 515, 483, 378, 313, 314, 204, 0, 438,
	256, 281, 246, 399, 512, 513, 244, 564, 218, 538,
	210, 0, 537, 392, 507, 516, 379, 368, 209, 514,
	377, 367, 321, 340, 341, 268, 294, 430, 360, 431,
	293, 295, 388, 387, 389, 198, 526, 0, 199, 0,
	479, 527, 565, 224, 225, 227, 0, 267, 271, 279,
	282, 290, 291, 300, 352, 403, 429, 425, 434, 0,
	502, 520, 532, 542, 548, 549, 551, 552, 553, 554,
	555, 558, 556, 391, 298, 475, 320, 358, 0, 0,
	409, 453, 230, 524, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 584, 369, 466, 521, 322, 334, 337,
	327, 346, 0, 347, 323, 324, 329, 331, 332, 333,
	338, 339, 343, 349, 239, 201, 375, 383, 501, 299,
	206, 207, 208, 494, 495, 496, 497, 535, 536, 540,
	443, 444, 445, 446, 280, 530, 296, 449, 448, 318,
	319, 364, 432, 0, 190, 211, 353, 88, 435, 276,
	562, 534, 529, 197, 213, 0, 250, 0, 0, 0,
	0, 0, 0, 2078, 0, 0, 2077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 249, 264, 266, 273, 286,
	297, 305, 306, 309, 315, 365, 371, 372, 373, 374,
	393, 394, 395, 398, 401, 402, 405, 407, 408, 411,
	415, 419, 420, 421, 422, 424, 426, 436, 441, 455,
	456, 457, 458, 459, 462, 463, 468, 469, 470, 471,
	472, 480, 481, 486, 509, 511, 523, 541, 546, 461,
	288, 289, 427, 428, 301, 302, 559, 560, 287, 518,
	547, 0, 0, 363, 0, 0, 366, 269, 292, 307,
	0, 533, 482, 217, 447, 278, 241, 0, 0, 202,
	236, 220, 247, 262, 265, 311, 376, 384, 413, 418,
	284, 259, 234, 440, 231, 465, 489, 490, 491, 493,
	380, 254, 417, 1526, 0, 361, 499, 500, 303, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 0, 0, 0, 1528, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 351, 255, 0, 0, 414,
	0, 196, 0, 467, 242, 362, 359, 506, 270, 261,
	257, 240, 304, 370, 412, 488, 406, 0, 355, 0,
	0, 477, 385, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 238,
	312, 195, 397, 478, 274, 0, 0, 0, 0, 1530,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 336, 345, 344,
	325, 326, 328, 330, 335, 342, 348, 0, 0, 0,
	0, 0, 253, 308, 260, 252, 503, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 1304, 0,
	1305, 1306, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 386, 245, 0, 0, 0, 0, 543, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 317, 191,
	215, 0, 0, 396, 442, 454, 0, 0, 0, 243,
	0, 452, 410, 522, 223, 272, 439, 416, 450, 423,
	275, 0, 0, 451, 357, 508, 433, 519, 544, 545,
	251, 390, 531, 492, 539, 561, 216, 248, 404, 485,
	525, 474, 382, 504, 505, 316, 473, 283, 194, 354,
	550, 214, 460, 356, 232, 221, 510, 528, 277, 437,
	557, 203, 487, 517, 229, 464, 0, 0, 563, 237,
	484, 205, 515, 483, 378, 313, 314, 204, 0, 438,
	256, 281, 246, 399, 512, 513, 244, 564, 218, 538,
	210, 0, 537, 392, 507, 516, 379, 368, 209, 514,
	377, 367, 321, 340, 341, 268, 294, 430, 360, 431,
	293, 295, 388, 387, 389, 198, 526, 0, 199, 0,
	479, 527, 565, 224, 225, 227, 0, 267, 271, 279,
	282, 290, 291, 300, 352, 403, 429, 425, 434, 0,
	502, 520, 532, 542, 548, 549, 551, 552, 553, 554,
	555, 558, 556, 391, 298, 475, 320, 358, 0, 0,
	409, 453, 230, 524, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 584, 369, 466, 521, 322, 334, 337,
	327, 346, 0, 347, 323, 324, 329, 331, 332, 333,
	338, 339, 343, 349, 239, 201, 375, 383, 501, 299,
	206, 207, 208, 494, 495, 496, 497, 535, 536, 540,
	443, 444, 445, 446, 280, 530, 296, 449, 448, 318,
	319, 364, 432, 0, 190, 211, 353, 0, 435, 276,
	562, 534, 529, 197, 213, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 249, 264, 266, 273, 286,
	297, 305, 306, 309, 315, 365, 371, 372, 373, 374,
	393, 394, 395, 398, 401, 402, 405, 407, 408, 411,
	415, 419, 420, 421, 422, 424, 426, 436, 441, 455,
	456, 457, 458, 459, 462, 463, 468, 469, 470, 471,
	472, 480, 481, 486, 509, 511, 523, 541, 546, 461,
	288, 289, 427, 428, 301, 302, 559, 560, 287, 518,
	547, 0, 0, 363, 0, 0, 366, 269, 292, 307,
	0, 533, 482, 217, 447, 278, 241, 0, 0, 202,
	236, 220, 247, 262, 265, 311, 376, 384, 413, 418,
	284, 259, 234, 440, 231, 465, 489, 490, 491, 493,
	380, 254, 417, 0, 381, 361, 499, 500, 303, 80,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 89, 0, 1507,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 88, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 89, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 2078, 0, 0, 2077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 2028, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	1707, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 2026, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 931,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 937, 317,
	191, 215, 935, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 2028, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	1707, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 1507,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 3310, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	1861, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	2431, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 2416, 0, 0, 0,
	0, 228, 0, 0, 235, 2417, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 1549, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	1548, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 633, 634, 635, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 3434, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	1707, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 3310, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 89, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 2079, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	1530, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 1816, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	1808, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 1674, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 1672, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 1670, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 1668, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 1666, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 1662, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 1660, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 1658, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 1633, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	1534, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 89, 0, 0,
	0, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1287,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 1286,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 890, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 587, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 3442, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 381, 0, 361, 499, 500, 303,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 351, 255, 0, 0,
	414, 0, 196, 0, 467, 242, 362, 359, 506, 270,
	261, 257, 240, 304, 370, 412, 488, 406, 0, 355,
	0, 0, 477, 385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	238, 312, 195, 397, 478, 274, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 336, 345,
	344, 325, 326, 328, 330, 335, 342, 348, 0, 0,
	0, 0, 0, 253, 308, 260, 252, 503, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 386, 245, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 317,
	191, 215, 0, 0, 396, 442, 454, 0, 0, 0,
	243, 0, 452, 410, 522, 223, 272, 439, 416, 450,
	423, 275, 0, 0, 451, 357, 508, 433, 519, 544,
	545, 251, 390, 531, 492, 539, 561, 216, 248, 404,
	485, 525, 474, 382, 504, 505, 316, 473, 283, 194,
	354, 550, 214, 460, 356, 232, 221, 510, 528, 277,
	437, 557, 203, 487, 517, 229, 464, 0, 0, 563,
	237, 484, 205, 515, 483, 378, 313, 314, 204, 0,
	438, 256, 281, 246, 399, 512, 513, 244, 564, 218,
	538, 210, 0, 537, 392, 507, 516, 379, 368, 209,
	514, 377, 367, 321, 340, 341, 268, 294, 430, 360,
	431, 293, 295, 388, 387, 389, 198, 526, 0, 199,
	0, 479, 527, 565, 224, 225, 227, 0, 267, 271,
	279, 282, 290, 291, 300, 352, 403, 429, 425, 434,
	0, 502, 520, 532, 542, 548, 549, 551, 552, 553,
	554, 555, 558, 556, 391, 298, 475, 320, 358, 0,
	0, 409, 453, 230, 524, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 369, 466, 521, 322, 334,
	337, 327, 346, 0, 347, 323, 324, 329, 331, 332,
	333, 338, 339, 343, 349, 239, 201, 375, 383, 501,
	299, 206, 207, 208, 494, 495, 496, 497, 535, 536,
	540, 443, 444, 445, 446, 280, 530, 296, 449, 448,
	318, 319, 364, 432, 0, 190, 211, 353, 0, 435,
	276, 562, 534, 529, 197, 213, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 249, 264, 266, 273,
	286, 297, 305, 306, 309, 315, 365, 371, 372, 373,
	374, 393, 394, 395, 398, 401, 402, 405, 407, 408,
	411, 415, 419, 420, 421, 422, 424, 426, 436, 441,
	455, 456, 457, 458, 459, 462, 463, 468, 469, 470,
	471, 472, 480, 481, 486, 509, 511, 523, 541, 546,
	461, 288, 289, 427, 428, 301, 302, 559, 560, 287,
	518, 547, 0, 0, 363, 0, 0, 366, 269, 292,
	307, 0, 533, 482, 217, 447, 278, 241, 0, 0,
	202, 236, 220, 247, 262, 265, 311, 376, 384, 413,
	418, 284, 259, 234, 440, 231, 465, 489, 490, 491,
	493, 380, 254, 417, 0, 0, 361, 499, 500, 303,
}

var yyPact = [...]int{
	-1000, -1000, 5412, -1000, -457, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2354, 2368,
	-1000, -1000, -1000, -1000, 2428, -1000, 874, 1967, -1000, 2243,
	308, -1000, 46820, 628, -1000, 44220, 627, 241, 29270, -1000,
	253, -1000, 244, 45520, 249, -1000, -1000, -1000, -317, 18868,
	2155, 80, 71, 46820, -1000, -1000, -1000, -1000, 2412, 1925,
	-1000, 395, -1000, -1000, -1000, -1000, -1000, -1000, 43570, -1000,
	1024, -1000, -1000, 2248, 2272, 2441, 797, 2218, -1000, 2350,
	1925, -1000, 18868, 2401, 2305, 18218, 18218, 529, -1000, -1000,
	245, -1000, -1000, 24720, 46820, 31870, 456, -1000, 2243, -1000,
	-1000, -1000, 118, -1000, 409, 1856, -1000, 1855, -1000, 790,
	774, 445, 545, 539, 443, 440, 439, 438, 432, 430,
	427, 422, 451, -1000, 833, 833, -129, -140, 192, 565,
	500, 500, 902, 561, 2210, 2195, -1000, -1000, 833, 833,
	833, 404, 833, 833, 833, 833, 379, 377, 833, 833,
	833, 833, 833, 833, 833, 833, 833, 833, 833, 833,
	833, 833, 833, 833, 833, 362, 2243, 352, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 46820, 326, 46820, -1000, 711,
	46820, 958, 958, 117, 958, 958, 958, 958, 223, 766,
	68, -1000, 195, 371, 200, 341, 949, 746, -1000, -1000,
	329, 949, 1736, -1000, 809, 333, 187, -1000, 958, 958,
	-1000, 12343, 149, 12343, 12343, -1000, 2201, -1000, -1000, -1000,
	-1000, -1000, 1239, -1000, -1000, -1000, -1000, -14, 554, -1000,
	-1000, -1000, -1000, 45520, 42920, -1000, -1000, 140, -1000, -1000,
	1627, 1002, 18868, 1143, -1000, 1253, 761, -1000, -1000, -1000,
	-1000, -1000, 645, -1000, 19518, 19518, 19518, 19518, -1000, -1000,
	1859, 42270, 1859, 1859, 19518, 1859, -1000, 19518, 1859, 1859,
	1859, 18868, 1859, 1859, 1859, 1859, -1000, 1859, 1859, 1859,
	1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
	1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
	1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
	1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
	1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
	1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
	1859, 1859, 1859, 1859, 1859, -1000, -1000, -1000, -1000, 1859,
	710, 1859, 1859, 1859, 1859, 1859, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1859, 1859, 1859, 1859, 1859, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1859, 1859,
	1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
	1859, 1859, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 20818, 1424, 1422, 1407, -1000, 16268, 1859,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	46820, -1000, 1859, 280, 45520, 45520, 400, 2350, 1925, -1000,
	2412, 2397, 395, -1000, 2890, 1449, 1416, 1320, 1925, 1808,
	46820, -1000, 1872, -1000, -1000, -1000, -1000, 2092, 1310, 1732,
	-1000, -1000, -1000, -1000, 2096, 18868, -1000, -1000, 2425, -1000,
	22119, 708, 2424, 41620, -1000, 529, 529, 1842, 486, 10,
	-1000, -1000, -1000, -1000, 854, 28620, -1000, -1000, -1000, -1000,
	1724, 46820, -1000, -1000, 4964, 1242, -1000, 1959, -1000, 1722,
	-1000, 1899, 18868, 1977, 624, 1242, 616, 614, 610, -1000,
	-40, -1000, -1000, -1000, -1000, -1000, -1000, 833, 833, 833,
	-1000, 417, 2393, 308, 4280, -1000, -1000, -1000, 40970, 1952,
	1242, -1000, 1934, -1000, 916, 646, 677, 677, 1242, -1000,
	-1000, 46170, 1242, 915, 911, 1242, 1242, 45520, 45520, -1000,
	40320, -1000, 39670, 39020, 1226, 45520, 38370, 37720, 37070, 36420,
	35770, -1000, 2209, -1000, 1958, -1000, -1000, -1000, 46170, 1242,
	1242, 46170, 45520, 46170, 46820, 1242, -1000, -1000, 397, -1000,
	-1000, 1221, 1219, 1218, 833, 833, 1177, 1706, 1705, 1703,
	833, 833, 1166, 1702, 30570, 1700, 332, 1163, 1160, 1147,
	1281, 1699, 201, 1685, 1228, 1161, 1144, 45520, 1928, 46820,
	-1000, 325, 841, 503, 851, 2243, 2145, 1834, 552, 623,
	1242, 507, 507, 45520, -1000, 14311, -1000, -1000, 1672, 18868,
	-1000, 956, 949, 949, -1000, -1000, -1000, -1000, -1000, -1000,
	958, 46820, 956, -1000, -1000, -1000, 949, 958, 46820, 958,
	958, 958, 958, 949, 949, 949, 958, 46820, 46820, 46820,
	46820, 46820, 46820, 46820, 46820, 46820, 12343, 809, 958, -353,
	-1000, 1660, -1000, -1000, 2089, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 12343, 12343, -1000, -1000, -1000, -1000, -1000, 1829, -1000,
	229, 59, 243, -1000, 35120, 401, 842, -1000, 1827, 34470,
	-1000, -357, -358, -359, -363, -1000, -1000, -1000, -365, -371,
	-1000, -1000, -1000, 18868, 18868, 18868, 18868, -169, -1000, 993,
	19518, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 144, 1017,
	19518, 19518, 19518, 19518, 19518, 19518, 19518, 19518, 19518, 19518,
	19518, 19518, 19518, 19518, 19518, -1000, -1000, 26670, 6712, 6712,
	761, 761, 761, 761, -1000, -108, 1821, 46170, -1000, -1000,
	-1000, 703, 18868, 18868, 761, -1000, 1242, 16268, 33820, 18218,
	18218, 18868, 845, 1002, 46170, 18868, -1000, 1320, -1000, -1000,
	-1000, 1068, -1000, 948, 2240, 2240, 2240, 2240, 18868, 18868,
	18868, 18868, 18868, 18868, 18868, 18868, 18868, 18868, 2240, 45520,
	45520, 848, 18868, 18868, 18868, 18868, 18868, 18868, 14967, 18868,
	18868, 19518, 18868, 18868, 18868, 1320, 18868, 18868, 18868, 18868,
	18868, 18868, 18868, 18868, 18868, 18868, 18868, 18868, 18868, 18868,
	18868, 18868, 18868, 18868, 18868, 18868, 18868, 18868, 18868, 18868,
	18868, 18868, 18868, 1320, 18868, 1250, 18868, 18868, 18218, 13655,
	18218, 18218, 18218, 18218, 18218, -1000, -1000, -1000, -1000, -1000,
	18868, 18868, 18868, 18868, 18868, 18868, 18868, 18868, 1320, 18868,
	18868, 18868, 18868, 18868, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1459, 1376, 1352, 18868, -1000, 1810,
	-1000, -154, 24070, 18868, 1652, 2423, 2016, 45520, -1000, -1000,
	-1000, 2350, -1000, 2350, 1459, 2327, 2095, 18218, -1000, -1000,
	2327, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1718,
	-1000, 46820, 1808, 2302, 45520, 2086, 1650, 348, -1000, 18868,
	18868, 1807, -1000, 1332, 46820, -1000, -169, -1000, 33170, -1000,
	-1000, 11687, 46820, 410, 46820, -1000, 23420, 32520, 382, -1000,
	10, 1795, -1000, 28, 54, 15617, 760, -1000, -1000, -1000,
	192, 20168, 1560, 760, 152, -1000, -1000, -1000, 1899, -1000,
	1899, 1899, 1899, 1899, 348, 348, 348, 348, -1000, -1000,
	-1000, -1000, -1000, 1927, 1922, -1000, 1899, 1899, 1899, 1899,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1921, 1921, 1921,
	1900, 1900, 493, -1000, 18868, 412, 31870, 2281, 1141, 1006,
	325, 514, 2015, 1242, 1242, 1242, 514, -1000, 1301, 1285,
	1274, -1000, -449, 1805, -1000, -1000, 2390, -1000, -1000, 946,
	940, 931, 826, 45520, 290, 406, -1000, 489, -1000, 31870,
	1242, 903, 677, 1242, -1000, 1242, -1000, -1000, -1000, -1000,
	-1000, 1242, -1000, -1000, 1804, -1000, 1852, 1004, 928, 996,
	919, 1804, -1000, -1000, -109, 1804, -1000, 1804, -1000, 1804,
	-1000, 1804, -1000, 1804, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 838, 221, -224, 45520, 290, 538, -1000,
	537, 26670, -1000, -1000, -1000, 26670, 26670, -1000, -1000, -1000,
	-1000, 1573, 1566, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -435, 46820, -1000, 321, 839, 386, 431, 369,
	46820, 423, 2329, 2317, 2314, 2312, 2311, 312, 373, 46820,
	46820, 507, 2060, 46820, 2280, 46820, -1000, -1000, -1000, -1000,
	-1000, 1002, 46820, -1000, -1000, 958, 958, -1000, -1000, 46820,
	958, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 958,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 46820, -1000, -1000, -1000, -1000,
	-14, 227, -1000, -1000, 45520, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -111, 260, 34, 399, -1000, -1000,
	-1000, -1000, -1000, 2335, -1000, 1002, 909, 877, -1000, 1859,
	-1000, -1000, 1090, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	144, 19518, 19518, 19518, 1898, 560, 1061, 1217, 1565, 1098,
	1098, 918, 918, 776, 776, 776, 776, 776, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1552, -1000, 1859, 46170,
	1682, 13655, 1232, 2019, 1320, 2837, -1000, 1677, -1000, 1677,
	2040, 883, -1000, 18868, 1320, 2833, -1000, -1000, 1320, 1320,
	1320, 18868, -1000, -1000, 18868, 18868, 18868, 18868, 1006, 1006,
	1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 18868, 1800,
	1799, 2421, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1196, 1006, 1006, 1006, 1006, 1006, 18868,
	1960, -1000, -1000, -1000, 1316, 2828, 1666, 2824, 1006, 1006,
	-1000, 1006, 2818, 2811, 1320, 1627, 1320, 1798, -1000, 2763,
	1006, 2756, 2751, 2746, 2023, 2739, 2733, 2724, 1006, 1006,
	1006, 2001, 2720, 2715, 2694, 2657, 2637, 2627, 2579, 2462,
	2319, 1006, -171, 1006, 1320, -1000, -1000, -1000, -1000, -1000,
	2309, 1992, 1320, 1796, 1859, 700, -1000, -1000, 1677, 1320,
	1320, 1677, 1677, 2273, 2260, 2244, 2239, 2228, 2223, 1006,
	1006, -1000, 1006, 2208, 2204, 1985, 1964, 1320, -1000, 1352,
	46820, -1000, -308, -1000, -2, 709, 1859, -1000, 30570, 1320,
	-1000, 5987, -1000, 1045, -1000, -1000, -1000, -1000, -1000, 27970,
	1739, 2327, -1000, -1000, 1859, 1671, -1000, -1000, 348, 116,
	27320, 758, 758, 154, 1002, 1002, 18868, -1000, -1000, -1000,
	-1000, -1000, -1000, 693, 2407, 521, 1859, -1000, 1809, 2643,
	-1000, -1000, -1000, 2300, 21469, -1000, -1000, 1859, 1859, 46820,
	1833, 1768, -1000, 680, -1000, 1249, 1795, 10, 14, -1000,
	-1000, -1000, -1000, 1002, -1000, 1272, 420, 4082, -1000, 499,
	-1000, -1000, -1000, -1000, 2156, 108, -1000, -1000, -1000, 342,
	348, -1000, -1000, -1000, -1000, -1000, -1000, 1547, 1547, -1000,
	-1000, -1000, -1000, -1000, 1139, -1000, -1000, -1000, 1122, -1000,
	-1000, 2121, 2053, 412, -1000, -1000, 833, 1545, -1000, -1000,
	2171, 833, 833, 45520, -1000, -1000, 1532, 2281, 321, 46820,
	866, 2059, -1000, 2015, 2015, 2015, 46820, -1000, -1000, -1000,
	-1000, -1000, -1000, -442, 64, 393, -1000, -1000, -1000, 672,
	45520, 1667, -1000, 286, -1000, 1526, -1000, 45520, -1000, 1656,
	1911, 1242, 1242, -1000, -1000, -1000, 45520, 1859, -1000, -1000,
	-1000, -1000, 621, 2220, 295, -1000, -1000, -189, -1000, -1000,
	290, 286, 46170, 1242, 760, -1000, -1000, -1000, -1000, -1000,
	-433, 1634, 576, 292, 330, 46820, 46820, 46820, 46820, 46820,
	640, -1000, -1000, 46, -1000, -1000, 267, -1000, -1000, -1000,
	-1000, 267, -1000, -1000, -1000, -1000, 363, 534, -1000, 46820,
	46820, 765, -1000, -1000, -1000, 949, -1000, -1000, 949, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2225, 46820, 29, -404, -1000, -397, 18868, -1000, -1000,
	-1000, -1000, 1081, 556, 1061, 19518, 19518, 19518, -1000, -1000,
	-1000, 995, 995, 26670, -1000, 18868, 18218, -1000, -1000, 18868,
	18868, 849, -1000, 18868, 1208, -1000, 18868, -1000, -1000, -1000,
	1352, 1006, 1006, 1006, 1006, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1832, 18868, 18868, 18868, 1320,
	368, -1000, -1000, -1000, -1000, -1000, 2419, -1000, 18868, -1000,
	26670, 18868, 18868, 18868, -1000, -1000, -1000, 18868, 18868, -1000,
	-1000, 18868, 18868, -1000, 18868, 18868, 18868, -1000, 18868, 18868,
	18868, 18868, -1000, -1000, -1000, -1000, 18868, 18868, 18868, 18868,
	18868, 18868, 18868, 18868, 18868, 18868, -1000, -1000, 31870, 82,
	-171, 1250, 82, 1250, -1000, 18218, 12999, -1000, -1000, -1000,
	-1000, -1000, 18868, 18868, 18868, 18868, 18868, 18868, -1000, -1000,
	-1000, 18868, 18868, -1000, 18868, -1000, 18868, -1000, -1000, -1000,
	-1000, -1000, 709, -1000, 677, 677, 677, 45520, -1000, -1000,
	-1000, -1000, 1793, -1000, 2340, -1000, 2114, 2111, 2418, 2407,
	-1000, 23420, 2327, -1000, -1000, 45520, -295, -1000, 2139, 2251,
	758, 758, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 11031,
	2350, 18868, 2055, 46170, 139, -1000, 22770, 45520, 46170, 23420,
	23420, 23420, 23420, 23420, -1000, 2071, 2063, -1000, 2081, 2080,
	2136, 46820, -1000, 1459, 1631, -1000, 18868, 25370, 1772, 23420,
	-1000, -1000, 23420, 46820, 10375, -1000, -1000, 19, 27, -1000,
	-1000, -1000, -1000, 192, -1000, -1000, 414, 2295, 2165, -1000,
	-1000, -1000, -1000, -1000, 1625, -1000, 1623, 1782, 1598, 221,
	-1000, 1976, 2215, 833, 833, -1000, 1121, -1000, 1242, 1533,
	1519, -1000, -1000, -1000, 567, -1000, 2270, 46820, 2046, 2045,
	2044, -1000, -447, 1111, 1910, 1975, 18868, 1904, 2389, 1759,
	45520, -1000, -1000, 46170, -1000, 315, -1000, 412, 45520, -1000,
	-1000, -1000, 406, 46820, -1000, 8004, -1000, -1000, -1000, 286,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 46820, 313, -1000,
	1901, 1237, -1000, -1000, 1982, -1000, -1000, -1000, -1000, 235,
	383, 1516, 258, 1498, 258, -1000, 46820, 657, 2053, 46820,
	-1000, -1000, -1000, 958, 958, -1000, -1000, 2213, -1000, 1242,
	1006, 19518, 19518, -1000, 761, 285, -151, 1899, 1899, -1000,
	1899, 1900, -1000, 1899, 220, 1899, 199, 1899, -1000, -1000,
	1320, 1320, 1352, -1000, 1943, 1374, -1000, 1002, 18868, 2198,
	-1000, -1000, -1000, -1000, -1000, -48, 2192, 2183, 1006, -1000,
	1896, 1892, 18868, 1006, 1320, 1906, 1006, 1006, 1006, 1006,
	-1000, 1002, 1352, 2152, 1352, 1006, 1006, 2142, 370, 1006,
	1592, 1592, 1592, 1592, 1592, 1352, 1352, 1352, 1352, 45520,
	-1000, -171, -1000, -1000, -207, -213, -1000, 1320, -171, 1779,
	1320, -1000, 1865, 1839, 2116, 1784, 1006, 2079, 1006, 1006,
	1006, 1777, -1000, 2333, 2333, 2333, 1572, 1045, 46820, -1000,
	-1000, -1000, -1000, 2407, 2405, 1775, -1000, -1000, 116, 506,
	-1000, 2180, 2251, -1000, 2388, 2133, 2384, -1000, -1000, -1000,
	-1000, -1000, 1002, -1000, 2245, 1780, -1000, 837, 1639, -1000,
	-1000, 17568, 1585, 2105, 669, 1572, 1825, 2643, 2014, 2042,
	2916, -1000, -1000, -1000, -1000, 2062, -1000, 2050, -1000, -1000,
	1872, -1000, 1713, 410, 23420, 1824, 1824, -1000, 653, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 991, 6874, 2440, -1000,
	1482, -1000, 1262, 193, 1101, -1000, -1000, 833, 833, -1000,
	900, 894, -1000, 46820, 1890, -1000, 348, 1454, 348, 1093,
	-1000, 1092, -1000, -1000, -1000, -1000, 1941, 1996, -1000, -1000,
	-1000, -1000, 46820, -1000, -1000, 46820, 46820, 46820, 1880, 2383,
	-1000, 18868, 1879, 835, 2112, 45520, 45520, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 505, 833,
	-415, 372, 334, 833, 833, 833, -448, -1000, -1000, 1559,
	1557, -1000, -126, -1000, 18868, -1000, -1000, -1000, 1118, 1118,
	1424, 1422, 1407, -1000, 1872, -1000, -1000, -1000, 1417, -1000,
	-1000, -117, 45520, 45520, 45520, 45520, -1000, -1000, 1034, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 761, 1320, 331, -120, 1320, -1000, -1000, 348, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18868,
	-1000, 18868, -1000, 1002, 18868, 2350, 1400, 18868, 18868, -1000,
	1089, 1078, 1006, -1000, -1000, -1000, 18868, -1000, -1000, -1000,
	-1000, -1000, 18868, -1000, -1000, -1000, 18868, 288, 995, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1320,
	408, -1000, -1000, -1000, -1000, 2415, -1000, 1320, 18868, -1000,
	-1000, 18868, -1000, 18868, 18868, -1000, 18868, -1000, 18868, -1000,
	-1000, -1000, -1000, 18868, 1859, 2200, 1859, 1859, 25370, -1000,
	-1000, 2405, 2356, 2380, 2120, 2127, 2127, 2180, -1000, 2376,
	2362, -1000, 1397, 2359, 1395, 888, -1000, 46170, 18868, 139,
	-1000, 418, 45520, 139, 45520, -1000, 2398, -1000, -1000, 18868,
	1876, -1000, 18868, -1000, -1000, -1000, -1000, 6712, 2407, 1824,
	-1000, -1000, 783, -1000, 18868, -1000, -1000, -1000, 4079, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1393, 1391, -1000,
	-1000, 1873, 18868, -1000, -1000, -1000, 1414, 1406, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1872, -1000, -1000, -1000,
	-1000, 406, -446, 2084, 45520, 1071, -1000, 1531, 1759, 376,
	139, 1385, 833, 833, 833, 1062, 1042, 30570, 1529, -1000,
	45520, 467, -1000, 406, -1000, -142, -144, 1006, -1000, -1000,
	2289, -1000, -1000, 12999, -1000, -1000, 1871, 2008, -1000, -1000,
	-1000, -1000, 2082, -107, -123, -1000, -1000, 1006, 1006, 1675,
	1320, -1000, 1006, 1006, 1377, 1360, -1000, 1006, 1352, 1735,
	-1000, 288, 1320, 2037, -1000, -1000, 6712, -1000, -1000, 2398,
	2355, 82, -1000, -1000, 302, 82, 1002, 1720, 1006, 1679,
	1658, 1006, 1006, 26020, -1000, 2353, 2352, 31220, 31220, 709,
	2356, -179, 18868, 18868, 2115, 1084, -1000, -1000, -1000, -1000,
	1379, 1337, -1000, 1311, -1000, 2439, -1000, 1002, -1000, 139,
	-1000, 651, 1639, -1000, 2350, 1002, 45520, 1002, 96, 2398,
	-1000, 1006, -1000, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
	1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
	1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
	1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
	1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
	1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
	1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
	1859, 1859, 1859, -1000, -1000, 45520, 2052, -1000, -1000, 2288,
	1420, 62, -1000, 1344, 1759, -1000, -1000, 143, -1000, 18868,
	-1000, 30570, 1305, 1280, -1000, -1000, -1000, -1000, -448, -1000,
	-1000, -1000, -1000, -1000, -1000, 395, 1684, -1000, 824, 45520,
	46820, -1000, 2076, -1000, -1000, -1000, 18868, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 18868, -1000, 1320, 2036, -1000,
	-290, -1000, -412, 18868, -171, -1000, -1000, -171, -1000, 18868,
	-1000, -1000, 18868, -1000, 18868, -1000, -1000, 1413, -1000, -1000,
	-1000, -1000, -1000, 1413, 1413, -1000, -179, -1000, 1669, -1000,
	45520, 1002, 1627, -1000, 1043, -1000, -1000, -1000, -1000, -1000,
	46170, 1639, 45520, -1000, 1405, 1320, 1859, 2350, -1000, 1365,
	-1000, 395, -1000, 1864, 1975, -1000, -1000, -1000, 16918, -1000,
	-1000, -1000, -1000, -1000, 225, -112, 12999, 9719, 1359, -1000,
	-110, 1006, 1352, -1000, -382, -1000, -1000, -1000, -1000, 269,
	-1000, -1000, 1627, -1000, -1000, 1637, 1536, 1525, 29920, -1000,
	-1000, -1000, -1000, -179, -1000, -1000, 2286, -1000, -1000, 1594,
	-1000, -1000, 25370, 44870, -1000, -103, 367, -112, 18868, 1861,
	1320, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20,
	-1000, -1000, -1000, -1000, -1000, 1982, -121, -1000, -1000, -1000,
	296, -407, -194, -221, -1000, -1000, 19518, -1000, 18868, -1000,
	18868, -1000, 18868, -1000, -1000, -1000, 45520, 1859, -1000, 1343,
	-1000, 3704, -217, 2032, -1000, -49, -1000, -1000, -1000, 988,
	1251, -1000, -1000, -1000, -1000, -1000, -1000, 1790, 45520, -1000,
	490, -1000, -1000, -117, -124, 872, -1000, -1000, -1000, -1000,
	-1000, 1347, 1319, 1006, -1000, 45520, -1000, 44870, -220, 760,
	6712, -1000, 2021, 2018, 2413, -1000, -1000, -1000, -1000, -1000,
	-1000, -454, 1341, 323, -1000, -1000, 296, -1000, 18868, -1000,
	18868, -1000, 1320, -1000, -1000, 2258, 96, -1000, 2436, -1000,
	2430, 803, 803, -1000, 1030, -454, -1000, -1000, 1006, 1006,
	-1000, -223, -1000, -1000, -1000, -1000, -1000, 484, 1041, -1000,
	-1000, -1000, -1000, -1000, 6712, -1000, -1000, -1000, 215, 215,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 3018, 3015, 38, 1, 37, 36, 3014, 93, 114,
	212, 30, 197, 113, 3013, 3011, 3010, 3009, 3008, 3006,
	3005, 176, 170, 169, 3004, 3002, 3001, 3000, 2999, 2998,
	2997, 2996, 2995, 2991, 178, 160, 189, 2988, 2982, 2981,
	117, 188, 79, 85, 190, 2977, 2971, 81, 2968, 2964,
	2962, 186, 185, 183, 934, 2961, 182, 116, 53, 2951,
	2949, 2948, 2947, 2946, 2944, 2943, 2942, 2941, 2939, 2937,
	2936, 2935, 2934, 2933, 2932, 2931, 269, 2924, 2923, 23,
	2920, 86, 2919, 2917, 2913, 2911, 11, 2910, 2908, 16,
	40, 2907, 2901, 51, 2900, 2896, 2894, 2891, 2889, 22,
	2886, 27, 2884, 39, 2883, 2882, 125, 2879, 2877, 2869,
	41, 2868, 2867, 2864, 2860, 2858, 2855, 2853, 140, 2852,
	2850, 2847, 251, 216, 2846, 2842, 167, 143, 107, 2840,
	2830, 115, 191, 2819, 121, 2818, 2817, 2813, 150, 2811,
	138, 2810, 2809, 68, 71, 2807, 371, 2806, 2802, 10,
	21, 62, 9, 18, 19, 2797, 2795, 67, 92, 2794,
	131, 2793, 2792, 99, 69, 2791, 98, 103, 2790, 2789,
	13, 4, 2788, 2, 7, 3, 73, 2787, 2785, 119,
	2784, 2783, 2780, 97, 2775, 2773, 5742, 2772, 95, 129,
	101, 77, 2770, 48, 54, 2765, 2761, 2759, 2758, 2756,
	56, 2754, 2753, 2752, 135, 341, 159, 2751, 45, 83,
	58, 133, 2749, 63, 80, 193, 163, 2747, 2746, 137,
	132, 2744, 2742, 60, 46, 44, 2741, 112, 128, 120,
	111, 109, 134, 2740, 2739, 65, 75, 2738, 2736, 2732,
	2731, 164, 2730, 2729, 74, 2727, 59, 2703, 162, 2701,
	17, 64, 2700, 47, 179, 2696, 76, 2694, 2685, 72,
	105, 70, 43, 2670, 168, 171, 126, 177, 2666, 2648,
	57, 2644, 2642, 2633, 192, 322, 2632, 2628, 78, 166,
	142, 147, 88, 2626, 330, 2625, 2624, 90, 2619, 4350,
	2623, 42, 161, 2621, 2610, 6555, 157, 50, 33, 2609,
	108, 2602, 2600, 2599, 2598, 223, 165, 106, 154, 61,
	2590, 2589, 2586, 15, 2585, 2581, 2575, 2574, 2572, 2568,
	91, 35, 34, 32, 202, 66, 24, 139, 153, 89,
	2567, 2564, 2562, 123, 87, 2559, 156, 155, 124, 172,
	2549, 180, 144, 136, 2541, 102, 31, 2537, 2536, 2534,
	2532, 100, 2529, 2527, 2520, 2517, 151, 145, 122, 82,
	2516, 84, 118, 148, 146, 55, 2511, 49, 2510, 2509,
	29, 187, 28, 2508, 14, 104, 234, 2506, 5492, 184,
	2502, 20, 343, 158, 2494, 2493, 8, 12, 6, 2486,
	2485, 2483, 2479, 130, 2478, 2475, 2473, 2469, 26, 52,
	25, 5, 110, 94, 2468, 2464, 141, 2463, 2462, 3069,
	0, 127, 2459, 198,
}

//line sql.y:7926
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 407, 408, 408, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 256, 378,
	379, 379, 254, 254, 32, 71, 34, 34, 33, 33,
	36, 36, 35, 8, 8, 8, 9, 9, 9, 9,
	9, 9, 9, 9, 10, 10, 10, 10, 10, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 19, 20,
	12, 12, 21, 21, 104, 104, 22, 23, 23, 23,
	23, 411, 411, 181, 181, 179, 179, 180, 180, 259,
	259, 24, 263, 263, 265, 265, 265, 265, 255, 255,
	255, 25, 25, 264, 264, 266, 266, 266, 269, 269,
	269, 269, 308, 308, 308, 26, 26, 26, 26, 26,
	124, 124, 381, 381, 380, 374, 374, 373, 373, 372,
	377, 377, 376, 376, 375, 38, 39, 48, 48, 48,
	48, 49, 50, 382, 382, 347, 55, 55, 54, 54,
	54, 54, 54, 54, 56, 56, 52, 52, 51, 51,
	53, 53, 349, 349, 335, 335, 348, 348, 348, 348,
	348, 348, 348, 334, 334, 135, 135, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 397, 397, 397, 396, 396, 234,
	234, 234, 234, 234, 234, 234, 234, 145, 145, 157,
	157, 157, 157, 157, 143, 143, 144, 142, 142, 142,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 156,
	156, 152, 152, 152, 153, 153, 153, 154, 154, 398,
	398, 398, 398, 313, 313, 313, 313, 316, 316, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 315, 315,
	315, 315, 315, 317, 317, 317, 317, 317, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 319, 319, 319, 319, 319, 319,
	319, 319, 333, 333, 320, 320, 328, 328, 329, 329,
	329, 330, 330, 330, 331, 331, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 327, 327, 326, 326, 326,
	336, 361, 361, 360, 360, 358, 358, 358, 358, 358,
	358, 358, 358, 345, 345, 355, 355, 355, 355, 355,
	344, 344, 340, 340, 340, 341, 341, 342, 342, 339,
	339, 343, 343, 357, 357, 356, 356, 337, 337, 338,
	338, 363, 399, 399, 399, 399, 399, 400, 400, 364,
	389, 391, 391, 391, 390, 390, 387, 388, 386, 386,
	386, 386, 386, 81, 81, 81, 282, 282, 283, 283,
	353, 353, 352, 352, 352, 354, 354, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 277, 277,
	277, 385, 385, 385, 385, 385, 385, 384, 384, 384,
	350, 350, 350, 383, 383, 57, 57, 214, 214, 402,
	402, 403, 403, 403, 45, 45, 45, 45, 45, 45,
	44, 44, 44, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 46, 46, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 106, 106, 107, 107, 107, 107,
	109, 109, 109, 366, 366, 58, 58, 3, 3, 169,
	171, 172, 172, 170, 170, 170, 170, 170, 170, 60,
	60, 59, 59, 174, 173, 175, 175, 175, 1, 1,
	2, 2, 4, 4, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 332, 332, 332, 365,
	365, 367, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 112, 111, 111, 110, 113, 113, 113, 113,
	113, 113, 113, 113, 369, 369, 369, 61, 61, 370,
	321, 322, 323, 5, 6, 346, 368, 120, 120, 28,
	37, 37, 29, 29, 29, 29, 30, 30, 62, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 276, 276, 285, 285, 275, 275, 300, 300, 300,
	278, 278, 278, 279, 279, 395, 395, 395, 272, 272,
	64, 64, 64, 301, 301, 301, 301, 66, 66, 404,
	404, 405, 405, 406, 406, 406, 67, 68, 68, 303,
	303, 304, 304, 69, 70, 82, 82, 82, 82, 82,
	82, 82, 105, 105, 105, 15, 15, 15, 15, 78,
	78, 78, 14, 14, 65, 65, 72, 392, 392, 393,
	394, 394, 394, 394, 73, 75, 31, 31, 31, 31,
	31, 31, 130, 130, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 125, 125, 125, 119,
	119, 412, 76, 77, 77, 123, 123, 123, 116, 116,
	116, 122, 122, 122, 16, 16, 17, 258, 258, 18,
	18, 127, 127, 129, 129, 129, 129, 129, 131, 131,
	131, 131, 131, 131, 131, 126, 126, 128, 128, 128,
	128, 293, 293, 293, 292, 292, 163, 163, 165, 164,
	164, 166, 166, 167, 167, 167, 167, 212, 212, 189,
	189, 251, 251, 252, 252, 250, 250, 257, 257, 253,
	253, 253, 253, 260, 260, 168, 168, 168, 168, 176,
	176, 177, 177, 178, 178, 302, 302, 298, 298, 298,
	297, 297, 182, 182, 182, 184, 183, 183, 183, 183,
	185, 185, 187, 187, 186, 186, 188, 193, 193, 192,
	192, 190, 190, 190, 190, 191, 191, 191, 191, 194,
	194, 140, 140, 140, 140, 140, 140, 140, 155, 155,
	155, 155, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 241, 241, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 149, 217, 217, 216, 216, 83, 83,
	83, 84, 84, 85, 85, 85, 85, 85, 86, 86,
	86, 86, 86, 141, 141, 88, 88, 87, 87, 207,
	207, 290, 290, 89, 90, 90, 93, 93, 92, 91,
	91, 97, 97, 94, 94, 96, 96, 95, 98, 98,
	99, 100, 100, 273, 273, 195, 195, 203, 203, 203,
	203, 196, 196, 196, 196, 196, 196, 196, 204, 204,
	204, 211, 205, 205, 201, 201, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 160, 160, 160, 160, 222, 222, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 148, 148, 161, 161, 161, 161, 162,
	162, 162, 162, 162, 162, 162, 310, 310, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 413,
	413, 324, 324, 324, 324, 202, 202, 202, 202, 202,
	121, 121, 121, 121, 121, 307, 307, 307, 311, 311,
	311, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 312, 312, 220, 220,
	117, 117, 218, 218, 219, 221, 221, 213, 213, 213,
	213, 215, 215, 198, 198, 198, 223, 223, 224, 224,
	101, 102, 102, 103, 103, 225, 225, 227, 226, 226,
	228, 229, 229, 229, 230, 230, 231, 231, 231, 47,
	47, 47, 47, 47, 42, 42, 42, 42, 43, 43,
	43, 43, 132, 132, 132, 132, 134, 134, 133, 133,
	79, 79, 80, 80, 80, 138, 138, 139, 139, 139,
	136, 136, 137, 137, 248, 248, 232, 232, 232, 239,
	239, 239, 235, 235, 237, 237, 237, 238, 238, 238,
	236, 245, 245, 247, 247, 246, 246, 242, 242, 243,
	243, 244, 244, 244, 240, 240, 197, 197, 197, 197,
	197, 249, 249, 249, 249, 261, 261, 208, 208, 210,
	210, 209, 209, 159, 262, 262, 270, 267, 267, 268,
	268, 294, 294, 294, 271, 271, 284, 284, 280, 280,
	281, 281, 274, 274, 286, 286, 286, 74, 206, 206,
	362, 362, 359, 289, 289, 291, 291, 295, 295, 299,
	299, 296, 296, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 409, 410, 305,
	306, 306, 306,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	0, 1, 1, 1, 2, 3, 2, 3, 0, 1,
	3, 1, 4, 3, 3, 4, 3, 2, 3, 4,
	3, 4, 2, 7, 1, 3, 3, 3, 3, 1,
	2, 1, 1, 3, 2, 3, 3, 2, 5, 7,
	10, 9, 7, 8, 1, 1, 10, 11, 9, 8,
	8, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 1, 3, 3, 3, 3, 3, 1, 1,
	2, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 2, 2, 6, 12, 2,
	0, 2, 0, 2, 1, 0, 2, 1, 3, 3,
	0, 1, 1, 3, 3, 6, 4, 7, 8, 8,
	8, 6, 3, 1, 1, 5, 0, 1, 1, 1,
	1, 2, 2, 2, 0, 1, 4, 4, 4, 4,
	4, 4, 2, 4, 1, 3, 1, 1, 3, 4,
	3, 3, 3, 5, 10, 0, 2, 0, 2, 3,
	5, 3, 4, 2, 3, 2, 3, 3, 3, 3,
	2, 2, 4, 4, 1, 1, 1, 1, 1, 0,
	2, 2, 3, 3, 2, 2, 2, 1, 1, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 5, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 0, 3, 3, 2,
	2, 2, 1, 2, 2, 0, 1, 0, 2, 2,
	5, 0, 1, 1, 2, 1, 3, 2, 1, 1,
	3, 3, 3, 0, 1, 4, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 4, 3, 1, 3,
	1, 7, 6, 7, 7, 8, 8, 0, 1, 5,
	2, 1, 1, 1, 0, 1, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 1, 2, 0, 1,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 0, 2, 0,
	2, 0, 2, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 5, 5, 4, 4, 4, 6, 5, 5,
	5, 2, 2, 2, 2, 3, 3, 3, 4, 3,
	3, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 4, 4, 2,
	11, 3, 6, 8, 6, 6, 6, 13, 8, 6,
	10, 5, 5, 5, 7, 5, 5, 5, 5, 5,
	7, 7, 5, 5, 0, 6, 5, 6, 4, 5,
	0, 8, 9, 0, 3, 0, 1, 0, 3, 8,
	4, 1, 3, 3, 6, 7, 7, 8, 4, 0,
	1, 0, 1, 3, 3, 1, 1, 2, 1, 1,
	0, 2, 0, 2, 5, 3, 7, 4, 4, 4,
	4, 3, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 0, 2, 2, 1,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 3, 3, 0, 2, 2, 2,
	2, 2, 2, 2, 4, 4, 3, 0, 1, 4,
	3, 4, 4, 3, 3, 3, 2, 1, 3, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 2, 4, 4, 4,
	4, 4, 2, 3, 3, 3, 3, 5, 2, 3,
	3, 2, 3, 4, 4, 4, 3, 4, 4, 5,
	3, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 1, 1,
	2, 1, 3, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 3, 2, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 4, 4, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 6, 4,
	7, 6, 1, 3, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 1, 1, 0, 1, 1, 0,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	1, 0, 1, 1, 5, 5, 4, 0, 2, 4,
	4, 0, 1, 0, 1, 2, 3, 4, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 3, 1, 1, 2, 3,
	7, 0, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 3, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 1, 1,
	2, 6, 5, 6, 6, 0, 2, 3, 3, 0,
	2, 3, 3, 3, 2, 3, 1, 6, 3, 4,
	3, 1, 3, 4, 5, 6, 3, 4, 5, 6,
	3, 4, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 2, 2, 2,
	1, 1, 2, 7, 7, 6, 6, 2, 2, 1,
	6, 3, 3, 3, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 0, 1, 2, 5, 0,
	3, 0, 1, 4, 4, 2, 0, 1, 1, 2,
	2, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	5, 1, 3, 0, 3, 1, 1, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 4, 8, 6,
	8, 6, 5, 4, 10, 2, 2, 1, 2, 2,
	2, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 8, 8, 8,
	6, 5, 4, 4, 4, 4, 4, 7, 4, 4,
	6, 6, 6, 8, 6, 6, 4, 4, 3, 4,
	6, 6, 4, 4, 4, 6, 8, 6, 4, 6,
	6, 8, 10, 7, 8, 8, 9, 4, 4, 4,
	4, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 4, 4, 6, 5, 9, 6, 9, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 6, 8,
	10, 12, 14, 6, 8, 8, 10, 12, 14, 6,
	8, 10, 12, 6, 8, 4, 4, 3, 4, 6,
	6, 4, 6, 4, 6, 8, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 3, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 1, 3,
	5, 1, 1, 1, 2, 2, 0, 3, 0, 2,
	2, 1, 3, 0, 1, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 4, 1, 1, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -407, -76, -412, -7, -11, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -29, -30, -62, -63,
	-64, -66, -67, -68, -69, -70, -14, -65, -31, -32,
	-71, -72, -73, -74, -75, -16, -17, -18, -9, -8,
	-13, 10, 11, -104, -33, 33, -38, -48, 225, -49,
	-39, 226, -50, 228, 227, 264, 229, 257, 75, 312,
	313, 315, 316, 317, 318, -105, 262, 263, 231, 37,
	46, 34, 35, 38, 235, 270, 271, 234, -10, -34,
	9, -409, 12, 446, 259, 258, 29, -12, 508, 87,
	-77, -408, 660, -248, -232, 23, 34, 30, -231, -227,
	-123, -232, 21, 19, 8, -76, -76, -76, 13, 14,
	-76, -347, -349, 87, 159, 87, -76, -55, -54, -52,
	-51, -53, -56, 32, -45, -46, -371, -44, -41, 230,
	227, 274, 123, 124, 264, 265, 266, 229, 248, 263,
	267, 262, 283, -40, 82, 34, 508, 511, -354, 226,
	232, 233, 228, 447, 126, 125, 76, -351, 369, 541,
	630, -56, 632, 101, 104, 631, 45, 238, 633, 634,
	635, 548, 636, 247, 637, 638, 639, 640, 646, 589,
	647, 648, 649, 127, 8, -76, -299, -295, 91, -288,
	505, 250, 539, 540, 299, 82, 42, 514, 366, 369,
	541, 476, 630, 312, 328, 322, 481, 482, 483, 349,
	341, 506, 542, 515, 302, 251, 287, 624, 339, 135,
	632, 306, 543, 265, 374, 375, 544, 376, 101, 315,
	413, 645, 305, 545, 643, 104, 631, 320, 80, 475,
	52, 627, 45, 260, 337, 234, 333, 633, 288, 546,
	517, 281, 126, 123, 652, 37, 331, 51, 31, 642,
	125, 50, 634, 150, 547, 635, 548, 378, 356, 618,
	49, 379, 266, 549, 85, 271, 510, 309, 626, 380,
	495, 332, 381, 298, 641, 231, 550, 609, 601, 602,
	382, 383, 619, 361, 357, 362, 497, 551, 405, 480,
	384, 605, 606, 659, 53, 552, 553, 620, 124, 554,
	79, 636, 81, 326, 327, 555, 296, 249, 500, 501,
	407, 353, 458, 465, 466, 111, 112, 461, 113, 467,
	114, 468, 469, 470, 459, 115, 108, 460, 471, 472,
	354, 355, 116, 473, 110, 109, 462, 464, 117, 474,
	247, 36, 385, 507, 300, 59, 304, 275, 408, 47,
	359, 656, 46, 614, 502, 556, 617, 352, 348, 455,
	54, 557, 558, 559, 560, 477, 637, 351, 325, 347,
	651, 4, 293, 478, 638, 63, 233, 364, 363, 365,
	282, 404, 344, 561, 562, 563, 254, 83, 564, 334,
	22, 565, 566, 386, 289, 567, 57, 568, 569, 411,
	263, 570, 55, 639, 40, 571, 268, 653, 640, 572,
	573, 574, 575, 270, 576, 388, 577, 603, 604, 387,
	358, 360, 503, 277, 389, 509, 578, 310, 330, 267,
	644, 579, 255, 491, 492, 493, 494, 625, 499, 498,
	269, 274, 262, 412, 256, 580, 581, 582, 583, 584,
	303, 600, 585, 586, 316, 646, 456, 44, 587, 588,
	589, 590, 591, 297, 292, 406, 415, 62, 84, 371,
	592, 593, 623, 324, 321, 290, 594, 313, 56, 647,
	648, 649, 284, 650, 484, 485, 486, 487, 10, 657,
	658, 479, 391, 127, 294, 295, 48, 345, 276, 595,
	307, 596, 335, 336, 350, 323, 346, 314, 610, 278,
	392, 457, 264, 597, 414, 291, 367, 372, 308, 513,
	496, 283, 393, 622, 512, 488, 489, 343, 340, 285,
	490, 598, 394, 239, 279, 280, 599, 611, 395, 396,
	301, 397, 398, 399, 400, 401, 403, 311, 402, 607,
	608, 286, 511, 319, 338, 373, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 454, 237, -76, 237, -186, -295,
	237, -267, 375, -285, 377, 390, 385, 395, 383, -276,
	386, 388, 277, -395, 405, 237, 392, 225, 378, 387,
	396, 397, 301, 403, 398, 311, 402, 286, 399, 400,
	401, -378, 177, 635, 650, 135, 342, 382, 380, 406,
	614, 91, -301, 91, 92, 93, -288, 314, -303, 319,
	-289, -378, -288, 317, -76, -305, -305, -125, 614, 616,
	-205, -140, 143, -155, -158, -146, -150, -199, -200, -201,
	-202, -156, -215, -254, 166, 167, 174, 144, -211, -159,
	27, 504, 448, 447, 177, 32, -149, 220, 69, 70,
	450, 146, 58, 12, 423, 424, -157, 418, 425, 420,
	475, 477, 478, 479, 476, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 480, 452, 453, 118, 454,
	108, 110, 109, 455, 456, 457, 339, 502, 503, 497,
	500, 501, 499, 498, 354, 355, 458, 459, 460, 111,
	112, 113, 114, 115, 116, 117, 461, 464, 462, 463,
	465, 466, 467, 472, 473, 468, 469, 470, 471, 474,
	-85, -97, 530, 529, -98, -147, -148, -161, -162, -289,
	-295, 242, 417, 236, 172, 446, -151, -144, -213, 107,
	92, 93, -8, -209, 416, 421, 422, 426, 419, 516,
	518, 533, 534, 536, 521, 526, 525, 528, 491, 492,
	493, 494, 495, 496, 601, 602, 603, 604, 605, 606,
	607, 608, -378, -288, 91, -153, -152, -195, 94, 99,
	102, 103, 105, -401, 260, 335, 336, 119, -409, 628,
	90, 95, 96, 97, 98, 120, 121, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 45,
	391, 391, -186, -76, -76, -76, -76, -225, -123, -227,
	-10, -8, -409, 9, -76, -8, -9, -13, -34, -36,
	535, -35, -295, 100, -232, -248, 13, 162, 43, 51,
	-230, -231, -12, -8, -140, 20, 24, 25, -128, 168,
	-140, -295, -128, -274, 241, -76, -76, -263, -308, 314,
	-265, 406, 614, 405, -255, -268, 91, -254, -267, 404,
	-348, 159, -334, -338, -289, 252, -364, 248, -186, -357,
	-356, -289, -409, -124, -284, 238, 246, 245, 136, -382,
	139, 294, 417, 236, -51, -52, -53, -267, 176, 634,
	-106, 269, 273, 88, 88, -338, -337, -336, -383, 273,
	252, -363, -355, 244, 253, -344, 245, 246, -339, 238,
	137, -383, -339, 243, 253, 248, 252, 273, 273, 127,
	273, 127, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 268, -345, 151, -345, 512, 512, -351, -383, 248,
	238, -383, -383, 244, -286, -339, 240, 26, 240, 36,
	36, -345, -345, -345, -267, 176, -345, -345, -345, -345,
	281, 281, -345, -345, -345, -345, -345, -345, -345, -345,
	-345, -345, -345, -345, -345, -345, -345, -345, -345, 237,
	-382, -132, 402, 301, 82, -54, 283, -37, -186, -284,
	238, 239, -382, 270, -186, 221, -186, -278, 159, 16,
	-278, -275, 391, 389, 376, 381, -278, -278, -278, -278,
	284, 374, -340, 238, 36, 249, 391, 284, 374, 284,
	285, 284, 285, 384, 394, 284, -300, 15, 162, 417,
	379, 383, 277, 237, 278, 239, 393, 285, -300, 90,
	-279, 159, 284, 391, 280, -278, -278, -306, -409, -291,
	-289, -287, 230, 24, 142, 26, 28, 145, 177, 130,
	20, 146, 38, 232, 342, 248, 176, 244, 447, 225,
	73, 516, 418, 420, 416, 423, 449, 450, 417, 377,
	32, 14, 518, 29, 258, 25, 39, 170, 227, 149,
	519, 261, 27, 259, 118, 121, 521, 23, 76, 253,
	15, 246, 41, 17, 522, 523, 18, 242, 241, 162,
	238, 71, 12, 220, 30, 158, 67, 524, 137, 525,
	526, 527, 528, 131, 69, 159, 21, 654, 421, 422,
	34, 615, 504, 272, 172, 74, 60, 616, 143, 419,
	529, 530, 119, 531, 122, 77, 621, 139, 19, 72,
	43, 532, 273, 533, 243, 655, 534, 409, 535, 160,
	228, 446, 70, 161, 628, 536, 629, 236, 390, 9,
	451, 33, 257, 245, 129, 68, 537, 237, 148, 452,
	453, 240, 132, 120, 8, 136, 35, 13, 75, 78,
	424, 425, 426, 58, 128, 508, 147, 16, 538, 410,
	141, -378, 617, -306, -306, 33, 92, -404, -405, -406,
	508, 409, 240, -289, -186, -82, 609, 229, -130, 391,
	-118, 177, 635, 618, 619, 620, 617, 388, 625, 623,
	621, 284, 622, 88, 139, 141, 142, 4, -140, 158,
	-196, 151, 152, 153, 154, 155, 156, 157, 162, 143,
	145, 159, -241, 140, 163, 164, 165, 166, 167, 168,
	169, 171, 170, 172, 173, 160, 161, 176, 223, 224,
	-150, -150, -150, -150, -211, -217, -216, -409, -213, -378,
	-288, -295, -409, -409, -150, -273, -409, -409, -150, -409,
	-409, -409, -220, -140, -409, -409, -413, -409, -413, -413,
	-324, -409, -324, -409, -409, -409, -409, -409, -409, -409,
	-409, -409, -409, -409, -409, -409, -409, -409, -409, -409,
	-409, -409, -409, -409, -409, -409, -409, -409, -409, -409,
	-409, -409, -409, -409, -409, -409, -409, -409, -409, -409,
	-409, -409, -409, -409, -409, -409, -409, -409, -409, -409,
	-409, -409, -409, -409, -409, -409, -409, -409, -409, -409,
	-409, -409, -409, -409, -409, -409, -409, -409, -409, 221,
	-409, -409, -409, -409, -409, -324, -324, -324, -324, -324,
	-409, -409, -409, -409, -409, -409, -409, -409, -409, -409,
	-409, -409, -409, -409, 103, 99, 102, 94, -215, 105,
	90, 90, 90, 90, -8, -9, -205, -409, -305, -392,
	-393, -189, -186, -409, 301, -289, -289, 270, -230, -12,
	-8, -225, -231, -227, -8, -76, -116, -129, 64, 65,
	-131, 25, 39, 68, 66, 24, -410, 89, -410, -248,
	-410, 88, -36, -251, 87, 62, 44, 90, 90, 88,
	22, -226, -228, -140, 15, -293, 4, -292, 26, -289,
	90, 221, 15, -187, 30, -186, -274, -274, 88, 91,
	314, -264, -266, 407, 409, 151, -294, -289, 90, 32,
	89, 88, -186, -313, -316, -318, -317, -319, -314, -315,
	339, 340, 177, 343, 345, 346, 347, 348, 349, 350,
	351, 352, 353, 356, 33, 260, 335, 336, 337, 338,
	357, 358, 359, 360, 362, 363, 364, 365, 322, 341,
	506, 323, 324, 325, 326, 327, 328, 330, 331, 332,
	333, 334, -379, -378, 87, 89, 88, -320, 87, -140,
	-132, 237, -378, 238, 238, 238, -76, 446, -345, -345,
	-345, 268, 20, -44, -41, -371, 19, -40, -41, 230,
	123, 124, 227, 87, -334, 87, -343, -379, -378, 87,
	137, 243, 136, -342, -339, -342, -343, -378, -213, -378,
	137, 137, -378, -378, -260, -289, -260, -260, 24, -260,
	24, -260, 24, 96, -289, -260, 24, -260, 24, -260,
	24, -260, 24, -260, 24, 32, 79, 80, 81, 32,
	83, 84, 85, -213, -378, -378, -213, -334, -213, -186,
	-378, -267, 96, 96, 96, -345, -345, 96, 90, 90,
	90, -345, -345, 96, 90, -297, -295, 90, 90, -384,
	254, 298, 300, 96, 96, 96, 96, 32, 90, -385,
	32, 642, 641, 643, 644, 645, 90, 96, 32, 96,
	32, 96, -289, 87, -186, -138, 288, 225, 227, 230,
	77, 90, 304, 305, 302, 307, 308, 151, 45, 88,
	240, 237, -378, -280, 242, -280, -289, -296, -295, -287,
	90, -140, -341, 15, 162, -300, -300, -278, -186, -341,
	-300, -278, -186, -278, -278, -278, -278, -300, -300, -300,
	-278, -295, -295, -186, -186, -186, -186, -186, -186, -186,
	-306, -279, -278, 617, 90, -272, 15, 77, -306, -306,
	88, 320, 410, 411, -304, 317, -78, -289, 90, -15,
	-11, -22, -21, -23, 151, 88, 508, -179, -186, 617,
	617, 617, 617, 617, 617, -140, -140, -140, -140, 531,
	-203, 119, 143, 120, 121, -158, -204, -209, -211, 106,
	162, 145, 159, -241, -146, -150, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -307,
	-289, 90, 177, -154, -153, 105, -401, -154, 505, 88,
	-216, 221, -140, -140, -378, -140, -289, -126, -128, -126,
	-140, -218, -219, 147, -213, -140, -410, -410, 96, 105,
	168, -122, 25, 39, -122, -122, -122, -122, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -122, -289,
	-289, -115, -114, 428, 429, 430, 431, 433, 434, 435,
	438, 439, 443, 444, 427, 445, 432, 437, 440, 441,
	442, 436, 338, -140, -140, -140, -140, -140, -140, -83,
	-140, 130, 131, 132, -205, -140, -146, -140, -140, -140,
	-410, -140, -140, -140, -206, -205, -377, -376, -375, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -410, -140, -160, -144, 96, -256, 105, 92,
	-140, -140, -127, -126, -291, -296, -287, -288, -126, -127,
	-127, -126, -126, -140, -140, -140, -140, -140, -140, -140,
	-140, -410, -140, -140, -140, -140, -140, -248, -410, -205,
	88, -394, 409, 410, 615, -298, 273, -297, 26, -206,
	90, 15, -258, 78, -289, -230, -230, 64, 65, 60,
	-126, -131, -410, -35, 26, -250, -289, 63, 90, -325,
	-267, 366, 367, 177, -140, -140, 88, -229, 28, 29,
	-186, -292, 168, -296, -186, -259, 273, -186, -164, -166,
	-167, -168, -189, -212, -409, -169, -8, 527, 524, 15,
	-179, -180, -188, -295, -265, -308, -264, 88, 408, 410,
	411, 77, 122, -140, -326, 176, -353, -352, -351, -334,
	-336, -337, -338, 89, -326, -330, 372, 371, -320, -320,
	-320, -320, -320, -325, -325, -325, -325, 87, 87, -320,
	-320, -320, -320, -328, 87, -328, -328, -329, 87, -329,
	-364, -140, -361, -360, -358, -359, 247, 101, 599, 555,
	508, 548, 589, 78, -356, -229, 96, -410, -138, -281,
	242, -362, -359, -378, -378, -378, -281, 91, 90, 91,
	90, 91, 90, -107, -58, -1, 654, 655, 656, 88,
	20, -335, -334, -57, 298, -367, -368, 273, -363, -357,
	-343, 137, -342, -343, -343, -378, 88, 30, 127, 127,
	127, 127, 508, 227, 33, -282, 547, 143, 599, 555,
	-334, -57, 240, 240, -307, -307, -307, 90, 90, -277,
	650, -179, -134, 290, 151, 279, 279, 237, 237, 292,
	-186, 303, 306, 304, 305, 302, 307, 308, 24, 24,
	24, 24, 24, 291, 293, 295, 281, -186, -186, -280,
	77, -181, -186, 27, -295, -186, -278, -278, -186, -278,
	-278, -186, -406, 321, -289, 353, 610, 611, 613, 612,
	-118, 409, 88, 508, 23, -119, 23, -409, 119, 120,
	121, -204, -146, -150, -146, 142, 261, -409, -213, -410,
	-291, 26, 88, 78, -410, 88, 88, -410, -410, 88,
	15, -221, -219, 149, -140, -410, 88, -410, -410, -410,
	-205, -140, -140, -140, -140, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -205, 88, 88, 15, -311,
	26, -410, -410, -410, -410, -410, -220, -410, 15, -410,
	78, 88, 162, 88, -410, -410, -410, 88, 88, -410,
	-410, 88, 88, -410, 88, 88, 88, -410, 88, 88,
	88, 88, -410, -410, -410, -410, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, -410, -90, 532, -410,
	-410, 88, -410, 88, -410, -409, 221, -410, -410, -410,
	-410, -410, 88, 88, 88, 88, 88, 88, -410, -410,
	-410, 88, 88, -410, 88, -410, 88, -410, -393, 614,
	410, -193, -192, -190, 75, 241, 76, -409, -297, -410,
	-154, -256, -257, -256, -198, -289, 96, 105, -232, -163,
	-165, 15, -131, -211, 89, 88, -325, -236, -242, -275,
	-289, 90, 177, -327, 177, -327, 366, 367, -228, 221,
	-194, 16, -197, 33, 58, -11, -409, -409, 33, 88,
	-182, -184, -183, -185, 67, 71, 73, 68, 69, 70,
	74, -302, 26, -8, -164, -8, -409, -186, -179, -411,
	15, 78, -411, 88, 221, -266, -269, 412, 409, 415,
	-378, 90, -106, 88, -351, -338, -233, -135, 41, -331,
	373, -325, 515, -325, -333, 90, -333, 96, 96, 89,
	-47, -42, -43, 34, 82, -358, -345, 90, 40, -345,
	-345, -289, 89, -229, -134, -186, 143, 77, -362, -362,
	-362, -295, -2, 653, 659, 137, 87, 376, 19, -250,
	88, 89, -214, 299, 89, -108, -289, 89, 87, -343,
	-343, -289, -409, 237, 32, 32, 599, 555, 547, -57,
	-214, -213, -378, -326, 652, 651, 89, 239, 297, -139,
	423, -136, 90, 91, -186, -186, -186, -186, -186, 230,
	227, 399, -402, 309, -402, 282, 240, -179, -186, 88,
	-81, 256, 251, -300, -300, 34, -186, 409, 626, 624,
	-140, 142, 261, -158, -150, -146, -309, 177, 339, 260,
	337, 333, 353, 344, 371, 335, 372, 332, 331, 330,
	-309, -307, -205, -128, -140, -140, 150, -140, 148, -140,
	-410, -410, -410, -410, -410, -225, -140, -140, -140, -410,
	177, 339, 15, -140, -307, -140, -140, -140, -140, -140,
	-375, -140, -205, -140, -205, -140, -140, -140, -140, -140,
	-376, -376, -376, -376, -376, -205, -205, -205, -205, -409,
	-289, -93, -92, -91, 582, 241, -90, -160, -93, -160,
	-127, -291, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -190, -339, -339, -339, -260, 88, -271, 23,
	15, 58, 58, -163, -194, -164, -131, -289, -239, 609,
	-245, 47, -243, -244, 48, -240, 49, 57, -327, -327,
	168, -230, -140, -261, 77, -262, -270, -213, -208, -210,
	-209, -409, -249, -410, -289, -260, -262, -166, -167, -167,
	-166, -167, 67, 67, 67, 72, 67, 72, 67, -183,
	-295, -410, -140, -298, 78, -164, -164, -188, -295, 168,
	409, 413, 414, -351, -400, 119, 143, 32, 77, 369,
	101, -398, 176, 544, 594, 599, 555, 548, 589, -399,
	243, 136, 137, 255, 26, 42, 89, 88, 89, 88,
	89, 88, -283, -282, -43, -42, -345, -345, 96, -378,
	90, 90, 239, 27, -186, 77, 77, 77, -109, 657,
	96, 87, -3, 82, -140, 87, 20, -334, -213, -369,
	-321, -370, -322, -323, -5, -6, -346, -112, 58, 101,
	-61, 45, 238, 637, 638, 127, -409, 650, -361, -250,
	-365, -367, -186, -143, -409, -142, -144, -151, 166, 167,
	260, 335, 336, -214, -186, -133, 288, 296, 87, -137,
	92, -381, 78, 279, 369, 279, 90, -403, 310, 90,
	-403, -186, -81, -47, -186, -278, -278, 34, -378, -410,
	-158, -150, -121, 162, 508, -312, 514, -320, -320, -320,
	-329, -320, 327, -320, 327, -320, -410, -410, -410, 88,
	-410, 23, -410, -140, 88, -117, 451, 88, 88, -410,
	87, 87, -140, -410, -410, -410, 88, -410, -410, -410,
	-410, -410, 88, -410, -410, -410, 88, -310, 600, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -89,
	-290, -289, -90, 564, 564, -410, -90, -222, 88, -410,
	-410, 88, -410, 88, 88, -410, 88, -410, 88, -410,
	-410, -410, -410, 88, -191, 23, -191, -191, -410, -256,
	-186, -194, -223, 17, -236, 52, 345, -247, -246, 56,
	48, -244, 20, 50, 20, 31, -261, 88, 151, 88,
	-410, -410, 88, 58, 221, -410, -194, -177, -176, 77,
	78, -178, 77, -176, 67, 67, -251, 88, -259, -164,
	-194, -194, 221, 119, -409, -145, -157, -143, 13, 90,
	90, -378, -397, 641, 642, 32, 96, -345, -345, 137,
	137, -186, 87, -325, 90, -325, 96, 96, 32, 83,
	84, 85, 32, 79, 80, 81, -186, -186, -186, -186,
	-366, 87, 20, -140, 87, 151, 89, -250, -250, 275,
	162, -345, 635, 281, 281, -345, -345, -345, -111, -110,
	657, 89, -410, 88, -332, 508, 511, -140, -152, -152,
	-251, 89, -374, 508, -380, -289, -289, -289, -289, 96,
	98, -410, 506, 74, 509, -410, -325, -140, -140, -140,
	-230, 90, -140, -140, 96, 96, -410, -140, -205, -140,
	-410, -174, -173, -175, 618, 119, 32, -309, -410, -207,
	273, -96, -95, -94, 15, -410, -140, -140, -140, -140,
	-140, -140, -140, -409, 67, 19, 17, -409, -409, -298,
	-223, -224, 18, 20, -237, 54, -235, 53, -235, -246,
	20, 20, 90, 20, 90, 137, -270, -140, -210, 58,
	-11, -289, -208, -289, -225, -140, 87, -140, -154, -194,
	-194, -140, -200, 475, 477, 478, 479, 476, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 480, 454,
	108, 110, 109, 455, 456, 457, 339, 502, 503, 497,
	500, 501, 499, 498, 354, 355, 458, 459, 460, 111,
	112, 113, 114, 115, 116, 117, 461, 464, 462, 465,
	466, 467, 472, 473, 468, 469, 470, 471, 474, 491,
	492, 493, 494, 495, 496, 601, 602, 603, 604, 605,
	606, 607, 608, 90, 90, 87, -140, 89, 89, -251,
	-365, -58, 89, -252, -250, 96, 89, 276, -209, -409,
	90, -345, -345, -345, 96, 96, -297, -410, 88, -289,
	-399, -367, 512, 512, -410, 26, -373, -372, -291, 87,
	78, 63, 507, 510, -410, -410, 88, -410, -410, -410,
	89, 89, -410, -410, -410, 88, -410, -173, -175, -410,
	77, -154, -225, 20, -93, 298, 300, -93, -410, 88,
	-410, -410, 88, -410, 88, -410, -410, -253, -410, -289,
	243, 20, 20, -253, -253, -193, -224, -103, -102, -101,
	538, -140, -205, -238, 55, 77, 122, 90, 90, 90,
	13, -208, 221, -230, -250, -171, 376, -225, -410, -250,
	89, 26, 89, 659, 137, 89, -209, -120, -409, 272,
	-297, 90, 90, -110, -113, -11, 88, 151, -250, -186,
	63, -140, -205, -410, 77, 519, 618, -88, -87, -84,
	629, 655, -205, -90, -90, -140, -140, -140, 88, -410,
	-410, -410, -103, 88, -100, -99, -289, 77, 122, -262,
	-289, 89, -410, -409, -230, 89, -234, -11, 87, -3,
	272, -321, -370, -322, -323, -5, -6, -346, -79, 508,
	-372, -350, -291, 90, 96, 89, 508, -410, -410, -86,
	145, 627, 597, -141, -152, -149, 220, -410, 88, -410,
	88, -410, 88, -289, 243, -101, 88, 26, -298, -172,
	-170, -289, 561, -390, -389, 504, -400, -396, 119, 143,
	101, -398, 599, 555, 128, 129, -79, -140, 87, -410,
	-80, 287, 614, -381, 509, -86, 628, 575, 550, 575,
	550, -140, -140, -140, -99, -409, -410, 88, 23, -313,
	-60, 572, -387, -388, 77, -391, 382, 571, 592, 119,
	90, 89, -250, 248, -374, 510, 142, -410, 88, -410,
	88, -410, -89, -170, 568, -326, -154, -388, 77, -387,
	77, 14, 13, -4, 658, 89, 289, -86, -140, -140,
	-410, -59, 27, -171, -386, 256, 251, 254, 33, -386,
	96, -4, -410, -410, 572, 250, 32, 119, -154, -174,
	-173, -173,
}

var yyDef = [...]int{
	861, -2, -2, 863, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 69, 71,
	72, 861, 861, 861, 0, 861, 0, 0, 861, -2,
	-2, 861, 1469, 0, 861, 0, 0, -2, 781, 787,
	0, 796, -2, 0, 0, 861, 2019, 2019, 856, 0,
	0, 0, 0, 0, 861, 861, 861, 861, 1335, 49,
	861, 0, 84, 85, 812, 813, 814, 64, 0, 2017,
	862, 1, 3, 70, 74, 0, 0, 0, 57, 1344,
	0, 77, 0, 0, 865, 0, 0, 1452, 861, 861,
	0, 125, 126, 0, 0, 0, -2, 129, -2, 158,
	159, 160, 0, 165, 594, 517, 569, 515, 554, -2,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 520, 393, 393, 0, 0, -2, 503,
	503, 503, 1454, 0, 0, 0, 551, 455, 393, 393,
	393, 0, 393, 393, 393, 393, 0, 0, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 1362, 164, 1470, 1467, 1468,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731,
	1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741,
	1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761,
	1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771,
	1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781,
	1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791,
	1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801,
	1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811,
	1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821,
	1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
	1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841,
	1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
	1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
	1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881,
	1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901,
	1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941,
	1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961,
	1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971,
	1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981,
	1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,
	1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
	2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
	2012, 2013, 2014, 2015, 2016, 0, 1446, 0, 707, 964,
	0, 770, 770, 0, 770, 770, 770, 770, 0, 0,
	0, 719, 0, 0, 0, 0, 767, 0, 735, 736,
	0, 767, 0, 742, 773, 0, 0, 748, 770, 770,
	751, 2020, 0, 2020, 2020, 1437, 0, 764, 762, 776,
	777, 39, 780, 783, 784, 785, 786, 789, 0, 800,
	803, 1463, 1464, 0, 805, 824, 825, 0, 857, 858,
	44, 1112, 0, 986, 991, 1002, 1017, 1018, 1019, 1020,
	1021, 1023, 1024, 1025, 0, 0, 0, 0, 1030, 1031,
	0, 0, 0, 0, 0, 1093, 1039, 0, 0, 0,
	0, 1308, 0, 0, 1269, 1269, 1127, 1269, 1271, 1271,
	1671, 1807, 1815, 1933, 1633, 1638, 1639, 1640, 1926, 1927,
	1928, 1929, 1967, 1968, 1972, 1731, 0, 0, 0, 2016,
	1768, 1776, 1777, 1801, 1898, 1953, 1650, 1796, 1864, 1728,
	1750, 1751, 1880, 1881, 1772, 1773, 1754, 1766, 1769, 1757,
	1758, 1760, 1762, 1767, 1774, 1780, 1759, 1779, 1778, 0,
	1755, 1756, 1761, 1771, 1775, 1763, 1764, 1765, 1770, 1781,
	0, 0, 0, 0, 0, 1208, 1209, 1210, 1211, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 1321, 1322,
	42, 43, 1111, 1433, 1271, 1271, 1271, 1271, 1271, 1053,
	1054, 1055, 1056, 1057, 1081, 1082, 1088, 1089, 1875, 1876,
	1877, 1878, 1712, 1962, 1720, 1721, 1859, 1860, 1733, 1734,
	1991, 1992, -2, -2, -2, 230, 231, 232, 233, 234,
	235, 236, 237, 0, 1675, 1944, 1945, 226, 0, 0,
	294, 295, 291, 292, 293, 1095, 1096, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275, 276, 277, 278, 279,
	280, 281, 282, 283, 284, 285, 286, 287, 288, 2019,
	0, 834, 0, 0, 0, 0, 0, 1344, 0, 1336,
	1335, 62, 0, 861, -2, 0, 0, 0, 0, 46,
	0, 51, 921, 864, 76, 75, 1384, 0, 0, 0,
	58, 1345, 66, 68, 1346, 0, 866, 867, 0, 897,
	901, 0, 0, 0, 1453, 1452, 1452, 101, 0, 0,
	102, 122, 123, 124, 0, 0, 108, 109, 1439, 1440,
	0, 0, 176, 177, 0, 40, 420, 0, 172, 0,
	413, 354, 0, 1362, 0, 0, 0, 0, 0, 861,
	0, 1447, 153, 154, 161, 162, 163, 393, 393, 393,
	566, 0, 0, 164, 164, 524, 525, 526, 0, 0,
	-2, 418, 0, 504, 0, 0, 407, 407, 411, 409,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 655, 0, 394, 0, 564, 565, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 1455, 1456, 0, 541,
	542, 0, 0, 0, 393, 393, 0, 0, 0, 0,
	393, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 1375, 0, 0, 0, -2, 0, 699, 0, 0,
	0, 1448, 1448, 0, 706, 0, 708, 709, 0, 0,
	710, 0, 767, 767, 765, 766, 712, 713, 714, 715,
	770, 0, 0, 402, 403, 404, 767, 770, 0, 770,
	770, 770, 770, 767, 767, 767, 770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2020, 773, 770, 0,
	743, 0, 744, 745, 746, 749, 750, 752, 2021, 2022,
	1465, 1466, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 2020, 2020, 756, 760, 1438, 782, 788, 790, 791,
	0, 0, 801, 804, 819, 48, 1719, 811, 836, 837,
	842, 0, 0, 0, 0, 848, 849, 850, 0, 0,
	853, 854, 855, 0, 0, 0, 0, 0, 984, 0,
	0, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1003, 1004, 0, 0, 0,
	1026, 1027, 1028, 1029, 1032, 0, 1044, 0, 1046, 1317,
	-2, 0, 0, 0, 1037, 1038, 0, 0, 0, 0,
	0, 0, 0, 1309, 0, 0, 1125, 0, 1126, 1128,
	1129, 0, 1130, 871, 871, 871, 871, 871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1458,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 881, 0,
	0, 881, 881, 0, 0, 219, 220, 221, 222, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 239, 240, 241, 242, 243,
	296, 244, 245, 246, 1111, 0, 0, 0, 45, 826,
	827, 0, 947, 1458, 0, 0, 877, 0, 56, 65,
	67, 1344, 60, 1344, 0, 883, 0, 0, -2, -2,
	884, 890, 891, 892, 893, 894, 53, 2018, 54, 0,
	73, 0, 47, 0, 0, 0, 0, 366, 1387, 0,
	0, 1337, 1338, 1341, 0, 898, 1813, 902, 0, 904,
	905, 0, 0, 99, 0, 963, 0, 0, 0, 110,
	0, 112, 113, 0, 0, 0, 377, 1441, 1442, 1443,
	-2, 400, 0, 377, 361, 304, 305, 306, 354, 308,
	354, 354, 354, 354, 366, 366, 366, 366, 337, 338,
	339, 340, 341, 0, 0, 323, 354, 354, 354, 354,
	344, 345, 346, 347, 348, 349, 350, 351, 309, 310,
	311, 312, 313, 314, 315, 316, 317, 356, 356, 356,
	358, 358, 0, 41, 0, 381, 0, 1341, 0, 0,
	1375, 1450, 1460, 0, 0, 0, 1450, 131, 0, 0,
	0, 567, 605, 518, 555, 568, 0, 521, 522, -2,
	0, 0, 503, 0, 505, 0, 401, 0, -2, 0,
	411, 0, 407, 411, 408, 411, 399, 412, 545, 546,
	547, 0, 549, 550, 635, 933, 0, 0, 0, 0,
	0, 641, 642, 643, 0, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 556, 557, 558, 559, 560,
	561, 562, 563, 0, 0, 0, 0, 505, 0, 552,
	0, 0, 457, 458, 459, 0, 0, 462, 463, 464,
	465, 0, 0, 468, 469, 470, 950, 951, 471, 472,
	497, 498, 499, 473, 474, 475, 476, 477, 478, 479,
	491, 492, 493, 494, 495, 496, 480, 481, 482, 483,
	484, 485, 488, 0, 146, 1366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1448, 0, 0, 0, 0, 880, 965, 1471, 1472,
	771, 772, 0, 405, 406, 770, 770, 716, 757, 0,
	770, 720, 758, 721, 723, 722, 724, 737, 738, 770,
	727, 768, 769, 728, 729, 730, 731, 732, 733, 734,
	753, 739, 740, 741, 774, 0, 778, 779, 754, 755,
	0, 0, 794, 795, 0, 802, 822, 820, 821, 823,
	815, 816, 817, 818, 0, 0, 0, 839, 95, 844,
	845, 846, 847, 859, 852, 1113, 981, 982, 983, 0,
	985, 988, 0, 1097, 1099, 990, 992, 1108, 1109, 1110,
	0, 0, 0, 0, 0, 996, 1000, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1022,
	1285, 1286, 1287, 1041, 297, 298, 0, 1042, 0, 0,
	0, 0, 0, 0, 0, 1112, 1043, 0, 895, 0,
	0, 1315, 1312, 0, 0, 0, 1270, 1272, 0, 0,
	0, 0, 872, 873, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1288, 0, 0, 0, 0, 0, 1308,
	0, 1048, 1049, 1050, 0, 0, 0, 0, 0, 0,
	1168, 0, 0, 0, 0, 1459, 0, 141, 142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1212, 1213, 1214, 1215, 38,
	0, 0, 0, 882, 1319, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1237, 0, 0, 0, 0, 0, 0, 1431, 0,
	0, 829, 830, 832, 0, 967, 0, 948, 0, 0,
	835, 0, 876, 0, 879, 59, 61, 888, 889, 0,
	906, 885, 55, 50, 0, 0, 925, 1385, 366, 1407,
	0, 375, 375, 372, 1347, 1348, 0, 1340, 1342, 1343,
	78, 903, 899, 0, 979, 0, 0, 962, 0, 909,
	911, 912, 913, 945, 0, 916, 917, 0, 0, 0,
	0, 0, 97, 964, 103, 0, 111, 0, 0, 116,
	117, 104, 105, 106, 107, 0, 594, -2, 452, 178,
	180, 181, 182, 173, -2, 364, 362, 363, 307, 366,
	366, 331, 332, 333, 334, 335, 336, 0, 0, 324,
	325, 326, 327, 318, 0, 319, 320, 321, 0, 322,
	419, 0, 1349, 382, 383, 385, 393, 0, 388, 389,
	0, 393, 393, 0, 414, 415, 0, 1341, 1366, 0,
	0, 0, 1461, 1460, 1460, 1460, 0, 166, 167, 168,
	169, 170, 171, 630, 0, 0, 606, 628, 629, 164,
	0, 0, 174, 507, 506, 0, 662, 0, 417, 0,
	0, 411, 411, 396, 397, 548, 0, 0, 637, 638,
	639, 640, 0, 0, 0, 534, 446, 0, 535, 536,
	505, 507, 0, 0, 377, 460, 461, 466, 467, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 581, 582, 583, 586, 588, 509, 592, 585, 587,
	589, 509, 593, 1363, 1364, 1365, 0, 0, 700, 0,
	0, 443, 93, 1449, 705, 767, 726, 759, 767, 718,
	725, 747, 792, 793, 798, 806, 807, 808, 809, 810,
	843, 0, 0, 0, 0, 851, 0, 0, 989, 1098,
	1100, 993, 0, 997, 1001, 0, 0, 0, 1047, 1045,
	1319, 0, 0, 0, 1094, 0, 0, 1116, 1117, 0,
	0, 0, 1313, 0, 0, 1123, 0, 1273, 1274, 1131,
	0, 0, 0, 0, 0, 1137, 1138, 1139, 1140, 1141,
	1142, 1143, 1144, 1145, 1146, 1335, 0, 0, 0, 0,
	0, 1152, 1153, 1154, 1155, 1156, 0, 1158, 0, 1159,
	0, 0, 0, 0, 1166, 1167, 1169, 0, 0, 1172,
	1173, 0, 0, 1174, 0, 0, 0, 1178, 0, 0,
	0, 0, 1187, 1188, 1189, 1190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1201, 1202, 0, 1076,
	0, 0, 1076, 0, 1114, 881, 0, 1275, 1276, 1277,
	1278, 1279, 0, 0, 0, 0, 0, 0, 1235, 1236,
	1238, 0, 0, 1241, 0, 1243, 0, 1432, 828, 831,
	833, 919, 968, 969, 0, 0, 0, 0, 949, 1457,
	874, 875, 878, 927, 0, 1323, 0, 0, 906, 979,
	907, 0, 886, 52, 922, 0, 1389, 1388, 1401, 1414,
	375, 375, 369, 370, 376, 371, 373, 374, 1339, 0,
	1344, 0, 1425, 0, 0, 1417, 0, 0, 0, 0,
	0, 0, 0, 0, 952, 0, 0, 955, 0, 0,
	0, 0, 946, 917, 0, 918, 0, -2, 0, 0,
	91, 92, 0, 0, 0, 114, 115, 0, 0, 121,
	378, 379, 155, 164, 454, 179, 427, 0, 0, 303,
	365, 328, 329, 330, 0, 352, 0, 0, 0, 448,
	127, 1353, 1352, 393, 393, 384, 0, 387, 0, 0,
	0, 1462, 355, 416, 0, 145, 0, 0, 0, 0,
	0, 151, 600, 0, 0, 607, 0, 0, 0, 516,
	0, 527, 528, 0, 634, -2, 696, 381, 0, 395,
	398, 934, 0, 0, 529, 0, 532, 533, 447, 507,
	538, 539, 553, 540, 489, 490, 487, 0, 0, 1376,
	1377, 1382, 1380, 1381, 132, 574, 576, 575, 579, 0,
	0, 0, 511, 0, 511, 572, 0, 443, 1349, 0,
	704, 444, 445, 770, 770, 838, 96, 0, 841, 0,
	0, 0, 0, 994, 998, 1280, 1306, 354, 354, 1293,
	354, 358, 1296, 354, 1298, 354, 1301, 354, 1304, 1305,
	0, 0, 0, 896, 0, 0, 1122, 1316, 0, 0,
	1132, 1133, 1134, 1135, 1136, 1310, 0, 0, 0, 1151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 144, 0, 0, 0, 0, 0, 0, 1246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1071,
	1075, 0, 1077, 1078, 0, 0, 1204, 0, 0, 1216,
	0, 1320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 970, 975, 975, 975, 0, 0, 0, 1444,
	1445, 1324, 1325, 979, 1326, 908, 887, 926, 1407, 0,
	1400, 0, -2, 1409, 0, 0, 0, 1415, 367, 368,
	900, 79, 980, 82, 0, 1425, 1434, 0, 1416, 1427,
	1429, 0, 0, 0, 1421, 0, 979, 910, 941, 943,
	0, 938, 953, 954, 956, 0, 958, 0, 960, 961,
	921, 915, 0, 99, 0, 979, 979, 98, 0, 966,
	118, 119, 120, 453, 183, 188, 0, 0, 0, 193,
	0, 195, 0, 0, 0, 200, 201, 393, 393, 428,
	0, 300, 302, 0, 0, 186, 366, 0, 366, 0,
	359, 0, 429, 449, 1350, 1351, 0, 0, 386, 390,
	391, 392, 0, 1451, 147, 0, 0, 0, 603, 0,
	631, 0, 0, 0, 0, 0, 0, 175, 508, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 0, 393,
	0, 0, 0, 393, 393, 393, 0, 688, 380, 0,
	0, 659, 656, 530, 0, 224, 225, 227, 0, 0,
	0, 0, 0, 537, 921, 1367, 1368, 1369, 0, 1379,
	1383, 135, 0, 0, 0, 0, 584, 590, 0, 510,
	591, 701, 702, 703, 94, 711, 717, 840, 860, 987,
	995, 999, 0, 0, 0, 0, 1307, 1291, 366, 1294,
	1295, 1297, 1299, 1300, 1302, 1303, 1035, 1036, 1040, 0,
	1119, 0, 1121, 1314, 0, 1344, 0, 0, 0, 1150,
	0, 0, 0, 1161, 1160, 1162, 0, 1164, 1165, 1170,
	1171, 1175, 0, 1177, 1179, 1180, 0, 0, 0, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 0,
	1069, 1072, 1203, 1079, 1080, 1085, 1206, 0, 0, 1115,
	1218, 0, 1223, 0, 0, 1229, 0, 1233, 0, 1239,
	1240, 1242, 1244, 0, 0, 0, 0, 0, 947, 928,
	63, 1326, 1328, 0, 1394, 1392, 1392, 1402, 1403, 0,
	0, 1410, 0, 0, 0, 0, 83, 0, 0, 0,
	1430, 0, 0, 0, 0, 100, 1335, 935, 942, 0,
	0, 936, 0, 937, 957, 959, 914, 0, 979, 979,
	89, 90, 0, 189, 0, 191, 217, 218, 0, 194,
	196, 197, 198, 204, 205, 206, 199, 0, 0, 299,
	301, 0, 0, 342, 353, 343, 0, 0, 1354, 1355,
	1356, 1357, 1358, 1359, 1360, 1361, 921, 148, 149, 150,
	595, 0, 605, 0, 923, 0, 598, 0, 519, 0,
	0, 0, 393, 393, 393, 0, 0, 0, 0, 673,
	0, 0, 636, 0, 644, 0, 0, 0, 228, 229,
	0, 1378, 573, 0, 133, 134, 0, 0, 578, 512,
	513, 1033, 0, 0, 0, 1034, 1292, 0, 0, 0,
	0, 1311, 0, 0, 0, 0, 1157, 0, 0, 0,
	1183, 0, 0, 0, 625, 626, 0, 1247, 1074, 1335,
	0, 1076, 1086, 1087, 0, 1076, 1217, 0, 0, 0,
	0, 0, 0, 0, 976, 0, 0, 0, 0, 967,
	1328, 1333, 0, 0, 1397, 0, 1390, 1393, 1391, 1404,
	0, 0, 1411, 0, 1413, 0, 1435, 1436, 1428, 0,
	1420, 1423, 1419, 1422, 1344, 939, 0, 944, 0, 1335,
	88, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 203, 0, 0, 357, 360, 0,
	0, 0, 596, 0, 924, 608, 599, 0, 686, 0,
	690, 0, 0, 0, 693, 694, 695, 672, 0, 676,
	421, 660, 657, 658, 531, 0, 136, 137, 0, 0,
	0, 1281, 0, 1284, 1118, 1120, 0, 1147, 1148, 1149,
	1289, 1290, 1163, 1176, 1181, 0, 1184, 0, 0, 1185,
	0, 627, 1065, 0, 0, 1083, 1084, 0, 1219, 0,
	1224, 1225, 0, 1230, 0, 1234, 1245, 0, 972, 929,
	930, 977, 978, 0, 0, 920, 1333, 81, 1334, 1331,
	0, 1329, 1327, 1386, 0, 1395, 1396, 1405, 1406, 1412,
	0, 1418, 0, 86, 0, 0, 0, 1344, 190, 0,
	209, 0, 604, 0, 607, 597, 684, 685, 0, 697,
	689, 691, 692, 674, -2, 1370, 0, 0, 0, 580,
	1282, 0, 0, 1186, 0, 623, 624, 1073, 1066, 0,
	1051, 1052, 1070, 1205, 1207, 0, 0, 0, 0, 971,
	973, 974, 80, 0, 1330, 1091, 0, 1398, 1399, 1426,
	1424, 940, 947, 0, 87, 434, 427, 1370, 0, 0,
	0, 677, 678, 679, 680, 681, 682, 683, 570, 1372,
	138, 139, 500, 501, 502, 132, 0, 1124, 1182, 1067,
	0, 0, 0, 0, 1063, 1064, 0, 1220, 0, 1226,
	0, 1231, 0, 931, 932, 1332, 0, 0, 609, 0,
	611, 0, -2, 422, 435, 0, 184, 210, 211, 0,
	0, 214, 215, 216, 207, 208, 128, 0, 0, 698,
	0, 1373, 1374, 135, 0, 0, 1058, 1059, 1060, 1061,
	1062, 0, 0, 0, 1092, 1071, 610, 0, 0, 377,
	0, 620, 423, 424, 0, 430, 431, 432, 433, 212,
	213, 632, 0, 0, 577, 1283, 0, 1221, 0, 1227,
	0, 1232, 0, 612, 613, 621, 0, 425, 0, 426,
	0, 0, 0, 601, 0, 632, 1371, 1068, 0, 0,
	1090, 0, 622, 618, 436, 438, 439, 0, 0, 437,
	633, 602, 1222, 1228, 0, 440, 441, 442, 614, 615,
	616, 617,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 660,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:599
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:612
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:613
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:617
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:653
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:659
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:665
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:670
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:674
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:680
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:684
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:690
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:696
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:702
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:706
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:711
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:715
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:721
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:725
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:731
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:737
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:741
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:768
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:774
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:792
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:798
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:805
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:809
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:815
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:819
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:827
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:831
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:837
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:846
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:850
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:856
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:860
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:865
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:871
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:877
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:884
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:890
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:898
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:902
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:908
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:932
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:936
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:942
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:948
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:952
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:956
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:960
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:965
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:966
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:970
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:974
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:980
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:984
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:990
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:994
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:999
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1003
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1009
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1015
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1019
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1025
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1029
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1033
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1037
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1043
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1047
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1051
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1057
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1061
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1067
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1071
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1077
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1081
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1085
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1091
		{
			yyVAL.str = RepeatableReadStr
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1095
		{
			yyVAL.str = ReadCommittedStr
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1103
		{
			yyVAL.str = SerializableStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1109
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1113
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1117
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1123
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1129
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1136
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1145
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1149
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1156
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1160
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1165
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1169
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1175
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1180
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1185
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1191
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1196
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1202
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1207
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1211
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1217
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1227
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1233
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1240
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1247
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1252
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1257
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1262
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1269
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1276
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1287
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1298
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1304
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1308
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1312
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1316
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1330
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1334
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1340
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1344
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1350
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1354
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1360
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1364
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1370
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1374
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1380
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1384
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1390
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1395
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1400
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1404
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1409
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1413
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1428
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1437
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1446
		{
			yyVAL.str = ""
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1450
		{
			yyVAL.str = ""
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1459
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1463
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1469
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1475
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1480
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1485
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1490
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1495
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1500
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1505
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1518
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1523
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1529
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1535
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1545
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1549
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1553
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1559
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1563
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1568
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1572
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1577
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1583
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1589
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1594
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1599
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1605
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1613
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1620
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1624
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1628
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1632
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1646
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1653
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1657
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1663
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1667
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1675
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1679
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1696
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1708
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1712
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1716
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1721
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1729
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = Armscii8Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = ASCIIStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = Big5Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = UBinaryStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = Cp1250Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = Cp1251Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = Cp1256Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = Cp1257Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = Cp850Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = Cp852Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = Cp866Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Cp932Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Dec8Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = EucjpmsStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = EuckrStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = Gb18030Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = Gb2312Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = GbkStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = Geostd8Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = GreekStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = HebrewStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = Hp8Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = Keybcs2Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = Koi8rStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = Koi8uStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = Latin1Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = Latin2Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = Latin5Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = Latin7Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = MacceStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = MacromanStr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = SjisStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = Swe7Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = Tis620Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.str = Ucs2Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.str = UjisStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.str = Utf16Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = Utf16leStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.str = Utf32Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = Utf8Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = Utf8mb4Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = Utf8Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1909
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1913
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1917
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1923
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1927
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1931
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1937
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1941
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1948
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1952
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1956
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1960
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1966
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1977
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1982
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1992
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1996
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2044
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2070
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2074
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2080
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2084
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2090
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2094
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2098
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2102
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2106
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2110
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2114
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2126
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2130
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2138
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2143
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2149
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2153
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2161
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2165
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2188
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2193
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2197
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2202
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2206
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2214
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2218
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2224
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2232
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2236
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2240
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2245
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2249
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2254
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2258
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2262
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2266
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2275
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2285
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2290
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2296
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2300
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2305
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2309
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2313
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2319
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2324
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2328
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2334
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2338
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2344
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2348
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2353
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2357
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2361
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2365
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2369
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2373
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2379
		{
			yyVAL.str = ""
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2383
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2389
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2393
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2397
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2401
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2405
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2410
		{
			yyVAL.str = ""
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2414
		{
			yyVAL.str = yyDollar[2].str
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2420
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2424
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2434
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2438
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2443
		{
			yyVAL.str = "key"
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2447
		{
			yyVAL.str = yyDollar[1].str
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2453
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2457
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2462
		{
			yyVAL.str = ""
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2472
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2476
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2482
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2486
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2492
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2496
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2502
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2506
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2512
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2518
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2522
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2526
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2530
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2534
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2539
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2543
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2549
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2555
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2561
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2565
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2569
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2574
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2578
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2584
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2590
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2596
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2600
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2604
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2608
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2612
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2617
		{
			yyVAL.str = ""
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2621
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2625
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2631
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2635
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2640
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2644
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2649
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2653
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2659
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2663
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2667
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2673
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2677
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2683
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2687
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2691
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2695
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2699
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2703
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2707
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2711
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2715
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2719
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2723
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2727
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2731
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2735
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2739
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2743
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2747
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2751
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2755
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2759
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2763
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2767
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2771
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2775
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2779
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2783
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2787
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2791
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2795
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2799
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2803
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2808
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2812
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2816
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2848
		{
			yyVAL.str = ""
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2854
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2858
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2863
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2867
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2872
		{
			yyVAL.str = ""
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2876
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2881
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2885
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2889
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2894
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2898
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2902
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2906
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2910
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 519:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2914
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2920
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2924
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2928
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2934
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2938
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2942
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2946
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2950
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2954
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2958
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2962
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2966
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2970
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2975
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2980
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2984
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3032
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3036
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3044
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3048
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3052
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3056
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3062
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3066
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3072
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3076
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3080
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3084
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3088
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3092
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3096
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3100
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3104
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3108
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3114
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3121
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3128
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3135
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3141
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3151
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3158
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3165
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3187
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3195
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3208
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3218
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3222
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3233
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3240
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3254
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3262
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3268
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3275
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3281
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3288
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3294
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3303
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3311
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3318
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3325
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3329
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3338
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3346
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3355
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3362
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3370
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3374
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3383
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3394
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3398
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3403
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3407
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3412
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3416
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3422
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3428
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3434
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3438
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3444
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3448
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3454
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3460
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3466
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3472
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3478
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3482
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3486
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3490
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3496
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3502
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3508
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3512
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3516
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3522
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3526
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3531
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3535
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3540
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3544
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3550
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3554
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3558
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3562
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3566
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3570
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3574
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3578
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3582
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3586
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3590
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3594
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3598
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3602
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3606
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3610
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3614
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3618
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3622
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3626
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3630
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3634
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3639
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3643
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3647
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3653
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3657
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3663
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3668
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3672
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3677
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3682
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3687
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3692
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3697
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3703
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3709
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3714
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3720
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3726
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3730
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3736
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3741
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3745
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3750
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3755
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3760
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3765
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3771
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3777
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3784
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3791
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3798
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3806
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3810
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3816
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3822
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3828
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3834
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3840
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3846
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3852
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3858
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.str = ""
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3868
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3874
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3880
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3884
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 702:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3890
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3894
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3903
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3907
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3913
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3917
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3923
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3929
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3933
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3937
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3941
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3945
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3949
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3953
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3957
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3961
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3965
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3969
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3973
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3977
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3985
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3989
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4041
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4142
		{
			yyVAL.str = ""
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4146
		{
			yyVAL.str = "extended "
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4152
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4156
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4162
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4166
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4172
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4176
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4180
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4186
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4190
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4194
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4200
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4204
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4210
		{
			yyVAL.empty = struct{}{}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4214
		{
			yyVAL.empty = struct{}{}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.empty = struct{}{}
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4224
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4234
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4238
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4242
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4249
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4253
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4257
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4268
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4272
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4281
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4287
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4291
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4297
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4301
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4305
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4312
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4318
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4322
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4327
		{
			yyVAL.empty = struct{}{}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4329
		{
			yyVAL.empty = struct{}{}
		}
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4332
		{
			yyVAL.empty = struct{}{}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4334
		{
			yyVAL.empty = struct{}{}
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4338
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4344
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4349
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4353
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4357
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4361
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4365
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4369
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4373
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4379
		{
			yyVAL.str = yyDollar[1].str
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4383
		{
			yyVAL.str = yyDollar[1].str
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4387
		{
			yyVAL.str = yyDollar[1].str
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4393
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4397
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4401
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4405
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4410
		{
			yyVAL.str = ""
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4414
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4418
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4424
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4428
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4434
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4438
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4444
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4450
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4454
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4460
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4466
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4470
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4474
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4478
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4484
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4490
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4496
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4500
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4504
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4508
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4512
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4516
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4522
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4526
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4532
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4536
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4540
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4544
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4548
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4552
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4556
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4560
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4564
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4568
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4572
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4576
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4581
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4585
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4589
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4594
		{
			yyVAL.str = ""
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4598
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4603
		{
			setAllowComments(yylex, true)
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4607
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4613
		{
			yyVAL.strs = nil
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4617
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4623
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4627
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4631
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4636
		{
			yyVAL.str = ""
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4640
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4644
		{
			yyVAL.str = SQLCacheStr
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4649
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4653
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4657
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4663
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4667
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4677
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4682
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4686
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4692
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4696
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4701
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4705
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4710
		{
			yyVAL.strs = nil
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4714
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4718
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4722
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4726
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4732
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4736
		{
			yyVAL.str = SQLCacheStr
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4740
		{
			yyVAL.str = DistinctStr
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4744
		{
			yyVAL.str = DistinctStr
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4748
		{
			yyVAL.str = StraightJoinHint
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4752
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4756
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4762
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4766
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4772
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4776
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4780
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4784
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4789
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4793
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4797
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4804
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4809
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4813
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4819
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4825
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4829
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4839
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4843
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4847
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4851
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4857
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4861
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4867
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4871
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4876
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4880
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4885
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4889
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4895
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4899
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4905
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4909
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4915
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4919
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4923
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4927
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4933
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4937
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4950
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4954
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4958
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4962
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4968
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4970
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4974
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4976
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4980
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4982
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4985
		{
			yyVAL.empty = struct{}{}
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4987
		{
			yyVAL.empty = struct{}{}
		}
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4990
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4994
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4998
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5005
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5011
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5015
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5019
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5025
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5031
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5035
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5039
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5043
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5049
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5053
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5063
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5067
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5073
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5077
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5083
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5088
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5092
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5098
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5102
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 971:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5108
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5112
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5116
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5120
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5125
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5129
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5133
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5137
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5143
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5147
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5166
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5170
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5174
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5178
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5184
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5188
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5192
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5196
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5202
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5206
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5210
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5214
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5218
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5222
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5226
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5230
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5234
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5238
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5242
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5248
		{
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5251
		{
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5257
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5261
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5265
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5269
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5273
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5277
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5297
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5301
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5311
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5315
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5319
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5323
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5327
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5343
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5371
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5375
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5379
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5383
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5387
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5395
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5399
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5407
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5421
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5427
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5431
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5437
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5441
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5447
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5451
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5455
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5461
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5465
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5472
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5476
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5480
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5484
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5488
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5494
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5498
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5502
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5506
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5510
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5516
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5520
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5525
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5529
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5535
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5539
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5544
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5548
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5553
		{
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5556
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5562
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5568
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5572
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5577
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5584
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5590
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5594
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5600
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5604
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5610
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5614
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5619
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5626
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5632
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5636
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5642
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5648
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5652
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5658
		{
			yyVAL.str = ""
		}
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5662
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5668
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5672
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5679
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5683
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5687
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5691
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5697
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5701
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5705
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5709
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5713
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5717
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5721
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5727
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5731
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5735
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5742
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5748
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5752
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5762
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5766
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5776
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5780
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5784
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5788
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5792
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5796
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5800
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5804
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5808
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5812
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5823
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5827
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5833
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5837
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5842
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5846
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5890
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5894
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5898
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5902
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5906
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5910
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5914
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5922
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5926
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5930
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5934
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5938
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5946
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5950
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5954
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5958
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5962
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5966
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5970
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5978
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5982
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6058
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6062
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6066
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6070
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6074
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6078
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6082
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6086
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6090
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6094
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6098
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6102
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6114
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6134
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6160
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6164
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6168
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6172
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6188
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6192
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6196
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6200
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6204
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6209
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6213
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6229
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6234
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6238
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6242
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6253
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6263
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6267
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6271
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6275
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6281
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6285
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6289
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6293
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6297
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6301
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6305
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6310
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6314
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6320
		{
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6322
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6326
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6330
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6334
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6338
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6342
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6346
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6350
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6354
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6358
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6362
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6368
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6372
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6376
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6380
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6384
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6388
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6392
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6396
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6400
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6410
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6414
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6418
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6422
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6433
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6437
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6441
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6445
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6449
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6455
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6459
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6463
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6467
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6471
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6477
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6481
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6485
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6491
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6495
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6499
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6505
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6509
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6513
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6517
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6521
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6527
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6531
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6535
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6539
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6543
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6547
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6551
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6555
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6559
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6563
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6569
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6573
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6578
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6582
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6587
		{
			yyVAL.str = string("")
		}
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6591
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6597
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6601
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6607
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6612
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6616
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6622
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6626
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6630
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6634
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6640
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6644
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6650
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6659
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6663
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6669
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6673
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6678
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6682
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6688
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6694
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6698
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6703
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6707
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6712
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6716
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6722
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6728
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6732
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6738
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6743
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6747
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6751
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6756
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6760
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6766
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6770
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6774
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6783
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6787
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6791
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6795
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6802
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6806
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6810
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6814
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6820
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6824
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6828
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6832
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6837
		{
			yyVAL.str = ""
		}
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6841
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6845
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6849
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6854
		{
			yyVAL.str = ""
		}
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6858
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6864
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6868
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6873
		{
			yyVAL.str = ""
		}
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6877
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6882
		{
			yyVAL.str = "cascaded"
		}
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6886
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6890
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6899
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6905
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6911
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6917
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6926
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6930
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6935
		{
			yyVAL.str = ""
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6939
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6945
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6949
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6955
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6959
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6963
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6968
		{
			yyVAL.str = ""
		}
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6972
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6976
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6981
		{
			yyVAL.str = ""
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6985
		{
			yyVAL.str = " header"
		}
	case 1394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6990
		{
			yyVAL.str = ""
		}
	case 1395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6994
		{
			yyVAL.str = " manifest on"
		}
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6998
		{
			yyVAL.str = " manifest off"
		}
	case 1397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7003
		{
			yyVAL.str = ""
		}
	case 1398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7007
		{
			yyVAL.str = " overwrite on"
		}
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7011
		{
			yyVAL.str = " overwrite off"
		}
	case 1400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7017
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7022
		{
			yyVAL.str = ""
		}
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7026
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7032
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7036
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7042
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7046
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7051
		{
			yyVAL.str = ""
		}
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7055
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7061
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7065
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7071
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7075
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7079
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7084
		{
			yyVAL.str = ""
		}
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7088
		{
			yyVAL.str = " optionally"
		}
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7101
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7105
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7109
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7113
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7117
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7123
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7127
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7131
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7135
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7140
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7144
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7150
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7154
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7160
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7164
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7170
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7174
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7179
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7189
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7193
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7199
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7206
		{
			yyVAL.str = "charset"
		}
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7216
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7220
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7224
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7233
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7235
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7238
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7240
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7243
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7245
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7248
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7250
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7253
		{
			yyVAL.empty = struct{}{}
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7255
		{
			yyVAL.empty = struct{}{}
		}
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7257
		{
			yyVAL.empty = struct{}{}
		}
	case 1457:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7261
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7266
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7270
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7275
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7277
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7281
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7287
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7291
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7298
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7304
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7308
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7314
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7318
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7325
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2017:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7896
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7905
		{
			decNesting(yylex)
		}
	case 2019:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7910
		{
			skipToEnd(yylex)
		}
	case 2020:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7915
		{
			skipToEnd(yylex)
		}
	case 2021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7919
		{
			skipToEnd(yylex)
		}
	case 2022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7923
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
