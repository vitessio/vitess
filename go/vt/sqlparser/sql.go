// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const UNDERSCORE_UTF8MB3 = 57540
const INTERVAL = 57541
const JSON_EXTRACT_OP = 57542
const JSON_UNQUOTE_EXTRACT_OP = 57543
const CREATE = 57544
const ALTER = 57545
const DROP = 57546
const RENAME = 57547
const ANALYZE = 57548
const ADD = 57549
const FLUSH = 57550
const CHANGE = 57551
const MODIFY = 57552
const DEALLOCATE = 57553
const REVERT = 57554
const SCHEMA = 57555
const TABLE = 57556
const INDEX = 57557
const VIEW = 57558
const TO = 57559
const IGNORE = 57560
const IF = 57561
const PRIMARY = 57562
const COLUMN = 57563
const SPATIAL = 57564
const FULLTEXT = 57565
const KEY_BLOCK_SIZE = 57566
const CHECK = 57567
const INDEXES = 57568
const ACTION = 57569
const CASCADE = 57570
const CONSTRAINT = 57571
const FOREIGN = 57572
const NO = 57573
const REFERENCES = 57574
const RESTRICT = 57575
const SHOW = 57576
const DESCRIBE = 57577
const EXPLAIN = 57578
const DATE = 57579
const ESCAPE = 57580
const REPAIR = 57581
const OPTIMIZE = 57582
const TRUNCATE = 57583
const COALESCE = 57584
const EXCHANGE = 57585
const REBUILD = 57586
const PARTITIONING = 57587
const REMOVE = 57588
const PREPARE = 57589
const EXECUTE = 57590
const MAXVALUE = 57591
const PARTITION = 57592
const REORGANIZE = 57593
const LESS = 57594
const THAN = 57595
const PROCEDURE = 57596
const TRIGGER = 57597
const VINDEX = 57598
const VINDEXES = 57599
const DIRECTORY = 57600
const NAME = 57601
const UPGRADE = 57602
const STATUS = 57603
const VARIABLES = 57604
const WARNINGS = 57605
const CASCADED = 57606
const DEFINER = 57607
const OPTION = 57608
const SQL = 57609
const UNDEFINED = 57610
const SEQUENCE = 57611
const MERGE = 57612
const TEMPORARY = 57613
const TEMPTABLE = 57614
const INVOKER = 57615
const SECURITY = 57616
const FIRST = 57617
const AFTER = 57618
const LAST = 57619
const VITESS_MIGRATION = 57620
const CANCEL = 57621
const RETRY = 57622
const COMPLETE = 57623
const CLEANUP = 57624
const THROTTLE = 57625
const UNTHROTTLE = 57626
const EXPIRE = 57627
const RATIO = 57628
const BEGIN = 57629
const START = 57630
const TRANSACTION = 57631
const COMMIT = 57632
const ROLLBACK = 57633
const SAVEPOINT = 57634
const RELEASE = 57635
const WORK = 57636
const BIT = 57637
const TINYINT = 57638
const SMALLINT = 57639
const MEDIUMINT = 57640
const INT = 57641
const INTEGER = 57642
const BIGINT = 57643
const INTNUM = 57644
const REAL = 57645
const DOUBLE = 57646
const FLOAT_TYPE = 57647
const DECIMAL_TYPE = 57648
const NUMERIC = 57649
const TIME = 57650
const TIMESTAMP = 57651
const DATETIME = 57652
const YEAR = 57653
const CHAR = 57654
const VARCHAR = 57655
const BOOL = 57656
const CHARACTER = 57657
const VARBINARY = 57658
const NCHAR = 57659
const TEXT = 57660
const TINYTEXT = 57661
const MEDIUMTEXT = 57662
const LONGTEXT = 57663
const BLOB = 57664
const TINYBLOB = 57665
const MEDIUMBLOB = 57666
const LONGBLOB = 57667
const JSON = 57668
const JSON_SCHEMA_VALID = 57669
const JSON_SCHEMA_VALIDATION_REPORT = 57670
const ENUM = 57671
const GEOMETRY = 57672
const POINT = 57673
const LINESTRING = 57674
const POLYGON = 57675
const GEOMETRYCOLLECTION = 57676
const MULTIPOINT = 57677
const MULTILINESTRING = 57678
const MULTIPOLYGON = 57679
const ASCII = 57680
const UNICODE = 57681
const NULLX = 57682
const AUTO_INCREMENT = 57683
const APPROXNUM = 57684
const SIGNED = 57685
const UNSIGNED = 57686
const ZEROFILL = 57687
const CODE = 57688
const COLLATION = 57689
const COLUMNS = 57690
const DATABASES = 57691
const ENGINES = 57692
const EVENT = 57693
const EXTENDED = 57694
const FIELDS = 57695
const FULL = 57696
const FUNCTION = 57697
const GTID_EXECUTED = 57698
const KEYSPACES = 57699
const OPEN = 57700
const PLUGINS = 57701
const PRIVILEGES = 57702
const PROCESSLIST = 57703
const SCHEMAS = 57704
const TABLES = 57705
const TRIGGERS = 57706
const USER = 57707
const VGTID_EXECUTED = 57708
const VITESS_KEYSPACES = 57709
const VITESS_METADATA = 57710
const VITESS_MIGRATIONS = 57711
const VITESS_REPLICATION_STATUS = 57712
const VITESS_SHARDS = 57713
const VITESS_TABLETS = 57714
const VITESS_TARGET = 57715
const VSCHEMA = 57716
const VITESS_THROTTLED_APPS = 57717
const NAMES = 57718
const GLOBAL = 57719
const SESSION = 57720
const ISOLATION = 57721
const LEVEL = 57722
const READ = 57723
const WRITE = 57724
const ONLY = 57725
const REPEATABLE = 57726
const COMMITTED = 57727
const UNCOMMITTED = 57728
const SERIALIZABLE = 57729
const CURRENT_TIMESTAMP = 57730
const DATABASE = 57731
const CURRENT_DATE = 57732
const NOW = 57733
const CURRENT_TIME = 57734
const LOCALTIME = 57735
const LOCALTIMESTAMP = 57736
const CURRENT_USER = 57737
const UTC_DATE = 57738
const UTC_TIME = 57739
const UTC_TIMESTAMP = 57740
const DAY = 57741
const DAY_HOUR = 57742
const DAY_MICROSECOND = 57743
const DAY_MINUTE = 57744
const DAY_SECOND = 57745
const HOUR = 57746
const HOUR_MICROSECOND = 57747
const HOUR_MINUTE = 57748
const HOUR_SECOND = 57749
const MICROSECOND = 57750
const MINUTE = 57751
const MINUTE_MICROSECOND = 57752
const MINUTE_SECOND = 57753
const MONTH = 57754
const QUARTER = 57755
const SECOND = 57756
const SECOND_MICROSECOND = 57757
const YEAR_MONTH = 57758
const WEEK = 57759
const REPLACE = 57760
const CONVERT = 57761
const CAST = 57762
const SUBSTR = 57763
const SUBSTRING = 57764
const GROUP_CONCAT = 57765
const SEPARATOR = 57766
const TIMESTAMPADD = 57767
const TIMESTAMPDIFF = 57768
const WEIGHT_STRING = 57769
const LTRIM = 57770
const RTRIM = 57771
const TRIM = 57772
const JSON_ARRAY = 57773
const JSON_OBJECT = 57774
const JSON_QUOTE = 57775
const JSON_DEPTH = 57776
const JSON_TYPE = 57777
const JSON_LENGTH = 57778
const JSON_VALID = 57779
const JSON_ARRAY_APPEND = 57780
const JSON_ARRAY_INSERT = 57781
const JSON_INSERT = 57782
const JSON_MERGE = 57783
const JSON_MERGE_PATCH = 57784
const JSON_MERGE_PRESERVE = 57785
const JSON_REMOVE = 57786
const JSON_REPLACE = 57787
const JSON_SET = 57788
const JSON_UNQUOTE = 57789
const MATCH = 57790
const AGAINST = 57791
const BOOLEAN = 57792
const LANGUAGE = 57793
const WITH = 57794
const QUERY = 57795
const EXPANSION = 57796
const WITHOUT = 57797
const VALIDATION = 57798
const UNUSED = 57799
const ARRAY = 57800
const CUME_DIST = 57801
const DESCRIPTION = 57802
const DENSE_RANK = 57803
const EMPTY = 57804
const EXCEPT = 57805
const FIRST_VALUE = 57806
const GROUPING = 57807
const GROUPS = 57808
const JSON_TABLE = 57809
const LAG = 57810
const LAST_VALUE = 57811
const LATERAL = 57812
const LEAD = 57813
const NTH_VALUE = 57814
const NTILE = 57815
const OF = 57816
const OVER = 57817
const PERCENT_RANK = 57818
const RANK = 57819
const RECURSIVE = 57820
const ROW_NUMBER = 57821
const SYSTEM = 57822
const WINDOW = 57823
const ACTIVE = 57824
const ADMIN = 57825
const AUTOEXTEND_SIZE = 57826
const BUCKETS = 57827
const CLONE = 57828
const COLUMN_FORMAT = 57829
const COMPONENT = 57830
const DEFINITION = 57831
const ENFORCED = 57832
const ENGINE_ATTRIBUTE = 57833
const EXCLUDE = 57834
const FOLLOWING = 57835
const GEOMCOLLECTION = 57836
const GET_MASTER_PUBLIC_KEY = 57837
const HISTOGRAM = 57838
const HISTORY = 57839
const INACTIVE = 57840
const INVISIBLE = 57841
const LOCKED = 57842
const MASTER_COMPRESSION_ALGORITHMS = 57843
const MASTER_PUBLIC_KEY_PATH = 57844
const MASTER_TLS_CIPHERSUITES = 57845
const MASTER_ZSTD_COMPRESSION_LEVEL = 57846
const NESTED = 57847
const NETWORK_NAMESPACE = 57848
const NOWAIT = 57849
const NULLS = 57850
const OJ = 57851
const OLD = 57852
const OPTIONAL = 57853
const ORDINALITY = 57854
const ORGANIZATION = 57855
const OTHERS = 57856
const PARTIAL = 57857
const PATH = 57858
const PERSIST = 57859
const PERSIST_ONLY = 57860
const PRECEDING = 57861
const PRIVILEGE_CHECKS_USER = 57862
const PROCESS = 57863
const RANDOM = 57864
const REFERENCE = 57865
const REQUIRE_ROW_FORMAT = 57866
const RESOURCE = 57867
const RESPECT = 57868
const RESTART = 57869
const RETAIN = 57870
const REUSE = 57871
const ROLE = 57872
const SECONDARY = 57873
const SECONDARY_ENGINE = 57874
const SECONDARY_ENGINE_ATTRIBUTE = 57875
const SECONDARY_LOAD = 57876
const SECONDARY_UNLOAD = 57877
const SIMPLE = 57878
const SKIP = 57879
const SRID = 57880
const THREAD_PRIORITY = 57881
const TIES = 57882
const UNBOUNDED = 57883
const VCPU = 57884
const VISIBLE = 57885
const RETURNING = 57886
const FORMAT = 57887
const TREE = 57888
const VITESS = 57889
const TRADITIONAL = 57890
const LOCAL = 57891
const LOW_PRIORITY = 57892
const NO_WRITE_TO_BINLOG = 57893
const LOGS = 57894
const ERROR = 57895
const GENERAL = 57896
const HOSTS = 57897
const OPTIMIZER_COSTS = 57898
const USER_RESOURCES = 57899
const SLOW = 57900
const CHANNEL = 57901
const RELAY = 57902
const EXPORT = 57903
const AVG_ROW_LENGTH = 57904
const CONNECTION = 57905
const CHECKSUM = 57906
const DELAY_KEY_WRITE = 57907
const ENCRYPTION = 57908
const ENGINE = 57909
const INSERT_METHOD = 57910
const MAX_ROWS = 57911
const MIN_ROWS = 57912
const PACK_KEYS = 57913
const PASSWORD = 57914
const FIXED = 57915
const DYNAMIC = 57916
const COMPRESSED = 57917
const REDUNDANT = 57918
const COMPACT = 57919
const ROW_FORMAT = 57920
const STATS_AUTO_RECALC = 57921
const STATS_PERSISTENT = 57922
const STATS_SAMPLE_PAGES = 57923
const STORAGE = 57924
const MEMORY = 57925
const DISK = 57926
const PARTITIONS = 57927
const LINEAR = 57928
const RANGE = 57929
const LIST = 57930
const SUBPARTITION = 57931
const SUBPARTITIONS = 57932
const HASH = 57933

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	609, 145,
	-2, 153,
	-1, 48,
	131, 153,
	171, 153,
	332, 153,
	-2, 492,
	-1, 55,
	35, 728,
	232, 728,
	243, 728,
	278, 742,
	279, 742,
	-2, 730,
	-1, 60,
	234, 755,
	-2, 753,
	-1, 114,
	231, 1279,
	-2, 119,
	-1, 116,
	1, 146,
	609, 146,
	-2, 153,
	-1, 127,
	132, 378,
	237, 378,
	-2, 481,
	-1, 146,
	131, 153,
	171, 153,
	332, 153,
	-2, 501,
	-1, 693,
	216, 1300,
	-2, 1296,
	-1, 694,
	216, 1301,
	-2, 1297,
	-1, 769,
	59, 823,
	-2, 838,
	-1, 806,
	147, 1706,
	-2, 112,
	-1, 807,
	147, 1548,
	-2, 113,
	-1, 813,
	147, 1631,
	-2, 1273,
	-1, 961,
	147, 1476,
	-2, 1270,
	-1, 1002,
	242, 41,
	247, 41,
	-2, 389,
	-1, 1085,
	1, 543,
	609, 543,
	-2, 153,
	-1, 1322,
	59, 824,
	-2, 843,
	-1, 1323,
	59, 825,
	-2, 844,
	-1, 1376,
	131, 153,
	171, 153,
	332, 153,
	-2, 428,
	-1, 1455,
	132, 378,
	237, 378,
	-2, 481,
	-1, 1464,
	242, 42,
	247, 42,
	-2, 390,
	-1, 1771,
	216, 1305,
	-2, 1299,
	-1, 1854,
	131, 153,
	171, 153,
	332, 153,
	-2, 429,
	-1, 1861,
	25, 174,
	-2, 176,
	-1, 2108,
	86, 39,
	-2, 880,
	-1, 2160,
	77, 94,
	86, 94,
	-2, 900,
	-1, 2227,
	584, 655,
	-2, 629,
	-1, 2364,
	49, 1241,
	-2, 1235,
	-1, 2584,
	86, 39,
	-2, 881,
	-1, 2622,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 872,
	-1, 2901,
	584, 655,
	-2, 643,
	-1, 2959,
	22, 1633,
	32, 1633,
	172, 1633,
	254, 1633,
	312, 1633,
	313, 1633,
	314, 1633,
	315, 1633,
	316, 1633,
	317, 1633,
	318, 1633,
	320, 1633,
	321, 1633,
	322, 1633,
	323, 1633,
	324, 1633,
	325, 1633,
	326, 1633,
	327, 1633,
	328, 1633,
	329, 1633,
	330, 1633,
	331, 1633,
	333, 1633,
	335, 1633,
	336, 1633,
	337, 1633,
	338, 1633,
	339, 1633,
	340, 1633,
	341, 1633,
	342, 1633,
	343, 1633,
	346, 1633,
	347, 1633,
	348, 1633,
	349, 1633,
	350, 1633,
	351, 1633,
	352, 1633,
	353, 1633,
	354, 1633,
	467, 1633,
	-2, 587,
}

const yyPrivate = 57344

const yyLast = 43091

var yyAct = [...]int{
	693, 2724, 2725, 2323, 2723, 3013, 3021, 2989, 2882, 2990,
	1851, 2698, 1379, 2511, 2941, 2957, 2417, 2424, 1148, 2062,
	2375, 2835, 2465, 3, 784, 1787, 702, 1805, 2474, 1785,
	695, 2479, 2476, 2475, 2473, 2478, 2477, 2685, 2738, 2378,
	2096, 1921, 96, 2858, 2494, 2432, 2493, 611, 1337, 1034,
	2376, 186, 2379, 2593, 186, 2743, 576, 186, 696, 686,
	37, 2322, 591, 762, 186, 2587, 2285, 684, 685, 637,
	2321, 687, 186, 608, 2496, 1824, 2613, 2373, 2365, 2123,
	2579, 1884, 1097, 1809, 2516, 2192, 2224, 186, 609, 2131,
	2268, 1909, 1889, 2193, 2154, 2194, 1840, 1433, 1952, 2143,
	607, 964, 811, 155, 38, 785, 1324, 2115, 2098, 591,
	1829, 1930, 591, 186, 591, 1301, 1765, 1908, 1741, 764,
	141, 1671, 1816, 2260, 1891, 1828, 1966, 808, 1629, 2186,
	1681, 992, 1368, 1010, 1831, 36, 997, 766, 2162, 770,
	1346, 1304, 1233, 95, 1693, 1648, 1169, 1480, 620, 1578,
	1469, 1003, 971, 1740, 1000, 1574, 91, 787, 1906, 998,
	968, 1558, 972, 999, 1367, 1351, 1365, 1146, 776, 119,
	1140, 1428, 1462, 1737, 117, 1583, 118, 1081, 1880, 124,
	1810, 798, 774, 603, 772, 1454, 125, 76, 598, 97,
	1240, 1236, 615, 1036, 98, 89, 3014, 2891, 85, 2217,
	1778, 1923, 1924, 1925, 1923, 159, 1051, 1052, 1053, 2686,
	1056, 1057, 1058, 1059, 2462, 771, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 792, 126, 797, 547, 90, 2484, 2244,
	2243, 2484, 2215, 1964, 1126, 773, 77, 778, 965, 8,
	1039, 2481, 2678, 120, 599, 1543, 2276, 2277, 2914, 580,
	2915, 2642, 1014, 7, 1636, 765, 763, 6, 102, 188,
	189, 190, 2728, 1635, 2728, 805, 182, 1634, 2420, 87,
	1782, 1783, 1633, 1013, 1632, 1631, 988, 1614, 1048, 812,
	2978, 987, 779, 986, 1768, 2482, 786, 1170, 2482, 990,
	121, 989, 1040, 1042, 1043, 601, 1623, 602, 2094, 104,
	105, 2361, 108, 164, 2567, 114, 2993, 2488, 183, 2125,
	2488, 542, 120, 2421, 1170, 976, 3030, 981, 1331, 2988,
	3004, 2238, 1641, 2831, 2830, 1954, 2691, 1038, 1037, 2692,
	1054, 758, 759, 760, 761, 78, 3029, 769, 2423, 2915,
	2951, 2008, 2284, 3017, 2910, 2176, 2727, 3002, 2727, 2699,
	2942, 1949, 2418, 2950, 2909, 2962, 2549, 1443, 2095, 2134,
	161, 2413, 162, 2967, 78, 800, 801, 80, 78, 2434,
	2435, 78, 188, 189, 190, 980, 2419, 2965, 982, 2252,
	120, 2275, 181, 2251, 2135, 2171, 2971, 2972, 2170, 1846,
	1847, 2172, 1845, 1180, 2434, 2435, 2414, 2415, 2005, 1143,
	1202, 2966, 1121, 1122, 985, 2006, 1090, 1091, 2425, 1116,
	756, 1133, 87, 1135, 755, 580, 2485, 2756, 2883, 2485,
	1180, 2840, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211,
	1210, 1212, 1213, 1369, 2183, 1370, 1900, 1117, 1093, 1784,
	2218, 87, 1104, 1110, 1104, 87, 2590, 1105, 87, 1105,
	581, 1132, 1134, 1864, 1863, 1103, 577, 1102, 2513, 589,
	1894, 2311, 983, 2540, 2538, 580, 580, 2994, 587, 1622,
	593, 2517, 2261, 985, 2433, 977, 1308, 1533, 1967, 2506,
	2247, 2225, 979, 978, 1931, 1972, 2436, 2507, 2995, 3016,
	1559, 165, 1176, 1125, 1984, 1168, 1985, 1123, 1986, 2433,
	171, 1080, 1137, 563, 1086, 1142, 1055, 1124, 1119, 1120,
	2263, 2436, 2515, 2680, 1564, 561, 1624, 1625, 1626, 1176,
	2679, 1534, 1118, 1535, 1987, 1061, 1060, 2676, 1111, 1971,
	1969, 983, 186, 580, 186, 2815, 1023, 186, 1021, 1934,
	1973, 993, 1825, 2514, 87, 994, 994, 1032, 1130, 1031,
	1030, 1214, 1131, 1029, 1028, 558, 1978, 1975, 1977, 1976,
	1979, 1980, 1136, 1027, 572, 2979, 1026, 591, 1150, 591,
	591, 1970, 1025, 1020, 1311, 1447, 1033, 2436, 1084, 568,
	984, 3031, 969, 2006, 591, 591, 1129, 1006, 969, 1005,
	3000, 969, 967, 1041, 2455, 2422, 1005, 1214, 1575, 1468,
	1893, 2099, 2101, 1907, 2267, 2246, 799, 2264, 1958, 1162,
	1571, 1156, 1044, 1441, 1440, 1439, 581, 156, 2312, 1114,
	2235, 1100, 1012, 1106, 1107, 1108, 1109, 1050, 1572, 1437,
	546, 541, 1213, 2879, 2629, 2280, 1563, 2259, 781, 2675,
	2258, 1215, 1216, 2609, 2167, 37, 1144, 1145, 548, 984,
	550, 564, 2130, 583, 2086, 582, 554, 1777, 552, 556,
	565, 557, 2890, 551, 2216, 562, 581, 581, 553, 566,
	567, 570, 573, 574, 575, 571, 569, 1355, 560, 584,
	1024, 2020, 1022, 1852, 1175, 1172, 1173, 1174, 1179, 1181,
	1178, 1280, 1177, 1953, 3025, 1217, 1218, 1219, 1220, 1171,
	1095, 991, 1214, 2249, 1467, 1225, 2412, 1228, 1951, 116,
	111, 1175, 1172, 1173, 1174, 1179, 1181, 1178, 1565, 1177,
	2219, 1011, 1566, 1567, 1099, 2896, 1171, 1141, 985, 1079,
	2591, 1127, 2904, 2841, 581, 1012, 1152, 1153, 1035, 1584,
	1151, 2426, 2270, 2671, 2603, 2430, 186, 2269, 2908, 2304,
	591, 591, 1968, 2429, 1299, 1568, 1371, 1811, 1812, 1166,
	157, 1221, 2100, 2270, 1694, 2208, 186, 169, 2269, 1185,
	2486, 2487, 1186, 2486, 2487, 1184, 1185, 1312, 2970, 1560,
	112, 1561, 1012, 2490, 1562, 591, 2490, 2431, 2007, 186,
	2752, 81, 2427, 1083, 591, 1948, 86, 2428, 764, 1317,
	591, 2726, 1138, 2726, 1545, 1544, 1546, 1547, 1548, 177,
	2640, 2641, 808, 1314, 1946, 1012, 1113, 1318, 1238, 1315,
	1239, 1242, 2969, 766, 1694, 86, 2034, 1115, 1897, 86,
	1300, 77, 86, 1012, 1011, 1165, 1049, 2647, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 1163,
	585, 1012, 2646, 1164, 176, 178, 179, 180, 1089, 1101,
	1092, 1186, 1316, 1653, 1098, 1938, 95, 1898, 578, 1286,
	1287, 1288, 1289, 1290, 1128, 1896, 1477, 1654, 1655, 1652,
	1305, 1011, 1585, 579, 1476, 1294, 1015, 1005, 1466, 1082,
	1943, 1017, 1023, 1300, 1085, 1018, 1016, 1950, 1021, 2996,
	2630, 2286, 1186, 1183, 984, 1184, 1185, 3023, 1366, 1899,
	3024, 2920, 3022, 1186, 1011, 2872, 1019, 98, 3032, 1895,
	1005, 1008, 1009, 1356, 969, 1817, 1818, 1947, 1002, 1006,
	1943, 1186, 1011, 1302, 3027, 1643, 1645, 1646, 1005, 1008,
	1009, 2051, 969, 2851, 1331, 763, 1002, 1006, 1336, 1001,
	1011, 765, 1313, 2921, 186, 1015, 1005, 2873, 1429, 1644,
	1017, 2705, 1333, 2706, 1018, 1016, 2823, 1945, 1438, 2012,
	2013, 2014, 1361, 1362, 812, 1206, 1207, 1208, 1209, 1211,
	1210, 1212, 1213, 2288, 1208, 1209, 1211, 1210, 1212, 1213,
	87, 591, 1183, 1464, 1184, 1185, 1553, 1186, 707, 708,
	709, 1473, 3033, 1551, 1651, 1475, 1186, 2030, 1478, 1479,
	591, 591, 2822, 591, 1331, 591, 591, 803, 591, 591,
	591, 591, 591, 591, 188, 189, 190, 1319, 2637, 1444,
	1445, 1446, 1509, 1183, 591, 1184, 1185, 2813, 186, 1514,
	1540, 2716, 694, 2715, 1183, 2654, 1184, 1185, 2653, 2298,
	2297, 2296, 2290, 2306, 2294, 186, 2289, 2643, 2287, 1552,
	1331, 2463, 1183, 2292, 1184, 1185, 1550, 1698, 591, 1186,
	186, 1699, 2291, 188, 189, 190, 2451, 2174, 2190, 2029,
	1528, 1573, 2189, 1903, 591, 1554, 186, 2546, 2063, 2293,
	2295, 1538, 1460, 187, 1518, 1519, 187, 1537, 1536, 187,
	1524, 1525, 186, 1539, 592, 1526, 187, 1453, 1186, 186,
	182, 1520, 1517, 1516, 187, 1186, 1515, 1489, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 591, 1183, 187,
	1184, 1185, 1470, 1470, 121, 1511, 2997, 1183, 2899, 1184,
	1185, 591, 591, 1436, 188, 189, 190, 164, 1919, 2898,
	1471, 592, 1331, 2876, 592, 187, 592, 2510, 1482, 186,
	1483, 2875, 1485, 1487, 1463, 1451, 1491, 1493, 1495, 1497,
	1499, 1450, 1449, 1472, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1188, 1340, 1588, 2874, 188, 189, 190, 1580, 1917,
	1592, 2998, 1594, 1595, 1596, 1597, 1474, 2544, 1331, 1601,
	1183, 2818, 1184, 1185, 161, 591, 162, 2803, 2802, 1675,
	1679, 1613, 188, 189, 190, 1512, 1915, 2751, 1684, 591,
	2749, 2712, 2651, 1508, 2636, 1510, 181, 2518, 188, 189,
	190, 1341, 1678, 1678, 591, 591, 1676, 1676, 1576, 1183,
	1442, 1184, 1185, 1186, 1331, 988, 1183, 2454, 1184, 1185,
	987, 1186, 986, 2453, 2199, 2187, 1296, 1962, 1961, 1649,
	1344, 1808, 1790, 1656, 1615, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1590, 1657,
	1647, 120, 1581, 1549, 1541, 1531, 1527, 1523, 1202, 1769,
	2279, 1522, 1521, 1342, 1611, 1186, 1139, 186, 1612, 1155,
	2121, 3015, 591, 2984, 1331, 2121, 2948, 2848, 1619, 1620,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1210, 1212,
	1213, 1186, 2121, 2928, 2847, 1343, 186, 2121, 2924, 591,
	1795, 2807, 1796, 2071, 1331, 165, 1650, 1586, 1587, 186,
	2916, 1331, 2043, 591, 171, 2121, 2892, 2806, 186, 2697,
	186, 1591, 186, 186, 591, 1186, 2132, 591, 1598, 1599,
	1600, 1738, 2689, 2889, 1769, 2563, 1331, 94, 591, 2826,
	1331, 2163, 808, 1771, 1183, 808, 1184, 1185, 2887, 2226,
	1861, 100, 1183, 101, 1184, 1185, 92, 2121, 2814, 1773,
	1774, 1186, 2204, 94, 100, 95, 99, 93, 1860, 1186,
	2602, 2771, 2773, 2772, 2782, 2783, 2784, 2785, 2786, 2787,
	2788, 643, 2604, 1738, 95, 2689, 1331, 1182, 1695, 1186,
	1770, 1801, 92, 591, 1186, 1331, 1183, 2140, 1184, 1185,
	1910, 1911, 1912, 93, 2164, 1914, 1916, 1918, 1331, 2121,
	2687, 1943, 1331, 2166, 1186, 2903, 1827, 2132, 1771, 2021,
	591, 1331, 1183, 2121, 1184, 1185, 591, 1473, 2607, 1331,
	1473, 156, 1473, 1331, 1870, 1871, 1872, 1873, 1942, 1856,
	1855, 1789, 1865, 2624, 1866, 1867, 1868, 1869, 1182, 1331,
	778, 1838, 2811, 2056, 1331, 1944, 1183, 1331, 1184, 1185,
	1876, 1877, 1878, 1879, 1803, 1822, 1932, 2025, 2140, 1886,
	2563, 591, 2672, 591, 1859, 2442, 2024, 1680, 1820, 591,
	591, 2444, 2443, 1892, 1686, 1687, 2440, 2441, 2602, 1843,
	1842, 2349, 1183, 1186, 1184, 1185, 2565, 1858, 2440, 2439,
	1183, 1857, 1184, 1185, 812, 1186, 2407, 812, 2140, 1331,
	2021, 1331, 1943, 1186, 2023, 2006, 1902, 186, 2006, 2245,
	1183, 1929, 1184, 1185, 186, 1183, 2139, 1184, 1185, 1432,
	2229, 186, 186, 2222, 2223, 186, 1772, 186, 2117, 1775,
	1776, 2121, 2120, 1844, 186, 1183, 2655, 1184, 1185, 1887,
	2374, 186, 1014, 94, 187, 1901, 187, 2021, 1905, 187,
	2602, 1913, 1470, 1882, 1883, 2163, 1432, 1431, 1377, 1376,
	2056, 2040, 1955, 1013, 157, 1935, 1800, 186, 1936, 1939,
	2140, 169, 591, 1956, 1887, 2039, 1943, 2561, 1926, 592,
	1815, 592, 592, 1335, 1957, 2552, 2656, 2657, 2658, 1937,
	1959, 1960, 1940, 1780, 1941, 1627, 592, 592, 1570, 1363,
	2021, 2777, 2778, 1204, 1205, 1206, 1207, 1208, 1209, 1211,
	1210, 1212, 1213, 177, 1183, 768, 1184, 1185, 2164, 1997,
	1998, 996, 995, 2975, 2000, 2931, 1183, 2006, 1184, 1185,
	87, 2837, 1330, 2001, 1183, 1965, 1184, 1185, 1338, 2804,
	2763, 2670, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 2667, 2649, 2555, 2554, 1434, 176, 178,
	179, 180, 688, 1885, 638, 692, 640, 689, 690, 2508,
	636, 639, 691, 2468, 1649, 1504, 1186, 2016, 1990, 2018,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1210, 1212,
	1213, 1186, 87, 2017, 2464, 1186, 2230, 1881, 1875, 641,
	642, 2770, 2774, 2775, 2776, 2779, 2780, 2781, 2789, 2791,
	666, 2790, 2792, 2793, 2794, 2797, 2798, 2799, 2800, 2795,
	2796, 2801, 1186, 1874, 2004, 1505, 1506, 1507, 1556, 1186,
	1465, 186, 1461, 1430, 113, 1186, 2195, 2466, 2659, 186,
	2196, 1084, 1501, 2512, 591, 2105, 2092, 2838, 2015, 1186,
	591, 1650, 1900, 1186, 2614, 2615, 1793, 1617, 187, 2191,
	3010, 591, 592, 592, 2103, 3008, 2991, 2620, 1678, 101,
	2913, 2109, 1676, 2551, 2856, 2617, 2460, 2080, 187, 1186,
	100, 2459, 99, 2196, 186, 2660, 2661, 2033, 186, 1502,
	1503, 94, 2458, 2374, 2396, 2209, 1991, 592, 2136, 2397,
	2394, 187, 2619, 2173, 2079, 2395, 592, 1183, 2393, 1184,
	1185, 2078, 592, 1186, 2392, 2981, 2949, 2077, 1807, 1618,
	1186, 1339, 1183, 2049, 1184, 1185, 1183, 1799, 1184, 1185,
	1771, 2076, 2366, 2368, 37, 2075, 2398, 2608, 2149, 2150,
	2354, 2369, 2122, 2156, 2353, 2871, 2733, 2742, 2732, 1331,
	2744, 591, 2598, 1183, 1186, 1184, 1185, 186, 2118, 2363,
	1183, 2074, 1184, 1185, 186, 1305, 1183, 1186, 1184, 1185,
	1569, 2595, 2093, 782, 1186, 2438, 754, 1770, 591, 2594,
	1183, 783, 1184, 1185, 1183, 591, 1184, 1185, 2181, 1473,
	1473, 2200, 1046, 2198, 591, 2073, 2731, 1690, 2201, 2202,
	2184, 2185, 2072, 2119, 1045, 2221, 2129, 2114, 2177, 2242,
	1183, 1691, 1184, 1185, 92, 2526, 2161, 2195, 2241, 2155,
	186, 186, 186, 186, 186, 93, 92, 2168, 2165, 2273,
	1154, 2237, 1892, 94, 2031, 2175, 2066, 93, 2236, 101,
	121, 186, 186, 2178, 1183, 2600, 1184, 1185, 94, 2065,
	100, 1183, 99, 1184, 1185, 2188, 2064, 186, 1817, 1818,
	3019, 94, 2456, 1994, 2888, 2197, 187, 2145, 2148, 2149,
	2150, 2146, 2833, 2147, 2151, 2437, 591, 2205, 2210, 2211,
	2212, 2153, 2206, 1804, 2352, 1183, 1983, 1184, 1185, 1186,
	790, 791, 2351, 2240, 1982, 1981, 2580, 1453, 1183, 2010,
	1184, 1185, 99, 592, 100, 1183, 2863, 1184, 1185, 2862,
	2750, 2083, 2084, 2748, 2747, 677, 2740, 2239, 2668, 2599,
	2597, 2469, 592, 592, 764, 592, 1927, 592, 592, 1448,
	592, 592, 592, 592, 592, 592, 789, 591, 1678, 2739,
	1678, 2299, 1676, 1678, 1676, 2303, 592, 1676, 1678, 101,
	187, 2588, 1676, 591, 2132, 2343, 2262, 3012, 3011, 2282,
	100, 2231, 2232, 101, 2117, 2313, 2041, 187, 186, 2265,
	2281, 2061, 591, 1791, 100, 1357, 99, 590, 2329, 1348,
	592, 591, 187, 2330, 2326, 106, 107, 3011, 591, 591,
	3012, 186, 186, 186, 186, 186, 592, 2300, 187, 2343,
	2877, 2635, 2283, 186, 780, 103, 2371, 88, 186, 1,
	2386, 186, 2639, 186, 187, 2964, 186, 186, 186, 559,
	1183, 187, 1184, 1185, 810, 2317, 1781, 966, 1303, 973,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 592,
	2406, 2992, 2960, 2336, 2337, 2338, 2339, 770, 2961, 1542,
	1186, 2452, 2342, 592, 592, 2356, 2344, 2380, 1532, 1186,
	186, 2700, 2357, 1739, 2834, 2472, 1933, 1318, 2156, 2666,
	1890, 187, 2355, 591, 1004, 2358, 2331, 2332, 2333, 2334,
	2335, 591, 146, 2345, 2346, 2347, 186, 1186, 1853, 1854,
	2944, 2271, 772, 1186, 2272, 2449, 2450, 186, 1186, 110,
	2348, 2399, 2388, 2389, 2324, 2391, 2324, 2408, 2492, 2324,
	2409, 962, 95, 2410, 2324, 186, 2387, 592, 186, 2390,
	1580, 109, 1007, 771, 1112, 1928, 2690, 2182, 2527, 1862,
	2416, 592, 2060, 1383, 1381, 1202, 2385, 2019, 2448, 2447,
	2446, 2059, 1382, 2403, 2404, 1380, 592, 592, 1385, 1384,
	2042, 2566, 1621, 588, 2152, 2500, 2499, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1211, 1210, 1212, 1213, 184, 2057,
	1372, 1892, 2491, 1349, 2470, 2053, 2503, 2377, 1047, 549,
	2052, 1183, 2377, 1184, 1185, 2445, 1963, 555, 1226, 2560,
	1183, 1616, 1184, 1185, 2350, 2169, 809, 2519, 802, 1792,
	591, 186, 2522, 2107, 2524, 2525, 2521, 2382, 2592, 187,
	2362, 2364, 2124, 2367, 592, 2360, 2870, 2741, 1183, 2530,
	1184, 1185, 2536, 2929, 1183, 2179, 1184, 1185, 1345, 1183,
	2529, 1184, 1185, 2032, 2533, 2534, 1692, 2535, 187, 1832,
	2537, 592, 2539, 1642, 2541, 613, 2145, 2148, 2149, 2150,
	2146, 187, 2147, 2151, 612, 592, 2614, 2615, 186, 610,
	187, 2110, 187, 2133, 187, 187, 592, 1189, 2471, 592,
	697, 2097, 1358, 2144, 1329, 1325, 2638, 2581, 2582, 2142,
	592, 1329, 1325, 2141, 1992, 1839, 2616, 186, 2612, 1326,
	2589, 2956, 1834, 2596, 1830, 2586, 1326, 2116, 621, 2621,
	614, 606, 2632, 2601, 1332, 1334, 186, 2498, 2248, 186,
	186, 186, 2509, 2250, 1797, 1798, 1328, 2618, 1327, 591,
	591, 1322, 1323, 1328, 2180, 1327, 2611, 2505, 1167, 1321,
	2644, 2645, 2625, 600, 975, 592, 1689, 2839, 2500, 2499,
	2633, 2894, 2009, 2548, 1320, 2634, 2673, 2674, 2627, 2628,
	1702, 1703, 2626, 2901, 2480, 2684, 2461, 2227, 1920, 63,
	41, 1730, 592, 591, 591, 591, 591, 1202, 592, 595,
	2977, 1158, 796, 2650, 32, 2652, 31, 30, 29, 28,
	23, 22, 2677, 21, 20, 19, 2681, 2682, 2683, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1211, 1210, 1212, 1213,
	25, 18, 17, 2696, 16, 2483, 2987, 3018, 115, 50,
	2694, 2695, 47, 592, 45, 592, 123, 122, 48, 44,
	1087, 592, 592, 2711, 42, 27, 26, 15, 14, 13,
	12, 11, 10, 9, 186, 5, 4, 35, 1678, 34,
	1678, 33, 1676, 1161, 1676, 24, 2, 2214, 1922, 0,
	0, 0, 0, 0, 0, 2707, 0, 0, 591, 187,
	591, 0, 0, 2736, 0, 0, 187, 0, 2708, 0,
	0, 0, 0, 187, 187, 2720, 0, 187, 2765, 187,
	2757, 0, 2719, 0, 2729, 0, 187, 0, 0, 0,
	0, 0, 810, 187, 810, 810, 2746, 2745, 2759, 0,
	0, 1678, 2737, 2753, 764, 1676, 0, 2755, 0, 1157,
	1159, 0, 0, 0, 0, 0, 37, 0, 0, 187,
	0, 591, 0, 0, 592, 2761, 2380, 0, 0, 0,
	2380, 0, 0, 2769, 186, 0, 0, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2812, 0,
	591, 0, 0, 0, 0, 0, 0, 0, 0, 2824,
	2810, 2808, 0, 0, 2809, 2766, 2767, 0, 2836, 0,
	0, 0, 0, 0, 0, 2853, 2854, 0, 2819, 2820,
	2821, 591, 2857, 2828, 2829, 591, 591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2816, 0,
	0, 0, 0, 0, 2324, 1678, 2324, 0, 0, 1676,
	0, 0, 0, 0, 591, 0, 0, 0, 1297, 0,
	0, 0, 0, 0, 0, 0, 2867, 2866, 2864, 2865,
	0, 0, 0, 0, 0, 0, 2880, 0, 0, 0,
	0, 2881, 0, 0, 0, 2377, 2878, 0, 0, 0,
	0, 0, 0, 0, 0, 591, 0, 0, 0, 764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 1309, 1310, 0, 2380, 0,
	2884, 0, 2886, 187, 0, 0, 0, 0, 591, 186,
	0, 187, 0, 0, 0, 2897, 592, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 2869, 2902, 0, 0,
	1353, 0, 0, 592, 2900, 2905, 0, 0, 0, 810,
	0, 0, 0, 0, 0, 1373, 0, 0, 0, 0,
	591, 0, 0, 0, 0, 0, 187, 2893, 0, 0,
	187, 0, 0, 37, 0, 0, 0, 0, 2922, 0,
	0, 0, 0, 0, 591, 591, 0, 0, 0, 2927,
	0, 0, 2930, 0, 2932, 0, 0, 591, 0, 0,
	1696, 0, 2836, 2945, 1697, 2943, 186, 591, 0, 0,
	2935, 2952, 0, 2940, 2937, 2936, 2934, 2939, 2938, 0,
	0, 0, 0, 0, 0, 2973, 2963, 2968, 37, 0,
	0, 0, 0, 592, 0, 2955, 0, 0, 0, 187,
	0, 0, 2980, 0, 0, 0, 187, 0, 0, 0,
	0, 2986, 0, 0, 0, 0, 591, 0, 0, 0,
	592, 0, 0, 1332, 1779, 591, 0, 592, 0, 0,
	0, 3006, 3001, 0, 0, 0, 592, 3005, 3009, 3007,
	3003, 0, 0, 2999, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1678, 3020, 1802, 0, 1676, 3026,
	0, 3028, 187, 187, 187, 187, 187, 0, 0, 0,
	0, 0, 0, 0, 3034, 0, 3036, 3037, 2854, 3035,
	0, 0, 0, 187, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1678, 0, 187,
	0, 1676, 0, 0, 0, 0, 966, 0, 0, 0,
	2377, 0, 0, 0, 0, 0, 0, 0, 592, 1297,
	0, 0, 0, 0, 0, 1481, 1481, 0, 1481, 0,
	1481, 1481, 0, 1490, 1481, 1481, 1481, 1481, 1481, 0,
	0, 0, 0, 0, 0, 0, 1297, 0, 1297, 966,
	0, 0, 0, 0, 0, 0, 0, 0, 1904, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 592,
	0, 2220, 0, 1555, 0, 0, 0, 0, 0, 0,
	678, 0, 0, 0, 121, 592, 143, 0, 0, 1577,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	187, 0, 0, 0, 592, 0, 0, 0, 0, 0,
	0, 0, 0, 592, 0, 0, 0, 0, 0, 0,
	592, 592, 0, 187, 187, 187, 187, 187, 153, 0,
	0, 185, 810, 142, 545, 187, 0, 586, 0, 0,
	187, 0, 0, 187, 545, 187, 810, 810, 187, 187,
	187, 0, 545, 0, 161, 0, 162, 0, 0, 0,
	0, 0, 0, 1723, 0, 0, 0, 777, 0, 0,
	0, 0, 1456, 1457, 152, 151, 181, 0, 0, 0,
	0, 0, 0, 795, 0, 795, 0, 0, 0, 0,
	0, 0, 187, 545, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	1672, 0, 0, 592, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 1685, 0, 0, 0, 0, 187,
	0, 1297, 0, 0, 0, 0, 0, 0, 0, 1700,
	1701, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	187, 1715, 1704, 1705, 1706, 1707, 1717, 1708, 1709, 1710,
	1722, 1718, 1711, 1712, 1719, 1720, 1721, 1713, 1714, 1716,
	0, 0, 0, 147, 1458, 154, 810, 1455, 0, 148,
	149, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	1400, 0, 0, 2022, 171, 0, 0, 2026, 1202, 2027,
	2028, 1198, 0, 1199, 0, 0, 0, 1794, 2036, 0,
	0, 2037, 2038, 0, 0, 0, 0, 1200, 1201, 1197,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1210, 1212,
	1213, 0, 592, 187, 1806, 0, 0, 0, 2044, 2045,
	2046, 2047, 2048, 0, 2050, 0, 0, 0, 1353, 0,
	2054, 810, 2055, 0, 0, 0, 2058, 0, 0, 810,
	0, 0, 810, 0, 2067, 2068, 2069, 2070, 0, 0,
	0, 0, 0, 966, 0, 0, 0, 2081, 2082, 0,
	0, 0, 0, 0, 0, 2087, 2088, 2089, 2090, 2091,
	187, 1802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2104, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 973, 0,
	1388, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 187, 187, 187, 0, 0, 0, 0, 0, 0,
	0, 592, 592, 0, 0, 966, 0, 0, 0, 0,
	0, 973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	0, 0, 0, 0, 0, 592, 592, 592, 592, 0,
	0, 0, 0, 0, 0, 0, 966, 0, 1672, 0,
	0, 0, 1401, 0, 1672, 1672, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 187, 0, 0, 0,
	1414, 1417, 1418, 1419, 1420, 1421, 1422, 0, 1423, 1424,
	1425, 1426, 1427, 1402, 1403, 1404, 1405, 1386, 1387, 1415,
	592, 1389, 592, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 0, 177, 1399, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 0, 0, 0, 0, 2003, 0, 0,
	0, 0, 545, 0, 545, 0, 0, 545, 0, 0,
	0, 0, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 0, 0, 0, 0, 0, 176, 178,
	179, 180, 0, 592, 0, 2310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 592,
	0, 0, 0, 0, 0, 2325, 0, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2340, 2341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 592, 0, 0, 0, 592, 592, 0,
	0, 0, 0, 0, 0, 1416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 592, 0, 0, 794,
	2383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2401, 2402, 0,
	0, 0, 0, 810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 0, 0, 592, 0, 1806,
	0, 0, 0, 0, 0, 2111, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 2126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 604, 0, 0,
	592, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 788,
	0, 0, 0, 0, 0, 0, 777, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 0, 0, 592, 592, 0, 0,
	0, 2528, 0, 0, 0, 0, 2203, 0, 2532, 592,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 592,
	0, 0, 2542, 2543, 2545, 2547, 0, 0, 0, 0,
	0, 0, 2553, 1806, 0, 0, 0, 2557, 2558, 2559,
	2228, 0, 0, 0, 2562, 0, 0, 0, 0, 2233,
	2564, 0, 0, 2568, 2569, 2570, 2571, 2572, 2573, 2574,
	2575, 2576, 2577, 0, 0, 2578, 0, 0, 592, 0,
	0, 2583, 2985, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 1400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2605, 2606, 0, 0, 2610, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2622, 2623, 0, 0,
	0, 1672, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1297, 0, 1297,
	0, 0, 1297, 0, 0, 0, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 1306, 0, 0, 0, 0,
	0, 0, 810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1298, 0, 0, 0, 1481, 0,
	0, 0, 0, 0, 0, 0, 2688, 0, 0, 0,
	0, 0, 1388, 0, 0, 0, 0, 2359, 0, 0,
	0, 1298, 0, 1298, 0, 0, 810, 0, 545, 544,
	1297, 0, 0, 2384, 1481, 1297, 0, 0, 0, 594,
	0, 0, 0, 0, 0, 1529, 0, 757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 2717,
	0, 0, 0, 2718, 0, 0, 1579, 0, 0, 2722,
	0, 0, 0, 0, 0, 0, 0, 0, 970, 0,
	0, 0, 545, 0, 1401, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 0, 0, 0, 0, 1602, 1603,
	545, 545, 545, 545, 545, 545, 545, 0, 966, 0,
	0, 1297, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 545,
	0, 0, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 0,
	1423, 1424, 1425, 1426, 1427, 1402, 1403, 1404, 1405, 1386,
	1387, 1415, 0, 1389, 0, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 0, 0, 1399, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 0, 0, 2825, 0, 0,
	0, 0, 0, 795, 0, 0, 2832, 0, 0, 0,
	795, 795, 0, 0, 0, 0, 1298, 0, 0, 0,
	0, 0, 2842, 2843, 2844, 0, 2845, 2846, 0, 0,
	0, 0, 2849, 0, 2850, 0, 2852, 2855, 0, 0,
	0, 0, 0, 2859, 0, 2359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1187, 0, 0, 0, 0,
	795, 1579, 795, 795, 795, 795, 795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2885, 0, 1234, 0, 0, 0, 1529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 795, 0, 0, 0, 0, 1416, 0, 0,
	0, 0, 0, 0, 0, 0, 777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 0, 0, 1579, 0, 545, 0,
	545, 0, 545, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 2907, 0, 604, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 1806, 2912, 0, 0, 0,
	0, 2917, 0, 0, 0, 0, 0, 2918, 2919, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2925, 78, 39, 40, 80,
	0, 0, 0, 0, 0, 0, 0, 0, 2701, 2702,
	2703, 2704, 0, 0, 0, 0, 84, 0, 0, 0,
	43, 69, 70, 0, 67, 71, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 0, 0, 0, 1347,
	0, 0, 0, 0, 0, 0, 2976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1297, 0, 1297,
	0, 0, 56, 0, 0, 2982, 0, 0, 0, 2983,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1297, 0,
	0, 0, 0, 2758, 0, 2760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1088, 0, 1094,
	0, 0, 1096, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 0,
	0, 545, 545, 0, 0, 545, 0, 1995, 0, 0,
	0, 0, 0, 0, 545, 0, 1806, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 46, 49, 52,
	51, 54, 0, 66, 0, 0, 75, 72, 0, 0,
	0, 0, 0, 0, 1435, 0, 2860, 0, 704, 79,
	2860, 2860, 0, 0, 0, 0, 0, 0, 0, 55,
	83, 82, 0, 0, 64, 65, 53, 0, 0, 0,
	0, 0, 73, 74, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 57, 58, 0, 59, 60, 61, 62, 0,
	1806, 0, 0, 0, 0, 0, 767, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 767, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 974, 0, 0, 0, 0, 795, 795, 1582,
	0, 0, 0, 0, 0, 0, 0, 0, 1579, 0,
	0, 545, 0, 0, 0, 0, 0, 0, 0, 1529,
	0, 0, 0, 1297, 1360, 2923, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 810,
	810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2953, 0, 545, 0, 0, 0, 545, 0,
	0, 0, 2958, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 1637, 1638, 1639, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 1682, 1683, 0, 0, 0, 0, 0,
	2958, 1688, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 0, 0, 2213, 0, 1724, 1725, 1726, 1727,
	1728, 1729, 1731, 1735, 1736, 604, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 545, 545, 545, 545, 0, 0, 604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 545, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 0, 1813, 1814, 0, 0, 0, 0, 0,
	0, 0, 795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1850, 0, 1513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1298, 0, 1298, 0, 0, 1298, 0, 0,
	0, 0, 1298, 0, 0, 1557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1888, 0, 0, 0, 0, 0, 0, 1589, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 545, 0,
	0, 0, 0, 0, 0, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 0, 0, 0, 1298, 0, 0, 0, 0,
	1298, 545, 545, 545, 545, 545, 0, 0, 0, 0,
	0, 0, 0, 2400, 0, 0, 0, 0, 545, 0,
	0, 1529, 0, 545, 1630, 0, 545, 2411, 1579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1147, 1298, 1147, 1147, 0,
	0, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 0, 0, 545, 0,
	0, 767, 1222, 1223, 1224, 0, 1227, 0, 1229, 1230,
	1231, 1232, 0, 1235, 1237, 1237, 0, 1237, 1241, 1241,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 0, 1281, 1282,
	1283, 1284, 1285, 0, 0, 0, 0, 1241, 1241, 1241,
	1241, 1241, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 545, 0, 1823, 0, 1826, 0, 0, 1630, 0,
	0, 0, 0, 0, 2035, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1234, 0, 0, 0, 0, 0, 1307, 0, 545, 0,
	0, 0, 767, 0, 0, 0, 767, 0, 182, 0,
	0, 0, 767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 121, 0, 143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 545, 0, 0, 545,
	545, 545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1347, 153, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	130, 131, 152, 151, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 1974,
	0, 0, 1298, 0, 1298, 0, 1988, 1989, 0, 0,
	1993, 0, 0, 0, 0, 0, 0, 0, 0, 1996,
	0, 0, 0, 0, 1529, 0, 1999, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 2002, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 128, 154, 135, 127, 0, 148, 149, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 136, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 137, 132,
	133, 134, 138, 0, 0, 0, 0, 0, 0, 129,
	0, 2278, 0, 0, 1529, 0, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2301,
	2302, 0, 0, 0, 2305, 0, 0, 0, 0, 2307,
	2308, 2309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2314, 2315, 2316, 0, 0, 1742, 2318, 0, 2319,
	2320, 0, 0, 0, 2327, 2328, 0, 0, 0, 0,
	0, 0, 1742, 1742, 1742, 1742, 1742, 604, 604, 604,
	604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1147,
	1147, 0, 2372, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1529, 0, 0, 0, 182, 0, 0, 0, 0, 2405,
	0, 0, 0, 2160, 0, 1452, 0, 0, 0, 545,
	0, 0, 0, 0, 0, 0, 0, 150, 121, 0,
	143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1298, 0,
	144, 0, 0, 145, 0, 0, 0, 0, 2467, 0,
	0, 0, 153, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 2207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 161, 169,
	162, 0, 0, 0, 0, 0, 1529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1456, 1457, 152, 151,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 2253, 2254, 2255, 2256, 2257,
	0, 0, 0, 0, 0, 0, 2550, 0, 0, 0,
	0, 0, 0, 2556, 0, 0, 1630, 2266, 0, 0,
	158, 163, 160, 166, 167, 168, 170, 172, 173, 174,
	175, 0, 2274, 0, 0, 0, 176, 178, 179, 180,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 1458, 154,
	0, 1455, 0, 148, 149, 0, 0, 0, 0, 165,
	0, 604, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2693, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2457, 0, 0, 0, 0,
	0, 0, 0, 0, 2709, 0, 2710, 0, 0, 0,
	0, 2713, 2714, 0, 0, 0, 0, 0, 0, 0,
	0, 2495, 0, 0, 0, 2721, 0, 0, 0, 0,
	0, 0, 2504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 0, 0, 0, 0, 0, 0,
	2520, 0, 0, 2523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2762, 0, 144, 2764, 0, 145,
	2011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 2805,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 0, 0, 2868,
	604, 0, 176, 178, 179, 180, 0, 0, 2085, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2648, 0, 0, 2102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2662, 0, 767, 2663, 2664, 2665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2137, 2138, 0, 0, 0, 0, 0,
	0, 0, 2157, 0, 2158, 2159, 0, 604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	0, 2911, 0, 0, 698, 705, 706, 707, 708, 709,
	699, 701, 0, 0, 0, 700, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 703, 710,
	711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 604, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 698, 705,
	706, 707, 708, 709, 699, 701, 0, 0, 0, 700,
	0, 0, 0, 2234, 2501, 2502, 0, 0, 0, 0,
	0, 2974, 703, 710, 711, 0, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 2501, 2502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2381, 0, 79, 0, 0, 1833,
	1833, 1833, 1833, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2157, 767, 0, 705,
	706, 1833, 0, 0, 1833, 1677, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2906, 0, 0, 0, 688, 0,
	0, 692, 0, 689, 690, 0, 0, 0, 691, 0,
	2106, 0, 0, 705, 706, 0, 0, 0, 0, 1677,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2497, 0, 0, 0,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 0, 2531, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2730, 0,
	2734, 2735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2381, 0, 79, 0, 2381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2895, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 0, 0, 944,
	929, 462, 79, 875, 947, 844, 863, 957, 866, 869,
	911, 823, 889, 378, 860, 815, 848, 818, 855, 819,
	846, 877, 250, 843, 931, 893, 946, 333, 247, 825,
	849, 392, 865, 197, 913, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 953,
	337, 899, 2926, 446, 363, 0, 0, 79, 879, 935,
	887, 925, 874, 912, 833, 898, 948, 861, 908, 949,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 2946, 0, 2947, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 857, 905, 943, 858,
	907, 245, 293, 252, 244, 466, 954, 934, 822, 886,
	942, 0, 0, 214, 945, 881, 0, 910, 0, 960,
	817, 901, 0, 820, 824, 956, 938, 852, 255, 0,
	0, 0, 0, 0, 0, 0, 878, 888, 922, 872,
	0, 0, 0, 0, 0, 0, 0, 850, 0, 897,
	0, 0, 0, 829, 821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 876, 0, 0,
	0, 832, 0, 851, 923, 0, 814, 276, 826, 364,
	237, 0, 927, 937, 873, 502, 941, 871, 870, 917,
	830, 933, 864, 332, 828, 301, 192, 210, 0, 862,
	374, 417, 423, 932, 847, 856, 235, 854, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 896, 915,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 1149, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 842, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 928, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	920, 959, 387, 422, 225, 487, 445, 837, 841, 835,
	902, 836, 891, 892, 838, 950, 951, 952, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 924, 831, 0,
	839, 840, 0, 930, 939, 940, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 895, 191, 207,
	335, 955, 410, 268, 518, 496, 492, 816, 834, 242,
	845, 853, 0, 859, 867, 868, 880, 882, 883, 884,
	885, 903, 904, 906, 914, 916, 919, 921, 926, 936,
	958, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 894,
	900, 346, 261, 281, 292, 909, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 890, 918, 342, 463, 464,
	288, 360, 0, 0, 944, 929, 462, 0, 875, 947,
	844, 863, 957, 866, 869, 911, 823, 889, 378, 860,
	815, 848, 818, 855, 819, 846, 877, 250, 843, 931,
	893, 946, 333, 247, 825, 849, 392, 865, 197, 913,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 953, 337, 899, 0, 446, 363,
	0, 0, 0, 879, 935, 887, 925, 874, 912, 833,
	898, 948, 861, 908, 949, 295, 232, 196, 375, 447,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 318, 327, 326, 307, 308, 310, 312, 317, 324,
	330, 857, 905, 943, 858, 907, 245, 293, 252, 244,
	466, 954, 934, 822, 886, 942, 0, 0, 214, 945,
	881, 0, 910, 0, 960, 817, 901, 0, 820, 824,
	956, 938, 852, 255, 0, 0, 0, 0, 0, 0,
	0, 878, 888, 922, 872, 0, 0, 0, 0, 0,
	2412, 0, 850, 0, 897, 0, 0, 0, 829, 821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 876, 0, 0, 0, 832, 0, 851, 923,
	0, 814, 276, 826, 364, 237, 0, 927, 937, 873,
	502, 941, 871, 870, 917, 830, 933, 864, 332, 828,
	301, 192, 210, 0, 862, 374, 417, 423, 932, 847,
	856, 235, 854, 421, 388, 485, 218, 264, 414, 394,
	419, 401, 267, 896, 915, 420, 338, 471, 408, 482,
	503, 504, 243, 368, 493, 460, 499, 517, 211, 240,
	382, 453, 488, 443, 361, 467, 468, 300, 442, 274,
	195, 336, 509, 209, 429, 227, 216, 473, 491, 269,
	412, 202, 455, 480, 224, 433, 0, 0, 519, 204,
	478, 452, 357, 297, 298, 203, 0, 413, 248, 272,
	238, 377, 475, 476, 236, 520, 213, 498, 206, 1149,
	497, 370, 470, 479, 358, 348, 205, 477, 356, 347,
	303, 322, 323, 260, 283, 406, 341, 407, 284, 366,
	365, 367, 198, 489, 0, 199, 0, 448, 490, 521,
	219, 220, 222, 842, 259, 263, 271, 273, 279, 280,
	287, 334, 381, 405, 403, 409, 928, 465, 483, 494,
	501, 507, 508, 510, 511, 512, 513, 514, 516, 515,
	369, 286, 444, 302, 339, 920, 959, 387, 422, 225,
	487, 445, 837, 841, 835, 902, 836, 891, 892, 838,
	950, 951, 952, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 0, 924, 831, 0, 839, 840, 0, 930, 939,
	940, 540, 349, 435, 484, 304, 316, 319, 309, 328,
	0, 329, 305, 306, 311, 313, 314, 315, 320, 321,
	325, 331, 895, 191, 207, 335, 955, 410, 268, 518,
	496, 492, 816, 834, 242, 845, 853, 0, 859, 867,
	868, 880, 882, 883, 884, 885, 903, 904, 906, 914,
	916, 919, 921, 926, 936, 958, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 486, 500, 505, 430, 278,
	481, 506, 0, 344, 894, 900, 346, 261, 281, 292,
	909, 495, 451, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 457, 458, 459, 461, 359, 246, 395,
	890, 918, 342, 463, 464, 288, 360, 0, 0, 944,
	929, 462, 0, 875, 947, 844, 863, 957, 866, 869,
	911, 823, 889, 378, 860, 815, 848, 818, 855, 819,
	846, 877, 250, 843, 931, 893, 946, 333, 247, 825,
	849, 392, 865, 197, 913, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 953,
	337, 899, 0, 446, 363, 0, 0, 0, 879, 935,
	887, 925, 874, 912, 833, 898, 948, 861, 908, 949,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 857, 905, 943, 858,
	907, 245, 293, 252, 244, 466, 954, 934, 822, 886,
	942, 0, 0, 214, 945, 881, 0, 910, 0, 960,
	817, 901, 0, 820, 824, 956, 938, 852, 255, 0,
	0, 0, 0, 0, 0, 0, 878, 888, 922, 872,
	0, 0, 0, 0, 0, 2370, 0, 850, 0, 897,
	0, 0, 0, 829, 821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 876, 0, 0,
	0, 832, 0, 851, 923, 0, 814, 276, 826, 364,
	237, 0, 927, 937, 873, 502, 941, 871, 870, 917,
	830, 933, 864, 332, 828, 301, 192, 210, 0, 862,
	374, 417, 423, 932, 847, 856, 235, 854, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 896, 915,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 1149, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 842, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 928, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	920, 959, 387, 422, 225, 487, 445, 837, 841, 835,
	902, 836, 891, 892, 838, 950, 951, 952, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 924, 831, 0,
	839, 840, 0, 930, 939, 940, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 895, 191, 207,
	335, 955, 410, 268, 518, 496, 492, 816, 834, 242,
	845, 853, 0, 859, 867, 868, 880, 882, 883, 884,
	885, 903, 904, 906, 914, 916, 919, 921, 926, 936,
	958, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 894,
	900, 346, 261, 281, 292, 909, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 890, 918, 342, 463, 464,
	288, 360, 0, 0, 944, 929, 462, 0, 875, 947,
	844, 863, 957, 866, 869, 911, 823, 889, 378, 860,
	815, 848, 818, 855, 819, 846, 877, 250, 843, 931,
	893, 946, 333, 247, 825, 849, 392, 865, 197, 913,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 953, 337, 899, 0, 446, 363,
	0, 0, 0, 879, 935, 887, 925, 874, 912, 833,
	898, 948, 861, 908, 949, 295, 232, 196, 375, 447,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 318, 327, 326, 307, 308, 310, 312, 317, 324,
	330, 857, 905, 943, 858, 907, 245, 293, 252, 244,
	466, 954, 934, 822, 886, 942, 0, 0, 214, 945,
	881, 0, 910, 0, 960, 817, 901, 0, 820, 824,
	956, 938, 852, 255, 0, 0, 0, 0, 0, 0,
	0, 878, 888, 922, 872, 0, 0, 0, 0, 0,
	1821, 0, 850, 0, 897, 0, 0, 0, 829, 821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 876, 0, 0, 0, 832, 0, 851, 923,
	0, 814, 276, 826, 364, 237, 0, 927, 937, 873,
	502, 941, 871, 870, 917, 830, 933, 864, 332, 828,
	301, 192, 210, 0, 862, 374, 417, 423, 932, 847,
	856, 235, 854, 421, 388, 485, 218, 264, 414, 394,
	419, 401, 267, 896, 915, 420, 338, 471, 408, 482,
	503, 504, 243, 368, 493, 460, 499, 517, 211, 240,
	382, 453, 488, 443, 361, 467, 468, 300, 442, 274,
	195, 336, 509, 209, 429, 227, 216, 473, 491, 269,
	412, 202, 455, 480, 224, 433, 0, 0, 519, 204,
	478, 452, 357, 297, 298, 203, 0, 413, 248, 272,
	238, 377, 475, 476, 236, 520, 213, 498, 206, 1149,
	497, 370, 470, 479, 358, 348, 205, 477, 356, 347,
	303, 322, 323, 260, 283, 406, 341, 407, 284, 366,
	365, 367, 198, 489, 0, 199, 0, 448, 490, 521,
	219, 220, 222, 842, 259, 263, 271, 273, 279, 280,
	287, 334, 381, 405, 403, 409, 928, 465, 483, 494,
	501, 507, 508, 510, 511, 512, 513, 514, 516, 515,
	369, 286, 444, 302, 339, 920, 959, 387, 422, 225,
	487, 445, 837, 841, 835, 902, 836, 891, 892, 838,
	950, 951, 952, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 0, 924, 831, 0, 839, 840, 0, 930, 939,
	940, 540, 349, 435, 484, 304, 316, 319, 309, 328,
	0, 329, 305, 306, 311, 313, 314, 315, 320, 321,
	325, 331, 895, 191, 207, 335, 955, 410, 268, 518,
	496, 492, 816, 834, 242, 845, 853, 0, 859, 867,
	868, 880, 882, 883, 884, 885, 903, 904, 906, 914,
	916, 919, 921, 926, 936, 958, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 486, 500, 505, 430, 278,
	481, 506, 0, 344, 894, 900, 346, 261, 281, 292,
	909, 495, 451, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 457, 458, 459, 461, 359, 246, 395,
	890, 918, 342, 463, 464, 288, 360, 0, 0, 944,
	929, 462, 0, 875, 947, 844, 863, 957, 866, 869,
	911, 823, 889, 378, 860, 815, 848, 818, 855, 819,
	846, 877, 250, 843, 931, 893, 946, 333, 247, 825,
	849, 392, 865, 197, 913, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 953,
	337, 899, 0, 446, 363, 0, 0, 0, 879, 935,
	887, 925, 874, 912, 833, 898, 948, 861, 908, 949,
	295, 232, 196, 375, 447, 266, 0, 87, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 857, 905, 943, 858,
	907, 245, 293, 252, 244, 466, 954, 934, 822, 886,
	942, 0, 0, 214, 945, 881, 0, 910, 0, 960,
	817, 901, 0, 820, 824, 956, 938, 852, 255, 0,
	0, 0, 0, 0, 0, 0, 878, 888, 922, 872,
	0, 0, 0, 0, 0, 0, 0, 850, 0, 897,
	0, 0, 0, 829, 821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 876, 0, 0,
	0, 832, 0, 851, 923, 0, 814, 276, 826, 364,
	237, 0, 927, 937, 873, 502, 941, 871, 870, 917,
	830, 933, 864, 332, 828, 301, 192, 210, 0, 862,
	374, 417, 423, 932, 847, 856, 235, 854, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 896, 915,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 1149, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 842, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 928, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	920, 959, 387, 422, 225, 487, 445, 837, 841, 835,
	902, 836, 891, 892, 838, 950, 951, 952, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 924, 831, 0,
	839, 840, 0, 930, 939, 940, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 895, 191, 207,
	335, 955, 410, 268, 518, 496, 492, 816, 834, 242,
	845, 853, 0, 859, 867, 868, 880, 882, 883, 884,
	885, 903, 904, 906, 914, 916, 919, 921, 926, 936,
	958, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 894,
	900, 346, 261, 281, 292, 909, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 890, 918, 342, 463, 464,
	288, 360, 0, 0, 944, 929, 462, 0, 875, 947,
	844, 863, 957, 866, 869, 911, 823, 889, 378, 860,
	815, 848, 818, 855, 819, 846, 877, 250, 843, 931,
	893, 946, 333, 247, 825, 849, 392, 865, 197, 913,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 953, 337, 899, 0, 446, 363,
	0, 0, 0, 879, 935, 887, 925, 874, 912, 833,
	898, 948, 861, 908, 949, 295, 232, 196, 375, 447,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 318, 327, 326, 307, 308, 310, 312, 317, 324,
	330, 857, 905, 943, 858, 907, 245, 293, 252, 244,
	466, 954, 934, 822, 886, 942, 0, 0, 214, 945,
	881, 0, 910, 0, 960, 817, 901, 0, 820, 824,
	956, 938, 852, 255, 0, 0, 0, 0, 0, 0,
	0, 878, 888, 922, 872, 0, 0, 0, 0, 0,
	0, 0, 850, 0, 897, 0, 0, 0, 829, 821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 876, 0, 0, 0, 832, 0, 851, 923,
	0, 814, 276, 826, 364, 237, 0, 927, 937, 873,
	502, 941, 871, 870, 917, 830, 933, 864, 332, 828,
	301, 192, 210, 0, 862, 374, 417, 423, 932, 847,
	856, 235, 854, 421, 388, 485, 218, 264, 414, 394,
	419, 401, 267, 896, 915, 420, 338, 471, 408, 482,
	503, 504, 243, 368, 493, 460, 499, 517, 211, 240,
	382, 453, 488, 443, 361, 467, 468, 300, 442, 274,
	195, 336, 509, 209, 429, 227, 216, 473, 491, 269,
	412, 202, 455, 480, 224, 433, 0, 0, 519, 204,
	478, 452, 357, 297, 298, 203, 0, 413, 248, 272,
	238, 377, 475, 476, 236, 520, 213, 498, 206, 1149,
	497, 370, 470, 479, 358, 348, 205, 477, 356, 347,
	303, 322, 323, 260, 283, 406, 341, 407, 284, 366,
	365, 367, 198, 489, 0, 199, 0, 448, 490, 521,
	219, 220, 222, 842, 259, 263, 271, 273, 279, 280,
	287, 334, 381, 405, 403, 409, 928, 465, 483, 494,
	501, 507, 508, 510, 511, 512, 513, 514, 516, 515,
	369, 286, 444, 302, 339, 920, 959, 387, 422, 225,
	487, 445, 837, 841, 835, 902, 836, 891, 892, 838,
	950, 951, 952, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 0, 924, 831, 0, 839, 840, 0, 930, 939,
	940, 540, 349, 435, 484, 304, 316, 319, 309, 328,
	0, 329, 305, 306, 311, 313, 314, 315, 320, 321,
	325, 331, 895, 191, 207, 335, 955, 410, 268, 518,
	496, 492, 816, 834, 242, 845, 853, 0, 859, 867,
	868, 880, 882, 883, 884, 885, 903, 904, 906, 914,
	916, 919, 921, 926, 936, 958, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 486, 500, 505, 430, 278,
	481, 506, 0, 344, 894, 900, 346, 261, 281, 292,
	909, 495, 451, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 457, 458, 459, 461, 359, 246, 395,
	890, 918, 342, 463, 464, 288, 360, 0, 0, 944,
	929, 462, 0, 875, 947, 844, 863, 957, 866, 869,
	911, 823, 889, 378, 860, 815, 848, 818, 855, 819,
	846, 877, 250, 843, 931, 893, 946, 333, 247, 825,
	849, 392, 865, 197, 913, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 953,
	337, 899, 0, 446, 363, 0, 0, 0, 879, 935,
	887, 925, 874, 912, 833, 898, 948, 861, 908, 949,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 857, 905, 943, 858,
	907, 245, 293, 252, 244, 466, 954, 934, 822, 886,
	942, 0, 0, 961, 945, 881, 0, 910, 0, 960,
	817, 901, 0, 820, 824, 956, 938, 852, 255, 0,
	0, 0, 0, 0, 0, 0, 878, 888, 922, 872,
	0, 0, 0, 0, 0, 0, 0, 850, 0, 897,
	0, 0, 0, 829, 821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 876, 0, 0,
	0, 832, 0, 851, 923, 0, 814, 276, 826, 364,
	237, 0, 927, 937, 873, 502, 941, 871, 870, 917,
	830, 933, 864, 332, 828, 301, 192, 210, 0, 862,
	374, 417, 423, 932, 847, 856, 235, 854, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 896, 915,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 827, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 842, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 928, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 813, 807, 806, 302, 339,
	920, 959, 387, 422, 225, 487, 445, 837, 841, 835,
	902, 836, 891, 892, 838, 950, 951, 952, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 924, 831, 0,
	839, 840, 0, 930, 939, 940, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 895, 191, 207,
	335, 955, 410, 268, 518, 496, 492, 816, 834, 242,
	845, 853, 0, 859, 867, 868, 880, 882, 883, 884,
	885, 903, 904, 906, 914, 916, 919, 921, 926, 936,
	958, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 894,
	900, 346, 261, 281, 292, 909, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 890, 918, 342, 463, 464,
	288, 360, 0, 0, 944, 929, 462, 0, 875, 947,
	844, 863, 957, 866, 869, 911, 823, 889, 378, 860,
	815, 848, 818, 855, 819, 846, 877, 250, 843, 931,
	893, 946, 333, 247, 825, 849, 392, 865, 197, 913,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 953, 337, 899, 0, 446, 363,
	0, 0, 0, 879, 935, 887, 925, 874, 912, 833,
	898, 948, 861, 908, 949, 295, 232, 196, 375, 447,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 318, 327, 326, 307, 308, 310, 312, 317, 324,
	330, 857, 905, 943, 858, 907, 245, 293, 252, 244,
	466, 954, 934, 822, 886, 942, 0, 0, 961, 945,
	881, 0, 910, 0, 960, 817, 901, 0, 820, 824,
	956, 938, 852, 255, 0, 0, 0, 0, 0, 0,
	0, 878, 888, 922, 872, 0, 0, 0, 0, 0,
	0, 0, 850, 0, 897, 0, 0, 0, 829, 821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 876, 0, 0, 0, 832, 0, 851, 923,
	0, 814, 276, 826, 364, 237, 0, 927, 937, 873,
	502, 941, 871, 870, 917, 830, 933, 864, 332, 828,
	301, 192, 210, 0, 862, 374, 417, 423, 932, 847,
	856, 235, 854, 421, 388, 485, 218, 264, 414, 394,
	419, 401, 267, 896, 915, 420, 338, 471, 408, 482,
	503, 504, 243, 368, 493, 460, 499, 517, 211, 240,
	382, 453, 488, 443, 361, 467, 468, 300, 442, 274,
	195, 336, 509, 209, 429, 227, 216, 473, 491, 269,
	412, 202, 455, 1364, 224, 433, 0, 0, 519, 204,
	478, 452, 357, 297, 298, 203, 0, 413, 248, 272,
	238, 377, 475, 476, 236, 520, 213, 498, 206, 827,
	497, 370, 470, 479, 358, 348, 205, 477, 356, 347,
	303, 322, 323, 260, 283, 406, 341, 407, 284, 366,
	365, 367, 198, 489, 0, 199, 0, 448, 490, 521,
	219, 220, 222, 842, 259, 263, 271, 273, 279, 280,
	287, 334, 381, 405, 403, 409, 928, 465, 483, 494,
	501, 507, 508, 510, 511, 512, 513, 514, 516, 515,
	813, 807, 806, 302, 339, 920, 959, 387, 422, 225,
	487, 445, 837, 841, 835, 902, 836, 891, 892, 838,
	950, 951, 952, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 0, 924, 831, 0, 839, 840, 0, 930, 939,
	940, 540, 349, 435, 484, 304, 316, 319, 309, 328,
	0, 329, 305, 306, 311, 313, 314, 315, 320, 321,
	325, 331, 895, 191, 207, 335, 955, 410, 268, 518,
	496, 492, 816, 834, 242, 845, 853, 0, 859, 867,
	868, 880, 882, 883, 884, 885, 903, 904, 906, 914,
	916, 919, 921, 926, 936, 958, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 486, 500, 505, 430, 278,
	481, 506, 0, 344, 894, 900, 346, 261, 281, 292,
	909, 495, 451, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 457, 458, 459, 461, 359, 246, 395,
	890, 918, 342, 463, 464, 288, 360, 0, 0, 944,
	929, 462, 0, 875, 947, 844, 863, 957, 866, 869,
	911, 823, 889, 378, 860, 815, 848, 818, 855, 819,
	846, 877, 250, 843, 931, 893, 946, 333, 247, 825,
	849, 392, 865, 197, 913, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 953,
	337, 899, 0, 446, 363, 0, 0, 0, 879, 935,
	887, 925, 874, 912, 833, 898, 948, 861, 908, 949,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 857, 905, 943, 858,
	907, 245, 293, 252, 244, 466, 954, 934, 822, 886,
	942, 0, 0, 961, 945, 881, 0, 910, 0, 960,
	817, 901, 0, 820, 824, 956, 938, 852, 255, 0,
	0, 0, 0, 0, 0, 0, 878, 888, 922, 872,
	0, 0, 0, 0, 0, 0, 0, 850, 0, 897,
	0, 0, 0, 829, 821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 876, 0, 0,
	0, 832, 0, 851, 923, 0, 814, 276, 826, 364,
	237, 0, 927, 937, 873, 502, 941, 871, 870, 917,
	830, 933, 864, 332, 828, 301, 192, 210, 0, 862,
	374, 417, 423, 932, 847, 856, 235, 854, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 896, 915,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 804, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 827, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 842, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 928, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 813, 807, 806, 302, 339,
	920, 959, 387, 422, 225, 487, 445, 837, 841, 835,
	902, 836, 891, 892, 838, 950, 951, 952, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 924, 831, 0,
	839, 840, 0, 930, 939, 940, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 895, 191, 207,
	335, 955, 410, 268, 518, 496, 492, 816, 834, 242,
	845, 853, 0, 859, 867, 868, 880, 882, 883, 884,
	885, 903, 904, 906, 914, 916, 919, 921, 926, 936,
	958, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 894,
	900, 346, 261, 281, 292, 909, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 890, 918, 342, 463, 464,
	288, 360, 0, 0, 0, 0, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 1766, 0, 622, 0, 0, 0, 250, 627, 0,
	0, 0, 333, 247, 0, 1767, 392, 0, 197, 0,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 634, 337, 0, 0, 446, 363,
	0, 0, 0, 0, 0, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 196, 375, 447,
	266, 0, 87, 0, 0, 188, 189, 190, 698, 705,
	706, 707, 708, 709, 699, 701, 0, 0, 223, 700,
	230, 645, 647, 646, 656, 657, 658, 659, 660, 661,
	662, 643, 703, 710, 711, 0, 245, 293, 252, 244,
	466, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 605, 619, 0, 633,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 616, 617,
	793, 0, 0, 0, 682, 0, 618, 0, 0, 626,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 681, 0, 0,
	502, 0, 0, 679, 0, 0, 0, 0, 332, 0,
	301, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 485, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 338, 471, 408, 482,
	503, 504, 243, 368, 493, 460, 499, 517, 211, 240,
	382, 453, 488, 443, 361, 467, 468, 300, 442, 274,
	195, 336, 509, 209, 429, 227, 216, 473, 491, 269,
	412, 202, 455, 480, 224, 433, 0, 0, 519, 204,
	478, 452, 357, 297, 298, 203, 0, 413, 248, 272,
	238, 377, 475, 476, 236, 520, 213, 498, 206, 0,
	497, 370, 470, 479, 358, 348, 205, 477, 356, 347,
	303, 651, 652, 260, 283, 406, 341, 407, 284, 366,
	365, 367, 198, 489, 0, 199, 0, 448, 490, 521,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 334, 381, 405, 403, 409, 0, 465, 483, 494,
	501, 507, 508, 510, 511, 512, 513, 514, 516, 515,
	369, 286, 444, 302, 339, 0, 0, 387, 422, 225,
	487, 445, 688, 680, 638, 692, 640, 689, 690, 635,
	636, 639, 691, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 0, 683, 625, 624, 0, 631, 632, 0, 641,
	642, 644, 648, 649, 650, 653, 654, 655, 663, 665,
	666, 664, 667, 668, 669, 672, 673, 674, 675, 670,
	671, 676, 623, 191, 207, 335, 0, 410, 268, 518,
	496, 492, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 486, 500, 505, 430, 278,
	481, 506, 0, 344, 0, 0, 346, 261, 281, 292,
	0, 495, 451, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 457, 458, 459, 461, 359, 246, 395,
	0, 360, 342, 463, 464, 288, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 622, 0, 0, 0, 250, 627, 0,
	0, 0, 333, 247, 0, 0, 392, 0, 197, 0,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 634, 337, 0, 0, 446, 363,
	0, 0, 0, 0, 0, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 196, 375, 447,
	266, 0, 87, 0, 0, 188, 189, 190, 698, 705,
	706, 707, 708, 709, 699, 701, 0, 0, 223, 700,
	230, 645, 647, 646, 656, 657, 658, 659, 660, 661,
	662, 643, 703, 710, 711, 0, 245, 293, 252, 244,
	466, 0, 0, 1732, 1733, 1734, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 605, 619, 0, 633,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 616, 617,
	0, 0, 0, 0, 682, 0, 618, 0, 0, 626,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 681, 0, 0,
	502, 0, 0, 679, 0, 0, 0, 0, 332, 0,
	301, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 485, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 338, 471, 408, 482,
	503, 504, 243, 368, 493, 460, 499, 517, 211, 240,
	382, 453, 488, 443, 361, 467, 468, 300, 442, 274,
	195, 336, 509, 209, 429, 227, 216, 473, 491, 269,
	412, 202, 455, 480, 224, 433, 0, 0, 519, 204,
	478, 452, 357, 297, 298, 203, 0, 413, 248, 272,
	238, 377, 475, 476, 236, 520, 213, 498, 206, 0,
	497, 370, 470, 479, 358, 348, 205, 477, 356, 347,
	303, 651, 652, 260, 283, 406, 341, 407, 284, 366,
	365, 367, 198, 489, 0, 199, 0, 448, 490, 521,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 334, 381, 405, 403, 409, 0, 465, 483, 494,
	501, 507, 508, 510, 511, 512, 513, 514, 516, 515,
	369, 286, 444, 302, 339, 0, 0, 387, 422, 225,
	487, 445, 688, 680, 638, 692, 640, 689, 690, 635,
	636, 639, 691, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 0, 683, 625, 624, 0, 631, 632, 0, 641,
	642, 644, 648, 649, 650, 653, 654, 655, 663, 665,
	666, 664, 667, 668, 669, 672, 673, 674, 675, 670,
	671, 676, 623, 191, 207, 335, 0, 410, 268, 518,
	496, 492, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 486, 500, 505, 430, 278,
	481, 506, 0, 344, 0, 0, 346, 261, 281, 292,
	0, 495, 451, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 457, 458, 459, 461, 359, 246, 395,
	0, 360, 342, 463, 464, 288, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 622, 0, 0, 0, 250, 627, 0,
	0, 0, 333, 247, 0, 0, 392, 0, 197, 0,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 634, 337, 0, 0, 446, 363,
	0, 0, 0, 0, 0, 629, 630, 0, 0, 0,
	0, 0, 0, 1848, 0, 295, 232, 196, 375, 447,
	266, 0, 87, 0, 0, 188, 189, 190, 698, 705,
	706, 707, 708, 709, 699, 701, 0, 0, 223, 700,
	230, 645, 647, 646, 656, 657, 658, 659, 660, 661,
	662, 643, 703, 710, 711, 1849, 245, 293, 252, 244,
	466, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 605, 619, 0, 633,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 616, 617,
	0, 0, 0, 0, 682, 0, 618, 0, 0, 626,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 681, 0, 0,
	502, 0, 0, 679, 0, 0, 0, 0, 332, 0,
	301, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 485, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 338, 471, 408, 482,
	503, 504, 243, 368, 493, 460, 499, 517, 211, 240,
	382, 453, 488, 443, 361, 467, 468, 300, 442, 274,
	195, 336, 509, 209, 429, 227, 216, 473, 491, 269,
	412, 202, 455, 480, 224, 433, 0, 0, 519, 204,
	478, 452, 357, 297, 298, 203, 0, 413, 248, 272,
	238, 377, 475, 476, 236, 520, 213, 498, 206, 0,
	497, 370, 470, 479, 358, 348, 205, 477, 356, 347,
	303, 651, 652, 260, 283, 406, 341, 407, 284, 366,
	365, 367, 198, 489, 0, 199, 0, 448, 490, 521,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 334, 381, 405, 403, 409, 0, 465, 483, 494,
	501, 507, 508, 510, 511, 512, 513, 514, 516, 515,
	369, 286, 444, 302, 339, 0, 0, 387, 422, 225,
	487, 445, 688, 680, 638, 692, 640, 689, 690, 635,
	636, 639, 691, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 0, 683, 625, 624, 0, 631, 632, 0, 641,
	642, 644, 648, 649, 650, 653, 654, 655, 663, 665,
	666, 664, 667, 668, 669, 672, 673, 674, 675, 670,
	671, 676, 623, 191, 207, 335, 0, 410, 268, 518,
	496, 492, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 486, 500, 505, 430, 278,
	481, 506, 0, 344, 0, 0, 346, 261, 281, 292,
	0, 495, 451, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 457, 458, 459, 461, 359, 246, 395,
	0, 0, 342, 463, 464, 288, 360, 0, 0, 0,
	78, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 622, 0,
	0, 0, 250, 627, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 634,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 87, 0, 0,
	188, 189, 190, 698, 705, 706, 707, 708, 709, 699,
	701, 0, 0, 223, 700, 230, 645, 647, 646, 656,
	657, 658, 659, 660, 661, 662, 643, 703, 710, 711,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 605, 619, 0, 633, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 617, 0, 0, 0, 0, 682,
	0, 618, 0, 0, 626, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 681, 0, 0, 502, 0, 0, 679, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 651, 652, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 688, 680, 638,
	692, 640, 689, 690, 635, 636, 639, 691, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 683, 625, 624,
	0, 631, 632, 0, 641, 642, 644, 648, 649, 650,
	653, 654, 655, 663, 665, 666, 664, 667, 668, 669,
	672, 673, 674, 675, 670, 671, 676, 623, 191, 207,
	335, 86, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 622, 0,
	0, 0, 250, 627, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 634,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 87, 0, 0,
	188, 189, 190, 698, 705, 706, 707, 708, 709, 699,
	701, 0, 0, 223, 700, 230, 645, 647, 646, 656,
	657, 658, 659, 660, 661, 662, 643, 703, 710, 711,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 605, 619, 0, 633, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 617, 0, 0, 0, 0, 682,
	0, 618, 0, 0, 626, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 681, 0, 0, 502, 0, 0, 679, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 2933, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 651, 652, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 688, 680, 638,
	692, 640, 689, 690, 635, 636, 639, 691, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 683, 625, 624,
	0, 631, 632, 0, 641, 642, 644, 648, 649, 650,
	653, 654, 655, 663, 665, 666, 664, 667, 668, 669,
	672, 673, 674, 675, 670, 671, 676, 623, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 622, 0,
	0, 0, 250, 627, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 634,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 87, 0, 1331,
	188, 189, 190, 698, 705, 706, 707, 708, 709, 699,
	701, 0, 0, 223, 700, 230, 645, 647, 646, 656,
	657, 658, 659, 660, 661, 662, 643, 703, 710, 711,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 605, 619, 0, 633, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 617, 0, 0, 0, 0, 682,
	0, 618, 0, 0, 626, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 681, 0, 0, 502, 0, 0, 679, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 651, 652, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 688, 680, 638,
	692, 640, 689, 690, 635, 636, 639, 691, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 683, 625, 624,
	0, 631, 632, 0, 641, 642, 644, 648, 649, 650,
	653, 654, 655, 663, 665, 666, 664, 667, 668, 669,
	672, 673, 674, 675, 670, 671, 676, 623, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 622, 0,
	0, 0, 250, 627, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 634,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 87, 0, 0,
	188, 189, 190, 698, 705, 706, 707, 708, 709, 699,
	701, 0, 0, 223, 700, 230, 645, 647, 646, 656,
	657, 658, 659, 660, 661, 662, 643, 703, 710, 711,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 605, 619, 0, 633, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 617, 793, 0, 0, 0, 682,
	0, 618, 0, 0, 626, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 681, 0, 0, 502, 0, 0, 679, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 651, 652, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 688, 680, 638,
	692, 640, 689, 690, 635, 636, 639, 691, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 683, 625, 624,
	0, 631, 632, 0, 641, 642, 644, 648, 649, 650,
	653, 654, 655, 663, 665, 666, 664, 667, 668, 669,
	672, 673, 674, 675, 670, 671, 676, 623, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 622, 0,
	0, 0, 250, 627, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 634,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 87, 0, 0,
	188, 189, 190, 698, 705, 706, 707, 708, 709, 699,
	701, 0, 0, 223, 700, 230, 645, 647, 646, 656,
	657, 658, 659, 660, 661, 662, 643, 703, 710, 711,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 605, 619, 0, 633, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 617, 0, 0, 0, 0, 682,
	0, 618, 0, 0, 626, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 681, 0, 0, 502, 0, 0, 679, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 651, 652, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 688, 680, 638,
	692, 640, 689, 690, 635, 636, 639, 691, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 683, 625, 624,
	0, 631, 632, 0, 641, 642, 644, 648, 649, 650,
	653, 654, 655, 663, 665, 666, 664, 667, 668, 669,
	672, 673, 674, 675, 670, 671, 676, 623, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 622, 0,
	0, 0, 250, 627, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 634,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 87, 0, 0,
	188, 189, 190, 698, 705, 706, 707, 708, 709, 699,
	701, 0, 0, 223, 700, 230, 645, 647, 646, 656,
	657, 658, 659, 660, 661, 662, 643, 703, 710, 711,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 619, 0, 633, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 617, 0, 0, 0, 0, 682,
	0, 618, 0, 0, 626, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 681, 0, 0, 502, 0, 0, 679, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 651, 652, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 688, 680, 638,
	692, 640, 689, 690, 635, 636, 639, 691, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 683, 625, 624,
	0, 631, 632, 0, 641, 642, 644, 648, 649, 650,
	653, 654, 655, 663, 665, 666, 664, 667, 668, 669,
	672, 673, 674, 675, 670, 671, 676, 623, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 705, 706, 0, 0, 0, 0,
	1677, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 1012, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 1011, 502, 0, 0, 0, 0,
	0, 1008, 1009, 332, 969, 301, 192, 210, 1002, 1006,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 0, 342, 463, 464,
	288, 360, 0, 0, 0, 78, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 333, 247, 0, 0, 392, 0, 197, 0,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 0, 337, 0, 0, 446, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 196, 375, 447,
	266, 0, 87, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 318, 327, 326, 307, 308, 310, 312, 317, 324,
	330, 0, 0, 0, 0, 0, 245, 293, 252, 244,
	466, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 0, 0, 0,
	502, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	301, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 485, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 338, 471, 408, 482,
	503, 504, 243, 368, 493, 460, 499, 517, 211, 240,
	382, 453, 488, 443, 361, 467, 468, 300, 442, 274,
	195, 336, 509, 209, 429, 227, 216, 473, 491, 269,
	412, 202, 455, 480, 224, 433, 0, 0, 519, 204,
	478, 452, 357, 297, 298, 203, 0, 413, 248, 272,
	238, 377, 475, 476, 236, 520, 213, 498, 206, 0,
	497, 370, 470, 479, 358, 348, 205, 477, 356, 347,
	303, 322, 323, 260, 283, 406, 341, 407, 284, 366,
	365, 367, 198, 489, 0, 199, 0, 448, 490, 521,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 334, 381, 405, 403, 409, 0, 465, 483, 494,
	501, 507, 508, 510, 511, 512, 513, 514, 516, 515,
	369, 286, 444, 302, 339, 0, 0, 387, 422, 225,
	487, 445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 349, 435, 484, 304, 316, 319, 309, 328,
	0, 329, 305, 306, 311, 313, 314, 315, 320, 321,
	325, 331, 0, 191, 207, 335, 86, 410, 268, 518,
	496, 492, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 486, 500, 505, 430, 278,
	481, 506, 0, 344, 0, 0, 346, 261, 281, 292,
	0, 495, 451, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 457, 458, 459, 461, 359, 246, 395,
	0, 1350, 342, 463, 464, 288, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 1352, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 333, 247, 0, 0, 392, 0, 197, 0,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 0, 337, 0, 0, 446, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 196, 375, 447,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 318, 327, 326, 307, 308, 310, 312, 317, 324,
	330, 0, 0, 0, 0, 0, 245, 293, 252, 244,
	466, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 1183, 0, 1184, 1185, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 0, 0, 0,
	502, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	301, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 485, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 338, 471, 408, 482,
	503, 504, 243, 368, 493, 460, 499, 517, 211, 240,
	382, 453, 488, 443, 361, 467, 468, 300, 442, 274,
	195, 336, 509, 209, 429, 227, 216, 473, 491, 269,
	412, 202, 455, 480, 224, 433, 0, 0, 519, 204,
	478, 452, 357, 297, 298, 203, 0, 413, 248, 272,
	238, 377, 475, 476, 236, 520, 213, 498, 206, 0,
	497, 370, 470, 479, 358, 348, 205, 477, 356, 347,
	303, 322, 323, 260, 283, 406, 341, 407, 284, 366,
	365, 367, 198, 489, 0, 199, 0, 448, 490, 521,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 334, 381, 405, 403, 409, 0, 465, 483, 494,
	501, 507, 508, 510, 511, 512, 513, 514, 516, 515,
	369, 286, 444, 302, 339, 0, 0, 387, 422, 225,
	487, 445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 349, 435, 484, 304, 316, 319, 309, 328,
	0, 329, 305, 306, 311, 313, 314, 315, 320, 321,
	325, 331, 0, 191, 207, 335, 0, 410, 268, 518,
	496, 492, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 486, 500, 505, 430, 278,
	481, 506, 0, 344, 0, 0, 346, 261, 281, 292,
	0, 495, 451, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 457, 458, 459, 461, 359, 246, 395,
	0, 360, 342, 463, 464, 288, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 333, 247, 0, 0, 392, 0, 197, 0,
	436, 234, 343, 340, 469, 262, 253, 249, 233, 289,
	350, 390, 456, 384, 0, 337, 0, 0, 446, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 196, 375, 447,
	266, 0, 0, 0, 0, 188, 189, 190, 1293, 1296,
	0, 0, 0, 0, 1292, 1295, 0, 0, 223, 1291,
	230, 318, 327, 326, 307, 308, 310, 312, 317, 324,
	330, 0, 0, 0, 0, 0, 245, 293, 252, 244,
	466, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 364, 237, 0, 0, 0, 0,
	502, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	301, 192, 210, 0, 0, 374, 417, 423, 0, 0,
	0, 235, 0, 421, 388, 485, 218, 264, 414, 394,
	419, 401, 267, 0, 0, 420, 338, 471, 408, 482,
	503, 504, 243, 368, 493, 460, 499, 517, 211, 240,
	382, 453, 488, 443, 361, 467, 468, 300, 442, 274,
	195, 336, 509, 209, 429, 227, 216, 473, 491, 269,
	412, 202, 455, 480, 224, 433, 0, 0, 519, 204,
	478, 452, 357, 297, 298, 203, 0, 413, 248, 272,
	238, 377, 475, 476, 236, 520, 213, 498, 206, 0,
	497, 370, 470, 479, 358, 348, 205, 477, 356, 347,
	303, 322, 323, 260, 283, 406, 341, 407, 284, 366,
	365, 367, 198, 489, 0, 199, 0, 448, 490, 521,
	219, 220, 222, 0, 259, 263, 271, 273, 279, 280,
	287, 334, 381, 405, 403, 409, 0, 465, 483, 494,
	501, 507, 508, 510, 511, 512, 513, 514, 516, 515,
	369, 286, 444, 302, 339, 0, 0, 387, 422, 225,
	487, 445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 349, 435, 484, 304, 316, 319, 309, 328,
	0, 329, 305, 306, 311, 313, 314, 315, 320, 321,
	325, 331, 0, 191, 207, 335, 0, 410, 268, 518,
	496, 492, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 299, 345, 351, 352, 353, 354, 371,
	372, 373, 376, 379, 380, 383, 385, 386, 389, 393,
	397, 398, 399, 400, 402, 404, 411, 416, 424, 425,
	426, 427, 428, 431, 432, 437, 438, 439, 440, 441,
	449, 450, 454, 472, 474, 486, 500, 505, 430, 278,
	481, 506, 0, 344, 0, 0, 346, 261, 281, 292,
	0, 495, 451, 212, 418, 270, 201, 231, 215, 239,
	254, 257, 296, 355, 362, 391, 396, 275, 251, 229,
	415, 226, 434, 457, 458, 459, 461, 359, 246, 395,
	0, 0, 342, 463, 464, 288, 360, 0, 0, 0,
	78, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 87, 0, 1331,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 86, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 87, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 1835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 1788, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 1786,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 969, 301, 192, 210, 967, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 1788, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 1331,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 2861,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 1673, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 2127, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2128, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 2112, 0, 0, 0,
	2113, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 1375, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 1374, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 2954,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 2861,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 87, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 1354, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 1628, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 1500, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 1498, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 1496, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 1494, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 1492, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 1488, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 1486, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 1484, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 1459, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 1359, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 1160, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 775, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 597, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 596, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 543, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 2959, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 2584, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 360, 342, 463, 464,
	288, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 333, 247, 0,
	0, 392, 0, 197, 0, 436, 234, 343, 340, 469,
	262, 253, 249, 233, 289, 350, 390, 456, 384, 0,
	337, 0, 0, 446, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 196, 375, 447, 266, 0, 0, 0, 0,
	188, 2108, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 318, 327, 326, 307,
	308, 310, 312, 317, 324, 330, 0, 0, 0, 0,
	0, 245, 293, 252, 244, 466, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 364,
	237, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 301, 192, 210, 0, 0,
	374, 417, 423, 0, 0, 0, 235, 0, 421, 388,
	485, 218, 264, 414, 394, 419, 401, 267, 0, 0,
	420, 338, 471, 408, 482, 503, 504, 243, 368, 493,
	460, 499, 517, 211, 240, 382, 453, 488, 443, 361,
	467, 468, 300, 442, 274, 195, 336, 509, 209, 429,
	227, 216, 473, 491, 269, 412, 202, 455, 480, 224,
	433, 0, 0, 519, 204, 478, 452, 357, 297, 298,
	203, 0, 413, 248, 272, 238, 377, 475, 476, 236,
	520, 213, 498, 206, 0, 497, 370, 470, 479, 358,
	348, 205, 477, 356, 347, 303, 322, 323, 260, 283,
	406, 341, 407, 284, 366, 365, 367, 198, 489, 0,
	199, 0, 448, 490, 521, 219, 220, 222, 0, 259,
	263, 271, 273, 279, 280, 287, 334, 381, 405, 403,
	409, 0, 465, 483, 494, 501, 507, 508, 510, 511,
	512, 513, 514, 516, 515, 369, 286, 444, 302, 339,
	0, 0, 387, 422, 225, 487, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 349, 435, 484,
	304, 316, 319, 309, 328, 0, 329, 305, 306, 311,
	313, 314, 315, 320, 321, 325, 331, 0, 191, 207,
	335, 0, 410, 268, 518, 496, 492, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 299, 345,
	351, 352, 353, 354, 371, 372, 373, 376, 379, 380,
	383, 385, 386, 389, 393, 397, 398, 399, 400, 402,
	404, 411, 416, 424, 425, 426, 427, 428, 431, 432,
	437, 438, 439, 440, 441, 449, 450, 454, 472, 474,
	486, 500, 505, 430, 278, 481, 506, 0, 344, 0,
	0, 346, 261, 281, 292, 0, 495, 451, 212, 418,
	270, 201, 231, 215, 239, 254, 257, 296, 355, 362,
	391, 396, 275, 251, 229, 415, 226, 434, 457, 458,
	459, 461, 359, 246, 395, 0, 0, 342, 463, 464,
	288,
}

var yyPact = [...]int{
	4558, -1000, -414, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1954, 1982, -1000, -1000,
	-1000, -1000, 2123, -1000, 635, 1699, -1000, 1959, 5561, -1000,
	41282, 410, -1000, 40082, 409, 294, 41282, -1000, 172, -1000,
	158, 41282, 171, 39482, -1000, -1000, -261, 17272, 1882, 44,
	40, 41282, -1000, -1000, -1000, -1000, 2092, 1657, -1000, 373,
	-1000, -1000, -1000, -1000, -1000, -1000, 38882, -1000, -1000, -1000,
	1969, 1942, 2142, 491, 1881, -1000, 2032, 1657, -1000, 17272,
	2067, 2017, 16672, -1000, 16672, 381, -1000, -1000, 12462, -1000,
	-1000, 23282, 41282, 29282, 253, -1000, 1959, -1000, -1000, -1000,
	128, -1000, 288, 1586, -1000, 1585, -1000, 692, 659, 316,
	425, 423, 315, 309, 306, 297, 296, 293, 292, 290,
	324, -1000, 601, 601, -135, -136, 1113, 361, 368, 368,
	388, 1919, 1907, -1000, 612, -1000, 601, 601, 601, 345,
	601, 601, 601, 601, 261, 260, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 508, 1959, 237, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 41282, 184, 41282, -1000, 494, 41282, 719, 719, 87,
	719, 719, 719, 719, 175, 594, 39, -1000, 169, 240,
	134, 225, 727, 190, -1000, -1000, 233, 727, 1214, -1000,
	582, 135, -1000, 719, 719, -1000, 10042, 181, 10042, 10042,
	-1000, 1948, -1000, -1000, -1000, -1000, 1220, -1000, 387, -1000,
	-1000, -1000, -1000, 41282, 38282, 366, 622, -1000, -1000, -1000,
	125, -1000, -1000, 1341, 778, 17272, 1037, -1000, 3232, 541,
	-1000, -1000, -1000, -1000, -1000, 434, 17872, 17872, 17872, 17872,
	-1000, -1000, 1595, 1595, 1595, 1595, 17872, 1595, 17872, 1595,
	1595, 1595, 1595, 17272, 1595, 1595, 1595, -1000, 1595, 1595,
	1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
	1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
	1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
	1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 485, 1595,
	1595, 1595, 1595, 1595, -1000, -1000, -1000, -1000, 1595, 1595,
	1595, 1595, 1595, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 20877, -1000, 14872, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 41282, -1000, 1595, 191, 41282,
	41282, 320, 2032, 1657, -1000, 2092, 2106, 373, -1000, 2408,
	1812, 1374, 1167, 1657, 1547, 41282, -1000, 1603, -1000, -1000,
	-1000, 1810, 1149, 1211, -1000, -1000, -1000, -1000, 1249, 17272,
	-1000, -1000, 2115, -1000, 20277, 471, 833, 2111, 37682, -1000,
	381, 381, 1563, 11857, 47, -1000, -1000, -1000, 619, 26882,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1948, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1522, 41282, -1000, -1000, 3328, 1150, -1000, 1698,
	-1000, 1520, -1000, 1622, 17272, 1711, 408, 1150, 393, 392,
	391, -1000, -68, -1000, -1000, -1000, -1000, -1000, -1000, 601,
	601, 601, -1000, 323, 2060, 5561, 5967, -1000, -1000, -1000,
	37082, 1697, 1150, -1000, 1695, -1000, 765, 477, 499, 499,
	1150, -1000, -1000, 41282, 1150, 761, 753, 1150, 1150, 41282,
	41282, -1000, 36482, -1000, 35882, 35282, 1033, 41282, 34682, 34082,
	33482, 32882, 32282, -1000, 1761, -1000, 1694, -1000, -1000, -1000,
	41282, 1150, 41282, 41282, 344, -1000, -1000, 41282, 1150, -1000,
	-1000, 1032, 1029, 1028, 601, 601, 1027, 1210, 1209, 1205,
	601, 601, 1021, 1204, 28082, 1203, 239, 1014, 1013, 1007,
	1019, 1202, 224, 1201, 982, 975, 1001, 41282, 1693, 41282,
	-1000, 218, 570, 432, 618, 1959, 1876, 1562, 386, 407,
	1150, 372, 372, 41282, -1000, 10647, -1000, -1000, 1200, 17272,
	-1000, 735, 727, 727, -1000, -1000, -1000, -1000, -1000, -1000,
	719, 41282, 735, -1000, -1000, -1000, 727, 719, 41282, 719,
	719, 719, 719, 727, 727, 727, 719, 41282, 41282, 41282,
	41282, 41282, 41282, 41282, 41282, 41282, 10042, 582, 719, -282,
	-1000, 1182, -1000, 1793, -1000, -1000, -1000, -1000, -1000, -1000,
	10042, 10042, -1000, -1000, -1000, -1000, 170, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -37, 1559, 31682, -1000,
	-284, -285, -287, -292, -1000, -1000, -1000, -296, -305, -1000,
	-1000, -1000, 17272, 17272, 17272, 17272, -159, -1000, 830, 17872,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 915, 732, 17872,
	17872, 17872, 17872, 17872, 17872, 17872, 17872, 17872, 17872, 17872,
	17872, 17872, 17872, 17872, 25082, 6867, 6867, 541, 541, 541,
	541, -1000, 16672, 17272, 17272, 541, -1000, 1150, 31082, 16672,
	16672, 17272, 1923, 631, 778, 41282, -1000, 1167, -1000, -1000,
	-1000, 983, -1000, 41282, 41282, 2905, 17272, 17272, 17272, 17272,
	17272, 17272, 13667, 17272, 17272, 17272, 17272, 17272, 17272, 17272,
	17272, 17272, 17272, 17272, 17272, 17272, 17272, 17272, 17272, 17272,
	17272, 17272, 17272, 17272, 17272, 17272, 17272, 17272, 17272, 13067,
	10647, 16672, 16672, 16672, 16672, 16672, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 451, 1386,
	1410, 1402, -1000, 1557, -1000, -118, 22682, 17272, 1180, 2109,
	1729, 41282, -1000, -1000, -1000, 2032, -1000, 2032, 1386, 2401,
	1818, 16672, -1000, -1000, 2401, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1348, -1000, 41282, 1547, 2008, 41282, 1806,
	1179, 412, -1000, 17272, 17272, 1544, -1000, 908, 41282, -1000,
	-159, -1000, 30482, -1000, -1000, 9437, -1000, 41282, 285, 41282,
	-1000, 22082, 29882, 11252, 47, -1000, 11252, 1497, -1000, 5,
	0, 14267, 522, -1000, -1000, -1000, 1113, 19072, 1321, 522,
	103, -1000, -1000, -1000, 1622, -1000, 1622, 1622, 1622, 1622,
	412, 412, 412, 412, -1000, -1000, -1000, -1000, -1000, 1688,
	1663, -1000, 1622, 1622, 1622, 1622, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1662, 1662, 1662, 1628, 1628, 359, -1000,
	17272, 369, 29282, 1981, 999, 1361, 218, 377, 1725, 1150,
	1150, 1150, 377, -1000, 1134, 1107, 1066, -1000, -402, 1542,
	-1000, -1000, 2057, -1000, -1000, 710, 785, 779, 728, 41282,
	202, 282, -1000, 350, -1000, 29282, 1150, 742, 499, 1150,
	-1000, 1150, -1000, -1000, -1000, -1000, -1000, 1150, -1000, -1000,
	1540, -1000, 1466, 854, 701, 814, 682, 1540, -1000, -1000,
	-108, 1540, -1000, 1540, -1000, 1540, -1000, 1540, -1000, 1540,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 686, 196,
	41282, 202, 25082, -1000, 384, -1000, -1000, -1000, 25082, 25082,
	-1000, -1000, -1000, -1000, 1176, 1175, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -356, 41282, -1000, 204, 615,
	267, 308, 264, 41282, 270, 2022, 2021, 2013, 219, 259,
	41282, 41282, 372, 1770, 41282, 1987, 41282, -1000, -1000, -1000,
	-1000, -1000, 778, 41282, -1000, -1000, 719, 719, -1000, -1000,
	41282, 719, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	719, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 41282, -1000, -1000, -1000,
	-1000, 41282, -1000, -1000, -1000, -1000, -1000, 152, 10, 329,
	-1000, -1000, -1000, -1000, -1000, 2027, -1000, 778, 648, 641,
	-1000, 1595, -1000, -1000, 864, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 915, 17872, 17872, 17872, 2149, 436, 2381, 1572,
	1494, 824, 824, 831, 831, 474, 474, 474, 474, 474,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1174, -1000,
	1464, -1000, 1529, 1430, 1167, -1000, 1464, 1464, 1003, 16672,
	-1000, -1000, 691, -1000, 17272, 1167, -1000, -1000, 1167, 1167,
	1539, 1525, 2102, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1327, 1361, 1361, 1361, 1361, 1361,
	17272, 937, -1000, -1000, -1000, 2244, 2239, 1167, 1341, 1167,
	1524, -1000, 2233, 1361, 2205, 2196, 2035, 1012, 1920, 1913,
	1900, 1361, 1361, 1361, 1257, 1866, 1859, 1825, 1799, 1795,
	1781, 1775, 1768, 1741, 1361, 1167, 16672, 16672, 1511, 1595,
	448, -1000, 1464, 1167, 1167, 1464, 1464, 10647, 1167, -1000,
	41282, -1000, -258, -1000, -31, 537, 1595, -1000, 28082, 1167,
	-1000, 6911, -1000, 42482, -1000, -1000, -1000, -1000, -1000, 26282,
	1564, 2401, -1000, -1000, 1595, 1495, -1000, -1000, 412, 89,
	25682, -1000, -1000, 778, 778, 17272, -1000, -1000, -1000, -1000,
	-1000, -1000, 446, 2089, 337, 1595, -1000, 1534, 1951, -1000,
	-1000, -1000, 2006, 19677, -1000, 1595, 1595, 41282, 1591, 1367,
	-1000, 438, -1000, 1497, 47, -3, -1000, -1000, -1000, -1000,
	778, -1000, 995, 289, 269, -1000, 356, -1000, -1000, -1000,
	-1000, 1898, 82, -1000, -1000, -1000, 412, 412, -1000, -1000,
	-1000, -1000, -1000, -1000, 1173, 1173, -1000, -1000, -1000, -1000,
	-1000, 998, -1000, -1000, -1000, 994, -1000, -1000, 1722, 1753,
	369, -1000, -1000, 601, 1172, -1000, -1000, 1902, 601, 601,
	41282, -1000, -1000, 1315, 1981, 204, 41282, 636, 1769, -1000,
	1725, 1725, 1725, 41282, -1000, -1000, -1000, -1000, -1000, -1000,
	-360, 66, 365, -1000, -1000, -1000, 3123, 41282, 1487, -1000,
	198, -1000, 1302, -1000, 41282, -1000, 1483, 1661, 1150, 1150,
	-1000, -1000, -1000, 41282, 1595, -1000, -1000, -1000, -1000, 399,
	1957, 1950, -1000, -1000, -176, 202, 198, 522, 1150, -1000,
	-1000, -1000, -1000, -1000, -361, 1472, 382, 199, 301, 41282,
	41282, 41282, 41282, 41282, 426, -1000, -1000, -1000, -1000, 180,
	-1000, -1000, 180, -1000, -1000, -1000, -1000, 244, 383, -1000,
	41282, 41282, 528, -1000, -1000, -1000, 727, -1000, -1000, 727,
	-1000, -1000, -1000, -1000, -1000, 1946, 41282, -7, -322, -1000,
	-319, 17272, -1000, -1000, -1000, -1000, 1162, 390, 2381, 17872,
	17872, 16672, -114, 739, 739, 25082, -1000, -1000, -1000, 17272,
	17272, 1373, 613, -1000, 17272, 919, -1000, -1000, -1000, 17272,
	17272, 17272, 1167, 299, -1000, -1000, -1000, -1000, -1000, 2101,
	-1000, 17272, 17272, 17272, -1000, -1000, 17272, 17272, -1000, 17272,
	17272, 18472, 1167, 18472, 17272, 17272, 18472, -1000, -1000, -1000,
	-1000, 18472, 17272, 17272, 17272, 17272, 17272, 17272, 17272, 17272,
	17272, -1000, -1000, 1464, 1464, 16672, 10647, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 537, -1000, 499,
	499, 499, 41282, -1000, -1000, -1000, -1000, -1000, -1000, 1445,
	2020, -1000, 1837, 1833, 2100, 2089, -1000, 22082, 2401, -1000,
	-1000, 41282, -251, -1000, 1863, 1835, -1000, -1000, -1000, -1000,
	8832, 2032, 17272, 1767, 41282, 1595, -1000, 21482, 41282, 41282,
	22082, 22082, 22082, 22082, 22082, -1000, 1798, 1792, -1000, 1784,
	1778, 1820, 41282, -1000, 1462, 1167, 2106, 19677, 373, 17272,
	23882, 1469, 22082, -1000, -1000, 22082, 41282, 8227, -1000, -1000,
	-27, 4, -1000, -1000, -1000, -1000, 1113, -1000, -1000, 247,
	2000, 1884, -1000, -1000, -1000, -1000, 1452, -1000, 1440, 1429,
	1435, 196, -1000, 1710, 1934, 601, 601, -1000, 992, -1000,
	1150, 1171, 1165, -1000, -1000, -1000, 371, -1000, 1986, 41282,
	1766, 1755, 1750, -1000, -392, 977, 1659, 1707, 17272, 1638,
	2052, 1377, 41282, -1000, -1000, 41282, -1000, 194, -1000, 369,
	41282, -1000, -1000, -1000, 282, 41282, -1000, 6637, -1000, 198,
	-1000, -1000, -1000, -1000, -1000, -1000, 41282, 207, -1000, 1634,
	1078, -1000, -1000, 1716, -1000, -1000, -1000, -1000, 195, 249,
	178, 1145, 178, -1000, 41282, 507, 1753, 41282, -1000, -1000,
	-1000, 719, 719, -1000, -1000, 1932, -1000, 1150, 1361, 17872,
	17872, -1000, 541, -1000, 1595, 1167, 1622, 1622, -1000, 1622,
	1628, -1000, 1622, 157, 1622, 156, 1622, -1000, -1000, 1167,
	1167, 1121, 1075, -75, -1000, 778, 17272, 1737, 1549, 1361,
	-1000, 1621, 1620, 17272, 1361, 1361, 1361, -1000, 778, 1012,
	1541, 1289, -1000, -1000, -1000, -1000, 1424, 1361, 1450, -247,
	1167, 1407, 1407, 1407, 1407, 1407, 1402, 1402, 1402, 1402,
	-1000, -1000, 1167, -1000, -1000, 2024, 2024, 2024, 1365, 41882,
	41282, -1000, -1000, -1000, -1000, 2089, 2085, 1422, -1000, -1000,
	89, 405, -1000, 1874, 1835, -1000, 2051, 1853, 2050, -1000,
	-1000, -1000, 778, -1000, 1965, 1514, -1000, 607, 1336, -1000,
	-1000, 16072, 1382, 1830, 437, 1365, 1442, 1951, 1728, 1749,
	2330, -1000, -1000, -1000, -1000, 1786, -1000, 1751, -1000, -1000,
	1603, -1000, -1000, 1410, 1167, 1397, 285, 22082, 1351, 1351,
	-1000, 428, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 795,
	6583, 2139, -1000, 1142, -1000, 946, 230, 973, -1000, -1000,
	601, 601, -1000, 729, 714, -1000, 41282, 1619, -1000, 412,
	1140, 412, 964, -1000, 961, -1000, -1000, -1000, -1000, 1555,
	1757, -1000, -1000, -1000, -1000, 41282, -1000, -1000, 41282, 41282,
	41282, 1618, 2049, -1000, 17272, 1606, 606, 1425, 41282, 41282,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 380, 601, -332, 255, 248, 601, 601, 601, -397,
	-1000, -1000, 1363, 1339, -1000, -133, -1000, 17272, -1000, -1000,
	-1000, 914, 914, -1000, 1603, -1000, -1000, -1000, 1272, -1000,
	-1000, -110, 41282, 41282, 41282, 41282, -1000, 877, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	541, 17872, -1000, -1000, 412, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 17272, -1000, 17272, -1000, 2032, 1139,
	778, 17272, 17272, -1000, 959, 957, 1361, -1000, -1000, -1000,
	1167, 18472, -1000, 18472, -1000, 17272, 241, 739, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1595,
	1880, 1595, 1595, 23882, -1000, -1000, 2085, 2072, 2047, 1844,
	1848, 1848, 1874, -1000, 2045, 2044, -1000, 1138, 2041, 1135,
	667, -1000, 41282, 17272, 1595, -1000, 370, 41282, 1595, 41282,
	-1000, 2036, -1000, -1000, 17272, 1605, -1000, 17272, -1000, -1000,
	-1000, -1000, -1000, -1000, 6867, 2089, 1351, -1000, -1000, 553,
	-1000, 17272, -1000, -1000, -1000, 1307, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1126, 1125, -1000, -1000, 1604, 17272,
	-1000, -1000, -1000, 1270, 1254, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1603, -1000, -1000, -1000, -1000, 282, -399, 1405,
	41282, 953, -1000, 1311, 1377, 275, 1595, 1119, 601, 601,
	601, 928, 882, 28082, 1293, -1000, 41282, 338, -1000, 282,
	-1000, -139, -140, 1361, -1000, -1000, 1997, -1000, -1000, 10647,
	-1000, -1000, 1596, 1720, -1000, -1000, -1000, 274, -1000, 1361,
	1361, 1167, -1000, 1361, 1361, 1247, 1230, -1000, -1000, 1289,
	-1000, 867, -1000, 241, 1167, 1748, -1000, -1000, 6867, -1000,
	24482, -1000, 2040, 2037, 28682, 28682, 537, 2072, -1000, 17272,
	17272, 1841, 849, -1000, -1000, -1000, -1000, 1102, 1079, -1000,
	1071, -1000, 2138, -1000, 778, -1000, 1595, -1000, 427, 1336,
	-1000, 2032, 778, 41282, 778, 63, 2036, -1000, 1361, -1000,
	1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
	1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
	1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
	1595, 1595, -1000, -1000, 41282, 1301, -1000, -1000, 1989, 1286,
	64, -1000, 1269, -1000, -1000, 469, -1000, 17272, -1000, 28082,
	1067, 1056, -1000, -1000, -1000, -1000, -397, -1000, -1000, -1000,
	-1000, -1000, -1000, 373, 1369, -1000, 595, 41282, 41282, 1167,
	291, -116, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 17272, -1000, 1167, 1744, -1000, -221, -1000, 1264, -1000,
	-1000, -1000, -1000, -1000, 1264, 1264, -1000, -1000, 778, 1341,
	-1000, 845, -1000, -1000, -1000, -1000, -1000, 41282, 1336, 41282,
	-1000, 1251, 1167, 1595, 2032, -1000, 1246, -1000, 373, -1000,
	1590, 1707, -1000, -1000, -1000, 15472, -1000, -1000, -1000, -1000,
	-1000, 197, -109, 10647, 7622, 1229, -1000, -1000, 1804, -105,
	-121, 1012, -1000, -310, -1000, -1000, 27482, -1000, -1000, -1000,
	-1000, -1000, 1324, -1000, -1000, 23882, 40682, -1000, -100, 272,
	-109, 17272, 1588, 1167, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9, -1000, -1000, -1000, -1000, -1000, 1716, -1000,
	1803, -1000, 1167, -1000, -1000, -1000, 1227, -1000, 4010, -204,
	1740, -1000, -55, -1000, -1000, -1000, 794, 1054, -1000, -1000,
	-1000, -1000, -1000, -1000, 1114, 41282, -1000, 358, -1000, -1000,
	-110, -112, -1000, -1000, 40682, -199, 522, 6867, -1000, 1739,
	1734, 2095, -1000, -1000, -1000, -1000, -1000, -1000, -411, 1224,
	216, -1000, -117, -1000, -1000, 1984, 63, -1000, 2128, -1000,
	2124, 672, 672, -1000, 850, -411, -1000, -125, -207, -1000,
	-1000, -1000, -1000, -1000, 347, 897, -1000, -1000, -1000, -1000,
	6867, -1000, -1000, -1000, 243, 243, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2598, 2597, 22, 5, 36, 35, 2596, 59, 135,
	187, 23, 198, 104, 2595, 2593, 2591, 2589, 2587, 2586,
	2585, 267, 263, 249, 2583, 2582, 2581, 2580, 2579, 2578,
	2577, 2576, 2575, 2574, 245, 168, 182, 2570, 2569, 2568,
	120, 185, 93, 95, 186, 2567, 2566, 85, 2564, 2562,
	2559, 176, 174, 169, 719, 2558, 205, 111, 41, 2557,
	2556, 2555, 2554, 2552, 2551, 2550, 2535, 2534, 2533, 2531,
	2530, 2529, 2528, 2527, 2526, 2524, 268, 2522, 2521, 14,
	2520, 90, 2519, 2511, 2510, 2509, 131, 2508, 2507, 2506,
	37, 2505, 2504, 2503, 2501, 2500, 2494, 2493, 146, 2492,
	2491, 2487, 2486, 189, 2484, 2483, 294, 116, 130, 2479,
	2478, 106, 177, 2477, 126, 2474, 2463, 2462, 161, 2458,
	3819, 2457, 74, 68, 2452, 73, 88, 67, 58, 30,
	3, 2451, 2450, 69, 100, 2448, 107, 94, 2447, 125,
	110, 2444, 2442, 15, 8, 2441, 1, 4, 2, 76,
	2438, 2436, 128, 2435, 2434, 2433, 99, 2429, 2423, 4145,
	2422, 96, 134, 108, 80, 2421, 40, 89, 2420, 2417,
	2413, 2411, 2409, 47, 2404, 2395, 2393, 145, 115, 173,
	39, 71, 52, 148, 2389, 192, 86, 2386, 144, 142,
	2383, 65, 38, 63, 2378, 42, 140, 122, 24, 105,
	156, 2375, 2373, 55, 79, 2367, 2366, 2365, 2363, 2362,
	2361, 78, 2360, 53, 2358, 200, 2357, 27, 2353, 48,
	43, 2349, 75, 147, 77, 20, 2348, 180, 2346, 50,
	166, 132, 164, 2345, 2344, 2341, 2338, 181, 319, 2337,
	2336, 82, 170, 155, 158, 98, 2335, 325, 2329, 2328,
	102, 1052, 2065, 18, 165, 2323, 2320, 3150, 149, 25,
	29, 2318, 244, 2304, 2303, 2302, 188, 167, 121, 918,
	66, 2301, 2300, 12, 2299, 2298, 2295, 2292, 2284, 2283,
	97, 34, 33, 32, 190, 83, 10, 178, 81, 2279,
	2277, 2276, 129, 101, 2275, 163, 159, 136, 133, 2274,
	175, 150, 172, 2272, 49, 31, 2271, 2261, 2249, 2240,
	103, 2239, 2238, 2232, 2224, 162, 152, 124, 91, 2220,
	92, 117, 151, 160, 46, 2219, 44, 2216, 2215, 28,
	179, 21, 2214, 11, 61, 70, 19, 118, 153, 2213,
	0, 2211, 13, 171, 327, 154, 2208, 2199, 6, 7,
	9, 2198, 2192, 2191, 2178, 141, 2176, 2169, 2165, 2162,
	17, 45, 16, 26, 123, 84, 2159, 2157, 4798, 1682,
	138, 2155, 191,
}

//line sql.y:7063
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 366, 367, 367, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 340, 340,
	340, 343, 343, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	370, 370, 154, 154, 152, 152, 153, 153, 222, 222,
	24, 25, 25, 232, 232, 231, 231, 231, 233, 233,
	233, 233, 269, 269, 26, 26, 26, 26, 26, 104,
	104, 342, 342, 341, 333, 333, 332, 332, 331, 339,
	339, 338, 338, 337, 38, 39, 48, 48, 48, 48,
	49, 50, 344, 344, 306, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 308, 308, 294, 294, 307, 307, 307, 307, 307,
	307, 307, 293, 293, 115, 115, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 359, 359, 359, 358, 358, 202, 202,
	202, 202, 202, 202, 202, 202, 124, 124, 133, 133,
	133, 133, 133, 122, 122, 123, 121, 121, 121, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 132, 132, 128, 128, 128, 129, 129,
	129, 130, 130, 360, 360, 360, 360, 273, 273, 273,
	273, 276, 276, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 275, 275, 275, 275, 275, 277, 277, 277,
	277, 277, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 279, 279, 279,
	279, 279, 279, 279, 279, 292, 292, 280, 280, 287,
	287, 288, 288, 288, 289, 289, 289, 290, 290, 285,
	285, 285, 285, 285, 285, 286, 286, 286, 295, 320,
	320, 319, 319, 317, 317, 317, 317, 317, 317, 317,
	317, 304, 304, 314, 314, 314, 314, 314, 303, 303,
	299, 299, 299, 300, 300, 301, 301, 298, 298, 302,
	302, 316, 316, 315, 315, 296, 296, 297, 297, 322,
	361, 361, 361, 361, 361, 362, 362, 323, 351, 353,
	353, 353, 352, 352, 349, 350, 348, 348, 348, 348,
	348, 81, 81, 81, 245, 245, 246, 246, 312, 312,
	311, 311, 311, 313, 313, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 240, 240, 240, 347,
	347, 347, 347, 347, 347, 346, 346, 346, 309, 309,
	309, 345, 345, 57, 57, 186, 186, 364, 364, 365,
	365, 365, 45, 45, 45, 45, 45, 45, 44, 44,
	44, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 86, 86, 87, 87, 87, 87, 89, 89,
	89, 325, 325, 58, 58, 3, 3, 142, 144, 145,
	145, 143, 143, 143, 143, 143, 143, 60, 60, 59,
	59, 147, 146, 148, 148, 148, 1, 1, 2, 2,
	4, 4, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 291, 291, 291, 324, 324, 326,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	92, 91, 91, 90, 93, 93, 93, 93, 93, 93,
	93, 93, 328, 328, 328, 61, 61, 329, 281, 282,
	283, 5, 6, 305, 327, 100, 100, 28, 37, 37,
	29, 29, 29, 29, 30, 30, 62, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 239, 239,
	248, 248, 238, 238, 262, 262, 262, 241, 241, 241,
	242, 242, 357, 357, 357, 235, 235, 64, 64, 64,
	66, 66, 67, 68, 68, 264, 264, 265, 265, 69,
	70, 82, 82, 82, 82, 82, 82, 85, 85, 85,
	15, 15, 15, 15, 78, 78, 78, 14, 14, 65,
	65, 72, 354, 354, 355, 356, 356, 356, 356, 73,
	75, 31, 31, 31, 31, 31, 31, 110, 110, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 105, 105, 105, 99, 99, 371, 76, 77, 77,
	103, 103, 103, 96, 96, 96, 102, 102, 102, 16,
	16, 17, 221, 221, 18, 18, 107, 107, 109, 109,
	109, 109, 109, 111, 111, 111, 111, 111, 111, 111,
	106, 106, 108, 108, 108, 108, 255, 255, 255, 254,
	254, 136, 136, 138, 137, 137, 139, 139, 140, 140,
	140, 140, 184, 184, 162, 162, 219, 219, 217, 217,
	218, 218, 220, 220, 220, 220, 223, 223, 141, 141,
	141, 141, 149, 149, 150, 150, 151, 151, 263, 263,
	260, 260, 260, 259, 259, 155, 155, 155, 157, 156,
	156, 156, 156, 158, 158, 160, 160, 159, 159, 161,
	166, 166, 165, 165, 163, 163, 163, 163, 164, 164,
	164, 164, 167, 167, 120, 120, 120, 120, 120, 120,
	120, 131, 131, 131, 131, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 83, 83, 83, 236, 236, 168, 168, 176,
	176, 176, 176, 169, 169, 169, 169, 169, 169, 169,
	177, 177, 177, 183, 178, 178, 174, 174, 174, 174,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 271, 271,
	336, 336, 335, 335, 334, 334, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 372, 372, 284,
	284, 284, 284, 175, 175, 175, 175, 175, 101, 101,
	101, 101, 101, 268, 268, 268, 272, 272, 272, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 189, 189, 97, 97, 187, 187,
	188, 190, 190, 185, 185, 185, 171, 171, 171, 191,
	191, 192, 192, 193, 193, 195, 194, 194, 196, 197,
	197, 197, 198, 198, 199, 199, 199, 47, 47, 47,
	47, 47, 42, 42, 42, 42, 43, 43, 43, 112,
	112, 112, 112, 114, 114, 113, 113, 79, 79, 80,
	80, 80, 118, 118, 119, 119, 119, 116, 116, 117,
	117, 215, 215, 200, 200, 200, 207, 207, 207, 203,
	203, 205, 205, 205, 206, 206, 206, 204, 212, 212,
	214, 214, 213, 213, 209, 209, 210, 210, 211, 211,
	211, 208, 208, 170, 170, 170, 170, 170, 216, 216,
	216, 216, 224, 224, 180, 180, 182, 182, 181, 135,
	225, 225, 229, 226, 226, 230, 230, 230, 230, 230,
	227, 227, 228, 228, 256, 256, 256, 234, 234, 247,
	247, 243, 243, 244, 244, 237, 237, 249, 249, 249,
	74, 179, 179, 321, 321, 318, 252, 252, 253, 253,
	257, 257, 261, 261, 258, 258, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 368, 369, 266, 267, 267, 267,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 5, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 0,
	2, 2, 2, 1, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 5, 7, 7,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 3, 3, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 2, 4, 4, 4, 4, 4,
	2, 3, 3, 3, 5, 2, 3, 3, 2, 3,
	4, 4, 4, 3, 4, 4, 5, 3, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 1, 1, 2, 1, 3,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 1, 3, 4, 3, 7, 0, 3, 1, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 1, 1, 2, 6, 5, 6, 6, 0, 2,
	3, 3, 0, 2, 3, 3, 3, 2, 3, 1,
	6, 3, 4, 3, 1, 3, 4, 5, 6, 3,
	4, 5, 6, 3, 4, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 3, 1, 1, 2, 2, 2, 2,
	1, 1, 2, 9, 6, 6, 6, 2, 2, 3,
	3, 3, 1, 1, 1, 0, 3, 1, 1, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 5, 5, 6,
	4, 4, 8, 6, 8, 6, 8, 5, 4, 2,
	2, 1, 2, 2, 2, 8, 8, 6, 5, 4,
	4, 4, 4, 4, 7, 4, 6, 6, 6, 4,
	4, 4, 7, 8, 6, 5, 6, 8, 11, 7,
	8, 8, 9, 4, 4, 4, 4, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 4, 0, 2,
	0, 2, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	2, 3, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 0, 5, 5, 2,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 2, 1, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 2, 2, 0,
	3, 0, 2, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 1, 0,
	1, 2, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 2, 1, 5, 4, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -366, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -84, -33, 32, -38, -48, 219, -49, -39, 220,
	-50, 222, 221, 258, 223, 251, 74, 304, 305, 307,
	308, 309, 310, -85, 256, 257, 225, 36, 45, 33,
	34, 37, 229, 264, 265, 228, -10, -34, 8, -368,
	11, 435, 253, 252, 28, -12, 469, 85, -367, 609,
	-215, -200, 22, 33, 29, -199, -195, -103, -200, 20,
	18, 7, -76, -371, -76, -76, 12, 13, -76, -306,
	-308, 85, 155, 85, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -330, -44, -41, 224, 221, 268,
	119, 120, 258, 259, 260, 223, 242, 257, 261, 256,
	277, -40, 80, 33, 469, 472, -313, 220, 226, 227,
	436, 122, 121, 75, 222, -310, 358, 501, 579, -56,
	581, 101, 103, 580, 44, 232, 582, 583, 584, 508,
	585, 241, 586, 587, 588, 589, 595, 550, 596, 597,
	598, 123, 7, -76, -261, -257, -340, -251, 88, 89,
	90, 466, 244, 499, 500, 293, 80, 41, 355, 358,
	501, 579, 304, 318, 312, 339, 331, 467, 502, 296,
	245, 281, 576, 329, 131, 581, 299, 503, 259, 363,
	364, 504, 365, 101, 307, 402, 594, 298, 505, 592,
	103, 580, 79, 51, 44, 254, 327, 228, 323, 582,
	282, 506, 477, 275, 122, 119, 601, 36, 321, 50,
	30, 591, 121, 49, 583, 146, 507, 584, 508, 367,
	346, 570, 48, 368, 260, 509, 83, 265, 471, 302,
	578, 369, 322, 370, 292, 590, 225, 510, 562, 371,
	372, 571, 511, 347, 351, 512, 394, 373, 608, 52,
	513, 514, 572, 120, 515, 78, 585, 316, 317, 516,
	290, 243, 396, 343, 448, 455, 456, 107, 108, 451,
	109, 457, 110, 458, 459, 460, 449, 111, 104, 450,
	461, 462, 344, 345, 112, 463, 106, 105, 452, 454,
	113, 464, 241, 35, 374, 468, 294, 58, 269, 397,
	46, 349, 605, 45, 566, 517, 569, 342, 338, 445,
	53, 518, 519, 520, 521, 586, 341, 315, 337, 600,
	4, 287, 587, 62, 227, 353, 352, 354, 276, 393,
	334, 522, 523, 524, 248, 81, 525, 324, 21, 526,
	527, 375, 283, 528, 56, 529, 530, 400, 257, 531,
	54, 588, 39, 532, 262, 602, 589, 533, 534, 535,
	536, 264, 537, 377, 538, 376, 348, 350, 271, 378,
	470, 539, 303, 320, 261, 593, 540, 249, 577, 263,
	268, 256, 401, 250, 541, 542, 543, 544, 545, 297,
	561, 546, 547, 308, 595, 446, 43, 548, 549, 550,
	551, 552, 291, 286, 395, 404, 61, 82, 360, 553,
	554, 575, 314, 284, 555, 305, 55, 596, 597, 598,
	278, 599, 9, 606, 607, 380, 123, 288, 289, 47,
	335, 270, 556, 300, 557, 325, 326, 340, 313, 336,
	306, 563, 272, 381, 447, 258, 558, 403, 285, 356,
	361, 301, 474, 277, 382, 574, 473, 333, 330, 279,
	559, 383, 233, 273, 274, 560, 564, 384, 385, 295,
	386, 387, 388, 389, 390, 392, 391, 280, 472, 311,
	328, 362, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	444, 231, -76, 231, -159, -257, 231, -227, 364, -248,
	366, 379, 374, 384, 372, -239, 375, 377, 271, -357,
	394, 231, 381, 219, 367, 376, 385, 386, 295, 392,
	387, 391, 280, 388, 389, 390, -340, 172, 584, 599,
	131, 332, 371, 369, 395, 566, -257, 306, -264, 311,
	-252, -340, -251, 309, -159, -82, 562, 223, -266, -266,
	-105, 566, 568, -178, -120, 139, -131, -134, -125, -126,
	-172, -173, -174, -175, -132, -185, 161, 162, 169, 140,
	-183, -135, 26, 465, 437, 436, 172, 31, 215, 68,
	69, 439, 440, 142, 57, 412, 413, -133, 407, 414,
	409, 442, 443, 114, 444, 104, 106, 105, 445, 446,
	447, 344, 345, 448, 449, 450, 107, 108, 109, 110,
	111, 112, 113, 451, 454, 452, 453, 455, 456, 457,
	462, 463, 458, 459, 460, 461, 464, -252, -257, 236,
	406, 230, 167, 435, -127, -123, -8, -181, 405, 410,
	411, 415, 408, -340, -251, -129, -128, -168, 91, 97,
	102, 98, -363, 115, -368, 92, 93, 94, 95, 96,
	116, 117, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 44, 380, 380, -159, -76, -76,
	-76, -76, -193, -103, -195, -10, -8, -368, 8, -76,
	-8, -9, -13, -34, -36, 495, -35, -257, -200, -215,
	12, 157, 42, 50, -198, -199, -12, -8, -120, 19,
	23, 24, -108, 163, -120, -257, -77, -108, -237, 235,
	-76, -76, -226, -269, 306, -230, 395, 394, -253, -228,
	-252, -250, -227, 393, 224, 23, 475, 138, 25, 27,
	141, 172, 126, 19, 142, 37, 226, 332, 242, 171,
	238, 436, 219, 72, 476, 407, 409, 405, 412, 438,
	439, 406, 366, 31, 13, 478, 28, 252, 24, 38,
	165, 221, 145, 479, 255, 26, 253, 114, 117, 481,
	22, 75, 247, 14, 240, 40, 16, 482, 483, 17,
	236, 235, 157, 232, 70, 11, 215, 29, 154, 66,
	484, 133, 485, 486, 487, 488, 127, 68, 155, 20,
	603, 410, 411, 33, 567, 465, 266, 167, 73, 59,
	568, 139, 408, 489, 490, 115, 491, 118, 76, 573,
	135, 18, 71, 42, 492, 267, 493, 237, 604, 494,
	398, 495, 156, 222, 435, 69, 496, 230, 379, 8,
	441, 32, 251, 239, 125, 67, 497, 231, 144, 442,
	443, 234, 128, 116, 7, 132, 34, 12, 74, 77,
	413, 414, 415, 57, 124, 469, 143, 15, 498, 399,
	137, 131, -307, 155, -293, -297, -252, 246, -323, 242,
	-159, -316, -315, -252, -368, -104, -247, 232, 240, 239,
	132, -344, 135, 288, 406, 230, -51, -52, -53, -227,
	171, 583, -86, 263, 267, 86, 86, -297, -296, -295,
	-345, 267, 246, -322, -314, 238, 247, -303, 239, 240,
	-298, 232, 133, -345, -298, 237, 247, 242, 246, 267,
	267, 123, 267, 123, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 262, -304, 147, -304, 473, 473, -310,
	-345, 242, -345, -345, 234, 35, 35, -249, -298, 234,
	25, -304, -304, -304, -227, 171, -304, -304, -304, -304,
	275, 275, -304, -304, -304, -304, -304, -304, -304, -304,
	-304, -304, -304, -304, -304, -304, -304, -304, -304, 231,
	-344, -112, 391, 295, 80, -54, 277, -37, -159, -247,
	232, 233, -344, 264, -159, 216, -159, -241, 155, 15,
	-241, -238, 380, 378, 365, 370, -241, -241, -241, -241,
	278, 363, -299, 232, 35, 243, 380, 278, 363, 278,
	279, 278, 279, 373, 383, 278, -262, 14, 157, 406,
	368, 372, 271, 231, 272, 233, 382, 279, -262, 92,
	-242, 155, 380, 274, -241, -241, -267, -368, -253, 332,
	-340, 569, -267, -267, 32, 89, 234, -252, -78, -252,
	92, -15, -11, -22, -21, -23, 147, -110, 380, -98,
	172, 584, 570, 571, 572, 569, 377, 577, 575, 573,
	278, 574, 86, 135, 137, 138, 4, -120, 154, -169,
	147, 148, 149, 150, 151, 152, 153, 157, 139, 141,
	155, 156, 136, 158, 159, 160, 161, 162, 163, 164,
	166, 165, 167, 168, 171, 217, 218, -126, -126, -126,
	-126, -183, -368, -368, -368, -126, -236, -368, -126, -368,
	-368, -368, -368, -189, -120, -368, -372, -368, -372, -372,
	-284, -368, -284, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	216, -368, -368, -368, -368, -368, -284, -284, -284, -284,
	-284, 102, 97, 91, -185, 98, 92, -252, -257, -8,
	-9, -178, -266, -354, -355, -162, -159, -368, 295, -252,
	-252, 264, -198, -12, -8, -193, -199, -195, -8, -76,
	-96, -109, 63, 64, -111, 24, 38, 67, 65, 23,
	-369, 87, -369, -215, -369, 86, -36, -219, 85, 61,
	43, 92, 92, 86, 21, -194, -196, -120, 14, -255,
	4, -254, 25, -252, 92, 216, 100, 14, -160, 29,
	-159, -237, -237, 86, 306, -230, -269, -232, -231, 396,
	398, 147, -256, -252, 92, 31, 87, 86, -159, -273,
	-276, -278, -277, -279, -274, -275, 329, 330, 172, 333,
	335, 336, 337, 338, 339, 340, 341, 342, 343, 346,
	32, 254, 325, 326, 327, 328, 347, 348, 349, 350,
	351, 352, 353, 354, 312, 331, 467, 313, 314, 315,
	316, 317, 318, 320, 321, 322, 323, 324, -343, -340,
	85, 87, 86, -280, 85, -120, -112, 231, -340, 232,
	232, 232, -76, 435, -304, -304, -304, 262, 19, -44,
	-41, -330, 18, -40, -41, 224, 119, 120, 221, 85,
	-293, 85, -302, -343, -340, 85, 133, 237, 132, -301,
	-298, -301, -302, -340, -185, -340, 133, 133, -340, -340,
	-223, -252, -223, -223, 23, -223, 23, -223, 23, 94,
	-252, -223, 23, -223, 23, -223, 23, -223, 23, -223,
	23, 31, 78, 79, 31, 81, 82, 83, -185, -340,
	-185, -293, -227, -159, -340, 94, 94, 94, -304, -304,
	94, 92, 92, 92, -304, -304, 94, 92, -259, -257,
	92, 92, -346, 248, 292, 294, 94, 94, 94, 94,
	31, 92, -347, 31, 591, 590, 592, 593, 594, 92,
	94, 31, 94, 31, 94, -252, 85, -159, -118, 282,
	219, 221, 224, 76, 92, 296, 300, 301, 147, 44,
	86, 234, 231, -340, -243, 236, -243, -252, -258, -257,
	-250, 92, -120, -300, 14, 157, -262, -262, -241, -159,
	-300, -262, -241, -159, -241, -241, -241, -241, -262, -262,
	-262, -241, -257, -257, -159, -159, -159, -159, -159, -159,
	-159, -267, -242, -241, 569, 92, -235, 14, 76, -267,
	-267, -265, 309, 343, 563, 564, 565, 86, 469, -152,
	-159, 569, 569, 569, 569, 569, 569, -120, -120, -120,
	-120, 491, -176, 115, 139, 116, 117, -134, -177, -181,
	-183, 99, 157, 141, 155, 156, -125, -126, -125, -125,
	-125, -125, -125, -125, -125, -125, -125, -125, -125, -125,
	-125, -268, -252, 92, 172, -130, -129, 98, -363, -130,
	-106, -108, -120, -120, -340, -252, -106, -106, -120, -102,
	24, 38, -187, -188, 143, -185, -369, -369, 94, 98,
	-252, -252, -95, -94, 417, 418, 419, 420, 422, 423,
	424, 427, 428, 432, 433, 416, 434, 421, 426, 429,
	430, 431, 425, 328, -120, -120, -120, -120, -120, -120,
	-83, -120, 126, 127, 128, -120, -120, -179, -178, -339,
	-338, -337, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -107, 24, 38, -106, -253,
	-258, -250, -106, -107, -107, -106, -106, 216, -215, -369,
	86, -356, 398, 399, 567, -260, 267, -259, 25, -179,
	92, 14, -221, 77, -252, -198, -198, 63, 64, 59,
	-106, -111, -369, -35, 25, -217, -252, 62, 92, -285,
	-227, 355, 356, -120, -120, 86, -197, 27, 28, -159,
	-254, 163, -258, -159, -222, 267, -159, -137, -139, -140,
	-141, -162, -184, -368, -142, 487, 484, 14, -152, -153,
	-161, -257, -230, -232, 86, 397, 399, 400, 76, 118,
	-120, -286, 171, -312, -311, -310, -293, -295, -296, -297,
	87, -286, -289, 361, 360, -280, -280, -280, -280, -280,
	-285, -285, -285, -285, 85, 85, -280, -280, -280, -280,
	-287, 85, -287, -287, -288, 85, -288, -323, -120, -320,
	-319, -317, -318, 241, 101, 560, 516, 469, 508, 550,
	77, -315, -197, 94, -369, -118, -244, 236, -321, -318,
	-340, -340, -340, -244, -340, 92, -340, 92, -340, 92,
	-87, -58, -1, 603, 604, 605, 86, 19, -294, -293,
	-57, 292, -326, -327, 267, -322, -316, -302, 133, -301,
	-302, -302, -340, 86, 29, 123, 123, 123, 123, 469,
	221, 32, -245, 507, 139, -293, -57, -268, 234, -268,
	-268, 92, 92, -240, 599, -152, -114, 284, 147, 273,
	273, 231, 231, 286, -159, 297, 299, 298, 296, 300,
	301, 23, 23, 23, 285, 287, 289, 275, -159, -159,
	-243, 76, -154, -159, 26, -257, -159, -241, -241, -159,
	-241, -241, -159, -252, -98, 398, 86, 469, 22, -99,
	22, -368, 115, 116, 117, -177, -125, -126, -125, 138,
	255, 86, -369, 25, 86, 77, -369, -369, -369, 86,
	14, -106, -190, -188, 145, -120, -369, -369, -369, 86,
	86, 14, -272, 25, -369, -369, -369, -369, -369, -189,
	-369, 14, 86, 86, -369, -369, 86, 86, -369, 86,
	86, 86, -336, 86, 86, 86, 86, -369, -369, -369,
	-369, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, -369, -369, -106, -106, -368, 216, -369, -369, -369,
	-369, -369, -253, -355, 566, 399, -166, -165, -163, 74,
	235, 75, -368, -259, -369, -130, 89, -218, 89, -217,
	-171, -252, 94, 98, -200, -136, -138, 14, -111, -183,
	87, 86, -285, -204, -209, -238, -252, 92, 172, -196,
	216, -167, 15, -170, 32, 57, -11, -368, -368, 32,
	86, -155, -157, -156, -158, 66, 70, 72, 67, 68,
	69, 73, -263, 25, -137, -9, -8, -368, -368, -368,
	-159, -152, -370, 14, 77, -370, 86, 216, -231, -233,
	401, 398, 404, -340, 92, -86, 86, -310, -297, -201,
	-115, 40, -290, 362, -285, -285, -292, 92, -292, 94,
	94, 87, -47, -42, -43, 33, 80, -317, -304, 92,
	39, -304, -304, -252, 87, -197, -114, -159, 139, 76,
	-321, -321, -321, -257, -2, 602, 608, 133, 85, 365,
	18, -217, 86, 87, -186, 293, 87, -88, -252, 87,
	85, -302, -302, -252, -368, 231, 31, 31, 507, -57,
	-186, -286, -340, 601, 600, 87, 233, 291, -119, 412,
	-116, 92, 88, -159, -159, -159, -159, -159, 224, 221,
	-364, 302, -364, 276, 234, -152, -159, 86, -81, 250,
	245, -262, -262, 33, -159, 398, 578, 576, -120, 138,
	255, -134, -126, -108, 466, -270, 172, 329, 254, 327,
	323, 343, 334, 360, 325, 361, 322, 321, 320, -270,
	-268, -120, -120, -193, 146, -120, 144, -120, -120, -120,
	-369, 172, 329, 14, -120, -120, -120, -337, -120, -120,
	-120, -335, -334, -130, -185, -369, -335, -120, -120, -334,
	-334, -338, -338, -338, -338, -338, -178, -178, -178, -178,
	-369, -369, -107, -253, -163, -298, -298, -298, -223, 86,
	-234, 22, 14, 57, 57, -136, -167, -137, -111, -252,
	-207, 562, -212, 46, -210, -211, 47, -208, 48, 56,
	163, -198, -120, -224, 76, -225, -229, -185, -180, -182,
	-181, -368, -216, -369, -252, -223, -225, -139, -140, -140,
	-139, -140, 66, 66, 66, 71, 66, 71, 66, -156,
	-257, -369, -369, -9, -9, -120, -260, 77, -137, -137,
	-161, -257, 163, 398, 402, 403, -310, -362, 115, 139,
	31, 76, 358, 101, -360, 171, 504, 555, 560, 516,
	508, 550, -361, 237, 132, 133, 249, 25, 41, 87,
	86, 87, 86, 87, 86, -246, -245, -43, -42, -304,
	-304, 94, -340, 92, 92, 233, 26, -159, 76, 76,
	76, -89, 606, 94, 85, -3, 80, -120, 85, 19,
	-293, -185, -328, -281, -329, -282, -283, -5, -6, -305,
	-92, 57, 101, -61, 44, 232, 586, 587, 123, -368,
	599, -320, -217, -324, -326, -159, -122, -368, -121, -123,
	-127, 161, 162, -186, -159, -113, 282, 290, 85, -117,
	89, -342, 77, 273, 358, 273, -365, 303, 92, -365,
	-159, -81, -47, -159, -241, -241, 33, -340, -369, -134,
	-126, -368, -369, -280, -280, -280, -288, -280, 317, -280,
	317, -280, -369, -369, 86, -369, 22, -369, -97, 441,
	-120, 86, 86, -369, 85, 85, -120, -369, -369, -369,
	-336, 86, -369, 86, -369, 86, -271, 561, -369, -369,
	-369, -369, -369, -369, -369, -369, -369, -369, -369, -164,
	22, -164, -164, -369, 89, -159, -167, -191, 16, -204,
	51, 335, -214, -213, 55, 47, -211, 19, 49, 19,
	30, -224, 86, 147, 86, -369, -369, 86, 57, 216,
	-369, -167, -150, -149, 76, 77, -151, 76, -149, 66,
	66, -219, -369, -369, 86, -222, -137, -167, -167, 216,
	115, -368, -124, -133, -122, 12, 92, 92, -340, -359,
	590, 591, 31, 94, -304, -304, 133, 133, -159, 85,
	-285, 92, -285, 94, 94, 31, 81, 82, 83, 31,
	78, 79, -159, -159, -159, -159, -325, 85, 19, -120,
	85, 147, 87, -217, -217, 269, 157, -304, 584, 275,
	275, -304, -304, -304, -91, -90, 606, 87, -369, 86,
	-291, 469, 472, -120, -128, -128, -219, 87, -333, 469,
	-341, -252, -252, -252, -252, 94, 96, -125, -285, -120,
	-120, -198, 92, -120, -120, 94, 94, -369, -369, -335,
	-334, -120, -369, -147, -146, -148, 570, 115, 31, -270,
	-368, 66, 18, 16, -368, -368, -260, -191, -192, 17,
	19, -205, 53, -203, 52, -203, -213, 19, 19, 92,
	19, 92, 133, -229, -120, -182, 57, -11, -252, -180,
	-252, -193, -120, 85, -120, -130, -167, -167, -120, -173,
	444, 104, 106, 105, 445, 446, 447, 344, 345, 448,
	449, 450, 107, 108, 109, 110, 111, 112, 113, 451,
	454, 452, 455, 456, 457, 462, 463, 458, 459, 460,
	461, 464, 92, 92, 85, -120, 87, 87, -219, -324,
	-58, 87, -217, 94, 87, 270, -181, -368, 92, -304,
	-304, -304, 94, 94, -259, -369, 86, -252, -361, -326,
	473, 473, -369, 25, -332, -331, -253, 85, 77, -101,
	157, 469, -369, -369, -369, -369, -369, 87, 87, -369,
	-369, 86, -369, -146, -148, -369, 76, -130, -220, -369,
	-252, 237, 19, 19, -220, -220, -166, -192, -120, -178,
	-206, 54, 76, 118, 92, 92, 92, 12, -180, 216,
	-198, -217, -144, 365, -193, -369, -217, 87, 25, 87,
	608, 133, 87, -181, -100, -368, 266, -259, 92, 92,
	-90, -93, -11, 86, 147, -217, -159, -369, 467, 73,
	470, -120, -369, 76, 479, 570, 86, -369, -369, -369,
	76, 118, -225, -252, 87, -369, -368, -198, 87, -202,
	-11, 85, -3, 266, -281, -329, -282, -283, -5, -6,
	-305, -79, 469, -331, -309, -253, 92, 94, 87, 62,
	468, 471, -336, -252, 237, -260, -145, -143, -252, 522,
	-352, -351, 465, -362, -358, 115, 139, 101, -360, 560,
	516, 124, 125, -79, -120, 85, -369, -80, 281, 566,
	-342, 62, -369, -369, 86, 22, -273, -60, 533, -349,
	-350, 76, -353, 371, 532, 553, 115, 92, 87, -217,
	242, -333, 469, -143, 529, -286, -130, -350, 76, -349,
	76, 13, 12, -4, 607, 87, 283, 470, -59, 26,
	-144, -348, 250, 245, 248, 32, -348, 94, -4, 471,
	533, 244, 31, 115, -130, -147, -146, -146,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 816,
	816, 816, 0, 816, 0, 0, 816, -2, -2, 816,
	1302, 0, 816, 0, 0, -2, 748, 750, 0, 752,
	-2, 0, 0, 761, 1805, 1805, 811, 0, 0, 0,
	0, 0, 816, 816, 816, 816, 1163, 48, 816, 0,
	83, 84, 767, 768, 769, 63, 0, 1803, 1, 3,
	69, 73, 0, 0, 0, 56, 1172, 0, 76, 0,
	0, 820, 0, 818, 0, 1285, 816, 816, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 562, 495, 541, 493, 527, -2, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 498, 371, 371, 0, 0, -2, 481, 481, 481,
	0, 0, 0, 524, 1287, 433, 371, 371, 371, 0,
	371, 371, 371, 371, 0, 0, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 1189, 153, 1303, 1300, 1301, 38, 39,
	40, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731,
	1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741,
	1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761,
	1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771,
	1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781,
	1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791,
	1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801,
	1802, 0, 1279, 0, 675, 917, 0, 737, 737, 0,
	737, 737, 737, 737, 0, 0, 0, 687, 0, 0,
	0, 0, 734, 0, 703, 704, 0, 734, 0, 710,
	740, 0, 715, 737, 737, 718, 1806, 0, 1806, 1806,
	1270, 0, 731, 729, 743, 744, 747, 751, 0, 756,
	759, 1296, 1297, 0, 774, 47, 1540, 766, 779, 780,
	0, 812, 813, 43, 1014, 0, 939, 944, 955, 968,
	969, 970, 971, 972, 974, 975, 0, 0, 0, 0,
	980, 981, 0, 0, 0, 0, 0, 995, 0, 0,
	0, 0, 0, 1144, 0, 1107, 1107, 1031, 1107, 1109,
	1109, 0, 0, 0, 1802, 1580, 1588, 1589, 1611, 1697,
	1746, 1584, 1585, 1566, 1578, 1581, 1569, 1570, 1572, 1574,
	1579, 1586, 1592, 1571, 1591, 1590, 0, 1567, 1568, 1573,
	1583, 1587, 1575, 1576, 1577, 1582, 1593, 1153, 0, 0,
	0, 0, 0, 0, 273, 274, 1013, 1259, 1109, 1109,
	1109, 1109, 1109, -2, -2, 219, 220, 221, 222, 223,
	224, 225, 0, 215, 0, 278, 279, 275, 276, 277,
	997, 998, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 1805, 0, 789, 0, 0, 0,
	0, 0, 1172, 0, 1164, 1163, 61, 0, 816, -2,
	0, 0, 0, 0, 45, 0, 50, 876, 75, 74,
	1211, 0, 0, 0, 57, 1173, 65, 67, 1174, 0,
	821, 822, 0, 852, 856, 0, 817, 0, 0, 1286,
	1285, 1285, 100, 0, 1742, 1263, -2, -2, 0, 0,
	1298, 1299, 1272, -2, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, -2, 0, 0, 165, 166, 0, 41, 398, 0,
	161, 0, 391, 337, 0, 1189, 0, 0, 0, 0,
	0, 816, 0, 1280, 142, 143, 150, 151, 152, 371,
	371, 371, 538, 0, 0, 153, 153, 502, 503, 504,
	0, 0, -2, 396, 0, 482, 0, 0, 385, 385,
	389, 387, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 0, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 623, 0, 372, 0, 536, 537, 434,
	0, 0, 0, 0, 0, 514, 515, 0, 0, 1288,
	1289, 0, 0, 0, 371, 371, 0, 0, 0, 0,
	371, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	141, 1202, 0, 0, 0, -2, 0, 667, 0, 0,
	0, 1281, 1281, 0, 674, 0, 676, 677, 0, 0,
	678, 0, 734, 734, 732, 733, 680, 681, 682, 683,
	737, 0, 0, 380, 381, 382, 734, 737, 0, 737,
	737, 737, 737, 734, 734, 734, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 740, 737, 0,
	711, 0, 712, 713, 716, 717, 719, 1807, 1808, 1319,
	1806, 1806, 723, 727, 1271, 749, 757, 760, 777, 775,
	776, 778, 770, 771, 772, 773, 0, 791, 792, 797,
	0, 0, 0, 0, 803, 804, 805, 0, 0, 808,
	809, 810, 0, 0, 0, 0, 0, 937, 0, 0,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 976, 977, 978,
	979, 982, 0, 0, 0, 987, 988, 0, 0, 0,
	0, 0, 826, 0, 1145, 0, 1029, 0, 1030, 1032,
	1033, 0, 1034, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1291, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 836,
	0, 0, 836, 836, 0, 0, 208, 209, 210, 211,
	212, 226, 227, 228, 229, 230, 280, 1153, 0, 1013,
	0, 0, 44, 781, 782, 0, 900, 1291, 0, 0,
	832, 0, 55, 64, 66, 1172, 59, 1172, 0, 838,
	0, 0, -2, -2, 839, 845, 846, 847, 848, 849,
	52, 1804, 53, 0, 72, 0, 46, 0, 0, 0,
	0, 349, 1214, 0, 0, 1165, 1166, 1169, 0, 853,
	1622, 857, 0, 859, 860, 0, 819, 0, 98, 0,
	916, 0, 0, 0, 1742, 1269, 0, 102, 103, 0,
	0, 0, 355, 1274, 1275, 1276, -2, 378, 0, 355,
	344, 288, 289, 290, 337, 292, 337, 337, 337, 337,
	349, 349, 349, 349, 320, 321, 322, 323, 324, 0,
	0, 307, 337, 337, 337, 337, 327, 328, 329, 330,
	331, 332, 333, 334, 293, 294, 295, 296, 297, 298,
	299, 300, 301, 339, 339, 339, 341, 341, 0, 42,
	0, 359, 0, 1169, 0, 0, 1202, 1283, 1293, 0,
	0, 0, 1283, 120, 0, 0, 0, 539, 573, 496,
	528, 540, 0, 499, 500, -2, 0, 0, 481, 0,
	483, 0, 379, 0, -2, 0, 389, 0, 385, 389,
	386, 389, 377, 390, 518, 519, 520, 0, 522, 523,
	603, 886, 0, 0, 0, 0, 0, 609, 610, 611,
	0, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 529, 530, 531, 532, 533, 534, 535, 0, 0,
	0, 483, 0, 525, 0, 435, 436, 437, 0, 0,
	440, 441, 442, 443, 0, 0, 446, 447, 448, 903,
	904, 449, 450, 475, 476, 477, 451, 452, 453, 454,
	455, 456, 457, 469, 470, 471, 472, 473, 474, 458,
	459, 460, 461, 462, 463, 466, 0, 135, 1193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1281, 0, 0, 0, 0, 835, 918, 1304,
	1305, 738, 739, 0, 383, 384, 737, 737, 684, 724,
	0, 737, 688, 725, 689, 691, 690, 692, 705, 706,
	737, 695, 735, 736, 696, 697, 698, 699, 700, 701,
	702, 720, 707, 708, 709, 741, 0, 745, 746, 721,
	722, 0, 758, 762, 763, 764, 765, 0, 0, 794,
	94, 799, 800, 801, 802, 814, 807, 1015, 934, 935,
	936, 0, 938, 941, 0, 999, 1001, 943, 945, 1010,
	1011, 1012, 0, 0, 0, 0, 0, 949, 953, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 973, 1123, 1124, 1125, 990, 281, 282, 0, 991,
	0, 850, 0, 0, 0, 989, 0, 0, 0, 0,
	827, 828, 1151, 1148, 0, 0, 1108, 1110, 0, 0,
	0, 0, 0, 1086, 1087, 1088, 1089, 1090, 1091, 1092,
	1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1126, 0, 0, 0, 0, 0,
	1144, 0, 992, 993, 994, 0, 0, 0, 1292, 0,
	130, 131, 0, 0, 0, 0, 0, 1080, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 837, 1154,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 1258,
	0, 784, 785, 787, 0, 920, 0, 901, 0, 0,
	790, 0, 831, 0, 834, 58, 60, 843, 844, 0,
	861, 840, 54, 49, 0, 0, 878, 1212, 349, 1234,
	0, 353, 354, 1175, 1176, 0, 1168, 1170, 1171, 77,
	858, 854, 0, 932, 0, 0, 915, 0, 864, 866,
	867, 868, 898, 0, 871, 0, 0, 0, 0, 0,
	96, 917, 1264, 101, 0, 0, 106, 107, 1265, 1266,
	1267, 1268, 0, 562, -2, 430, 167, 169, 170, 171,
	162, -2, 347, 345, 346, 291, 349, 349, 314, 315,
	316, 317, 318, 319, 0, 0, 308, 309, 310, 311,
	302, 0, 303, 304, 305, 0, 306, 397, 0, 1177,
	360, 361, 363, 371, 0, 366, 367, 0, 371, 371,
	0, 392, 393, 0, 1169, 1193, 0, 0, 0, 1294,
	1293, 1293, 1293, 0, 155, 156, 157, 158, 159, 160,
	598, 0, 0, 574, 596, 597, 153, 0, 0, 163,
	485, 484, 0, 630, 0, 395, 0, 0, 389, 389,
	374, 375, 521, 0, 0, 605, 606, 607, 608, 0,
	0, 0, 510, 424, 0, 483, 485, 355, 0, 438,
	439, 444, 445, 464, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 554, 555, 556, 487,
	560, 557, 487, 561, 1190, 1191, 1192, 0, 0, 668,
	0, 0, 421, 92, 1282, 673, 734, 694, 726, 734,
	686, 693, 714, 754, 798, 0, 0, 0, 0, 806,
	0, 0, 942, 1000, 1002, 946, 0, 950, 954, 0,
	0, 0, 0, 0, 0, 0, 996, 1020, 1021, 0,
	0, 1163, 0, 1149, 0, 0, 1028, 1111, 1112, 0,
	0, 0, 0, 0, 1039, 1040, 1041, 1042, 1043, 0,
	1045, 0, 0, 0, 1049, 1050, 0, 0, 1051, 0,
	0, 0, 0, 0, 0, 0, 0, 1063, 1064, 1065,
	1066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1077, 1016, 0, 0, 836, 0, 1113, 1114, 1115,
	1116, 1117, 1154, 783, 786, 788, 874, 921, 922, 0,
	0, 0, 0, 902, 1290, 829, 830, 833, -2, 0,
	0, 1156, 0, 0, 861, 932, 862, 0, 841, 51,
	877, 0, 1216, 1215, 1228, 1241, 350, 351, 352, 1167,
	0, 1172, 0, 1252, 0, 0, 1244, 0, 0, 0,
	0, 0, 0, 0, 0, 905, 0, 0, 908, 0,
	0, 0, 0, 899, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 90, 91, 0, 0, 0, 104, 105,
	0, 0, 111, 356, 357, 144, 153, 432, 168, 405,
	0, 0, 287, 348, 312, 313, 0, 335, 0, 0,
	0, 426, 116, 1181, 1180, 371, 371, 362, 0, 365,
	0, 0, 0, 1295, 338, 394, 0, 134, 0, 0,
	0, 0, 0, 140, 568, 0, 0, 575, 0, 0,
	0, 494, 0, 505, 506, 0, 602, -2, 664, 359,
	0, 373, 376, 887, 0, 0, 507, 0, 425, 485,
	512, 513, 526, 467, 468, 465, 0, 0, 1203, 1204,
	1209, 1207, 1208, 121, 546, 548, 547, 551, 0, 0,
	489, 0, 489, 544, 0, 421, 1177, 0, 672, 422,
	423, 737, 737, 793, 95, 0, 796, 0, 0, 0,
	0, 947, 951, 851, 0, 0, 337, 337, 1131, 337,
	341, 1134, 337, 1136, 337, 1139, 337, 1142, 1143, 0,
	0, 0, 0, 1146, 1027, 1152, 0, 0, 0, 0,
	1038, 0, 0, 0, 0, 0, 0, 132, 133, 1080,
	0, 0, 1082, 1084, 1085, 1055, 1081, 0, 0, 1078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1017, 1018, 0, 1155, 923, 928, 928, 928, 0, 0,
	0, 1277, 1278, 1157, 1158, 932, 1159, 863, 842, 879,
	1234, 0, 1227, 0, -2, 1236, 0, 0, 0, 1242,
	855, 78, 933, 81, 0, 1252, 1260, 0, 1243, 1254,
	1256, 0, 0, 0, 1248, 0, 932, 865, 894, 896,
	0, 891, 906, 907, 909, 0, 911, 0, 913, 914,
	876, 870, 872, 0, 0, 0, 98, 0, 932, 932,
	97, 0, 919, 108, 109, 110, 431, 172, 177, 0,
	0, 0, 182, 0, 184, 0, 0, 0, 189, 190,
	371, 371, 406, 0, 284, 286, 0, 0, 175, 349,
	0, 349, 0, 342, 0, 407, 427, 1178, 1179, 0,
	0, 364, 368, 369, 370, 0, 1284, 136, 0, 0,
	0, 571, 0, 599, 0, 0, 0, 0, 0, 0,
	164, 486, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 371, 0, 0, 0, 371, 371, 371, 0,
	656, 358, 0, 0, 627, 624, 508, 0, 213, 214,
	216, 0, 0, 511, 876, 1194, 1195, 1196, 0, 1206,
	1210, 124, 0, 0, 0, 0, 558, 0, 488, 559,
	669, 670, 671, 93, 679, 685, 795, 815, 940, 948,
	952, 0, 984, 1129, 349, 1132, 1133, 1135, 1137, 1138,
	1140, 1141, 985, 986, 0, 1023, 0, 1025, 1172, 0,
	1150, 0, 0, 1037, 0, 0, 0, 1046, 1047, 1048,
	0, 0, 1054, 0, 1056, 0, 0, 0, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1019, 0,
	0, 0, 0, 900, -2, 62, 1159, 1161, 0, 1221,
	1219, 1219, 1229, 1230, 0, 0, 1237, 0, 0, 0,
	0, 82, 0, 0, 0, 1257, 0, 0, 0, 0,
	99, 1163, 888, 895, 0, 0, 889, 0, 890, 910,
	912, 869, -2, 873, 0, 932, 932, 88, 89, 0,
	178, 0, 180, 206, 207, 0, 183, 185, 186, 187,
	193, 194, 195, 188, 0, 0, 283, 285, 0, 0,
	325, 336, 326, 0, 0, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 876, 137, 138, 139, 563, 0, 573, 0,
	0, 0, 566, 0, 497, 0, 0, 0, 371, 371,
	371, 0, 0, 0, 0, 641, 0, 0, 604, 0,
	612, 0, 0, 0, 217, 218, 0, 1205, 545, 0,
	122, 123, 0, 0, 550, 490, 491, 1118, 1130, 0,
	0, 0, 1147, 0, 0, 0, 0, 1044, 1052, 0,
	1083, 0, 1059, 0, 0, 0, 593, 594, 0, 1079,
	0, 929, 0, 0, 0, 0, 920, 1161, 80, 0,
	0, 1224, 0, 1217, 1220, 1218, 1231, 0, 0, 1238,
	0, 1240, 0, 1261, 1262, 1255, 0, 1247, 1250, 1246,
	1249, 1172, 892, 0, 897, 0, 1163, 87, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 192, 0, 0, 340, 343, 0, 0,
	0, 564, 0, 576, 567, 0, 654, 0, 658, 0,
	0, 0, 661, 662, 663, 640, 0, 644, 399, 628,
	625, 626, 509, 0, 125, 126, 0, 0, 0, 0,
	0, 0, 1022, 1024, 1026, 1035, 1036, 1127, 1128, 1053,
	1057, 0, 1060, 0, 0, 1061, 0, 595, 0, 925,
	882, 883, 930, 931, 0, 0, 875, 79, 1162, 1160,
	1213, 0, 1222, 1223, 1232, 1233, 1239, 0, 1245, 0,
	85, 0, 0, 0, 1172, 179, 0, 198, 0, 572,
	0, 575, 565, 652, 653, 0, 665, 657, 659, 660,
	642, -2, 1197, 0, 0, 0, 552, 983, 0, 0,
	0, 1080, 1062, 0, 591, 592, 0, 924, 926, 927,
	1225, 1226, 1253, 1251, 893, 900, 0, 86, 412, 405,
	1197, 0, 0, 0, 645, 646, 647, 648, 649, 650,
	651, 542, 1199, 127, 128, 478, 479, 480, 121, 1119,
	0, 1122, 0, 884, 885, 577, 0, 579, 0, -2,
	400, 413, 0, 173, 199, 200, 0, 0, 203, 204,
	205, 196, 197, 117, 0, 0, 666, 0, 1200, 1201,
	124, 1120, 1058, 578, 0, 0, 355, 0, 588, 401,
	402, 0, 408, 409, 410, 411, 201, 202, 600, 0,
	0, 549, 0, 580, 581, 589, 0, 403, 0, 404,
	0, 0, 0, 569, 0, 600, 1198, 0, 0, 590,
	586, 414, 416, 417, 0, 0, 415, 601, 570, 1121,
	0, 418, 419, 420, 582, 583, 584, 585,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 216, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 609,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:529
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:534
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:535
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:539
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:575
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:581
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:585
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:589
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:594
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:598
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:604
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:610
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:616
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:620
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:625
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:629
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:635
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:639
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:645
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:651
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:655
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:659
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:682
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:693
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:699
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:712
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:719
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:737
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:741
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:751
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:774
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:791
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:798
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:804
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:812
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:816
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:824
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:836
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:848
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:852
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:858
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:864
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:868
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:872
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:876
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:881
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:882
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:886
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:890
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:896
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:900
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:906
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:910
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:915
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:919
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:925
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:931
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:935
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:941
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:945
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:951
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:955
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:959
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:965
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:969
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:973
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:977
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:983
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:987
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:993
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:999
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1006
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1015
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1019
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1026
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1030
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1035
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1039
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1045
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1050
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1055
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1061
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1066
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1072
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1077
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1081
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1087
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1091
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1097
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1103
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1110
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1117
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1122
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1127
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1132
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1139
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1146
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1157
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1164
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1168
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1174
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1178
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1182
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1190
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1200
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1204
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1210
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1214
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1220
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1224
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1230
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1234
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1240
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1244
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1250
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1260
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1265
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1270
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1274
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1279
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1283
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1287
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1298
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1307
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1316
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1329
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1339
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1345
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1350
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1355
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1360
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1365
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1370
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1375
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1379
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1384
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1388
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1393
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1399
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1405
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1409
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1415
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1419
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1423
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1429
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1433
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1438
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1442
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1447
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1453
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1459
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1464
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1469
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1475
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1483
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1490
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1494
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1498
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1502
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1506
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1517
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1524
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1528
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1534
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1538
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1542
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1546
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1550
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1554
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1558
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1563
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1567
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1571
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1575
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1579
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1760
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1764
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1768
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1774
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1778
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1782
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1788
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1792
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1799
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1803
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1807
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1811
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1817
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1828
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1895
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1901
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1917
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1925
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1931
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1935
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1939
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1943
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1947
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1951
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1955
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1959
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1963
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1967
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1971
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1975
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1979
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1983
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1988
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2033
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2038
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2042
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2047
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2051
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2059
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2063
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2069
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2077
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2081
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2085
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2090
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2094
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2099
		{
			yyVAL.str = ""
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2103
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2107
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2111
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2115
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2120
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2126
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2141
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2146
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2150
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2156
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2160
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2166
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2170
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2175
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2179
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2183
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2187
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2191
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2195
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2201
		{
			yyVAL.str = ""
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2205
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2211
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2215
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2219
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2223
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2227
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2232
		{
			yyVAL.str = ""
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2236
		{
			yyVAL.str = yyDollar[2].str
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2246
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2250
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2257
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2261
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2266
		{
			yyVAL.str = "key"
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2270
		{
			yyVAL.str = yyDollar[1].str
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2285
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2289
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2295
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2299
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2305
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2309
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2315
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2319
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2325
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2329
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2335
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2341
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2345
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2349
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2353
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2357
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2362
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2366
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2372
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2378
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2384
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2388
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2392
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2397
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2401
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2407
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2413
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2419
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2423
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2427
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2431
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2435
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2440
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2444
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2454
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2458
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2463
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2467
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2472
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2476
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2482
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2486
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2490
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2496
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2500
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2506
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2510
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2514
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2518
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2522
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2526
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2530
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2534
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2538
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2542
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2546
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2550
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2554
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2558
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2562
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2566
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2570
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2574
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2578
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2582
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2586
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2590
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2594
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2598
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2602
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2606
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2610
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2614
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2618
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2622
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2626
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2631
		{
			yyVAL.str = ""
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2635
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2639
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2662
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2666
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2671
		{
			yyVAL.str = ""
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2677
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2681
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2686
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2690
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2695
		{
			yyVAL.str = ""
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2699
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2704
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2708
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2712
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2717
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2721
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2725
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2729
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2733
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 497:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2737
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2743
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2747
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2751
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2757
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2761
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2765
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2769
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2773
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2777
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2781
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2785
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2789
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2793
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2797
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2801
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2805
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2809
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2813
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2817
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2821
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2825
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2829
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2833
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2837
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2841
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2845
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2849
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2853
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2857
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2863
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2867
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2873
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2877
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2881
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2885
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2889
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2893
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2897
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2901
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2905
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2911
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2918
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2925
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2932
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2938
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2948
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2955
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2962
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2974
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2984
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2988
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2992
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3005
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3015
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3019
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3030
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3037
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3044
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3051
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3058
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3064
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3073
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3081
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3088
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3095
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3099
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3108
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3116
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3125
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3132
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3140
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3144
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3153
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3164
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3168
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3173
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3177
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3182
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3186
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3192
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3198
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3204
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3208
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3214
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3218
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3224
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3230
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3236
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3242
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3248
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3252
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3256
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3260
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3266
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3272
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3278
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3282
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3286
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3292
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3296
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3301
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3305
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3310
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3314
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3320
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3324
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3328
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3332
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3336
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3340
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3344
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3348
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3352
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3356
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3360
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3364
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3368
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3372
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3376
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3380
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3384
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3388
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3392
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3396
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3400
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3404
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3409
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3413
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3417
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3424
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3428
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3434
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3439
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3443
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3448
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3453
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3458
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3463
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3468
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3474
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3480
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3485
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3491
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3497
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3501
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3507
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3512
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3516
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3521
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3526
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3531
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3536
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3542
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3548
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3555
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3562
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3569
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3577
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3581
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3587
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3593
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3599
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3605
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3611
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3617
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3623
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3629
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3635
		{
			yyVAL.str = ""
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3639
		{
			yyVAL.str = ""
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3645
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3651
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3655
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 670:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3661
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3665
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3674
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3678
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3684
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3688
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3693
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3699
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3703
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3707
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3711
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3715
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3719
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3723
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3727
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3731
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3735
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3739
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3743
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3747
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3751
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3755
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3759
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3763
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3767
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3771
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3775
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3779
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3783
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3787
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3791
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3795
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3799
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3803
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3807
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3811
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3815
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3819
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3823
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3827
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3831
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3835
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3839
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3843
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3847
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3851
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3855
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3859
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3863
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3870
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3874
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3878
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3882
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3886
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3890
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3894
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3898
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3902
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3908
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
			yyVAL.str = "extended "
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3918
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3922
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3928
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3932
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3938
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3942
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3946
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3956
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3960
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3966
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3970
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3976
		{
			yyVAL.empty = struct{}{}
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3980
		{
			yyVAL.empty = struct{}{}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3984
		{
			yyVAL.empty = struct{}{}
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3990
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3994
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4000
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4004
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4008
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4014
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4018
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4024
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4030
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4034
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4039
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4041
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4044
		{
			yyVAL.empty = struct{}{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4046
		{
			yyVAL.empty = struct{}{}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4051
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4062
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4066
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4070
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4074
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4078
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4082
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4088
		{
			yyVAL.str = yyDollar[1].str
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4092
		{
			yyVAL.str = yyDollar[1].str
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4096
		{
			yyVAL.str = yyDollar[1].str
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4102
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4106
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4110
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4114
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4119
		{
			yyVAL.str = ""
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4123
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4127
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4143
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4147
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4153
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4159
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4163
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4169
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4175
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4179
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4183
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4187
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4193
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4199
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4205
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4209
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4213
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4217
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4221
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4225
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4231
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4235
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4241
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4245
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4249
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4253
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4257
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4269
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4273
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4277
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4281
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4285
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4290
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4294
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4298
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4303
		{
			yyVAL.str = ""
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4307
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4312
		{
			setAllowComments(yylex, true)
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4316
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4322
		{
			yyVAL.strs = nil
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4326
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4332
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4336
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4340
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4345
		{
			yyVAL.str = ""
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4349
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4353
		{
			yyVAL.str = SQLCacheStr
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4358
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4362
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4366
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4372
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4376
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4388
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4397
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4403
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4407
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4412
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4416
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4421
		{
			yyVAL.strs = nil
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4425
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4429
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4433
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4437
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4443
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4447
		{
			yyVAL.str = SQLCacheStr
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4451
		{
			yyVAL.str = DistinctStr
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4455
		{
			yyVAL.str = DistinctStr
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4459
		{
			yyVAL.str = StraightJoinHint
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4463
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4467
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4473
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4477
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4483
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4487
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4491
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4495
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4500
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4504
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4508
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4515
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4520
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4524
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4530
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4536
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4540
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4550
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4554
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4558
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4562
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4568
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4572
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4578
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4582
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4587
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4591
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4597
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4601
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4607
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4611
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4617
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4621
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4625
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4629
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4635
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4639
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4652
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4656
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4660
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4664
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4670
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4672
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4676
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4678
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4682
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4684
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4687
		{
			yyVAL.empty = struct{}{}
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4689
		{
			yyVAL.empty = struct{}{}
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4692
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4696
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4700
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4707
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4713
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4717
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4721
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4727
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4733
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4737
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4741
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4745
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4751
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4755
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4765
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4769
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4775
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4779
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4785
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4794
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4800
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4804
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 924:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4810
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4814
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4818
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4822
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4827
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4831
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4835
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4839
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4845
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4849
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4856
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4860
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4864
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4868
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4872
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4876
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4880
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4887
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4891
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4895
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4899
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4905
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4909
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4913
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4917
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4921
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4925
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4929
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4933
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4937
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4941
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4945
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4951
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4955
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4959
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4963
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4967
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4971
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4975
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4979
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4983
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4987
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4991
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4995
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4999
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5005
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5009
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5013
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5017
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5021
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5025
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5029
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5033
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5037
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5041
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5045
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5049
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5053
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5057
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5061
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5065
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5069
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5073
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5077
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5085
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5089
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5097
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5101
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5107
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5111
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5115
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5121
		{
			yyVAL.str = ""
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5125
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5131
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5135
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5142
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5146
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5150
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5154
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5160
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5164
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5168
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5172
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5176
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5180
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5184
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5190
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5194
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5198
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5205
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5211
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5215
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5225
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5229
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5233
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5247
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5255
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5263
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5267
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5275
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5279
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5294
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5298
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5313
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5317
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5321
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5325
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5329
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5333
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5337
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5341
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5345
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5349
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5353
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5357
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5361
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5365
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5369
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5373
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5377
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5409
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5413
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5417
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5421
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5425
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5429
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5433
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5437
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5441
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5445
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5449
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5457
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5465
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5469
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5473
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5477
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5490
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5494
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5499
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5503
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5509
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5513
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5519
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5523
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5529
		{
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5531
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5535
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5539
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5543
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5547
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5551
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5555
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5559
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5563
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5567
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5571
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5577
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5581
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5585
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5589
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5593
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5597
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5601
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5605
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5609
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5619
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5623
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5627
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5631
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5642
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5646
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5650
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5654
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5658
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5664
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5668
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5672
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5676
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5680
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5686
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5690
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5694
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5700
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5704
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5708
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5714
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5718
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5722
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5726
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5730
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5736
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5740
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5744
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5748
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5752
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5756
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5760
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5764
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5768
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5772
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5782
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5787
		{
			yyVAL.str = string("")
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5791
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5797
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5801
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5807
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5812
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5816
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5822
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5826
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5830
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5836
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5845
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5849
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5855
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5859
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5864
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5868
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5873
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5877
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5883
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5889
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5893
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5899
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5904
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5908
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5912
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5917
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5921
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5927
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5931
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5935
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5940
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5944
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5948
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5952
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5956
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5963
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5967
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5971
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5975
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5981
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5985
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5989
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5994
		{
			yyVAL.str = ""
		}
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5998
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6002
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6006
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6011
		{
			yyVAL.str = ""
		}
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6015
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6021
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6025
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6030
		{
			yyVAL.str = ""
		}
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6034
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6039
		{
			yyVAL.str = "cascaded"
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6043
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6047
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6056
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6062
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6068
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6074
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6083
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6087
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6092
		{
			yyVAL.str = ""
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6096
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6102
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6106
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6112
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6116
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6120
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6125
		{
			yyVAL.str = ""
		}
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6129
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6133
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6138
		{
			yyVAL.str = ""
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6142
		{
			yyVAL.str = " header"
		}
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6147
		{
			yyVAL.str = ""
		}
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6151
		{
			yyVAL.str = " manifest on"
		}
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6155
		{
			yyVAL.str = " manifest off"
		}
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6160
		{
			yyVAL.str = ""
		}
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6164
		{
			yyVAL.str = " overwrite on"
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6168
		{
			yyVAL.str = " overwrite off"
		}
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6174
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6179
		{
			yyVAL.str = ""
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6183
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6189
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6193
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6199
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6203
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6208
		{
			yyVAL.str = ""
		}
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6212
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6218
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6222
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6228
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6232
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6236
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6241
		{
			yyVAL.str = ""
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6245
		{
			yyVAL.str = " optionally"
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6258
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6262
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6266
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6270
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6274
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6280
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6284
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6288
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6292
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6297
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6301
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6307
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6311
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6317
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6321
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6327
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6332
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6342
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6346
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6352
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6358
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6362
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6368
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6372
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6376
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6380
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6384
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6392
		{
			yyVAL.str = "charset"
		}
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6402
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6406
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6410
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6419
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6421
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6424
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6426
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6429
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6431
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6434
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6436
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6439
		{
			yyVAL.empty = struct{}{}
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6441
		{
			yyVAL.empty = struct{}{}
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6443
		{
			yyVAL.empty = struct{}{}
		}
	case 1290:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6447
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6452
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6456
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6461
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6463
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6467
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6473
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6477
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6484
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6490
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6494
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6500
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6504
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6511
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7033
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7042
		{
			decNesting(yylex)
		}
	case 1805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7047
		{
			skipToEnd(yylex)
		}
	case 1806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7052
		{
			skipToEnd(yylex)
		}
	case 1807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7056
		{
			skipToEnd(yylex)
		}
	case 1808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7060
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
