// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const KILL = 57472
const EMPTY_FROM_CLAUSE = 57473
const LOWER_THAN_CHARSET = 57474
const CHARSET = 57475
const UNIQUE = 57476
const KEY = 57477
const EXPRESSION_PREC_SETTER = 57478
const OR = 57479
const XOR = 57480
const AND = 57481
const NOT = 57482
const BETWEEN = 57483
const CASE = 57484
const WHEN = 57485
const THEN = 57486
const ELSE = 57487
const END = 57488
const LE = 57489
const GE = 57490
const NE = 57491
const NULL_SAFE_EQUAL = 57492
const IS = 57493
const LIKE = 57494
const REGEXP = 57495
const RLIKE = 57496
const IN = 57497
const ASSIGNMENT_OPT = 57498
const SHIFT_LEFT = 57499
const SHIFT_RIGHT = 57500
const DIV = 57501
const MOD = 57502
const UNARY = 57503
const COLLATE = 57504
const BINARY = 57505
const UNDERSCORE_ARMSCII8 = 57506
const UNDERSCORE_ASCII = 57507
const UNDERSCORE_BIG5 = 57508
const UNDERSCORE_BINARY = 57509
const UNDERSCORE_CP1250 = 57510
const UNDERSCORE_CP1251 = 57511
const UNDERSCORE_CP1256 = 57512
const UNDERSCORE_CP1257 = 57513
const UNDERSCORE_CP850 = 57514
const UNDERSCORE_CP852 = 57515
const UNDERSCORE_CP866 = 57516
const UNDERSCORE_CP932 = 57517
const UNDERSCORE_DEC8 = 57518
const UNDERSCORE_EUCJPMS = 57519
const UNDERSCORE_EUCKR = 57520
const UNDERSCORE_GB18030 = 57521
const UNDERSCORE_GB2312 = 57522
const UNDERSCORE_GBK = 57523
const UNDERSCORE_GEOSTD8 = 57524
const UNDERSCORE_GREEK = 57525
const UNDERSCORE_HEBREW = 57526
const UNDERSCORE_HP8 = 57527
const UNDERSCORE_KEYBCS2 = 57528
const UNDERSCORE_KOI8R = 57529
const UNDERSCORE_KOI8U = 57530
const UNDERSCORE_LATIN1 = 57531
const UNDERSCORE_LATIN2 = 57532
const UNDERSCORE_LATIN5 = 57533
const UNDERSCORE_LATIN7 = 57534
const UNDERSCORE_MACCE = 57535
const UNDERSCORE_MACROMAN = 57536
const UNDERSCORE_SJIS = 57537
const UNDERSCORE_SWE7 = 57538
const UNDERSCORE_TIS620 = 57539
const UNDERSCORE_UCS2 = 57540
const UNDERSCORE_UJIS = 57541
const UNDERSCORE_UTF16 = 57542
const UNDERSCORE_UTF16LE = 57543
const UNDERSCORE_UTF32 = 57544
const UNDERSCORE_UTF8 = 57545
const UNDERSCORE_UTF8MB4 = 57546
const UNDERSCORE_UTF8MB3 = 57547
const INTERVAL = 57548
const WINDOW_EXPR = 57549
const JSON_EXTRACT_OP = 57550
const JSON_UNQUOTE_EXTRACT_OP = 57551
const CREATE = 57552
const ALTER = 57553
const DROP = 57554
const RENAME = 57555
const ANALYZE = 57556
const ADD = 57557
const FLUSH = 57558
const CHANGE = 57559
const MODIFY = 57560
const DEALLOCATE = 57561
const REVERT = 57562
const QUERIES = 57563
const SCHEMA = 57564
const TABLE = 57565
const INDEX = 57566
const VIEW = 57567
const TO = 57568
const IGNORE = 57569
const IF = 57570
const PRIMARY = 57571
const COLUMN = 57572
const SPATIAL = 57573
const FULLTEXT = 57574
const KEY_BLOCK_SIZE = 57575
const CHECK = 57576
const INDEXES = 57577
const ACTION = 57578
const CASCADE = 57579
const CONSTRAINT = 57580
const FOREIGN = 57581
const NO = 57582
const REFERENCES = 57583
const RESTRICT = 57584
const SHOW = 57585
const DESCRIBE = 57586
const EXPLAIN = 57587
const DATE = 57588
const ESCAPE = 57589
const REPAIR = 57590
const OPTIMIZE = 57591
const TRUNCATE = 57592
const COALESCE = 57593
const EXCHANGE = 57594
const REBUILD = 57595
const PARTITIONING = 57596
const REMOVE = 57597
const PREPARE = 57598
const EXECUTE = 57599
const MAXVALUE = 57600
const PARTITION = 57601
const REORGANIZE = 57602
const LESS = 57603
const THAN = 57604
const PROCEDURE = 57605
const TRIGGER = 57606
const VINDEX = 57607
const VINDEXES = 57608
const DIRECTORY = 57609
const NAME = 57610
const UPGRADE = 57611
const STATUS = 57612
const VARIABLES = 57613
const WARNINGS = 57614
const CASCADED = 57615
const DEFINER = 57616
const OPTION = 57617
const SQL = 57618
const UNDEFINED = 57619
const SEQUENCE = 57620
const MERGE = 57621
const TEMPORARY = 57622
const TEMPTABLE = 57623
const INVOKER = 57624
const SECURITY = 57625
const FIRST = 57626
const AFTER = 57627
const LAST = 57628
const VITESS_MIGRATION = 57629
const CANCEL = 57630
const RETRY = 57631
const LAUNCH = 57632
const COMPLETE = 57633
const CLEANUP = 57634
const THROTTLE = 57635
const UNTHROTTLE = 57636
const FORCE_CUTOVER = 57637
const EXPIRE = 57638
const RATIO = 57639
const VITESS_THROTTLER = 57640
const BEGIN = 57641
const START = 57642
const TRANSACTION = 57643
const COMMIT = 57644
const ROLLBACK = 57645
const SAVEPOINT = 57646
const RELEASE = 57647
const WORK = 57648
const CONSISTENT = 57649
const SNAPSHOT = 57650
const BIT = 57651
const TINYINT = 57652
const SMALLINT = 57653
const MEDIUMINT = 57654
const INT = 57655
const INTEGER = 57656
const BIGINT = 57657
const INTNUM = 57658
const REAL = 57659
const DOUBLE = 57660
const FLOAT_TYPE = 57661
const FLOAT4_TYPE = 57662
const FLOAT8_TYPE = 57663
const DECIMAL_TYPE = 57664
const NUMERIC = 57665
const TIME = 57666
const TIMESTAMP = 57667
const DATETIME = 57668
const YEAR = 57669
const CHAR = 57670
const VARCHAR = 57671
const BOOL = 57672
const CHARACTER = 57673
const VARBINARY = 57674
const NCHAR = 57675
const TEXT = 57676
const TINYTEXT = 57677
const MEDIUMTEXT = 57678
const LONGTEXT = 57679
const BLOB = 57680
const TINYBLOB = 57681
const MEDIUMBLOB = 57682
const LONGBLOB = 57683
const JSON = 57684
const JSON_SCHEMA_VALID = 57685
const JSON_SCHEMA_VALIDATION_REPORT = 57686
const ENUM = 57687
const GEOMETRY = 57688
const POINT = 57689
const LINESTRING = 57690
const POLYGON = 57691
const GEOMCOLLECTION = 57692
const GEOMETRYCOLLECTION = 57693
const MULTIPOINT = 57694
const MULTILINESTRING = 57695
const MULTIPOLYGON = 57696
const ASCII = 57697
const UNICODE = 57698
const NULLX = 57699
const AUTO_INCREMENT = 57700
const APPROXNUM = 57701
const SIGNED = 57702
const UNSIGNED = 57703
const ZEROFILL = 57704
const PURGE = 57705
const BEFORE = 57706
const CODE = 57707
const COLLATION = 57708
const COLUMNS = 57709
const DATABASES = 57710
const ENGINES = 57711
const EVENT = 57712
const EXTENDED = 57713
const FIELDS = 57714
const FULL = 57715
const FUNCTION = 57716
const GTID_EXECUTED = 57717
const KEYSPACES = 57718
const OPEN = 57719
const PLUGINS = 57720
const PRIVILEGES = 57721
const PROCESSLIST = 57722
const SCHEMAS = 57723
const TABLES = 57724
const TRIGGERS = 57725
const USER = 57726
const VGTID_EXECUTED = 57727
const VITESS_KEYSPACES = 57728
const VITESS_METADATA = 57729
const VITESS_MIGRATIONS = 57730
const VITESS_REPLICATION_STATUS = 57731
const VITESS_SHARDS = 57732
const VITESS_TABLETS = 57733
const VITESS_TARGET = 57734
const VSCHEMA = 57735
const VITESS_THROTTLED_APPS = 57736
const NAMES = 57737
const GLOBAL = 57738
const SESSION = 57739
const ISOLATION = 57740
const LEVEL = 57741
const READ = 57742
const WRITE = 57743
const ONLY = 57744
const REPEATABLE = 57745
const COMMITTED = 57746
const UNCOMMITTED = 57747
const SERIALIZABLE = 57748
const ADDDATE = 57749
const CURRENT_TIMESTAMP = 57750
const DATABASE = 57751
const CURRENT_DATE = 57752
const CURDATE = 57753
const DATE_ADD = 57754
const DATE_SUB = 57755
const NOW = 57756
const SUBDATE = 57757
const CURTIME = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const CURRENT_USER = 57762
const UTC_DATE = 57763
const UTC_TIME = 57764
const UTC_TIMESTAMP = 57765
const SYSDATE = 57766
const DAY = 57767
const DAY_HOUR = 57768
const DAY_MICROSECOND = 57769
const DAY_MINUTE = 57770
const DAY_SECOND = 57771
const HOUR = 57772
const HOUR_MICROSECOND = 57773
const HOUR_MINUTE = 57774
const HOUR_SECOND = 57775
const MICROSECOND = 57776
const MINUTE = 57777
const MINUTE_MICROSECOND = 57778
const MINUTE_SECOND = 57779
const MONTH = 57780
const QUARTER = 57781
const SECOND = 57782
const SECOND_MICROSECOND = 57783
const YEAR_MONTH = 57784
const WEEK = 57785
const SQL_TSI_DAY = 57786
const SQL_TSI_WEEK = 57787
const SQL_TSI_HOUR = 57788
const SQL_TSI_MINUTE = 57789
const SQL_TSI_MONTH = 57790
const SQL_TSI_QUARTER = 57791
const SQL_TSI_SECOND = 57792
const SQL_TSI_MICROSECOND = 57793
const SQL_TSI_YEAR = 57794
const REPLACE = 57795
const CONVERT = 57796
const CAST = 57797
const SUBSTR = 57798
const SUBSTRING = 57799
const SEPARATOR = 57800
const TIMESTAMPADD = 57801
const TIMESTAMPDIFF = 57802
const WEIGHT_STRING = 57803
const LTRIM = 57804
const RTRIM = 57805
const TRIM = 57806
const JSON_ARRAY = 57807
const JSON_OBJECT = 57808
const JSON_QUOTE = 57809
const JSON_DEPTH = 57810
const JSON_TYPE = 57811
const JSON_LENGTH = 57812
const JSON_VALID = 57813
const JSON_ARRAY_APPEND = 57814
const JSON_ARRAY_INSERT = 57815
const JSON_INSERT = 57816
const JSON_MERGE = 57817
const JSON_MERGE_PATCH = 57818
const JSON_MERGE_PRESERVE = 57819
const JSON_REMOVE = 57820
const JSON_REPLACE = 57821
const JSON_SET = 57822
const JSON_UNQUOTE = 57823
const COUNT = 57824
const AVG = 57825
const MAX = 57826
const MIN = 57827
const SUM = 57828
const GROUP_CONCAT = 57829
const BIT_AND = 57830
const BIT_OR = 57831
const BIT_XOR = 57832
const STD = 57833
const STDDEV = 57834
const STDDEV_POP = 57835
const STDDEV_SAMP = 57836
const VAR_POP = 57837
const VAR_SAMP = 57838
const VARIANCE = 57839
const ANY_VALUE = 57840
const REGEXP_INSTR = 57841
const REGEXP_LIKE = 57842
const REGEXP_REPLACE = 57843
const REGEXP_SUBSTR = 57844
const ExtractValue = 57845
const UpdateXML = 57846
const GET_LOCK = 57847
const RELEASE_LOCK = 57848
const RELEASE_ALL_LOCKS = 57849
const IS_FREE_LOCK = 57850
const IS_USED_LOCK = 57851
const LOCATE = 57852
const POSITION = 57853
const ST_GeometryCollectionFromText = 57854
const ST_GeometryFromText = 57855
const ST_LineStringFromText = 57856
const ST_MultiLineStringFromText = 57857
const ST_MultiPointFromText = 57858
const ST_MultiPolygonFromText = 57859
const ST_PointFromText = 57860
const ST_PolygonFromText = 57861
const ST_GeometryCollectionFromWKB = 57862
const ST_GeometryFromWKB = 57863
const ST_LineStringFromWKB = 57864
const ST_MultiLineStringFromWKB = 57865
const ST_MultiPointFromWKB = 57866
const ST_MultiPolygonFromWKB = 57867
const ST_PointFromWKB = 57868
const ST_PolygonFromWKB = 57869
const ST_AsBinary = 57870
const ST_AsText = 57871
const ST_Dimension = 57872
const ST_Envelope = 57873
const ST_IsSimple = 57874
const ST_IsEmpty = 57875
const ST_GeometryType = 57876
const ST_X = 57877
const ST_Y = 57878
const ST_Latitude = 57879
const ST_Longitude = 57880
const ST_EndPoint = 57881
const ST_IsClosed = 57882
const ST_Length = 57883
const ST_NumPoints = 57884
const ST_StartPoint = 57885
const ST_PointN = 57886
const ST_Area = 57887
const ST_Centroid = 57888
const ST_ExteriorRing = 57889
const ST_InteriorRingN = 57890
const ST_NumInteriorRings = 57891
const ST_NumGeometries = 57892
const ST_GeometryN = 57893
const ST_LongFromGeoHash = 57894
const ST_PointFromGeoHash = 57895
const ST_LatFromGeoHash = 57896
const ST_GeoHash = 57897
const ST_AsGeoJSON = 57898
const ST_GeomFromGeoJSON = 57899
const MATCH = 57900
const AGAINST = 57901
const BOOLEAN = 57902
const LANGUAGE = 57903
const WITH = 57904
const QUERY = 57905
const EXPANSION = 57906
const WITHOUT = 57907
const VALIDATION = 57908
const UNUSED = 57909
const ARRAY = 57910
const BYTE = 57911
const CUME_DIST = 57912
const DESCRIPTION = 57913
const DENSE_RANK = 57914
const EMPTY = 57915
const EXCEPT = 57916
const FIRST_VALUE = 57917
const GROUPING = 57918
const GROUPS = 57919
const JSON_TABLE = 57920
const LAG = 57921
const LAST_VALUE = 57922
const LATERAL = 57923
const LEAD = 57924
const NTH_VALUE = 57925
const NTILE = 57926
const OF = 57927
const OVER = 57928
const PERCENT_RANK = 57929
const RANK = 57930
const RECURSIVE = 57931
const ROW_NUMBER = 57932
const SYSTEM = 57933
const WINDOW = 57934
const ACTIVE = 57935
const ADMIN = 57936
const AUTOEXTEND_SIZE = 57937
const BUCKETS = 57938
const CLONE = 57939
const COLUMN_FORMAT = 57940
const COMPONENT = 57941
const DEFINITION = 57942
const ENFORCED = 57943
const ENGINE_ATTRIBUTE = 57944
const EXCLUDE = 57945
const FOLLOWING = 57946
const GET_MASTER_PUBLIC_KEY = 57947
const HISTOGRAM = 57948
const HISTORY = 57949
const INACTIVE = 57950
const INVISIBLE = 57951
const LOCKED = 57952
const MASTER_COMPRESSION_ALGORITHMS = 57953
const MASTER_PUBLIC_KEY_PATH = 57954
const MASTER_TLS_CIPHERSUITES = 57955
const MASTER_ZSTD_COMPRESSION_LEVEL = 57956
const NESTED = 57957
const NETWORK_NAMESPACE = 57958
const NOWAIT = 57959
const NULLS = 57960
const OJ = 57961
const OLD = 57962
const OPTIONAL = 57963
const ORDINALITY = 57964
const ORGANIZATION = 57965
const OTHERS = 57966
const PARTIAL = 57967
const PATH = 57968
const PERSIST = 57969
const PERSIST_ONLY = 57970
const PRECEDING = 57971
const PRIVILEGE_CHECKS_USER = 57972
const PROCESS = 57973
const RANDOM = 57974
const REFERENCE = 57975
const REQUIRE_ROW_FORMAT = 57976
const RESOURCE = 57977
const RESPECT = 57978
const RESTART = 57979
const RETAIN = 57980
const REUSE = 57981
const ROLE = 57982
const SECONDARY = 57983
const SECONDARY_ENGINE = 57984
const SECONDARY_ENGINE_ATTRIBUTE = 57985
const SECONDARY_LOAD = 57986
const SECONDARY_UNLOAD = 57987
const SIMPLE = 57988
const SKIP = 57989
const SRID = 57990
const THREAD_PRIORITY = 57991
const TIES = 57992
const UNBOUNDED = 57993
const VCPU = 57994
const VISIBLE = 57995
const RETURNING = 57996
const FORMAT_BYTES = 57997
const FORMAT_PICO_TIME = 57998
const PS_CURRENT_THREAD_ID = 57999
const PS_THREAD_ID = 58000
const GTID_SUBSET = 58001
const GTID_SUBTRACT = 58002
const WAIT_FOR_EXECUTED_GTID_SET = 58003
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58004
const FORMAT = 58005
const TREE = 58006
const VITESS = 58007
const TRADITIONAL = 58008
const VTEXPLAIN = 58009
const VEXPLAIN = 58010
const PLAN = 58011
const LOCAL = 58012
const LOW_PRIORITY = 58013
const NO_WRITE_TO_BINLOG = 58014
const LOGS = 58015
const ERROR = 58016
const GENERAL = 58017
const HOSTS = 58018
const OPTIMIZER_COSTS = 58019
const USER_RESOURCES = 58020
const SLOW = 58021
const CHANNEL = 58022
const RELAY = 58023
const EXPORT = 58024
const CURRENT = 58025
const ROW = 58026
const ROWS = 58027
const AVG_ROW_LENGTH = 58028
const CONNECTION = 58029
const CHECKSUM = 58030
const DELAY_KEY_WRITE = 58031
const ENCRYPTION = 58032
const ENGINE = 58033
const INSERT_METHOD = 58034
const MAX_ROWS = 58035
const MIN_ROWS = 58036
const PACK_KEYS = 58037
const PASSWORD = 58038
const FIXED = 58039
const DYNAMIC = 58040
const COMPRESSED = 58041
const REDUNDANT = 58042
const COMPACT = 58043
const ROW_FORMAT = 58044
const STATS_AUTO_RECALC = 58045
const STATS_PERSISTENT = 58046
const STATS_SAMPLE_PAGES = 58047
const STORAGE = 58048
const MEMORY = 58049
const DISK = 58050
const PARTITIONS = 58051
const LINEAR = 58052
const RANGE = 58053
const LIST = 58054
const SUBPARTITION = 58055
const SUBPARTITIONS = 58056
const HASH = 58057

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 51,
	14, 51,
	-2, 40,
	-1, 52,
	1, 159,
	733, 159,
	-2, 167,
	-1, 53,
	136, 167,
	178, 167,
	348, 167,
	-2, 523,
	-1, 61,
	36, 777,
	241, 777,
	252, 777,
	287, 791,
	288, 791,
	-2, 779,
	-1, 66,
	243, 815,
	-2, 813,
	-1, 122,
	240, 1595,
	-2, 133,
	-1, 124,
	1, 160,
	733, 160,
	-2, 167,
	-1, 135,
	137, 408,
	246, 408,
	-2, 512,
	-1, 154,
	136, 167,
	178, 167,
	348, 167,
	-2, 532,
	-1, 733,
	164, 41,
	-2, 45,
	-1, 939,
	87, 1612,
	-2, 1461,
	-1, 940,
	87, 1613,
	223, 1617,
	-2, 1462,
	-1, 941,
	223, 1616,
	-2, 42,
	-1, 1024,
	60, 889,
	-2, 904,
	-1, 1112,
	251, 43,
	256, 43,
	-2, 419,
	-1, 1197,
	1, 580,
	733, 580,
	-2, 167,
	-1, 1500,
	223, 1617,
	-2, 1462,
	-1, 1709,
	60, 890,
	-2, 909,
	-1, 1710,
	60, 891,
	-2, 910,
	-1, 1765,
	136, 167,
	178, 167,
	348, 167,
	-2, 458,
	-1, 1846,
	137, 408,
	246, 408,
	-2, 512,
	-1, 1855,
	251, 44,
	256, 44,
	-2, 420,
	-1, 2294,
	223, 1621,
	-2, 1615,
	-1, 2295,
	223, 1617,
	-2, 1613,
	-1, 2397,
	136, 167,
	178, 167,
	348, 167,
	-2, 459,
	-1, 2404,
	26, 188,
	-2, 190,
	-1, 2860,
	78, 98,
	88, 98,
	-2, 968,
	-1, 2929,
	708, 700,
	-2, 674,
	-1, 3137,
	50, 1563,
	-2, 1557,
	-1, 3952,
	708, 700,
	-2, 688,
	-1, 4039,
	90, 632,
	95, 632,
	105, 632,
	180, 632,
	181, 632,
	182, 632,
	183, 632,
	184, 632,
	185, 632,
	186, 632,
	187, 632,
	188, 632,
	189, 632,
	190, 632,
	191, 632,
	192, 632,
	193, 632,
	194, 632,
	195, 632,
	196, 632,
	197, 632,
	198, 632,
	199, 632,
	200, 632,
	201, 632,
	202, 632,
	203, 632,
	204, 632,
	205, 632,
	206, 632,
	207, 632,
	208, 632,
	209, 632,
	210, 632,
	211, 632,
	212, 632,
	213, 632,
	214, 632,
	215, 632,
	216, 632,
	217, 632,
	218, 632,
	219, 632,
	220, 632,
	221, 632,
	-2, 1984,
}

const yyPrivate = 57344

const yyLast = 56327

var yyAct = [...]int{
	955, 3614, 3615, 87, 3613, 4037, 4114, 3933, 943, 3289,
	4127, 4018, 4081, 1265, 950, 3565, 942, 2088, 4082, 4006,
	2394, 3917, 3189, 1263, 3247, 3196, 3418, 3252, 2100, 3842,
	2323, 3238, 3249, 3248, 3246, 3251, 1768, 3250, 3150, 3915,
	2756, 2031, 3552, 1975, 5, 2325, 3090, 3983, 3267, 3204,
	2468, 737, 3266, 3154, 3151, 3652, 3463, 3457, 2993, 2349,
	908, 2820, 2368, 42, 731, 3138, 3148, 764, 1724, 3449,
	1824, 732, 2365, 904, 903, 3269, 2894, 2431, 2975, 3296,
	2926, 3483, 2895, 2456, 2436, 2896, 1022, 163, 87, 2499,
	2382, 1042, 1074, 1019, 1144, 2845, 1871, 2370, 41, 43,
	2812, 2278, 1711, 2796, 2290, 2246, 2123, 1022, 2369, 2826,
	2245, 2967, 2084, 2039, 2477, 2455, 149, 2357, 2516, 1853,
	2438, 1102, 1084, 2887, 1107, 1757, 2862, 1737, 2372, 100,
	2833, 1690, 1512, 2127, 104, 2059, 105, 2343, 1439, 1424,
	1860, 1971, 1081, 747, 2453, 1952, 1021, 3153, 1025, 1078,
	1113, 1110, 1082, 734, 2427, 1108, 1109, 1756, 1059, 1742,
	1120, 1061, 2196, 2154, 2030, 1031, 2291, 1044, 2794, 3647,
	2428, 1041, 107, 3905, 2350, 742, 1496, 1472, 1253, 1983,
	1028, 167, 2135, 85, 1819, 99, 1026, 1027, 127, 905,
	1017, 125, 126, 1845, 132, 133, 1193, 1054, 93, 1029,
	741, 98, 1261, 1516, 106, 1239, 735, 4115, 2470, 2471,
	2472, 1521, 84, 3553, 3235, 3968, 2470, 2917, 1049, 1053,
	2514, 724, 2949, 2948, 3508, 3545, 1016, 4064, 2983, 1034,
	2984, 3963, 3964, 2046, 128, 1937, 669, 2320, 2321, 3618,
	2045, 3969, 1149, 2044, 1075, 2043, 1146, 134, 2042, 2041,
	1686, 2014, 1209, 666, 4058, 667, 2564, 2792, 3134, 1163,
	1164, 1165, 4085, 1168, 1169, 1170, 1171, 4137, 2503, 1174,
	1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1189, 1190, 1035, 1435, 1123, 1018,
	1210, 1069, 1068, 3257, 725, 1456, 1718, 1124, 1020, 2,
	3942, 1728, 2919, 1099, 2822, 1043, 128, 1150, 1153, 1154,
	95, 95, 2502, 1098, 3618, 1086, 1097, 1096, 3094, 1157,
	3257, 4080, 4120, 709, 4105, 727, 3617, 95, 3423, 1726,
	2062, 1729, 3964, 3254, 3422, 4068, 909, 2346, 959, 960,
	961, 4066, 1166, 2345, 111, 112, 113, 4119, 116, 3255,
	1015, 122, 703, 1091, 191, 2942, 3918, 661, 709, 1727,
	4067, 2757, 95, 2051, 3315, 3838, 4065, 3837, 3558, 722,
	723, 3559, 4095, 1148, 128, 3261, 3255, 1147, 3848, 1010,
	1011, 1012, 1013, 1067, 1071, 907, 1024, 4062, 4019, 2939,
	2573, 3577, 1426, 3566, 1100, 4007, 959, 960, 961, 2093,
	4015, 3617, 3261, 703, 2496, 3847, 4042, 1067, 1071, 907,
	3335, 1834, 86, 3185, 1056, 1057, 3186, 3187, 2956, 2957,
	4047, 2871, 2982, 1758, 2870, 1759, 1090, 2872, 703, 1092,
	2793, 1453, 86, 1454, 1455, 2570, 2836, 86, 4045, 2389,
	2390, 1095, 2388, 1202, 1203, 3576, 700, 4051, 4052, 2023,
	2024, 2966, 703, 1229, 1008, 2571, 3206, 3207, 1234, 1235,
	1258, 2837, 1007, 4046, 4023, 1217, 3934, 1230, 1979, 2501,
	1218, 1223, 1217, 2447, 2883, 1205, 3293, 1218, 2407, 2406,
	1440, 3665, 703, 86, 703, 1216, 88, 1215, 3028, 3258,
	95, 3291, 2829, 2830, 685, 703, 2441, 703, 3947, 1093,
	2562, 1436, 2022, 3323, 3321, 717, 2026, 683, 2322, 721,
	95, 1754, 3297, 2163, 4086, 95, 3258, 715, 2968, 1440,
	2927, 3889, 4023, 3890, 3284, 2353, 1167, 1958, 1095, 2478,
	1087, 1694, 3285, 4117, 2952, 4087, 2523, 1089, 1088, 2517,
	2353, 1927, 1953, 1250, 2540, 1192, 2541, 680, 2542, 1232,
	1233, 1255, 1238, 2970, 1425, 1198, 695, 3547, 3546, 2519,
	2543, 95, 1231, 1236, 704, 3205, 1224, 1173, 1473, 3294,
	1257, 690, 1172, 1237, 3822, 3543, 1256, 3208, 2565, 2566,
	2568, 2567, 693, 1133, 3292, 1928, 1093, 1929, 1450, 2481,
	3312, 2524, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482,
	1481, 1483, 1484, 1103, 1838, 1131, 1980, 1104, 1122, 3460,
	1060, 2155, 3622, 2366, 2521, 704, 2157, 1104, 1142, 1141,
	2162, 2158, 1697, 1140, 2159, 2160, 2161, 1450, 1094, 2156,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 1139,
	704, 1138, 1137, 3208, 1136, 2440, 1135, 1143, 1130, 1487,
	670, 4059, 672, 686, 3029, 706, 2520, 705, 676, 2920,
	674, 678, 687, 679, 704, 673, 4138, 684, 4092, 2522,
	675, 688, 689, 692, 696, 697, 698, 694, 691, 1115,
	682, 707, 2530, 2526, 2528, 2529, 2527, 2531, 2532, 2533,
	3542, 1079, 1079, 1079, 704, 1077, 704, 1446, 1116, 1972,
	1262, 1055, 1262, 1262, 1070, 1064, 1062, 704, 2454, 704,
	2971, 1121, 2507, 1832, 1152, 1094, 1125, 1115, 2351, 2352,
	1115, 1127, 2506, 1968, 1151, 1128, 1126, 3093, 1070, 1064,
	1062, 1427, 1134, 2351, 2352, 2987, 1446, 1160, 1755, 1438,
	3228, 2951, 1961, 1831, 1959, 1960, 1129, 1962, 1963, 1964,
	1022, 1497, 1502, 1503, 1132, 1506, 1508, 1509, 1510, 1511,
	1830, 1514, 1515, 1517, 1517, 2954, 1517, 1517, 1522, 1522,
	1522, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1494, 3941, 1251, 2918, 1647, 3616, 1649,
	1650, 1651, 1652, 1653, 1418, 1419, 3506, 3507, 3461, 1507,
	4021, 1522, 1522, 1522, 1522, 1522, 1522, 1939, 1938, 1940,
	1941, 1942, 1417, 1101, 956, 956, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1498, 956, 4020, 2500, 89, 4050, 2572, 2885, 3575, 1434,
	1490, 1491, 1492, 1493, 708, 4131, 2921, 1687, 3259, 3260,
	1504, 1213, 3406, 1219, 1220, 1221, 1222, 1518, 4021, 1519,
	1520, 3263, 3192, 3616, 2444, 701, 1214, 1201, 1859, 1063,
	1523, 1524, 94, 2941, 1487, 3259, 3260, 1259, 1260, 4049,
	702, 1445, 1442, 1443, 1444, 1449, 1451, 1448, 3263, 1447,
	4020, 1122, 94, 1063, 2937, 1717, 3313, 94, 1969, 1441,
	1693, 1828, 1208, 660, 2445, 1204, 1684, 3193, 4060, 1022,
	1196, 2443, 2571, 1022, 2498, 3930, 3497, 2940, 1122, 1022,
	1445, 1442, 1443, 1444, 1449, 1451, 1448, 3102, 1447, 3479,
	1246, 3195, 1248, 2965, 2974, 2867, 2964, 1227, 1441, 2797,
	2799, 1488, 1489, 94, 1685, 2446, 2832, 2769, 2120, 3190,
	2096, 1746, 1648, 1207, 3101, 2442, 124, 2827, 1159, 2395,
	2585, 1479, 1480, 1482, 1481, 1483, 1484, 3206, 3207, 1701,
	1245, 1247, 668, 1705, 3191, 1487, 1484, 1858, 2136, 1021,
	3184, 2596, 1467, 1038, 3955, 1254, 1122, 1240, 1984, 1145,
	1212, 3538, 2137, 1718, 1121, 1477, 1478, 1479, 1480, 1482,
	1481, 1483, 1484, 1703, 1957, 1704, 3473, 104, 3197, 105,
	2518, 1685, 1654, 1655, 1656, 1657, 1658, 1659, 2035, 1965,
	1760, 1121, 3014, 2064, 2128, 119, 1691, 1115, 1118, 1119,
	1122, 1079, 2128, 2910, 2605, 1112, 1116, 2065, 1485, 1486,
	2063, 1678, 1454, 1455, 3661, 107, 2112, 2101, 2102, 2103,
	2104, 2114, 2105, 2106, 2107, 2119, 2115, 2108, 2109, 2116,
	2117, 2118, 2110, 2111, 2113, 4096, 4129, 1095, 1191, 4130,
	1122, 4128, 2596, 1456, 1455, 3513, 3205, 1243, 2977, 1699,
	3512, 1244, 2485, 2976, 1835, 1836, 1837, 2994, 3208, 1121,
	1868, 1249, 1867, 1851, 1857, 1115, 1118, 1119, 120, 1079,
	2977, 1702, 1720, 1112, 1116, 2976, 2495, 1700, 2798, 2493,
	2497, 1977, 1922, 1844, 1133, 1018, 1242, 1873, 1688, 1874,
	1723, 1876, 1878, 2134, 1111, 1882, 1884, 1886, 1888, 1890,
	1863, 1020, 1195, 1121, 1211, 1241, 1985, 1904, 1125, 1115,
	1262, 2490, 1226, 1127, 1751, 1752, 2490, 1128, 1126, 1197,
	1862, 1912, 1913, 1228, 1954, 1131, 1955, 1918, 1919, 1956,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1458, 1473, 1861,
	1861, 2996, 1827, 1121, 4139, 1158, 4088, 1456, 3498, 1155,
	2494, 2053, 2055, 2056, 3985, 2492, 3923, 1854, 1033, 1841,
	1842, 1840, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482,
	1481, 1483, 1484, 1865, 1947, 3194, 2054, 1945, 3572, 1453,
	3573, 1454, 1455, 1706, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1482, 1481, 1483, 1484, 1908, 1456, 1718, 4133, 3986,
	1900, 3924, 2283, 1903, 2133, 1905, 1973, 2602, 1194, 1456,
	3830, 3829, 3006, 3005, 3004, 1934, 2283, 2998, 3820, 3002,
	2280, 2997, 1456, 2995, 1094, 2577, 2578, 2579, 3000, 2282,
	3588, 4140, 1456, 2358, 2359, 3587, 3520, 2999, 1946, 128,
	3519, 1944, 1473, 954, 3509, 1469, 1098, 1470, 3236, 1097,
	1096, 1833, 959, 960, 961, 3001, 3003, 3224, 1456, 2892,
	2891, 1471, 1485, 1486, 1468, 1990, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1482, 1481, 1483, 1484, 1262, 1262, 1933,
	2601, 1986, 1987, 1453, 2890, 1454, 1455, 2450, 3288, 2012,
	1948, 87, 3016, 1932, 87, 1991, 1473, 1931, 2986, 1930,
	1920, 709, 1998, 1999, 2000, 1914, 4101, 1718, 1911, 1910,
	1909, 1880, 2011, 1698, 1421, 190, 4099, 1718, 1754, 4089,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1481, 1483,
	1484, 3950, 1453, 110, 1454, 1455, 1731, 1456, 3949, 129,
	3927, 2120, 4029, 1718, 109, 1453, 108, 1454, 1455, 3503,
	709, 42, 172, 3926, 42, 103, 2874, 709, 1453, 3925,
	1454, 1455, 3825, 2091, 2091, 2089, 2089, 2092, 1453, 2642,
	1454, 1455, 2466, 2465, 1988, 2464, 2463, 2462, 2461, 1452,
	1718, 1992, 1732, 1994, 1995, 1996, 1997, 1456, 110, 3809,
	2001, 2057, 1456, 101, 1453, 2876, 1454, 1455, 3808, 109,
	103, 108, 2013, 2640, 102, 1456, 2818, 4116, 169, 2632,
	3660, 170, 101, 3658, 1718, 3198, 3584, 1456, 1683, 3202,
	1682, 4027, 1718, 102, 4076, 1718, 3201, 2592, 1681, 1684,
	1452, 1718, 1718, 2174, 189, 2818, 4014, 2818, 3993, 2112,
	2101, 2102, 2103, 2104, 2114, 2105, 2106, 2107, 2119, 2115,
	2108, 2109, 2116, 2117, 2118, 2110, 2111, 2113, 2036, 1718,
	3203, 2818, 3989, 3976, 1718, 3199, 3517, 1685, 3502, 1718,
	3200, 85, 2061, 1453, 85, 1454, 1455, 1718, 1718, 2019,
	2020, 3556, 3940, 3943, 2067, 1473, 2069, 2070, 2071, 2072,
	2073, 2074, 2076, 2078, 2079, 2080, 2081, 2082, 2083, 3833,
	1718, 4025, 1718, 2818, 3821, 3556, 1718, 2066, 3298, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1482, 1481, 1483, 1484,
	3295, 3227, 2294, 1453, 3226, 1454, 1455, 2901, 1453, 2888,
	1454, 1455, 2292, 1680, 2095, 2553, 2122, 2124, 2068, 1456,
	2552, 1453, 2512, 1454, 1455, 2818, 3554, 1498, 173, 1456,
	2490, 1718, 2293, 1453, 2511, 1454, 1455, 179, 3477, 1718,
	1473, 2348, 2724, 1718, 2129, 2281, 2328, 2173, 2188, 2138,
	2139, 2140, 2141, 1473, 2279, 2584, 1456, 3217, 3216, 3214,
	3215, 3856, 2644, 2152, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1482, 1481, 1483, 1484, 3212, 3213, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1482, 1481, 1483, 1484, 3212, 3211,
	2842, 1718, 2374, 2571, 2950, 2297, 2298, 1823, 2931, 1456,
	2294, 2924, 2925, 3902, 1718, 2818, 2817, 2598, 1718, 3855,
	2292, 103, 2863, 3900, 1718, 3813, 104, 2015, 105, 1475,
	1476, 1477, 1478, 1479, 1480, 1482, 1481, 1483, 1484, 2404,
	2363, 2094, 1718, 3812, 1456, 2863, 2814, 104, 1981, 105,
	3897, 1718, 3564, 2186, 1943, 2060, 1935, 1925, 1921, 1456,
	1917, 103, 2376, 2197, 2339, 1453, 2296, 1454, 1455, 2299,
	2300, 1916, 164, 1456, 1084, 1453, 1915, 1454, 1455, 1733,
	1718, 1823, 1822, 2594, 1252, 2864, 1456, 1766, 1765, 2413,
	2414, 2415, 2416, 2593, 2408, 2866, 2409, 2410, 2411, 2412,
	1034, 1456, 1453, 2398, 1454, 1455, 2327, 1084, 2864, 2399,
	2928, 3149, 2419, 2420, 2421, 2422, 2380, 2834, 2571, 2598,
	1456, 2315, 3472, 2491, 2333, 2338, 2334, 2834, 3879, 1718,
	3179, 2906, 109, 2270, 2271, 2272, 2273, 2274, 2341, 2403,
	2571, 2402, 3472, 3448, 1718, 1453, 2433, 1454, 1455, 1452,
	3474, 2479, 3981, 2361, 3954, 2841, 2439, 3441, 1718, 1456,
	2818, 2842, 2385, 2386, 3427, 2384, 3214, 3122, 1456, 2387,
	3438, 1718, 2401, 2400, 2598, 2724, 2629, 2628, 1069, 1068,
	1453, 2490, 1454, 1455, 2490, 3436, 1718, 2473, 2317, 2842,
	2356, 1722, 2449, 2476, 2197, 1453, 1456, 1454, 1455, 3472,
	1456, 1452, 2318, 2094, 3398, 1718, 2037, 1456, 2021, 1453,
	2842, 1454, 1455, 1967, 1753, 1456, 1023, 1106, 1105, 2434,
	95, 2430, 1453, 2452, 1454, 1455, 2448, 2484, 2460, 1456,
	2487, 4055, 2488, 2423, 2425, 2426, 1456, 1453, 3996, 1454,
	1455, 3844, 3239, 3396, 1718, 1456, 2504, 1735, 1725, 2483,
	2486, 1123, 3392, 1718, 2434, 2482, 1453, 1456, 1454, 1455,
	1124, 3810, 3672, 3537, 3534, 3515, 190, 3340, 3339, 2505,
	1861, 2508, 3521, 1825, 2432, 2509, 2510, 3286, 3241, 2897,
	3389, 1718, 1719, 1721, 3387, 1718, 3237, 2932, 2429, 1456,
	129, 3385, 1718, 1456, 95, 1453, 2424, 1454, 1455, 3383,
	1718, 2418, 2576, 172, 1453, 2417, 1454, 1455, 1456, 165,
	1950, 1856, 3290, 1734, 2515, 1852, 177, 1821, 121, 2898,
	3381, 1718, 3845, 3522, 3523, 3524, 1508, 2898, 1508, 3379,
	1718, 1196, 1453, 2447, 1454, 1455, 1453, 1456, 1454, 1455,
	2331, 3377, 1718, 1453, 2588, 1454, 1455, 3484, 3485, 1456,
	4111, 1453, 2017, 1454, 1455, 1456, 4109, 185, 4083, 169,
	2294, 2546, 170, 3962, 3884, 1453, 1456, 1454, 1455, 3487,
	2591, 3233, 1453, 3851, 1454, 1455, 1456, 3375, 1718, 3232,
	1456, 1453, 3231, 1454, 1455, 189, 3149, 1456, 2911, 3525,
	2293, 2547, 3492, 1453, 3490, 1454, 1455, 3489, 3168, 1456,
	166, 171, 168, 174, 175, 176, 178, 180, 181, 182,
	183, 2561, 1456, 3167, 2018, 665, 184, 186, 187, 188,
	1730, 3373, 1718, 3958, 1456, 1453, 2569, 1454, 1455, 1453,
	3846, 1454, 1455, 3371, 1718, 1456, 3526, 3527, 3528, 3369,
	1718, 2347, 2337, 3330, 1453, 1456, 1454, 1455, 3478, 2580,
	3367, 1718, 2847, 2850, 2851, 2852, 2848, 2061, 2849, 2853,
	3365, 1718, 1456, 3127, 3363, 1718, 3922, 3126, 2581, 1456,
	2583, 3361, 1718, 1453, 1456, 1454, 1455, 3139, 3141, 2586,
	3651, 2587, 1456, 3359, 1718, 1453, 3142, 1454, 1455, 726,
	3171, 1453, 3468, 1454, 1455, 3172, 3345, 1718, 3653, 173,
	1036, 1456, 1453, 3136, 1454, 1455, 3169, 1966, 179, 1718,
	2604, 3170, 1453, 1006, 1454, 1455, 1453, 3210, 1454, 1455,
	1718, 2881, 2582, 1453, 2902, 1454, 1455, 2555, 2556, 3328,
	1718, 1456, 2558, 3306, 2589, 1453, 3465, 1454, 1455, 1456,
	1162, 2559, 1892, 2768, 3464, 1456, 2789, 1718, 1453, 1037,
	1454, 1455, 1161, 2787, 1718, 2897, 2980, 1456, 2762, 1718,
	1453, 1039, 1454, 1455, 2638, 1420, 2739, 1718, 2136, 1040,
	1456, 1453, 2938, 1454, 1455, 2800, 3173, 1456, 2851, 2852,
	129, 1453, 2137, 1454, 1455, 2731, 1718, 3470, 1456, 1893,
	1894, 1895, 101, 1022, 2091, 101, 2089, 2803, 1453, 103,
	1454, 1455, 1456, 102, 103, 1453, 102, 1454, 1455, 3642,
	1453, 3641, 1454, 1455, 1456, 3443, 2839, 2840, 1453, 4034,
	1454, 1455, 2801, 2722, 1718, 2374, 1456, 4125, 1022, 2859,
	4090, 2358, 2359, 164, 3229, 2550, 2611, 1453, 3939, 1454,
	1455, 2720, 1718, 3840, 2804, 1456, 2806, 3209, 3125, 2855,
	2060, 2342, 110, 2626, 2707, 1718, 3124, 2838, 2819, 3640,
	1456, 2705, 1718, 109, 1456, 108, 2539, 1453, 3450, 1454,
	1455, 1456, 2703, 1718, 103, 1453, 42, 1454, 1455, 2538,
	1896, 1453, 2537, 1454, 1455, 2856, 3439, 2857, 2858, 1047,
	1048, 1456, 2815, 1453, 2536, 1454, 1455, 1691, 2701, 1718,
	2791, 2535, 2534, 1456, 2575, 108, 1453, 109, 1454, 1455,
	2699, 1718, 2828, 1453, 3910, 1454, 1455, 3909, 2811, 2884,
	2886, 1456, 3887, 1685, 1453, 3659, 1454, 1455, 3657, 2697,
	1718, 1897, 1898, 1899, 2831, 2877, 2816, 3458, 1453, 3656,
	1454, 1455, 2936, 2861, 2695, 1718, 3649, 1456, 2693, 1718,
	1453, 1456, 1454, 1455, 3535, 2691, 1718, 3469, 2865, 1456,
	3467, 3242, 1453, 2868, 1454, 1455, 2474, 3648, 2875, 1456,
	1839, 2439, 1046, 2131, 2878, 2689, 1718, 2834, 2132, 2947,
	4112, 1453, 110, 1454, 1455, 2900, 110, 2687, 1718, 1456,
	2903, 2904, 2889, 109, 1456, 108, 1453, 109, 1454, 1455,
	1453, 3626, 1454, 1455, 2814, 2685, 1718, 1453, 2899, 1454,
	1455, 4113, 4112, 3, 2192, 3030, 2630, 2329, 1747, 2907,
	1456, 2908, 1739, 2912, 2913, 2914, 4113, 1453, 3928, 1454,
	1455, 2683, 1718, 114, 115, 3404, 2944, 3501, 97, 1453,
	1844, 1454, 1455, 2681, 1718, 2034, 2032, 1, 10, 9,
	1456, 1014, 1423, 2679, 1718, 2933, 2934, 1453, 2033, 1454,
	1455, 8, 2923, 1456, 1422, 2990, 2991, 3505, 1456, 2943,
	165, 4044, 681, 2677, 1718, 2319, 1456, 177, 2675, 1718,
	1689, 4084, 4040, 1453, 4041, 1454, 1455, 1453, 1456, 1454,
	1455, 1936, 1926, 3567, 2276, 1453, 1456, 1454, 1455, 2969,
	1456, 2244, 3007, 3841, 3400, 1453, 2988, 1454, 1455, 1456,
	2972, 3245, 2480, 1456, 3533, 2437, 1114, 154, 185, 2396,
	2397, 4009, 118, 1072, 2309, 1453, 117, 1454, 1455, 1117,
	1453, 1225, 1454, 1455, 2673, 1718, 2475, 3557, 2882, 2405,
	1456, 1719, 2316, 1772, 1770, 1771, 2945, 2668, 1718, 1769,
	1774, 1773, 2664, 1718, 3314, 3011, 1453, 3008, 1454, 1455,
	3337, 166, 171, 168, 174, 175, 176, 178, 180, 181,
	182, 183, 2662, 1718, 2631, 3405, 2340, 184, 186, 187,
	188, 3938, 1456, 2025, 2655, 1718, 1453, 716, 1454, 1455,
	1456, 2854, 2992, 2653, 1718, 710, 1456, 192, 3817, 1453,
	3009, 1454, 1455, 1761, 1453, 3032, 1454, 1455, 3088, 1740,
	2978, 3419, 1453, 2979, 1454, 1455, 1156, 671, 3218, 2513,
	677, 1505, 2016, 3123, 1453, 3539, 1454, 1455, 2869, 1716,
	1712, 1456, 1453, 1066, 1454, 1455, 1453, 1058, 1454, 1455,
	2330, 2805, 2989, 3106, 1713, 1453, 1065, 1454, 1455, 1453,
	3095, 1454, 1455, 3818, 3157, 3462, 3135, 3137, 3097, 2821,
	3140, 3133, 3921, 3650, 3994, 2374, 3336, 3023, 2879, 2335,
	2336, 1715, 1736, 1714, 3333, 2281, 1453, 2281, 1454, 1455,
	3068, 2893, 2451, 3426, 2279, 2603, 2279, 1456, 3156, 2126,
	87, 1495, 2373, 2374, 2374, 2374, 2374, 2374, 3010, 3621,
	2052, 3078, 3079, 3080, 3081, 3082, 3106, 739, 738, 736,
	2807, 2835, 3096, 2374, 3098, 2785, 2374, 1459, 1453, 944,
	1454, 1455, 1456, 3105, 2795, 2376, 1453, 3130, 1454, 1455,
	3161, 1977, 1453, 1456, 1454, 1455, 1748, 2846, 2844, 2843,
	2548, 3178, 2381, 3486, 3482, 4036, 2375, 3121, 1456, 3117,
	1025, 2371, 1456, 2376, 2376, 2376, 2376, 2376, 2813, 895,
	894, 748, 3128, 740, 730, 893, 1456, 1453, 3131, 1454,
	1455, 2784, 892, 2376, 3272, 3180, 2376, 3273, 3181, 2953,
	3262, 3287, 2955, 3143, 3144, 2880, 3283, 3160, 1026, 1027,
	3270, 3163, 3164, 3129, 3166, 1456, 1437, 1708, 104, 3174,
	105, 3162, 1085, 3311, 3165, 1456, 2780, 3182, 3118, 3119,
	3120, 3945, 2574, 3334, 3188, 1707, 3952, 2779, 3253, 3551,
	3234, 2929, 1456, 1453, 2467, 1454, 1455, 1456, 3070, 3221,
	3072, 3220, 2778, 3219, 69, 1456, 2777, 46, 3916, 3982,
	887, 884, 3222, 3223, 3623, 3624, 3083, 3084, 3085, 3086,
	2776, 3625, 3091, 1716, 1712, 3146, 1456, 3271, 1453, 3092,
	1454, 1455, 3965, 3274, 3275, 2439, 3264, 3243, 1713, 1453,
	3966, 1454, 1455, 883, 3281, 1456, 3152, 3967, 2181, 2775,
	1456, 3152, 1433, 1430, 1453, 4057, 1454, 1455, 1453, 2766,
	1454, 1455, 2027, 1709, 1710, 1715, 96, 1714, 36, 3299,
	3302, 3301, 1453, 35, 1454, 1455, 2765, 34, 3309, 33,
	32, 2764, 1456, 26, 25, 3316, 3317, 24, 3318, 2763,
	3265, 3320, 23, 3322, 22, 3324, 3319, 29, 19, 21,
	20, 1453, 18, 1454, 1455, 3256, 4079, 4124, 123, 55,
	2760, 1453, 52, 1454, 1455, 50, 4077, 131, 130, 53,
	1508, 2590, 49, 1199, 1508, 2595, 1789, 47, 1453, 2755,
	1454, 1455, 31, 1453, 2748, 1454, 1455, 3244, 30, 17,
	16, 1453, 15, 1454, 1455, 14, 13, 12, 2599, 11,
	2600, 3421, 7, 6, 39, 2607, 38, 37, 3425, 2609,
	2610, 28, 1453, 27, 1454, 1455, 2747, 40, 2616, 2617,
	2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 4, 2627,
	2916, 1453, 2469, 1454, 1455, 0, 1453, 0, 1454, 1455,
	0, 0, 0, 0, 3155, 0, 0, 0, 0, 0,
	2374, 0, 2633, 2634, 2635, 2636, 2637, 3454, 2639, 3451,
	3452, 0, 2641, 3499, 3310, 3459, 2646, 2647, 1453, 2648,
	1454, 1455, 2651, 3466, 2652, 2654, 2656, 2657, 2658, 2659,
	2660, 2661, 2663, 2665, 2666, 2667, 2669, 3471, 2671, 2672,
	2674, 2676, 2678, 2680, 2682, 2684, 2686, 2688, 2690, 2692,
	2694, 2696, 2698, 2700, 2702, 2704, 2706, 2708, 2709, 2710,
	2376, 2712, 3494, 2714, 3491, 2716, 2717, 3488, 2719, 2721,
	2723, 3493, 1777, 3428, 2726, 3430, 3431, 3432, 2730, 3456,
	3271, 0, 2735, 2736, 2737, 2738, 3274, 3275, 3500, 3304,
	3305, 3516, 0, 3518, 0, 2749, 2750, 2751, 2752, 2753,
	2754, 0, 0, 2758, 2759, 3561, 3562, 0, 0, 0,
	0, 2761, 3481, 0, 0, 0, 2767, 3510, 3511, 0,
	0, 0, 2770, 2771, 2772, 2773, 2774, 0, 0, 1456,
	0, 3495, 3496, 2781, 2782, 0, 2783, 0, 0, 2786,
	2788, 2340, 0, 2790, 2847, 2850, 2851, 2852, 2848, 0,
	2849, 2853, 0, 2802, 3484, 3485, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1456,
	3544, 3563, 0, 0, 3548, 3549, 3550, 0, 0, 0,
	0, 0, 1456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3579, 0, 3540,
	3541, 0, 0, 0, 1456, 0, 0, 0, 0, 0,
	0, 0, 0, 2746, 1456, 0, 0, 0, 0, 1803,
	1806, 1807, 1808, 1809, 1810, 1811, 0, 1812, 1813, 1815,
	1816, 1814, 1817, 1818, 1791, 1792, 1793, 1794, 1775, 1776,
	1804, 1456, 1778, 0, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 2745, 0, 1788, 1795, 1796, 1797, 1798,
	1456, 1799, 1800, 1801, 1802, 1453, 2744, 1454, 1455, 0,
	3639, 0, 3643, 3644, 0, 1456, 0, 3629, 0, 3630,
	3631, 3632, 0, 1456, 0, 3619, 0, 0, 2743, 0,
	1456, 0, 0, 0, 1456, 3156, 0, 87, 2742, 3156,
	0, 0, 0, 0, 3645, 1453, 0, 1454, 1455, 0,
	0, 1456, 0, 0, 0, 0, 0, 0, 1453, 0,
	1454, 1455, 0, 0, 0, 2741, 3583, 2091, 1456, 2089,
	3674, 0, 0, 0, 3646, 0, 1456, 3654, 3666, 3655,
	1453, 0, 1454, 1455, 2740, 0, 0, 3662, 3664, 0,
	1453, 0, 1454, 1455, 0, 0, 0, 42, 0, 2734,
	0, 0, 0, 0, 3824, 0, 0, 2733, 0, 0,
	0, 0, 0, 3678, 2732, 0, 0, 1453, 2729, 1454,
	1455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2728, 1453, 0, 1454, 1455,
	0, 0, 0, 0, 0, 0, 3816, 3815, 0, 0,
	3843, 1453, 2727, 1454, 1455, 0, 3831, 0, 3814, 1453,
	2725, 1454, 1455, 0, 3835, 3836, 1453, 0, 1454, 1455,
	1453, 0, 1454, 1455, 0, 3881, 3882, 3018, 3019, 3020,
	3021, 3022, 0, 0, 3675, 3676, 3668, 1453, 0, 1454,
	1455, 0, 0, 2091, 0, 2089, 3885, 3027, 0, 0,
	3826, 3827, 3828, 0, 1453, 0, 1454, 1455, 0, 0,
	1805, 3610, 1453, 0, 1454, 1455, 0, 0, 0, 0,
	0, 0, 3152, 0, 0, 0, 3156, 0, 0, 0,
	3888, 0, 3670, 0, 3891, 3819, 0, 0, 0, 0,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1643, 1644, 1645, 1646, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 728,
	3932, 3155, 3886, 3929, 3913, 3155, 3914, 3911, 3912, 1456,
	0, 0, 0, 3946, 1456, 0, 0, 0, 0, 0,
	1456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 3931, 0, 0, 3158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1456, 0, 0,
	0, 0, 0, 3176, 0, 0, 3935, 0, 1456, 0,
	0, 0, 3948, 0, 0, 0, 3951, 0, 0, 0,
	3823, 0, 3953, 0, 0, 0, 0, 1456, 0, 0,
	0, 1456, 0, 0, 0, 0, 0, 0, 0, 0,
	3920, 42, 0, 2718, 0, 0, 0, 0, 2715, 0,
	0, 0, 0, 0, 2713, 0, 0, 0, 1045, 0,
	0, 1051, 1051, 0, 0, 0, 0, 0, 0, 3971,
	0, 0, 3972, 0, 0, 3991, 0, 0, 0, 0,
	87, 2711, 0, 0, 0, 0, 0, 0, 3937, 0,
	0, 0, 2670, 0, 3980, 1453, 0, 1454, 1455, 0,
	1453, 0, 1454, 1455, 0, 0, 1453, 3987, 1454, 1455,
	0, 2650, 0, 0, 3997, 2649, 4022, 4000, 3843, 4011,
	4005, 3995, 3956, 0, 4008, 4002, 4001, 3999, 4004, 0,
	4003, 3308, 0, 1453, 0, 1454, 1455, 0, 0, 0,
	42, 0, 3155, 4032, 1453, 0, 1454, 1455, 0, 0,
	0, 0, 0, 3325, 3326, 4053, 3327, 4043, 3329, 3331,
	4048, 4035, 0, 1453, 4061, 1454, 1455, 1453, 4022, 1454,
	1455, 4063, 3338, 0, 0, 4074, 0, 3342, 3343, 3344,
	3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355,
	3356, 3357, 3358, 3360, 3362, 3364, 3366, 3368, 3370, 3372,
	3374, 3376, 3378, 3380, 3382, 3384, 3386, 3388, 3390, 3391,
	3393, 3394, 3395, 3397, 1977, 4078, 3399, 4094, 3401, 3402,
	3403, 4073, 4104, 3407, 3408, 3409, 3410, 3411, 3412, 3413,
	3414, 3415, 3416, 3417, 2091, 4110, 2089, 4107, 4097, 4106,
	4108, 4103, 3424, 1456, 4093, 4022, 3429, 3992, 4118, 0,
	3433, 3434, 0, 3435, 3437, 4126, 3440, 3442, 3152, 3444,
	3445, 3446, 3447, 4134, 4132, 1456, 0, 3453, 0, 1456,
	3960, 0, 190, 0, 0, 1456, 0, 0, 3970, 0,
	0, 0, 0, 4143, 4144, 3882, 4142, 0, 0, 0,
	0, 0, 2091, 0, 2089, 4141, 129, 0, 151, 3944,
	0, 0, 3475, 3476, 0, 0, 3480, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 4069, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2645, 0, 0,
	0, 0, 0, 4091, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 150, 0, 0, 2643,
	0, 0, 0, 2608, 0, 0, 0, 0, 0, 2597,
	0, 0, 0, 0, 0, 169, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1453,
	0, 1454, 1455, 0, 0, 0, 0, 138, 139, 161,
	160, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1453, 0, 1454, 1455, 1453, 0, 1454, 1455, 0,
	0, 1453, 3555, 1454, 1455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2922, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 0, 151, 0, 3574, 0, 0,
	3578, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3589, 0, 0,
	0, 0, 155, 136, 158, 143, 135, 162, 156, 157,
	0, 0, 0, 150, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 144, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 170, 0, 0, 0, 147,
	145, 140, 141, 142, 146, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 1847, 1848, 161, 160, 189, 0,
	148, 3612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3620, 0, 0, 0, 0, 0,
	0, 0, 3627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	44, 45, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 48, 76, 77, 0, 74, 78, 164,
	0, 0, 0, 0, 0, 0, 75, 0, 0, 155,
	1849, 158, 0, 1846, 0, 156, 157, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 62, 0, 0, 0, 1457,
	0, 0, 0, 0, 0, 0, 0, 95, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3832, 0, 0,
	0, 0, 0, 0, 0, 0, 3839, 0, 0, 1513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3849, 3850, 0, 3852,
	0, 3853, 3854, 83, 0, 159, 3857, 3858, 3859, 3860,
	3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3869, 3870,
	3871, 3872, 3873, 3874, 3875, 3876, 3877, 3878, 0, 3880,
	3883, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3892, 3893, 3894, 3895, 3896,
	3898, 3899, 3901, 3903, 3904, 3906, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3936, 0, 0, 0, 51, 54, 57,
	56, 59, 0, 73, 0, 957, 82, 79, 0, 0,
	958, 0, 0, 152, 0, 0, 153, 0, 0, 0,
	2090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	61, 91, 90, 0, 0, 71, 72, 58, 0, 0,
	0, 0, 0, 80, 81, 0, 165, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 63, 64, 0, 65,
	66, 67, 68, 0, 185, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 166, 171, 168,
	174, 175, 176, 178, 180, 181, 182, 183, 0, 0,
	60, 0, 0, 184, 186, 187, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 0, 0, 0,
	152, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3961, 0, 0,
	0, 0, 0, 165, 1826, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3977, 0, 0, 0, 0, 0, 3978, 3979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 0, 0, 0, 0, 0, 0, 0, 0, 3990,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 940, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4016, 4017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4024,
	4026, 4028, 0, 0, 166, 171, 168, 174, 175, 176,
	178, 180, 181, 182, 183, 0, 0, 0, 0, 0,
	184, 186, 187, 188, 4056, 0, 0, 0, 0, 195,
	0, 0, 195, 0, 0, 0, 714, 0, 0, 0,
	0, 720, 1982, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 4075, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 957, 0, 2283, 0,
	0, 958, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2090, 0, 720, 195, 720, 4098, 4100, 4102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4135, 4136, 0,
	0, 1692, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 70, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 0, 0,
	663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1009, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1080, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2047, 2048, 2049, 2050, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2097, 2098, 0, 0, 0, 0, 2121, 1051,
	1051, 2125, 0, 0, 0, 2130, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
	0, 2153, 0, 0, 0, 2175, 2176, 2177, 2178, 2179,
	2180, 2182, 0, 2187, 0, 2189, 2190, 2191, 0, 2193,
	2194, 2195, 0, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2247,
	2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 0, 0, 0, 0, 0, 2275, 0, 2277,
	0, 2284, 2285, 2286, 2287, 2288, 2289, 1051, 0, 1051,
	1051, 1051, 1051, 1051, 0, 0, 0, 0, 0, 0,
	2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 0, 2310,
	2311, 2312, 2313, 2314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1789, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 0, 0, 0, 0, 1051, 0,
	0, 0, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 0, 151, 0, 0,
	0, 0, 0, 0, 2354, 2355, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2393, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 195, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 1848, 161, 160,
	189, 2435, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 0, 0, 720, 0, 720, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 720, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 1849, 158, 1790, 1846, 0, 156, 157, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1200, 0, 1206, 0, 0, 1803, 1806, 1807,
	1808, 1809, 1810, 1811, 0, 1812, 1813, 1815, 1816, 1814,
	1817, 1818, 1791, 1792, 1793, 1794, 1775, 1776, 1804, 0,
	1778, 0, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 0, 0, 1788, 1795, 1796, 1797, 1798, 0, 1799,
	1800, 1801, 1802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1429, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2606, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2612, 2613,
	2614, 2615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 720, 720, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 1513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 720, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1805, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1500, 0, 0,
	0, 0, 152, 720, 720, 153, 720, 0, 720, 720,
	0, 720, 720, 720, 720, 720, 720, 0, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 1500, 720, 1500,
	195, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 720, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 720,
	0, 195, 195, 185, 0, 0, 1738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 195, 1750, 0, 0, 0,
	0, 0, 0, 0, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 720, 0, 1767, 166, 171, 168, 174,
	175, 176, 178, 180, 181, 182, 183, 0, 0, 0,
	0, 0, 184, 186, 187, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1906, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1951, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1978, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 0, 0, 0,
	0, 0, 0, 1993, 0, 0, 0, 0, 0, 0,
	720, 720, 0, 0, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 0, 0, 720, 0, 0, 2985, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1051, 0,
	0, 3012, 3013, 0, 0, 3015, 0, 0, 3017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3024, 3025,
	3026, 720, 0, 0, 0, 0, 0, 0, 0, 0,
	3031, 1500, 0, 3033, 3034, 3035, 0, 0, 0, 3036,
	3037, 0, 0, 3038, 0, 3039, 0, 0, 1500, 0,
	0, 0, 3040, 0, 3041, 0, 0, 0, 3042, 0,
	3043, 0, 0, 3044, 0, 3045, 0, 3046, 0, 3047,
	0, 3048, 0, 3049, 0, 3050, 0, 3051, 0, 3052,
	0, 3053, 0, 3054, 0, 3055, 0, 3056, 0, 3057,
	0, 3058, 0, 3059, 0, 3060, 0, 3061, 0, 0,
	0, 3062, 0, 3063, 0, 3064, 0, 0, 3065, 0,
	3066, 0, 3067, 0, 2247, 3069, 0, 0, 3071, 0,
	0, 3073, 3074, 3075, 3076, 0, 0, 0, 0, 3077,
	2247, 2247, 2247, 2247, 2247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3087, 0, 0, 0, 0,
	2040, 0, 0, 3100, 0, 0, 3104, 0, 1051, 0,
	0, 0, 0, 0, 0, 3107, 3108, 3109, 3110, 3111,
	3112, 0, 0, 0, 3113, 3114, 0, 3115, 0, 3116,
	0, 0, 2295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3147, 0, 195, 0, 0, 0,
	0, 720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3177,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 720, 0, 0,
	2295, 195, 0, 195, 0, 195, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 0, 0, 0, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 0, 939, 0,
	0, 0, 0, 0, 0, 0, 3332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 720, 0, 0,
	0, 0, 720, 0, 0, 0, 720, 720, 0, 0,
	0, 2360, 0, 0, 0, 0, 0, 0, 0, 2364,
	699, 2367, 0, 0, 2040, 0, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 195, 0, 0, 195, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 719, 0,
	719, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3536, 1500, 0,
	2295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3560, 0, 2040, 0, 0, 0, 0, 0, 0, 2525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2544,
	2545, 0, 0, 2549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2554, 0, 0, 0, 0,
	0, 0, 2557, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3580, 0,
	3581, 0, 0, 3582, 0, 0, 3585, 3586, 2560, 0,
	0, 0, 0, 0, 0, 3590, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3591,
	0, 3592, 0, 3593, 0, 3594, 0, 3595, 0, 3596,
	0, 3597, 0, 3598, 0, 3599, 0, 3600, 0, 3601,
	0, 3602, 0, 3603, 0, 3604, 0, 3605, 0, 3606,
	0, 0, 3607, 0, 0, 0, 3608, 0, 3609, 0,
	0, 0, 0, 0, 3611, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3628, 0, 0,
	0, 0, 0, 0, 0, 0, 3633, 0, 3634, 3635,
	0, 3636, 0, 3637, 0, 0, 0, 0, 3638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 3663, 0, 0, 0, 0, 0, 0,
	0, 720, 0, 0, 3671, 0, 0, 3673, 0, 0,
	0, 0, 0, 0, 720, 0, 0, 0, 0, 3677,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3811, 0, 0, 195, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 897, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 0,
	0, 0, 0, 0, 0, 720, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 0, 0, 193, 0, 0,
	664, 0, 0, 0, 0, 0, 0, 0, 3919, 0,
	1500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 195, 195, 195, 195, 195, 195, 0,
	0, 0, 0, 0, 0, 0, 1032, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 195, 0, 1052, 1052, 0, 0, 0, 0, 0,
	0, 2860, 664, 0, 0, 0, 0, 0, 719, 1416,
	719, 719, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	719, 0, 0, 0, 0, 0, 0, 0, 720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2909, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2958, 2959, 2960, 2961, 2962, 2963, 0, 0, 0,
	0, 3959, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2040, 2973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2981, 0, 0, 0, 3973, 0, 0,
	3974, 720, 3975, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 1499,
	0, 0, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 0, 0, 0,
	1500, 0, 0, 720, 720, 1500, 195, 195, 195, 195,
	195, 0, 0, 0, 0, 0, 4054, 0, 195, 0,
	0, 0, 0, 0, 195, 0, 195, 0, 0, 195,
	195, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	719, 719, 0, 0, 0, 4070, 0, 4071, 0, 4072,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	719, 0, 0, 0, 0, 0, 0, 0, 720, 0,
	0, 1500, 0, 0, 0, 719, 720, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 1829, 0, 0, 4121,
	0, 4122, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 195, 719,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 1499, 1866, 0, 0, 1869, 1870, 719, 719,
	0, 719, 0, 719, 719, 0, 719, 719, 719, 719,
	719, 719, 0, 0, 0, 0, 0, 0, 0, 1499,
	1901, 1902, 1499, 719, 1499, 0, 1907, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 719, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 0, 0, 719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 3230, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 0, 664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 719, 3268,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 3282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 896, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3300, 0, 0, 3303, 0, 0, 0,
	0, 0, 0, 0, 664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 718, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 195, 195, 195, 0, 0,
	0, 0, 0, 0, 0, 720, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1076, 0, 1083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 719, 719, 0, 0, 0,
	0, 0, 0, 0, 720, 720, 720, 720, 719, 0,
	0, 0, 0, 0, 0, 3455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1499, 0, 0, 0,
	0, 0, 0, 0, 0, 2099, 0, 0, 0, 0,
	0, 0, 0, 1499, 0, 0, 0, 0, 0, 0,
	3514, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3529, 0, 0, 3530, 3531, 3532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 664,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1032, 0, 0, 0, 1500, 0, 0, 0,
	0, 720, 0, 720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 664, 0, 719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 720, 0, 0,
	0, 0, 0, 0, 0, 1501, 719, 0, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1501, 0, 719, 1501, 0, 1501, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 719, 0, 0, 719, 0, 0, 1923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 664, 0, 719, 0, 0, 0, 0,
	0, 0, 0, 720, 0, 0, 0, 720, 720, 1976,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 0, 0, 0,
	0, 0, 0, 664, 0, 0, 720, 0, 0, 0,
	0, 0, 2002, 2003, 664, 664, 664, 664, 664, 664,
	664, 0, 719, 0, 0, 0, 0, 0, 0, 2457,
	2458, 2459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	0, 0, 0, 0, 0, 719, 1864, 0, 0, 1864,
	0, 1864, 0, 0, 0, 0, 0, 2489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 719, 0, 0, 0, 0, 719, 0, 0,
	0, 719, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1264, 0, 1264, 1264, 0, 720, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1428, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1500, 0, 720, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1052, 1052, 0, 0, 0, 1501, 0, 720, 2295,
	0, 0, 0, 1499, 0, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 720,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 0,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 1052,
	1976, 1052, 1052, 1052, 1052, 1052, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1923, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1052, 0, 0, 0, 0, 1695, 1696, 0, 0, 0,
	0, 0, 0, 0, 1032, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 664, 0, 0, 0, 0, 0, 0, 1976, 664,
	0, 664, 0, 664, 2383, 1744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 719, 0, 0, 0,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2873, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 1872, 0, 1872, 0, 1872, 1872,
	0, 1881, 1872, 1872, 1872, 1872, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 0, 0, 0, 0, 0, 1974,
	719, 0, 0, 0, 1864, 1864, 0, 0, 0, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1499, 2946, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 1264, 0, 0, 0, 0, 0, 664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 664,
	664, 0, 0, 664, 0, 2551, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 664, 0, 0, 0, 0,
	0, 0, 664, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 0,
	0, 0, 0, 719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 957, 0, 0, 0, 945, 958,
	959, 960, 961, 946, 0, 0, 947, 948, 0, 949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 719, 0, 954, 962, 963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1501, 0, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1264, 1264, 3276, 3277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2028, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 719, 0, 0, 0,
	0, 2085, 0, 0, 0, 0, 0, 0, 719, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 719, 0, 0, 0, 1499, 0, 0, 719, 719,
	1499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3279, 3280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, 0, 0, 0, 1923, 0,
	0, 3225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1264, 719, 0, 0, 1499, 0, 0, 0,
	0, 719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 0, 0, 910,
	0, 664, 0, 0, 0, 914, 0, 0, 0, 911,
	912, 0, 0, 0, 913, 915, 0, 0, 0, 0,
	0, 2332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1744, 0, 0,
	1264, 0, 0, 0, 0, 664, 0, 0, 0, 0,
	0, 0, 2915, 0, 0, 0, 0, 0, 0, 0,
	1076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 719, 0, 0,
	0, 664, 664, 664, 664, 664, 664, 1083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 664,
	0, 0, 0, 0, 1076, 0, 0, 0, 0, 0,
	1083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1052, 0, 0, 0, 0, 0, 0, 1076, 0, 0,
	0, 0, 2085, 0, 0, 0, 2085, 2085, 0, 0,
	0, 0, 0, 0, 0, 0, 3504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	719, 719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	719, 719, 719, 0, 0, 0, 0, 0, 0, 2563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1052, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 1501, 664, 664, 664, 664, 664, 0,
	0, 0, 0, 0, 0, 0, 3175, 0, 0, 0,
	0, 0, 1923, 0, 664, 0, 0, 664, 3183, 1976,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1499, 0, 0, 0, 0, 719, 0, 719, 0,
	0, 0, 0, 664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 719, 0, 0, 0,
	0, 0, 0, 664, 0, 0, 664, 0, 0, 0,
	0, 0, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 719, 0,
	0, 0, 719, 719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2905, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2344, 0,
	0, 664, 0, 0, 0, 2930, 0, 0, 0, 0,
	0, 0, 0, 0, 2935, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 664, 664, 664, 0, 0, 0, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3699, 3701,
	3700, 3764, 3765, 3766, 3767, 3768, 3769, 3770, 789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2085, 719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1499, 0, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1923, 0, 0, 0, 0,
	0, 3089, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1264, 1501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 1872, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3132, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1264, 0, 0, 0,
	0, 0, 0, 3159, 1872, 0, 0, 0, 0, 0,
	0, 0, 1923, 0, 0, 3705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3713, 3714, 0, 0, 3789, 3788, 3787, 0, 0, 3785,
	3786, 3784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1076, 0,
	0, 0, 0, 0, 3790, 910, 2344, 765, 766, 3791,
	3792, 914, 3793, 768, 769, 911, 912, 0, 763, 767,
	913, 915, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3696, 3697, 3698, 3702,
	3703, 3704, 3715, 3762, 3763, 3771, 3773, 866, 3772, 3774,
	3775, 3776, 3779, 3780, 3781, 3782, 3777, 3778, 3783, 3679,
	3683, 3680, 3681, 3682, 3694, 3684, 3685, 3686, 3687, 3688,
	3689, 3690, 3691, 3692, 3693, 3695, 3794, 3795, 3796, 3797,
	3798, 3799, 3708, 3712, 3711, 3709, 3710, 3706, 3707, 3734,
	3733, 3735, 3736, 3737, 3738, 3739, 3740, 3742, 3741, 3743,
	3744, 3745, 3746, 3747, 3748, 3716, 3717, 3720, 3721, 3719,
	3718, 3722, 3731, 3732, 3723, 3724, 3725, 3726, 3727, 3728,
	3730, 3729, 3749, 3750, 3751, 3752, 3753, 3755, 3754, 3758,
	3759, 3757, 3756, 3761, 3760, 0, 0, 0, 0, 0,
	0, 0, 3420, 0, 0, 0, 0, 916, 0, 917,
	0, 0, 921, 0, 0, 0, 923, 922, 0, 924,
	886, 885, 0, 0, 918, 919, 0, 920, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 664, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2344, 2344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4010, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1923, 0, 3568, 3569, 3570, 3571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3667, 0, 3669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3907, 0, 0, 0, 3907, 3907, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1264, 1264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 3420, 0,
	4038, 1399, 1385, 520, 0, 1327, 1402, 1296, 1315, 1412,
	1318, 1321, 1364, 1274, 1342, 411, 1312, 1267, 1300, 1269,
	1307, 1270, 1298, 1329, 269, 1295, 1387, 1346, 1401, 362,
	266, 1276, 1301, 425, 1317, 203, 1366, 481, 251, 373,
	370, 575, 281, 272, 268, 249, 315, 381, 423, 510,
	417, 1408, 366, 1352, 0, 491, 396, 0, 0, 0,
	1331, 1391, 1340, 1378, 1326, 1365, 1284, 1351, 1403, 1313,
	1361, 1404, 321, 247, 323, 202, 408, 492, 285, 0,
	0, 0, 0, 4012, 941, 0, 0, 0, 0, 4013,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 1309, 1358, 1398, 1310, 1360, 264, 319, 271, 263,
	572, 1409, 1390, 1273, 1339, 1397, 1334, 0, 0, 228,
	1400, 1333, 0, 1363, 0, 1415, 1268, 1354, 0, 1271,
	1275, 1411, 1395, 1304, 274, 0, 0, 0, 0, 0,
	0, 0, 1330, 1341, 1375, 1379, 1324, 0, 0, 0,
	0, 0, 0, 0, 0, 1302, 0, 1350, 0, 0,
	0, 1280, 1272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	1283, 0, 1303, 1376, 0, 1266, 296, 1277, 397, 256,
	0, 448, 1383, 1394, 1325, 616, 1396, 1323, 1322, 1370,
	1281, 1389, 1316, 361, 1279, 328, 197, 224, 0, 1314,
	407, 456, 468, 1388, 1299, 1308, 252, 1306, 466, 421,
	594, 232, 283, 453, 427, 464, 435, 286, 1349, 1368,
	465, 368, 577, 445, 591, 617, 618, 262, 401, 603,
	514, 611, 635, 225, 259, 415, 499, 597, 488, 393,
	573, 574, 327, 487, 294, 201, 365, 623, 223, 474,
	367, 241, 230, 579, 600, 0, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 1278, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 1294, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 1384, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	1373, 1414, 420, 467, 239, 596, 490, 199, 1288, 1293,
	1286, 0, 253, 254, 1355, 567, 1289, 1287, 1344, 1345,
	1290, 1405, 1406, 1407, 1392, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 1377, 1282, 0, 1291, 1292, 1386, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 1348, 196,
	220, 364, 1410, 449, 287, 637, 606, 601, 205, 222,
	1285, 261, 1297, 1305, 0, 1311, 1319, 1320, 1332, 1335,
	1336, 1337, 1338, 1356, 1357, 1359, 1367, 1369, 1372, 1374,
	1381, 1393, 1413, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 1347, 1353, 377, 280, 303, 318, 1362, 605, 496,
	226, 461, 289, 250, 1380, 1382, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	1343, 1371, 372, 568, 569, 314, 392, 0, 0, 0,
	1399, 1385, 520, 0, 1327, 1402, 1296, 1315, 1412, 1318,
	1321, 1364, 1274, 1342, 411, 1312, 1267, 1300, 1269, 1307,
	1270, 1298, 1329, 269, 1295, 1387, 1346, 1401, 362, 266,
	1276, 1301, 425, 1317, 203, 1366, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	1408, 366, 1352, 0, 491, 396, 0, 0, 0, 1331,
	1391, 1340, 1378, 1326, 1365, 1284, 1351, 1403, 1313, 1361,
	1404, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	1309, 1358, 1398, 1310, 1360, 264, 319, 271, 263, 572,
	1409, 1390, 1273, 1339, 1397, 1334, 0, 0, 228, 1400,
	1333, 0, 1363, 0, 1415, 1268, 1354, 0, 1271, 1275,
	1411, 1395, 1304, 274, 0, 0, 0, 0, 0, 0,
	0, 1330, 1341, 1375, 1379, 1324, 0, 0, 0, 0,
	0, 0, 3184, 0, 1302, 0, 1350, 0, 0, 0,
	1280, 1272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1328, 0, 0, 0, 0, 1283,
	0, 1303, 1376, 0, 1266, 296, 1277, 397, 256, 0,
	448, 1383, 1394, 1325, 616, 1396, 1323, 1322, 1370, 1281,
	1389, 1316, 361, 1279, 328, 197, 224, 0, 1314, 407,
	456, 468, 1388, 1299, 1308, 252, 1306, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 1349, 1368, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 0, 288, 451, 630, 212, 509,
	589, 238, 478, 0, 0, 638, 246, 498, 214, 586,
	497, 389, 324, 325, 213, 0, 452, 267, 292, 0,
	0, 257, 410, 581, 582, 255, 639, 227, 610, 219,
	1278, 609, 403, 576, 587, 390, 379, 218, 585, 388,
	378, 332, 351, 352, 279, 305, 442, 371, 443, 304,
	306, 399, 398, 400, 206, 598, 0, 207, 0, 493,
	599, 640, 447, 211, 233, 234, 236, 1294, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 441, 437, 446,
	1384, 571, 592, 604, 615, 621, 622, 624, 625, 626,
	627, 628, 631, 629, 402, 309, 489, 331, 369, 1373,
	1414, 420, 467, 239, 596, 490, 199, 1288, 1293, 1286,
	0, 253, 254, 1355, 567, 1289, 1287, 1344, 1345, 1290,
	1405, 1406, 1407, 1392, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 636, 500, 506, 501, 502, 503, 504, 505,
	0, 507, 1377, 1282, 0, 1291, 1292, 1386, 583, 584,
	659, 380, 480, 593, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 248, 209, 386, 394, 570, 310, 215, 216, 217,
	516, 517, 518, 519, 607, 608, 612, 204, 457, 458,
	459, 460, 291, 602, 307, 463, 462, 329, 330, 375,
	444, 532, 534, 545, 549, 551, 553, 559, 562, 533,
	535, 546, 550, 552, 554, 560, 563, 522, 524, 526,
	528, 541, 540, 537, 565, 566, 543, 548, 527, 539,
	544, 557, 564, 561, 521, 525, 529, 538, 556, 555,
	536, 547, 558, 542, 530, 523, 531, 1348, 196, 220,
	364, 1410, 449, 287, 637, 606, 601, 205, 222, 1285,
	261, 1297, 1305, 0, 1311, 1319, 1320, 1332, 1335, 1336,
	1337, 1338, 1356, 1357, 1359, 1367, 1369, 1372, 1374, 1381,
	1393, 1413, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	1347, 1353, 377, 280, 303, 318, 1362, 605, 496, 226,
	461, 289, 250, 1380, 1382, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 1343,
	1371, 372, 568, 569, 314, 392, 0, 0, 0, 1399,
	1385, 520, 0, 1327, 1402, 1296, 1315, 1412, 1318, 1321,
	1364, 1274, 1342, 411, 1312, 1267, 1300, 1269, 1307, 1270,
	1298, 1329, 269, 1295, 1387, 1346, 1401, 362, 266, 1276,
	1301, 425, 1317, 203, 1366, 481, 251, 373, 370, 575,
	281, 272, 268, 249, 315, 381, 423, 510, 417, 1408,
	366, 1352, 0, 491, 396, 0, 0, 0, 1331, 1391,
	1340, 1378, 1326, 1365, 1284, 1351, 1403, 1313, 1361, 1404,
	321, 247, 323, 202, 408, 492, 285, 0, 0, 0,
	0, 0, 709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 1309,
	1358, 1398, 1310, 1360, 264, 319, 271, 263, 572, 1409,
	1390, 1273, 1339, 1397, 1334, 0, 0, 228, 1400, 1333,
	0, 1363, 0, 1415, 1268, 1354, 0, 1271, 1275, 1411,
	1395, 1304, 274, 0, 0, 0, 0, 0, 0, 0,
	1330, 1341, 1375, 1379, 1324, 0, 0, 0, 0, 0,
	0, 3145, 0, 1302, 0, 1350, 0, 0, 0, 1280,
	1272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1328, 0, 0, 0, 0, 1283, 0,
	1303, 1376, 0, 1266, 296, 1277, 397, 256, 0, 448,
	1383, 1394, 1325, 616, 1396, 1323, 1322, 1370, 1281, 1389,
	1316, 361, 1279, 328, 197, 224, 0, 1314, 407, 456,
	468, 1388, 1299, 1308, 252, 1306, 466, 421, 594, 232,
	283, 453, 427, 464, 435, 286, 1349, 1368, 465, 368,
	577, 445, 591, 617, 618, 262, 401, 603, 514, 611,
	635, 225, 259, 415, 499, 597, 488, 393, 573, 574,
	327, 487, 294, 201, 365, 623, 223, 474, 367, 241,
	230, 579, 600, 0, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 1278,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 1294, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 1384,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 1373, 1414,
	420, 467, 239, 596, 490, 199, 1288, 1293, 1286, 0,
	253, 254, 1355, 567, 1289, 1287, 1344, 1345, 1290, 1405,
	1406, 1407, 1392, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 1377, 1282, 0, 1291, 1292, 1386, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 1348, 196, 220, 364,
	1410, 449, 287, 637, 606, 601, 205, 222, 1285, 261,
	1297, 1305, 0, 1311, 1319, 1320, 1332, 1335, 1336, 1337,
	1338, 1356, 1357, 1359, 1367, 1369, 1372, 1374, 1381, 1393,
	1413, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 1347,
	1353, 377, 280, 303, 318, 1362, 605, 496, 226, 461,
	289, 250, 1380, 1382, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 1343, 1371,
	372, 568, 569, 314, 392, 0, 0, 0, 1399, 1385,
	520, 0, 1327, 1402, 1296, 1315, 1412, 1318, 1321, 1364,
	1274, 1342, 411, 1312, 1267, 1300, 1269, 1307, 1270, 1298,
	1329, 269, 1295, 1387, 1346, 1401, 362, 266, 1276, 1301,
	425, 1317, 203, 1366, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 1408, 366,
	1352, 0, 491, 396, 0, 0, 0, 1331, 1391, 1340,
	1378, 1326, 1365, 1284, 1351, 1403, 1313, 1361, 1404, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 941, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 1309, 1358,
	1398, 1310, 1360, 264, 319, 271, 263, 572, 1409, 1390,
	1273, 1339, 1397, 1334, 0, 0, 228, 1400, 1333, 0,
	1363, 0, 1415, 1268, 1354, 0, 1271, 1275, 1411, 1395,
	1304, 274, 0, 0, 0, 0, 0, 0, 0, 1330,
	1341, 1375, 1379, 1324, 0, 0, 0, 0, 0, 0,
	2362, 0, 1302, 0, 1350, 0, 0, 0, 1280, 1272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 1283, 0, 1303,
	1376, 0, 1266, 296, 1277, 397, 256, 0, 448, 1383,
	1394, 1325, 616, 1396, 1323, 1322, 1370, 1281, 1389, 1316,
	361, 1279, 328, 197, 224, 0, 1314, 407, 456, 468,
	1388, 1299, 1308, 252, 1306, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 1349, 1368, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 0, 288, 451, 630, 212, 509, 589, 238,
	478, 0, 0, 638, 246, 498, 214, 586, 497, 389,
	324, 325, 213, 0, 452, 267, 292, 0, 0, 257,
	410, 581, 582, 255, 639, 227, 610, 219, 1278, 609,
	403, 576, 587, 390, 379, 218, 585, 388, 378, 332,
	351, 352, 279, 305, 442, 371, 443, 304, 306, 399,
	398, 400, 206, 598, 0, 207, 0, 493, 599, 640,
	447, 211, 233, 234, 236, 1294, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 441, 437, 446, 1384, 571,
	592, 604, 615, 621, 622, 624, 625, 626, 627, 628,
	631, 629, 402, 309, 489, 331, 369, 1373, 1414, 420,
	467, 239, 596, 490, 199, 1288, 1293, 1286, 0, 253,
	254, 1355, 567, 1289, 1287, 1344, 1345, 1290, 1405, 1406,
	1407, 1392, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	636, 500, 506, 501, 502, 503, 504, 505, 0, 507,
	1377, 1282, 0, 1291, 1292, 1386, 583, 584, 659, 380,
	480, 593, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 248,
	209, 386, 394, 570, 310, 215, 216, 217, 516, 517,
	518, 519, 607, 608, 612, 204, 457, 458, 459, 460,
	291, 602, 307, 463, 462, 329, 330, 375, 444, 532,
	534, 545, 549, 551, 553, 559, 562, 533, 535, 546,
	550, 552, 554, 560, 563, 522, 524, 526, 528, 541,
	540, 537, 565, 566, 543, 548, 527, 539, 544, 557,
	564, 561, 521, 525, 529, 538, 556, 555, 536, 547,
	558, 542, 530, 523, 531, 1348, 196, 220, 364, 1410,
	449, 287, 637, 606, 601, 205, 222, 1285, 261, 1297,
	1305, 0, 1311, 1319, 1320, 1332, 1335, 1336, 1337, 1338,
	1356, 1357, 1359, 1367, 1369, 1372, 1374, 1381, 1393, 1413,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 299, 300, 439, 440, 312, 313, 633, 634,
	298, 590, 620, 588, 632, 614, 433, 374, 1347, 1353,
	377, 280, 303, 318, 1362, 605, 496, 226, 461, 289,
	250, 1380, 1382, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 1343, 1371, 372,
	568, 569, 314, 392, 0, 0, 0, 1399, 1385, 520,
	0, 1327, 1402, 1296, 1315, 1412, 1318, 1321, 1364, 1274,
	1342, 411, 1312, 1267, 1300, 1269, 1307, 1270, 1298, 1329,
	269, 1295, 1387, 1346, 1401, 362, 266, 1276, 1301, 425,
	1317, 203, 1366, 481, 251, 373, 370, 575, 281, 272,
	268, 249, 315, 381, 423, 510, 417, 1408, 366, 1352,
	0, 491, 396, 0, 0, 0, 1331, 1391, 1340, 1378,
	1326, 1365, 1284, 1351, 1403, 1313, 1361, 1404, 321, 247,
	323, 202, 408, 492, 285, 0, 95, 0, 0, 0,
	709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 1309, 1358, 1398,
	1310, 1360, 264, 319, 271, 263, 572, 1409, 1390, 1273,
	1339, 1397, 1334, 0, 0, 228, 1400, 1333, 0, 1363,
	0, 1415, 1268, 1354, 0, 1271, 1275, 1411, 1395, 1304,
	274, 0, 0, 0, 0, 0, 0, 0, 1330, 1341,
	1375, 1379, 1324, 0, 0, 0, 0, 0, 0, 0,
	0, 1302, 0, 1350, 0, 0, 0, 1280, 1272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1328, 0, 0, 0, 0, 1283, 0, 1303, 1376,
	0, 1266, 296, 1277, 397, 256, 0, 448, 1383, 1394,
	1325, 616, 1396, 1323, 1322, 1370, 1281, 1389, 1316, 361,
	1279, 328, 197, 224, 0, 1314, 407, 456, 468, 1388,
	1299, 1308, 252, 1306, 466, 421, 594, 232, 283, 453,
	427, 464, 435, 286, 1349, 1368, 465, 368, 577, 445,
	591, 617, 618, 262, 401, 603, 514, 611, 635, 225,
	259, 415, 499, 597, 488, 393, 573, 574, 327, 487,
	294, 201, 365, 623, 223, 474, 367, 241, 230, 579,
	600, 0, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 1278, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 1294, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 1384, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 1373, 1414, 420, 467,
	239, 596, 490, 199, 1288, 1293, 1286, 0, 253, 254,
	1355, 567, 1289, 1287, 1344, 1345, 1290, 1405, 1406, 1407,
	1392, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 1377,
	1282, 0, 1291, 1292, 1386, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 1348, 196, 220, 364, 1410, 449,
	287, 637, 606, 601, 205, 222, 1285, 261, 1297, 1305,
	0, 1311, 1319, 1320, 1332, 1335, 1336, 1337, 1338, 1356,
	1357, 1359, 1367, 1369, 1372, 1374, 1381, 1393, 1413, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 1347, 1353, 377,
	280, 303, 318, 1362, 605, 496, 226, 461, 289, 250,
	1380, 1382, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 1343, 1371, 372, 568,
	569, 314, 392, 0, 0, 0, 1399, 1385, 520, 0,
	1327, 1402, 1296, 1315, 1412, 1318, 1321, 1364, 1274, 1342,
	411, 1312, 1267, 1300, 1269, 1307, 1270, 1298, 1329, 269,
	1295, 1387, 1346, 1401, 362, 266, 1276, 1301, 425, 1317,
	203, 1366, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 1408, 366, 1352, 0,
	491, 396, 0, 0, 0, 1331, 1391, 1340, 1378, 1326,
	1365, 1284, 1351, 1403, 1313, 1361, 1404, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 1309, 1358, 1398, 1310,
	1360, 264, 319, 271, 263, 572, 1409, 1390, 1273, 1339,
	1397, 1334, 0, 0, 228, 1400, 1333, 0, 1363, 0,
	1415, 1268, 1354, 0, 1271, 1275, 1411, 1395, 1304, 274,
	0, 0, 0, 0, 0, 0, 0, 1330, 1341, 1375,
	1379, 1324, 0, 0, 0, 0, 0, 0, 0, 0,
	1302, 0, 1350, 0, 0, 0, 1280, 1272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 0, 0, 0, 0, 1283, 0, 1303, 1376, 0,
	1266, 296, 1277, 397, 256, 0, 448, 1383, 1394, 1325,
	616, 1396, 1323, 1322, 1370, 1281, 1389, 1316, 361, 1279,
	328, 197, 224, 0, 1314, 407, 456, 468, 1388, 1299,
	1308, 252, 1306, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 1349, 1368, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	0, 288, 451, 630, 212, 509, 589, 238, 478, 0,
	0, 638, 246, 498, 214, 586, 497, 389, 324, 325,
	213, 0, 452, 267, 292, 0, 0, 257, 410, 581,
	582, 255, 639, 227, 610, 219, 1278, 609, 403, 576,
	587, 390, 379, 218, 585, 388, 378, 332, 351, 352,
	279, 305, 442, 371, 443, 304, 306, 399, 398, 400,
	206, 598, 0, 207, 0, 493, 599, 640, 447, 211,
	233, 234, 236, 1294, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 441, 437, 446, 1384, 571, 592, 604,
	615, 621, 622, 624, 625, 626, 627, 628, 631, 629,
	402, 309, 489, 331, 369, 1373, 1414, 420, 467, 239,
	596, 490, 199, 1288, 1293, 1286, 0, 253, 254, 1355,
	567, 1289, 1287, 1344, 1345, 1290, 1405, 1406, 1407, 1392,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 636, 500,
	506, 501, 502, 503, 504, 505, 0, 507, 1377, 1282,
	0, 1291, 1292, 1386, 583, 584, 659, 380, 480, 593,
	333, 345, 348, 338, 357, 0, 358, 334, 335, 340,
	342, 343, 344, 349, 350, 354, 360, 248, 209, 386,
	394, 570, 310, 215, 216, 217, 516, 517, 518, 519,
	607, 608, 612, 204, 457, 458, 459, 460, 291, 602,
	307, 463, 462, 329, 330, 375, 444, 532, 534, 545,
	549, 551, 553, 559, 562, 533, 535, 546, 550, 552,
	554, 560, 563, 522, 524, 526, 528, 541, 540, 537,
	565, 566, 543, 548, 527, 539, 544, 557, 564, 561,
	521, 525, 529, 538, 556, 555, 536, 547, 558, 542,
	530, 523, 531, 1348, 196, 220, 364, 1410, 449, 287,
	637, 606, 601, 205, 222, 1285, 261, 1297, 1305, 0,
	1311, 1319, 1320, 1332, 1335, 1336, 1337, 1338, 1356, 1357,
	1359, 1367, 1369, 1372, 1374, 1381, 1393, 1413, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 1347, 1353, 377, 280,
	303, 318, 1362, 605, 496, 226, 461, 289, 250, 1380,
	1382, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 1343, 1371, 372, 568, 569,
	314, 392, 0, 0, 0, 1399, 1385, 520, 0, 1327,
	1402, 1296, 1315, 1412, 1318, 1321, 1364, 1274, 1342, 411,
	1312, 1267, 1300, 1269, 1307, 1270, 1298, 1329, 269, 1295,
	1387, 1346, 1401, 362, 266, 1276, 1301, 425, 1317, 203,
	1366, 481, 251, 373, 370, 575, 281, 272, 268, 249,
	315, 381, 423, 510, 417, 1408, 366, 1352, 0, 491,
	396, 0, 0, 0, 1331, 1391, 1340, 1378, 1326, 1365,
	1284, 1351, 1403, 1313, 1361, 1404, 321, 247, 323, 202,
	408, 492, 285, 0, 0, 0, 0, 0, 709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 1309, 1358, 1398, 1310, 1360,
	264, 319, 271, 263, 572, 1409, 1390, 1273, 1339, 1397,
	1334, 0, 0, 228, 1400, 1333, 0, 1363, 0, 1415,
	1268, 1354, 0, 1271, 1275, 1411, 1395, 1304, 274, 0,
	0, 0, 0, 0, 0, 0, 1330, 1341, 1375, 1379,
	1324, 0, 0, 0, 0, 0, 0, 0, 0, 1302,
	0, 1350, 0, 0, 0, 1280, 1272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1328,
	0, 0, 0, 0, 1283, 0, 1303, 1376, 0, 1266,
	296, 1277, 397, 256, 0, 448, 1383, 1394, 1325, 616,
	1396, 1323, 1322, 1370, 1281, 1389, 1316, 361, 1279, 328,
	197, 224, 0, 1314, 407, 456, 468, 1388, 1299, 1308,
	252, 1306, 466, 421, 594, 232, 283, 453, 427, 464,
	435, 286, 1349, 1368, 465, 368, 577, 445, 591, 617,
	618, 262, 401, 603, 514, 611, 635, 225, 259, 415,
	499, 597, 488, 393, 573, 574, 327, 487, 294, 201,
	365, 623, 223, 474, 367, 241, 230, 579, 600, 0,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 1278, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 1294, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 1384, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 1373, 1414, 420, 467, 239, 596,
	490, 199, 1288, 1293, 1286, 0, 253, 254, 1355, 567,
	1289, 1287, 1344, 1345, 1290, 1405, 1406, 1407, 1392, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 1377, 1282, 0,
	1291, 1292, 1386, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 1348, 196, 220, 364, 1410, 449, 287, 637,
	606, 601, 205, 222, 1285, 261, 1297, 1305, 0, 1311,
	1319, 1320, 1332, 1335, 1336, 1337, 1338, 1356, 1357, 1359,
	1367, 1369, 1372, 1374, 1381, 1393, 1413, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 1347, 1353, 377, 280, 303,
	318, 1362, 605, 496, 226, 461, 289, 250, 1380, 1382,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 1343, 1371, 372, 568, 569, 314,
	392, 0, 0, 0, 1399, 1385, 520, 0, 1327, 1402,
	1296, 1315, 1412, 1318, 1321, 1364, 1274, 1342, 411, 1312,
	1267, 1300, 1269, 1307, 1270, 1298, 1329, 269, 1295, 1387,
	1346, 1401, 362, 266, 1276, 1301, 425, 1317, 203, 1366,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 1408, 366, 1352, 0, 491, 396,
	0, 0, 0, 1331, 1391, 1340, 1378, 1326, 1365, 1284,
	1351, 1403, 1313, 1361, 1404, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 0, 941, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 1309, 1358, 1398, 1310, 1360, 264,
	319, 271, 263, 572, 1409, 1390, 1273, 1339, 1397, 1334,
	0, 0, 228, 1400, 1333, 0, 1363, 0, 1415, 1268,
	1354, 0, 1271, 1275, 1411, 1395, 1304, 274, 0, 0,
	0, 0, 0, 0, 0, 1330, 1341, 1375, 1379, 1324,
	0, 0, 0, 0, 0, 0, 0, 0, 1302, 0,
	1350, 0, 0, 0, 1280, 1272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 0,
	0, 0, 0, 1283, 0, 1303, 1376, 0, 1266, 296,
	1277, 397, 256, 0, 448, 1383, 1394, 1325, 616, 1396,
	1323, 1322, 1370, 1281, 1389, 1316, 361, 1279, 328, 197,
	224, 0, 1314, 407, 456, 468, 1388, 1299, 1308, 252,
	1306, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 1349, 1368, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 0, 288,
	451, 630, 212, 509, 589, 238, 478, 0, 0, 638,
	246, 498, 214, 586, 497, 389, 324, 325, 213, 0,
	452, 267, 292, 0, 0, 257, 410, 581, 582, 255,
	639, 227, 610, 219, 1278, 609, 403, 576, 587, 390,
	379, 218, 585, 388, 378, 332, 351, 352, 279, 305,
	442, 371, 443, 304, 306, 399, 398, 400, 206, 598,
	0, 207, 0, 493, 599, 640, 447, 211, 233, 234,
	236, 1294, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 441, 437, 446, 1384, 571, 592, 604, 615, 621,
	622, 624, 625, 626, 627, 628, 631, 629, 402, 309,
	489, 331, 369, 1373, 1414, 420, 467, 239, 596, 490,
	199, 1288, 1293, 1286, 0, 253, 254, 1355, 567, 1289,
	1287, 1344, 1345, 1290, 1405, 1406, 1407, 1392, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 636, 500, 506, 501,
	502, 503, 504, 505, 0, 507, 1377, 1282, 0, 1291,
	1292, 1386, 583, 584, 659, 380, 480, 593, 333, 345,
	348, 338, 357, 0, 358, 334, 335, 340, 342, 343,
	344, 349, 350, 354, 360, 248, 209, 386, 394, 570,
	310, 215, 216, 217, 516, 517, 518, 519, 607, 608,
	612, 204, 457, 458, 459, 460, 291, 602, 307, 463,
	462, 329, 330, 375, 444, 532, 534, 545, 549, 551,
	553, 559, 562, 533, 535, 546, 550, 552, 554, 560,
	563, 522, 524, 526, 528, 541, 540, 537, 565, 566,
	543, 548, 527, 539, 544, 557, 564, 561, 521, 525,
	529, 538, 556, 555, 536, 547, 558, 542, 530, 523,
	531, 1348, 196, 220, 364, 1410, 449, 287, 637, 606,
	601, 205, 222, 1285, 261, 1297, 1305, 0, 1311, 1319,
	1320, 1332, 1335, 1336, 1337, 1338, 1356, 1357, 1359, 1367,
	1369, 1372, 1374, 1381, 1393, 1413, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 299, 300,
	439, 440, 312, 313, 633, 634, 298, 590, 620, 588,
	632, 614, 433, 374, 1347, 1353, 377, 280, 303, 318,
	1362, 605, 496, 226, 461, 289, 250, 1380, 1382, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 1343, 1371, 372, 568, 569, 314, 392,
	0, 0, 0, 0, 0, 520, 0, 761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 749, 0, 0, 0, 269, 754, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 203, 0, 481,
	251, 373, 370, 575, 281, 272, 268, 249, 315, 381,
	423, 510, 417, 760, 366, 0, 0, 491, 396, 0,
	0, 0, 0, 0, 756, 757, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 247, 323, 202, 408, 492,
	285, 0, 95, 0, 0, 957, 941, 733, 907, 945,
	958, 959, 960, 961, 946, 0, 237, 947, 948, 244,
	949, 0, 906, 791, 793, 792, 856, 857, 858, 859,
	860, 861, 862, 789, 954, 962, 963, 0, 264, 319,
	271, 263, 572, 0, 0, 2183, 2184, 2185, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 729,
	746, 0, 759, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 743, 744, 0, 0, 0, 0, 901,
	0, 745, 0, 0, 753, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 448, 900, 0, 0, 616, 0, 0,
	898, 0, 0, 0, 0, 361, 0, 328, 197, 224,
	0, 0, 407, 456, 468, 0, 0, 0, 951, 0,
	466, 421, 594, 232, 283, 453, 427, 464, 435, 286,
	0, 0, 465, 368, 577, 445, 591, 617, 618, 262,
	401, 603, 514, 611, 635, 225, 259, 415, 499, 597,
	488, 393, 573, 574, 327, 487, 294, 201, 365, 623,
	223, 474, 367, 241, 230, 579, 600, 0, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 952, 953, 255, 639,
	797, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 805, 806, 279, 305, 882,
	881, 880, 304, 306, 878, 879, 877, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 888,
	910, 899, 765, 766, 889, 890, 914, 891, 768, 769,
	911, 912, 762, 763, 767, 913, 915, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 902, 752, 751, 0, 758,
	0, 787, 788, 790, 794, 795, 796, 807, 854, 855,
	863, 865, 866, 864, 867, 868, 869, 872, 873, 874,
	875, 870, 871, 876, 770, 774, 771, 772, 773, 785,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	786, 925, 926, 927, 928, 929, 930, 800, 804, 803,
	801, 802, 798, 799, 826, 825, 827, 828, 829, 830,
	831, 832, 834, 833, 835, 836, 837, 838, 839, 840,
	808, 809, 812, 813, 811, 810, 814, 823, 824, 815,
	816, 817, 818, 819, 820, 822, 821, 841, 842, 843,
	844, 845, 847, 846, 850, 851, 849, 848, 853, 852,
	750, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 916, 261, 917, 0, 0, 921, 0, 0,
	0, 923, 922, 0, 924, 886, 885, 0, 0, 918,
	919, 0, 920, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 931, 932, 933,
	934, 935, 936, 937, 938, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 956, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 749, 0, 0, 0, 269,
	754, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 760, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 756, 757, 0,
	0, 0, 0, 0, 0, 2391, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 95, 0, 0, 957, 941,
	733, 907, 945, 958, 959, 960, 961, 946, 0, 237,
	947, 948, 244, 949, 0, 906, 791, 793, 792, 856,
	857, 858, 859, 860, 861, 862, 789, 954, 962, 963,
	2392, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 729, 746, 0, 759, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 743, 744, 0, 0,
	0, 0, 901, 0, 745, 0, 0, 753, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 900, 0, 0,
	616, 0, 0, 898, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 951, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	0, 288, 451, 630, 212, 509, 589, 238, 478, 0,
	0, 638, 246, 498, 214, 586, 497, 389, 324, 325,
	213, 0, 452, 267, 292, 0, 0, 257, 410, 952,
	953, 255, 639, 797, 610, 219, 0, 609, 403, 576,
	587, 390, 379, 218, 585, 388, 378, 332, 805, 806,
	279, 305, 882, 881, 880, 304, 306, 878, 879, 877,
	206, 598, 0, 207, 0, 493, 599, 640, 447, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 441, 437, 446, 0, 571, 592, 604,
	615, 621, 622, 624, 625, 626, 627, 628, 631, 629,
	402, 309, 489, 331, 369, 0, 0, 420, 467, 239,
	596, 490, 888, 910, 899, 765, 766, 889, 890, 914,
	891, 768, 769, 911, 912, 762, 763, 767, 913, 915,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 636, 500,
	506, 501, 502, 503, 504, 505, 0, 507, 902, 752,
	751, 0, 758, 0, 787, 788, 790, 794, 795, 796,
	807, 854, 855, 863, 865, 866, 864, 867, 868, 869,
	872, 873, 874, 875, 870, 871, 876, 770, 774, 771,
	772, 773, 785, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 786, 925, 926, 927, 928, 929, 930,
	800, 804, 803, 801, 802, 798, 799, 826, 825, 827,
	828, 829, 830, 831, 832, 834, 833, 835, 836, 837,
	838, 839, 840, 808, 809, 812, 813, 811, 810, 814,
	823, 824, 815, 816, 817, 818, 819, 820, 822, 821,
	841, 842, 843, 844, 845, 847, 846, 850, 851, 849,
	848, 853, 852, 750, 196, 220, 364, 0, 449, 287,
	637, 606, 601, 205, 222, 916, 261, 917, 0, 0,
	921, 0, 0, 0, 923, 922, 0, 924, 886, 885,
	0, 0, 918, 919, 0, 920, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	931, 932, 933, 934, 935, 936, 937, 938, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 956,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 0, 392, 372, 568, 569,
	314, 86, 520, 0, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 749,
	0, 0, 0, 269, 754, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	760, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 756, 757, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 95,
	0, 0, 957, 941, 733, 907, 945, 958, 959, 960,
	961, 946, 0, 237, 947, 948, 244, 949, 0, 906,
	791, 793, 792, 856, 857, 858, 859, 860, 861, 862,
	789, 954, 962, 963, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 729, 746, 0, 759,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	743, 744, 0, 0, 0, 0, 901, 0, 745, 0,
	0, 753, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 900, 0, 0, 616, 0, 0, 898, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 951, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 0, 288, 451, 630, 212, 509,
	589, 238, 478, 0, 0, 638, 246, 498, 214, 586,
	497, 389, 324, 325, 213, 0, 452, 267, 292, 0,
	0, 257, 410, 952, 953, 255, 639, 797, 610, 219,
	0, 609, 403, 576, 587, 390, 379, 218, 585, 388,
	378, 332, 805, 806, 279, 305, 882, 881, 880, 304,
	306, 878, 879, 877, 206, 598, 0, 207, 0, 493,
	599, 640, 447, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 441, 437, 446,
	0, 571, 592, 604, 615, 621, 622, 624, 625, 626,
	627, 628, 631, 629, 402, 309, 489, 331, 369, 0,
	0, 420, 467, 239, 596, 490, 888, 910, 899, 765,
	766, 889, 890, 914, 891, 768, 769, 911, 912, 762,
	763, 767, 913, 915, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 636, 500, 506, 501, 502, 503, 504, 505,
	0, 507, 902, 752, 751, 0, 758, 0, 787, 788,
	790, 794, 795, 796, 807, 854, 855, 863, 865, 866,
	864, 867, 868, 869, 872, 873, 874, 875, 870, 871,
	876, 770, 774, 771, 772, 773, 785, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 786, 925, 926,
	927, 928, 929, 930, 800, 804, 803, 801, 802, 798,
	799, 826, 825, 827, 828, 829, 830, 831, 832, 834,
	833, 835, 836, 837, 838, 839, 840, 808, 809, 812,
	813, 811, 810, 814, 823, 824, 815, 816, 817, 818,
	819, 820, 822, 821, 841, 842, 843, 844, 845, 847,
	846, 850, 851, 849, 848, 853, 852, 750, 196, 220,
	364, 94, 449, 287, 637, 606, 601, 205, 222, 916,
	261, 917, 0, 0, 921, 0, 0, 0, 923, 922,
	0, 924, 886, 885, 0, 0, 918, 919, 0, 920,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 931, 932, 933, 934, 935, 936,
	937, 938, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 956, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 392,
	0, 372, 568, 569, 314, 520, 0, 761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 749, 0, 0, 0, 269, 754, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 203, 0, 481,
	251, 373, 370, 575, 281, 272, 268, 249, 315, 381,
	423, 510, 417, 760, 366, 0, 0, 491, 396, 0,
	0, 0, 0, 0, 756, 757, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 247, 323, 202, 408, 492,
	285, 0, 95, 0, 0, 957, 941, 733, 907, 945,
	958, 959, 960, 961, 946, 0, 237, 947, 948, 244,
	949, 0, 906, 791, 793, 792, 856, 857, 858, 859,
	860, 861, 862, 789, 954, 962, 963, 0, 264, 319,
	271, 263, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 729,
	746, 0, 759, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 743, 744, 0, 0, 0, 0, 901,
	0, 745, 0, 0, 753, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 448, 900, 0, 0, 616, 0, 0,
	898, 0, 0, 0, 0, 361, 0, 328, 197, 224,
	0, 0, 407, 456, 468, 0, 0, 0, 951, 0,
	466, 421, 594, 232, 283, 453, 427, 464, 435, 286,
	3998, 0, 465, 368, 577, 445, 591, 617, 618, 262,
	401, 603, 514, 611, 635, 225, 259, 415, 499, 597,
	488, 393, 573, 574, 327, 487, 294, 201, 365, 623,
	223, 474, 367, 241, 230, 579, 600, 0, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 952, 953, 255, 639,
	797, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 805, 806, 279, 305, 882,
	881, 880, 304, 306, 878, 879, 877, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 888,
	910, 899, 765, 766, 889, 890, 914, 891, 768, 769,
	911, 912, 762, 763, 767, 913, 915, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 902, 752, 751, 0, 758,
	0, 787, 788, 790, 794, 795, 796, 807, 854, 855,
	863, 865, 866, 864, 867, 868, 869, 872, 873, 874,
	875, 870, 871, 876, 770, 774, 771, 772, 773, 785,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	786, 925, 926, 927, 928, 929, 930, 800, 804, 803,
	801, 802, 798, 799, 826, 825, 827, 828, 829, 830,
	831, 832, 834, 833, 835, 836, 837, 838, 839, 840,
	808, 809, 812, 813, 811, 810, 814, 823, 824, 815,
	816, 817, 818, 819, 820, 822, 821, 841, 842, 843,
	844, 845, 847, 846, 850, 851, 849, 848, 853, 852,
	750, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 916, 261, 917, 0, 0, 921, 0, 0,
	0, 923, 922, 0, 924, 886, 885, 0, 0, 918,
	919, 0, 920, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 931, 932, 933,
	934, 935, 936, 937, 938, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 956, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 749, 0, 0, 0, 269,
	754, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 760, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 756, 757, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 95, 0, 1718, 957, 941,
	733, 907, 945, 958, 959, 960, 961, 946, 0, 237,
	947, 948, 244, 949, 0, 906, 791, 793, 792, 856,
	857, 858, 859, 860, 861, 862, 789, 954, 962, 963,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 729, 746, 0, 759, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 743, 744, 0, 0,
	0, 0, 901, 0, 745, 0, 0, 753, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 900, 0, 0,
	616, 0, 0, 898, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 951, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	0, 288, 451, 630, 212, 509, 589, 238, 478, 0,
	0, 638, 246, 498, 214, 586, 497, 389, 324, 325,
	213, 0, 452, 267, 292, 0, 0, 257, 410, 952,
	953, 255, 639, 797, 610, 219, 0, 609, 403, 576,
	587, 390, 379, 218, 585, 388, 378, 332, 805, 806,
	279, 305, 882, 881, 880, 304, 306, 878, 879, 877,
	206, 598, 0, 207, 0, 493, 599, 640, 447, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 441, 437, 446, 0, 571, 592, 604,
	615, 621, 622, 624, 625, 626, 627, 628, 631, 629,
	402, 309, 489, 331, 369, 0, 0, 420, 467, 239,
	596, 490, 888, 910, 899, 765, 766, 889, 890, 914,
	891, 768, 769, 911, 912, 762, 763, 767, 913, 915,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 636, 500,
	506, 501, 502, 503, 504, 505, 0, 507, 902, 752,
	751, 0, 758, 0, 787, 788, 790, 794, 795, 796,
	807, 854, 855, 863, 865, 866, 864, 867, 868, 869,
	872, 873, 874, 875, 870, 871, 876, 770, 774, 771,
	772, 773, 785, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 786, 925, 926, 927, 928, 929, 930,
	800, 804, 803, 801, 802, 798, 799, 826, 825, 827,
	828, 829, 830, 831, 832, 834, 833, 835, 836, 837,
	838, 839, 840, 808, 809, 812, 813, 811, 810, 814,
	823, 824, 815, 816, 817, 818, 819, 820, 822, 821,
	841, 842, 843, 844, 845, 847, 846, 850, 851, 849,
	848, 853, 852, 750, 196, 220, 364, 0, 449, 287,
	637, 606, 601, 205, 222, 916, 261, 917, 0, 0,
	921, 0, 0, 0, 923, 922, 0, 924, 886, 885,
	0, 0, 918, 919, 0, 920, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	931, 932, 933, 934, 935, 936, 937, 938, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 956,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 392, 0, 372, 568, 569,
	314, 520, 0, 761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 749, 0,
	0, 0, 269, 754, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 203, 0, 481, 251, 373, 370, 575,
	281, 272, 268, 249, 315, 381, 423, 510, 417, 760,
	366, 0, 0, 491, 396, 0, 0, 0, 0, 0,
	756, 757, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 247, 323, 202, 408, 492, 285, 0, 95, 0,
	0, 957, 941, 733, 907, 945, 958, 959, 960, 961,
	946, 0, 237, 947, 948, 244, 949, 0, 906, 791,
	793, 792, 856, 857, 858, 859, 860, 861, 862, 789,
	954, 962, 963, 0, 264, 319, 271, 263, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 729, 746, 0, 759, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 743,
	744, 1050, 0, 0, 0, 901, 0, 745, 0, 0,
	753, 964, 965, 966, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 448,
	900, 0, 0, 616, 0, 0, 898, 0, 0, 0,
	0, 361, 0, 328, 197, 224, 0, 0, 407, 456,
	468, 0, 0, 0, 951, 0, 466, 421, 594, 232,
	283, 453, 427, 464, 435, 286, 0, 0, 465, 368,
	577, 445, 591, 617, 618, 262, 401, 603, 514, 611,
	635, 225, 259, 415, 499, 597, 488, 393, 573, 574,
	327, 487, 294, 201, 365, 623, 223, 474, 367, 241,
	230, 579, 600, 0, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 952, 953, 255, 639, 797, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 805, 806, 279, 305, 882, 881, 880, 304, 306,
	878, 879, 877, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 888, 910, 899, 765, 766,
	889, 890, 914, 891, 768, 769, 911, 912, 762, 763,
	767, 913, 915, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 902, 752, 751, 0, 758, 0, 787, 788, 790,
	794, 795, 796, 807, 854, 855, 863, 865, 866, 864,
	867, 868, 869, 872, 873, 874, 875, 870, 871, 876,
	770, 774, 771, 772, 773, 785, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 786, 925, 926, 927,
	928, 929, 930, 800, 804, 803, 801, 802, 798, 799,
	826, 825, 827, 828, 829, 830, 831, 832, 834, 833,
	835, 836, 837, 838, 839, 840, 808, 809, 812, 813,
	811, 810, 814, 823, 824, 815, 816, 817, 818, 819,
	820, 822, 821, 841, 842, 843, 844, 845, 847, 846,
	850, 851, 849, 848, 853, 852, 750, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 916, 261,
	917, 0, 0, 921, 0, 0, 0, 923, 922, 0,
	924, 886, 885, 0, 0, 918, 919, 0, 920, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 931, 932, 933, 934, 935, 936, 937,
	938, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 956, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 749, 0, 0, 0, 269, 754, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 760, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 756, 757, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 95, 0, 0, 957, 941, 733, 907, 945, 958,
	959, 960, 961, 946, 0, 237, 947, 948, 244, 949,
	0, 906, 791, 793, 792, 856, 857, 858, 859, 860,
	861, 862, 789, 954, 962, 963, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 729, 746,
	0, 759, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 743, 744, 0, 0, 0, 0, 901, 0,
	745, 0, 0, 753, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 900, 0, 0, 616, 0, 0, 898,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 951, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 0, 288, 451, 630,
	212, 509, 589, 238, 478, 0, 0, 638, 246, 498,
	214, 586, 497, 389, 324, 325, 213, 0, 452, 267,
	292, 0, 0, 257, 410, 952, 953, 255, 639, 797,
	610, 219, 0, 609, 403, 576, 587, 390, 379, 218,
	585, 388, 378, 332, 805, 806, 279, 305, 882, 881,
	880, 304, 306, 878, 879, 877, 206, 598, 0, 207,
	0, 493, 599, 640, 447, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 441,
	437, 446, 0, 571, 592, 604, 615, 621, 622, 624,
	625, 626, 627, 628, 631, 629, 402, 309, 489, 331,
	369, 0, 0, 420, 467, 239, 596, 490, 888, 910,
	899, 765, 766, 889, 890, 914, 891, 768, 769, 911,
	912, 762, 763, 767, 913, 915, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 636, 500, 506, 501, 502, 503,
	504, 505, 0, 507, 902, 752, 751, 0, 758, 0,
	787, 788, 790, 794, 795, 796, 807, 854, 855, 863,
	865, 866, 864, 867, 868, 869, 872, 873, 874, 875,
	870, 871, 876, 770, 774, 771, 772, 773, 785, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 786,
	925, 926, 927, 928, 929, 930, 800, 804, 803, 801,
	802, 798, 799, 826, 825, 827, 828, 829, 830, 831,
	832, 834, 833, 835, 836, 837, 838, 839, 840, 808,
	809, 812, 813, 811, 810, 814, 823, 824, 815, 816,
	817, 818, 819, 820, 822, 821, 841, 842, 843, 844,
	845, 847, 846, 850, 851, 849, 848, 853, 852, 750,
	196, 220, 364, 0, 449, 287, 637, 606, 601, 205,
	222, 916, 261, 917, 0, 0, 921, 0, 0, 0,
	923, 922, 0, 924, 886, 885, 0, 0, 918, 919,
	0, 920, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 931, 932, 933, 934,
	935, 936, 937, 938, 298, 590, 620, 588, 632, 614,
	433, 374, 0, 0, 377, 280, 303, 318, 0, 605,
	496, 226, 461, 289, 250, 956, 0, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 392, 0, 372, 568, 569, 314, 520, 0, 761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 749, 0, 0, 0, 269, 754,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 203,
	0, 481, 251, 373, 370, 575, 281, 272, 268, 249,
	315, 381, 423, 510, 417, 760, 366, 0, 0, 491,
	396, 0, 0, 0, 0, 0, 756, 757, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 247, 323, 202,
	408, 492, 285, 0, 95, 0, 0, 957, 941, 733,
	907, 945, 958, 959, 960, 961, 946, 0, 237, 947,
	948, 244, 949, 0, 906, 791, 793, 792, 856, 857,
	858, 859, 860, 861, 862, 789, 954, 962, 963, 0,
	264, 319, 271, 263, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 729, 746, 0, 759, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 743, 744, 0, 0, 0,
	0, 901, 0, 745, 0, 0, 753, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 3103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 448, 900, 0, 0, 616,
	0, 0, 898, 0, 0, 0, 0, 361, 0, 328,
	197, 224, 0, 0, 407, 456, 468, 0, 0, 0,
	951, 0, 466, 421, 594, 232, 283, 453, 427, 464,
	435, 286, 0, 0, 465, 368, 577, 445, 591, 617,
	618, 262, 401, 603, 514, 611, 635, 225, 259, 415,
	499, 597, 488, 393, 573, 574, 327, 487, 294, 201,
	365, 623, 223, 474, 367, 241, 230, 579, 600, 0,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 952, 953,
	255, 639, 797, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 805, 806, 279,
	305, 882, 881, 880, 304, 306, 878, 879, 877, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 888, 910, 899, 765, 766, 889, 890, 914, 891,
	768, 769, 911, 912, 762, 763, 767, 913, 915, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 902, 752, 751,
	0, 758, 0, 787, 788, 790, 794, 795, 796, 807,
	854, 855, 863, 865, 866, 864, 867, 868, 869, 872,
	873, 874, 875, 870, 871, 876, 770, 774, 771, 772,
	773, 785, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 786, 925, 926, 927, 928, 929, 930, 800,
	804, 803, 801, 802, 798, 799, 826, 825, 827, 828,
	829, 830, 831, 832, 834, 833, 835, 836, 837, 838,
	839, 840, 808, 809, 812, 813, 811, 810, 814, 823,
	824, 815, 816, 817, 818, 819, 820, 822, 821, 841,
	842, 843, 844, 845, 847, 846, 850, 851, 849, 848,
	853, 852, 750, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 916, 261, 917, 0, 0, 921,
	0, 0, 0, 923, 922, 0, 924, 886, 885, 0,
	0, 918, 919, 0, 920, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 931,
	932, 933, 934, 935, 936, 937, 938, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 956, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 749, 0, 0,
	0, 269, 754, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 760, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 756,
	757, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 95, 0, 0,
	957, 941, 733, 907, 945, 958, 959, 960, 961, 946,
	0, 237, 947, 948, 244, 949, 0, 906, 791, 793,
	792, 856, 857, 858, 859, 860, 861, 862, 789, 954,
	962, 963, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 729, 746, 0, 759, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 743, 744,
	0, 0, 0, 0, 901, 0, 745, 0, 0, 753,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 3099, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 900,
	0, 0, 616, 0, 0, 898, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 951, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 0, 288, 451, 630, 212, 509, 589, 238,
	478, 0, 0, 638, 246, 498, 214, 586, 497, 389,
	324, 325, 213, 0, 452, 267, 292, 0, 0, 257,
	410, 952, 953, 255, 639, 797, 610, 219, 0, 609,
	403, 576, 587, 390, 379, 218, 585, 388, 378, 332,
	805, 806, 279, 305, 882, 881, 880, 304, 306, 878,
	879, 877, 206, 598, 0, 207, 0, 493, 599, 640,
	447, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 441, 437, 446, 0, 571,
	592, 604, 615, 621, 622, 624, 625, 626, 627, 628,
	631, 629, 402, 309, 489, 331, 369, 0, 0, 420,
	467, 239, 596, 490, 888, 910, 899, 765, 766, 889,
	890, 914, 891, 768, 769, 911, 912, 762, 763, 767,
	913, 915, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	636, 500, 506, 501, 502, 503, 504, 505, 0, 507,
	902, 752, 751, 0, 758, 0, 787, 788, 790, 794,
	795, 796, 807, 854, 855, 863, 865, 866, 864, 867,
	868, 869, 872, 873, 874, 875, 870, 871, 876, 770,
	774, 771, 772, 773, 785, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 786, 925, 926, 927, 928,
	929, 930, 800, 804, 803, 801, 802, 798, 799, 826,
	825, 827, 828, 829, 830, 831, 832, 834, 833, 835,
	836, 837, 838, 839, 840, 808, 809, 812, 813, 811,
	810, 814, 823, 824, 815, 816, 817, 818, 819, 820,
	822, 821, 841, 842, 843, 844, 845, 847, 846, 850,
	851, 849, 848, 853, 852, 750, 196, 220, 364, 0,
	449, 287, 637, 606, 601, 205, 222, 916, 261, 917,
	0, 0, 921, 0, 0, 0, 923, 922, 0, 924,
	886, 885, 0, 0, 918, 919, 0, 920, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 931, 932, 933, 934, 935, 936, 937, 938,
	298, 590, 620, 588, 632, 614, 433, 374, 0, 0,
	377, 280, 303, 318, 0, 605, 496, 226, 461, 289,
	250, 956, 0, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 392, 0, 372,
	568, 569, 314, 520, 0, 761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	749, 0, 0, 0, 269, 754, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 203, 0, 481, 251, 373,
	370, 575, 281, 272, 268, 249, 315, 381, 423, 510,
	417, 760, 366, 0, 0, 491, 396, 0, 0, 0,
	0, 0, 756, 757, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 247, 323, 202, 408, 492, 285, 0,
	95, 0, 0, 957, 941, 1071, 907, 945, 958, 959,
	960, 961, 946, 0, 237, 947, 948, 244, 949, 0,
	906, 791, 793, 792, 856, 857, 858, 859, 860, 861,
	862, 789, 954, 962, 963, 0, 264, 319, 271, 263,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 746, 0,
	759, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 743, 744, 0, 0, 0, 0, 901, 0, 745,
	0, 0, 753, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 448, 900, 0, 0, 616, 0, 0, 898, 0,
	0, 0, 0, 361, 0, 328, 197, 224, 0, 0,
	407, 456, 468, 0, 0, 0, 951, 0, 466, 421,
	594, 232, 283, 453, 427, 464, 435, 286, 0, 0,
	465, 368, 577, 445, 591, 617, 618, 262, 401, 603,
	514, 611, 635, 225, 259, 415, 499, 597, 488, 393,
	573, 574, 327, 487, 294, 201, 365, 623, 223, 474,
	367, 241, 230, 579, 600, 0, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 952, 953, 255, 639, 797, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 805, 806, 279, 305, 882, 881, 880,
	304, 306, 878, 879, 877, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 888, 910, 899,
	765, 766, 889, 890, 914, 891, 768, 769, 911, 912,
	762, 763, 767, 913, 915, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 902, 752, 751, 0, 758, 0, 787,
	788, 790, 794, 795, 796, 807, 854, 855, 863, 865,
	866, 864, 867, 868, 869, 872, 873, 874, 875, 870,
	871, 876, 770, 774, 771, 772, 773, 785, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 786, 925,
	926, 927, 928, 929, 930, 800, 804, 803, 801, 802,
	798, 799, 826, 825, 827, 828, 829, 830, 831, 832,
	834, 833, 835, 836, 837, 838, 839, 840, 808, 809,
	812, 813, 811, 810, 814, 823, 824, 815, 816, 817,
	818, 819, 820, 822, 821, 841, 842, 843, 844, 845,
	847, 846, 850, 851, 849, 848, 853, 852, 750, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	916, 261, 917, 0, 0, 921, 0, 0, 0, 923,
	922, 0, 924, 886, 885, 0, 0, 918, 919, 0,
	920, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 931, 932, 933, 934, 935,
	936, 937, 938, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 956, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 749, 0, 0, 0, 269, 754, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 760, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 756, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 95, 0, 0, 957, 941, 1071, 907,
	945, 958, 959, 960, 961, 946, 0, 237, 947, 948,
	244, 949, 0, 906, 791, 793, 792, 856, 857, 858,
	859, 860, 861, 862, 789, 954, 962, 963, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 746, 0, 759, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 743, 744, 0, 0, 0, 0,
	901, 0, 745, 0, 0, 753, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 2077, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 900, 0, 0, 616, 0,
	0, 898, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 951,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 0, 288,
	451, 630, 212, 509, 589, 238, 478, 0, 0, 638,
	246, 498, 214, 586, 497, 389, 324, 325, 213, 0,
	452, 267, 292, 0, 0, 257, 410, 952, 953, 255,
	639, 797, 610, 219, 0, 609, 403, 576, 587, 390,
	379, 218, 585, 388, 378, 332, 805, 806, 279, 305,
	882, 881, 880, 304, 306, 878, 879, 877, 206, 598,
	0, 207, 0, 493, 599, 640, 447, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 441, 437, 446, 0, 571, 592, 604, 615, 621,
	622, 624, 625, 626, 627, 628, 631, 629, 402, 309,
	489, 331, 369, 0, 0, 420, 467, 239, 596, 490,
	888, 910, 899, 765, 766, 889, 890, 914, 891, 768,
	769, 911, 912, 762, 763, 767, 913, 915, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 636, 500, 506, 501,
	502, 503, 504, 505, 0, 507, 902, 752, 751, 0,
	758, 0, 787, 788, 790, 794, 795, 796, 807, 854,
	855, 863, 865, 866, 864, 867, 868, 869, 872, 873,
	874, 875, 870, 871, 876, 770, 774, 771, 772, 773,
	785, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 786, 925, 926, 927, 928, 929, 930, 800, 804,
	803, 801, 802, 798, 799, 826, 825, 827, 828, 829,
	830, 831, 832, 834, 833, 835, 836, 837, 838, 839,
	840, 808, 809, 812, 813, 811, 810, 814, 823, 824,
	815, 816, 817, 818, 819, 820, 822, 821, 841, 842,
	843, 844, 845, 847, 846, 850, 851, 849, 848, 853,
	852, 750, 196, 220, 364, 0, 449, 287, 637, 606,
	601, 205, 222, 916, 261, 917, 0, 0, 921, 0,
	0, 0, 923, 922, 0, 924, 886, 885, 0, 0,
	918, 919, 0, 920, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 931, 932,
	933, 934, 935, 936, 937, 938, 298, 590, 620, 588,
	632, 614, 433, 374, 0, 0, 377, 280, 303, 318,
	0, 605, 496, 226, 461, 289, 250, 956, 0, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 392, 0, 372, 568, 569, 314, 520,
	0, 761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 749, 0, 0, 0,
	269, 754, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 203, 0, 481, 251, 373, 370, 575, 281, 272,
	268, 249, 315, 381, 423, 510, 417, 760, 366, 0,
	0, 491, 396, 0, 0, 0, 0, 0, 756, 757,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 247,
	323, 202, 408, 492, 285, 0, 95, 0, 0, 957,
	941, 1071, 907, 945, 958, 959, 960, 961, 946, 0,
	237, 947, 948, 244, 949, 0, 906, 791, 793, 792,
	856, 857, 858, 859, 860, 861, 862, 789, 954, 962,
	963, 0, 264, 319, 271, 263, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 746, 0, 759, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 743, 744, 0,
	0, 0, 0, 901, 0, 745, 0, 0, 753, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 2075, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 448, 900, 0,
	0, 616, 0, 0, 898, 0, 0, 0, 0, 361,
	0, 328, 197, 224, 0, 0, 407, 456, 468, 0,
	0, 0, 951, 0, 466, 421, 594, 232, 283, 453,
	427, 464, 435, 286, 0, 0, 465, 368, 577, 445,
	591, 617, 618, 262, 401, 603, 514, 611, 635, 225,
	259, 415, 499, 597, 488, 393, 573, 574, 327, 487,
	294, 201, 365, 623, 223, 474, 367, 241, 230, 579,
	600, 0, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	952, 953, 255, 639, 797, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 805,
	806, 279, 305, 882, 881, 880, 304, 306, 878, 879,
	877, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 888, 910, 899, 765, 766, 889, 890,
	914, 891, 768, 769, 911, 912, 762, 763, 767, 913,
	915, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 902,
	752, 751, 0, 758, 0, 787, 788, 790, 794, 795,
	796, 807, 854, 855, 863, 865, 866, 864, 867, 868,
	869, 872, 873, 874, 875, 870, 871, 876, 770, 774,
	771, 772, 773, 785, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 786, 925, 926, 927, 928, 929,
	930, 800, 804, 803, 801, 802, 798, 799, 826, 825,
	827, 828, 829, 830, 831, 832, 834, 833, 835, 836,
	837, 838, 839, 840, 808, 809, 812, 813, 811, 810,
	814, 823, 824, 815, 816, 817, 818, 819, 820, 822,
	821, 841, 842, 843, 844, 845, 847, 846, 850, 851,
	849, 848, 853, 852, 750, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 916, 261, 917, 0,
	0, 921, 0, 0, 0, 923, 922, 0, 924, 886,
	885, 0, 0, 918, 919, 0, 920, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 931, 932, 933, 934, 935, 936, 937, 938, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	956, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 0, 709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	1122, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 1121, 616, 0, 0, 0, 0, 0,
	1118, 1119, 361, 1079, 328, 197, 224, 1112, 1116, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 0, 288, 451, 630, 212, 509,
	589, 238, 478, 0, 0, 638, 246, 498, 214, 586,
	497, 389, 324, 325, 213, 0, 452, 267, 292, 0,
	0, 257, 410, 581, 582, 255, 639, 227, 610, 219,
	0, 609, 403, 576, 587, 390, 379, 218, 585, 388,
	378, 332, 351, 352, 279, 305, 442, 371, 443, 304,
	306, 399, 398, 400, 206, 598, 0, 207, 0, 493,
	599, 640, 447, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 441, 437, 446,
	0, 571, 592, 604, 615, 621, 622, 624, 625, 626,
	627, 628, 631, 629, 402, 309, 489, 331, 369, 0,
	0, 420, 467, 239, 596, 490, 199, 0, 0, 0,
	0, 253, 254, 0, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 636, 500, 506, 501, 502, 503, 504, 505,
	0, 507, 0, 0, 0, 0, 0, 0, 583, 584,
	659, 380, 480, 593, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 248, 209, 386, 394, 570, 310, 215, 216, 217,
	516, 517, 518, 519, 607, 608, 612, 204, 457, 458,
	459, 460, 291, 602, 307, 463, 462, 329, 330, 375,
	444, 532, 534, 545, 549, 551, 553, 559, 562, 533,
	535, 546, 550, 552, 554, 560, 563, 522, 524, 526,
	528, 541, 540, 537, 565, 566, 543, 548, 527, 539,
	544, 557, 564, 561, 521, 525, 529, 538, 556, 555,
	536, 547, 558, 542, 530, 523, 531, 0, 196, 220,
	364, 0, 449, 287, 637, 606, 601, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 392,
	0, 372, 568, 569, 314, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 203, 0, 481,
	251, 373, 370, 575, 281, 272, 268, 249, 315, 381,
	423, 510, 417, 0, 366, 0, 0, 491, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 247, 323, 202, 408, 492,
	285, 0, 0, 0, 0, 1680, 941, 0, 0, 1677,
	0, 0, 0, 0, 1675, 0, 237, 1676, 1674, 244,
	1679, 0, 906, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 448, 0, 0, 0, 616, 0, 0,
	0, 0, 0, 0, 0, 361, 0, 328, 197, 224,
	0, 0, 407, 456, 468, 0, 0, 0, 252, 0,
	466, 421, 594, 232, 283, 453, 427, 464, 435, 286,
	0, 0, 465, 368, 577, 445, 591, 617, 618, 262,
	401, 603, 514, 611, 635, 225, 259, 415, 499, 597,
	488, 393, 573, 574, 327, 487, 294, 201, 365, 623,
	223, 474, 367, 241, 230, 579, 600, 0, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 0, 392, 372, 568, 569, 314, 86, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 203, 0, 481, 251, 373, 370, 575, 281, 272,
	268, 249, 315, 381, 423, 510, 417, 0, 366, 0,
	0, 491, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 247,
	323, 202, 408, 492, 285, 0, 95, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 448, 0, 0,
	0, 616, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 328, 197, 224, 0, 0, 407, 456, 468, 0,
	0, 0, 252, 0, 466, 421, 594, 232, 283, 453,
	427, 464, 435, 286, 0, 0, 465, 368, 577, 445,
	591, 617, 618, 262, 401, 603, 514, 611, 635, 225,
	259, 415, 499, 597, 488, 393, 573, 574, 327, 487,
	294, 201, 365, 623, 223, 474, 367, 241, 230, 579,
	600, 0, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 94, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 2378, 0, 0, 2377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 1741, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 1743, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 1745, 709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 1453, 0, 1454, 1455, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 0, 288, 451, 630, 212, 509,
	589, 238, 478, 0, 0, 638, 246, 498, 214, 586,
	497, 389, 324, 325, 213, 0, 452, 267, 292, 0,
	0, 257, 410, 581, 582, 255, 639, 227, 610, 219,
	0, 609, 403, 576, 587, 390, 379, 218, 585, 388,
	378, 332, 351, 352, 279, 305, 442, 371, 443, 304,
	306, 399, 398, 400, 206, 598, 0, 207, 0, 493,
	599, 640, 447, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 441, 437, 446,
	0, 571, 592, 604, 615, 621, 622, 624, 625, 626,
	627, 628, 631, 629, 402, 309, 489, 331, 369, 0,
	0, 420, 467, 239, 596, 490, 199, 0, 0, 0,
	0, 253, 254, 0, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 636, 500, 506, 501, 502, 503, 504, 505,
	0, 507, 0, 0, 0, 0, 0, 0, 583, 584,
	659, 380, 480, 593, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 248, 209, 386, 394, 570, 310, 215, 216, 217,
	516, 517, 518, 519, 607, 608, 612, 204, 457, 458,
	459, 460, 291, 602, 307, 463, 462, 329, 330, 375,
	444, 532, 534, 545, 549, 551, 553, 559, 562, 533,
	535, 546, 550, 552, 554, 560, 563, 522, 524, 526,
	528, 541, 540, 537, 565, 566, 543, 548, 527, 539,
	544, 557, 564, 561, 521, 525, 529, 538, 556, 555,
	536, 547, 558, 542, 530, 523, 531, 0, 196, 220,
	364, 0, 449, 287, 637, 606, 601, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 0,
	392, 372, 568, 569, 314, 86, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 95, 0, 1718, 0, 709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 0, 288,
	451, 630, 212, 509, 589, 238, 478, 0, 0, 638,
	246, 498, 214, 586, 497, 389, 324, 325, 213, 0,
	452, 267, 292, 0, 0, 257, 410, 581, 582, 255,
	639, 227, 610, 219, 0, 609, 403, 576, 587, 390,
	379, 218, 585, 388, 378, 332, 351, 352, 279, 305,
	442, 371, 443, 304, 306, 399, 398, 400, 206, 598,
	0, 207, 0, 493, 599, 640, 447, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 441, 437, 446, 0, 571, 592, 604, 615, 621,
	622, 624, 625, 626, 627, 628, 631, 629, 402, 309,
	489, 331, 369, 0, 0, 420, 467, 239, 596, 490,
	199, 0, 0, 0, 0, 253, 254, 0, 567, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 636, 500, 506, 501,
	502, 503, 504, 505, 0, 507, 0, 0, 0, 0,
	0, 0, 583, 584, 659, 380, 480, 593, 333, 345,
	348, 338, 357, 0, 358, 334, 335, 340, 342, 343,
	344, 349, 350, 354, 360, 248, 209, 386, 394, 570,
	310, 215, 216, 217, 516, 517, 518, 519, 607, 608,
	612, 204, 457, 458, 459, 460, 291, 602, 307, 463,
	462, 329, 330, 375, 444, 532, 534, 545, 549, 551,
	553, 559, 562, 533, 535, 546, 550, 552, 554, 560,
	563, 522, 524, 526, 528, 541, 540, 537, 565, 566,
	543, 548, 527, 539, 544, 557, 564, 561, 521, 525,
	529, 538, 556, 555, 536, 547, 558, 542, 530, 523,
	531, 0, 196, 220, 364, 94, 449, 287, 637, 606,
	601, 205, 222, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 299, 300,
	439, 440, 312, 313, 633, 634, 298, 590, 620, 588,
	632, 614, 433, 374, 0, 0, 377, 280, 303, 318,
	0, 605, 496, 226, 461, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 392, 0, 372, 568, 569, 314, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 203, 0, 481, 251, 373, 370, 575, 281, 272,
	268, 249, 315, 381, 423, 510, 417, 0, 366, 0,
	0, 491, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 247,
	323, 202, 408, 492, 285, 0, 95, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 448, 0, 0,
	0, 616, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 328, 197, 224, 0, 0, 407, 456, 468, 0,
	0, 0, 252, 0, 466, 421, 594, 232, 283, 453,
	427, 464, 435, 286, 0, 0, 465, 368, 577, 445,
	591, 617, 618, 262, 401, 603, 514, 611, 635, 225,
	259, 415, 499, 597, 488, 393, 573, 574, 327, 487,
	294, 201, 365, 623, 223, 474, 367, 241, 230, 579,
	600, 0, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 2378, 0, 0, 2377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 2326, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 1924, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 2324, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 0, 288, 451, 630, 212, 509,
	589, 238, 478, 0, 0, 638, 246, 498, 214, 586,
	497, 389, 324, 325, 213, 0, 452, 267, 292, 0,
	0, 257, 410, 581, 582, 255, 639, 227, 610, 219,
	0, 609, 403, 576, 587, 390, 379, 218, 585, 388,
	378, 332, 351, 352, 279, 305, 442, 371, 443, 304,
	306, 399, 398, 400, 206, 598, 0, 207, 0, 493,
	599, 640, 447, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 441, 437, 446,
	0, 571, 592, 604, 615, 621, 622, 624, 625, 626,
	627, 628, 631, 629, 402, 309, 489, 331, 369, 0,
	0, 420, 467, 239, 596, 490, 199, 0, 0, 0,
	0, 253, 254, 0, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 636, 500, 506, 501, 502, 503, 504, 505,
	0, 507, 0, 0, 0, 0, 0, 0, 583, 584,
	659, 380, 480, 593, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 248, 209, 386, 394, 570, 310, 215, 216, 217,
	516, 517, 518, 519, 607, 608, 612, 204, 457, 458,
	459, 460, 291, 602, 307, 463, 462, 329, 330, 375,
	444, 532, 534, 545, 549, 551, 553, 559, 562, 533,
	535, 546, 550, 552, 554, 560, 563, 522, 524, 526,
	528, 541, 540, 537, 565, 566, 543, 548, 527, 539,
	544, 557, 564, 561, 521, 525, 529, 538, 556, 555,
	536, 547, 558, 542, 530, 523, 531, 0, 196, 220,
	364, 0, 449, 287, 637, 606, 601, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 392,
	0, 372, 568, 569, 314, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 203, 0, 481,
	251, 373, 370, 575, 281, 272, 268, 249, 315, 381,
	423, 510, 417, 0, 366, 0, 0, 491, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 247, 323, 202, 408, 492,
	285, 0, 0, 0, 0, 0, 709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 1073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 448, 0, 0, 0, 616, 0, 0,
	0, 0, 0, 0, 0, 361, 1079, 328, 197, 224,
	1077, 0, 407, 456, 468, 0, 0, 0, 252, 0,
	466, 421, 594, 232, 283, 453, 427, 464, 435, 286,
	0, 0, 465, 368, 577, 445, 591, 617, 618, 262,
	401, 603, 514, 611, 635, 225, 259, 415, 499, 597,
	488, 393, 573, 574, 327, 487, 294, 201, 365, 623,
	223, 474, 367, 241, 230, 579, 600, 0, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 2326, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 1924, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	0, 288, 451, 630, 212, 509, 589, 238, 478, 0,
	0, 638, 246, 498, 214, 586, 497, 389, 324, 325,
	213, 0, 452, 267, 292, 0, 0, 257, 410, 581,
	582, 255, 639, 227, 610, 219, 0, 609, 403, 576,
	587, 390, 379, 218, 585, 388, 378, 332, 351, 352,
	279, 305, 442, 371, 443, 304, 306, 399, 398, 400,
	206, 598, 0, 207, 0, 493, 599, 640, 447, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 441, 437, 446, 0, 571, 592, 604,
	615, 621, 622, 624, 625, 626, 627, 628, 631, 629,
	402, 309, 489, 331, 369, 0, 0, 420, 467, 239,
	596, 490, 199, 0, 0, 0, 0, 253, 254, 0,
	567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 636, 500,
	506, 501, 502, 503, 504, 505, 0, 507, 0, 0,
	0, 0, 0, 0, 583, 584, 659, 380, 480, 593,
	333, 345, 348, 338, 357, 0, 358, 334, 335, 340,
	342, 343, 344, 349, 350, 354, 360, 248, 209, 386,
	394, 570, 310, 215, 216, 217, 516, 517, 518, 519,
	607, 608, 612, 204, 457, 458, 459, 460, 291, 602,
	307, 463, 462, 329, 330, 375, 444, 532, 534, 545,
	549, 551, 553, 559, 562, 533, 535, 546, 550, 552,
	554, 560, 563, 522, 524, 526, 528, 541, 540, 537,
	565, 566, 543, 548, 527, 539, 544, 557, 564, 561,
	521, 525, 529, 538, 556, 555, 536, 547, 558, 542,
	530, 523, 531, 0, 196, 220, 364, 0, 449, 287,
	637, 606, 601, 205, 222, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 392, 0, 372, 568, 569,
	314, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 203, 0, 481, 251, 373, 370, 575,
	281, 272, 268, 249, 315, 381, 423, 510, 417, 0,
	366, 0, 0, 491, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 247, 323, 202, 408, 492, 285, 0, 0, 0,
	1718, 0, 709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 448,
	0, 0, 0, 616, 0, 0, 0, 3908, 0, 0,
	0, 361, 0, 328, 197, 224, 0, 0, 407, 456,
	468, 0, 0, 0, 252, 0, 466, 421, 594, 232,
	283, 453, 427, 464, 435, 286, 0, 0, 465, 368,
	577, 445, 591, 617, 618, 262, 401, 603, 514, 611,
	635, 225, 259, 415, 499, 597, 488, 393, 573, 574,
	327, 487, 294, 201, 365, 623, 223, 474, 367, 241,
	230, 579, 600, 0, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 2086, 709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 0, 288, 451, 630,
	212, 509, 589, 238, 478, 0, 0, 638, 246, 498,
	214, 586, 497, 389, 324, 325, 213, 0, 452, 267,
	292, 0, 0, 257, 410, 581, 582, 255, 639, 227,
	610, 219, 0, 609, 403, 576, 587, 390, 379, 218,
	585, 388, 378, 332, 351, 352, 279, 305, 442, 371,
	443, 304, 306, 399, 398, 400, 206, 598, 0, 207,
	0, 493, 599, 640, 447, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 441,
	437, 446, 0, 571, 592, 604, 615, 621, 622, 624,
	625, 626, 627, 628, 631, 629, 402, 309, 489, 331,
	369, 0, 0, 420, 467, 239, 596, 490, 199, 0,
	0, 0, 0, 253, 254, 0, 567, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 636, 500, 506, 501, 502, 503,
	504, 505, 0, 507, 0, 0, 0, 0, 0, 0,
	583, 584, 659, 380, 480, 593, 333, 345, 348, 338,
	357, 0, 358, 334, 335, 340, 342, 343, 344, 349,
	350, 354, 360, 248, 209, 386, 394, 570, 310, 215,
	216, 217, 516, 517, 518, 519, 607, 608, 612, 204,
	457, 458, 459, 460, 291, 602, 307, 463, 462, 329,
	330, 375, 444, 532, 534, 545, 549, 551, 553, 559,
	562, 533, 535, 546, 550, 552, 554, 560, 563, 522,
	524, 526, 528, 541, 540, 537, 565, 566, 543, 548,
	527, 539, 544, 557, 564, 561, 521, 525, 529, 538,
	556, 555, 536, 547, 558, 542, 530, 523, 531, 0,
	196, 220, 364, 0, 449, 287, 637, 606, 601, 205,
	222, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 299, 300, 439, 440,
	312, 313, 633, 634, 298, 590, 620, 588, 632, 614,
	433, 374, 0, 0, 377, 280, 303, 318, 0, 605,
	496, 226, 461, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 392, 0, 372, 568, 569, 314, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 203,
	0, 481, 251, 373, 370, 575, 281, 272, 268, 249,
	315, 381, 423, 510, 417, 0, 366, 0, 0, 491,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 247, 323, 202,
	408, 492, 285, 0, 0, 0, 0, 2824, 709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 448, 0, 0, 0, 616,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 328,
	197, 224, 0, 0, 407, 456, 468, 0, 0, 0,
	252, 0, 466, 421, 594, 232, 283, 453, 427, 464,
	435, 286, 0, 0, 465, 368, 577, 445, 591, 617,
	618, 262, 401, 603, 514, 611, 635, 225, 259, 415,
	499, 597, 488, 393, 573, 574, 327, 487, 294, 201,
	365, 623, 223, 474, 367, 241, 230, 579, 600, 0,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 709, 0, 0, 0, 0, 2809, 0, 0, 0,
	0, 237, 0, 0, 244, 2810, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 0, 288, 451, 630, 212, 509, 589, 238,
	478, 0, 0, 638, 246, 498, 214, 586, 497, 389,
	324, 325, 213, 0, 452, 267, 292, 0, 0, 257,
	410, 581, 582, 255, 639, 227, 610, 219, 0, 609,
	403, 576, 587, 390, 379, 218, 585, 388, 378, 332,
	351, 352, 279, 305, 442, 371, 443, 304, 306, 399,
	398, 400, 206, 598, 0, 207, 0, 493, 599, 640,
	447, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 441, 437, 446, 0, 571,
	592, 604, 615, 621, 622, 624, 625, 626, 627, 628,
	631, 629, 402, 309, 489, 331, 369, 0, 0, 420,
	467, 239, 596, 490, 199, 0, 0, 0, 0, 253,
	254, 0, 567, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	636, 500, 506, 501, 502, 503, 504, 505, 0, 507,
	0, 0, 0, 0, 0, 0, 583, 584, 659, 380,
	480, 593, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 248,
	209, 386, 394, 570, 310, 215, 216, 217, 516, 517,
	518, 519, 607, 608, 612, 204, 457, 458, 459, 460,
	291, 602, 307, 463, 462, 329, 330, 375, 444, 532,
	534, 545, 549, 551, 553, 559, 562, 533, 535, 546,
	550, 552, 554, 560, 563, 522, 524, 526, 528, 541,
	540, 537, 565, 566, 543, 548, 527, 539, 544, 557,
	564, 561, 521, 525, 529, 538, 556, 555, 536, 547,
	558, 542, 530, 523, 531, 0, 196, 220, 364, 0,
	449, 287, 637, 606, 601, 205, 222, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 299, 300, 439, 440, 312, 313, 633, 634,
	298, 590, 620, 588, 632, 614, 433, 374, 0, 0,
	377, 280, 303, 318, 0, 605, 496, 226, 461, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 392, 0, 372,
	568, 569, 314, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 1764, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 203, 0, 481, 251, 373,
	370, 575, 281, 272, 268, 249, 315, 381, 423, 510,
	417, 0, 366, 0, 0, 491, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 247, 323, 202, 408, 492, 285, 0,
	0, 0, 0, 1763, 709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 448, 0, 0, 0, 616, 0, 0, 0, 0,
	0, 0, 0, 361, 0, 328, 197, 224, 0, 0,
	407, 456, 468, 0, 0, 0, 252, 0, 466, 421,
	594, 232, 283, 453, 427, 464, 435, 286, 0, 0,
	465, 368, 577, 445, 591, 617, 618, 262, 401, 603,
	514, 611, 635, 225, 259, 415, 499, 597, 488, 393,
	573, 574, 327, 487, 294, 201, 365, 623, 223, 474,
	367, 241, 230, 579, 600, 0, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 0, 711, 712, 713,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 0, 288,
	451, 630, 212, 509, 589, 238, 478, 0, 0, 638,
	246, 498, 214, 586, 497, 389, 324, 325, 213, 0,
	452, 267, 292, 0, 0, 257, 410, 581, 582, 255,
	639, 227, 610, 219, 0, 609, 403, 576, 587, 390,
	379, 218, 585, 388, 378, 332, 351, 352, 279, 305,
	442, 371, 443, 304, 306, 399, 398, 400, 206, 598,
	0, 207, 0, 493, 599, 640, 447, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 441, 437, 446, 0, 571, 592, 604, 615, 621,
	622, 624, 625, 626, 627, 628, 631, 629, 402, 309,
	489, 331, 369, 0, 0, 420, 467, 239, 596, 490,
	199, 0, 0, 0, 0, 253, 254, 0, 567, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 636, 500, 506, 501,
	502, 503, 504, 505, 0, 507, 0, 0, 0, 0,
	0, 0, 583, 584, 659, 380, 480, 593, 333, 345,
	348, 338, 357, 0, 358, 334, 335, 340, 342, 343,
	344, 349, 350, 354, 360, 248, 209, 386, 394, 570,
	310, 215, 216, 217, 516, 517, 518, 519, 607, 608,
	612, 204, 457, 458, 459, 460, 291, 602, 307, 463,
	462, 329, 330, 375, 444, 532, 534, 545, 549, 551,
	553, 559, 562, 533, 535, 546, 550, 552, 554, 560,
	563, 522, 524, 526, 528, 541, 540, 537, 565, 566,
	543, 548, 527, 539, 544, 557, 564, 561, 521, 525,
	529, 538, 556, 555, 536, 547, 558, 542, 530, 523,
	531, 0, 196, 220, 364, 0, 449, 287, 637, 606,
	601, 205, 222, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 299, 300,
	439, 440, 312, 313, 633, 634, 298, 590, 620, 588,
	632, 614, 433, 374, 0, 0, 377, 280, 303, 318,
	0, 605, 496, 226, 461, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 392, 0, 372, 568, 569, 314, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 203, 0, 481, 251, 373, 370, 575, 281, 272,
	268, 249, 315, 381, 423, 510, 417, 0, 366, 0,
	0, 491, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 247,
	323, 202, 408, 492, 285, 0, 0, 0, 0, 0,
	709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 448, 0, 0,
	0, 616, 0, 0, 0, 4031, 0, 0, 0, 361,
	0, 328, 197, 224, 0, 0, 407, 456, 468, 0,
	0, 0, 252, 0, 466, 421, 594, 232, 283, 453,
	427, 464, 435, 286, 0, 0, 465, 368, 577, 445,
	591, 617, 618, 262, 401, 603, 514, 611, 635, 225,
	259, 415, 499, 597, 488, 393, 573, 574, 327, 487,
	294, 201, 365, 623, 223, 474, 367, 241, 230, 579,
	600, 0, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 1924, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 0, 288, 451, 630, 212, 509,
	589, 238, 478, 0, 0, 638, 246, 498, 214, 586,
	497, 389, 324, 325, 213, 0, 452, 267, 292, 0,
	0, 257, 410, 581, 582, 255, 639, 227, 610, 219,
	0, 609, 403, 576, 587, 390, 379, 218, 585, 388,
	378, 332, 351, 352, 279, 305, 442, 371, 443, 304,
	306, 399, 398, 400, 206, 598, 0, 207, 0, 493,
	599, 640, 447, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 441, 437, 446,
	0, 571, 592, 604, 615, 621, 622, 624, 625, 626,
	627, 628, 631, 629, 402, 309, 489, 331, 369, 0,
	0, 420, 467, 239, 596, 490, 199, 0, 0, 0,
	0, 253, 254, 0, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 636, 500, 506, 501, 502, 503, 504, 505,
	0, 507, 0, 0, 0, 0, 0, 0, 583, 584,
	659, 380, 480, 593, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 248, 209, 386, 394, 570, 310, 215, 216, 217,
	516, 517, 518, 519, 607, 608, 612, 204, 457, 458,
	459, 460, 291, 602, 307, 463, 462, 329, 330, 375,
	444, 532, 534, 545, 549, 551, 553, 559, 562, 533,
	535, 546, 550, 552, 554, 560, 563, 522, 524, 526,
	528, 541, 540, 537, 565, 566, 543, 548, 527, 539,
	544, 557, 564, 561, 521, 525, 529, 538, 556, 555,
	536, 547, 558, 542, 530, 523, 531, 0, 196, 220,
	364, 0, 449, 287, 637, 606, 601, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 392,
	0, 372, 568, 569, 314, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 203, 0, 481,
	251, 373, 370, 575, 281, 272, 268, 249, 315, 381,
	423, 510, 417, 0, 366, 0, 0, 491, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 247, 323, 202, 408, 492,
	285, 0, 0, 0, 0, 0, 709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 448, 0, 0, 0, 616, 0, 0,
	0, 3908, 0, 0, 0, 361, 0, 328, 197, 224,
	0, 0, 407, 456, 468, 0, 0, 0, 252, 0,
	466, 421, 594, 232, 283, 453, 427, 464, 435, 286,
	0, 0, 465, 368, 577, 445, 591, 617, 618, 262,
	401, 603, 514, 611, 635, 225, 259, 415, 499, 597,
	488, 393, 573, 574, 327, 487, 294, 201, 365, 623,
	223, 474, 367, 241, 230, 579, 600, 0, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 95, 0, 0, 0, 709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	0, 288, 451, 630, 212, 509, 589, 238, 478, 0,
	0, 638, 246, 498, 214, 586, 497, 389, 324, 325,
	213, 0, 452, 267, 292, 0, 0, 257, 410, 581,
	582, 255, 639, 227, 610, 219, 0, 609, 403, 576,
	587, 390, 379, 218, 585, 388, 378, 332, 351, 352,
	279, 305, 442, 371, 443, 304, 306, 399, 398, 400,
	206, 598, 0, 207, 0, 493, 599, 640, 447, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 441, 437, 446, 0, 571, 592, 604,
	615, 621, 622, 624, 625, 626, 627, 628, 631, 629,
	402, 309, 489, 331, 369, 0, 0, 420, 467, 239,
	596, 490, 199, 0, 0, 0, 0, 253, 254, 0,
	567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 636, 500,
	506, 501, 502, 503, 504, 505, 0, 507, 0, 0,
	0, 0, 0, 0, 583, 584, 659, 380, 480, 593,
	333, 345, 348, 338, 357, 0, 358, 334, 335, 340,
	342, 343, 344, 349, 350, 354, 360, 248, 209, 386,
	394, 570, 310, 215, 216, 217, 516, 517, 518, 519,
	607, 608, 612, 204, 457, 458, 459, 460, 291, 602,
	307, 463, 462, 329, 330, 375, 444, 532, 534, 545,
	549, 551, 553, 559, 562, 533, 535, 546, 550, 552,
	554, 560, 563, 522, 524, 526, 528, 541, 540, 537,
	565, 566, 543, 548, 527, 539, 544, 557, 564, 561,
	521, 525, 529, 538, 556, 555, 536, 547, 558, 542,
	530, 523, 531, 0, 196, 220, 364, 0, 449, 287,
	637, 606, 601, 205, 222, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 392, 0, 372, 568, 569,
	314, 520, 0, 0, 0, 0, 2379, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 203, 0, 481, 251, 373, 370, 575,
	281, 272, 268, 249, 315, 381, 423, 510, 417, 0,
	366, 0, 0, 491, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 247, 323, 202, 408, 492, 285, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 448,
	0, 0, 0, 616, 0, 0, 0, 0, 0, 0,
	0, 361, 0, 328, 197, 224, 0, 0, 407, 456,
	468, 0, 0, 0, 252, 0, 466, 421, 594, 232,
	283, 453, 427, 464, 435, 286, 0, 0, 465, 368,
	577, 445, 591, 617, 618, 262, 401, 603, 514, 611,
	635, 225, 259, 415, 499, 597, 488, 393, 573, 574,
	327, 487, 294, 201, 365, 623, 223, 474, 367, 241,
	230, 579, 600, 0, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 1745, 709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 0, 288, 451, 630,
	212, 509, 589, 238, 478, 0, 0, 638, 246, 498,
	214, 586, 497, 389, 324, 325, 213, 0, 452, 267,
	292, 0, 0, 257, 410, 581, 582, 255, 639, 227,
	610, 219, 0, 609, 403, 576, 587, 390, 379, 218,
	585, 388, 378, 332, 351, 352, 279, 305, 442, 371,
	443, 304, 306, 399, 398, 400, 206, 598, 0, 207,
	0, 493, 599, 640, 447, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 441,
	437, 446, 0, 571, 592, 604, 615, 621, 622, 624,
	625, 626, 627, 628, 631, 629, 402, 309, 489, 331,
	369, 0, 0, 420, 467, 239, 596, 490, 199, 0,
	0, 0, 0, 253, 254, 0, 567, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 636, 500, 506, 501, 502, 503,
	504, 505, 0, 507, 0, 0, 0, 0, 0, 0,
	583, 584, 659, 380, 480, 593, 333, 345, 348, 338,
	357, 0, 358, 334, 335, 340, 342, 343, 344, 349,
	350, 354, 360, 248, 209, 386, 394, 570, 310, 215,
	216, 217, 516, 517, 518, 519, 607, 608, 612, 204,
	457, 458, 459, 460, 291, 602, 307, 463, 462, 329,
	330, 375, 444, 532, 534, 545, 549, 551, 553, 559,
	562, 533, 535, 546, 550, 552, 554, 560, 563, 522,
	524, 526, 528, 541, 540, 537, 565, 566, 543, 548,
	527, 539, 544, 557, 564, 561, 521, 525, 529, 538,
	556, 555, 536, 547, 558, 542, 530, 523, 531, 0,
	196, 220, 364, 0, 449, 287, 637, 606, 601, 205,
	222, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 299, 300, 439, 440,
	312, 313, 633, 634, 298, 590, 620, 588, 632, 614,
	433, 374, 0, 0, 377, 280, 303, 318, 0, 605,
	496, 226, 461, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 392, 0, 372, 568, 569, 314, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 203,
	0, 481, 251, 373, 370, 575, 281, 272, 268, 249,
	315, 381, 423, 510, 417, 0, 366, 0, 0, 491,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 247, 323, 202,
	408, 492, 285, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 448, 0, 0, 0, 616,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 328,
	197, 224, 0, 0, 407, 456, 468, 0, 0, 0,
	252, 0, 466, 421, 594, 232, 283, 453, 427, 464,
	435, 286, 0, 0, 465, 368, 577, 445, 591, 617,
	618, 262, 401, 603, 514, 611, 635, 225, 259, 415,
	499, 597, 488, 393, 573, 574, 327, 487, 294, 201,
	365, 623, 223, 474, 367, 241, 230, 579, 600, 0,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 2038, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	2029, 709, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 0, 288, 451, 630, 212, 509, 589, 238,
	478, 0, 0, 638, 246, 498, 214, 586, 497, 389,
	324, 325, 213, 0, 452, 267, 292, 0, 0, 257,
	410, 581, 582, 255, 639, 227, 610, 219, 0, 609,
	403, 576, 587, 390, 379, 218, 585, 388, 378, 332,
	351, 352, 279, 305, 442, 371, 443, 304, 306, 399,
	398, 400, 206, 598, 0, 207, 0, 493, 599, 640,
	447, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 441, 437, 446, 0, 571,
	592, 604, 615, 621, 622, 624, 625, 626, 627, 628,
	631, 629, 402, 309, 489, 331, 369, 0, 0, 420,
	467, 239, 596, 490, 199, 0, 0, 0, 0, 253,
	254, 0, 567, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	636, 500, 506, 501, 502, 503, 504, 505, 0, 507,
	0, 0, 0, 0, 0, 0, 583, 584, 659, 380,
	480, 593, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 248,
	209, 386, 394, 570, 310, 215, 216, 217, 516, 517,
	518, 519, 607, 608, 612, 204, 457, 458, 459, 460,
	291, 602, 307, 463, 462, 329, 330, 375, 444, 532,
	534, 545, 549, 551, 553, 559, 562, 533, 535, 546,
	550, 552, 554, 560, 563, 522, 524, 526, 528, 541,
	540, 537, 565, 566, 543, 548, 527, 539, 544, 557,
	564, 561, 521, 525, 529, 538, 556, 555, 536, 547,
	558, 542, 530, 523, 531, 0, 196, 220, 364, 0,
	449, 287, 637, 606, 601, 205, 222, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 299, 300, 439, 440, 312, 313, 633, 634,
	298, 590, 620, 588, 632, 614, 433, 374, 0, 0,
	377, 280, 303, 318, 0, 605, 496, 226, 461, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 392, 0, 372,
	568, 569, 314, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 1891, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 203, 0, 481, 251, 373,
	370, 575, 281, 272, 268, 249, 315, 381, 423, 510,
	417, 0, 366, 0, 0, 491, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 247, 323, 202, 408, 492, 285, 0,
	0, 0, 0, 0, 709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 448, 0, 0, 0, 616, 0, 0, 0, 0,
	0, 0, 0, 361, 0, 328, 197, 224, 0, 0,
	407, 456, 468, 0, 0, 0, 252, 0, 466, 421,
	594, 232, 283, 453, 427, 464, 435, 286, 0, 0,
	465, 368, 577, 445, 591, 617, 618, 262, 401, 603,
	514, 611, 635, 225, 259, 415, 499, 597, 488, 393,
	573, 574, 327, 487, 294, 201, 365, 623, 223, 474,
	367, 241, 230, 579, 600, 0, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	1889, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 0, 709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 0, 288,
	451, 630, 212, 509, 589, 238, 478, 0, 0, 638,
	246, 498, 214, 586, 497, 389, 324, 325, 213, 0,
	452, 267, 292, 0, 0, 257, 410, 581, 582, 255,
	639, 227, 610, 219, 0, 609, 403, 576, 587, 390,
	379, 218, 585, 388, 378, 332, 351, 352, 279, 305,
	442, 371, 443, 304, 306, 399, 398, 400, 206, 598,
	0, 207, 0, 493, 599, 640, 447, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 441, 437, 446, 0, 571, 592, 604, 615, 621,
	622, 624, 625, 626, 627, 628, 631, 629, 402, 309,
	489, 331, 369, 0, 0, 420, 467, 239, 596, 490,
	199, 0, 0, 0, 0, 253, 254, 0, 567, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 636, 500, 506, 501,
	502, 503, 504, 505, 0, 507, 0, 0, 0, 0,
	0, 0, 583, 584, 659, 380, 480, 593, 333, 345,
	348, 338, 357, 0, 358, 334, 335, 340, 342, 343,
	344, 349, 350, 354, 360, 248, 209, 386, 394, 570,
	310, 215, 216, 217, 516, 517, 518, 519, 607, 608,
	612, 204, 457, 458, 459, 460, 291, 602, 307, 463,
	462, 329, 330, 375, 444, 532, 534, 545, 549, 551,
	553, 559, 562, 533, 535, 546, 550, 552, 554, 560,
	563, 522, 524, 526, 528, 541, 540, 537, 565, 566,
	543, 548, 527, 539, 544, 557, 564, 561, 521, 525,
	529, 538, 556, 555, 536, 547, 558, 542, 530, 523,
	531, 0, 196, 220, 364, 0, 449, 287, 637, 606,
	601, 205, 222, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 299, 300,
	439, 440, 312, 313, 633, 634, 298, 590, 620, 588,
	632, 614, 433, 374, 0, 0, 377, 280, 303, 318,
	0, 605, 496, 226, 461, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 392, 0, 372, 568, 569, 314, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 1887, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 203, 0, 481, 251, 373, 370, 575, 281, 272,
	268, 249, 315, 381, 423, 510, 417, 0, 366, 0,
	0, 491, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 247,
	323, 202, 408, 492, 285, 0, 0, 0, 0, 0,
	709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 448, 0, 0,
	0, 616, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 328, 197, 224, 0, 0, 407, 456, 468, 0,
	0, 0, 252, 0, 466, 421, 594, 232, 283, 453,
	427, 464, 435, 286, 0, 0, 465, 368, 577, 445,
	591, 617, 618, 262, 401, 603, 514, 611, 635, 225,
	259, 415, 499, 597, 488, 393, 573, 574, 327, 487,
	294, 201, 365, 623, 223, 474, 367, 241, 230, 579,
	600, 0, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 1885, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 0, 709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 0, 288, 451, 630, 212, 509,
	589, 238, 478, 0, 0, 638, 246, 498, 214, 586,
	497, 389, 324, 325, 213, 0, 452, 267, 292, 0,
	0, 257, 410, 581, 582, 255, 639, 227, 610, 219,
	0, 609, 403, 576, 587, 390, 379, 218, 585, 388,
	378, 332, 351, 352, 279, 305, 442, 371, 443, 304,
	306, 399, 398, 400, 206, 598, 0, 207, 0, 493,
	599, 640, 447, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 441, 437, 446,
	0, 571, 592, 604, 615, 621, 622, 624, 625, 626,
	627, 628, 631, 629, 402, 309, 489, 331, 369, 0,
	0, 420, 467, 239, 596, 490, 199, 0, 0, 0,
	0, 253, 254, 0, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 636, 500, 506, 501, 502, 503, 504, 505,
	0, 507, 0, 0, 0, 0, 0, 0, 583, 584,
	659, 380, 480, 593, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 248, 209, 386, 394, 570, 310, 215, 216, 217,
	516, 517, 518, 519, 607, 608, 612, 204, 457, 458,
	459, 460, 291, 602, 307, 463, 462, 329, 330, 375,
	444, 532, 534, 545, 549, 551, 553, 559, 562, 533,
	535, 546, 550, 552, 554, 560, 563, 522, 524, 526,
	528, 541, 540, 537, 565, 566, 543, 548, 527, 539,
	544, 557, 564, 561, 521, 525, 529, 538, 556, 555,
	536, 547, 558, 542, 530, 523, 531, 0, 196, 220,
	364, 0, 449, 287, 637, 606, 601, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 392,
	0, 372, 568, 569, 314, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 1883,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 203, 0, 481,
	251, 373, 370, 575, 281, 272, 268, 249, 315, 381,
	423, 510, 417, 0, 366, 0, 0, 491, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 247, 323, 202, 408, 492,
	285, 0, 0, 0, 0, 0, 709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 448, 0, 0, 0, 616, 0, 0,
	0, 0, 0, 0, 0, 361, 0, 328, 197, 224,
	0, 0, 407, 456, 468, 0, 0, 0, 252, 0,
	466, 421, 594, 232, 283, 453, 427, 464, 435, 286,
	0, 0, 465, 368, 577, 445, 591, 617, 618, 262,
	401, 603, 514, 611, 635, 225, 259, 415, 499, 597,
	488, 393, 573, 574, 327, 487, 294, 201, 365, 623,
	223, 474, 367, 241, 230, 579, 600, 0, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 1879, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	0, 288, 451, 630, 212, 509, 589, 238, 478, 0,
	0, 638, 246, 498, 214, 586, 497, 389, 324, 325,
	213, 0, 452, 267, 292, 0, 0, 257, 410, 581,
	582, 255, 639, 227, 610, 219, 0, 609, 403, 576,
	587, 390, 379, 218, 585, 388, 378, 332, 351, 352,
	279, 305, 442, 371, 443, 304, 306, 399, 398, 400,
	206, 598, 0, 207, 0, 493, 599, 640, 447, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 441, 437, 446, 0, 571, 592, 604,
	615, 621, 622, 624, 625, 626, 627, 628, 631, 629,
	402, 309, 489, 331, 369, 0, 0, 420, 467, 239,
	596, 490, 199, 0, 0, 0, 0, 253, 254, 0,
	567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 636, 500,
	506, 501, 502, 503, 504, 505, 0, 507, 0, 0,
	0, 0, 0, 0, 583, 584, 659, 380, 480, 593,
	333, 345, 348, 338, 357, 0, 358, 334, 335, 340,
	342, 343, 344, 349, 350, 354, 360, 248, 209, 386,
	394, 570, 310, 215, 216, 217, 516, 517, 518, 519,
	607, 608, 612, 204, 457, 458, 459, 460, 291, 602,
	307, 463, 462, 329, 330, 375, 444, 532, 534, 545,
	549, 551, 553, 559, 562, 533, 535, 546, 550, 552,
	554, 560, 563, 522, 524, 526, 528, 541, 540, 537,
	565, 566, 543, 548, 527, 539, 544, 557, 564, 561,
	521, 525, 529, 538, 556, 555, 536, 547, 558, 542,
	530, 523, 531, 0, 196, 220, 364, 0, 449, 287,
	637, 606, 601, 205, 222, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 392, 0, 372, 568, 569,
	314, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 1877, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 203, 0, 481, 251, 373, 370, 575,
	281, 272, 268, 249, 315, 381, 423, 510, 417, 0,
	366, 0, 0, 491, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 247, 323, 202, 408, 492, 285, 0, 0, 0,
	0, 0, 709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 448,
	0, 0, 0, 616, 0, 0, 0, 0, 0, 0,
	0, 361, 0, 328, 197, 224, 0, 0, 407, 456,
	468, 0, 0, 0, 252, 0, 466, 421, 594, 232,
	283, 453, 427, 464, 435, 286, 0, 0, 465, 368,
	577, 445, 591, 617, 618, 262, 401, 603, 514, 611,
	635, 225, 259, 415, 499, 597, 488, 393, 573, 574,
	327, 487, 294, 201, 365, 623, 223, 474, 367, 241,
	230, 579, 600, 0, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 1875, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 0, 288, 451, 630,
	212, 509, 589, 238, 478, 0, 0, 638, 246, 498,
	214, 586, 497, 389, 324, 325, 213, 0, 452, 267,
	292, 0, 0, 257, 410, 581, 582, 255, 639, 227,
	610, 219, 0, 609, 403, 576, 587, 390, 379, 218,
	585, 388, 378, 332, 351, 352, 279, 305, 442, 371,
	443, 304, 306, 399, 398, 400, 206, 598, 0, 207,
	0, 493, 599, 640, 447, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 441,
	437, 446, 0, 571, 592, 604, 615, 621, 622, 624,
	625, 626, 627, 628, 631, 629, 402, 309, 489, 331,
	369, 0, 0, 420, 467, 239, 596, 490, 199, 0,
	0, 0, 0, 253, 254, 0, 567, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 636, 500, 506, 501, 502, 503,
	504, 505, 0, 507, 0, 0, 0, 0, 0, 0,
	583, 584, 659, 380, 480, 593, 333, 345, 348, 338,
	357, 0, 358, 334, 335, 340, 342, 343, 344, 349,
	350, 354, 360, 248, 209, 386, 394, 570, 310, 215,
	216, 217, 516, 517, 518, 519, 607, 608, 612, 204,
	457, 458, 459, 460, 291, 602, 307, 463, 462, 329,
	330, 375, 444, 532, 534, 545, 549, 551, 553, 559,
	562, 533, 535, 546, 550, 552, 554, 560, 563, 522,
	524, 526, 528, 541, 540, 537, 565, 566, 543, 548,
	527, 539, 544, 557, 564, 561, 521, 525, 529, 538,
	556, 555, 536, 547, 558, 542, 530, 523, 531, 0,
	196, 220, 364, 0, 449, 287, 637, 606, 601, 205,
	222, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 299, 300, 439, 440,
	312, 313, 633, 634, 298, 590, 620, 588, 632, 614,
	433, 374, 0, 0, 377, 280, 303, 318, 0, 605,
	496, 226, 461, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 392, 0, 372, 568, 569, 314, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 362, 266, 0, 0, 425, 0, 203,
	0, 481, 251, 373, 370, 575, 281, 272, 268, 249,
	315, 381, 423, 510, 417, 0, 366, 0, 0, 491,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 247, 323, 202,
	408, 492, 285, 0, 1850, 0, 0, 0, 709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 0, 0, 0, 0, 0,
	264, 319, 271, 263, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 397, 256, 0, 448, 0, 0, 0, 616,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 328,
	197, 224, 0, 0, 407, 456, 468, 0, 0, 0,
	252, 0, 466, 421, 594, 232, 283, 453, 427, 464,
	435, 286, 0, 0, 465, 368, 577, 445, 591, 617,
	618, 262, 401, 603, 514, 611, 635, 225, 259, 415,
	499, 597, 488, 393, 573, 574, 327, 487, 294, 201,
	365, 623, 223, 474, 367, 241, 230, 579, 600, 0,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	1749, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 0, 288, 451, 630, 212, 509, 589, 238,
	478, 0, 0, 638, 246, 498, 214, 586, 497, 389,
	324, 325, 213, 0, 452, 267, 292, 0, 0, 257,
	410, 581, 582, 255, 639, 227, 610, 219, 0, 609,
	403, 576, 587, 390, 379, 218, 585, 388, 378, 332,
	351, 352, 279, 305, 442, 371, 443, 304, 306, 399,
	398, 400, 206, 598, 0, 207, 0, 493, 599, 640,
	447, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 441, 437, 446, 0, 571,
	592, 604, 615, 621, 622, 624, 625, 626, 627, 628,
	631, 629, 402, 309, 489, 331, 369, 0, 0, 420,
	467, 239, 596, 490, 199, 0, 0, 0, 0, 253,
	254, 0, 567, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	636, 500, 506, 501, 502, 503, 504, 505, 0, 507,
	0, 0, 0, 0, 0, 0, 583, 584, 659, 380,
	480, 593, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 248,
	209, 386, 394, 570, 310, 215, 216, 217, 516, 517,
	518, 519, 607, 608, 612, 204, 457, 458, 459, 460,
	291, 602, 307, 463, 462, 329, 330, 375, 444, 532,
	534, 545, 549, 551, 553, 559, 562, 533, 535, 546,
	550, 552, 554, 560, 563, 522, 524, 526, 528, 541,
	540, 537, 565, 566, 543, 548, 527, 539, 544, 557,
	564, 561, 521, 525, 529, 538, 556, 555, 536, 547,
	558, 542, 530, 523, 531, 0, 196, 220, 364, 0,
	449, 287, 637, 606, 601, 205, 222, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 299, 300, 439, 440, 312, 313, 633, 634,
	298, 590, 620, 588, 632, 614, 433, 374, 0, 0,
	377, 280, 303, 318, 0, 605, 496, 226, 461, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 392, 0, 372,
	568, 569, 314, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 362,
	266, 0, 0, 425, 0, 203, 0, 481, 251, 373,
	370, 575, 281, 272, 268, 249, 315, 381, 423, 510,
	417, 0, 366, 0, 0, 491, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 247, 323, 202, 408, 492, 285, 0,
	95, 0, 0, 0, 941, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 0, 0, 0, 0, 0, 264, 319, 271, 263,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 397, 256,
	0, 448, 0, 0, 0, 616, 0, 0, 0, 0,
	0, 0, 0, 361, 0, 328, 197, 224, 0, 0,
	407, 456, 468, 0, 0, 0, 252, 0, 466, 421,
	594, 232, 283, 453, 427, 464, 435, 286, 0, 0,
	465, 368, 577, 445, 591, 617, 618, 262, 401, 603,
	514, 611, 635, 225, 259, 415, 499, 597, 488, 393,
	573, 574, 327, 487, 294, 201, 365, 623, 223, 474,
	367, 241, 230, 579, 600, 0, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1432, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 0, 288,
	451, 630, 212, 509, 589, 238, 478, 0, 0, 638,
	246, 498, 214, 586, 497, 389, 324, 325, 213, 0,
	452, 267, 292, 0, 0, 257, 410, 581, 582, 255,
	639, 227, 610, 219, 0, 609, 403, 576, 587, 390,
	379, 218, 585, 388, 378, 332, 351, 352, 279, 305,
	442, 371, 443, 304, 306, 399, 398, 400, 206, 598,
	0, 207, 0, 493, 599, 640, 447, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 441, 437, 446, 0, 571, 592, 604, 615, 621,
	622, 624, 625, 626, 627, 628, 631, 629, 402, 309,
	489, 331, 369, 0, 0, 420, 467, 239, 596, 490,
	199, 0, 0, 0, 0, 253, 254, 0, 567, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 636, 500, 506, 501,
	502, 503, 504, 505, 0, 507, 0, 0, 0, 0,
	0, 0, 583, 584, 659, 380, 480, 593, 333, 345,
	348, 338, 357, 0, 358, 334, 335, 340, 342, 343,
	344, 349, 350, 354, 360, 248, 209, 386, 394, 570,
	310, 215, 216, 217, 516, 517, 518, 519, 607, 608,
	612, 204, 457, 458, 459, 460, 291, 602, 307, 463,
	462, 329, 330, 375, 444, 532, 534, 545, 549, 551,
	553, 559, 562, 533, 535, 546, 550, 552, 554, 560,
	563, 522, 524, 526, 528, 541, 540, 537, 565, 566,
	543, 548, 527, 539, 544, 557, 564, 561, 521, 525,
	529, 538, 556, 555, 536, 547, 558, 542, 530, 523,
	531, 0, 196, 220, 364, 0, 449, 287, 637, 606,
	601, 205, 222, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 299, 300,
	439, 440, 312, 313, 633, 634, 1431, 590, 620, 588,
	632, 614, 433, 374, 0, 0, 377, 280, 303, 318,
	0, 605, 496, 226, 461, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 392, 0, 372, 568, 569, 314, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 203, 0, 481, 251, 373, 370, 575, 281, 272,
	268, 249, 315, 381, 423, 510, 417, 0, 366, 0,
	0, 491, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 247,
	323, 202, 408, 492, 285, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 448, 0, 0,
	0, 616, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 328, 197, 224, 0, 0, 407, 456, 468, 0,
	0, 0, 252, 0, 466, 421, 594, 232, 283, 453,
	427, 464, 435, 286, 0, 0, 465, 368, 577, 445,
	591, 617, 618, 262, 401, 603, 514, 611, 635, 225,
	259, 415, 499, 597, 488, 393, 573, 574, 327, 487,
	294, 201, 365, 623, 223, 474, 367, 241, 230, 579,
	600, 0, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 662, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 0, 288, 451, 630, 212, 509,
	589, 238, 478, 0, 0, 638, 246, 498, 214, 586,
	497, 389, 324, 325, 213, 0, 452, 267, 292, 0,
	0, 257, 410, 581, 582, 255, 639, 227, 610, 219,
	0, 609, 403, 576, 587, 390, 379, 218, 585, 388,
	378, 332, 351, 352, 279, 305, 442, 371, 443, 304,
	306, 399, 398, 400, 206, 598, 0, 207, 0, 493,
	599, 640, 447, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 441, 437, 446,
	0, 571, 592, 604, 615, 621, 622, 624, 625, 626,
	627, 628, 631, 629, 402, 309, 489, 331, 369, 0,
	0, 420, 467, 239, 596, 490, 199, 0, 0, 0,
	0, 253, 254, 0, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 636, 500, 506, 501, 502, 503, 504, 505,
	0, 507, 0, 0, 0, 0, 0, 0, 583, 584,
	659, 380, 480, 593, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 248, 209, 386, 394, 570, 310, 215, 216, 217,
	516, 517, 518, 519, 607, 608, 612, 204, 457, 458,
	459, 460, 291, 602, 307, 463, 462, 329, 330, 375,
	444, 532, 534, 545, 549, 551, 553, 559, 562, 533,
	535, 546, 550, 552, 554, 560, 563, 522, 524, 526,
	528, 541, 540, 537, 565, 566, 543, 548, 527, 539,
	544, 557, 564, 561, 521, 525, 529, 538, 556, 555,
	536, 547, 558, 542, 530, 523, 531, 0, 196, 220,
	364, 0, 449, 287, 637, 606, 601, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 392,
	0, 372, 568, 569, 314, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 362, 266, 0, 0, 425, 0, 203, 0, 481,
	251, 373, 370, 575, 281, 272, 268, 249, 315, 381,
	423, 510, 417, 0, 366, 0, 0, 491, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 247, 323, 202, 408, 492,
	285, 0, 0, 0, 0, 0, 709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 0, 0, 0, 0, 0, 264, 319,
	271, 263, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	397, 256, 0, 448, 0, 0, 0, 616, 0, 0,
	0, 0, 0, 0, 0, 361, 0, 328, 197, 224,
	0, 0, 407, 456, 468, 0, 0, 0, 252, 0,
	466, 421, 594, 232, 283, 453, 427, 464, 435, 286,
	0, 0, 465, 368, 577, 445, 591, 617, 618, 262,
	401, 603, 514, 611, 635, 225, 259, 415, 499, 597,
	488, 393, 573, 574, 327, 487, 294, 201, 365, 623,
	223, 474, 367, 241, 230, 579, 600, 0, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 4039, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	0, 288, 451, 630, 212, 509, 589, 238, 478, 0,
	0, 638, 246, 498, 214, 586, 497, 389, 324, 325,
	213, 0, 452, 267, 292, 0, 0, 257, 410, 581,
	582, 255, 639, 227, 610, 219, 0, 609, 403, 576,
	587, 390, 379, 218, 585, 388, 378, 332, 351, 352,
	279, 305, 442, 371, 443, 304, 306, 399, 398, 400,
	206, 598, 0, 207, 0, 493, 599, 640, 447, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 441, 437, 446, 0, 571, 592, 604,
	615, 621, 622, 624, 625, 626, 627, 628, 631, 629,
	402, 309, 489, 331, 369, 0, 0, 420, 467, 239,
	596, 490, 199, 0, 0, 0, 0, 253, 254, 0,
	567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 636, 500,
	506, 501, 502, 503, 504, 505, 0, 507, 0, 0,
	0, 0, 0, 0, 583, 584, 659, 380, 480, 593,
	333, 345, 348, 338, 357, 0, 358, 334, 335, 340,
	342, 343, 344, 349, 350, 354, 360, 248, 209, 386,
	394, 570, 310, 215, 216, 217, 516, 517, 518, 519,
	607, 608, 612, 204, 457, 458, 459, 460, 291, 602,
	307, 463, 462, 329, 330, 375, 444, 532, 534, 545,
	549, 551, 553, 559, 562, 533, 535, 546, 550, 552,
	554, 560, 563, 522, 524, 526, 528, 541, 540, 537,
	565, 566, 543, 548, 527, 539, 544, 557, 564, 561,
	521, 525, 529, 538, 556, 555, 536, 547, 558, 542,
	530, 523, 531, 0, 196, 220, 364, 0, 449, 287,
	637, 606, 601, 205, 222, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 392, 0, 372, 568, 569,
	314, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 203, 0, 481, 251, 373, 370, 575,
	281, 272, 268, 249, 315, 381, 423, 510, 417, 0,
	366, 0, 0, 491, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 247, 323, 202, 408, 492, 285, 0, 0, 0,
	0, 0, 941, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 448,
	0, 0, 0, 616, 0, 0, 0, 0, 0, 0,
	0, 361, 0, 328, 197, 224, 0, 0, 407, 456,
	468, 0, 0, 0, 252, 0, 466, 421, 594, 232,
	283, 453, 427, 464, 435, 286, 0, 0, 465, 368,
	577, 445, 591, 617, 618, 262, 401, 603, 514, 611,
	635, 225, 259, 415, 499, 597, 488, 393, 573, 574,
	327, 487, 294, 201, 365, 623, 223, 474, 367, 241,
	230, 579, 600, 0, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 0, 288, 451, 630,
	212, 509, 589, 238, 478, 0, 0, 638, 246, 498,
	214, 586, 497, 389, 324, 325, 213, 0, 452, 267,
	292, 0, 0, 257, 410, 581, 582, 255, 639, 227,
	610, 219, 0, 609, 403, 576, 587, 390, 379, 218,
	585, 388, 378, 332, 351, 352, 279, 305, 442, 371,
	443, 304, 306, 399, 398, 400, 206, 598, 0, 207,
	0, 493, 599, 640, 447, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 441,
	437, 446, 0, 571, 592, 604, 615, 621, 622, 624,
	625, 626, 627, 628, 631, 629, 402, 309, 489, 331,
	369, 0, 0, 420, 467, 239, 596, 490, 199, 0,
	0, 0, 0, 253, 254, 0, 567, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 636, 500, 506, 501, 502, 503,
	504, 505, 0, 507, 0, 0, 0, 0, 0, 0,
	583, 584, 659, 380, 480, 593, 333, 345, 348, 338,
	357, 0, 358, 334, 335, 340, 342, 343, 344, 349,
	350, 354, 360, 248, 209, 386, 394, 570, 310, 215,
	216, 217, 516, 517, 518, 519, 607, 608, 612, 204,
	457, 458, 459, 460, 291, 602, 307, 463, 462, 329,
	330, 375, 444, 532, 534, 545, 549, 551, 553, 559,
	562, 533, 535, 546, 550, 552, 554, 560, 563, 522,
	524, 526, 528, 541, 540, 537, 565, 566, 543, 548,
	527, 539, 544, 557, 564, 561, 521, 525, 529, 538,
	556, 555, 536, 547, 558, 542, 530, 523, 531, 0,
	196, 220, 364, 0, 449, 287, 637, 606, 601, 205,
	222, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 299, 300, 439, 440,
	312, 313, 633, 634, 298, 590, 620, 588, 632, 614,
	433, 374, 0, 0, 377, 280, 303, 318, 0, 605,
	496, 226, 461, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 0, 0, 372, 568, 569, 314,
}

var yyPact = [...]int{
	-1000, -1000, 4460, -1000, -532, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2319, 2394, -1000, -1000, -1000, -1000, 2570, -1000, 1048,
	1981, -1000, 2298, 4124, -1000, 55594, 773, -1000, 52702, -434,
	903, 267, 36796, -1000, 199, -1000, 182, 54148, 188, -1000,
	-1000, -1000, -1000, -434, 22334, 2218, 63, 55, 55594, -1000,
	-1000, -1000, -1000, -354, 2528, 1957, -1000, 428, -1000, -1000,
	-1000, -1000, -1000, -1000, 51979, -1000, 1198, -1000, -1000, 2324,
	2322, 2237, 930, 2268, -1000, 2434, 1957, -1000, 22334, 2502,
	2415, 21611, 21611, 457, -1000, -1000, 292, -1000, -1000, 31735,
	55594, 39688, 289, -1000, 2298, -1000, -1000, -1000, 216, -1000,
	331, 1880, -1000, 1879, -1000, 958, 470, 372, 478, 456,
	370, 368, 366, 365, 363, 347, 343, 342, 376, -1000,
	947, 947, -206, -210, 2008, 473, 432, 432, 1042, 494,
	2266, 2254, -1000, -1000, 947, 947, 947, 348, 947, 947,
	947, 947, 288, 283, 947, 947, 947, 947, 947, 947,
	947, 947, 947, 947, 947, 947, 947, 947, 947, 947,
	947, 938, 2298, 269, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	55594, 202, 55594, -1000, 840, 772, -1000, -1000, -438, 1084,
	1084, 88, 1084, 1084, 1084, 1084, 184, 1011, 54, -1000,
	180, 262, 171, 265, 1082, 800, -1000, -1000, 255, 1082,
	1744, -1000, 935, 264, 177, -1000, 1084, 1084, -1000, 15079,
	232, 15079, 15079, -1000, 2282, -1000, -1000, -1000, -1000, -1000,
	1362, -1000, -1000, -1000, -1000, -25, 488, -1000, -1000, -1000,
	-1000, 54148, 51256, 263, -1000, -1000, 340, 1811, 1179, 22334,
	1118, 928, -1000, -1000, 1241, 907, -1000, -1000, -1000, -1000,
	-1000, 826, -1000, 24503, 24503, 24503, 24503, -1000, -1000, 1883,
	50533, 1883, 1883, 24503, 1883, 24503, 1883, 1883, 1883, 22334,
	1883, 1883, 1883, 1883, -1000, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, -1000, -1000, -1000, -1000, 1883, 839, 1883, 1883,
	1883, 1883, 1883, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1883, 1883, 1883, 1883, 1883, 1883, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	27395, 1478, 1470, 1468, -1000, 19442, 1883, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 55594, -1000, 1883,
	227, 54148, 54148, 349, 1357, -1000, -1000, 2434, 1957, -1000,
	2528, 2524, 428, -1000, 2979, 1465, 1510, 1483, 1957, 1853,
	55594, -1000, 1911, -1000, -1000, -1000, -305, -333, 2108, 1432,
	1739, -1000, -1000, -1000, -1000, 1975, 22334, -1000, -1000, 2557,
	-1000, 28842, 838, 2553, 49810, -1000, 457, 457, 1876, 420,
	8, -1000, -1000, -1000, -1000, 978, 36073, -1000, -1000, -1000,
	-1000, -1000, 1749, 55594, -1000, -1000, 5471, 1350, -1000, 1980,
	-1000, 1743, -1000, 1936, 22334, 1999, 771, 1350, 519, 502,
	472, -1000, -59, -1000, -1000, -1000, -1000, -1000, -1000, 947,
	947, 947, -1000, 333, 2500, 4124, 5503, -1000, -1000, -1000,
	49087, 1978, 1350, -1000, 1974, -1000, 1066, 841, 863, 863,
	1350, -1000, -1000, 54871, 1350, 1064, 1062, 1350, 1350, 54148,
	54148, -1000, 48364, -1000, 47641, 46918, 1355, 54148, 46195, 45472,
	44749, 44026, 43303, -1000, 2260, -1000, 2398, -1000, -1000, -1000,
	54871, 1350, 1350, 54871, 54148, 54871, 55594, 1350, -1000, -1000,
	359, -1000, -1000, 1354, 1353, 1352, 947, 947, 1349, 1736,
	1731, 1720, 947, 947, 1344, 1718, 38242, 1717, 284, 1343,
	1341, 1337, 1323, 1716, 203, 1714, 1285, 1282, 1334, 54148,
	1973, 55594, -1000, 251, 1037, 437, 977, 2298, 2212, 1875,
	480, 768, 1350, 454, 454, 54148, -1000, 15808, 55594, 225,
	-1000, 1708, 22334, -1000, 1083, 1082, 1082, -1000, -1000, -1000,
	-1000, -1000, -1000, 1084, 55594, 1083, -1000, -1000, -1000, 1082,
	1084, 55594, 1084, 1084, 1084, 1084, 1082, 1082, 1082, 1084,
	55594, 55594, 55594, 55594, 55594, 55594, 55594, 55594, 55594, 15079,
	935, 1084, -439, -1000, 1687, -1000, -1000, -1000, 2087, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 15079, 15079, -1000, -1000,
	-1000, -1000, -1000, 1870, -1000, 178, 31, 185, -1000, 42580,
	474, 976, -1000, 474, -1000, -1000, -1000, 1868, 41857, -1000,
	-441, -442, -445, -447, -1000, -1000, -1000, -450, -457, -1000,
	-1000, -1000, 22334, 22334, 22334, 22334, -239, -1000, 1172, 24503,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 22334, 224, 987,
	24503, 24503, 24503, 24503, 24503, 24503, 24503, 25949, 25226, 24503,
	24503, 24503, 24503, 24503, 24503, -1000, -1000, 33904, 4605, 4605,
	907, 907, 907, 907, -1000, -177, 1865, 54871, -1000, -1000,
	-1000, 837, 22334, 22334, 907, -1000, 1350, 1137, 19442, 21611,
	21611, 22334, 986, 1179, 54871, 22334, -1000, 1483, -1000, -1000,
	-1000, -1000, 1248, -1000, -1000, 1063, 2293, 2293, 2293, 2293,
	22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334,
	2293, 22334, 169, 169, 714, 22334, 22334, 22334, 22334, 22334,
	22334, 17995, 22334, 22334, 24503, 22334, 22334, 22334, 1483, 22334,
	22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334,
	22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334,
	22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334,
	22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334,
	22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334,
	22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334,
	22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334,
	22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 1483, 22334,
	1264, 22334, 22334, 22334, 22334, 22334, 22334, 21611, 17266, 21611,
	21611, 21611, 21611, 21611, -1000, -1000, -1000, -1000, -1000, -1000,
	22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 1483, 22334,
	22334, 22334, 22334, 22334, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1520, 1529, 1482, 22334, -1000, 1864,
	-1000, -180, 31012, 22334, 1616, 2552, 2012, 54148, -1000, -1000,
	-1000, -1000, 2434, -1000, 2434, 1520, 2755, 2132, 21611, -1000,
	-1000, 2755, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1741, -1000, 55594, 1853, 2375, 54148, -1000, -284, -1000, -290,
	2128, 1611, 346, -1000, 22334, 22334, 1852, -1000, 1345, 55594,
	-1000, -239, -1000, 41134, -1000, -1000, 14350, 55594, 337, 55594,
	-1000, 30289, 40411, 316, -1000, 8, 1831, -1000, 26, 21,
	18718, 891, -1000, -1000, -1000, 2008, 26672, 1800, 891, 101,
	-1000, -1000, -1000, 1936, -1000, 1936, 1936, 1936, 1936, 346,
	346, 346, 346, -1000, -1000, -1000, -1000, -1000, 1968, 1964,
	-1000, 1936, 1936, 1936, 1936, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1959, 1959, 1959, 1951, 1951, 1937, 1937, 441,
	-1000, 22334, 395, 39688, 2353, 1331, 2181, 251, 463, 2005,
	1350, 1350, 1350, 463, -1000, 1427, 1425, 1422, -1000, -519,
	1849, -1000, -1000, 2496, -1000, -1000, 890, 1138, 1097, 1002,
	54148, 228, 313, -1000, 442, -1000, 39688, 1350, 1054, 863,
	1350, -1000, 1350, -1000, -1000, -1000, -1000, -1000, 1350, -1000,
	-1000, 1846, -1000, 1843, 1168, 1092, 1163, 1089, 1846, -1000,
	-1000, -175, 1846, -1000, 1846, -1000, 1846, -1000, 1846, -1000,
	1846, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	991, 325, -358, 54148, 228, 479, -1000, 469, 33904, -1000,
	-1000, -1000, 33904, 33904, -1000, -1000, -1000, -1000, 1604, 1592,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -503,
	55594, -1000, 246, 968, 277, 374, 296, 55594, 377, 2428,
	2427, 2420, 2408, 2405, 2392, 250, 276, 55594, 55594, 454,
	2064, 55594, 2358, 55594, -1000, -1000, -1000, -1000, -1000, 1590,
	1585, -1000, 1179, 55594, -1000, -1000, 1084, 1084, -1000, -1000,
	55594, 1084, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1084, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 55594, -1000, -1000, -1000,
	-1000, -25, 175, -1000, -1000, 54148, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -103, -1000, 301, 18, 367,
	-1000, -1000, -1000, -1000, -1000, 2431, -1000, 1179, 1010, 1041,
	-1000, 1883, -1000, -1000, 1246, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 224, 24503, 24503, 24503, 1572, 806, 1484,
	1159, 1613, 937, 937, 901, 24503, 901, 24503, 911, 911,
	911, 911, 911, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1583, -1000, 1883, 54871, 1703, 17266, 1541, 1755, 1483,
	923, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4131, 1679, -1000, 1679, 1332, 994, -1000, 22334, 1483,
	4125, -1000, -1000, 1483, 1483, 22334, -1000, -1000, 22334, 22334,
	22334, 22334, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
	2181, 2181, 22334, 2181, 1839, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1838, 2551, 1523, 2181, 2181, 2181, 2181,
	2181, 22334, 1528, -1000, -1000, -1000, 1431, 4121, 1559, 4099,
	2181, 2181, -1000, 2181, 3887, 3883, 1483, 1811, 2655, 2646,
	2181, 2181, 2181, 2181, 2181, 2634, 2614, 2181, 2181, 2609,
	2181, 3864, 2181, 2596, 2540, 2535, 2515, 2505, 2493, 2467,
	2449, 2437, 2417, 2410, 2406, 2391, 2372, 2360, 2334, 2323,
	2316, 2181, 2181, 2181, 3853, 2181, 3826, 2181, 3820, 2181,
	2181, 3815, 2303, 2285, 1483, 1837, -1000, 3512, 2181, 3504,
	3487, 3470, 2247, 3466, 3459, 3451, 2181, 2181, 2181, 2228,
	3436, 3417, 3390, 3380, 3358, 3345, 3305, 3058, 3026, 2181,
	1482, 1482, 1482, 1482, 1482, 3021, -242, 2181, 1483, -1000,
	-1000, -1000, -1000, -1000, 3002, 2220, 2981, 2973, 2968, 2951,
	1483, 1836, 1883, 834, -1000, -1000, 1679, 1483, 1483, 1679,
	1679, 2941, 2912, 2898, 2894, 2879, 2868, 2181, 2181, -1000,
	2181, 2833, 2777, 2215, 2208, 1483, -1000, 1482, 55594, -1000,
	-430, -1000, 12, 974, 1883, -1000, 38242, 1483, -1000, 4966,
	-1000, 1250, -1000, -1000, -1000, -1000, -1000, 35350, 1781, 2755,
	-1000, -1000, 1883, 1677, -1000, -1000, -1000, -1000, 346, 81,
	34627, 888, 888, 120, 1179, 1179, 22334, -1000, -1000, -1000,
	-1000, -1000, -1000, 833, 2511, 403, 1883, -1000, 1872, 2135,
	-1000, -1000, -1000, 2373, 28119, -1000, -1000, 1883, 1883, 55594,
	1780, 1757, -1000, 822, -1000, 1367, 1831, 8, 4, -1000,
	-1000, -1000, -1000, 1179, -1000, 1406, 341, 1447, -1000, 440,
	-1000, -1000, -1000, -1000, 2230, 95, -1000, -1000, -1000, 361,
	346, -1000, -1000, -1000, -1000, -1000, -1000, 1579, 1579, -1000,
	-1000, -1000, -1000, -1000, 1328, -1000, -1000, -1000, -1000, 1304,
	-1000, -1000, 1303, -1000, -1000, 2742, 1995, 395, -1000, -1000,
	947, 1577, -1000, -1000, 2234, 947, 947, 54148, -1000, -1000,
	1792, 2353, 246, 55594, 999, 2061, -1000, 2005, 2005, 2005,
	55594, -1000, -1000, -1000, -1000, -1000, -1000, -509, 164, 572,
	-1000, -1000, -1000, 4281, 54148, 1673, -1000, 218, -1000, 1771,
	-1000, 54148, -1000, 1669, 1950, 1350, 1350, -1000, -1000, -1000,
	54148, 1883, -1000, -1000, -1000, -1000, 764, 2290, 357, -1000,
	-1000, -263, -1000, -1000, 228, 218, 54871, 1350, 891, -1000,
	-1000, -1000, -1000, -1000, -502, 1665, 499, 234, 328, 55594,
	55594, 55594, 55594, 55594, 55594, 814, -1000, -1000, 44, -1000,
	-1000, 205, -1000, -1000, -1000, -1000, -1000, 205, -1000, -1000,
	-1000, -1000, -1000, 268, 467, -1000, 55594, 55594, 956, -1000,
	-1000, -1000, -1000, -1000, 1082, -1000, -1000, 1082, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2272, 55594, 5, -471, -1000, -467, 22334, -1000, -1000, -1000,
	-1000, 1295, 471, 1484, 24503, 24503, 1137, 1137, 24503, -1000,
	-1000, -1000, 1018, 1018, 33904, -1000, 24503, 22334, 21611, -1000,
	-1000, 22334, 22334, 981, -1000, 22334, 1283, -1000, 22334, -1000,
	-1000, 1482, 2181, 2181, 2181, 2181, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1863, -1000, 22334, 22334,
	22334, 1483, 309, -1000, -1000, -1000, -1000, -1000, 2550, -1000,
	22334, -1000, 33904, 22334, 22334, 22334, -1000, -1000, -1000, 22334,
	22334, -1000, -1000, 22334, -1000, 22334, -1000, -1000, -1000, -1000,
	-1000, -1000, 22334, -1000, 22334, -1000, -1000, -1000, 22334, -1000,
	22334, -1000, -1000, 22334, -1000, 22334, -1000, 22334, -1000, 22334,
	-1000, 22334, -1000, 22334, -1000, 22334, -1000, 22334, -1000, 22334,
	-1000, 22334, -1000, 22334, -1000, 22334, -1000, 22334, -1000, 22334,
	-1000, 22334, -1000, 22334, -1000, 22334, -1000, 22334, -1000, -1000,
	-1000, 22334, -1000, 22334, -1000, 22334, -1000, -1000, 22334, -1000,
	22334, -1000, 22334, -1000, 22334, 22334, -1000, 22334, 22334, 22334,
	-1000, 22334, 22334, 22334, 22334, -1000, -1000, -1000, -1000, 22334,
	22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, 22334, -1000,
	-1000, -1000, -1000, -1000, -1000, 22334, -1000, 39688, 74, -242,
	1264, 74, 1264, 23780, 842, 815, 23057, -1000, 21611, 16537,
	-1000, -1000, -1000, -1000, -1000, 22334, 22334, 22334, 22334, 22334,
	22334, -1000, -1000, -1000, 22334, 22334, -1000, 22334, -1000, 22334,
	-1000, -1000, -1000, -1000, -1000, 974, -1000, 863, 863, 863,
	54148, -1000, -1000, -1000, -1000, 1829, -1000, 2383, -1000, 2159,
	2155, 2539, 2511, -1000, 30289, 2755, -1000, -1000, 54148, -422,
	-1000, 2206, 2179, 888, 888, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 13621, 2434, 22334, 2059, 54871, 240, -1000, 29566,
	54148, 54871, 30289, 30289, 30289, 30289, 30289, -1000, 2096, 2081,
	-1000, 2189, 2173, 2259, 55594, -1000, 1520, 1662, -1000, 22334,
	32458, 1802, 30289, -1000, -1000, 30289, 55594, 12892, -1000, -1000,
	-4, -5, -1000, -1000, -1000, -1000, 2008, -1000, -1000, 940,
	2371, 2225, -1000, -1000, -1000, -1000, -1000, 1660, -1000, 1647,
	1828, 1631, 1629, 325, -1000, 1987, 2271, 947, 947, -1000,
	1301, -1000, 1350, 1574, 1571, -1000, -1000, -1000, 498, -1000,
	2357, 55594, 2055, 2052, 2044, -1000, -516, 1292, 1949, 1910,
	22334, 1941, 2491, 1822, 54148, -1000, -1000, 54871, -1000, 275,
	-1000, 395, 54148, -1000, -1000, -1000, 313, 55594, -1000, 9344,
	-1000, -1000, -1000, 218, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 55594, 233, -1000, 1940, 1336, -1000, -1000, 1984, -1000,
	-1000, -1000, -1000, -1000, 209, 194, 1570, 198, 1558, 198,
	-1000, 55594, 934, 1995, 55594, -1000, -1000, -1000, 1084, 1084,
	-1000, -1000, 2249, -1000, 1350, 2181, 24503, 24503, -1000, 907,
	-1000, -1000, 427, -221, 1936, 1936, -1000, 1936, 1937, -1000,
	1936, 173, 1936, 172, 1936, -1000, -1000, 1483, 1483, -1000,
	1482, -1000, 2191, 2170, -1000, 1179, 22334, 2736, -1000, -1000,
	-1000, -1000, -1000, -65, 2728, 2622, 2181, -1000, 1931, 1930,
	22334, 2181, 1483, 2158, 2181, 2181, 2181, 2181, 2181, 2181,
	2181, 2181, 2181, 2181, 2181, 2181, 2145, 2133, 2126, 2122,
	2112, 2101, 2095, 2083, 2039, 2003, 1991, 1982, 1961, 1953,
	1946, 1942, 2181, 2181, 1914, 2181, 1905, 1866, -1000, 1179,
	1482, 2566, 1482, 2181, 2181, 2497, 291, 2181, 1614, 1614,
	1614, 1614, 1614, 1482, 1482, 1482, 1482, 2181, 54148, -1000,
	-242, -1000, -1000, -301, -307, -1000, 1483, -242, 1826, 24503,
	2181, 24503, 24503, 24503, 2181, 1483, -1000, 1847, 1832, 2348,
	1819, 2181, 2277, 2181, 2181, 2181, 1805, -1000, 2395, 2395,
	2395, 1602, 1250, 55594, -1000, -1000, -1000, -1000, 2511, 2470,
	1823, -1000, -1000, 81, 557, -1000, 2238, 2179, -1000, 2490,
	2192, 2487, -1000, -1000, -1000, -1000, -1000, 1179, -1000, 2306,
	1784, -1000, 964, 1812, -1000, -1000, 20888, 1610, 2140, 816,
	1602, 1861, 2135, 2020, 2042, 3257, -1000, -1000, -1000, -1000,
	2080, -1000, 2077, -1000, -1000, 1911, -1000, 2054, 337, 30289,
	1851, 1851, -1000, 803, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1169, 9344, 2574, -1000, 1518, -1000, 1399, 192, 1288,
	-1000, -1000, 947, 947, -1000, 1052, 1047, -1000, 55594, 1928,
	-1000, 346, 1516, 346, 1284, -1000, -1000, 1280, -1000, -1000,
	-1000, -1000, 1990, 2107, -1000, -1000, -1000, -1000, 55594, -1000,
	-1000, 55594, 55594, 55594, 1927, 2484, -1000, 22334, 1926, 949,
	2686, 54148, 54148, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 412, 947, -483, 274, 273, 947,
	947, 947, -517, -1000, -1000, 1597, 1557, -1000, -211, -1000,
	22334, -1000, -1000, -1000, -1000, -1000, 1296, 1296, 1478, 1470,
	1468, -1000, 1911, -1000, -1000, -1000, 1713, -1000, -1000, -186,
	54148, 54148, 54148, 54148, -1000, -1000, -1000, 1222, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	907, 1483, 371, -189, 1483, -1000, -1000, 346, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22334, -1000,
	22334, -1000, 1179, 22334, 2434, 1466, 22334, 22334, -1000, 1279,
	1274, 2181, -1000, -1000, -1000, 22334, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22334,
	-1000, 22334, -1000, 22334, -1000, 22334, -1000, 22334, -1000, 22334,
	-1000, 22334, -1000, 22334, -1000, 22334, -1000, 22334, -1000, 22334,
	-1000, 22334, -1000, 22334, -1000, 22334, -1000, 22334, -1000, 22334,
	-1000, -1000, 22334, -1000, -1000, -1000, 22334, -1000, 22334, -1000,
	22334, -1000, -1000, -1000, 22334, 207, 1018, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1483, 336,
	-1000, -1000, -1000, -1000, 2536, -1000, 1483, 22334, 1137, -1000,
	1137, 1137, 1137, -1000, -1000, -1000, 22334, -1000, 22334, 22334,
	-1000, 22334, -1000, 22334, -1000, -1000, -1000, -1000, 22334, 1883,
	2342, 1883, 1883, 32458, -1000, -1000, 2470, 2499, 2476, 2176,
	2195, 2195, 2238, -1000, 2469, 2458, -1000, 1463, 2455, 1460,
	1016, -1000, 54871, 22334, 240, -1000, 423, 54148, 240, 54148,
	-1000, 2438, -1000, -1000, 22334, 1925, -1000, 22334, -1000, -1000,
	-1000, -1000, 4605, 2511, 1851, -1000, -1000, 920, -1000, 22334,
	-1000, 10600, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1448, 1439, -1000, -1000, 1924, 22334, -1000, -1000, -1000, 1704,
	1686, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1911,
	-1000, -1000, -1000, -1000, 313, -511, 2659, 54148, 1262, -1000,
	1555, 1822, 295, 240, 1412, 947, 947, 947, 1255, 1254,
	38242, 1551, -1000, 54148, 385, -1000, 313, -1000, -216, -218,
	2181, -1000, -1000, 2367, -1000, -1000, 16537, -1000, -1000, 1904,
	1994, -1000, -1000, -1000, -1000, 2117, -173, -203, -1000, -1000,
	2181, 2181, 2035, 1483, -1000, 2181, 2181, 1680, 1632, -1000,
	2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
	2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
	1482, 1790, -1000, 207, 1483, 2037, -1000, -1000, 4605, -1000,
	-1000, 2438, 2452, 74, -1000, -1000, 220, 74, 1179, 1014,
	1483, 1483, 1014, 1712, 2181, 1685, 1675, 2181, 2181, 33181,
	-1000, 2447, 2444, 38965, 38965, 974, 2499, -253, 22334, 22334,
	2161, 1219, -1000, -1000, -1000, -1000, 1409, 1403, -1000, 1390,
	-1000, 2565, -1000, 1179, -1000, 240, -1000, 802, 1812, -1000,
	2434, 1179, 54148, 1179, 82, 2438, -1000, 2181, -1000, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, -1000, -1000,
	54148, 2642, -1000, -1000, 2362, 1533, 162, -1000, 1534, 1822,
	-1000, -1000, 223, -1000, 22334, -1000, 38242, 1388, 1381, -1000,
	-1000, -1000, -1000, -517, -1000, -1000, -1000, -1000, -1000, -1000,
	428, 1816, -1000, 942, 54148, 55594, -1000, 2110, -1000, -1000,
	-1000, 22334, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22334,
	-1000, 1483, 2036, -1000, -359, -1000, -487, 22334, -242, -1000,
	-1000, -242, -1000, -1000, -1000, -1000, -1000, 22334, -1000, -1000,
	22334, -1000, 22334, -1000, -1000, 1515, -1000, -1000, -1000, -1000,
	-1000, 1515, 1515, -1000, -253, -1000, 1814, -1000, 54148, 1179,
	1811, -1000, 1217, -1000, -1000, -1000, -1000, -1000, 54871, 1812,
	54148, -1000, 1513, 1483, 1883, 2434, -1000, 1489, -1000, 428,
	-1000, 1901, 1910, -1000, -1000, -1000, 20165, -1000, -1000, -1000,
	-1000, -1000, 248, -184, 16537, 12163, 1487, -1000, -179, 2181,
	1482, -1000, -459, -1000, -1000, -1000, -1000, 242, -1000, -1000,
	1811, -1000, -1000, 1553, 1473, 1394, 37519, -1000, -1000, -1000,
	-1000, -253, -1000, -1000, 2343, -1000, -1000, 1804, -1000, -1000,
	32458, 53425, -1000, -169, 319, -184, 22334, 1894, 1483, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -36, -1000, -1000,
	795, -1000, -1000, -1000, 1984, -193, -1000, -1000, -1000, 300,
	-474, -280, -286, 24503, -1000, 22334, -1000, 22334, -1000, 22334,
	-1000, -1000, -1000, 54148, 1883, -1000, 1476, -1000, 3073, -322,
	2031, -1000, -128, -1000, -1000, -1000, 1167, 1369, -1000, -1000,
	-1000, -1000, -1000, -1000, 2291, 54148, -1000, 417, -1000, -1000,
	15808, -186, -209, 1032, -1000, -1000, -1000, -1000, -1000, 1137,
	1368, 1358, 2181, -1000, 54148, -1000, 53425, -315, 891, 4605,
	-1000, 2029, 2023, 2548, -1000, -1000, -1000, -1000, -1000, -1000,
	-524, 1458, 241, -1000, -1000, -1000, 300, -299, -1000, 22334,
	-1000, 22334, -1000, 1483, -1000, -1000, 2350, 82, -1000, 2563,
	-1000, 2516, 922, 922, -1000, 1242, -524, -1000, -1000, -1000,
	-1000, 2181, 2181, -1000, -376, -1000, -1000, -1000, -1000, -1000,
	413, 1252, -1000, -1000, -1000, -1000, -1000, 4605, -1000, -1000,
	-1000, 282, 282, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3162, 3160, 31, 6, 37, 35, 3158, 3147, 3143,
	164, 3141, 3137, 3136, 3134, 3133, 3132, 2608, 2596, 2595,
	3129, 3127, 3126, 3125, 3122, 3120, 3119, 3118, 3112, 41,
	99, 60, 98, 212, 198, 3107, 180, 165, 199, 3103,
	3102, 3099, 116, 193, 82, 85, 195, 3098, 3097, 76,
	3095, 3092, 3089, 192, 191, 188, 1066, 3088, 181, 114,
	50, 3087, 3086, 3085, 3082, 3080, 3079, 3078, 3077, 3074,
	3072, 3067, 3064, 3063, 3060, 3059, 3057, 3053, 3048, 299,
	3046, 3042, 19, 3035, 78, 3033, 3032, 3028, 3027, 3023,
	11, 3020, 3012, 26, 40, 3009, 3002, 46, 3001, 2995,
	2994, 2991, 2990, 47, 2989, 21, 2988, 39, 2987, 2984,
	121, 2974, 2971, 2970, 42, 2969, 2968, 2966, 28, 163,
	2965, 2963, 138, 2962, 2961, 2953, 182, 204, 2952, 2165,
	166, 104, 106, 2947, 2946, 102, 196, 2936, 118, 2935,
	2932, 2931, 145, 2929, 3809, 2927, 2924, 73, 75, 153,
	2922, 2915, 206, 74, 8, 16, 17, 2914, 2913, 67,
	71, 2911, 101, 2910, 2909, 100, 62, 2908, 108, 97,
	2901, 2896, 5, 7, 2895, 1, 4, 2, 81, 2894,
	2893, 113, 2892, 2890, 2889, 95, 2888, 2887, 5131, 2886,
	90, 128, 103, 69, 2874, 168, 130, 2869, 2867, 2861,
	2860, 2859, 51, 2858, 2857, 2850, 135, 250, 162, 2849,
	147, 336, 53, 143, 2842, 189, 80, 200, 176, 2841,
	2839, 133, 132, 2835, 2833, 57, 169, 190, 2822, 93,
	127, 117, 171, 91, 129, 2818, 2814, 55, 61, 2813,
	2812, 2811, 2810, 177, 2809, 2807, 65, 2806, 56, 2805,
	185, 2804, 137, 68, 2803, 173, 175, 2796, 64, 2791,
	2790, 72, 96, 66, 38, 2787, 157, 161, 125, 174,
	2783, 2778, 54, 2773, 2772, 2771, 197, 304, 2770, 2769,
	290, 178, 141, 144, 89, 2768, 315, 2767, 2766, 13,
	4953, 8093, 2761, 23, 159, 2759, 2753, 7391, 43, 45,
	30, 2747, 205, 2745, 2741, 2737, 2733, 221, 202, 112,
	158, 58, 2725, 2724, 2704, 36, 2701, 2700, 2699, 2695,
	2694, 2693, 70, 34, 33, 32, 211, 59, 20, 109,
	170, 154, 77, 2689, 2688, 2687, 123, 92, 2686, 156,
	155, 124, 160, 2681, 179, 140, 119, 2679, 94, 27,
	2676, 2673, 2672, 2671, 87, 2670, 2669, 2667, 2666, 152,
	142, 120, 83, 2665, 84, 115, 150, 149, 52, 2664,
	48, 2662, 2661, 24, 194, 29, 2653, 15, 105, 110,
	2651, 6818, 184, 2643, 9, 353, 151, 2642, 2641, 10,
	12, 18, 2634, 2632, 2631, 2630, 131, 2625, 2622, 2621,
	2617, 25, 49, 22, 14, 111, 79, 2614, 2602, 139,
	2601, 2597, 2588, 0, 1005, 126, 2563, 203,
}

//line sql.y:8612
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 411, 412, 412, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 258, 381, 382, 382, 256, 256, 28, 74, 36,
	36, 35, 35, 38, 38, 37, 31, 31, 31, 32,
	32, 32, 32, 32, 32, 32, 32, 33, 33, 33,
	33, 33, 29, 29, 29, 29, 30, 30, 30, 30,
	30, 15, 16, 34, 34, 17, 17, 108, 108, 18,
	19, 19, 19, 19, 415, 415, 183, 183, 181, 181,
	182, 182, 261, 261, 20, 265, 265, 267, 267, 267,
	267, 257, 257, 257, 21, 21, 266, 266, 268, 268,
	268, 271, 271, 271, 271, 310, 310, 310, 22, 22,
	22, 22, 22, 128, 128, 384, 384, 383, 377, 377,
	376, 376, 375, 380, 380, 379, 379, 378, 40, 41,
	50, 50, 50, 50, 51, 52, 385, 385, 350, 57,
	57, 56, 56, 56, 56, 56, 56, 58, 58, 54,
	54, 53, 53, 55, 55, 352, 352, 338, 338, 351,
	351, 351, 351, 351, 351, 351, 337, 337, 139, 139,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 400, 400, 400,
	399, 399, 236, 236, 236, 236, 236, 236, 236, 236,
	148, 148, 159, 159, 159, 159, 159, 159, 146, 146,
	147, 145, 145, 145, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 158, 158, 154, 154, 154, 155, 155,
	155, 156, 156, 401, 401, 401, 401, 315, 315, 315,
	315, 318, 318, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 317, 317, 317, 317, 317, 317, 317, 319,
	319, 319, 319, 319, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	321, 321, 321, 321, 321, 321, 321, 321, 336, 336,
	322, 322, 330, 330, 331, 331, 332, 332, 332, 333,
	333, 333, 334, 334, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 329, 329, 328, 328, 328, 339, 364,
	364, 363, 363, 361, 361, 361, 361, 361, 361, 361,
	361, 348, 348, 358, 358, 358, 358, 358, 347, 347,
	343, 343, 343, 344, 344, 345, 345, 342, 342, 346,
	346, 360, 360, 359, 359, 340, 340, 341, 341, 366,
	402, 402, 402, 402, 402, 403, 403, 367, 392, 394,
	394, 394, 393, 393, 390, 391, 389, 389, 389, 389,
	389, 84, 84, 84, 284, 284, 285, 285, 356, 356,
	355, 355, 355, 357, 357, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 279, 279, 279, 388,
	388, 388, 388, 388, 388, 387, 387, 387, 353, 353,
	353, 353, 386, 386, 59, 59, 216, 216, 405, 405,
	406, 406, 406, 47, 47, 47, 47, 47, 47, 46,
	46, 46, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 48, 48, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 110, 110, 111,
	111, 111, 111, 113, 113, 113, 369, 369, 60, 60,
	3, 3, 171, 173, 174, 174, 172, 172, 172, 172,
	172, 172, 62, 62, 61, 61, 176, 175, 177, 177,
	177, 1, 1, 2, 2, 4, 4, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 335,
	335, 335, 368, 368, 370, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 116, 115, 115, 114, 117,
	117, 117, 117, 117, 117, 117, 117, 372, 372, 372,
	63, 63, 373, 323, 324, 325, 5, 6, 349, 371,
	124, 124, 24, 39, 39, 25, 25, 25, 25, 26,
	26, 64, 67, 67, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 278, 278, 287,
	287, 277, 277, 302, 302, 302, 280, 280, 280, 281,
	281, 398, 398, 398, 274, 274, 66, 66, 66, 303,
	303, 303, 303, 69, 69, 407, 407, 408, 408, 409,
	409, 409, 70, 71, 71, 305, 305, 306, 306, 72,
	73, 85, 85, 85, 85, 85, 85, 85, 86, 86,
	86, 86, 109, 109, 109, 10, 10, 10, 10, 81,
	81, 81, 9, 9, 11, 68, 68, 75, 395, 395,
	396, 397, 397, 397, 397, 76, 78, 27, 27, 27,
	27, 27, 27, 134, 134, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 129, 129, 129,
	123, 123, 416, 79, 80, 80, 127, 127, 127, 120,
	120, 120, 126, 126, 126, 12, 12, 13, 260, 260,
	14, 14, 131, 131, 133, 133, 133, 133, 133, 135,
	135, 135, 135, 135, 135, 135, 130, 130, 132, 132,
	132, 132, 295, 295, 295, 294, 294, 165, 165, 167,
	166, 166, 168, 168, 169, 169, 169, 169, 214, 214,
	191, 191, 253, 253, 254, 254, 252, 252, 259, 259,
	255, 255, 255, 255, 262, 262, 170, 170, 170, 170,
	178, 178, 179, 179, 180, 180, 304, 304, 300, 300,
	300, 299, 299, 184, 184, 184, 186, 185, 185, 185,
	185, 187, 187, 189, 189, 188, 188, 190, 195, 195,
	194, 194, 192, 192, 192, 192, 193, 193, 193, 193,
	196, 196, 144, 144, 144, 144, 144, 144, 144, 144,
	157, 157, 157, 157, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 243, 243, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 219, 219, 218,
	218, 87, 87, 87, 88, 88, 89, 89, 89, 89,
	89, 90, 90, 90, 90, 90, 90, 90, 92, 92,
	91, 91, 209, 209, 292, 292, 93, 94, 94, 97,
	97, 96, 95, 95, 101, 101, 98, 98, 100, 100,
	99, 102, 102, 103, 104, 104, 275, 275, 197, 197,
	205, 205, 205, 205, 198, 198, 198, 198, 198, 198,
	198, 206, 206, 206, 213, 207, 207, 203, 203, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	162, 162, 162, 162, 224, 224, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 151, 151, 163, 163, 163, 163, 164, 164, 164,
	164, 164, 164, 164, 312, 312, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 417, 417, 326, 326, 326, 204,
	204, 204, 204, 204, 125, 125, 125, 125, 125, 309,
	309, 309, 313, 313, 313, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	314, 314, 222, 222, 121, 121, 220, 220, 221, 223,
	223, 215, 215, 215, 215, 217, 217, 200, 200, 200,
	225, 225, 226, 226, 105, 106, 106, 107, 107, 227,
	227, 229, 228, 228, 230, 231, 231, 231, 232, 232,
	233, 233, 233, 49, 49, 49, 49, 49, 44, 44,
	44, 44, 45, 45, 45, 45, 136, 136, 136, 136,
	138, 138, 137, 137, 82, 82, 83, 83, 83, 142,
	142, 143, 143, 143, 140, 140, 141, 141, 250, 250,
	250, 250, 250, 250, 250, 234, 234, 234, 241, 241,
	241, 237, 237, 239, 239, 239, 240, 240, 240, 238,
	247, 247, 249, 249, 248, 248, 244, 244, 245, 245,
	246, 246, 246, 242, 242, 199, 199, 199, 199, 199,
	251, 251, 251, 251, 263, 263, 210, 210, 212, 212,
	211, 211, 161, 264, 264, 272, 269, 269, 270, 270,
	296, 296, 296, 273, 273, 286, 286, 282, 282, 283,
	283, 276, 276, 288, 288, 288, 77, 208, 208, 365,
	365, 362, 291, 291, 293, 293, 297, 297, 301, 301,
	298, 298, 8, 410, 410, 410, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	413, 414, 307, 308, 308, 308,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 0, 1, 1, 1, 2, 3, 2,
	3, 0, 1, 3, 1, 4, 3, 3, 4, 3,
	2, 3, 4, 3, 4, 2, 7, 1, 3, 3,
	3, 3, 1, 2, 1, 1, 3, 2, 3, 3,
	2, 5, 7, 10, 9, 7, 8, 1, 1, 10,
	11, 9, 8, 8, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 1, 3, 3, 3, 3,
	3, 1, 1, 2, 5, 4, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	6, 12, 2, 0, 2, 0, 2, 1, 0, 2,
	1, 3, 3, 0, 1, 1, 3, 3, 6, 4,
	7, 8, 8, 8, 6, 3, 1, 1, 5, 0,
	1, 1, 1, 1, 2, 2, 2, 0, 1, 4,
	4, 4, 4, 4, 4, 2, 4, 1, 3, 1,
	1, 3, 4, 3, 3, 3, 5, 10, 0, 2,
	0, 2, 3, 5, 3, 4, 2, 3, 2, 3,
	3, 3, 3, 2, 2, 4, 4, 1, 1, 1,
	1, 1, 0, 2, 2, 3, 3, 2, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 6,
	10, 7, 5, 5, 5, 7, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 4, 5, 5, 3, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 2, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 3, 3, 5, 2, 3, 3, 2, 3, 4,
	4, 4, 3, 4, 4, 5, 3, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 1, 1, 2, 1, 3, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 3,
	2, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 4, 4, 4, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 5, 5, 4, 0, 2,
	4, 4, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 3, 1, 1, 2,
	3, 7, 0, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 3, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 3, 0, 1,
	1, 2, 6, 5, 6, 6, 0, 2, 3, 3,
	0, 2, 3, 3, 3, 2, 3, 1, 3, 6,
	3, 4, 3, 1, 3, 4, 5, 6, 3, 4,
	5, 6, 3, 4, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 5, 5, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 7, 7, 6,
	6, 2, 2, 5, 6, 3, 3, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 4, 2, 4, 0, 1,
	2, 5, 0, 3, 0, 1, 4, 4, 2, 0,
	1, 1, 2, 2, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 5, 1, 3, 0, 3, 1, 1,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	4, 8, 6, 8, 6, 5, 4, 10, 2, 2,
	1, 2, 2, 2, 2, 2, 4, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 8, 4, 8, 8, 6, 5, 4, 4,
	4, 4, 4, 7, 4, 4, 6, 6, 6, 8,
	6, 6, 4, 4, 3, 4, 6, 6, 4, 4,
	6, 4, 6, 4, 4, 4, 4, 4, 4, 6,
	4, 6, 4, 4, 4, 6, 4, 6, 4, 4,
	6, 4, 6, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 4, 4, 6, 4, 6, 4, 8, 6,
	4, 4, 6, 4, 6, 8, 4, 6, 8, 4,
	4, 6, 8, 6, 4, 6, 6, 8, 10, 7,
	8, 8, 9, 4, 4, 4, 4, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 4, 4, 4,
	4, 4, 4, 6, 4, 6, 5, 9, 6, 9,
	8, 6, 8, 8, 8, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 6, 8, 10, 12,
	14, 6, 8, 8, 10, 12, 14, 6, 8, 10,
	12, 6, 8, 4, 4, 3, 4, 6, 6, 4,
	6, 4, 6, 8, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 0, 5, 5, 2, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 2, 1, 1,
	0, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 1, 3, 5, 1, 1, 1, 2, 2,
	0, 3, 0, 2, 2, 1, 3, 0, 1, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 3,
	4, 2, 3, 4, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 4, 1, 1, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -411, -79, -416, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -64, -67,
	-65, -66, -69, -70, -71, -72, -73, -9, -11, -68,
	-27, -28, -74, -75, -76, -77, -78, -12, -13, -14,
	-8, -32, -31, -30, 10, 11, -108, -35, 33, -40,
	-50, 227, -51, -41, 228, -52, 230, 229, 267, 231,
	380, 260, 75, 316, 317, 319, 320, 321, 322, -109,
	685, 265, 266, 233, 37, 46, 34, 35, 38, 237,
	273, 274, 236, 133, -33, -36, 9, -413, 12, 470,
	262, 261, 29, -34, 579, 87, -80, -412, 733, -250,
	-234, 23, 34, 30, -233, -229, -127, -234, 21, 19,
	8, -79, -79, -79, 13, 14, -79, -350, -352, 87,
	160, 87, -79, -57, -56, -54, -53, -55, -58, 32,
	-47, -48, -374, -46, -43, 232, 229, 277, 123, 124,
	267, 268, 269, 231, 251, 266, 270, 265, 286, -42,
	82, 34, 579, 582, -357, 228, 234, 235, 230, 471,
	126, 125, 76, -354, 375, 612, 703, -58, 705, 101,
	104, 704, 45, 241, 706, 707, 708, 619, 709, 250,
	710, 711, 712, 713, 719, 660, 720, 721, 722, 127,
	8, -79, -301, -297, 91, -290, 576, 253, 610, 424,
	611, 302, 82, 42, 515, 585, 372, 375, 612, 500,
	703, 381, 316, 332, 326, 505, 506, 507, 355, 347,
	577, 613, 586, 305, 254, 290, 697, 345, 136, 705,
	309, 614, 268, 382, 383, 615, 384, 101, 319, 421,
	718, 308, 616, 716, 104, 704, 324, 80, 499, 52,
	700, 45, 263, 429, 430, 343, 236, 339, 706, 291,
	617, 588, 284, 126, 123, 725, 37, 335, 51, 31,
	715, 125, 50, 707, 151, 618, 708, 619, 386, 362,
	691, 49, 387, 269, 620, 85, 274, 581, 313, 699,
	388, 520, 336, 389, 301, 714, 233, 621, 680, 672,
	673, 390, 391, 692, 367, 363, 368, 522, 622, 413,
	504, 392, 676, 677, 732, 53, 623, 624, 693, 124,
	625, 79, 709, 81, 330, 331, 626, 299, 252, 525,
	526, 415, 359, 482, 489, 490, 111, 112, 485, 113,
	491, 114, 492, 493, 494, 483, 115, 108, 484, 495,
	496, 360, 361, 116, 497, 110, 109, 486, 488, 117,
	498, 250, 36, 393, 578, 303, 59, 307, 278, 416,
	47, 365, 729, 46, 687, 527, 627, 690, 358, 354,
	479, 54, 628, 629, 630, 631, 501, 710, 357, 329,
	353, 724, 4, 296, 502, 711, 63, 235, 370, 369,
	371, 285, 412, 350, 632, 633, 634, 257, 83, 635,
	340, 22, 636, 637, 394, 292, 638, 57, 639, 640,
	419, 266, 641, 55, 712, 40, 642, 271, 726, 713,
	643, 644, 645, 686, 646, 273, 647, 396, 648, 674,
	675, 395, 364, 366, 528, 280, 397, 380, 238, 580,
	649, 314, 334, 270, 717, 650, 258, 516, 517, 518,
	519, 698, 524, 523, 272, 277, 265, 420, 259, 651,
	652, 653, 654, 655, 306, 671, 656, 657, 320, 719,
	480, 44, 658, 659, 660, 661, 662, 300, 295, 414,
	423, 62, 84, 377, 663, 664, 696, 328, 325, 293,
	461, 463, 464, 465, 466, 467, 462, 469, 665, 317,
	56, 720, 721, 722, 287, 723, 508, 509, 510, 511,
	10, 562, 545, 573, 546, 563, 547, 556, 548, 564,
	572, 574, 529, 537, 530, 538, 568, 551, 565, 557,
	550, 549, 571, 554, 558, 531, 539, 569, 555, 532,
	540, 533, 541, 534, 542, 567, 566, 559, 570, 535,
	543, 561, 536, 544, 560, 552, 553, 432, 730, 731,
	503, 399, 127, 297, 298, 48, 351, 279, 666, 310,
	667, 341, 342, 476, 477, 356, 327, 352, 683, 318,
	681, 281, 400, 481, 267, 668, 422, 294, 373, 378,
	311, 584, 521, 286, 401, 695, 583, 512, 513, 349,
	346, 288, 514, 669, 685, 402, 242, 282, 283, 670,
	682, 403, 404, 304, 405, 406, 407, 408, 409, 411,
	315, 410, 684, 678, 679, 289, 460, 582, 323, 344,
	379, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 478,
	240, -79, 240, -188, -297, -129, 687, 689, 179, -269,
	383, -287, 385, 398, 393, 403, 391, -278, 394, 396,
	280, -398, 413, 240, 400, 227, 386, 395, 404, 405,
	304, 411, 406, 315, 410, 289, 407, 408, 409, -381,
	179, 708, 723, 136, 348, 390, 388, 414, 687, 91,
	-303, 91, 92, 93, -290, 318, -305, 323, -291, -381,
	-290, 321, -79, -79, -307, -307, -129, -207, -144, 144,
	-157, -258, -160, 92, -149, -152, -201, -202, -203, -204,
	-158, -217, -256, 168, 169, 176, 145, -213, -161, 27,
	575, 472, 471, 179, 32, 222, 69, 70, 474, 147,
	58, 12, 437, 438, -159, 427, 428, 439, 433, 434,
	499, 501, 502, 503, 500, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 504, 515, 476, 477, 118,
	478, 108, 110, 109, 479, 480, 481, 345, 527, 528,
	522, 525, 526, 524, 523, 360, 361, 482, 545, 546,
	550, 549, 547, 548, 551, 554, 555, 556, 557, 558,
	559, 561, 560, 552, 553, 530, 529, 531, 532, 533,
	534, 535, 536, 538, 537, 539, 540, 541, 542, 543,
	544, 562, 563, 564, 565, 566, 568, 567, 572, 571,
	569, 570, 574, 573, 483, 484, 111, 112, 113, 114,
	115, 116, 117, 485, 488, 486, 487, 489, 490, 491,
	496, 497, 492, 493, 494, 495, 498, 371, 369, 370,
	366, 365, 364, -89, -101, 601, 600, -102, 424, 429,
	430, 432, -150, -151, -163, -164, -291, -297, 245, 426,
	239, 174, 470, -153, -147, -215, 107, 93, -31, -211,
	425, 435, 436, 440, 431, 441, 587, 589, 604, 605,
	607, 592, 597, 596, 599, 516, 517, 518, 519, 520,
	521, 672, 673, 674, 675, 676, 677, 678, 679, -381,
	-290, 91, -155, -154, -197, 94, 99, 102, 103, 105,
	-404, 263, 341, 342, 119, -413, 701, 90, 95, 96,
	97, 98, 120, 121, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 45, 399, 399, -188,
	-79, -79, -79, -79, -410, 704, 580, -227, -127, -229,
	-33, -31, -413, 9, -79, -31, -32, -30, -36, -38,
	606, -37, -297, 100, -234, -250, 13, 62, 163, 43,
	51, -232, -233, -34, -31, -144, 20, 24, 25, -132,
	170, -144, -297, -132, -276, 244, -79, -79, -265, -310,
	318, -267, 414, 687, 413, -257, -270, 91, -256, -269,
	412, 92, -351, 160, -337, -341, -291, 255, -367, 251,
	-188, -360, -359, -291, -413, -128, -286, 241, 249, 248,
	137, -385, 140, 297, 426, 239, -53, -54, -55, -269,
	178, 707, -110, 272, 276, 88, 88, -341, -340, -339,
	-386, 276, 255, -366, -358, 247, 256, -347, 248, 249,
	-342, 241, 138, -386, -342, 246, 256, 251, 255, 276,
	276, 127, 276, 127, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 271, -348, 152, -348, 583, 583, -354,
	-386, 251, 241, -386, -386, 247, -288, -342, 243, 26,
	243, 36, 36, -348, -348, -348, -269, 178, -348, -348,
	-348, -348, 284, 284, -348, -348, -348, -348, -348, -348,
	-348, -348, -348, -348, -348, -348, -348, -348, -348, -348,
	-348, 240, -385, -136, 410, 304, 82, -56, 286, -39,
	-188, -286, 241, 242, -385, 273, -188, 223, 240, 690,
	-280, 160, 16, -280, -277, 399, 397, 384, 389, -280,
	-280, -280, -280, 287, 382, -343, 241, 36, 252, 399,
	287, 382, 287, 288, 287, 288, 392, 402, 287, -302,
	15, 163, 426, 387, 391, 280, 240, 281, 242, 401,
	288, -302, 90, -281, 160, 287, 399, 393, 283, -280,
	-280, -308, -413, -293, -291, -289, 232, 24, 143, 26,
	28, 146, 179, 130, 20, 147, 38, 234, 348, 251,
	178, 247, 471, 227, 73, 587, 427, 434, 425, 433,
	437, 473, 474, 426, 385, 32, 14, 589, 29, 261,
	25, 39, 172, 229, 150, 590, 264, 27, 262, 118,
	121, 592, 23, 76, 256, 15, 249, 41, 17, 593,
	594, 18, 245, 244, 163, 241, 71, 12, 222, 30,
	159, 67, 595, 138, 133, 596, 597, 598, 599, 131,
	69, 160, 21, 727, 435, 436, 34, 688, 575, 275,
	174, 74, 60, 689, 144, 431, 600, 601, 119, 602,
	122, 77, 694, 140, 19, 72, 43, 603, 276, 604,
	246, 728, 605, 417, 606, 161, 230, 470, 70, 162,
	701, 607, 702, 239, 398, 9, 475, 33, 260, 248,
	129, 68, 441, 608, 240, 149, 243, 132, 120, 8,
	137, 35, 13, 75, 78, 438, 439, 440, 58, 128,
	579, 148, 16, 609, 418, 142, -381, 690, -308, -308,
	33, 92, -407, -408, -409, 579, 417, 243, -291, -188,
	-85, 680, 231, -86, 686, 24, 238, -134, 399, -122,
	179, 708, 691, 692, 693, 690, 396, 698, 696, 694,
	287, 695, 88, 140, 142, 143, 4, -144, 159, -198,
	152, 153, 154, 155, 156, 157, 158, 164, 163, 144,
	146, 160, -243, 141, 165, 166, 167, 168, 169, 170,
	171, 173, 172, 174, 175, 161, 162, 178, 225, 226,
	-152, -152, -152, -152, -213, -219, -218, -413, -215, -381,
	-290, -297, -413, -413, -152, -275, -413, -149, -413, -413,
	-413, -413, -222, -144, -413, -413, -417, -413, -417, -417,
	-417, -326, -413, -326, -326, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, 223, -413,
	-413, -413, -413, -413, -326, -326, -326, -326, -326, -326,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, 103, 99, 102, 94, -217, 105,
	90, 90, 90, 90, -31, -32, -207, -413, -307, -395,
	-396, -191, -188, -413, 304, -291, -291, 273, 96, -232,
	-34, -31, -227, -233, -229, -31, -79, -120, -133, 64,
	65, -135, 25, 39, 68, 66, 24, -414, 89, -414,
	-250, -414, 88, -38, -253, 87, 634, 664, 634, 664,
	62, 44, 90, 90, 88, 22, -228, -230, -144, 15,
	-295, 4, -294, 26, -291, 90, 223, 15, -189, 30,
	-188, -276, -276, 88, 91, 318, -266, -268, 415, 417,
	152, -296, -291, 90, 32, 89, 88, -188, -315, -318,
	-320, -319, -321, -316, -317, 345, 346, 179, 349, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 362, 33,
	263, 341, 342, 343, 344, 363, 364, 365, 366, 368,
	369, 370, 371, 326, 347, 577, 327, 328, 329, 330,
	331, 332, 334, 335, 338, 336, 337, 339, 340, -382,
	-381, 87, 89, 88, -322, 87, -144, -136, 240, -381,
	241, 241, 241, -79, 470, -348, -348, -348, 271, 20,
	-46, -43, -374, 19, -42, -43, 232, 123, 124, 229,
	87, -337, 87, -346, -382, -381, 87, 138, 246, 137,
	-345, -342, -345, -346, -381, -215, -381, 138, 138, -381,
	-381, -262, -291, -262, -262, 24, -262, 24, -262, 24,
	96, -291, -262, 24, -262, 24, -262, 24, -262, 24,
	-262, 24, 32, 79, 80, 81, 32, 83, 84, 85,
	-215, -381, -381, -215, -337, -215, -188, -381, -269, 96,
	96, 96, -348, -348, 96, 90, 90, 90, -348, -348,
	96, 90, -299, -297, 90, 90, -387, 257, 301, 303,
	96, 96, 96, 96, 32, 90, -388, 32, 715, 714,
	716, 717, 718, 90, 96, 32, 96, 32, 96, -291,
	87, -188, -142, 291, 227, 229, 232, 77, 90, 307,
	308, 305, 310, 311, 312, 152, 45, 88, 243, 240,
	-381, -282, 245, -282, -291, -298, -297, -289, -188, 243,
	381, 90, -144, -344, 15, 163, -302, -302, -280, -188,
	-344, -302, -280, -188, -280, -280, -280, -280, -302, -302,
	-302, -280, -297, -297, -188, -188, -188, -188, -188, -188,
	-188, -308, -281, -280, 690, 90, -274, 15, 77, -308,
	-308, 88, 324, 418, 419, -306, 321, -81, -291, 90,
	-10, -29, -18, -17, -19, 152, -10, 88, 579, -181,
	-188, 690, 690, 690, 690, 690, 690, -144, -144, -144,
	-144, 602, -205, 119, 144, 120, 121, -160, -144, -206,
	-211, -213, 106, 163, 146, 160, -243, -149, -152, -149,
	-149, -149, -149, -149, -149, 222, -149, 222, -149, -149,
	-149, -149, -149, -149, -309, -291, 90, 179, -156, -155,
	105, -404, -156, 576, 88, -218, 223, -144, -144, -381,
	-118, 443, 444, 445, 446, 448, 449, 450, 453, 454,
	458, 459, 442, 460, 447, 452, 455, 456, 457, 451,
	344, -144, -130, -132, -130, -144, -220, -221, 148, -215,
	-144, -414, -414, 96, 170, -126, 25, 39, -126, -126,
	-126, -126, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -126, -144, -119, 442, 460, 447, 452, 455,
	456, 457, 451, 344, 461, 462, 463, 464, 465, 466,
	467, 468, 469, -119, -118, -144, -144, -144, -144, -144,
	-144, -87, -144, 130, 131, 132, -207, -144, -149, -144,
	-144, -144, -414, -144, -144, -144, -208, -207, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -380, -379, -378, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-207, -207, -207, -207, -207, -144, -414, -144, -162, -147,
	96, -258, 105, 92, -144, -144, -144, -144, -144, -144,
	-131, -130, -293, -298, -289, -290, -130, -131, -131, -130,
	-130, -144, -144, -144, -144, -144, -144, -144, -144, -414,
	-144, -144, -144, -144, -144, -250, -414, -207, 88, -397,
	417, 418, 688, -300, 276, -299, 26, -208, 90, 15,
	-260, 78, -291, -232, -232, 64, 65, 60, -130, -135,
	-414, -37, 26, -252, -291, 627, 627, 63, 90, -327,
	-269, 372, 373, 179, -144, -144, 88, -231, 28, 29,
	-188, -294, 170, -298, -188, -261, 276, -188, -166, -168,
	-169, -170, -191, -214, -413, -171, -31, 598, 595, 15,
	-181, -182, -190, -297, -267, -310, -266, 88, 416, 418,
	419, 77, 122, -144, -328, 178, -356, -355, -354, -337,
	-339, -340, -341, 89, -328, -333, 378, 377, -322, -322,
	-322, -322, -322, -327, -327, -327, -327, 87, 87, -322,
	-322, -322, -322, -330, 87, -330, -330, -331, -330, 87,
	-331, -332, 87, -332, -367, -144, -364, -363, -361, -362,
	250, 101, 670, 626, 579, 619, 660, 78, -359, -231,
	96, -414, -142, -283, 245, -365, -362, -381, -381, -381,
	-283, 91, 90, 91, 90, 91, 90, -111, -60, -1,
	727, 728, 729, 88, 20, -338, -337, -59, 301, -370,
	-371, 276, -366, -360, -346, 138, -345, -346, -346, -381,
	88, 30, 127, 127, 127, 127, 579, 229, 33, -284,
	618, 144, 670, 626, -337, -59, 243, 243, -309, -309,
	-309, 90, 90, -279, 723, -181, -138, 293, 152, 282,
	282, 240, 295, 240, 295, -188, 306, 309, 307, 308,
	305, 310, 311, 312, 24, 24, 24, 24, 24, 24,
	294, 296, 298, 284, -188, -188, -282, 77, -183, -188,
	27, -297, 90, 90, -188, -280, -280, -188, -280, -280,
	-188, -409, 325, -291, 359, 681, 682, 684, 683, -122,
	417, 88, 579, 23, -123, 23, -413, 119, 120, 121,
	-206, -149, -152, -149, 143, 264, -149, -149, -413, -215,
	-414, -293, 26, 88, 78, -414, 168, 88, 88, -414,
	-414, 88, 15, -223, -221, 150, -144, -414, 88, -414,
	-414, -207, -144, -144, -144, -144, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -207, -414, 88, 88,
	15, -313, 26, -414, -414, -414, -414, -414, -222, -414,
	15, -414, 78, 88, 163, 88, -414, -414, -414, 88,
	88, -414, -414, 88, -414, 88, -414, -414, -414, -414,
	-414, -414, 88, -414, 88, -414, -414, -414, 88, -414,
	88, -414, -414, 88, -414, 88, -414, 88, -414, 88,
	-414, 88, -414, 88, -414, 88, -414, 88, -414, 88,
	-414, 88, -414, 88, -414, 88, -414, 88, -414, 88,
	-414, 88, -414, 88, -414, 88, -414, 88, -414, -414,
	-414, 88, -414, 88, -414, 88, -414, -414, 88, -414,
	88, -414, 88, -414, 88, 88, -414, 88, 88, 88,
	-414, 88, 88, 88, 88, -414, -414, -414, -414, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, -414,
	-414, -414, -414, -414, -414, 88, -94, 603, -414, -414,
	88, -414, 88, 88, 88, 88, 88, -414, -413, 223,
	-414, -414, -414, -414, -414, 88, 88, 88, 88, 88,
	88, -414, -414, -414, 88, 88, -414, 88, -414, 88,
	-414, -396, 687, 418, -195, -194, -192, 75, 244, 76,
	-413, -299, -414, -156, -258, -259, -258, -200, -291, 96,
	105, -234, -165, -167, 15, -135, -213, 89, 88, -327,
	-238, -244, -277, -291, 90, 179, -329, 179, -329, 372,
	373, -230, 223, -196, 16, -199, 33, 58, -29, -413,
	-413, 33, 88, -184, -186, -185, -187, 67, 71, 73,
	68, 69, 70, 74, -304, 26, -31, -166, -31, -413,
	-188, -181, -415, 15, 78, -415, 88, 223, -268, -271,
	420, 417, 423, -381, 90, -110, 88, -354, -341, -235,
	-139, 41, -334, 379, -327, 586, -327, -336, 90, -336,
	96, 96, 96, 89, -49, -44, -45, 34, 82, -361,
	-348, 90, 40, -348, -348, -291, 89, -231, -138, -188,
	144, 77, -365, -365, -365, -297, -2, 726, 732, 138,
	87, 384, 19, -252, 88, 89, -216, 302, 89, -112,
	-291, 89, 87, -346, -346, -291, -413, 240, 32, 32,
	670, 626, 618, -59, -216, -215, -381, -328, 725, 724,
	89, 242, 300, -143, 437, -140, 90, 91, -188, -188,
	-188, -188, -188, -188, 232, 229, 407, -405, 313, -405,
	285, 243, -181, -188, 88, -84, 259, 254, -302, -302,
	34, -188, 417, 699, 697, -144, 143, 264, -160, -152,
	-118, -118, -149, -311, 179, 345, 263, 343, 339, 359,
	350, 377, 341, 378, 336, 335, 334, -311, -309, -149,
	-207, -132, -144, -144, 151, -144, 149, -144, -414, -414,
	-414, -414, -414, -227, -144, -144, -144, -414, 179, 345,
	15, -144, -309, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -378, -144,
	-207, -144, -207, -144, -144, -144, -144, -144, -379, -379,
	-379, -379, -379, -207, -207, -207, -207, -144, -413, -291,
	-97, -96, -95, 653, 244, -94, -162, -97, -162, 222,
	-144, 222, 222, 222, -144, -131, -293, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -192, -342, -342,
	-342, -262, 88, -273, 23, 15, 58, 58, -165, -196,
	-166, -135, -291, -241, 680, -247, 47, -245, -246, 48,
	-242, 49, 57, -329, -329, 170, -232, -144, -263, 77,
	-264, -272, -215, -210, -212, -211, -413, -251, -414, -291,
	-262, -264, -168, -169, -169, -168, -169, 67, 67, 67,
	72, 67, 72, 67, -185, -297, -414, -144, -300, 78,
	-166, -166, -190, -297, 170, 417, 421, 422, -354, -403,
	119, 144, 32, 77, 375, 101, -401, 178, 615, 665,
	670, 626, 619, 660, -402, 246, 137, 138, 258, 26,
	42, 89, 88, 89, 88, 89, 89, 88, -285, -284,
	-45, -44, -348, -348, 96, -381, 90, 90, 242, 27,
	-188, 77, 77, 77, -113, 730, 96, 87, -3, 82,
	-144, 87, 20, -337, -215, -372, -323, -373, -324, -325,
	-5, -6, -349, -116, 58, 101, -63, 45, 241, 710,
	711, 127, -413, 723, -364, -252, -368, -370, -188, -148,
	-413, -159, -146, -145, -147, -153, 168, 169, 263, 341,
	342, -216, -188, -137, 291, 299, 87, -141, 92, -384,
	78, 282, 375, 282, 375, 90, -406, 314, 90, -406,
	-188, -84, -49, -188, -280, -280, 34, -381, -414, -160,
	-152, -125, 163, 579, -314, 585, -322, -322, -322, -332,
	-322, 331, -322, 331, -322, -414, -414, -414, 88, -414,
	23, -414, -144, 88, -121, 475, 88, 88, -414, 87,
	87, -144, -414, -414, -414, 88, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, 88,
	-414, 88, -414, 88, -414, 88, -414, 88, -414, 88,
	-414, 88, -414, 88, -414, 88, -414, 88, -414, 88,
	-414, 88, -414, 88, -414, 88, -414, 88, -414, 88,
	-414, -414, 88, -414, -414, -414, 88, -414, 88, -414,
	88, -414, -414, -414, 88, -312, 671, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -93, -292,
	-291, -94, 635, 635, -414, -94, -224, 88, -149, -414,
	-149, -149, -149, -414, -414, -414, 88, -414, 88, 88,
	-414, 88, -414, 88, -414, -414, -414, -414, 88, -193,
	23, -193, -193, -414, -258, -188, -196, -225, 17, -238,
	52, 351, -249, -248, 56, 48, -246, 20, 50, 20,
	31, -263, 88, 152, 88, -414, -414, 88, 58, 223,
	-414, -196, -179, -178, 77, 78, -180, 77, -178, 67,
	67, -253, 88, -261, -166, -196, -196, 223, 119, -413,
	-148, 13, 90, 90, -381, -400, 714, 715, 32, 96,
	-348, -348, 138, 138, -188, 87, -327, 90, -327, 96,
	96, 32, 83, 84, 85, 32, 79, 80, 81, -188,
	-188, -188, -188, -369, 87, 20, -144, 87, 152, 89,
	-252, -252, 278, 163, -348, 708, 284, 284, -348, -348,
	-348, -115, -114, 730, 89, -414, 88, -335, 579, 582,
	-144, -154, -154, -253, 89, -377, 579, -383, -291, -291,
	-291, -291, 96, 98, -414, 577, 74, 580, -414, -327,
	-144, -144, -144, -232, 90, -144, -144, 96, 96, -414,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-207, -144, -414, -176, -175, -177, 691, 119, 32, -311,
	-414, -209, 276, -100, -99, -98, 15, -414, -144, -118,
	-118, -118, -118, -144, -144, -144, -144, -144, -144, -413,
	67, 19, 17, -413, -413, -300, -225, -226, 18, 20,
	-239, 54, -237, 53, -237, -248, 20, 20, 90, 20,
	90, 138, -272, -144, -212, 58, -29, -291, -210, -291,
	-227, -144, 87, -144, -156, -196, -196, -144, -202, 499,
	501, 502, 503, 500, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 504, 515, 476, 477, 478, 108,
	110, 109, 479, 480, 481, 345, 527, 528, 522, 525,
	526, 524, 523, 360, 361, 482, 545, 546, 550, 549,
	547, 548, 551, 554, 555, 556, 557, 558, 559, 561,
	560, 552, 553, 530, 529, 531, 532, 533, 534, 535,
	536, 538, 537, 539, 540, 541, 542, 543, 544, 562,
	563, 564, 565, 566, 568, 567, 572, 571, 569, 570,
	574, 573, 483, 484, 111, 112, 113, 114, 115, 116,
	117, 485, 488, 486, 489, 490, 491, 496, 497, 492,
	493, 494, 495, 498, 371, 369, 370, 366, 365, 364,
	424, 429, 430, 432, 516, 517, 518, 519, 520, 521,
	672, 673, 674, 675, 676, 677, 678, 679, 90, 90,
	87, -144, 89, 89, -253, -368, -60, 89, -254, -252,
	96, 89, 279, -211, -413, 90, -348, -348, -348, 96,
	96, -299, -414, 88, -291, -402, -370, 583, 583, -414,
	26, -376, -375, -293, 87, 78, 63, 578, 581, -414,
	-414, 88, -414, -414, -414, 89, 89, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, 88,
	-414, -175, -177, -414, 77, -156, -227, 20, -97, 301,
	303, -97, -414, -414, -414, -414, -414, 88, -414, -414,
	88, -414, 88, -414, -414, -255, -414, -291, 246, 20,
	20, -255, -255, -195, -226, -107, -106, -105, 609, -144,
	-207, -240, 55, 77, 122, 90, 90, 90, 13, -210,
	223, -232, -252, -173, 384, -227, -414, -252, 89, 26,
	89, 732, 138, 89, -211, -124, -413, 275, -299, 90,
	90, -114, -117, -29, 88, 152, -252, -188, 63, -144,
	-207, -414, 77, 590, 691, -92, -91, -88, 702, 728,
	-207, -94, -94, -144, -144, -144, 88, -414, -414, -414,
	-107, 88, -104, -103, -291, 77, 122, -264, -291, 89,
	-414, -413, -232, 89, -236, -29, 87, -3, 275, -323,
	-373, -324, -325, -5, -6, -349, -82, 579, -375, -353,
	-297, -293, 90, 96, 89, 579, -414, -414, -90, 146,
	700, 668, -154, 222, -414, 88, -414, 88, -414, 88,
	-291, 246, -105, 88, 26, -300, -174, -172, -291, 632,
	-393, -392, 575, -403, -399, 119, 144, 101, -401, 670,
	626, 128, 129, -82, -144, 87, -414, -83, 290, 687,
	223, -384, 580, -90, 701, 646, 621, 646, 621, -149,
	-144, -144, -144, -103, -413, -414, 88, 23, -315, -62,
	643, -390, -391, 77, -394, 390, 642, 663, 119, 90,
	89, -252, 251, -298, -377, 581, 143, -118, -414, 88,
	-414, 88, -414, -93, -172, 639, -328, -156, -391, 77,
	-390, 77, 14, 13, -4, 731, 89, 292, -90, 646,
	621, -144, -144, -414, -61, 27, -173, -389, 259, 254,
	257, 33, -389, 96, -4, -414, -414, 643, 253, 32,
	119, -156, -176, -175, -175,
}

var yyDef = [...]int{
	882, -2, -2, 884, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 72, 74, 75, 882, 882, 882, 0, 882, 0,
	0, 882, -2, -2, 882, 1618, 0, 882, 0, 877,
	0, -2, 797, 803, 0, 812, -2, 0, 0, 882,
	882, 2242, 2242, 877, 0, 0, 0, 0, 0, 882,
	882, 882, 882, 1623, 1479, 52, 882, 0, 87, 88,
	832, 833, 834, 67, 0, 2240, 883, 1, 3, 73,
	77, 0, 0, 0, 60, 1488, 0, 80, 0, 0,
	886, 0, 0, 1601, 882, 882, 0, 128, 129, 0,
	0, 0, -2, 132, -2, 161, 162, 163, 0, 168,
	607, 526, 578, 524, 563, -2, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	401, 401, 0, 0, -2, 512, 512, 512, 1603, 0,
	0, 0, 560, 463, 401, 401, 401, 0, 401, 401,
	401, 401, 0, 0, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 1506, 167, 1619, 1616, 1617, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
	2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169,
	2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179,
	2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189,
	2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209,
	2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229,
	2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239,
	0, 1595, 0, 720, 985, 0, 878, 879, 0, 786,
	786, 0, 786, 786, 786, 786, 0, 0, 0, 734,
	0, 0, 0, 0, 783, 0, 750, 751, 0, 783,
	0, 757, 789, 0, 0, 764, 786, 786, 767, 2243,
	0, 2243, 2243, 1586, 0, 780, 778, 792, 793, 42,
	796, 799, 800, 801, 802, 805, 0, 816, 819, 1612,
	1613, 0, 821, 828, 845, 846, 0, 47, 1135, 0,
	1007, 0, 1013, -2, 1024, 1041, 1042, 1043, 1044, 1045,
	1047, 1048, 1049, 0, 0, 0, 0, 1054, 1055, 0,
	0, 0, 0, 0, 1116, 0, 0, 0, 0, 1452,
	0, 0, 1414, 1414, 1150, 1414, 1414, 1416, 1416, 1416,
	1828, 1966, 1974, 2150, 1789, 1795, 1796, 1797, 2096, 2097,
	2098, 2099, 2187, 2188, 2192, 1890, 1784, 2163, 2164, 0,
	2239, 1927, 1935, 1936, 1960, 2060, 2173, 1807, 1955, 2024,
	1887, 1909, 1910, 2042, 2043, 1931, 1932, 1913, 2102, 2104,
	2120, 2121, 2106, 2108, 2117, 2123, 2128, 2107, 2119, 2124,
	2137, 2141, 2144, 2145, 2146, 2114, 2112, 2125, 2129, 2131,
	2133, 2139, 2142, 2115, 2113, 2126, 2130, 2132, 2134, 2140,
	2143, 2101, 2105, 2109, 2118, 2136, 2116, 2135, 2110, 2122,
	2127, 2138, 2111, 2103, 1925, 1928, 1916, 1917, 1919, 1921,
	1926, 1933, 1939, 1918, 1938, 1937, 0, 1914, 1915, 1920,
	1930, 1934, 1922, 1923, 1924, 1929, 1940, 1980, 1979, 1978,
	2023, 1951, 2022, 0, 0, 0, 0, 0, 1779, 1833,
	1834, 2147, 1336, 1337, 1338, 1339, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 1465, 1466, 46, 1134, 1582,
	1416, 1416, 1416, 1416, 1416, 1416, 1076, 1077, 1078, 1079,
	1080, 1104, 1105, 1111, 1112, 2037, 2038, 2039, 2040, 1871,
	2182, 1879, 1880, 2019, 2020, 1892, 1893, 2213, 2214, -2,
	-2, -2, 234, 235, 236, 237, 238, 239, 240, 241,
	0, 1832, 2161, 2162, 230, 0, 0, 298, 299, 295,
	296, 297, 1118, 1119, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 272, 273, 274, 275, 276,
	277, 278, 279, 280, 281, 282, 283, 284, 285, 286,
	287, 288, 289, 290, 291, 292, 2242, 0, 855, 0,
	0, 0, 0, 0, 0, 1624, 1625, 1488, 0, 1480,
	1479, 65, 0, 882, -2, 0, 0, 0, 0, 49,
	0, 54, 942, 885, 79, 78, 1528, 1531, 0, 0,
	0, 61, 1489, 69, 71, 1490, 0, 887, 888, 0,
	918, 922, 0, 0, 0, 1602, 1601, 1601, 104, 0,
	0, 105, 125, 126, 127, 0, 0, 111, 112, 1588,
	1589, 45, 0, 0, 179, 180, 0, 43, 428, 0,
	175, 0, 421, 360, 0, 1506, 0, 0, 0, 0,
	0, 882, 0, 1596, 156, 157, 164, 165, 166, 401,
	401, 401, 575, 0, 0, 167, 167, 533, 534, 535,
	0, 0, -2, 426, 0, 513, 0, 0, 415, 415,
	419, 417, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 668, 0, 402, 0, 573, 574, 464,
	0, 0, 0, 0, 0, 0, 0, 0, 1604, 1605,
	0, 550, 551, 0, 0, 0, 401, 401, 0, 0,
	0, 0, 401, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 1519, 0, 0, 0, -2, 0, 712,
	0, 0, 0, 1597, 1597, 0, 719, 0, 0, 0,
	724, 0, 0, 725, 0, 783, 783, 781, 782, 727,
	728, 729, 730, 786, 0, 0, 410, 411, 412, 783,
	786, 0, 786, 786, 786, 786, 783, 783, 783, 786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2243,
	789, 786, 0, 758, 0, 759, 760, 761, 762, 765,
	766, 768, 2244, 2245, 1614, 1615, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 2243, 2243, 772, 776,
	1587, 798, 804, 806, 807, 0, 0, 817, 820, 839,
	51, 1878, 827, 51, 829, 830, 831, 857, 858, 863,
	0, 0, 0, 0, 869, 870, 871, 0, 0, 874,
	875, 876, 0, 0, 0, 0, 0, 1005, 0, 0,
	1124, 1125, 1126, 1127, 1128, 1129, 1130, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1025, 1026, 0, 0, 0,
	1050, 1051, 1052, 1053, 1056, 0, 1067, 0, 1069, 1461,
	-2, 0, 0, 0, 1061, 1062, 0, 0, 0, 0,
	0, 0, 0, 1453, 0, 0, 1148, 0, 1149, 1151,
	1152, 1153, 0, 1154, 1155, 892, 892, 892, 892, 892,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	892, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 902, 0, 0,
	902, 902, 0, 0, 222, 223, 224, 225, 226, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	300, 248, 249, 250, 1134, 0, 0, 0, 48, 847,
	848, 0, 968, 1607, 0, 0, 898, 0, 1622, 59,
	68, 70, 1488, 63, 1488, 0, 904, 0, 0, -2,
	-2, 905, 911, 912, 913, 914, 915, 56, 2241, 57,
	0, 76, 0, 50, 0, 0, 1529, 0, 1532, 0,
	0, 0, 374, 1536, 0, 0, 1481, 1482, 1485, 0,
	919, 1972, 923, 0, 925, 926, 0, 0, 102, 0,
	984, 0, 0, 0, 113, 0, 115, 116, 0, 0,
	0, 385, 1590, 1591, 1592, -2, 408, 0, 385, 369,
	308, 309, 310, 360, 312, 360, 360, 360, 360, 374,
	374, 374, 374, 343, 344, 345, 346, 347, 0, 0,
	329, 360, 360, 360, 360, 350, 351, 352, 353, 354,
	355, 356, 357, 313, 314, 315, 316, 317, 318, 319,
	320, 321, 362, 362, 362, 362, 362, 366, 366, 0,
	44, 0, 389, 0, 1485, 0, 0, 1519, 1599, 1609,
	0, 0, 0, 1599, 134, 0, 0, 0, 576, 618,
	527, 564, 577, 0, 530, 531, -2, 0, 0, 512,
	0, 514, 0, 409, 0, -2, 0, 419, 0, 415,
	419, 416, 419, 407, 420, 554, 555, 556, 0, 558,
	559, 648, 954, 0, 0, 0, 0, 0, 654, 655,
	656, 0, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 0, 0, 0, 514, 0, 561, 0, 0, 465,
	466, 467, 0, 0, 470, 471, 472, 473, 0, 0,
	476, 477, 478, 971, 972, 479, 480, 505, 506, 507,
	481, 482, 483, 484, 485, 486, 487, 499, 500, 501,
	502, 503, 504, 488, 489, 490, 491, 492, 493, 496,
	0, 149, 1510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1597,
	0, 0, 0, 0, 901, 986, 1620, 1621, 721, 0,
	0, 787, 788, 0, 413, 414, 786, 786, 731, 773,
	0, 786, 735, 774, 736, 738, 737, 739, 752, 753,
	786, 742, 784, 785, 743, 744, 745, 746, 747, 748,
	749, 769, 754, 755, 756, 790, 0, 794, 795, 770,
	771, 0, 0, 810, 811, 0, 818, 842, 840, 841,
	843, 835, 836, 837, 838, 0, 844, 0, 0, 860,
	98, 865, 866, 867, 868, 880, 873, 1136, 1002, 1003,
	1004, 0, 1006, 1010, 0, 1120, 1122, 1012, 1008, 1014,
	1131, 1132, 1133, 0, 0, 0, 0, 0, 1018, 1022,
	1027, 1028, 1029, 1030, 1031, 0, 1032, 0, 1035, 1036,
	1037, 1038, 1039, 1040, 1046, 1429, 1430, 1431, 1065, 301,
	302, 0, 1066, 0, 0, 0, 0, 0, 0, 0,
	0, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1135, 0, 916, 0, 0, 1459, 1456, 0, 0,
	0, 1415, 1417, 0, 0, 0, 893, 894, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 0, 0, 1432, 0, 0, 0, 0,
	0, 1452, 0, 1071, 1072, 1073, 0, 0, 0, 0,
	0, 0, 1194, 0, 0, 0, 0, 1608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1340,
	1341, 1342, 1343, 41, 0, 0, 0, 0, 0, 0,
	0, 903, 1463, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1365,
	0, 0, 0, 0, 0, 0, 1580, 0, 0, 850,
	851, 853, 0, 988, 0, 969, 0, 0, 856, 0,
	897, 0, 900, 62, 64, 909, 910, 0, 927, 906,
	58, 53, 0, 0, 946, 1530, 1533, 1534, 374, 1556,
	0, 383, 383, 380, 1491, 1492, 0, 1484, 1486, 1487,
	81, 924, 920, 0, 1000, 0, 0, 983, 0, 930,
	932, 933, 934, 966, 0, 937, 938, 0, 0, 0,
	0, 0, 100, 985, 106, 0, 114, 0, 0, 119,
	120, 107, 108, 109, 110, 0, 607, -2, 460, 181,
	183, 184, 185, 176, -2, 372, 370, 371, 311, 374,
	374, 337, 338, 339, 340, 341, 342, 0, 0, 330,
	331, 332, 333, 322, 0, 323, 324, 325, 364, 0,
	326, 327, 0, 328, 427, 0, 1493, 390, 391, 393,
	401, 0, 396, 397, 0, 401, 401, 0, 422, 423,
	0, 1485, 1510, 0, 0, 0, 1610, 1609, 1609, 1609,
	0, 169, 170, 171, 172, 173, 174, 643, 0, 0,
	619, 641, 642, 167, 0, 0, 177, 516, 515, 0,
	675, 0, 425, 0, 0, 419, 419, 404, 405, 557,
	0, 0, 650, 651, 652, 653, 0, 0, 0, 543,
	454, 0, 544, 545, 514, 516, 0, 0, 385, 468,
	469, 474, 475, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 592, 593, 594, 597,
	599, 518, 603, 605, 596, 598, 600, 518, 604, 606,
	1507, 1508, 1509, 0, 0, 713, 0, 0, 451, 96,
	1598, 718, 722, 723, 783, 741, 775, 783, 733, 740,
	763, 808, 809, 814, 822, 823, 824, 825, 826, 864,
	0, 0, 0, 0, 872, 0, 0, 1011, 1121, 1123,
	1015, 0, 1019, 1023, 0, 0, 0, 0, 0, 1070,
	1068, 1463, 0, 0, 0, 1117, 0, 0, 0, 1139,
	1140, 0, 0, 0, 1457, 0, 0, 1146, 0, 1418,
	1156, 0, 0, 0, 0, 0, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1479, 1173, 0, 0,
	0, 0, 0, 1178, 1179, 1180, 1181, 1182, 0, 1184,
	0, 1185, 0, 0, 0, 0, 1192, 1193, 1195, 0,
	0, 1198, 1199, 0, 1201, 0, 1203, 1204, 1205, 1206,
	1207, 1208, 0, 1210, 0, 1212, 1213, 1214, 0, 1216,
	0, 1218, 1219, 0, 1221, 0, 1223, 0, 1226, 0,
	1229, 0, 1232, 0, 1235, 0, 1238, 0, 1241, 0,
	1244, 0, 1247, 0, 1250, 0, 1253, 0, 1256, 0,
	1259, 0, 1262, 0, 1265, 0, 1268, 0, 1271, 1272,
	1273, 0, 1275, 0, 1277, 0, 1280, 1281, 0, 1283,
	0, 1286, 0, 1289, 0, 0, 1290, 0, 0, 0,
	1294, 0, 0, 0, 0, 1303, 1304, 1305, 1306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1317,
	1318, 1319, 1320, 1321, 1322, 0, 1324, 0, 1099, 0,
	0, 1099, 0, 0, 0, 0, 0, 1137, 902, 0,
	1419, 1420, 1421, 1422, 1423, 0, 0, 0, 0, 0,
	0, 1363, 1364, 1366, 0, 0, 1369, 0, 1371, 0,
	1581, 849, 852, 854, 940, 989, 990, 0, 0, 0,
	0, 970, 1606, 895, 896, 899, 948, 0, 1467, 0,
	0, 927, 1000, 928, 0, 907, 55, 943, 0, 1538,
	1537, 1550, 1563, 383, 383, 377, 378, 384, 379, 381,
	382, 1483, 0, 1488, 0, 1574, 0, 0, 1566, 0,
	0, 0, 0, 0, 0, 0, 0, 973, 0, 0,
	976, 0, 0, 0, 0, 967, 938, 0, 939, 0,
	-2, 0, 0, 94, 95, 0, 0, 0, 117, 118,
	0, 0, 124, 386, 387, 158, 167, 462, 182, 435,
	0, 0, 307, 373, 334, 335, 336, 0, 358, 0,
	0, 0, 0, 456, 130, 1497, 1496, 401, 401, 392,
	0, 395, 0, 0, 0, 1611, 361, 424, 0, 148,
	0, 0, 0, 0, 0, 154, 613, 0, 0, 620,
	0, 0, 0, 525, 0, 536, 537, 0, 647, -2,
	709, 389, 0, 403, 406, 955, 0, 0, 538, 0,
	541, 542, 455, 516, 547, 548, 562, 549, 497, 498,
	495, 0, 0, 1520, 1521, 1526, 1524, 1525, 135, 583,
	585, 589, 584, 588, 0, 0, 0, 520, 0, 520,
	581, 0, 451, 1493, 0, 717, 452, 453, 786, 786,
	859, 99, 0, 862, 0, 0, 0, 0, 1016, 1020,
	1033, 1034, 1424, 1450, 360, 360, 1437, 360, 366, 1440,
	360, 1442, 360, 1445, 360, 1448, 1449, 0, 0, 1063,
	0, 917, 0, 0, 1145, 1460, 0, 0, 1157, 1158,
	1159, 1160, 1161, 1454, 0, 0, 0, 1177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 147,
	0, 0, 0, 0, 0, 0, 1374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1094, 1098,
	0, 1100, 1101, 0, 0, 1326, 0, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 1464, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 991, 996, 996,
	996, 0, 0, 0, 1593, 1594, 1468, 1469, 1000, 1470,
	929, 908, 947, 1556, 0, 1549, 0, -2, 1558, 0,
	0, 0, 1564, 375, 376, 921, 82, 1001, 85, 0,
	1574, 1583, 0, 1565, 1576, 1578, 0, 0, 0, 1570,
	0, 1000, 931, 962, 964, 0, 959, 974, 975, 977,
	0, 979, 0, 981, 982, 942, 936, 0, 102, 0,
	1000, 1000, 101, 0, 987, 121, 122, 123, 461, 186,
	191, 0, 0, 0, 196, 0, 198, 0, 0, 0,
	203, 204, 401, 401, 436, 0, 304, 306, 0, 0,
	189, 374, 0, 374, 0, 365, 367, 0, 437, 457,
	1494, 1495, 0, 0, 394, 398, 399, 400, 0, 1600,
	150, 0, 0, 0, 616, 0, 644, 0, 0, 0,
	0, 0, 0, 178, 517, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 0, 401, 0, 0, 0, 401,
	401, 401, 0, 701, 388, 0, 0, 672, 669, 539,
	0, 220, 221, 228, 229, 231, 0, 0, 0, 0,
	0, 546, 942, 1511, 1512, 1513, 0, 1523, 1527, 138,
	0, 0, 0, 0, 591, 595, 601, 0, 519, 602,
	714, 715, 716, 97, 726, 732, 861, 881, 1009, 1017,
	1021, 0, 0, 0, 0, 1451, 1435, 374, 1438, 1439,
	1441, 1443, 1444, 1446, 1447, 1059, 1060, 1064, 0, 1142,
	0, 1144, 1458, 0, 1488, 0, 0, 0, 1176, 0,
	0, 0, 1187, 1186, 1188, 0, 1190, 1191, 1196, 1197,
	1200, 1202, 1209, 1211, 1215, 1217, 1220, 1222, 1224, 0,
	1227, 0, 1230, 0, 1233, 0, 1236, 0, 1239, 0,
	1242, 0, 1245, 0, 1248, 0, 1251, 0, 1254, 0,
	1257, 0, 1260, 0, 1263, 0, 1266, 0, 1269, 0,
	1274, 1276, 0, 1279, 1282, 1284, 0, 1287, 0, 1291,
	0, 1293, 1295, 1296, 0, 0, 0, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1323, 0, 1092,
	1095, 1325, 1102, 1103, 1108, 1328, 0, 0, 0, 1331,
	0, 0, 0, 1335, 1138, 1346, 0, 1351, 0, 0,
	1357, 0, 1361, 0, 1367, 1368, 1370, 1372, 0, 0,
	0, 0, 0, 968, 949, 66, 1470, 1472, 0, 1543,
	1541, 1541, 1551, 1552, 0, 0, 1559, 0, 0, 0,
	0, 86, 0, 0, 0, 1579, 0, 0, 0, 0,
	103, 1479, 956, 963, 0, 0, 957, 0, 958, 978,
	980, 935, 0, 1000, 1000, 92, 93, 0, 192, 0,
	194, 0, 197, 199, 200, 201, 207, 208, 209, 202,
	0, 0, 303, 305, 0, 0, 348, 359, 349, 0,
	0, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 942,
	151, 152, 153, 608, 0, 618, 0, 944, 0, 611,
	0, 528, 0, 0, 0, 401, 401, 401, 0, 0,
	0, 0, 686, 0, 0, 649, 0, 657, 0, 0,
	0, 232, 233, 0, 1522, 582, 0, 136, 137, 0,
	0, 587, 521, 522, 1057, 0, 0, 0, 1058, 1436,
	0, 0, 0, 0, 1455, 0, 0, 0, 0, 1183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1299, 0, 0, 0, 638, 639, 0, 1375,
	1097, 1479, 0, 1099, 1109, 1110, 0, 1099, 1345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 988, 1472, 1477, 0, 0,
	1546, 0, 1539, 1542, 1540, 1553, 0, 0, 1560, 0,
	1562, 0, 1584, 1585, 1577, 0, 1569, 1572, 1568, 1571,
	1488, 960, 0, 965, 0, 1479, 91, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 206,
	0, 0, 363, 368, 0, 0, 0, 609, 0, 945,
	621, 612, 0, 699, 0, 703, 0, 0, 0, 706,
	707, 708, 685, 0, 689, 429, 673, 670, 671, 540,
	0, 139, 140, 0, 0, 0, 1425, 0, 1428, 1141,
	1143, 0, 1172, 1174, 1175, 1433, 1434, 1189, 1225, 1228,
	1231, 1234, 1237, 1240, 1243, 1246, 1249, 1252, 1255, 1258,
	1261, 1264, 1267, 1270, 1278, 1285, 1288, 1292, 1297, 0,
	1300, 0, 0, 1301, 0, 640, 1088, 0, 0, 1106,
	1107, 0, 1330, 1332, 1333, 1334, 1347, 0, 1352, 1353,
	0, 1358, 0, 1362, 1373, 0, 993, 950, 951, 998,
	999, 0, 0, 941, 1477, 84, 1478, 1475, 0, 1473,
	1471, 1535, 0, 1544, 1545, 1554, 1555, 1561, 0, 1567,
	0, 89, 0, 0, 0, 1488, 193, 0, 212, 0,
	617, 0, 620, 610, 697, 698, 0, 710, 702, 704,
	705, 687, -2, 1514, 0, 0, 0, 590, 1426, 0,
	0, 1302, 0, 636, 637, 1096, 1089, 0, 1074, 1075,
	1093, 1327, 1329, 0, 0, 0, 0, 992, 994, 995,
	83, 0, 1474, 1114, 0, 1547, 1548, 1575, 1573, 961,
	968, 0, 90, 442, 435, 1514, 0, 0, 0, 690,
	691, 692, 693, 694, 695, 696, 579, 1516, 141, 142,
	0, 509, 510, 511, 135, 0, 1147, 1298, 1090, 0,
	0, 0, 0, 0, 1348, 0, 1354, 0, 1359, 0,
	952, 953, 1476, 0, 0, 622, 0, 624, 0, -2,
	430, 443, 0, 187, 213, 214, 0, 0, 217, 218,
	219, 210, 211, 131, 0, 0, 711, 0, 1517, 1518,
	0, 138, 0, 0, 1081, 1082, 1083, 1084, 1086, 0,
	0, 0, 0, 1115, 1094, 623, 0, 0, 385, 0,
	633, 431, 432, 0, 438, 439, 440, 441, 215, 216,
	645, 0, 0, 508, 586, 1427, 0, 0, 1349, 0,
	1355, 0, 1360, 0, 625, 626, 634, 0, 433, 0,
	434, 0, 0, 0, 614, 0, 645, 1515, 1091, 1085,
	1087, 0, 0, 1113, 0, 635, 631, 444, 446, 447,
	0, 0, 445, 646, 615, 1350, 1356, 0, 448, 449,
	450, 627, 628, 629, 630,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 145, 3, 3, 3, 173, 165, 3,
	87, 89, 170, 168, 88, 169, 223, 171, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 733,
	153, 152, 154, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 175, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 141, 3, 176,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 142, 143, 144, 146,
	147, 148, 149, 150, 151, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 166, 167, 172, 174, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:599
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:612
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:613
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:617
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:656
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:662
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:668
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:673
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:677
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:683
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:687
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:693
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:699
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:705
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:709
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:714
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:718
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:724
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:728
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:734
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:782
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:788
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:808
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:812
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:818
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:822
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:830
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:834
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:840
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:849
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:853
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:859
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:868
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:874
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:880
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:887
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:893
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:901
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:905
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:911
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:923
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:935
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:939
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:945
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:951
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:955
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:959
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:963
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:968
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:973
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:977
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:983
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:987
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:993
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:997
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1002
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1006
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1012
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1018
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1022
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1028
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1032
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1036
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1040
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1046
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1050
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1054
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1060
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1064
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1070
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1074
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1080
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1084
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1088
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1094
		{
			yyVAL.str = RepeatableReadStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1098
		{
			yyVAL.str = ReadCommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1102
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.str = SerializableStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1112
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1116
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1120
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1126
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1132
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1139
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1148
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1152
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1159
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1163
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1168
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1172
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1178
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1183
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1188
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1194
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1199
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1205
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1214
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1220
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1224
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1230
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1236
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1243
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1250
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1255
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1260
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1265
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1272
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1279
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1290
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1297
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1301
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1307
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1311
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1315
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1319
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1323
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1333
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1337
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1343
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1347
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1353
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1357
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1363
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1367
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1373
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1377
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1383
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1387
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1393
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1398
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1403
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1407
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1416
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1431
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1440
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1449
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1453
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1462
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1466
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1472
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1478
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1483
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1489
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1494
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1499
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1504
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1513
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1518
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1522
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1527
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1533
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1543
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1549
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1553
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1557
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1563
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1567
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1572
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1576
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1581
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1587
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1593
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1598
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1603
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1609
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1624
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1628
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1632
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1644
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1654
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1665
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1675
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1679
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1699
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1703
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1707
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1711
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1715
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1719
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1723
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1728
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1732
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1736
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = Armscii8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = ASCIIStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = Big5Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = UBinaryStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = Cp1250Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = Cp1251Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = Cp1256Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = Cp1257Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = Cp850Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = Cp852Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = Cp866Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = Cp932Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = Dec8Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = EucjpmsStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = EuckrStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = Gb18030Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = Gb2312Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = GbkStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = Geostd8Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = GreekStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = HebrewStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = Hp8Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = Keybcs2Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = Koi8rStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = Koi8uStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.str = Latin1Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.str = Latin2Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.str = Latin5Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.str = Latin7Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.str = MacceStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.str = MacromanStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.str = SjisStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.str = Swe7Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = Tis620Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.str = Ucs2Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.str = UjisStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.str = Utf16Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = Utf16leStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = Utf32Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.str = Utf8mb3Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.str = Utf8mb4Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.str = Utf8mb3Str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1916
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1920
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1924
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1930
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1934
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1938
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1944
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1948
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1954
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1958
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1962
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1966
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1983
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2044
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2056
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2068
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2080
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2088
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2098
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2102
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2108
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2112
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2116
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2136
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2140
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2161
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2206
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2211
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2215
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2220
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2224
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2233
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2237
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2244
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2248
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2254
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2262
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2266
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2270
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2275
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2279
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2284
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2288
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2296
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2300
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2305
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2310
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2315
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2320
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2326
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2330
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2335
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2339
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2343
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2349
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2354
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2358
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2364
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2368
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2374
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2378
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2383
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2387
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2391
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2395
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2399
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2403
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2409
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2413
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2419
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2423
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2427
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2431
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2435
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2440
		{
			yyVAL.str = ""
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2444
		{
			yyVAL.str = yyDollar[2].str
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2450
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2454
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2458
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2464
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2468
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2473
		{
			yyVAL.str = ""
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2477
		{
			yyVAL.str = yyDollar[1].str
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2492
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2502
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2506
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2512
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2516
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2522
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2526
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2532
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2536
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2542
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2548
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2552
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2556
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2560
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2564
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2569
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2573
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2579
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2585
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2591
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2595
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2599
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2604
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2608
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2614
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2620
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2626
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2630
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2634
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2638
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2642
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2647
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2651
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2655
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2661
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2665
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2670
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2674
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2679
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2683
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2689
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2693
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2697
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2703
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2707
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2713
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2717
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2721
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2725
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2729
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2733
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2737
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2741
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2749
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2753
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2757
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2761
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2765
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2769
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2777
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2781
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2789
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2793
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2797
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2801
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2805
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2809
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2813
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2817
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2821
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2825
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2829
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2833
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2838
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2842
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2865
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2869
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2882
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2888
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2892
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2897
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2901
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2906
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2910
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2915
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2919
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2923
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2932
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2936
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2940
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2944
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2948
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2954
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2958
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2962
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2968
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2972
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2976
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2980
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2984
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3009
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3014
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3018
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3022
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3026
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3030
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3034
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3038
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3042
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3046
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3050
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3054
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3058
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3062
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3066
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3070
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3074
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3078
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3082
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3086
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3090
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3096
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3100
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3106
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3110
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3114
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3118
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3122
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3126
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3130
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3134
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3138
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3142
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3148
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3155
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3185
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3192
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3211
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3221
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3225
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3229
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3242
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3252
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3256
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3260
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3278
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3299
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3307
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3320
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3339
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3348
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3356
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3363
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3369
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3376
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3383
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3387
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3396
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3404
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3413
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3420
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3428
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3432
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3441
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3452
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3456
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3461
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3465
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3470
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3474
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3480
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3486
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3492
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3496
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3502
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3506
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3512
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3518
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3524
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3530
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3536
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3540
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3544
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3548
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3554
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3560
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3566
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3570
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3574
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3580
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3584
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3589
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3593
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3598
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3602
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3608
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3612
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3616
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3620
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3624
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3628
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3632
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3636
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3640
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3644
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3648
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3652
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3656
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3660
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3664
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3668
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3672
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3676
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3680
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3684
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3688
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3692
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3697
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3701
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3705
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3711
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3715
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3721
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3726
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3730
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3735
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3740
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3745
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3750
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3755
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3761
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3767
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3772
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3778
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3784
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3788
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3794
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3799
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3803
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3808
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3813
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3818
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3823
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3829
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3835
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3842
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3849
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3856
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3864
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3868
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3874
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3880
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3886
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3892
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3898
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3904
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3910
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3916
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3922
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3926
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3938
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3942
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3961
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3965
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4041
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4105
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4149
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4153
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4176
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4180
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4184
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4188
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4192
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4196
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4204
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4208
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4214
		{
			yyVAL.str = ""
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.str = "extended "
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4224
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4228
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4234
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4238
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4244
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4248
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4252
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4258
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4262
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4266
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4272
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4276
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4282
		{
			yyVAL.empty = struct{}{}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4286
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4290
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4296
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4306
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4310
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4314
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4321
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4325
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4329
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4333
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4340
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4344
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4349
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4353
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4359
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4363
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4369
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4373
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4377
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4384
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4390
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4394
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4399
		{
			yyVAL.empty = struct{}{}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4401
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4404
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4406
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4410
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4416
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4421
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4425
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4429
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4433
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4437
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4441
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4445
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4450
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4454
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4458
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4462
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.str = yyDollar[1].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.str = yyDollar[1].str
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.str = yyDollar[1].str
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4482
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4486
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4490
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4494
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4499
		{
			yyVAL.str = ""
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4503
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4507
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4513
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4517
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4523
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4529
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4533
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4539
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4545
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4549
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4555
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4561
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4565
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4569
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4573
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4579
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4585
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4591
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4595
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4599
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4603
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4607
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4611
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4617
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4621
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4627
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4631
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4635
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4639
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4643
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4647
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4651
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4655
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4659
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4663
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4667
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4671
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4676
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4680
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4684
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4689
		{
			yyVAL.str = ""
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4693
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4698
		{
			setAllowComments(yylex, true)
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4702
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4708
		{
			yyVAL.strs = nil
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4712
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4718
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4722
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4726
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4731
		{
			yyVAL.str = ""
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4735
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4739
		{
			yyVAL.str = SQLCacheStr
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4744
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4748
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4752
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4758
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4762
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4772
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4777
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4781
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4787
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4791
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4800
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4805
		{
			yyVAL.strs = nil
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4809
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4813
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4817
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4821
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4827
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4831
		{
			yyVAL.str = SQLCacheStr
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4835
		{
			yyVAL.str = DistinctStr
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4839
		{
			yyVAL.str = DistinctStr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4843
		{
			yyVAL.str = StraightJoinHint
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4847
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4851
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4857
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4861
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4867
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4871
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4875
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4879
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4884
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4888
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4892
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4899
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4904
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4908
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4914
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4920
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4924
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4934
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4938
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4942
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4946
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4952
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4956
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4962
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4966
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4971
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4975
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4980
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4984
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4990
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4994
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5000
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5004
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5010
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5014
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5018
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5022
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5028
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5032
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5045
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5049
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5053
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5057
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5063
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5065
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5069
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5071
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5075
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5077
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5080
		{
			yyVAL.empty = struct{}{}
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5082
		{
			yyVAL.empty = struct{}{}
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5085
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5089
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5093
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5100
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5106
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5110
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5114
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5120
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5126
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5130
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5134
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5138
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5144
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5148
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5158
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5162
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5168
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5172
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5178
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5183
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5187
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5193
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5197
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5203
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5207
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5211
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5215
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5220
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5224
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5228
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5232
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5238
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5242
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5249
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5253
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5257
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5261
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5265
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5269
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5273
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5277
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5287
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5291
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5295
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5301
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5313
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5317
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5321
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5325
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5329
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5333
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5337
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5341
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5347
		{
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5350
		{
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5356
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5360
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5364
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5368
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5372
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5376
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5380
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5384
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5388
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5392
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5396
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5400
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5404
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5408
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5412
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5418
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5422
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5446
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5450
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5470
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5474
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5478
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5502
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5506
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5514
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5524
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5528
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5534
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5538
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5544
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5548
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5552
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5558
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5562
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5569
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5573
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5577
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5581
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5585
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5591
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5595
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5599
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5603
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5607
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5611
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5615
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5620
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5624
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5630
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5634
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5639
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5643
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5648
		{
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5651
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5657
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5663
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5667
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5672
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5679
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5685
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5689
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5695
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5699
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5705
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5709
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5714
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5721
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5727
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5731
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5737
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5743
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5747
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5753
		{
			yyVAL.str = ""
		}
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5757
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5763
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5767
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5774
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5778
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5782
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5786
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5792
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5796
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5800
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5804
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5808
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5812
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5816
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5822
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5826
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5830
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5837
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5843
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5847
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5857
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5861
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5871
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5875
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5879
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5883
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5887
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5891
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5895
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5899
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5903
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5907
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5922
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5932
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5936
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5941
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5946
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5950
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5954
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5958
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5962
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5966
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5970
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5978
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5982
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6058
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6062
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6066
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6070
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6074
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6078
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6082
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6086
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6090
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6094
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6098
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6102
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6114
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6134
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6166
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6198
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6202
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6206
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6210
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6226
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6230
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6234
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6238
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6242
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6258
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6282
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6286
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6290
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6310
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6314
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6318
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6322
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6326
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6330
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6334
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6338
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6342
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6346
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6350
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6354
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6358
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6362
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6366
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6370
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6374
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6378
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6398
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6402
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6406
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6410
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6414
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6418
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6422
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6426
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6430
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6434
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6438
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6442
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6446
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6450
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6454
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6458
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6462
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6466
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6470
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6474
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6478
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6482
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6486
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6490
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6494
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6498
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6502
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6506
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6510
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6514
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6518
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6522
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6526
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6530
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6534
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6538
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6542
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6546
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6550
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6554
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6558
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6562
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6566
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6570
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6574
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6578
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6582
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6586
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6590
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6594
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6598
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6602
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6606
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6610
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6614
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6618
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6622
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6626
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6630
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6634
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6638
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6642
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6646
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6650
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6654
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6658
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6662
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6666
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6676
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6680
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6684
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6688
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6693
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6697
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6703
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6707
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6711
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6715
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6719
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6724
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6728
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6732
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6736
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6740
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6744
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6749
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6753
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6757
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6761
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6768
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6772
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6778
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6782
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6786
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6790
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6796
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6800
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6804
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6808
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6812
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6816
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6820
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6825
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6829
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6835
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6839
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6843
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6847
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6851
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6855
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6859
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6863
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6867
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6871
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6875
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6879
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6883
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6887
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6891
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6895
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6899
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6903
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6907
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6911
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6917
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6921
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6925
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6929
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6933
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6937
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6941
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6945
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6949
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6953
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6957
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6961
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6965
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6969
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6973
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6977
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6981
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6985
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:6995
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:6999
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7003
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7013
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7017
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7021
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7025
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7029
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7035
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7039
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7043
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7047
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7051
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7057
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7061
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7065
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7071
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7075
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7079
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7085
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7089
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7093
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7097
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7101
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7107
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7111
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7115
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7119
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7123
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7127
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7131
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7135
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7139
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7143
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7149
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7153
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7158
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7162
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7167
		{
			yyVAL.str = string("")
		}
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7171
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7177
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7181
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7187
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7196
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7202
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7206
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7210
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7214
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7220
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7224
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7230
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7239
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7243
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7252
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7261
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7267
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7273
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7277
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7282
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7286
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7291
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7295
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7301
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7307
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7311
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7317
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7322
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7326
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7330
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7335
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7339
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7345
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7349
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7353
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7358
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7362
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7366
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7370
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7374
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7381
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7385
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7389
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7393
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7399
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7403
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7407
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7411
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7416
		{
			yyVAL.str = ""
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7420
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7424
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7428
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7433
		{
			yyVAL.str = ""
		}
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7437
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7443
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7447
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7452
		{
			yyVAL.str = ""
		}
	case 1515:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7456
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7461
		{
			yyVAL.str = "cascaded"
		}
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7465
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7469
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7474
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7478
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7484
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7490
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7496
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7505
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7509
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7514
		{
			yyVAL.str = ""
		}
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7518
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7524
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7528
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7532
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7536
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7540
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7544
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7548
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7554
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7558
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7562
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7567
		{
			yyVAL.str = ""
		}
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7571
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7575
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7580
		{
			yyVAL.str = ""
		}
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7584
		{
			yyVAL.str = " header"
		}
	case 1543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7589
		{
			yyVAL.str = ""
		}
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7593
		{
			yyVAL.str = " manifest on"
		}
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7597
		{
			yyVAL.str = " manifest off"
		}
	case 1546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7602
		{
			yyVAL.str = ""
		}
	case 1547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7606
		{
			yyVAL.str = " overwrite on"
		}
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7610
		{
			yyVAL.str = " overwrite off"
		}
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7616
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7621
		{
			yyVAL.str = ""
		}
	case 1551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7625
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7631
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7635
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7641
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7645
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7650
		{
			yyVAL.str = ""
		}
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7654
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7660
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7664
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7670
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7674
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7678
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7683
		{
			yyVAL.str = ""
		}
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7687
		{
			yyVAL.str = " optionally"
		}
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7700
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7704
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7708
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7712
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7716
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7722
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7726
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7730
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1573:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7734
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7739
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7743
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7749
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7753
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7759
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7763
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7769
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7773
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7778
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7788
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7792
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7798
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7805
		{
			yyVAL.str = "charset"
		}
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7815
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7819
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7823
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7832
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7834
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7837
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7839
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7842
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7844
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7847
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7849
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7852
		{
			yyVAL.empty = struct{}{}
		}
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7854
		{
			yyVAL.empty = struct{}{}
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7856
		{
			yyVAL.empty = struct{}{}
		}
	case 1606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7860
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7865
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7869
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7874
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7876
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7880
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7886
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7890
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7897
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7903
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7907
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7913
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7917
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7924
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7930
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7936
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7940
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7944
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8587
		{
		}
	case 2241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8592
		{
		}
	case 2242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8596
		{
			skipToEnd(yylex)
		}
	case 2243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8601
		{
			skipToEnd(yylex)
		}
	case 2244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8605
		{
			skipToEnd(yylex)
		}
	case 2245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8609
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
