// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const IN = 57492
const SHIFT_LEFT = 57493
const SHIFT_RIGHT = 57494
const DIV = 57495
const MOD = 57496
const UNARY = 57497
const COLLATE = 57498
const BINARY = 57499
const UNDERSCORE_ARMSCII8 = 57500
const UNDERSCORE_ASCII = 57501
const UNDERSCORE_BIG5 = 57502
const UNDERSCORE_BINARY = 57503
const UNDERSCORE_CP1250 = 57504
const UNDERSCORE_CP1251 = 57505
const UNDERSCORE_CP1256 = 57506
const UNDERSCORE_CP1257 = 57507
const UNDERSCORE_CP850 = 57508
const UNDERSCORE_CP852 = 57509
const UNDERSCORE_CP866 = 57510
const UNDERSCORE_CP932 = 57511
const UNDERSCORE_DEC8 = 57512
const UNDERSCORE_EUCJPMS = 57513
const UNDERSCORE_EUCKR = 57514
const UNDERSCORE_GB18030 = 57515
const UNDERSCORE_GB2312 = 57516
const UNDERSCORE_GBK = 57517
const UNDERSCORE_GEOSTD8 = 57518
const UNDERSCORE_GREEK = 57519
const UNDERSCORE_HEBREW = 57520
const UNDERSCORE_HP8 = 57521
const UNDERSCORE_KEYBCS2 = 57522
const UNDERSCORE_KOI8R = 57523
const UNDERSCORE_KOI8U = 57524
const UNDERSCORE_LATIN1 = 57525
const UNDERSCORE_LATIN2 = 57526
const UNDERSCORE_LATIN5 = 57527
const UNDERSCORE_LATIN7 = 57528
const UNDERSCORE_MACCE = 57529
const UNDERSCORE_MACROMAN = 57530
const UNDERSCORE_SJIS = 57531
const UNDERSCORE_SWE7 = 57532
const UNDERSCORE_TIS620 = 57533
const UNDERSCORE_UCS2 = 57534
const UNDERSCORE_UJIS = 57535
const UNDERSCORE_UTF16 = 57536
const UNDERSCORE_UTF16LE = 57537
const UNDERSCORE_UTF32 = 57538
const UNDERSCORE_UTF8 = 57539
const UNDERSCORE_UTF8MB4 = 57540
const UNDERSCORE_UTF8MB3 = 57541
const INTERVAL = 57542
const JSON_EXTRACT_OP = 57543
const JSON_UNQUOTE_EXTRACT_OP = 57544
const CREATE = 57545
const ALTER = 57546
const DROP = 57547
const RENAME = 57548
const ANALYZE = 57549
const ADD = 57550
const FLUSH = 57551
const CHANGE = 57552
const MODIFY = 57553
const DEALLOCATE = 57554
const REVERT = 57555
const SCHEMA = 57556
const TABLE = 57557
const INDEX = 57558
const VIEW = 57559
const TO = 57560
const IGNORE = 57561
const IF = 57562
const PRIMARY = 57563
const COLUMN = 57564
const SPATIAL = 57565
const FULLTEXT = 57566
const KEY_BLOCK_SIZE = 57567
const CHECK = 57568
const INDEXES = 57569
const ACTION = 57570
const CASCADE = 57571
const CONSTRAINT = 57572
const FOREIGN = 57573
const NO = 57574
const REFERENCES = 57575
const RESTRICT = 57576
const SHOW = 57577
const DESCRIBE = 57578
const EXPLAIN = 57579
const DATE = 57580
const ESCAPE = 57581
const REPAIR = 57582
const OPTIMIZE = 57583
const TRUNCATE = 57584
const COALESCE = 57585
const EXCHANGE = 57586
const REBUILD = 57587
const PARTITIONING = 57588
const REMOVE = 57589
const PREPARE = 57590
const EXECUTE = 57591
const MAXVALUE = 57592
const PARTITION = 57593
const REORGANIZE = 57594
const LESS = 57595
const THAN = 57596
const PROCEDURE = 57597
const TRIGGER = 57598
const VINDEX = 57599
const VINDEXES = 57600
const DIRECTORY = 57601
const NAME = 57602
const UPGRADE = 57603
const STATUS = 57604
const VARIABLES = 57605
const WARNINGS = 57606
const CASCADED = 57607
const DEFINER = 57608
const OPTION = 57609
const SQL = 57610
const UNDEFINED = 57611
const SEQUENCE = 57612
const MERGE = 57613
const TEMPORARY = 57614
const TEMPTABLE = 57615
const INVOKER = 57616
const SECURITY = 57617
const FIRST = 57618
const AFTER = 57619
const LAST = 57620
const VITESS_MIGRATION = 57621
const CANCEL = 57622
const RETRY = 57623
const COMPLETE = 57624
const CLEANUP = 57625
const THROTTLE = 57626
const UNTHROTTLE = 57627
const EXPIRE = 57628
const RATIO = 57629
const BEGIN = 57630
const START = 57631
const TRANSACTION = 57632
const COMMIT = 57633
const ROLLBACK = 57634
const SAVEPOINT = 57635
const RELEASE = 57636
const WORK = 57637
const BIT = 57638
const TINYINT = 57639
const SMALLINT = 57640
const MEDIUMINT = 57641
const INT = 57642
const INTEGER = 57643
const BIGINT = 57644
const INTNUM = 57645
const REAL = 57646
const DOUBLE = 57647
const FLOAT_TYPE = 57648
const DECIMAL_TYPE = 57649
const NUMERIC = 57650
const TIME = 57651
const TIMESTAMP = 57652
const DATETIME = 57653
const YEAR = 57654
const CHAR = 57655
const VARCHAR = 57656
const BOOL = 57657
const CHARACTER = 57658
const VARBINARY = 57659
const NCHAR = 57660
const TEXT = 57661
const TINYTEXT = 57662
const MEDIUMTEXT = 57663
const LONGTEXT = 57664
const BLOB = 57665
const TINYBLOB = 57666
const MEDIUMBLOB = 57667
const LONGBLOB = 57668
const JSON = 57669
const JSON_SCHEMA_VALID = 57670
const JSON_SCHEMA_VALIDATION_REPORT = 57671
const ENUM = 57672
const GEOMETRY = 57673
const POINT = 57674
const LINESTRING = 57675
const POLYGON = 57676
const GEOMETRYCOLLECTION = 57677
const MULTIPOINT = 57678
const MULTILINESTRING = 57679
const MULTIPOLYGON = 57680
const ASCII = 57681
const UNICODE = 57682
const NULLX = 57683
const AUTO_INCREMENT = 57684
const APPROXNUM = 57685
const SIGNED = 57686
const UNSIGNED = 57687
const ZEROFILL = 57688
const CODE = 57689
const COLLATION = 57690
const COLUMNS = 57691
const DATABASES = 57692
const ENGINES = 57693
const EVENT = 57694
const EXTENDED = 57695
const FIELDS = 57696
const FULL = 57697
const FUNCTION = 57698
const GTID_EXECUTED = 57699
const KEYSPACES = 57700
const OPEN = 57701
const PLUGINS = 57702
const PRIVILEGES = 57703
const PROCESSLIST = 57704
const SCHEMAS = 57705
const TABLES = 57706
const TRIGGERS = 57707
const USER = 57708
const VGTID_EXECUTED = 57709
const VITESS_KEYSPACES = 57710
const VITESS_METADATA = 57711
const VITESS_MIGRATIONS = 57712
const VITESS_REPLICATION_STATUS = 57713
const VITESS_SHARDS = 57714
const VITESS_TABLETS = 57715
const VITESS_TARGET = 57716
const VSCHEMA = 57717
const VITESS_THROTTLED_APPS = 57718
const NAMES = 57719
const GLOBAL = 57720
const SESSION = 57721
const ISOLATION = 57722
const LEVEL = 57723
const READ = 57724
const WRITE = 57725
const ONLY = 57726
const REPEATABLE = 57727
const COMMITTED = 57728
const UNCOMMITTED = 57729
const SERIALIZABLE = 57730
const CURRENT_TIMESTAMP = 57731
const DATABASE = 57732
const CURRENT_DATE = 57733
const NOW = 57734
const CURRENT_TIME = 57735
const LOCALTIME = 57736
const LOCALTIMESTAMP = 57737
const CURRENT_USER = 57738
const UTC_DATE = 57739
const UTC_TIME = 57740
const UTC_TIMESTAMP = 57741
const DAY = 57742
const DAY_HOUR = 57743
const DAY_MICROSECOND = 57744
const DAY_MINUTE = 57745
const DAY_SECOND = 57746
const HOUR = 57747
const HOUR_MICROSECOND = 57748
const HOUR_MINUTE = 57749
const HOUR_SECOND = 57750
const MICROSECOND = 57751
const MINUTE = 57752
const MINUTE_MICROSECOND = 57753
const MINUTE_SECOND = 57754
const MONTH = 57755
const QUARTER = 57756
const SECOND = 57757
const SECOND_MICROSECOND = 57758
const YEAR_MONTH = 57759
const WEEK = 57760
const REPLACE = 57761
const CONVERT = 57762
const CAST = 57763
const SUBSTR = 57764
const SUBSTRING = 57765
const GROUP_CONCAT = 57766
const SEPARATOR = 57767
const TIMESTAMPADD = 57768
const TIMESTAMPDIFF = 57769
const WEIGHT_STRING = 57770
const LTRIM = 57771
const RTRIM = 57772
const TRIM = 57773
const JSON_ARRAY = 57774
const JSON_OBJECT = 57775
const JSON_QUOTE = 57776
const JSON_DEPTH = 57777
const JSON_TYPE = 57778
const JSON_LENGTH = 57779
const JSON_VALID = 57780
const JSON_ARRAY_APPEND = 57781
const JSON_ARRAY_INSERT = 57782
const JSON_INSERT = 57783
const JSON_MERGE = 57784
const JSON_MERGE_PATCH = 57785
const JSON_MERGE_PRESERVE = 57786
const JSON_REMOVE = 57787
const JSON_REPLACE = 57788
const JSON_SET = 57789
const JSON_UNQUOTE = 57790
const COUNT = 57791
const AVG = 57792
const MATCH = 57793
const AGAINST = 57794
const BOOLEAN = 57795
const LANGUAGE = 57796
const WITH = 57797
const QUERY = 57798
const EXPANSION = 57799
const WITHOUT = 57800
const VALIDATION = 57801
const UNUSED = 57802
const ARRAY = 57803
const BYTE = 57804
const CUME_DIST = 57805
const DESCRIPTION = 57806
const DENSE_RANK = 57807
const EMPTY = 57808
const EXCEPT = 57809
const FIRST_VALUE = 57810
const GROUPING = 57811
const GROUPS = 57812
const JSON_TABLE = 57813
const LAG = 57814
const LAST_VALUE = 57815
const LATERAL = 57816
const LEAD = 57817
const NTH_VALUE = 57818
const NTILE = 57819
const OF = 57820
const OVER = 57821
const PERCENT_RANK = 57822
const RANK = 57823
const RECURSIVE = 57824
const ROW_NUMBER = 57825
const SYSTEM = 57826
const WINDOW = 57827
const ACTIVE = 57828
const ADMIN = 57829
const AUTOEXTEND_SIZE = 57830
const BUCKETS = 57831
const CLONE = 57832
const COLUMN_FORMAT = 57833
const COMPONENT = 57834
const DEFINITION = 57835
const ENFORCED = 57836
const ENGINE_ATTRIBUTE = 57837
const EXCLUDE = 57838
const FOLLOWING = 57839
const GEOMCOLLECTION = 57840
const GET_MASTER_PUBLIC_KEY = 57841
const HISTOGRAM = 57842
const HISTORY = 57843
const INACTIVE = 57844
const INVISIBLE = 57845
const LOCKED = 57846
const MASTER_COMPRESSION_ALGORITHMS = 57847
const MASTER_PUBLIC_KEY_PATH = 57848
const MASTER_TLS_CIPHERSUITES = 57849
const MASTER_ZSTD_COMPRESSION_LEVEL = 57850
const NESTED = 57851
const NETWORK_NAMESPACE = 57852
const NOWAIT = 57853
const NULLS = 57854
const OJ = 57855
const OLD = 57856
const OPTIONAL = 57857
const ORDINALITY = 57858
const ORGANIZATION = 57859
const OTHERS = 57860
const PARTIAL = 57861
const PATH = 57862
const PERSIST = 57863
const PERSIST_ONLY = 57864
const PRECEDING = 57865
const PRIVILEGE_CHECKS_USER = 57866
const PROCESS = 57867
const RANDOM = 57868
const REFERENCE = 57869
const REQUIRE_ROW_FORMAT = 57870
const RESOURCE = 57871
const RESPECT = 57872
const RESTART = 57873
const RETAIN = 57874
const REUSE = 57875
const ROLE = 57876
const SECONDARY = 57877
const SECONDARY_ENGINE = 57878
const SECONDARY_ENGINE_ATTRIBUTE = 57879
const SECONDARY_LOAD = 57880
const SECONDARY_UNLOAD = 57881
const SIMPLE = 57882
const SKIP = 57883
const SRID = 57884
const THREAD_PRIORITY = 57885
const TIES = 57886
const UNBOUNDED = 57887
const VCPU = 57888
const VISIBLE = 57889
const RETURNING = 57890
const FORMAT = 57891
const TREE = 57892
const VITESS = 57893
const TRADITIONAL = 57894
const LOCAL = 57895
const LOW_PRIORITY = 57896
const NO_WRITE_TO_BINLOG = 57897
const LOGS = 57898
const ERROR = 57899
const GENERAL = 57900
const HOSTS = 57901
const OPTIMIZER_COSTS = 57902
const USER_RESOURCES = 57903
const SLOW = 57904
const CHANNEL = 57905
const RELAY = 57906
const EXPORT = 57907
const AVG_ROW_LENGTH = 57908
const CONNECTION = 57909
const CHECKSUM = 57910
const DELAY_KEY_WRITE = 57911
const ENCRYPTION = 57912
const ENGINE = 57913
const INSERT_METHOD = 57914
const MAX_ROWS = 57915
const MIN_ROWS = 57916
const PACK_KEYS = 57917
const PASSWORD = 57918
const FIXED = 57919
const DYNAMIC = 57920
const COMPRESSED = 57921
const REDUNDANT = 57922
const COMPACT = 57923
const ROW_FORMAT = 57924
const STATS_AUTO_RECALC = 57925
const STATS_PERSISTENT = 57926
const STATS_SAMPLE_PAGES = 57927
const STORAGE = 57928
const MEMORY = 57929
const DISK = 57930
const PARTITIONS = 57931
const LINEAR = 57932
const RANGE = 57933
const LIST = 57934
const SUBPARTITION = 57935
const SUBPARTITIONS = 57936
const HASH = 57937

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	613, 145,
	-2, 153,
	-1, 48,
	132, 153,
	172, 153,
	333, 153,
	-2, 498,
	-1, 55,
	35, 739,
	233, 739,
	244, 739,
	279, 753,
	280, 753,
	-2, 741,
	-1, 60,
	235, 766,
	-2, 764,
	-1, 114,
	232, 1295,
	-2, 119,
	-1, 116,
	1, 146,
	613, 146,
	-2, 153,
	-1, 127,
	133, 384,
	238, 384,
	-2, 487,
	-1, 146,
	132, 153,
	172, 153,
	333, 153,
	-2, 507,
	-1, 699,
	217, 1316,
	-2, 1312,
	-1, 700,
	217, 1317,
	-2, 1313,
	-1, 775,
	59, 834,
	-2, 849,
	-1, 812,
	148, 1726,
	-2, 112,
	-1, 813,
	148, 1567,
	-2, 113,
	-1, 819,
	148, 1651,
	-2, 1289,
	-1, 967,
	148, 1494,
	-2, 1286,
	-1, 1008,
	243, 41,
	248, 41,
	-2, 395,
	-1, 1092,
	1, 554,
	613, 554,
	-2, 153,
	-1, 1331,
	59, 835,
	-2, 854,
	-1, 1332,
	59, 836,
	-2, 855,
	-1, 1385,
	132, 153,
	172, 153,
	333, 153,
	-2, 434,
	-1, 1464,
	133, 384,
	238, 384,
	-2, 487,
	-1, 1473,
	243, 42,
	248, 42,
	-2, 396,
	-1, 1786,
	217, 1321,
	-2, 1315,
	-1, 1870,
	132, 153,
	172, 153,
	333, 153,
	-2, 435,
	-1, 1877,
	25, 174,
	-2, 176,
	-1, 2129,
	87, 39,
	-2, 892,
	-1, 2186,
	77, 94,
	87, 94,
	-2, 912,
	-1, 2254,
	588, 666,
	-2, 640,
	-1, 2395,
	49, 1257,
	-2, 1251,
	-1, 2617,
	87, 39,
	-2, 893,
	-1, 2655,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 884,
	-1, 2937,
	588, 666,
	-2, 654,
	-1, 2995,
	22, 1653,
	32, 1653,
	173, 1653,
	255, 1653,
	313, 1653,
	314, 1653,
	315, 1653,
	316, 1653,
	317, 1653,
	318, 1653,
	319, 1653,
	321, 1653,
	322, 1653,
	323, 1653,
	324, 1653,
	325, 1653,
	326, 1653,
	327, 1653,
	328, 1653,
	329, 1653,
	330, 1653,
	331, 1653,
	332, 1653,
	334, 1653,
	336, 1653,
	337, 1653,
	338, 1653,
	339, 1653,
	340, 1653,
	341, 1653,
	342, 1653,
	343, 1653,
	344, 1653,
	347, 1653,
	348, 1653,
	349, 1653,
	350, 1653,
	351, 1653,
	352, 1653,
	353, 1653,
	354, 1653,
	355, 1653,
	470, 1653,
	-2, 598,
}

const yyPrivate = 57344

const yyLast = 43746

var yyAct = [...]int{
	699, 2758, 2759, 708, 2757, 3049, 3057, 2918, 3025, 1867,
	701, 3026, 2993, 2732, 1820, 1388, 2544, 2977, 1800, 2450,
	2457, 2507, 2083, 2354, 2871, 3, 692, 37, 1155, 2512,
	2498, 2408, 2772, 2509, 2508, 2506, 2511, 2510, 2719, 96,
	2411, 2894, 768, 1802, 2117, 2465, 1937, 2527, 2526, 2409,
	1346, 186, 2412, 615, 186, 2352, 580, 186, 790, 1824,
	2626, 690, 595, 619, 186, 2157, 2777, 2353, 693, 2620,
	691, 612, 186, 1310, 702, 641, 2529, 2646, 1840, 2406,
	2396, 2180, 2314, 2144, 2612, 2297, 1104, 186, 1900, 613,
	2219, 2549, 1925, 2251, 1905, 970, 2221, 2220, 155, 817,
	791, 1442, 1968, 611, 772, 38, 776, 1856, 2169, 595,
	1845, 36, 595, 186, 595, 1844, 770, 2150, 2136, 1333,
	2119, 1756, 1315, 1692, 793, 1489, 1780, 141, 2289, 1924,
	1946, 1040, 1682, 1640, 1832, 1907, 2213, 814, 95, 1984,
	1003, 607, 998, 1377, 2188, 1847, 1755, 1355, 624, 91,
	1471, 1313, 1240, 1704, 1659, 1589, 1176, 1585, 1478, 977,
	1922, 1569, 1009, 978, 1004, 974, 1005, 1376, 1153, 1700,
	1360, 1374, 782, 1752, 1147, 1896, 548, 1437, 1463, 1594,
	124, 125, 804, 1088, 780, 778, 598, 98, 76, 1006,
	1016, 777, 97, 1793, 763, 602, 1247, 2927, 2244, 1133,
	119, 1243, 89, 159, 3050, 1939, 1940, 1941, 117, 118,
	2720, 2495, 1939, 2273, 2272, 1982, 2242, 85, 2712, 8,
	1554, 779, 77, 1825, 7, 6, 798, 126, 803, 2675,
	90, 2305, 584, 2306, 2951, 976, 2950, 188, 189, 190,
	784, 1797, 1798, 1647, 1646, 1045, 2762, 1177, 1783, 1645,
	1644, 120, 971, 1643, 1642, 1625, 605, 1634, 606, 3014,
	2115, 603, 2392, 2600, 3029, 2762, 771, 3066, 982, 769,
	2264, 2517, 996, 987, 2146, 1042, 2453, 3024, 3040, 551,
	811, 2267, 1652, 1970, 2867, 785, 1972, 2866, 1058, 1059,
	1060, 1044, 1063, 1064, 1065, 1066, 1043, 78, 1069, 1070,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, 1083, 1084, 1085, 792, 102, 994, 1019, 1020,
	120, 2454, 1340, 1177, 3065, 993, 992, 2951, 2517, 2515,
	1971, 2761, 818, 2725, 2987, 584, 2726, 1046, 1049, 1050,
	2026, 2514, 3053, 78, 995, 1055, 2790, 2456, 2946, 78,
	2761, 2521, 3038, 1187, 2733, 2978, 1965, 104, 105, 1916,
	108, 2451, 2986, 114, 2313, 2998, 183, 2945, 2582, 546,
	87, 1452, 2116, 2160, 2197, 87, 1828, 2196, 2467, 2468,
	2198, 1091, 2446, 1061, 1910, 2452, 2515, 2304, 120, 764,
	765, 766, 767, 2447, 2448, 775, 1862, 1863, 2161, 1378,
	2023, 1379, 188, 189, 190, 2024, 1861, 78, 2521, 1738,
	80, 2281, 1150, 1799, 1123, 2280, 3003, 2458, 762, 761,
	2919, 87, 2209, 806, 807, 1128, 1129, 87, 3030, 1187,
	3001, 1124, 1111, 585, 2245, 584, 1140, 1112, 1142, 3007,
	3008, 1209, 1117, 1880, 1879, 584, 2342, 2467, 2468, 3031,
	2546, 2623, 1183, 2573, 3002, 1175, 584, 1087, 986, 2571,
	2518, 988, 2876, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1218, 1217, 1219, 1220, 1111, 1062, 1139, 1141, 593, 1112,
	1635, 1636, 1637, 2466, 1633, 87, 581, 1110, 597, 1109,
	591, 991, 2550, 1097, 1098, 2469, 2290, 1730, 1719, 1720,
	1721, 1722, 1732, 1723, 1724, 1725, 1737, 1733, 1726, 1727,
	1734, 1735, 1736, 1728, 1729, 1731, 1125, 2518, 1149, 1317,
	1130, 2153, 2154, 1544, 1909, 1100, 2252, 1118, 1183, 1947,
	1131, 991, 1086, 567, 2276, 2547, 585, 1996, 1993, 1995,
	1994, 1997, 1998, 1985, 1570, 565, 186, 3015, 186, 989,
	3052, 186, 2466, 2539, 584, 1990, 991, 1144, 983, 1826,
	1827, 2540, 1126, 1127, 2469, 985, 984, 1545, 1093, 1546,
	1132, 2714, 2002, 1137, 2003, 2292, 2004, 1138, 2713, 1989,
	2548, 595, 1157, 595, 595, 562, 2005, 1143, 1068, 87,
	1987, 1067, 2851, 999, 576, 1828, 1090, 1000, 595, 595,
	1029, 1027, 1950, 2343, 2455, 2710, 1841, 1000, 1038, 572,
	1991, 1136, 1037, 1036, 989, 2469, 1456, 1035, 1034, 1033,
	1032, 1988, 1031, 1026, 1320, 1169, 37, 1039, 975, 3067,
	3036, 1221, 1221, 1012, 1018, 975, 585, 1477, 805, 1107,
	1011, 1113, 1114, 1115, 1116, 1575, 585, 1182, 1179, 1180,
	1181, 1186, 1188, 1185, 1969, 1184, 975, 585, 1586, 1121,
	973, 1923, 1178, 2293, 1151, 1152, 1976, 990, 1095, 1582,
	1101, 1057, 1163, 1103, 1051, 2926, 2243, 2488, 552, 2275,
	554, 568, 2211, 587, 2024, 586, 558, 997, 556, 560,
	569, 561, 1089, 555, 1450, 566, 3061, 2296, 557, 570,
	571, 574, 577, 578, 579, 575, 573, 990, 564, 588,
	1224, 1225, 1226, 1227, 2246, 2309, 2038, 2709, 1449, 1448,
	1232, 1158, 1235, 1182, 1179, 1180, 1181, 1186, 1188, 1185,
	1018, 1184, 990, 1017, 2262, 2278, 2624, 1308, 1178, 1011,
	1014, 1015, 1476, 975, 1030, 1028, 1018, 1008, 1012, 2315,
	1048, 1159, 1160, 2459, 1913, 585, 1011, 2463, 1583, 2266,
	1047, 86, 186, 1446, 2944, 2462, 595, 595, 1007, 550,
	2932, 1145, 1303, 545, 2915, 1228, 2877, 2662, 1826, 1827,
	1018, 2642, 186, 1556, 1555, 1557, 1558, 1559, 2288, 2760,
	2025, 2287, 2673, 2674, 1914, 1967, 1323, 2120, 2122, 2464,
	1327, 595, 1912, 2265, 2460, 186, 772, 86, 2760, 2461,
	595, 770, 1326, 86, 1324, 1096, 595, 2519, 2520, 1172,
	1099, 77, 1309, 1574, 1170, 1171, 1018, 1321, 1108, 1017,
	2523, 2317, 1222, 1223, 3006, 81, 1915, 1018, 814, 2193,
	2156, 1249, 1245, 2299, 1246, 1017, 1911, 2107, 2298, 1576,
	1021, 1011, 1792, 1577, 1578, 1023, 2299, 1120, 1364, 1024,
	1022, 2298, 1289, 2151, 1102, 116, 1868, 1221, 1122, 1220,
	2445, 86, 787, 1325, 2519, 2520, 1701, 95, 3005, 1017,
	1025, 1056, 1106, 589, 1134, 1309, 1595, 2523, 111, 1148,
	1702, 1295, 1296, 1297, 1298, 1299, 2940, 2327, 2326, 2325,
	2319, 582, 2323, 1664, 2318, 1041, 2316, 1314, 2705, 2333,
	3059, 2321, 2636, 3060, 1986, 3058, 583, 1665, 1666, 1663,
	2320, 1579, 1380, 1173, 1705, 1017, 98, 1369, 1705, 2235,
	2052, 1011, 1014, 1015, 1192, 975, 1017, 2322, 2324, 1008,
	1012, 1021, 1011, 1191, 1192, 2786, 1023, 2680, 2679, 1954,
	1024, 1022, 1486, 1485, 1193, 1475, 1311, 1964, 112, 2121,
	3032, 1962, 1193, 1029, 769, 1027, 1345, 1571, 771, 1572,
	186, 1342, 1573, 1209, 1438, 2663, 1205, 2956, 1206, 2908,
	1365, 1959, 1959, 2064, 1447, 1966, 1193, 1322, 1564, 1370,
	1371, 1375, 1207, 1208, 1204, 1210, 1211, 1212, 1213, 1214,
	1215, 1216, 1218, 1217, 1219, 1220, 3063, 595, 3068, 1473,
	1215, 1216, 1218, 1217, 1219, 1220, 1714, 1482, 1963, 1961,
	2957, 1484, 2909, 1105, 1487, 1488, 595, 595, 1135, 595,
	1596, 595, 595, 818, 595, 595, 595, 595, 595, 595,
	1213, 1214, 1215, 1216, 1218, 1217, 1219, 1220, 1519, 1520,
	1092, 595, 1563, 1193, 87, 186, 1525, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1218, 1217, 1219, 1220, 1662, 2887,
	1340, 2859, 186, 1211, 1212, 1213, 1214, 1215, 1216, 1218,
	1217, 1219, 1220, 1483, 2858, 595, 1190, 186, 1191, 1192,
	2849, 1328, 1387, 3069, 1190, 2335, 1191, 1192, 1584, 2750,
	809, 595, 1469, 186, 2739, 1193, 2740, 1654, 1656, 1657,
	1518, 2749, 2687, 1521, 1562, 1539, 2686, 1193, 1190, 186,
	1191, 1192, 2676, 2579, 2496, 2484, 186, 1453, 1454, 1455,
	1462, 1655, 2217, 2216, 1193, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 595, 1919, 1522, 2030, 2031, 2032,
	1565, 1549, 1491, 1548, 1492, 1551, 1494, 1496, 595, 595,
	1500, 1502, 1504, 1506, 1508, 1445, 1547, 1481, 1340, 713,
	714, 715, 1537, 1193, 1480, 1709, 186, 1524, 1561, 1710,
	1459, 1531, 1460, 1458, 1528, 1190, 1472, 1191, 1192, 1340,
	1193, 1527, 1526, 1529, 1530, 1498, 1833, 1834, 3033, 1535,
	1536, 3034, 1591, 2935, 1599, 1479, 1479, 2934, 1349, 1568,
	2912, 1603, 2911, 1605, 1606, 1607, 1608, 2577, 1340, 1550,
	1612, 2910, 595, 2543, 2854, 2839, 1689, 1689, 2838, 2785,
	2783, 1193, 1624, 1687, 1687, 1695, 595, 1190, 2746, 1191,
	1192, 1600, 2684, 2669, 2551, 1193, 1686, 1690, 1604, 1190,
	2487, 1191, 1192, 595, 595, 2072, 2486, 1587, 1350, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1190, 2226, 1191, 1192,
	2214, 1193, 1305, 1660, 2923, 1523, 1980, 1979, 1667, 1162,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 994, 1823, 1805, 120, 1668, 1641, 1601,
	1658, 993, 992, 1626, 1451, 1190, 1706, 1191, 1192, 1597,
	1598, 1592, 1622, 1560, 2092, 1340, 186, 1552, 1784, 1623,
	1340, 595, 1190, 1602, 1191, 1192, 1630, 1631, 1542, 1340,
	1609, 1610, 1611, 1193, 188, 189, 190, 1538, 1753, 1193,
	1534, 1533, 1532, 2048, 2043, 186, 1351, 1146, 595, 2142,
	3051, 3020, 1340, 1661, 2042, 94, 1353, 2884, 186, 2142,
	2984, 2883, 595, 1190, 2843, 1191, 1192, 186, 2842, 186,
	2731, 186, 186, 595, 1193, 92, 595, 1190, 2440, 1191,
	1192, 92, 94, 1810, 2253, 1811, 93, 595, 2024, 1786,
	1753, 2407, 93, 1784, 1193, 188, 189, 190, 1877, 2670,
	2158, 814, 2635, 1190, 814, 1191, 1192, 2231, 1209, 95,
	2308, 188, 189, 190, 1340, 2200, 2047, 2635, 1788, 1789,
	1711, 1713, 1352, 188, 189, 190, 1876, 1935, 95, 2637,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1217, 1219,
	1220, 1340, 595, 2142, 2964, 1785, 3011, 1340, 2138, 1926,
	1927, 1928, 1843, 1816, 1930, 1932, 1934, 2084, 1189, 1886,
	1887, 1888, 1889, 94, 1786, 1190, 2939, 1191, 1192, 595,
	2142, 1190, 2166, 1191, 1192, 595, 1482, 2657, 1691, 1482,
	1835, 1482, 1872, 100, 1871, 1697, 1698, 1958, 2166, 1839,
	1804, 1842, 784, 2967, 1641, 1881, 2596, 1882, 1883, 1884,
	1885, 2142, 2960, 2952, 1340, 1854, 1190, 1193, 1191, 1192,
	2142, 2928, 2475, 1892, 1893, 1894, 1895, 1818, 1948, 2380,
	1838, 2039, 595, 2165, 595, 1902, 1190, 1875, 1191, 1192,
	595, 595, 1836, 1908, 2723, 2925, 700, 2596, 1340, 1787,
	1860, 1859, 1790, 1791, 1858, 188, 189, 190, 1193, 1933,
	2158, 1874, 2039, 1873, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1195, 2039, 101, 1945, 188, 189, 190, 186, 1931,
	2862, 1340, 2142, 2850, 100, 186, 99, 1918, 2166, 1815,
	1193, 2077, 186, 186, 1193, 94, 186, 187, 186, 2061,
	187, 1340, 2060, 187, 1960, 186, 818, 87, 596, 818,
	187, 1959, 186, 1903, 1942, 1917, 1831, 1921, 187, 1898,
	1899, 1193, 1929, 2723, 1340, 2142, 2721, 1973, 1344, 1193,
	1959, 1340, 2635, 187, 2640, 1340, 1953, 1795, 186, 1956,
	1638, 1957, 2847, 595, 1952, 1951, 1955, 1193, 1903, 1190,
	2189, 1191, 1192, 1193, 1340, 596, 1581, 1209, 596, 187,
	596, 1193, 1959, 1974, 1189, 1340, 1975, 1019, 1020, 1193,
	2077, 1340, 1977, 1978, 2706, 1193, 1372, 2598, 1479, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1218, 1217, 1219, 1220,
	1190, 1002, 1191, 1192, 2015, 2016, 2477, 2476, 1001, 2018,
	1641, 2473, 2474, 1193, 2594, 2473, 2472, 1992, 2019, 1193,
	2873, 1983, 2585, 2190, 2006, 2007, 1193, 1347, 2011, 2840,
	1193, 2189, 1190, 2192, 1191, 1192, 1190, 2014, 1191, 1192,
	2584, 2166, 1340, 2797, 2017, 2039, 1340, 2218, 1193, 2024,
	2274, 2041, 1660, 2499, 2101, 1209, 2034, 2037, 2036, 1193,
	2704, 2008, 2100, 1190, 2701, 1191, 1192, 2223, 2099, 2682,
	2020, 1190, 1193, 1191, 1192, 2035, 1193, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1218, 1217, 1219, 1220, 1193, 1190,
	774, 1191, 1192, 1193, 2190, 1190, 2098, 1191, 1192, 1441,
	2256, 1193, 2097, 1190, 2024, 1191, 1192, 1193, 1091, 2096,
	2588, 1190, 1193, 1191, 1192, 2022, 186, 1190, 2587, 1191,
	1192, 2249, 2250, 1443, 186, 2142, 2141, 1441, 1440, 595,
	1689, 2095, 1661, 1386, 1385, 595, 1901, 1687, 2033, 2541,
	2501, 2113, 2094, 2130, 2497, 1190, 595, 1191, 1192, 2257,
	2126, 1190, 1897, 1191, 1192, 2093, 1891, 1890, 1190, 2087,
	1191, 1192, 1190, 1567, 1191, 1192, 1193, 2124, 87, 1474,
	186, 2086, 1470, 1439, 186, 2545, 2085, 2051, 2688, 113,
	1190, 2874, 1191, 1192, 2082, 3046, 2162, 37, 1916, 2199,
	2081, 1190, 2222, 1191, 1192, 2080, 2182, 2647, 2648, 1808,
	1514, 3044, 101, 2143, 1190, 3027, 1191, 1192, 1190, 1193,
	1191, 1192, 1786, 100, 2949, 99, 2892, 1628, 2070, 2650,
	1190, 1193, 1191, 1192, 2493, 1190, 2492, 1191, 1192, 2689,
	2690, 2691, 2491, 1190, 2407, 1191, 1192, 595, 3017, 1190,
	2223, 1191, 1192, 186, 1190, 2653, 1191, 1192, 2236, 2078,
	186, 1515, 1516, 1517, 2009, 2429, 2139, 2652, 2426, 2425,
	2430, 1314, 2210, 2212, 595, 2152, 2692, 2114, 1785, 2049,
	2985, 595, 2427, 1822, 1510, 1482, 1482, 2428, 2248, 1629,
	595, 2181, 1348, 1340, 2431, 2135, 2175, 2176, 2140, 2203,
	1814, 2641, 2074, 2397, 2399, 2385, 2186, 2271, 1190, 2155,
	1191, 1192, 2400, 2776, 2073, 2270, 2384, 2187, 186, 186,
	186, 186, 186, 2693, 2694, 2695, 2907, 2628, 2778, 1908,
	2191, 1511, 1512, 1513, 2194, 2627, 2631, 788, 2394, 186,
	186, 1580, 2201, 2204, 2767, 789, 2766, 760, 2471, 2207,
	2227, 1190, 1053, 1191, 1192, 186, 1052, 2559, 2215, 2222,
	2104, 2105, 2302, 1190, 1701, 1191, 1192, 2633, 1161, 1338,
	1334, 2225, 2224, 2263, 595, 2234, 2228, 2229, 1702, 92,
	121, 94, 92, 2924, 1335, 2232, 2237, 2238, 2239, 94,
	93, 2233, 3055, 93, 2765, 1833, 1834, 2489, 2269, 2012,
	1462, 2171, 2174, 2175, 2176, 2172, 2869, 2173, 2177, 1812,
	1813, 1337, 187, 1336, 187, 2470, 1689, 187, 1689, 770,
	2179, 1689, 2332, 1687, 1819, 1687, 1689, 2001, 1687, 796,
	797, 2383, 2000, 1687, 2268, 2258, 2259, 1999, 595, 2382,
	2282, 2283, 2284, 2285, 2286, 2613, 2028, 596, 99, 596,
	596, 2899, 2898, 2784, 595, 2328, 2782, 2781, 2311, 2291,
	2774, 1641, 2295, 2702, 596, 596, 2374, 2632, 2630, 186,
	2357, 2310, 2294, 595, 2502, 1943, 2355, 2303, 2355, 1457,
	101, 2355, 795, 100, 2773, 2360, 2355, 595, 2621, 2158,
	2361, 100, 2138, 2312, 595, 595, 2344, 186, 186, 186,
	186, 186, 2367, 2368, 2369, 2370, 2329, 3048, 3047, 186,
	2062, 1338, 1334, 1806, 186, 2374, 1366, 186, 1357, 186,
	776, 3047, 186, 186, 186, 101, 1335, 2419, 3048, 2348,
	103, 2913, 2387, 106, 107, 2439, 100, 2668, 99, 786,
	1327, 2182, 88, 1, 2300, 1712, 2404, 2301, 2672, 3000,
	2388, 1331, 1332, 1337, 2410, 1336, 563, 1796, 2485, 2410,
	2413, 1312, 3028, 2373, 101, 2996, 2997, 186, 1553, 2375,
	2362, 2363, 2364, 2365, 2366, 100, 1543, 99, 2734, 2379,
	595, 1754, 683, 2870, 2386, 2505, 94, 1949, 595, 2389,
	2700, 1906, 1010, 186, 146, 2401, 2402, 1869, 1870, 778,
	2441, 2980, 2525, 2442, 110, 777, 186, 968, 2421, 2422,
	109, 2424, 2420, 95, 1013, 2423, 2432, 1119, 1944, 2724,
	2418, 2208, 1878, 1591, 186, 2436, 2437, 186, 187, 1392,
	2443, 2449, 596, 596, 1390, 1391, 1389, 2560, 1394, 1393,
	2063, 2376, 2377, 2378, 594, 2599, 2504, 2480, 187, 2481,
	1632, 2479, 592, 2178, 184, 1381, 2533, 1358, 1054, 553,
	2478, 1981, 559, 1233, 1627, 2532, 2381, 596, 2195, 815,
	808, 187, 1807, 2128, 2415, 2503, 596, 2625, 2393, 1908,
	2395, 2524, 596, 2145, 2482, 2483, 2398, 2391, 2906, 2490,
	2775, 816, 2536, 2965, 972, 2205, 979, 1354, 2171, 2174,
	2175, 2176, 2172, 2593, 2173, 2177, 2050, 1703, 2647, 2648,
	2554, 595, 186, 2552, 1848, 2528, 2555, 2557, 2558, 1653,
	617, 616, 614, 2131, 2159, 1196, 703, 2118, 2537, 2563,
	1367, 2170, 2168, 2167, 2010, 1855, 2649, 2645, 2569, 2992,
	1850, 1846, 2562, 2137, 625, 618, 2553, 2566, 2567, 2556,
	2568, 610, 2665, 2570, 2531, 2572, 2277, 2574, 2542, 2279,
	2206, 2538, 1174, 1330, 604, 981, 2875, 2930, 2027, 2581,
	1329, 186, 1717, 1718, 2937, 2513, 2718, 2494, 2254, 1936,
	63, 41, 2619, 1745, 599, 3013, 1165, 802, 32, 2671,
	31, 30, 2614, 2615, 29, 28, 23, 22, 21, 20,
	186, 19, 25, 18, 17, 2622, 2629, 16, 2516, 3023,
	3054, 115, 50, 47, 2654, 2644, 45, 123, 2634, 186,
	122, 48, 186, 186, 186, 44, 1094, 42, 27, 26,
	15, 2651, 595, 595, 2618, 14, 187, 2660, 2661, 13,
	12, 11, 10, 9, 5, 2533, 2707, 2708, 2658, 4,
	35, 34, 2659, 33, 2532, 1168, 24, 2, 2241, 2666,
	2667, 1938, 2683, 0, 2685, 0, 0, 0, 0, 0,
	0, 0, 0, 596, 0, 0, 595, 595, 595, 595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 596, 596, 0, 596, 0, 596, 596, 0,
	596, 596, 596, 596, 596, 596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 596, 2730, 0,
	0, 187, 2681, 0, 0, 2677, 2678, 0, 1689, 0,
	1689, 0, 0, 0, 0, 1687, 0, 1687, 187, 2728,
	2729, 2696, 0, 0, 2697, 2698, 2699, 186, 0, 0,
	0, 596, 0, 187, 0, 0, 0, 2742, 0, 0,
	0, 0, 0, 0, 0, 2770, 2741, 596, 0, 187,
	2745, 595, 0, 595, 0, 0, 0, 2711, 0, 0,
	2753, 2715, 2716, 2717, 0, 187, 0, 0, 2355, 0,
	2355, 1689, 187, 0, 2754, 2791, 37, 0, 1687, 0,
	0, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	596, 2799, 2793, 2763, 770, 2787, 2780, 2795, 0, 2771,
	2789, 2779, 0, 0, 596, 596, 0, 0, 0, 2410,
	0, 0, 0, 0, 0, 595, 2413, 0, 0, 0,
	2413, 0, 187, 0, 0, 0, 0, 0, 186, 2848,
	0, 595, 2803, 0, 2800, 2801, 0, 0, 0, 0,
	0, 0, 0, 0, 595, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2844, 0, 2846,
	2845, 0, 0, 0, 0, 0, 0, 0, 596, 2889,
	2890, 2860, 2872, 0, 0, 595, 1689, 2864, 0, 595,
	595, 2865, 596, 1687, 0, 0, 0, 0, 0, 2852,
	0, 0, 0, 0, 0, 0, 2893, 0, 0, 596,
	596, 0, 0, 0, 0, 0, 0, 0, 595, 0,
	0, 0, 0, 0, 2903, 0, 0, 0, 1339, 0,
	2900, 2901, 2917, 0, 0, 2902, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2914, 0, 816, 0, 816, 816, 0, 0, 0,
	770, 595, 0, 2920, 2855, 2856, 2857, 0, 2905, 0,
	1164, 1166, 187, 0, 2916, 2922, 186, 596, 0, 2413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 595, 186, 0, 0, 0, 0,
	0, 187, 0, 0, 596, 0, 0, 0, 2941, 0,
	3021, 0, 0, 0, 187, 2938, 37, 0, 596, 2933,
	1409, 2936, 0, 187, 0, 187, 0, 187, 187, 596,
	0, 0, 596, 0, 0, 0, 595, 0, 0, 0,
	2929, 0, 0, 596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	595, 595, 0, 0, 0, 2958, 0, 0, 0, 0,
	2966, 37, 0, 595, 0, 0, 0, 0, 2968, 2971,
	0, 1306, 186, 595, 2979, 0, 0, 2976, 2872, 2981,
	2988, 2973, 2972, 2970, 2975, 2974, 0, 2410, 596, 2963,
	2991, 0, 0, 0, 3009, 2999, 3004, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2942, 0, 0,
	0, 3016, 0, 0, 0, 596, 0, 0, 0, 0,
	3022, 596, 595, 0, 0, 0, 0, 0, 1318, 1319,
	0, 595, 0, 0, 0, 0, 3035, 1689, 0, 0,
	3037, 0, 3041, 3039, 1687, 3045, 0, 3043, 0, 0,
	0, 1397, 0, 0, 0, 0, 0, 3042, 0, 0,
	3056, 0, 0, 1362, 0, 3062, 0, 3064, 596, 0,
	596, 0, 816, 0, 0, 0, 596, 596, 1382, 0,
	1689, 182, 3072, 3073, 2890, 3071, 0, 1687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3070, 0, 0, 0, 0, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 164, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 187, 187,
	0, 0, 187, 1410, 187, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 161, 0, 162, 596,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1423, 1426, 1427, 1428, 1429, 1430, 1431, 181, 1432,
	1433, 1434, 1435, 1436, 1411, 1412, 1413, 1414, 1395, 1396,
	1424, 0, 1398, 0, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 0, 0, 1408, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1306, 0, 0, 0, 0, 0, 1490, 1490,
	0, 1490, 0, 1490, 1490, 0, 1499, 1490, 1490, 1490,
	1490, 1490, 0, 0, 0, 0, 0, 165, 0, 1306,
	0, 0, 1306, 972, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 1566, 1425, 0,
	187, 0, 0, 0, 182, 596, 0, 0, 0, 0,
	0, 596, 0, 1588, 0, 0, 0, 0, 0, 0,
	0, 0, 596, 0, 0, 0, 0, 0, 121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 187, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 816, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	816, 816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 596, 0, 0, 0, 0, 0, 187,
	0, 181, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 1683, 0, 0, 0, 0, 0,
	596, 0, 0, 0, 0, 0, 0, 596, 1696, 0,
	0, 0, 0, 0, 0, 1306, 596, 0, 0, 0,
	0, 0, 0, 0, 0, 1715, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 187, 187, 187, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 816, 0, 0, 187, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 157,
	165, 0, 0, 1809, 0, 0, 169, 0, 0, 171,
	596, 0, 0, 0, 0, 0, 1341, 1343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1362, 0, 0, 816, 177, 0,
	0, 0, 0, 0, 0, 816, 0, 0, 816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 972,
	0, 0, 0, 182, 596, 0, 0, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 0, 0,
	596, 0, 0, 176, 178, 179, 180, 121, 0, 143,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 596,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 596, 979, 0, 156, 0, 0, 0,
	596, 596, 0, 187, 187, 187, 187, 187, 0, 0,
	0, 153, 0, 0, 0, 187, 0, 142, 0, 0,
	187, 972, 0, 187, 0, 187, 0, 979, 187, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	162, 684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 130, 131, 152, 151,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 972, 0, 1683, 0, 0, 0,
	0, 0, 1683, 1683, 0, 0, 596, 0, 0, 0,
	0, 0, 185, 0, 596, 549, 0, 0, 590, 187,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 0,
	0, 0, 187, 549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 783, 0,
	187, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 801, 0, 801, 0, 0, 169,
	0, 0, 0, 0, 549, 0, 0, 147, 128, 154,
	135, 127, 0, 148, 149, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 136,
	0, 0, 0, 0, 0, 2021, 0, 0, 0, 0,
	0, 177, 0, 139, 137, 132, 133, 134, 138, 0,
	0, 0, 0, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 0, 0, 596, 187, 0,
	158, 163, 160, 166, 167, 168, 170, 172, 173, 174,
	175, 0, 0, 0, 0, 0, 176, 178, 179, 180,
	0, 0, 78, 39, 40, 80, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 0, 0, 0, 43, 69, 70, 0,
	67, 71, 0, 0, 0, 0, 0, 187, 0, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 56, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 187, 0, 0, 187, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 596, 596,
	0, 0, 0, 0, 0, 816, 0, 0, 0, 0,
	0, 0, 0, 1707, 0, 0, 0, 1708, 0, 0,
	0, 1821, 0, 0, 0, 0, 0, 2132, 0, 0,
	0, 0, 0, 150, 0, 0, 0, 0, 2147, 0,
	0, 0, 596, 596, 596, 596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 1341, 1794,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 169, 1409,
	0, 1817, 0, 187, 46, 49, 52, 51, 54, 0,
	66, 0, 0, 75, 72, 0, 0, 0, 0, 2230,
	0, 0, 0, 0, 0, 0, 0, 596, 0, 596,
	0, 0, 0, 0, 0, 0, 55, 83, 82, 0,
	177, 64, 65, 53, 0, 0, 1821, 0, 0, 73,
	74, 0, 0, 2255, 0, 0, 0, 0, 0, 0,
	0, 0, 2260, 0, 0, 0, 0, 0, 0, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	0, 0, 0, 0, 0, 176, 178, 179, 180, 57,
	58, 596, 59, 60, 61, 62, 0, 0, 0, 0,
	0, 0, 0, 1920, 187, 0, 0, 596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 0, 549,
	1397, 0, 549, 0, 0, 0, 1683, 0, 0, 0,
	0, 596, 0, 0, 0, 596, 596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2807, 2809,
	2808, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 649, 0,
	0, 0, 0, 0, 596, 1306, 0, 1306, 0, 0,
	1306, 0, 0, 0, 0, 1306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 1410, 0, 0, 0, 1490, 596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 2390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 86, 0, 0, 816,
	596, 187, 0, 1306, 0, 0, 2417, 1490, 1306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1423, 1426, 1427, 1428, 1429, 1430, 1431, 0, 1432, 1433,
	1434, 1435, 1436, 1411, 1412, 1413, 1414, 1395, 1396, 1424,
	1307, 1398, 596, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 0, 0, 1408, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 0, 0, 0, 596, 596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 596,
	2040, 0, 972, 549, 2044, 1306, 2045, 2046, 0, 0,
	1821, 0, 0, 0, 0, 2054, 0, 0, 2055, 2056,
	0, 2058, 0, 783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 0, 596, 2065,
	2066, 2067, 2068, 2069, 0, 2071, 0, 596, 2813, 2814,
	0, 2075, 0, 2076, 0, 0, 0, 2079, 0, 0,
	0, 0, 0, 0, 0, 2088, 2089, 2090, 2091, 0,
	0, 0, 0, 0, 0, 0, 0, 1425, 2102, 2103,
	0, 0, 0, 0, 0, 0, 2108, 2109, 2110, 2111,
	2112, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2125, 0, 0, 0, 0, 0, 694,
	0, 642, 698, 644, 695, 696, 0, 640, 643, 697,
	0, 711, 712, 2390, 0, 0, 0, 1688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 647, 648, 2806, 2810,
	2811, 2812, 2815, 2816, 2817, 2825, 2827, 672, 2826, 2828,
	2829, 2830, 2833, 2834, 2835, 2836, 2831, 2832, 2837, 2805,
	2804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 549, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 1821, 1821, 0, 0, 0, 0,
	0, 1307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1307, 0,
	0, 1307, 0, 0, 0, 0, 549, 0, 2735, 2736,
	2737, 2738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1540, 0, 0, 0, 0, 0, 0,
	0, 0, 710, 79, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1590, 0, 0, 1306, 0, 1306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 0, 2336, 549, 2337, 0,
	0, 0, 2341, 0, 0, 0, 1613, 1614, 549, 549,
	549, 549, 549, 549, 549, 0, 0, 0, 1306, 0,
	0, 0, 2356, 2792, 0, 2794, 0, 0, 0, 0,
	773, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2371, 2372, 0, 0, 549, 0, 0,
	773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 801, 2416, 2863, 0, 0, 0, 0, 801, 801,
	0, 0, 0, 0, 1307, 0, 816, 0, 0, 2434,
	2435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2896, 0, 0,
	0, 2896, 2896, 0, 0, 0, 0, 0, 0, 0,
	801, 1590, 801, 801, 801, 801, 801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 1540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 783, 0, 0, 0,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 1590, 0, 549, 0,
	549, 0, 549, 1857, 0, 0, 2561, 0, 0, 0,
	0, 0, 0, 2565, 0, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2575, 2576, 2578,
	2580, 0, 0, 0, 0, 0, 0, 0, 0, 2586,
	0, 0, 0, 0, 2590, 2591, 2592, 0, 0, 0,
	0, 2595, 0, 0, 0, 0, 1306, 2597, 2959, 0,
	2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	0, 0, 2611, 0, 0, 0, 0, 0, 2616, 0,
	0, 0, 816, 816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2994, 0, 0, 0, 0,
	0, 0, 0, 2638, 2639, 0, 0, 2643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2655, 2656, 0, 0, 0,
	800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 2994, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 549, 0, 608, 0,
	0, 0, 0, 549, 549, 0, 0, 549, 0, 2013,
	0, 0, 0, 0, 0, 2722, 549, 0, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 0, 0, 0,
	794, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2751, 0,
	0, 0, 2752, 1154, 0, 1154, 1154, 0, 2756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 801, 0, 0, 0, 0, 0, 0, 773,
	1229, 1230, 1231, 0, 1234, 0, 1236, 1237, 1238, 1239,
	0, 1242, 1244, 1244, 0, 1244, 1248, 1248, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 0, 1290, 1291,
	1292, 1293, 1294, 0, 0, 0, 0, 1248, 1248, 1248,
	1248, 1248, 0, 801, 801, 0, 0, 2861, 0, 0,
	0, 0, 0, 0, 1590, 0, 2868, 549, 0, 0,
	0, 0, 0, 0, 0, 1540, 0, 0, 0, 0,
	0, 0, 2878, 2879, 2880, 0, 2881, 2882, 0, 0,
	0, 0, 2885, 0, 2886, 0, 2888, 2891, 0, 0,
	0, 0, 0, 2895, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1316, 0, 0, 0,
	0, 549, 773, 0, 0, 549, 773, 0, 0, 0,
	0, 0, 773, 0, 0, 0, 0, 0, 0, 0,
	0, 2921, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 2240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2943, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 0, 142, 0, 0, 2948, 0,
	0, 0, 0, 2953, 0, 0, 0, 0, 0, 2954,
	2955, 0, 0, 0, 0, 0, 161, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 2961, 0, 549,
	549, 549, 549, 549, 1465, 1466, 152, 151, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 549, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3012, 0,
	0, 801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3018, 0, 0,
	0, 3019, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1307, 0, 1307, 182, 0, 1307,
	0, 0, 0, 0, 1307, 147, 1467, 154, 1461, 1464,
	0, 148, 149, 0, 0, 0, 0, 165, 801, 0,
	0, 121, 0, 143, 0, 0, 171, 0, 0, 0,
	1194, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 0, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 142, 1307, 0, 0, 0, 0, 1307, 549, 549,
	549, 549, 549, 0, 0, 0, 0, 0, 0, 0,
	2433, 0, 161, 0, 162, 549, 0, 0, 1540, 0,
	549, 0, 0, 549, 2444, 1590, 0, 0, 0, 0,
	1465, 1466, 152, 151, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 608, 0, 0, 0, 0, 1154, 0, 0, 0,
	0, 0, 0, 156, 0, 0, 0, 0, 549, 0,
	1154, 1154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 549, 0, 0, 549, 0,
	0, 147, 1467, 154, 0, 1464, 1356, 148, 149, 0,
	0, 150, 0, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 549, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 549, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 0, 0,
	0, 549, 0, 176, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 1444, 0, 549, 549, 549, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 0, 0, 0, 980, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 145, 0, 980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 1307, 0, 1307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1593, 1540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 1307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 0, 0, 0, 0, 0, 176,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1648, 1649, 1650, 1651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2029, 0, 0, 0, 0,
	0, 1693, 1694, 0, 0, 0, 0, 0, 0, 1699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1739, 1740, 1741, 1742,
	1743, 1744, 1746, 1750, 1751, 608, 1757, 1758, 1759, 1760,
	1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770,
	1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1540, 0, 0,
	0, 0, 0, 1829, 1830, 0, 0, 2106, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 0, 0, 0, 2123, 0, 0, 0, 87, 0,
	0, 1866, 0, 0, 704, 711, 712, 713, 714, 715,
	705, 707, 773, 0, 0, 706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1307, 0, 0, 709, 716,
	717, 0, 0, 2163, 2164, 0, 0, 0, 0, 0,
	0, 0, 2183, 0, 2184, 2185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1904, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1540, 2534, 2535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 87, 0,
	0, 0, 0, 0, 704, 711, 712, 713, 714, 715,
	705, 707, 0, 0, 0, 706, 0, 0, 0, 0,
	0, 0, 0, 2261, 0, 0, 0, 0, 709, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2127, 0, 0, 711, 712, 0,
	0, 0, 0, 1688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2534, 2535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 694, 0,
	0, 698, 0, 695, 696, 0, 2053, 0, 697, 0,
	0, 1849, 2057, 0, 2059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2414, 0, 79, 0, 0, 1849,
	1849, 1849, 1849, 1849, 0, 0, 1241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2183, 773, 0, 0,
	0, 1849, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2522, 0, 0,
	0, 0, 1356, 0, 0, 0, 0, 2530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2664, 0, 0, 0,
	2307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2330, 2331,
	0, 0, 0, 2334, 0, 0, 0, 0, 0, 0,
	0, 2338, 2339, 2340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2345, 2346, 2347, 0, 0, 1757, 2349,
	0, 2350, 2351, 0, 0, 0, 2358, 2359, 0, 0,
	0, 0, 0, 0, 1757, 1757, 1757, 1757, 1757, 608,
	608, 608, 608, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2764, 2438, 2768, 2769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2414, 0, 79, 0, 2414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2583, 0, 0, 0,
	0, 0, 0, 0, 0, 2589, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1250, 1251, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 0, 0, 0, 0, 608, 0, 0, 0, 0,
	0, 0, 0, 0, 2931, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2962, 0, 0, 0, 0, 79, 2703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2743, 0,
	2744, 0, 0, 0, 0, 2747, 2748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2788, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2796, 0,
	0, 2798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2904, 608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 364, 0, 0, 950, 935,
	466, 0, 881, 953, 850, 869, 963, 872, 875, 917,
	829, 895, 382, 866, 821, 854, 824, 861, 825, 852,
	883, 253, 849, 937, 899, 952, 337, 250, 831, 855,
	396, 871, 197, 919, 440, 237, 347, 344, 473, 265,
	256, 252, 236, 292, 354, 394, 460, 388, 959, 341,
	905, 0, 450, 367, 608, 0, 0, 885, 941, 893,
	931, 880, 918, 839, 904, 954, 867, 914, 955, 298,
	234, 300, 196, 379, 451, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 2982, 0, 2983, 0, 2947, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 863, 911, 949, 864,
	913, 248, 296, 255, 247, 470, 960, 940, 828, 892,
	948, 0, 0, 216, 951, 887, 0, 916, 0, 966,
	823, 907, 608, 826, 830, 962, 944, 858, 258, 0,
	0, 0, 0, 0, 0, 0, 884, 894, 928, 878,
	0, 0, 0, 0, 0, 0, 0, 856, 0, 903,
	0, 0, 0, 835, 827, 0, 0, 0, 3010, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 882, 0, 0,
	0, 838, 0, 857, 929, 0, 820, 279, 832, 368,
	240, 0, 933, 943, 879, 506, 947, 877, 876, 923,
	836, 939, 870, 336, 834, 305, 192, 212, 0, 868,
	378, 421, 427, 938, 853, 862, 238, 860, 425, 392,
	489, 220, 267, 418, 398, 423, 405, 270, 902, 921,
	424, 342, 475, 412, 486, 507, 508, 246, 372, 497,
	464, 503, 521, 213, 243, 386, 457, 492, 447, 365,
	471, 472, 304, 446, 277, 195, 340, 513, 211, 433,
	229, 218, 477, 495, 272, 416, 203, 459, 484, 226,
	437, 0, 0, 523, 205, 482, 456, 361, 301, 302,
	204, 0, 417, 251, 275, 241, 381, 479, 480, 239,
	524, 215, 502, 207, 1156, 501, 374, 474, 483, 362,
	352, 206, 481, 360, 351, 307, 326, 327, 263, 286,
	410, 345, 411, 287, 370, 369, 371, 198, 493, 0,
	199, 0, 452, 494, 525, 221, 222, 224, 848, 262,
	266, 274, 276, 282, 283, 290, 338, 385, 409, 407,
	413, 934, 469, 487, 498, 505, 511, 512, 514, 515,
	516, 517, 518, 520, 519, 373, 289, 448, 306, 343,
	926, 965, 391, 426, 227, 491, 449, 843, 847, 841,
	908, 842, 897, 898, 844, 956, 957, 958, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 0, 930, 837, 0,
	845, 846, 0, 936, 945, 946, 544, 353, 439, 488,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 235, 201, 901,
	191, 208, 339, 961, 414, 271, 522, 500, 496, 822,
	210, 840, 245, 851, 859, 0, 865, 873, 874, 886,
	888, 889, 890, 891, 909, 910, 912, 920, 922, 925,
	927, 932, 942, 964, 193, 194, 200, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 375, 376, 377,
	380, 383, 384, 387, 389, 390, 393, 397, 401, 402,
	403, 404, 406, 408, 415, 420, 428, 429, 430, 431,
	432, 435, 436, 441, 442, 443, 444, 445, 453, 454,
	458, 476, 478, 490, 504, 509, 434, 281, 485, 510,
	0, 348, 900, 906, 350, 264, 284, 295, 915, 499,
	455, 214, 422, 273, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	438, 461, 462, 463, 465, 363, 249, 399, 896, 924,
	346, 467, 468, 291, 364, 0, 0, 950, 935, 466,
	0, 881, 953, 850, 869, 963, 872, 875, 917, 829,
	895, 382, 866, 821, 854, 824, 861, 825, 852, 883,
	253, 849, 937, 899, 952, 337, 250, 831, 855, 396,
	871, 197, 919, 440, 237, 347, 344, 473, 265, 256,
	252, 236, 292, 354, 394, 460, 388, 959, 341, 905,
	0, 450, 367, 0, 0, 0, 885, 941, 893, 931,
	880, 918, 839, 904, 954, 867, 914, 955, 298, 234,
	300, 196, 379, 451, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 863, 911, 949, 864, 913,
	248, 296, 255, 247, 470, 960, 940, 828, 892, 948,
	0, 0, 216, 951, 887, 0, 916, 0, 966, 823,
	907, 0, 826, 830, 962, 944, 858, 258, 0, 0,
	0, 0, 0, 0, 0, 884, 894, 928, 878, 0,
	0, 0, 0, 0, 2445, 0, 856, 0, 903, 0,
	0, 0, 835, 827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 882, 0, 0, 0,
	838, 0, 857, 929, 0, 820, 279, 832, 368, 240,
	0, 933, 943, 879, 506, 947, 877, 876, 923, 836,
	939, 870, 336, 834, 305, 192, 212, 0, 868, 378,
	421, 427, 938, 853, 862, 238, 860, 425, 392, 489,
	220, 267, 418, 398, 423, 405, 270, 902, 921, 424,
	342, 475, 412, 486, 507, 508, 246, 372, 497, 464,
	503, 521, 213, 243, 386, 457, 492, 447, 365, 471,
	472, 304, 446, 277, 195, 340, 513, 211, 433, 229,
	218, 477, 495, 272, 416, 203, 459, 484, 226, 437,
	0, 0, 523, 205, 482, 456, 361, 301, 302, 204,
	0, 417, 251, 275, 241, 381, 479, 480, 239, 524,
	215, 502, 207, 1156, 501, 374, 474, 483, 362, 352,
	206, 481, 360, 351, 307, 326, 327, 263, 286, 410,
	345, 411, 287, 370, 369, 371, 198, 493, 0, 199,
	0, 452, 494, 525, 221, 222, 224, 848, 262, 266,
	274, 276, 282, 283, 290, 338, 385, 409, 407, 413,
	934, 469, 487, 498, 505, 511, 512, 514, 515, 516,
	517, 518, 520, 519, 373, 289, 448, 306, 343, 926,
	965, 391, 426, 227, 491, 449, 843, 847, 841, 908,
	842, 897, 898, 844, 956, 957, 958, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 0, 930, 837, 0, 845,
	846, 0, 936, 945, 946, 544, 353, 439, 488, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 235, 201, 901, 191,
	208, 339, 961, 414, 271, 522, 500, 496, 822, 210,
	840, 245, 851, 859, 0, 865, 873, 874, 886, 888,
	889, 890, 891, 909, 910, 912, 920, 922, 925, 927,
	932, 942, 964, 193, 194, 200, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 428, 429, 430, 431, 432,
	435, 436, 441, 442, 443, 444, 445, 453, 454, 458,
	476, 478, 490, 504, 509, 434, 281, 485, 510, 0,
	348, 900, 906, 350, 264, 284, 295, 915, 499, 455,
	214, 422, 273, 202, 233, 217, 242, 257, 260, 299,
	359, 366, 395, 400, 278, 254, 231, 419, 228, 438,
	461, 462, 463, 465, 363, 249, 399, 896, 924, 346,
	467, 468, 291, 364, 0, 0, 950, 935, 466, 0,
	881, 953, 850, 869, 963, 872, 875, 917, 829, 895,
	382, 866, 821, 854, 824, 861, 825, 852, 883, 253,
	849, 937, 899, 952, 337, 250, 831, 855, 396, 871,
	197, 919, 440, 237, 347, 344, 473, 265, 256, 252,
	236, 292, 354, 394, 460, 388, 959, 341, 905, 0,
	450, 367, 0, 0, 0, 885, 941, 893, 931, 880,
	918, 839, 904, 954, 867, 914, 955, 298, 234, 300,
	196, 379, 451, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 863, 911, 949, 864, 913, 248,
	296, 255, 247, 470, 960, 940, 828, 892, 948, 0,
	0, 216, 951, 887, 0, 916, 0, 966, 823, 907,
	0, 826, 830, 962, 944, 858, 258, 0, 0, 0,
	0, 0, 0, 0, 884, 894, 928, 878, 0, 0,
	0, 0, 0, 2403, 0, 856, 0, 903, 0, 0,
	0, 835, 827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 882, 0, 0, 0, 838,
	0, 857, 929, 0, 820, 279, 832, 368, 240, 0,
	933, 943, 879, 506, 947, 877, 876, 923, 836, 939,
	870, 336, 834, 305, 192, 212, 0, 868, 378, 421,
	427, 938, 853, 862, 238, 860, 425, 392, 489, 220,
	267, 418, 398, 423, 405, 270, 902, 921, 424, 342,
	475, 412, 486, 507, 508, 246, 372, 497, 464, 503,
	521, 213, 243, 386, 457, 492, 447, 365, 471, 472,
	304, 446, 277, 195, 340, 513, 211, 433, 229, 218,
	477, 495, 272, 416, 203, 459, 484, 226, 437, 0,
	0, 523, 205, 482, 456, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 479, 480, 239, 524, 215,
	502, 207, 1156, 501, 374, 474, 483, 362, 352, 206,
	481, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 198, 493, 0, 199, 0,
	452, 494, 525, 221, 222, 224, 848, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 934,
	469, 487, 498, 505, 511, 512, 514, 515, 516, 517,
	518, 520, 519, 373, 289, 448, 306, 343, 926, 965,
	391, 426, 227, 491, 449, 843, 847, 841, 908, 842,
	897, 898, 844, 956, 957, 958, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 0, 930, 837, 0, 845, 846,
	0, 936, 945, 946, 544, 353, 439, 488, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 235, 201, 901, 191, 208,
	339, 961, 414, 271, 522, 500, 496, 822, 210, 840,
	245, 851, 859, 0, 865, 873, 874, 886, 888, 889,
	890, 891, 909, 910, 912, 920, 922, 925, 927, 932,
	942, 964, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 428, 429, 430, 431, 432, 435,
	436, 441, 442, 443, 444, 445, 453, 454, 458, 476,
	478, 490, 504, 509, 434, 281, 485, 510, 0, 348,
	900, 906, 350, 264, 284, 295, 915, 499, 455, 214,
	422, 273, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 896, 924, 346, 467,
	468, 291, 364, 0, 0, 950, 935, 466, 0, 881,
	953, 850, 869, 963, 872, 875, 917, 829, 895, 382,
	866, 821, 854, 824, 861, 825, 852, 883, 253, 849,
	937, 899, 952, 337, 250, 831, 855, 396, 871, 197,
	919, 440, 237, 347, 344, 473, 265, 256, 252, 236,
	292, 354, 394, 460, 388, 959, 341, 905, 0, 450,
	367, 0, 0, 0, 885, 941, 893, 931, 880, 918,
	839, 904, 954, 867, 914, 955, 298, 234, 300, 196,
	379, 451, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 863, 911, 949, 864, 913, 248, 296,
	255, 247, 470, 960, 940, 828, 892, 948, 0, 0,
	216, 951, 887, 0, 916, 0, 966, 823, 907, 0,
	826, 830, 962, 944, 858, 258, 0, 0, 0, 0,
	0, 0, 0, 884, 894, 928, 878, 0, 0, 0,
	0, 0, 1837, 0, 856, 0, 903, 0, 0, 0,
	835, 827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 882, 0, 0, 0, 838, 0,
	857, 929, 0, 820, 279, 832, 368, 240, 0, 933,
	943, 879, 506, 947, 877, 876, 923, 836, 939, 870,
	336, 834, 305, 192, 212, 0, 868, 378, 421, 427,
	938, 853, 862, 238, 860, 425, 392, 489, 220, 267,
	418, 398, 423, 405, 270, 902, 921, 424, 342, 475,
	412, 486, 507, 508, 246, 372, 497, 464, 503, 521,
	213, 243, 386, 457, 492, 447, 365, 471, 472, 304,
	446, 277, 195, 340, 513, 211, 433, 229, 218, 477,
	495, 272, 416, 203, 459, 484, 226, 437, 0, 0,
	523, 205, 482, 456, 361, 301, 302, 204, 0, 417,
	251, 275, 241, 381, 479, 480, 239, 524, 215, 502,
	207, 1156, 501, 374, 474, 483, 362, 352, 206, 481,
	360, 351, 307, 326, 327, 263, 286, 410, 345, 411,
	287, 370, 369, 371, 198, 493, 0, 199, 0, 452,
	494, 525, 221, 222, 224, 848, 262, 266, 274, 276,
	282, 283, 290, 338, 385, 409, 407, 413, 934, 469,
	487, 498, 505, 511, 512, 514, 515, 516, 517, 518,
	520, 519, 373, 289, 448, 306, 343, 926, 965, 391,
	426, 227, 491, 449, 843, 847, 841, 908, 842, 897,
	898, 844, 956, 957, 958, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 0, 930, 837, 0, 845, 846, 0,
	936, 945, 946, 544, 353, 439, 488, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 235, 201, 901, 191, 208, 339,
	961, 414, 271, 522, 500, 496, 822, 210, 840, 245,
	851, 859, 0, 865, 873, 874, 886, 888, 889, 890,
	891, 909, 910, 912, 920, 922, 925, 927, 932, 942,
	964, 193, 194, 200, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 375, 376, 377, 380, 383, 384,
	387, 389, 390, 393, 397, 401, 402, 403, 404, 406,
	408, 415, 420, 428, 429, 430, 431, 432, 435, 436,
	441, 442, 443, 444, 445, 453, 454, 458, 476, 478,
	490, 504, 509, 434, 281, 485, 510, 0, 348, 900,
	906, 350, 264, 284, 295, 915, 499, 455, 214, 422,
	273, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 438, 461, 462,
	463, 465, 363, 249, 399, 896, 924, 346, 467, 468,
	291, 364, 0, 0, 950, 935, 466, 0, 881, 953,
	850, 869, 963, 872, 875, 917, 829, 895, 382, 866,
	821, 854, 824, 861, 825, 852, 883, 253, 849, 937,
	899, 952, 337, 250, 831, 855, 396, 871, 197, 919,
	440, 237, 347, 344, 473, 265, 256, 252, 236, 292,
	354, 394, 460, 388, 959, 341, 905, 0, 450, 367,
	0, 0, 0, 885, 941, 893, 931, 880, 918, 839,
	904, 954, 867, 914, 955, 298, 234, 300, 196, 379,
	451, 269, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 863, 911, 949, 864, 913, 248, 296, 255,
	247, 470, 960, 940, 828, 892, 948, 0, 0, 216,
	951, 887, 0, 916, 0, 966, 823, 907, 0, 826,
	830, 962, 944, 858, 258, 0, 0, 0, 0, 0,
	0, 0, 884, 894, 928, 878, 0, 0, 0, 0,
	0, 0, 0, 856, 0, 903, 0, 0, 0, 835,
	827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 882, 0, 0, 0, 838, 0, 857,
	929, 0, 820, 279, 832, 368, 240, 0, 933, 943,
	879, 506, 947, 877, 876, 923, 836, 939, 870, 336,
	834, 305, 192, 212, 0, 868, 378, 421, 427, 938,
	853, 862, 238, 860, 425, 392, 489, 220, 267, 418,
	398, 423, 405, 270, 902, 921, 424, 342, 475, 412,
	486, 507, 508, 246, 372, 497, 464, 503, 521, 213,
	243, 386, 457, 492, 447, 365, 471, 472, 304, 446,
	277, 195, 340, 513, 211, 433, 229, 218, 477, 495,
	272, 416, 203, 459, 484, 226, 437, 0, 0, 523,
	205, 482, 456, 361, 301, 302, 204, 0, 417, 251,
	275, 241, 381, 479, 480, 239, 524, 215, 502, 207,
	1156, 501, 374, 474, 483, 362, 352, 206, 481, 360,
	351, 307, 326, 327, 263, 286, 410, 345, 411, 287,
	370, 369, 371, 198, 493, 0, 199, 0, 452, 494,
	525, 221, 222, 224, 848, 262, 266, 274, 276, 282,
	283, 290, 338, 385, 409, 407, 413, 934, 469, 487,
	498, 505, 511, 512, 514, 515, 516, 517, 518, 520,
	519, 373, 289, 448, 306, 343, 926, 965, 391, 426,
	227, 491, 449, 843, 847, 841, 908, 842, 897, 898,
	844, 956, 957, 958, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 0, 930, 837, 0, 845, 846, 0, 936,
	945, 946, 544, 353, 439, 488, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 235, 201, 901, 191, 208, 339, 961,
	414, 271, 522, 500, 496, 822, 210, 840, 245, 851,
	859, 0, 865, 873, 874, 886, 888, 889, 890, 891,
	909, 910, 912, 920, 922, 925, 927, 932, 942, 964,
	193, 194, 200, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 428, 429, 430, 431, 432, 435, 436, 441,
	442, 443, 444, 445, 453, 454, 458, 476, 478, 490,
	504, 509, 434, 281, 485, 510, 0, 348, 900, 906,
	350, 264, 284, 295, 915, 499, 455, 214, 422, 273,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 896, 924, 346, 467, 468, 291,
	364, 0, 0, 950, 935, 466, 0, 881, 953, 850,
	869, 963, 872, 875, 917, 829, 895, 382, 866, 821,
	854, 824, 861, 825, 852, 883, 253, 849, 937, 899,
	952, 337, 250, 831, 855, 396, 871, 197, 919, 440,
	237, 347, 344, 473, 265, 256, 252, 236, 292, 354,
	394, 460, 388, 959, 341, 905, 0, 450, 367, 0,
	0, 0, 885, 941, 893, 931, 880, 918, 839, 904,
	954, 867, 914, 955, 298, 234, 300, 196, 379, 451,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 863, 911, 949, 864, 913, 248, 296, 255, 247,
	470, 960, 940, 828, 892, 948, 0, 0, 216, 951,
	887, 0, 916, 0, 966, 823, 907, 0, 826, 830,
	962, 944, 858, 258, 0, 0, 0, 0, 0, 0,
	0, 884, 894, 928, 878, 0, 0, 0, 0, 0,
	0, 0, 856, 0, 903, 0, 0, 0, 835, 827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 882, 0, 0, 0, 838, 0, 857, 929,
	0, 820, 279, 832, 368, 240, 0, 933, 943, 879,
	506, 947, 877, 876, 923, 836, 939, 870, 336, 834,
	305, 192, 212, 0, 868, 378, 421, 427, 938, 853,
	862, 238, 860, 425, 392, 489, 220, 267, 418, 398,
	423, 405, 270, 902, 921, 424, 342, 475, 412, 486,
	507, 508, 246, 372, 497, 464, 503, 521, 213, 243,
	386, 457, 492, 447, 365, 471, 472, 304, 446, 277,
	195, 340, 513, 211, 433, 229, 218, 477, 495, 272,
	416, 203, 459, 484, 226, 437, 0, 0, 523, 205,
	482, 456, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 479, 480, 239, 524, 215, 502, 207, 1156,
	501, 374, 474, 483, 362, 352, 206, 481, 360, 351,
	307, 326, 327, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 198, 493, 0, 199, 0, 452, 494, 525,
	221, 222, 224, 848, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 934, 469, 487, 498,
	505, 511, 512, 514, 515, 516, 517, 518, 520, 519,
	373, 289, 448, 306, 343, 926, 965, 391, 426, 227,
	491, 449, 843, 847, 841, 908, 842, 897, 898, 844,
	956, 957, 958, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 0, 930, 837, 0, 845, 846, 0, 936, 945,
	946, 544, 353, 439, 488, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 235, 201, 901, 191, 208, 339, 961, 414,
	271, 522, 500, 496, 822, 210, 840, 245, 851, 859,
	0, 865, 873, 874, 886, 888, 889, 890, 891, 909,
	910, 912, 920, 922, 925, 927, 932, 942, 964, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 428, 429, 430, 431, 432, 435, 436, 441, 442,
	443, 444, 445, 453, 454, 458, 476, 478, 490, 504,
	509, 434, 281, 485, 510, 0, 348, 900, 906, 350,
	264, 284, 295, 915, 499, 455, 214, 422, 273, 202,
	233, 217, 242, 257, 260, 299, 359, 366, 395, 400,
	278, 254, 231, 419, 228, 438, 461, 462, 463, 465,
	363, 249, 399, 896, 924, 346, 467, 468, 291, 364,
	0, 0, 950, 935, 466, 0, 881, 953, 850, 869,
	963, 872, 875, 917, 829, 895, 382, 866, 821, 854,
	824, 861, 825, 852, 883, 253, 849, 937, 899, 952,
	337, 250, 831, 855, 396, 871, 197, 919, 440, 237,
	347, 344, 473, 265, 256, 252, 236, 292, 354, 394,
	460, 388, 959, 341, 905, 0, 450, 367, 0, 0,
	0, 885, 941, 893, 931, 880, 918, 839, 904, 954,
	867, 914, 955, 298, 234, 300, 196, 379, 451, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	863, 911, 949, 864, 913, 248, 296, 255, 247, 470,
	960, 940, 828, 892, 948, 0, 0, 967, 951, 887,
	0, 916, 0, 966, 823, 907, 0, 826, 830, 962,
	944, 858, 258, 0, 0, 0, 0, 0, 0, 0,
	884, 894, 928, 878, 0, 0, 0, 0, 0, 0,
	0, 856, 0, 903, 0, 0, 0, 835, 827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 882, 0, 0, 0, 838, 0, 857, 929, 0,
	820, 279, 832, 368, 240, 0, 933, 943, 879, 506,
	947, 877, 876, 923, 836, 939, 870, 336, 834, 305,
	192, 212, 0, 868, 378, 421, 427, 938, 853, 862,
	238, 860, 425, 392, 489, 220, 267, 418, 398, 423,
	405, 270, 902, 921, 424, 342, 475, 412, 486, 507,
	508, 246, 372, 497, 464, 503, 521, 213, 243, 386,
	457, 492, 447, 365, 471, 472, 304, 446, 277, 195,
	340, 513, 211, 433, 229, 218, 477, 495, 272, 416,
	203, 459, 484, 226, 437, 0, 0, 523, 205, 482,
	456, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 479, 480, 239, 524, 215, 502, 207, 833, 501,
	374, 474, 483, 362, 352, 206, 481, 360, 351, 307,
	326, 327, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 198, 493, 0, 199, 0, 452, 494, 525, 221,
	222, 224, 848, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 934, 469, 487, 498, 505,
	511, 512, 514, 515, 516, 517, 518, 520, 519, 819,
	813, 812, 306, 343, 926, 965, 391, 426, 227, 491,
	449, 843, 847, 841, 908, 842, 897, 898, 844, 956,
	957, 958, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	0, 930, 837, 0, 845, 846, 0, 936, 945, 946,
	544, 353, 439, 488, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 235, 201, 901, 191, 208, 339, 961, 414, 271,
	522, 500, 496, 822, 210, 840, 245, 851, 859, 0,
	865, 873, 874, 886, 888, 889, 890, 891, 909, 910,
	912, 920, 922, 925, 927, 932, 942, 964, 193, 194,
	200, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	428, 429, 430, 431, 432, 435, 436, 441, 442, 443,
	444, 445, 453, 454, 458, 476, 478, 490, 504, 509,
	434, 281, 485, 510, 0, 348, 900, 906, 350, 264,
	284, 295, 915, 499, 455, 214, 422, 273, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 438, 461, 462, 463, 465, 363,
	249, 399, 896, 924, 346, 467, 468, 291, 364, 0,
	0, 950, 935, 466, 0, 881, 953, 850, 869, 963,
	872, 875, 917, 829, 895, 382, 866, 821, 854, 824,
	861, 825, 852, 883, 253, 849, 937, 899, 952, 337,
	250, 831, 855, 396, 871, 197, 919, 440, 237, 347,
	344, 473, 265, 256, 252, 236, 292, 354, 394, 460,
	388, 959, 341, 905, 0, 450, 367, 0, 0, 0,
	885, 941, 893, 931, 880, 918, 839, 904, 954, 867,
	914, 955, 298, 234, 300, 196, 379, 451, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 863,
	911, 949, 864, 913, 248, 296, 255, 247, 470, 960,
	940, 828, 892, 948, 0, 0, 967, 951, 887, 0,
	916, 0, 966, 823, 907, 0, 826, 830, 962, 944,
	858, 258, 0, 0, 0, 0, 0, 0, 0, 884,
	894, 928, 878, 0, 0, 0, 0, 0, 0, 0,
	856, 0, 903, 0, 0, 0, 835, 827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	882, 0, 0, 0, 838, 0, 857, 929, 0, 820,
	279, 832, 368, 240, 0, 933, 943, 879, 506, 947,
	877, 876, 923, 836, 939, 870, 336, 834, 305, 192,
	212, 0, 868, 378, 421, 427, 938, 853, 862, 238,
	860, 425, 392, 489, 220, 267, 418, 398, 423, 405,
	270, 902, 921, 424, 342, 475, 412, 486, 507, 508,
	246, 372, 497, 464, 503, 521, 213, 243, 386, 457,
	492, 447, 365, 471, 472, 304, 446, 277, 195, 340,
	513, 211, 433, 229, 218, 477, 495, 272, 416, 203,
	459, 1373, 226, 437, 0, 0, 523, 205, 482, 456,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	479, 480, 239, 524, 215, 502, 207, 833, 501, 374,
	474, 483, 362, 352, 206, 481, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	198, 493, 0, 199, 0, 452, 494, 525, 221, 222,
	224, 848, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 934, 469, 487, 498, 505, 511,
	512, 514, 515, 516, 517, 518, 520, 519, 819, 813,
	812, 306, 343, 926, 965, 391, 426, 227, 491, 449,
	843, 847, 841, 908, 842, 897, 898, 844, 956, 957,
	958, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 0,
	930, 837, 0, 845, 846, 0, 936, 945, 946, 544,
	353, 439, 488, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	235, 201, 901, 191, 208, 339, 961, 414, 271, 522,
	500, 496, 822, 210, 840, 245, 851, 859, 0, 865,
	873, 874, 886, 888, 889, 890, 891, 909, 910, 912,
	920, 922, 925, 927, 932, 942, 964, 193, 194, 200,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	375, 376, 377, 380, 383, 384, 387, 389, 390, 393,
	397, 401, 402, 403, 404, 406, 408, 415, 420, 428,
	429, 430, 431, 432, 435, 436, 441, 442, 443, 444,
	445, 453, 454, 458, 476, 478, 490, 504, 509, 434,
	281, 485, 510, 0, 348, 900, 906, 350, 264, 284,
	295, 915, 499, 455, 214, 422, 273, 202, 233, 217,
	242, 257, 260, 299, 359, 366, 395, 400, 278, 254,
	231, 419, 228, 438, 461, 462, 463, 465, 363, 249,
	399, 896, 924, 346, 467, 468, 291, 364, 0, 0,
	950, 935, 466, 0, 881, 953, 850, 869, 963, 872,
	875, 917, 829, 895, 382, 866, 821, 854, 824, 861,
	825, 852, 883, 253, 849, 937, 899, 952, 337, 250,
	831, 855, 396, 871, 197, 919, 440, 237, 347, 344,
	473, 265, 256, 252, 236, 292, 354, 394, 460, 388,
	959, 341, 905, 0, 450, 367, 0, 0, 0, 885,
	941, 893, 931, 880, 918, 839, 904, 954, 867, 914,
	955, 298, 234, 300, 196, 379, 451, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 863, 911,
	949, 864, 913, 248, 296, 255, 247, 470, 960, 940,
	828, 892, 948, 0, 0, 967, 951, 887, 0, 916,
	0, 966, 823, 907, 0, 826, 830, 962, 944, 858,
	258, 0, 0, 0, 0, 0, 0, 0, 884, 894,
	928, 878, 0, 0, 0, 0, 0, 0, 0, 856,
	0, 903, 0, 0, 0, 835, 827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 882,
	0, 0, 0, 838, 0, 857, 929, 0, 820, 279,
	832, 368, 240, 0, 933, 943, 879, 506, 947, 877,
	876, 923, 836, 939, 870, 336, 834, 305, 192, 212,
	0, 868, 378, 421, 427, 938, 853, 862, 238, 860,
	425, 392, 489, 220, 267, 418, 398, 423, 405, 270,
	902, 921, 424, 342, 475, 412, 486, 507, 508, 246,
	372, 497, 464, 503, 521, 213, 243, 386, 457, 492,
	447, 365, 471, 472, 304, 446, 277, 195, 340, 513,
	211, 433, 229, 218, 477, 495, 272, 416, 203, 459,
	810, 226, 437, 0, 0, 523, 205, 482, 456, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 479,
	480, 239, 524, 215, 502, 207, 833, 501, 374, 474,
	483, 362, 352, 206, 481, 360, 351, 307, 326, 327,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 198,
	493, 0, 199, 0, 452, 494, 525, 221, 222, 224,
	848, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 934, 469, 487, 498, 505, 511, 512,
	514, 515, 516, 517, 518, 520, 519, 819, 813, 812,
	306, 343, 926, 965, 391, 426, 227, 491, 449, 843,
	847, 841, 908, 842, 897, 898, 844, 956, 957, 958,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 0, 930,
	837, 0, 845, 846, 0, 936, 945, 946, 544, 353,
	439, 488, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 235,
	201, 901, 191, 208, 339, 961, 414, 271, 522, 500,
	496, 822, 210, 840, 245, 851, 859, 0, 865, 873,
	874, 886, 888, 889, 890, 891, 909, 910, 912, 920,
	922, 925, 927, 932, 942, 964, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 428, 429,
	430, 431, 432, 435, 436, 441, 442, 443, 444, 445,
	453, 454, 458, 476, 478, 490, 504, 509, 434, 281,
	485, 510, 0, 348, 900, 906, 350, 264, 284, 295,
	915, 499, 455, 214, 422, 273, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	896, 924, 346, 467, 468, 291, 364, 0, 0, 0,
	0, 466, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 1781, 0, 626, 0,
	0, 0, 253, 631, 0, 0, 0, 337, 250, 0,
	1782, 396, 0, 197, 0, 440, 237, 347, 344, 473,
	265, 256, 252, 236, 292, 354, 394, 460, 388, 638,
	341, 0, 0, 450, 367, 0, 0, 0, 0, 0,
	633, 634, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 451, 269, 0, 87, 0,
	0, 188, 189, 190, 704, 711, 712, 713, 714, 715,
	705, 707, 0, 0, 225, 706, 232, 651, 653, 652,
	662, 663, 664, 665, 666, 667, 668, 649, 709, 716,
	717, 0, 248, 296, 255, 247, 470, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 609, 623, 0, 637, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 620, 621, 799, 0, 0, 0,
	688, 0, 622, 0, 0, 630, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	368, 240, 0, 687, 0, 0, 506, 0, 0, 685,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 378, 421, 427, 0, 0, 0, 238, 0, 425,
	392, 489, 220, 267, 418, 398, 423, 405, 270, 0,
	0, 424, 342, 475, 412, 486, 507, 508, 246, 372,
	497, 464, 503, 521, 213, 243, 386, 457, 492, 447,
	365, 471, 472, 304, 446, 277, 195, 340, 513, 211,
	433, 229, 218, 477, 495, 272, 416, 203, 459, 484,
	226, 437, 0, 0, 523, 205, 482, 456, 361, 301,
	302, 204, 0, 417, 251, 275, 241, 381, 479, 480,
	239, 524, 215, 502, 207, 0, 501, 374, 474, 483,
	362, 352, 206, 481, 360, 351, 307, 657, 658, 263,
	286, 410, 345, 411, 287, 370, 369, 371, 198, 493,
	0, 199, 0, 452, 494, 525, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 385, 409,
	407, 413, 0, 469, 487, 498, 505, 511, 512, 514,
	515, 516, 517, 518, 520, 519, 373, 289, 448, 306,
	343, 0, 0, 391, 426, 227, 491, 449, 694, 686,
	642, 698, 644, 695, 696, 639, 640, 643, 697, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 0, 689, 629,
	628, 0, 635, 636, 0, 647, 648, 650, 654, 655,
	656, 659, 660, 661, 669, 671, 672, 670, 673, 674,
	675, 678, 679, 680, 681, 676, 677, 682, 646, 645,
	627, 191, 208, 339, 0, 414, 271, 522, 500, 496,
	0, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 375, 376,
	377, 380, 383, 384, 387, 389, 390, 393, 397, 401,
	402, 403, 404, 406, 408, 415, 420, 428, 429, 430,
	431, 432, 435, 436, 441, 442, 443, 444, 445, 453,
	454, 458, 476, 478, 490, 504, 509, 434, 281, 485,
	510, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	499, 455, 214, 422, 273, 202, 233, 217, 242, 257,
	260, 299, 359, 366, 395, 400, 278, 254, 231, 419,
	228, 438, 461, 462, 463, 465, 363, 249, 399, 0,
	364, 346, 467, 468, 291, 466, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 0, 0,
	0, 0, 626, 0, 0, 0, 253, 631, 0, 0,
	0, 337, 250, 0, 0, 396, 0, 197, 0, 440,
	237, 347, 344, 473, 265, 256, 252, 236, 292, 354,
	394, 460, 388, 638, 341, 0, 0, 450, 367, 0,
	0, 0, 0, 0, 633, 634, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 379, 451,
	269, 0, 87, 0, 0, 188, 189, 190, 704, 711,
	712, 713, 714, 715, 705, 707, 0, 0, 225, 706,
	232, 651, 653, 652, 662, 663, 664, 665, 666, 667,
	668, 649, 709, 716, 717, 0, 248, 296, 255, 247,
	470, 0, 0, 1747, 1748, 1749, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 609, 623, 0, 637,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 620, 621,
	0, 0, 0, 0, 688, 0, 622, 0, 0, 630,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 368, 240, 0, 687, 0, 0,
	506, 0, 0, 685, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 378, 421, 427, 0, 0,
	0, 238, 0, 425, 392, 489, 220, 267, 418, 398,
	423, 405, 270, 0, 0, 424, 342, 475, 412, 486,
	507, 508, 246, 372, 497, 464, 503, 521, 213, 243,
	386, 457, 492, 447, 365, 471, 472, 304, 446, 277,
	195, 340, 513, 211, 433, 229, 218, 477, 495, 272,
	416, 203, 459, 484, 226, 437, 0, 0, 523, 205,
	482, 456, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 479, 480, 239, 524, 215, 502, 207, 0,
	501, 374, 474, 483, 362, 352, 206, 481, 360, 351,
	307, 657, 658, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 198, 493, 0, 199, 0, 452, 494, 525,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 0, 469, 487, 498,
	505, 511, 512, 514, 515, 516, 517, 518, 520, 519,
	373, 289, 448, 306, 343, 0, 0, 391, 426, 227,
	491, 449, 694, 686, 642, 698, 644, 695, 696, 639,
	640, 643, 697, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 0, 689, 629, 628, 0, 635, 636, 0, 647,
	648, 650, 654, 655, 656, 659, 660, 661, 669, 671,
	672, 670, 673, 674, 675, 678, 679, 680, 681, 676,
	677, 682, 646, 645, 627, 191, 208, 339, 0, 414,
	271, 522, 500, 496, 0, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 428, 429, 430, 431, 432, 435, 436, 441, 442,
	443, 444, 445, 453, 454, 458, 476, 478, 490, 504,
	509, 434, 281, 485, 510, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 499, 455, 214, 422, 273, 202,
	233, 217, 242, 257, 260, 299, 359, 366, 395, 400,
	278, 254, 231, 419, 228, 438, 461, 462, 463, 465,
	363, 249, 399, 0, 364, 346, 467, 468, 291, 466,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 0, 0, 0, 0, 626, 0, 0, 0,
	253, 631, 0, 0, 0, 337, 250, 0, 0, 396,
	0, 197, 0, 440, 237, 347, 344, 473, 265, 256,
	252, 236, 292, 354, 394, 460, 388, 638, 341, 0,
	0, 450, 367, 0, 0, 0, 0, 0, 633, 634,
	0, 0, 0, 0, 0, 0, 1864, 0, 298, 234,
	300, 196, 379, 451, 269, 0, 87, 0, 0, 188,
	189, 190, 704, 711, 712, 713, 714, 715, 705, 707,
	0, 0, 225, 706, 232, 651, 653, 652, 662, 663,
	664, 665, 666, 667, 668, 649, 709, 716, 717, 1865,
	248, 296, 255, 247, 470, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	609, 623, 0, 637, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 620, 621, 0, 0, 0, 0, 688, 0,
	622, 0, 0, 630, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 368, 240,
	0, 687, 0, 0, 506, 0, 0, 685, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 378,
	421, 427, 0, 0, 0, 238, 0, 425, 392, 489,
	220, 267, 418, 398, 423, 405, 270, 0, 0, 424,
	342, 475, 412, 486, 507, 508, 246, 372, 497, 464,
	503, 521, 213, 243, 386, 457, 492, 447, 365, 471,
	472, 304, 446, 277, 195, 340, 513, 211, 433, 229,
	218, 477, 495, 272, 416, 203, 459, 484, 226, 437,
	0, 0, 523, 205, 482, 456, 361, 301, 302, 204,
	0, 417, 251, 275, 241, 381, 479, 480, 239, 524,
	215, 502, 207, 0, 501, 374, 474, 483, 362, 352,
	206, 481, 360, 351, 307, 657, 658, 263, 286, 410,
	345, 411, 287, 370, 369, 371, 198, 493, 0, 199,
	0, 452, 494, 525, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 385, 409, 407, 413,
	0, 469, 487, 498, 505, 511, 512, 514, 515, 516,
	517, 518, 520, 519, 373, 289, 448, 306, 343, 0,
	0, 391, 426, 227, 491, 449, 694, 686, 642, 698,
	644, 695, 696, 639, 640, 643, 697, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 0, 689, 629, 628, 0,
	635, 636, 0, 647, 648, 650, 654, 655, 656, 659,
	660, 661, 669, 671, 672, 670, 673, 674, 675, 678,
	679, 680, 681, 676, 677, 682, 646, 645, 627, 191,
	208, 339, 0, 414, 271, 522, 500, 496, 0, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 428, 429, 430, 431, 432,
	435, 436, 441, 442, 443, 444, 445, 453, 454, 458,
	476, 478, 490, 504, 509, 434, 281, 485, 510, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 499, 455,
	214, 422, 273, 202, 233, 217, 242, 257, 260, 299,
	359, 366, 395, 400, 278, 254, 231, 419, 228, 438,
	461, 462, 463, 465, 363, 249, 399, 0, 0, 346,
	467, 468, 291, 364, 0, 0, 0, 78, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 0, 0, 0, 626, 0, 0, 0, 253,
	631, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 440, 237, 347, 344, 473, 265, 256, 252,
	236, 292, 354, 394, 460, 388, 638, 341, 0, 0,
	450, 367, 0, 0, 0, 0, 0, 633, 634, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 451, 269, 0, 87, 0, 0, 188, 189,
	190, 704, 711, 712, 713, 714, 715, 705, 707, 0,
	0, 225, 706, 232, 651, 653, 652, 662, 663, 664,
	665, 666, 667, 668, 649, 709, 716, 717, 0, 248,
	296, 255, 247, 470, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 609,
	623, 0, 637, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 620, 621, 0, 0, 0, 0, 688, 0, 622,
	0, 0, 630, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 368, 240, 0,
	687, 0, 0, 506, 0, 0, 685, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 378, 421,
	427, 0, 0, 0, 238, 0, 425, 392, 489, 220,
	267, 418, 398, 423, 405, 270, 0, 0, 424, 342,
	475, 412, 486, 507, 508, 246, 372, 497, 464, 503,
	521, 213, 243, 386, 457, 492, 447, 365, 471, 472,
	304, 446, 277, 195, 340, 513, 211, 433, 229, 218,
	477, 495, 272, 416, 203, 459, 484, 226, 437, 0,
	0, 523, 205, 482, 456, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 479, 480, 239, 524, 215,
	502, 207, 0, 501, 374, 474, 483, 362, 352, 206,
	481, 360, 351, 307, 657, 658, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 198, 493, 0, 199, 0,
	452, 494, 525, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 0,
	469, 487, 498, 505, 511, 512, 514, 515, 516, 517,
	518, 520, 519, 373, 289, 448, 306, 343, 0, 0,
	391, 426, 227, 491, 449, 694, 686, 642, 698, 644,
	695, 696, 639, 640, 643, 697, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 0, 689, 629, 628, 0, 635,
	636, 0, 647, 648, 650, 654, 655, 656, 659, 660,
	661, 669, 671, 672, 670, 673, 674, 675, 678, 679,
	680, 681, 676, 677, 682, 646, 645, 627, 191, 208,
	339, 86, 414, 271, 522, 500, 496, 0, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 428, 429, 430, 431, 432, 435,
	436, 441, 442, 443, 444, 445, 453, 454, 458, 476,
	478, 490, 504, 509, 434, 281, 485, 510, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 499, 455, 214,
	422, 273, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 0, 364, 346, 467,
	468, 291, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 626,
	0, 0, 0, 253, 631, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 440, 237, 347, 344,
	473, 265, 256, 252, 236, 292, 354, 394, 460, 388,
	638, 341, 0, 0, 450, 367, 0, 0, 0, 0,
	0, 633, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 451, 269, 0, 87,
	0, 0, 188, 189, 190, 704, 711, 712, 713, 714,
	715, 705, 707, 0, 0, 225, 706, 232, 651, 653,
	652, 662, 663, 664, 665, 666, 667, 668, 649, 709,
	716, 717, 0, 248, 296, 255, 247, 470, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 609, 623, 0, 637, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 620, 621, 0, 0, 0,
	0, 688, 0, 622, 0, 0, 630, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 368, 240, 0, 687, 0, 0, 506, 0, 0,
	685, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 378, 421, 427, 0, 0, 0, 238, 0,
	425, 392, 489, 220, 267, 418, 398, 423, 405, 270,
	2969, 0, 424, 342, 475, 412, 486, 507, 508, 246,
	372, 497, 464, 503, 521, 213, 243, 386, 457, 492,
	447, 365, 471, 472, 304, 446, 277, 195, 340, 513,
	211, 433, 229, 218, 477, 495, 272, 416, 203, 459,
	484, 226, 437, 0, 0, 523, 205, 482, 456, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 479,
	480, 239, 524, 215, 502, 207, 0, 501, 374, 474,
	483, 362, 352, 206, 481, 360, 351, 307, 657, 658,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 198,
	493, 0, 199, 0, 452, 494, 525, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 0, 469, 487, 498, 505, 511, 512,
	514, 515, 516, 517, 518, 520, 519, 373, 289, 448,
	306, 343, 0, 0, 391, 426, 227, 491, 449, 694,
	686, 642, 698, 644, 695, 696, 639, 640, 643, 697,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 0, 689,
	629, 628, 0, 635, 636, 0, 647, 648, 650, 654,
	655, 656, 659, 660, 661, 669, 671, 672, 670, 673,
	674, 675, 678, 679, 680, 681, 676, 677, 682, 646,
	645, 627, 191, 208, 339, 0, 414, 271, 522, 500,
	496, 0, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 428, 429,
	430, 431, 432, 435, 436, 441, 442, 443, 444, 445,
	453, 454, 458, 476, 478, 490, 504, 509, 434, 281,
	485, 510, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 499, 455, 214, 422, 273, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 364, 346, 467, 468, 291, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 626, 0, 0, 0, 253, 631, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	440, 237, 347, 344, 473, 265, 256, 252, 236, 292,
	354, 394, 460, 388, 638, 341, 0, 0, 450, 367,
	0, 0, 0, 0, 0, 633, 634, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	451, 269, 0, 87, 0, 1340, 188, 189, 190, 704,
	711, 712, 713, 714, 715, 705, 707, 0, 0, 225,
	706, 232, 651, 653, 652, 662, 663, 664, 665, 666,
	667, 668, 649, 709, 716, 717, 0, 248, 296, 255,
	247, 470, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 609, 623, 0,
	637, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 620,
	621, 0, 0, 0, 0, 688, 0, 622, 0, 0,
	630, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 368, 240, 0, 687, 0,
	0, 506, 0, 0, 685, 0, 0, 0, 0, 336,
	0, 305, 192, 212, 0, 0, 378, 421, 427, 0,
	0, 0, 238, 0, 425, 392, 489, 220, 267, 418,
	398, 423, 405, 270, 0, 0, 424, 342, 475, 412,
	486, 507, 508, 246, 372, 497, 464, 503, 521, 213,
	243, 386, 457, 492, 447, 365, 471, 472, 304, 446,
	277, 195, 340, 513, 211, 433, 229, 218, 477, 495,
	272, 416, 203, 459, 484, 226, 437, 0, 0, 523,
	205, 482, 456, 361, 301, 302, 204, 0, 417, 251,
	275, 241, 381, 479, 480, 239, 524, 215, 502, 207,
	0, 501, 374, 474, 483, 362, 352, 206, 481, 360,
	351, 307, 657, 658, 263, 286, 410, 345, 411, 287,
	370, 369, 371, 198, 493, 0, 199, 0, 452, 494,
	525, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 385, 409, 407, 413, 0, 469, 487,
	498, 505, 511, 512, 514, 515, 516, 517, 518, 520,
	519, 373, 289, 448, 306, 343, 0, 0, 391, 426,
	227, 491, 449, 694, 686, 642, 698, 644, 695, 696,
	639, 640, 643, 697, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 0, 689, 629, 628, 0, 635, 636, 0,
	647, 648, 650, 654, 655, 656, 659, 660, 661, 669,
	671, 672, 670, 673, 674, 675, 678, 679, 680, 681,
	676, 677, 682, 646, 645, 627, 191, 208, 339, 0,
	414, 271, 522, 500, 496, 0, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 428, 429, 430, 431, 432, 435, 436, 441,
	442, 443, 444, 445, 453, 454, 458, 476, 478, 490,
	504, 509, 434, 281, 485, 510, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 499, 455, 214, 422, 273,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 0, 364, 346, 467, 468, 291,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 0, 626, 0, 0,
	0, 253, 631, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 440, 237, 347, 344, 473, 265,
	256, 252, 236, 292, 354, 394, 460, 388, 638, 341,
	0, 0, 450, 367, 0, 0, 0, 0, 0, 633,
	634, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 451, 269, 0, 87, 0, 0,
	188, 189, 190, 704, 711, 712, 713, 714, 715, 705,
	707, 0, 0, 225, 706, 232, 651, 653, 652, 662,
	663, 664, 665, 666, 667, 668, 649, 709, 716, 717,
	0, 248, 296, 255, 247, 470, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 609, 623, 0, 637, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 620, 621, 799, 0, 0, 0, 688,
	0, 622, 0, 0, 630, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 368,
	240, 0, 687, 0, 0, 506, 0, 0, 685, 0,
	0, 0, 0, 336, 0, 305, 192, 212, 0, 0,
	378, 421, 427, 0, 0, 0, 238, 0, 425, 392,
	489, 220, 267, 418, 398, 423, 405, 270, 0, 0,
	424, 342, 475, 412, 486, 507, 508, 246, 372, 497,
	464, 503, 521, 213, 243, 386, 457, 492, 447, 365,
	471, 472, 304, 446, 277, 195, 340, 513, 211, 433,
	229, 218, 477, 495, 272, 416, 203, 459, 484, 226,
	437, 0, 0, 523, 205, 482, 456, 361, 301, 302,
	204, 0, 417, 251, 275, 241, 381, 479, 480, 239,
	524, 215, 502, 207, 0, 501, 374, 474, 483, 362,
	352, 206, 481, 360, 351, 307, 657, 658, 263, 286,
	410, 345, 411, 287, 370, 369, 371, 198, 493, 0,
	199, 0, 452, 494, 525, 221, 222, 224, 0, 262,
	266, 274, 276, 282, 283, 290, 338, 385, 409, 407,
	413, 0, 469, 487, 498, 505, 511, 512, 514, 515,
	516, 517, 518, 520, 519, 373, 289, 448, 306, 343,
	0, 0, 391, 426, 227, 491, 449, 694, 686, 642,
	698, 644, 695, 696, 639, 640, 643, 697, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 0, 689, 629, 628,
	0, 635, 636, 0, 647, 648, 650, 654, 655, 656,
	659, 660, 661, 669, 671, 672, 670, 673, 674, 675,
	678, 679, 680, 681, 676, 677, 682, 646, 645, 627,
	191, 208, 339, 0, 414, 271, 522, 500, 496, 0,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 375, 376, 377,
	380, 383, 384, 387, 389, 390, 393, 397, 401, 402,
	403, 404, 406, 408, 415, 420, 428, 429, 430, 431,
	432, 435, 436, 441, 442, 443, 444, 445, 453, 454,
	458, 476, 478, 490, 504, 509, 434, 281, 485, 510,
	0, 348, 0, 0, 350, 264, 284, 295, 0, 499,
	455, 214, 422, 273, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	438, 461, 462, 463, 465, 363, 249, 399, 0, 364,
	346, 467, 468, 291, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 626, 0, 0, 0, 253, 631, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 440, 237,
	347, 344, 473, 265, 256, 252, 236, 292, 354, 394,
	460, 388, 638, 341, 0, 0, 450, 367, 0, 0,
	0, 0, 0, 633, 634, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 451, 269,
	0, 87, 0, 0, 188, 189, 190, 704, 711, 712,
	713, 714, 715, 705, 707, 0, 0, 225, 706, 232,
	651, 653, 652, 662, 663, 664, 665, 666, 667, 668,
	649, 709, 716, 717, 0, 248, 296, 255, 247, 470,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 609, 623, 0, 637, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 620, 621, 0,
	0, 0, 0, 688, 0, 622, 0, 0, 630, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 368, 240, 0, 687, 0, 0, 506,
	0, 0, 685, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 378, 421, 427, 0, 0, 0,
	238, 0, 425, 392, 489, 220, 267, 418, 398, 423,
	405, 270, 0, 0, 424, 342, 475, 412, 486, 507,
	508, 246, 372, 497, 464, 503, 521, 213, 243, 386,
	457, 492, 447, 365, 471, 472, 304, 446, 277, 195,
	340, 513, 211, 433, 229, 218, 477, 495, 272, 416,
	203, 459, 484, 226, 437, 0, 0, 523, 205, 482,
	456, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 479, 480, 239, 524, 215, 502, 207, 0, 501,
	374, 474, 483, 362, 352, 206, 481, 360, 351, 307,
	657, 658, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 198, 493, 0, 199, 0, 452, 494, 525, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 0, 469, 487, 498, 505,
	511, 512, 514, 515, 516, 517, 518, 520, 519, 373,
	289, 448, 306, 343, 0, 0, 391, 426, 227, 491,
	449, 694, 686, 642, 698, 644, 695, 696, 639, 640,
	643, 697, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	0, 689, 629, 628, 0, 635, 636, 0, 647, 648,
	650, 654, 655, 656, 659, 660, 661, 669, 671, 672,
	670, 673, 674, 675, 678, 679, 680, 681, 676, 677,
	682, 646, 645, 627, 191, 208, 339, 0, 414, 271,
	522, 500, 496, 0, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	428, 429, 430, 431, 432, 435, 436, 441, 442, 443,
	444, 445, 453, 454, 458, 476, 478, 490, 504, 509,
	434, 281, 485, 510, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 499, 455, 214, 422, 273, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 438, 461, 462, 463, 465, 363,
	249, 399, 0, 364, 346, 467, 468, 291, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 0, 0, 0, 626, 0, 0, 0, 253,
	631, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 440, 237, 347, 344, 473, 265, 256, 252,
	236, 292, 354, 394, 460, 388, 638, 341, 0, 0,
	450, 367, 0, 0, 0, 0, 0, 633, 634, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 451, 269, 0, 87, 0, 0, 188, 189,
	190, 704, 711, 712, 713, 714, 715, 705, 707, 0,
	0, 225, 706, 232, 651, 653, 652, 662, 663, 664,
	665, 666, 667, 668, 649, 709, 716, 717, 0, 248,
	296, 255, 247, 470, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	623, 0, 637, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 620, 621, 0, 0, 0, 0, 688, 0, 622,
	0, 0, 630, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 368, 240, 0,
	687, 0, 0, 506, 0, 0, 685, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 378, 421,
	427, 0, 0, 0, 238, 0, 425, 392, 489, 220,
	267, 418, 398, 423, 405, 270, 0, 0, 424, 342,
	475, 412, 486, 507, 508, 246, 372, 497, 464, 503,
	521, 213, 243, 386, 457, 492, 447, 365, 471, 472,
	304, 446, 277, 195, 340, 513, 211, 433, 229, 218,
	477, 495, 272, 416, 203, 459, 484, 226, 437, 0,
	0, 523, 205, 482, 456, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 479, 480, 239, 524, 215,
	502, 207, 0, 501, 374, 474, 483, 362, 352, 206,
	481, 360, 351, 307, 657, 658, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 198, 493, 0, 199, 0,
	452, 494, 525, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 0,
	469, 487, 498, 505, 511, 512, 514, 515, 516, 517,
	518, 520, 519, 373, 289, 448, 306, 343, 0, 0,
	391, 426, 227, 491, 449, 694, 686, 642, 698, 644,
	695, 696, 639, 640, 643, 697, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 0, 689, 629, 628, 0, 635,
	636, 0, 647, 648, 650, 654, 655, 656, 659, 660,
	661, 669, 671, 672, 670, 673, 674, 675, 678, 679,
	680, 681, 676, 677, 682, 646, 645, 627, 191, 208,
	339, 0, 414, 271, 522, 500, 496, 0, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 428, 429, 430, 431, 432, 435,
	436, 441, 442, 443, 444, 445, 453, 454, 458, 476,
	478, 490, 504, 509, 434, 281, 485, 510, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 499, 455, 214,
	422, 273, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 0, 364, 346, 467,
	468, 291, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 440, 237, 347, 344,
	473, 265, 256, 252, 236, 292, 354, 394, 460, 388,
	0, 341, 0, 0, 450, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 451, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 711, 712, 0, 0,
	0, 0, 1688, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 470, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 368, 240, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 378, 421, 427, 0, 0, 0, 238, 0,
	425, 392, 489, 220, 267, 418, 398, 423, 405, 270,
	0, 0, 424, 342, 475, 412, 486, 507, 508, 246,
	372, 497, 464, 503, 521, 213, 243, 386, 457, 492,
	447, 365, 471, 472, 304, 446, 277, 195, 340, 513,
	211, 433, 229, 218, 477, 495, 272, 416, 203, 459,
	484, 226, 437, 0, 0, 523, 205, 482, 456, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 479,
	480, 239, 524, 215, 502, 207, 0, 501, 374, 474,
	483, 362, 352, 206, 481, 360, 351, 307, 326, 327,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 198,
	493, 0, 199, 0, 452, 494, 525, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 0, 469, 487, 498, 505, 511, 512,
	514, 515, 516, 517, 518, 520, 519, 373, 289, 448,
	306, 343, 0, 0, 391, 426, 227, 491, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 544, 353,
	439, 488, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 235,
	201, 0, 191, 208, 339, 0, 414, 271, 522, 500,
	496, 0, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 428, 429,
	430, 431, 432, 435, 436, 441, 442, 443, 444, 445,
	453, 454, 458, 476, 478, 490, 504, 509, 434, 281,
	485, 510, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 499, 455, 214, 422, 273, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 364, 346, 467, 468, 291, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	440, 237, 347, 344, 473, 265, 256, 252, 236, 292,
	354, 394, 460, 388, 0, 341, 0, 0, 450, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	451, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 470, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 1018, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 368, 240, 0, 0, 0,
	1017, 506, 0, 0, 0, 0, 0, 1014, 1015, 336,
	975, 305, 192, 212, 1008, 1012, 378, 421, 427, 0,
	0, 0, 238, 0, 425, 392, 489, 220, 267, 418,
	398, 423, 405, 270, 0, 0, 424, 342, 475, 412,
	486, 507, 508, 246, 372, 497, 464, 503, 521, 213,
	243, 386, 457, 492, 447, 365, 471, 472, 304, 446,
	277, 195, 340, 513, 211, 433, 229, 218, 477, 495,
	272, 416, 203, 459, 484, 226, 437, 0, 0, 523,
	205, 482, 456, 361, 301, 302, 204, 0, 417, 251,
	275, 241, 381, 479, 480, 239, 524, 215, 502, 207,
	0, 501, 374, 474, 483, 362, 352, 206, 481, 360,
	351, 307, 326, 327, 263, 286, 410, 345, 411, 287,
	370, 369, 371, 198, 493, 0, 199, 0, 452, 494,
	525, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 385, 409, 407, 413, 0, 469, 487,
	498, 505, 511, 512, 514, 515, 516, 517, 518, 520,
	519, 373, 289, 448, 306, 343, 0, 0, 391, 426,
	227, 491, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 544, 353, 439, 488, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 235, 201, 0, 191, 208, 339, 0,
	414, 271, 522, 500, 496, 0, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 428, 429, 430, 431, 432, 435, 436, 441,
	442, 443, 444, 445, 453, 454, 458, 476, 478, 490,
	504, 509, 434, 281, 485, 510, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 499, 455, 214, 422, 273,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 0, 0, 346, 467, 468, 291,
	364, 0, 0, 0, 78, 466, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 337, 250, 0, 0, 396, 0, 197, 0, 440,
	237, 347, 344, 473, 265, 256, 252, 236, 292, 354,
	394, 460, 388, 0, 341, 0, 0, 450, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 379, 451,
	269, 0, 87, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 0, 0, 0, 0, 0, 248, 296, 255, 247,
	470, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 368, 240, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 378, 421, 427, 0, 0,
	0, 238, 0, 425, 392, 489, 220, 267, 418, 398,
	423, 405, 270, 0, 0, 424, 342, 475, 412, 486,
	507, 508, 246, 372, 497, 464, 503, 521, 213, 243,
	386, 457, 492, 447, 365, 471, 472, 304, 446, 277,
	195, 340, 513, 211, 433, 229, 218, 477, 495, 272,
	416, 203, 459, 484, 226, 437, 0, 0, 523, 205,
	482, 456, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 479, 480, 239, 524, 215, 502, 207, 0,
	501, 374, 474, 483, 362, 352, 206, 481, 360, 351,
	307, 326, 327, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 198, 493, 0, 199, 0, 452, 494, 525,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 0, 469, 487, 498,
	505, 511, 512, 514, 515, 516, 517, 518, 520, 519,
	373, 289, 448, 306, 343, 0, 0, 391, 426, 227,
	491, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 544, 353, 439, 488, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 235, 201, 0, 191, 208, 339, 86, 414,
	271, 522, 500, 496, 0, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 1852, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 428, 429, 430, 431, 432, 435, 436, 441, 442,
	443, 444, 445, 453, 454, 458, 476, 478, 490, 504,
	509, 434, 281, 485, 510, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 499, 455, 214, 422, 273, 202,
	233, 217, 242, 257, 260, 299, 359, 366, 395, 400,
	278, 254, 231, 419, 228, 438, 461, 462, 463, 465,
	363, 249, 399, 0, 1359, 346, 467, 468, 291, 466,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 0, 0, 0, 1361, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 337, 250, 0, 0, 396,
	0, 197, 0, 440, 237, 347, 344, 473, 265, 256,
	252, 236, 292, 354, 394, 460, 388, 0, 341, 0,
	0, 450, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 379, 451, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 1363, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 0, 0, 0, 0, 0,
	248, 296, 255, 247, 470, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 1190, 0, 1191, 1192,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 368, 240,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 378,
	421, 427, 0, 0, 0, 238, 0, 425, 392, 489,
	220, 267, 418, 398, 423, 405, 270, 0, 0, 424,
	342, 475, 412, 486, 507, 508, 246, 372, 497, 464,
	503, 521, 213, 243, 386, 457, 492, 447, 365, 471,
	472, 304, 446, 277, 195, 340, 513, 211, 433, 229,
	218, 477, 495, 272, 416, 203, 459, 484, 226, 437,
	0, 0, 523, 205, 482, 456, 361, 301, 302, 204,
	0, 417, 251, 275, 241, 381, 479, 480, 239, 524,
	215, 502, 207, 0, 501, 374, 474, 483, 362, 352,
	206, 481, 360, 351, 307, 326, 327, 263, 286, 410,
	345, 411, 287, 370, 369, 371, 198, 493, 0, 199,
	0, 452, 494, 525, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 385, 409, 407, 413,
	0, 469, 487, 498, 505, 511, 512, 514, 515, 516,
	517, 518, 520, 519, 373, 289, 448, 306, 343, 0,
	0, 391, 426, 227, 491, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 353, 439, 488, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 235, 201, 0, 191,
	208, 339, 0, 414, 271, 522, 500, 496, 0, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 428, 429, 430, 431, 432,
	435, 436, 441, 442, 443, 444, 445, 453, 454, 458,
	476, 478, 490, 504, 509, 434, 281, 485, 510, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 499, 455,
	214, 422, 273, 202, 233, 217, 242, 257, 260, 299,
	359, 366, 395, 400, 278, 254, 231, 419, 228, 438,
	461, 462, 463, 465, 363, 249, 399, 0, 364, 346,
	467, 468, 291, 466, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 337,
	250, 0, 0, 396, 0, 197, 0, 440, 237, 347,
	344, 473, 265, 256, 252, 236, 292, 354, 394, 460,
	388, 0, 341, 0, 0, 450, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 379, 451, 269, 0,
	0, 0, 0, 188, 189, 190, 1302, 1305, 0, 0,
	0, 0, 1301, 1304, 0, 0, 225, 1300, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 0,
	0, 0, 0, 0, 248, 296, 255, 247, 470, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 427, 0, 0, 0, 238,
	0, 425, 392, 489, 220, 267, 418, 398, 423, 405,
	270, 0, 0, 424, 342, 475, 412, 486, 507, 508,
	246, 372, 497, 464, 503, 521, 213, 243, 386, 457,
	492, 447, 365, 471, 472, 304, 446, 277, 195, 340,
	513, 211, 433, 229, 218, 477, 495, 272, 416, 203,
	459, 484, 226, 437, 0, 0, 523, 205, 482, 456,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	479, 480, 239, 524, 215, 502, 207, 0, 501, 374,
	474, 483, 362, 352, 206, 481, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	198, 493, 0, 199, 0, 452, 494, 525, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 469, 487, 498, 505, 511,
	512, 514, 515, 516, 517, 518, 520, 519, 373, 289,
	448, 306, 343, 0, 0, 391, 426, 227, 491, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 544,
	353, 439, 488, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	235, 201, 0, 191, 208, 339, 0, 414, 271, 522,
	500, 496, 0, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	375, 376, 377, 380, 383, 384, 387, 389, 390, 393,
	397, 401, 402, 403, 404, 406, 408, 415, 420, 428,
	429, 430, 431, 432, 435, 436, 441, 442, 443, 444,
	445, 453, 454, 458, 476, 478, 490, 504, 509, 434,
	281, 485, 510, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 499, 455, 214, 422, 273, 202, 233, 217,
	242, 257, 260, 299, 359, 366, 395, 400, 278, 254,
	231, 419, 228, 438, 461, 462, 463, 465, 363, 249,
	399, 0, 0, 346, 467, 468, 291, 364, 0, 0,
	0, 78, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 440, 237, 347, 344,
	473, 265, 256, 252, 236, 292, 354, 394, 460, 388,
	0, 341, 0, 0, 450, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 451, 269, 0, 87,
	0, 1340, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 470, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 368, 240, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 378, 421, 427, 0, 0, 0, 238, 0,
	425, 392, 489, 220, 267, 418, 398, 423, 405, 270,
	0, 0, 424, 342, 475, 412, 486, 507, 508, 246,
	372, 497, 464, 503, 521, 213, 243, 386, 457, 492,
	447, 365, 471, 472, 304, 446, 277, 195, 340, 513,
	211, 433, 229, 218, 477, 495, 272, 416, 203, 459,
	484, 226, 437, 0, 0, 523, 205, 482, 456, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 479,
	480, 239, 524, 215, 502, 207, 0, 501, 374, 474,
	483, 362, 352, 206, 481, 360, 351, 307, 326, 327,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 198,
	493, 0, 199, 0, 452, 494, 525, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 0, 469, 487, 498, 505, 511, 512,
	514, 515, 516, 517, 518, 520, 519, 373, 289, 448,
	306, 343, 0, 0, 391, 426, 227, 491, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 544, 353,
	439, 488, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 235,
	201, 0, 191, 208, 339, 86, 414, 271, 522, 500,
	496, 0, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 428, 429,
	430, 431, 432, 435, 436, 441, 442, 443, 444, 445,
	453, 454, 458, 476, 478, 490, 504, 509, 434, 281,
	485, 510, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 499, 455, 214, 422, 273, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 364, 346, 467, 468, 291, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	440, 237, 347, 344, 473, 265, 256, 252, 236, 292,
	354, 394, 460, 388, 0, 341, 0, 0, 450, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	451, 269, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 470, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 368, 240, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 305, 192, 212, 0, 0, 378, 421, 427, 0,
	0, 0, 238, 0, 425, 392, 489, 220, 267, 418,
	398, 423, 405, 270, 0, 0, 424, 342, 475, 412,
	486, 507, 508, 246, 372, 497, 464, 503, 521, 213,
	243, 386, 457, 492, 447, 365, 471, 472, 304, 446,
	277, 195, 340, 513, 211, 433, 229, 218, 477, 495,
	272, 416, 203, 459, 484, 226, 437, 0, 0, 523,
	205, 482, 456, 361, 301, 302, 204, 0, 417, 251,
	275, 241, 381, 479, 480, 239, 524, 215, 502, 207,
	0, 501, 374, 474, 483, 362, 352, 206, 481, 360,
	351, 307, 326, 327, 263, 286, 410, 345, 411, 287,
	370, 369, 371, 198, 493, 0, 199, 0, 452, 494,
	525, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 385, 409, 407, 413, 0, 469, 487,
	498, 505, 511, 512, 514, 515, 516, 517, 518, 520,
	519, 373, 289, 448, 306, 343, 0, 0, 391, 426,
	227, 491, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 544, 353, 439, 488, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 235, 201, 0, 191, 208, 339, 0,
	414, 271, 522, 500, 496, 0, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 428, 429, 430, 431, 432, 435, 436, 441,
	442, 443, 444, 445, 453, 454, 458, 476, 478, 490,
	504, 509, 434, 281, 485, 510, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 499, 455, 214, 422, 273,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 0, 364, 346, 467, 468, 291,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 1803, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 440, 237, 347, 344, 473, 265,
	256, 252, 236, 292, 354, 394, 460, 388, 0, 341,
	0, 0, 450, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 451, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 1541, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 470, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 368,
	240, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 305, 192, 212, 0, 0,
	378, 421, 427, 0, 0, 0, 238, 0, 425, 392,
	489, 220, 267, 418, 398, 423, 405, 270, 0, 1801,
	424, 342, 475, 412, 486, 507, 508, 246, 372, 497,
	464, 503, 521, 213, 243, 386, 457, 492, 447, 365,
	471, 472, 304, 446, 277, 195, 340, 513, 211, 433,
	229, 218, 477, 495, 272, 416, 203, 459, 484, 226,
	437, 0, 0, 523, 205, 482, 456, 361, 301, 302,
	204, 0, 417, 251, 275, 241, 381, 479, 480, 239,
	524, 215, 502, 207, 0, 501, 374, 474, 483, 362,
	352, 206, 481, 360, 351, 307, 326, 327, 263, 286,
	410, 345, 411, 287, 370, 369, 371, 198, 493, 0,
	199, 0, 452, 494, 525, 221, 222, 224, 0, 262,
	266, 274, 276, 282, 283, 290, 338, 385, 409, 407,
	413, 0, 469, 487, 498, 505, 511, 512, 514, 515,
	516, 517, 518, 520, 519, 373, 289, 448, 306, 343,
	0, 0, 391, 426, 227, 491, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 544, 353, 439, 488,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 235, 201, 0,
	191, 208, 339, 0, 414, 271, 522, 500, 496, 0,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 375, 376, 377,
	380, 383, 384, 387, 389, 390, 393, 397, 401, 402,
	403, 404, 406, 408, 415, 420, 428, 429, 430, 431,
	432, 435, 436, 441, 442, 443, 444, 445, 453, 454,
	458, 476, 478, 490, 504, 509, 434, 281, 485, 510,
	0, 348, 0, 0, 350, 264, 284, 295, 0, 499,
	455, 214, 422, 273, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	438, 461, 462, 463, 465, 363, 249, 399, 0, 364,
	346, 467, 468, 291, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 440, 237,
	347, 344, 473, 265, 256, 252, 236, 292, 354, 394,
	460, 388, 0, 341, 0, 0, 450, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 451, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 470,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 368, 240, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 0, 0, 336, 975, 305,
	192, 212, 973, 0, 378, 421, 427, 0, 0, 0,
	238, 0, 425, 392, 489, 220, 267, 418, 398, 423,
	405, 270, 0, 0, 424, 342, 475, 412, 486, 507,
	508, 246, 372, 497, 464, 503, 521, 213, 243, 386,
	457, 492, 447, 365, 471, 472, 304, 446, 277, 195,
	340, 513, 211, 433, 229, 218, 477, 495, 272, 416,
	203, 459, 484, 226, 437, 0, 0, 523, 205, 482,
	456, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 479, 480, 239, 524, 215, 502, 207, 0, 501,
	374, 474, 483, 362, 352, 206, 481, 360, 351, 307,
	326, 327, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 198, 493, 0, 199, 0, 452, 494, 525, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 0, 469, 487, 498, 505,
	511, 512, 514, 515, 516, 517, 518, 520, 519, 373,
	289, 448, 306, 343, 0, 0, 391, 426, 227, 491,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	544, 353, 439, 488, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 235, 201, 0, 191, 208, 339, 0, 414, 271,
	522, 500, 496, 0, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	428, 429, 430, 431, 432, 435, 436, 441, 442, 443,
	444, 445, 453, 454, 458, 476, 478, 490, 504, 509,
	434, 281, 485, 510, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 499, 455, 214, 422, 273, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 438, 461, 462, 463, 465, 363,
	249, 399, 0, 364, 346, 467, 468, 291, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 0, 0, 1803, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 440, 237, 347, 344, 473, 265, 256, 252,
	236, 292, 354, 394, 460, 388, 0, 341, 0, 0,
	450, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 451, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 1541, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 470, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 368, 240, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 378, 421,
	427, 0, 0, 0, 238, 0, 425, 392, 489, 220,
	267, 418, 398, 423, 405, 270, 0, 0, 424, 342,
	475, 412, 486, 507, 508, 246, 372, 497, 464, 503,
	521, 213, 243, 386, 457, 492, 447, 365, 471, 472,
	304, 446, 277, 195, 340, 513, 211, 433, 229, 218,
	477, 495, 272, 416, 203, 459, 484, 226, 437, 0,
	0, 523, 205, 482, 456, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 479, 480, 239, 524, 215,
	502, 207, 0, 501, 374, 474, 483, 362, 352, 206,
	481, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 198, 493, 0, 199, 0,
	452, 494, 525, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 0,
	469, 487, 498, 505, 511, 512, 514, 515, 516, 517,
	518, 520, 519, 373, 289, 448, 306, 343, 0, 0,
	391, 426, 227, 491, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 544, 353, 439, 488, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 235, 201, 0, 191, 208,
	339, 0, 414, 271, 522, 500, 496, 0, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 428, 429, 430, 431, 432, 435,
	436, 441, 442, 443, 444, 445, 453, 454, 458, 476,
	478, 490, 504, 509, 434, 281, 485, 510, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 499, 455, 214,
	422, 273, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 0, 364, 346, 467,
	468, 291, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 440, 237, 347, 344,
	473, 265, 256, 252, 236, 292, 354, 394, 460, 388,
	0, 341, 0, 0, 450, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 451, 269, 0, 0,
	0, 1340, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 470, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 368, 240, 0, 0, 0, 0, 506, 0, 0,
	0, 2897, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 378, 421, 427, 0, 0, 0, 238, 0,
	425, 392, 489, 220, 267, 418, 398, 423, 405, 270,
	0, 0, 424, 342, 475, 412, 486, 507, 508, 246,
	372, 497, 464, 503, 521, 213, 243, 386, 457, 492,
	447, 365, 471, 472, 304, 446, 277, 195, 340, 513,
	211, 433, 229, 218, 477, 495, 272, 416, 203, 459,
	484, 226, 437, 0, 0, 523, 205, 482, 456, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 479,
	480, 239, 524, 215, 502, 207, 0, 501, 374, 474,
	483, 362, 352, 206, 481, 360, 351, 307, 326, 327,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 198,
	493, 0, 199, 0, 452, 494, 525, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 0, 469, 487, 498, 505, 511, 512,
	514, 515, 516, 517, 518, 520, 519, 373, 289, 448,
	306, 343, 0, 0, 391, 426, 227, 491, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 544, 353,
	439, 488, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 235,
	201, 0, 191, 208, 339, 0, 414, 271, 522, 500,
	496, 0, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 428, 429,
	430, 431, 432, 435, 436, 441, 442, 443, 444, 445,
	453, 454, 458, 476, 478, 490, 504, 509, 434, 281,
	485, 510, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 499, 455, 214, 422, 273, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 364, 346, 467, 468, 291, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	440, 237, 347, 344, 473, 265, 256, 252, 236, 292,
	354, 394, 460, 388, 0, 341, 0, 0, 450, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	451, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	1684, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 470, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 368, 240, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 305, 192, 212, 0, 0, 378, 421, 427, 0,
	0, 0, 238, 0, 425, 392, 489, 220, 267, 418,
	398, 423, 405, 270, 0, 0, 424, 342, 475, 412,
	486, 507, 508, 246, 372, 497, 464, 503, 521, 213,
	243, 386, 457, 492, 447, 365, 471, 472, 304, 446,
	277, 195, 340, 513, 211, 433, 229, 218, 477, 495,
	272, 416, 203, 459, 484, 226, 437, 0, 0, 523,
	205, 482, 456, 361, 301, 302, 204, 0, 417, 251,
	275, 241, 381, 479, 480, 239, 524, 215, 502, 207,
	0, 501, 374, 474, 483, 362, 352, 206, 481, 360,
	351, 307, 326, 327, 263, 286, 410, 345, 411, 287,
	370, 369, 371, 198, 493, 0, 199, 0, 452, 494,
	525, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 385, 409, 407, 413, 0, 469, 487,
	498, 505, 511, 512, 514, 515, 516, 517, 518, 520,
	519, 373, 289, 448, 306, 343, 0, 0, 391, 426,
	227, 491, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 544, 353, 439, 488, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 235, 201, 0, 191, 208, 339, 0,
	414, 271, 522, 500, 496, 0, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 428, 429, 430, 431, 432, 435, 436, 441,
	442, 443, 444, 445, 453, 454, 458, 476, 478, 490,
	504, 509, 434, 281, 485, 510, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 499, 455, 214, 422, 273,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 0, 364, 346, 467, 468, 291,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 440, 237, 347, 344, 473, 265,
	256, 252, 236, 292, 354, 394, 460, 388, 0, 341,
	0, 0, 450, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 451, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 2148, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 470, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 368,
	240, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 305, 192, 212, 0, 0,
	378, 421, 427, 0, 0, 0, 238, 0, 425, 392,
	489, 220, 267, 418, 398, 423, 405, 270, 0, 0,
	424, 342, 475, 412, 486, 507, 508, 246, 372, 497,
	464, 503, 521, 213, 243, 386, 457, 492, 447, 365,
	471, 472, 304, 446, 277, 195, 340, 513, 211, 433,
	229, 218, 477, 495, 272, 416, 203, 459, 484, 226,
	437, 0, 0, 523, 205, 482, 456, 361, 301, 302,
	204, 0, 417, 251, 275, 241, 381, 479, 480, 239,
	524, 215, 502, 207, 0, 501, 374, 474, 483, 362,
	352, 206, 481, 360, 351, 307, 326, 327, 263, 286,
	410, 345, 411, 287, 370, 369, 371, 198, 493, 0,
	199, 0, 452, 494, 525, 221, 222, 224, 0, 262,
	266, 274, 276, 282, 283, 290, 338, 385, 409, 407,
	413, 0, 469, 487, 498, 505, 511, 512, 514, 515,
	516, 517, 518, 520, 519, 373, 289, 448, 306, 343,
	0, 0, 391, 426, 227, 491, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 544, 353, 439, 488,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 235, 201, 0,
	191, 208, 339, 0, 414, 271, 522, 500, 496, 0,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 375, 376, 377,
	380, 383, 384, 387, 389, 390, 393, 397, 401, 402,
	403, 404, 406, 408, 415, 420, 428, 429, 430, 431,
	432, 435, 436, 441, 442, 443, 444, 445, 453, 454,
	458, 476, 478, 490, 504, 509, 434, 281, 485, 510,
	0, 348, 0, 0, 350, 264, 284, 295, 0, 499,
	455, 214, 422, 273, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	438, 461, 462, 463, 465, 363, 249, 399, 0, 364,
	346, 467, 468, 291, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 440, 237,
	347, 344, 473, 265, 256, 252, 236, 292, 354, 394,
	460, 388, 0, 341, 0, 0, 450, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 451, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	2133, 0, 0, 0, 2134, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 470,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 368, 240, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 378, 421, 427, 0, 0, 0,
	238, 0, 425, 392, 489, 220, 267, 418, 398, 423,
	405, 270, 0, 0, 424, 342, 475, 412, 486, 507,
	508, 246, 372, 497, 464, 503, 521, 213, 243, 386,
	457, 492, 447, 365, 471, 472, 304, 446, 277, 195,
	340, 513, 211, 433, 229, 218, 477, 495, 272, 416,
	203, 459, 484, 226, 437, 0, 0, 523, 205, 482,
	456, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 479, 480, 239, 524, 215, 502, 207, 0, 501,
	374, 474, 483, 362, 352, 206, 481, 360, 351, 307,
	326, 327, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 198, 493, 0, 199, 0, 452, 494, 525, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 0, 469, 487, 498, 505,
	511, 512, 514, 515, 516, 517, 518, 520, 519, 373,
	289, 448, 306, 343, 0, 0, 391, 426, 227, 491,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	544, 353, 439, 488, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 235, 201, 0, 191, 208, 339, 0, 414, 271,
	522, 500, 496, 0, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	428, 429, 430, 431, 432, 435, 436, 441, 442, 443,
	444, 445, 453, 454, 458, 476, 478, 490, 504, 509,
	434, 281, 485, 510, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 499, 455, 214, 422, 273, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 438, 461, 462, 463, 465, 363,
	249, 399, 0, 364, 346, 467, 468, 291, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	1384, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 440, 237, 347, 344, 473, 265, 256, 252,
	236, 292, 354, 394, 460, 388, 0, 341, 0, 0,
	450, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 451, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 1383, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 470, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 368, 240, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 378, 421,
	427, 0, 0, 0, 238, 0, 425, 392, 489, 220,
	267, 418, 398, 423, 405, 270, 0, 0, 424, 342,
	475, 412, 486, 507, 508, 246, 372, 497, 464, 503,
	521, 213, 243, 386, 457, 492, 447, 365, 471, 472,
	304, 446, 277, 195, 340, 513, 211, 433, 229, 218,
	477, 495, 272, 416, 203, 459, 484, 226, 437, 0,
	0, 523, 205, 482, 456, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 479, 480, 239, 524, 215,
	502, 207, 0, 501, 374, 474, 483, 362, 352, 206,
	481, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 198, 493, 0, 199, 0,
	452, 494, 525, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 0,
	469, 487, 498, 505, 511, 512, 514, 515, 516, 517,
	518, 520, 519, 373, 289, 448, 306, 343, 0, 0,
	391, 426, 227, 491, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 544, 353, 439, 488, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 235, 201, 0, 191, 208,
	339, 0, 414, 271, 522, 500, 496, 0, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 428, 429, 430, 431, 432, 435,
	436, 441, 442, 443, 444, 445, 453, 454, 458, 476,
	478, 490, 504, 509, 434, 281, 485, 510, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 499, 455, 214,
	422, 273, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 0, 364, 346, 467,
	468, 291, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 440, 237, 347, 344,
	473, 265, 256, 252, 236, 292, 354, 394, 460, 388,
	0, 341, 0, 0, 450, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 451, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 470, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 368, 240, 0, 0, 0, 0, 506, 0, 0,
	0, 2990, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 378, 421, 427, 0, 0, 0, 238, 0,
	425, 392, 489, 220, 267, 418, 398, 423, 405, 270,
	0, 0, 424, 342, 475, 412, 486, 507, 508, 246,
	372, 497, 464, 503, 521, 213, 243, 386, 457, 492,
	447, 365, 471, 472, 304, 446, 277, 195, 340, 513,
	211, 433, 229, 218, 477, 495, 272, 416, 203, 459,
	484, 226, 437, 0, 0, 523, 205, 482, 456, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 479,
	480, 239, 524, 215, 502, 207, 0, 501, 374, 474,
	483, 362, 352, 206, 481, 360, 351, 307, 326, 327,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 198,
	493, 0, 199, 0, 452, 494, 525, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 0, 469, 487, 498, 505, 511, 512,
	514, 515, 516, 517, 518, 520, 519, 373, 289, 448,
	306, 343, 0, 0, 391, 426, 227, 491, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 544, 353,
	439, 488, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 235,
	201, 0, 191, 208, 339, 0, 414, 271, 522, 500,
	496, 0, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 428, 429,
	430, 431, 432, 435, 436, 441, 442, 443, 444, 445,
	453, 454, 458, 476, 478, 490, 504, 509, 434, 281,
	485, 510, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 499, 455, 214, 422, 273, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 364, 346, 467, 468, 291, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	440, 237, 347, 344, 473, 265, 256, 252, 236, 292,
	354, 394, 460, 388, 0, 341, 0, 0, 450, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	451, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	1541, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 470, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 368, 240, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 305, 192, 212, 0, 0, 378, 421, 427, 0,
	0, 0, 238, 0, 425, 392, 489, 220, 267, 418,
	398, 423, 405, 270, 0, 0, 424, 342, 475, 412,
	486, 507, 508, 246, 372, 497, 464, 503, 521, 213,
	243, 386, 457, 492, 447, 365, 471, 472, 304, 446,
	277, 195, 340, 513, 211, 433, 229, 218, 477, 495,
	272, 416, 203, 459, 484, 226, 437, 0, 0, 523,
	205, 482, 456, 361, 301, 302, 204, 0, 417, 251,
	275, 241, 381, 479, 480, 239, 524, 215, 502, 207,
	0, 501, 374, 474, 483, 362, 352, 206, 481, 360,
	351, 307, 326, 327, 263, 286, 410, 345, 411, 287,
	370, 369, 371, 198, 493, 0, 199, 0, 452, 494,
	525, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 385, 409, 407, 413, 0, 469, 487,
	498, 505, 511, 512, 514, 515, 516, 517, 518, 520,
	519, 373, 289, 448, 306, 343, 0, 0, 391, 426,
	227, 491, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 544, 353, 439, 488, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 235, 201, 0, 191, 208, 339, 0,
	414, 271, 522, 500, 496, 0, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 428, 429, 430, 431, 432, 435, 436, 441,
	442, 443, 444, 445, 453, 454, 458, 476, 478, 490,
	504, 509, 434, 281, 485, 510, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 499, 455, 214, 422, 273,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 0, 364, 346, 467, 468, 291,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 440, 237, 347, 344, 473, 265,
	256, 252, 236, 292, 354, 394, 460, 388, 0, 341,
	0, 0, 450, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 451, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 470, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 368,
	240, 0, 0, 0, 0, 506, 0, 0, 0, 2897,
	0, 0, 0, 336, 0, 305, 192, 212, 0, 0,
	378, 421, 427, 0, 0, 0, 238, 0, 425, 392,
	489, 220, 267, 418, 398, 423, 405, 270, 0, 0,
	424, 342, 475, 412, 486, 507, 508, 246, 372, 497,
	464, 503, 521, 213, 243, 386, 457, 492, 447, 365,
	471, 472, 304, 446, 277, 195, 340, 513, 211, 433,
	229, 218, 477, 495, 272, 416, 203, 459, 484, 226,
	437, 0, 0, 523, 205, 482, 456, 361, 301, 302,
	204, 0, 417, 251, 275, 241, 381, 479, 480, 239,
	524, 215, 502, 207, 0, 501, 374, 474, 483, 362,
	352, 206, 481, 360, 351, 307, 326, 327, 263, 286,
	410, 345, 411, 287, 370, 369, 371, 198, 493, 0,
	199, 0, 452, 494, 525, 221, 222, 224, 0, 262,
	266, 274, 276, 282, 283, 290, 338, 385, 409, 407,
	413, 0, 469, 487, 498, 505, 511, 512, 514, 515,
	516, 517, 518, 520, 519, 373, 289, 448, 306, 343,
	0, 0, 391, 426, 227, 491, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 544, 353, 439, 488,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 235, 201, 0,
	191, 208, 339, 0, 414, 271, 522, 500, 496, 0,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 375, 376, 377,
	380, 383, 384, 387, 389, 390, 393, 397, 401, 402,
	403, 404, 406, 408, 415, 420, 428, 429, 430, 431,
	432, 435, 436, 441, 442, 443, 444, 445, 453, 454,
	458, 476, 478, 490, 504, 509, 434, 281, 485, 510,
	0, 348, 0, 0, 350, 264, 284, 295, 0, 499,
	455, 214, 422, 273, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	438, 461, 462, 463, 465, 363, 249, 399, 0, 364,
	346, 467, 468, 291, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 440, 237,
	347, 344, 473, 265, 256, 252, 236, 292, 354, 394,
	460, 388, 0, 341, 0, 0, 450, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 451, 269,
	0, 87, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 470,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 368, 240, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 378, 421, 427, 0, 0, 0,
	238, 0, 425, 392, 489, 220, 267, 418, 398, 423,
	405, 270, 0, 0, 424, 342, 475, 412, 486, 507,
	508, 246, 372, 497, 464, 503, 521, 213, 243, 386,
	457, 492, 447, 365, 471, 472, 304, 446, 277, 195,
	340, 513, 211, 433, 229, 218, 477, 495, 272, 416,
	203, 459, 484, 226, 437, 0, 0, 523, 205, 482,
	456, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 479, 480, 239, 524, 215, 502, 207, 0, 501,
	374, 474, 483, 362, 352, 206, 481, 360, 351, 307,
	326, 327, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 198, 493, 0, 199, 0, 452, 494, 525, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 0, 469, 487, 498, 505,
	511, 512, 514, 515, 516, 517, 518, 520, 519, 373,
	289, 448, 306, 343, 0, 0, 391, 426, 227, 491,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	544, 353, 439, 488, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 235, 201, 0, 191, 208, 339, 0, 414, 271,
	522, 500, 496, 0, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	428, 429, 430, 431, 432, 435, 436, 441, 442, 443,
	444, 445, 453, 454, 458, 476, 478, 490, 504, 509,
	434, 281, 485, 510, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 499, 455, 214, 422, 273, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 438, 461, 462, 463, 465, 363,
	249, 399, 0, 364, 346, 467, 468, 291, 466, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 440, 237, 347, 344, 473, 265, 256, 252,
	236, 292, 354, 394, 460, 388, 0, 341, 0, 0,
	450, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 451, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 470, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 368, 240, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 378, 421,
	427, 0, 0, 0, 238, 0, 425, 392, 489, 220,
	267, 418, 398, 423, 405, 270, 0, 0, 424, 342,
	475, 412, 486, 507, 508, 246, 372, 497, 464, 503,
	521, 213, 243, 386, 457, 492, 447, 365, 471, 472,
	304, 446, 277, 195, 340, 513, 211, 433, 229, 218,
	477, 495, 272, 416, 203, 459, 484, 226, 437, 0,
	0, 523, 205, 482, 456, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 479, 480, 239, 524, 215,
	502, 207, 0, 501, 374, 474, 483, 362, 352, 206,
	481, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 198, 493, 0, 199, 0,
	452, 494, 525, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 0,
	469, 487, 498, 505, 511, 512, 514, 515, 516, 517,
	518, 520, 519, 373, 289, 448, 306, 343, 0, 0,
	391, 426, 227, 491, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 544, 353, 439, 488, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 235, 201, 0, 191, 208,
	339, 0, 414, 271, 522, 500, 496, 0, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 428, 429, 430, 431, 432, 435,
	436, 441, 442, 443, 444, 445, 453, 454, 458, 476,
	478, 490, 504, 509, 434, 281, 485, 510, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 499, 455, 214,
	422, 273, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 0, 364, 346, 467,
	468, 291, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 440, 237, 347, 344,
	473, 265, 256, 252, 236, 292, 354, 394, 460, 388,
	0, 341, 0, 0, 450, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 451, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 1363, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 470, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 368, 240, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 378, 421, 427, 0, 0, 0, 238, 0,
	425, 392, 489, 220, 267, 418, 398, 423, 405, 270,
	0, 0, 424, 342, 475, 412, 486, 507, 508, 246,
	372, 497, 464, 503, 521, 213, 243, 386, 457, 492,
	447, 365, 471, 472, 304, 446, 277, 195, 340, 513,
	211, 433, 229, 218, 477, 495, 272, 416, 203, 459,
	484, 226, 437, 0, 0, 523, 205, 482, 456, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 479,
	480, 239, 524, 215, 502, 207, 0, 501, 374, 474,
	483, 362, 352, 206, 481, 360, 351, 307, 326, 327,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 198,
	493, 0, 199, 0, 452, 494, 525, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 0, 469, 487, 498, 505, 511, 512,
	514, 515, 516, 517, 518, 520, 519, 373, 289, 448,
	306, 343, 0, 0, 391, 426, 227, 491, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 544, 353,
	439, 488, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 235,
	201, 0, 191, 208, 339, 0, 414, 271, 522, 500,
	496, 0, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 428, 429,
	430, 431, 432, 435, 436, 441, 442, 443, 444, 445,
	453, 454, 458, 476, 478, 490, 504, 509, 434, 281,
	485, 510, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 499, 455, 214, 422, 273, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 364, 346, 467, 468, 291, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	440, 237, 347, 344, 473, 265, 256, 252, 236, 292,
	354, 394, 460, 388, 0, 341, 0, 0, 450, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	451, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 470, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 368, 240, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 305, 192, 212, 0, 0, 378, 421, 427, 0,
	0, 0, 238, 0, 425, 392, 489, 220, 267, 418,
	398, 423, 405, 270, 0, 0, 424, 342, 475, 412,
	486, 507, 508, 246, 372, 497, 464, 503, 521, 213,
	243, 386, 457, 492, 447, 365, 471, 472, 304, 446,
	277, 195, 340, 513, 211, 433, 229, 218, 477, 495,
	272, 416, 203, 459, 484, 226, 437, 0, 0, 523,
	205, 482, 456, 361, 301, 302, 204, 0, 417, 251,
	275, 241, 381, 479, 480, 239, 524, 215, 502, 207,
	0, 501, 374, 474, 483, 362, 352, 206, 481, 360,
	351, 307, 326, 327, 263, 286, 410, 345, 411, 287,
	370, 369, 371, 198, 493, 0, 199, 0, 452, 494,
	525, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 385, 409, 407, 413, 0, 469, 487,
	498, 505, 511, 512, 514, 515, 516, 517, 518, 520,
	519, 373, 289, 448, 306, 343, 0, 0, 391, 426,
	227, 491, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 544, 353, 439, 488, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 235, 201, 0, 191, 208, 339, 0,
	414, 271, 522, 500, 496, 0, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 428, 429, 430, 431, 432, 435, 436, 441,
	442, 443, 444, 445, 453, 454, 458, 476, 478, 490,
	504, 509, 434, 281, 485, 510, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 499, 455, 214, 422, 273,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 0, 364, 346, 467, 468, 291,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 440, 237, 347, 344, 473, 265,
	256, 252, 236, 292, 354, 394, 460, 388, 0, 341,
	0, 0, 450, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 451, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 470, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 368,
	240, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 305, 192, 212, 0, 0,
	378, 421, 427, 0, 0, 0, 238, 0, 425, 392,
	489, 220, 267, 418, 398, 423, 405, 270, 0, 0,
	424, 342, 475, 412, 486, 507, 508, 246, 372, 497,
	464, 503, 521, 213, 243, 386, 457, 492, 447, 365,
	471, 472, 304, 446, 277, 195, 340, 513, 211, 433,
	229, 218, 477, 495, 272, 416, 203, 459, 484, 226,
	437, 0, 0, 523, 205, 482, 456, 361, 301, 302,
	204, 0, 417, 251, 275, 241, 381, 479, 480, 239,
	524, 215, 502, 207, 0, 501, 374, 474, 483, 362,
	352, 206, 481, 360, 351, 307, 326, 327, 263, 286,
	410, 345, 411, 287, 370, 369, 371, 198, 493, 0,
	199, 0, 452, 494, 525, 221, 222, 224, 0, 262,
	266, 274, 276, 282, 283, 290, 338, 385, 409, 407,
	413, 0, 469, 487, 498, 505, 511, 512, 514, 515,
	516, 517, 518, 520, 519, 373, 289, 448, 306, 343,
	0, 0, 391, 426, 227, 491, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 544, 353, 439, 488,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 235, 201, 0,
	191, 208, 339, 1639, 414, 271, 522, 500, 496, 0,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 375, 376, 377,
	380, 383, 384, 387, 389, 390, 393, 397, 401, 402,
	403, 404, 406, 408, 415, 420, 428, 429, 430, 431,
	432, 435, 436, 441, 442, 443, 444, 445, 453, 454,
	458, 476, 478, 490, 504, 509, 434, 281, 485, 510,
	0, 348, 0, 0, 350, 264, 284, 295, 0, 499,
	455, 214, 422, 273, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	438, 461, 462, 463, 465, 363, 249, 399, 0, 364,
	346, 467, 468, 291, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 1509, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 440, 237,
	347, 344, 473, 265, 256, 252, 236, 292, 354, 394,
	460, 388, 0, 341, 0, 0, 450, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 451, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 470,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 368, 240, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 378, 421, 427, 0, 0, 0,
	238, 0, 425, 392, 489, 220, 267, 418, 398, 423,
	405, 270, 0, 0, 424, 342, 475, 412, 486, 507,
	508, 246, 372, 497, 464, 503, 521, 213, 243, 386,
	457, 492, 447, 365, 471, 472, 304, 446, 277, 195,
	340, 513, 211, 433, 229, 218, 477, 495, 272, 416,
	203, 459, 484, 226, 437, 0, 0, 523, 205, 482,
	456, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 479, 480, 239, 524, 215, 502, 207, 0, 501,
	374, 474, 483, 362, 352, 206, 481, 360, 351, 307,
	326, 327, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 198, 493, 0, 199, 0, 452, 494, 525, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 0, 469, 487, 498, 505,
	511, 512, 514, 515, 516, 517, 518, 520, 519, 373,
	289, 448, 306, 343, 0, 0, 391, 426, 227, 491,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	544, 353, 439, 488, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 235, 201, 0, 191, 208, 339, 0, 414, 271,
	522, 500, 496, 0, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	428, 429, 430, 431, 432, 435, 436, 441, 442, 443,
	444, 445, 453, 454, 458, 476, 478, 490, 504, 509,
	434, 281, 485, 510, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 499, 455, 214, 422, 273, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 438, 461, 462, 463, 465, 363,
	249, 399, 0, 364, 346, 467, 468, 291, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 1507, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 440, 237, 347, 344, 473, 265, 256, 252,
	236, 292, 354, 394, 460, 388, 0, 341, 0, 0,
	450, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 451, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 470, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 368, 240, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 378, 421,
	427, 0, 0, 0, 238, 0, 425, 392, 489, 220,
	267, 418, 398, 423, 405, 270, 0, 0, 424, 342,
	475, 412, 486, 507, 508, 246, 372, 497, 464, 503,
	521, 213, 243, 386, 457, 492, 447, 365, 471, 472,
	304, 446, 277, 195, 340, 513, 211, 433, 229, 218,
	477, 495, 272, 416, 203, 459, 484, 226, 437, 0,
	0, 523, 205, 482, 456, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 479, 480, 239, 524, 215,
	502, 207, 0, 501, 374, 474, 483, 362, 352, 206,
	481, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 198, 493, 0, 199, 0,
	452, 494, 525, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 0,
	469, 487, 498, 505, 511, 512, 514, 515, 516, 517,
	518, 520, 519, 373, 289, 448, 306, 343, 0, 0,
	391, 426, 227, 491, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 544, 353, 439, 488, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 235, 201, 0, 191, 208,
	339, 0, 414, 271, 522, 500, 496, 0, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 428, 429, 430, 431, 432, 435,
	436, 441, 442, 443, 444, 445, 453, 454, 458, 476,
	478, 490, 504, 509, 434, 281, 485, 510, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 499, 455, 214,
	422, 273, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 0, 364, 346, 467,
	468, 291, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 1505, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 440, 237, 347, 344,
	473, 265, 256, 252, 236, 292, 354, 394, 460, 388,
	0, 341, 0, 0, 450, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 451, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 470, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 368, 240, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 378, 421, 427, 0, 0, 0, 238, 0,
	425, 392, 489, 220, 267, 418, 398, 423, 405, 270,
	0, 0, 424, 342, 475, 412, 486, 507, 508, 246,
	372, 497, 464, 503, 521, 213, 243, 386, 457, 492,
	447, 365, 471, 472, 304, 446, 277, 195, 340, 513,
	211, 433, 229, 218, 477, 495, 272, 416, 203, 459,
	484, 226, 437, 0, 0, 523, 205, 482, 456, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 479,
	480, 239, 524, 215, 502, 207, 0, 501, 374, 474,
	483, 362, 352, 206, 481, 360, 351, 307, 326, 327,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 198,
	493, 0, 199, 0, 452, 494, 525, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 0, 469, 487, 498, 505, 511, 512,
	514, 515, 516, 517, 518, 520, 519, 373, 289, 448,
	306, 343, 0, 0, 391, 426, 227, 491, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 544, 353,
	439, 488, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 235,
	201, 0, 191, 208, 339, 0, 414, 271, 522, 500,
	496, 0, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 428, 429,
	430, 431, 432, 435, 436, 441, 442, 443, 444, 445,
	453, 454, 458, 476, 478, 490, 504, 509, 434, 281,
	485, 510, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 499, 455, 214, 422, 273, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 364, 346, 467, 468, 291, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	1503, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	440, 237, 347, 344, 473, 265, 256, 252, 236, 292,
	354, 394, 460, 388, 0, 341, 0, 0, 450, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	451, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 470, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 368, 240, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 305, 192, 212, 0, 0, 378, 421, 427, 0,
	0, 0, 238, 0, 425, 392, 489, 220, 267, 418,
	398, 423, 405, 270, 0, 0, 424, 342, 475, 412,
	486, 507, 508, 246, 372, 497, 464, 503, 521, 213,
	243, 386, 457, 492, 447, 365, 471, 472, 304, 446,
	277, 195, 340, 513, 211, 433, 229, 218, 477, 495,
	272, 416, 203, 459, 484, 226, 437, 0, 0, 523,
	205, 482, 456, 361, 301, 302, 204, 0, 417, 251,
	275, 241, 381, 479, 480, 239, 524, 215, 502, 207,
	0, 501, 374, 474, 483, 362, 352, 206, 481, 360,
	351, 307, 326, 327, 263, 286, 410, 345, 411, 287,
	370, 369, 371, 198, 493, 0, 199, 0, 452, 494,
	525, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 385, 409, 407, 413, 0, 469, 487,
	498, 505, 511, 512, 514, 515, 516, 517, 518, 520,
	519, 373, 289, 448, 306, 343, 0, 0, 391, 426,
	227, 491, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 544, 353, 439, 488, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 235, 201, 0, 191, 208, 339, 0,
	414, 271, 522, 500, 496, 0, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 428, 429, 430, 431, 432, 435, 436, 441,
	442, 443, 444, 445, 453, 454, 458, 476, 478, 490,
	504, 509, 434, 281, 485, 510, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 499, 455, 214, 422, 273,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 0, 364, 346, 467, 468, 291,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 1501, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 440, 237, 347, 344, 473, 265,
	256, 252, 236, 292, 354, 394, 460, 388, 0, 341,
	0, 0, 450, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 451, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 470, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 368,
	240, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 305, 192, 212, 0, 0,
	378, 421, 427, 0, 0, 0, 238, 0, 425, 392,
	489, 220, 267, 418, 398, 423, 405, 270, 0, 0,
	424, 342, 475, 412, 486, 507, 508, 246, 372, 497,
	464, 503, 521, 213, 243, 386, 457, 492, 447, 365,
	471, 472, 304, 446, 277, 195, 340, 513, 211, 433,
	229, 218, 477, 495, 272, 416, 203, 459, 484, 226,
	437, 0, 0, 523, 205, 482, 456, 361, 301, 302,
	204, 0, 417, 251, 275, 241, 381, 479, 480, 239,
	524, 215, 502, 207, 0, 501, 374, 474, 483, 362,
	352, 206, 481, 360, 351, 307, 326, 327, 263, 286,
	410, 345, 411, 287, 370, 369, 371, 198, 493, 0,
	199, 0, 452, 494, 525, 221, 222, 224, 0, 262,
	266, 274, 276, 282, 283, 290, 338, 385, 409, 407,
	413, 0, 469, 487, 498, 505, 511, 512, 514, 515,
	516, 517, 518, 520, 519, 373, 289, 448, 306, 343,
	0, 0, 391, 426, 227, 491, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 544, 353, 439, 488,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 235, 201, 0,
	191, 208, 339, 0, 414, 271, 522, 500, 496, 0,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 375, 376, 377,
	380, 383, 384, 387, 389, 390, 393, 397, 401, 402,
	403, 404, 406, 408, 415, 420, 428, 429, 430, 431,
	432, 435, 436, 441, 442, 443, 444, 445, 453, 454,
	458, 476, 478, 490, 504, 509, 434, 281, 485, 510,
	0, 348, 0, 0, 350, 264, 284, 295, 0, 499,
	455, 214, 422, 273, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	438, 461, 462, 463, 465, 363, 249, 399, 0, 364,
	346, 467, 468, 291, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 1497, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 440, 237,
	347, 344, 473, 265, 256, 252, 236, 292, 354, 394,
	460, 388, 0, 341, 0, 0, 450, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 451, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 470,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 368, 240, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 378, 421, 427, 0, 0, 0,
	238, 0, 425, 392, 489, 220, 267, 418, 398, 423,
	405, 270, 0, 0, 424, 342, 475, 412, 486, 507,
	508, 246, 372, 497, 464, 503, 521, 213, 243, 386,
	457, 492, 447, 365, 471, 472, 304, 446, 277, 195,
	340, 513, 211, 433, 229, 218, 477, 495, 272, 416,
	203, 459, 484, 226, 437, 0, 0, 523, 205, 482,
	456, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 479, 480, 239, 524, 215, 502, 207, 0, 501,
	374, 474, 483, 362, 352, 206, 481, 360, 351, 307,
	326, 327, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 198, 493, 0, 199, 0, 452, 494, 525, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 0, 469, 487, 498, 505,
	511, 512, 514, 515, 516, 517, 518, 520, 519, 373,
	289, 448, 306, 343, 0, 0, 391, 426, 227, 491,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	544, 353, 439, 488, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 235, 201, 0, 191, 208, 339, 0, 414, 271,
	522, 500, 496, 0, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	428, 429, 430, 431, 432, 435, 436, 441, 442, 443,
	444, 445, 453, 454, 458, 476, 478, 490, 504, 509,
	434, 281, 485, 510, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 499, 455, 214, 422, 273, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 438, 461, 462, 463, 465, 363,
	249, 399, 0, 364, 346, 467, 468, 291, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 1495, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 440, 237, 347, 344, 473, 265, 256, 252,
	236, 292, 354, 394, 460, 388, 0, 341, 0, 0,
	450, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 451, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 470, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 368, 240, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 378, 421,
	427, 0, 0, 0, 238, 0, 425, 392, 489, 220,
	267, 418, 398, 423, 405, 270, 0, 0, 424, 342,
	475, 412, 486, 507, 508, 246, 372, 497, 464, 503,
	521, 213, 243, 386, 457, 492, 447, 365, 471, 472,
	304, 446, 277, 195, 340, 513, 211, 433, 229, 218,
	477, 495, 272, 416, 203, 459, 484, 226, 437, 0,
	0, 523, 205, 482, 456, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 479, 480, 239, 524, 215,
	502, 207, 0, 501, 374, 474, 483, 362, 352, 206,
	481, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 198, 493, 0, 199, 0,
	452, 494, 525, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 0,
	469, 487, 498, 505, 511, 512, 514, 515, 516, 517,
	518, 520, 519, 373, 289, 448, 306, 343, 0, 0,
	391, 426, 227, 491, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 544, 353, 439, 488, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 235, 201, 0, 191, 208,
	339, 0, 414, 271, 522, 500, 496, 0, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 428, 429, 430, 431, 432, 435,
	436, 441, 442, 443, 444, 445, 453, 454, 458, 476,
	478, 490, 504, 509, 434, 281, 485, 510, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 499, 455, 214,
	422, 273, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 0, 364, 346, 467,
	468, 291, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 1493, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 440, 237, 347, 344,
	473, 265, 256, 252, 236, 292, 354, 394, 460, 388,
	0, 341, 0, 0, 450, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 451, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 470, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 368, 240, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 378, 421, 427, 0, 0, 0, 238, 0,
	425, 392, 489, 220, 267, 418, 398, 423, 405, 270,
	0, 0, 424, 342, 475, 412, 486, 507, 508, 246,
	372, 497, 464, 503, 521, 213, 243, 386, 457, 492,
	447, 365, 471, 472, 304, 446, 277, 195, 340, 513,
	211, 433, 229, 218, 477, 495, 272, 416, 203, 459,
	484, 226, 437, 0, 0, 523, 205, 482, 456, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 479,
	480, 239, 524, 215, 502, 207, 0, 501, 374, 474,
	483, 362, 352, 206, 481, 360, 351, 307, 326, 327,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 198,
	493, 0, 199, 0, 452, 494, 525, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 0, 469, 487, 498, 505, 511, 512,
	514, 515, 516, 517, 518, 520, 519, 373, 289, 448,
	306, 343, 0, 0, 391, 426, 227, 491, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 544, 353,
	439, 488, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 235,
	201, 0, 191, 208, 339, 0, 414, 271, 522, 500,
	496, 0, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 428, 429,
	430, 431, 432, 435, 436, 441, 442, 443, 444, 445,
	453, 454, 458, 476, 478, 490, 504, 509, 434, 281,
	485, 510, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 499, 455, 214, 422, 273, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 364, 346, 467, 468, 291, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	440, 237, 347, 344, 473, 265, 256, 252, 236, 292,
	354, 394, 460, 388, 0, 341, 0, 0, 450, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	451, 269, 0, 1468, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 470, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 368, 240, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 305, 192, 212, 0, 0, 378, 421, 427, 0,
	0, 0, 238, 0, 425, 392, 489, 220, 267, 418,
	398, 423, 405, 270, 0, 0, 424, 342, 475, 412,
	486, 507, 508, 246, 372, 497, 464, 503, 521, 213,
	243, 386, 457, 492, 447, 365, 471, 472, 304, 446,
	277, 195, 340, 513, 211, 433, 229, 218, 477, 495,
	272, 416, 203, 459, 484, 226, 437, 0, 0, 523,
	205, 482, 456, 361, 301, 302, 204, 0, 417, 251,
	275, 241, 381, 479, 480, 239, 524, 215, 502, 207,
	0, 501, 374, 474, 483, 362, 352, 206, 481, 360,
	351, 307, 326, 327, 263, 286, 410, 345, 411, 287,
	370, 369, 371, 198, 493, 0, 199, 0, 452, 494,
	525, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 385, 409, 407, 413, 0, 469, 487,
	498, 505, 511, 512, 514, 515, 516, 517, 518, 520,
	519, 373, 289, 448, 306, 343, 0, 0, 391, 426,
	227, 491, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 544, 353, 439, 488, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 235, 201, 0, 191, 208, 339, 0,
	414, 271, 522, 500, 496, 0, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 428, 429, 430, 431, 432, 435, 436, 441,
	442, 443, 444, 445, 453, 454, 458, 476, 478, 490,
	504, 509, 434, 281, 485, 510, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 499, 455, 214, 422, 273,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 0, 364, 346, 467, 468, 291,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 0, 0,
	1368, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 440, 237, 347, 344, 473, 265,
	256, 252, 236, 292, 354, 394, 460, 388, 0, 341,
	0, 0, 450, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 451, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 470, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 368,
	240, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 305, 192, 212, 0, 0,
	378, 421, 427, 0, 0, 0, 238, 0, 425, 392,
	489, 220, 267, 418, 398, 423, 405, 270, 0, 0,
	424, 342, 475, 412, 486, 507, 508, 246, 372, 497,
	464, 503, 521, 213, 243, 386, 457, 492, 447, 365,
	471, 472, 304, 446, 277, 195, 340, 513, 211, 433,
	229, 218, 477, 495, 272, 416, 203, 459, 484, 226,
	437, 0, 0, 523, 205, 482, 456, 361, 301, 302,
	204, 0, 417, 251, 275, 241, 381, 479, 480, 239,
	524, 215, 502, 207, 0, 501, 374, 474, 483, 362,
	352, 206, 481, 360, 351, 307, 326, 327, 263, 286,
	410, 345, 411, 287, 370, 369, 371, 198, 493, 0,
	199, 0, 452, 494, 525, 221, 222, 224, 0, 262,
	266, 274, 276, 282, 283, 290, 338, 385, 409, 407,
	413, 0, 469, 487, 498, 505, 511, 512, 514, 515,
	516, 517, 518, 520, 519, 373, 289, 448, 306, 343,
	0, 0, 391, 426, 227, 491, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 544, 353, 439, 488,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 235, 201, 0,
	191, 208, 339, 0, 414, 271, 522, 500, 496, 0,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 375, 376, 377,
	380, 383, 384, 387, 389, 390, 393, 397, 401, 402,
	403, 404, 406, 408, 415, 420, 428, 429, 430, 431,
	432, 435, 436, 441, 442, 443, 444, 445, 453, 454,
	458, 476, 478, 490, 504, 509, 434, 281, 485, 510,
	0, 348, 0, 0, 350, 264, 284, 295, 0, 499,
	455, 214, 422, 273, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	438, 461, 462, 463, 465, 363, 249, 399, 0, 364,
	346, 467, 468, 291, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 440, 237,
	347, 344, 473, 265, 256, 252, 236, 292, 354, 394,
	460, 388, 0, 341, 0, 0, 450, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 451, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 1167, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 470,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 368, 240, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 378, 421, 427, 0, 0, 0,
	238, 0, 425, 392, 489, 220, 267, 418, 398, 423,
	405, 270, 0, 0, 424, 342, 475, 412, 486, 507,
	508, 246, 372, 497, 464, 503, 521, 213, 243, 386,
	457, 492, 447, 365, 471, 472, 304, 446, 277, 195,
	340, 513, 211, 433, 229, 218, 477, 495, 272, 416,
	203, 459, 484, 226, 437, 0, 0, 523, 205, 482,
	456, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 479, 480, 239, 524, 215, 502, 207, 0, 501,
	374, 474, 483, 362, 352, 206, 481, 360, 351, 307,
	326, 327, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 198, 493, 0, 199, 0, 452, 494, 525, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 0, 469, 487, 498, 505,
	511, 512, 514, 515, 516, 517, 518, 520, 519, 373,
	289, 448, 306, 343, 0, 0, 391, 426, 227, 491,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	544, 353, 439, 488, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 235, 201, 0, 191, 208, 339, 0, 414, 271,
	522, 500, 496, 0, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	428, 429, 430, 431, 432, 435, 436, 441, 442, 443,
	444, 445, 453, 454, 458, 476, 478, 490, 504, 509,
	434, 281, 485, 510, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 499, 455, 214, 422, 273, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 438, 461, 462, 463, 465, 363,
	249, 399, 0, 364, 346, 467, 468, 291, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 440, 237, 347, 344, 473, 265, 256, 252,
	236, 292, 354, 394, 460, 388, 0, 341, 0, 0,
	450, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 451, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 470, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 368, 240, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 378, 421,
	427, 0, 0, 0, 238, 0, 425, 392, 489, 220,
	267, 418, 398, 423, 405, 270, 0, 0, 424, 342,
	475, 412, 486, 507, 508, 246, 372, 497, 464, 503,
	521, 213, 243, 386, 457, 492, 447, 365, 471, 472,
	304, 446, 277, 195, 340, 513, 211, 433, 229, 218,
	477, 495, 272, 416, 203, 459, 484, 226, 437, 0,
	0, 523, 205, 482, 456, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 479, 480, 239, 524, 215,
	502, 207, 0, 501, 374, 474, 483, 362, 352, 206,
	481, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 198, 493, 0, 199, 0,
	452, 494, 525, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 0,
	469, 487, 498, 505, 511, 512, 514, 515, 516, 517,
	518, 520, 519, 373, 289, 448, 306, 343, 0, 0,
	391, 426, 227, 491, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 544, 353, 439, 488, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 235, 201, 0, 191, 208,
	339, 0, 414, 271, 522, 500, 496, 0, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 781, 0,
	0, 0, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 428, 429, 430, 431, 432, 435,
	436, 441, 442, 443, 444, 445, 453, 454, 458, 476,
	478, 490, 504, 509, 434, 281, 485, 510, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 499, 455, 214,
	422, 273, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 0, 364, 346, 467,
	468, 291, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 440, 237, 347, 344,
	473, 265, 256, 252, 236, 292, 354, 394, 460, 388,
	0, 341, 0, 0, 450, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 451, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 470, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 601, 0, 279,
	0, 368, 240, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 378, 421, 427, 0, 0, 0, 238, 0,
	425, 392, 489, 220, 267, 418, 398, 423, 405, 270,
	0, 0, 424, 342, 475, 412, 486, 507, 508, 246,
	372, 497, 464, 503, 521, 213, 243, 386, 457, 492,
	447, 365, 471, 472, 304, 446, 277, 195, 340, 513,
	211, 433, 229, 218, 477, 495, 272, 416, 203, 459,
	484, 226, 437, 0, 0, 523, 205, 482, 456, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 479,
	480, 239, 524, 215, 502, 207, 0, 501, 374, 474,
	483, 362, 352, 206, 481, 360, 351, 307, 326, 327,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 198,
	493, 0, 199, 0, 452, 494, 525, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 0, 469, 487, 498, 505, 511, 512,
	514, 515, 516, 517, 518, 520, 519, 373, 289, 448,
	306, 343, 0, 0, 391, 426, 227, 491, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 544, 353,
	439, 488, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 235,
	201, 0, 191, 208, 339, 0, 414, 271, 522, 500,
	496, 0, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 428, 429,
	430, 431, 432, 435, 436, 441, 442, 443, 444, 445,
	453, 454, 458, 476, 478, 490, 504, 509, 434, 600,
	485, 510, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 499, 455, 214, 422, 273, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 364, 346, 467, 468, 291, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	440, 237, 347, 344, 473, 265, 256, 252, 236, 292,
	354, 394, 460, 388, 0, 341, 0, 0, 450, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	451, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 470, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 368, 240, 0, 0, 547,
	0, 506, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 305, 192, 212, 0, 0, 378, 421, 427, 0,
	0, 0, 238, 0, 425, 392, 489, 220, 267, 418,
	398, 423, 405, 270, 0, 0, 424, 342, 475, 412,
	486, 507, 508, 246, 372, 497, 464, 503, 521, 213,
	243, 386, 457, 492, 447, 365, 471, 472, 304, 446,
	277, 195, 340, 513, 211, 433, 229, 218, 477, 495,
	272, 416, 203, 459, 484, 226, 437, 0, 0, 523,
	205, 482, 456, 361, 301, 302, 204, 0, 417, 251,
	275, 241, 381, 479, 480, 239, 524, 215, 502, 207,
	0, 501, 374, 474, 483, 362, 352, 206, 481, 360,
	351, 307, 326, 327, 263, 286, 410, 345, 411, 287,
	370, 369, 371, 198, 493, 0, 199, 0, 452, 494,
	525, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 385, 409, 407, 413, 0, 469, 487,
	498, 505, 511, 512, 514, 515, 516, 517, 518, 520,
	519, 373, 289, 448, 306, 343, 0, 0, 391, 426,
	227, 491, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 544, 353, 439, 488, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 235, 201, 0, 191, 208, 339, 0,
	414, 271, 522, 500, 496, 0, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 428, 429, 430, 431, 432, 435, 436, 441,
	442, 443, 444, 445, 453, 454, 458, 476, 478, 490,
	504, 509, 434, 281, 485, 510, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 499, 455, 214, 422, 273,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 0, 364, 346, 467, 468, 291,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 440, 237, 347, 344, 473, 265,
	256, 252, 236, 292, 354, 394, 460, 388, 0, 341,
	0, 0, 450, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 451, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 470, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 368,
	240, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 305, 192, 212, 0, 0,
	378, 421, 427, 0, 0, 0, 238, 0, 425, 392,
	489, 220, 267, 418, 398, 423, 405, 270, 0, 0,
	424, 342, 475, 412, 486, 507, 508, 246, 372, 497,
	464, 503, 521, 213, 243, 386, 457, 492, 447, 365,
	471, 472, 304, 446, 277, 195, 340, 513, 211, 433,
	229, 218, 477, 495, 272, 416, 203, 459, 484, 226,
	437, 0, 0, 523, 205, 482, 456, 361, 301, 302,
	204, 0, 417, 251, 275, 241, 381, 479, 480, 239,
	524, 215, 502, 207, 0, 501, 374, 474, 483, 362,
	352, 206, 481, 360, 351, 307, 326, 327, 263, 286,
	410, 345, 411, 287, 370, 369, 371, 198, 493, 0,
	199, 0, 452, 494, 525, 221, 222, 224, 0, 262,
	266, 274, 276, 282, 283, 290, 338, 385, 409, 407,
	413, 0, 469, 487, 498, 505, 511, 512, 514, 515,
	516, 517, 518, 520, 519, 373, 289, 448, 306, 343,
	0, 0, 391, 426, 227, 491, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 544, 353, 439, 488,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 235, 201, 0,
	191, 208, 339, 0, 414, 271, 522, 500, 496, 0,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 2995, 376, 377,
	380, 383, 384, 387, 389, 390, 393, 397, 401, 402,
	403, 404, 406, 408, 415, 420, 428, 429, 430, 431,
	432, 435, 436, 441, 442, 443, 444, 445, 453, 454,
	458, 476, 478, 490, 504, 509, 434, 281, 485, 510,
	0, 348, 0, 0, 350, 264, 284, 295, 0, 499,
	455, 214, 422, 273, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	438, 461, 462, 463, 465, 363, 249, 399, 0, 364,
	346, 467, 468, 291, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 440, 237,
	347, 344, 473, 265, 256, 252, 236, 292, 354, 394,
	460, 388, 0, 341, 0, 0, 450, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 451, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 470,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 368, 240, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 378, 421, 427, 0, 0, 0,
	238, 0, 425, 392, 489, 220, 267, 418, 398, 423,
	405, 270, 0, 0, 424, 342, 475, 412, 486, 507,
	508, 246, 372, 497, 464, 503, 521, 213, 243, 386,
	457, 492, 447, 365, 471, 472, 304, 446, 277, 195,
	340, 513, 211, 433, 229, 218, 477, 495, 272, 416,
	203, 459, 484, 226, 437, 0, 0, 523, 205, 482,
	456, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 479, 480, 239, 524, 215, 502, 207, 0, 501,
	374, 474, 483, 362, 352, 206, 481, 360, 351, 307,
	326, 327, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 198, 493, 0, 199, 0, 452, 494, 525, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 0, 469, 487, 498, 505,
	511, 512, 514, 515, 516, 517, 518, 520, 519, 373,
	289, 448, 306, 343, 0, 0, 391, 426, 227, 491,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	544, 353, 439, 488, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 235, 201, 0, 191, 208, 339, 0, 414, 271,
	522, 500, 496, 0, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	428, 429, 430, 431, 432, 435, 436, 441, 442, 443,
	444, 445, 453, 454, 458, 476, 478, 490, 504, 509,
	434, 281, 485, 510, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 499, 455, 214, 422, 273, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 438, 461, 462, 463, 465, 363,
	249, 399, 0, 364, 346, 467, 468, 291, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 440, 237, 347, 344, 473, 265, 256, 252,
	236, 292, 354, 394, 460, 388, 0, 341, 0, 0,
	450, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 451, 269, 0, 0, 0, 0, 188, 2617,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 470, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 368, 240, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 378, 421,
	427, 0, 0, 0, 238, 0, 425, 392, 489, 220,
	267, 418, 398, 423, 405, 270, 0, 0, 424, 342,
	475, 412, 486, 507, 508, 246, 372, 497, 464, 503,
	521, 213, 243, 386, 457, 492, 447, 365, 471, 472,
	304, 446, 277, 195, 340, 513, 211, 433, 229, 218,
	477, 495, 272, 416, 203, 459, 484, 226, 437, 0,
	0, 523, 205, 482, 456, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 479, 480, 239, 524, 215,
	502, 207, 0, 501, 374, 474, 483, 362, 352, 206,
	481, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 198, 493, 0, 199, 0,
	452, 494, 525, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 0,
	469, 487, 498, 505, 511, 512, 514, 515, 516, 517,
	518, 520, 519, 373, 289, 448, 306, 343, 0, 0,
	391, 426, 227, 491, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 544, 353, 439, 488, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 235, 201, 0, 191, 208,
	339, 0, 414, 271, 522, 500, 496, 0, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 428, 429, 430, 431, 432, 435,
	436, 441, 442, 443, 444, 445, 453, 454, 458, 476,
	478, 490, 504, 509, 434, 281, 485, 510, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 499, 455, 214,
	422, 273, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 0, 364, 346, 467,
	468, 291, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 440, 237, 347, 344,
	473, 265, 256, 252, 236, 292, 354, 394, 460, 388,
	0, 341, 0, 0, 450, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 451, 269, 0, 0,
	0, 0, 188, 2129, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 470, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 368, 240, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 378, 421, 427, 0, 0, 0, 238, 0,
	425, 392, 489, 220, 267, 418, 398, 423, 405, 270,
	0, 0, 424, 342, 475, 412, 486, 507, 508, 246,
	372, 497, 464, 503, 521, 213, 243, 386, 457, 492,
	447, 365, 471, 472, 304, 446, 277, 195, 340, 513,
	211, 433, 229, 218, 477, 495, 272, 416, 203, 459,
	484, 226, 437, 0, 0, 523, 205, 482, 456, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 479,
	480, 239, 524, 215, 502, 207, 0, 501, 374, 474,
	483, 362, 352, 206, 481, 360, 351, 307, 326, 327,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 198,
	493, 0, 199, 0, 452, 494, 525, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 0, 469, 487, 498, 505, 511, 512,
	514, 515, 516, 517, 518, 520, 519, 373, 289, 448,
	306, 343, 0, 0, 391, 426, 227, 491, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 544, 353,
	439, 488, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 235,
	201, 0, 191, 208, 339, 0, 414, 271, 522, 500,
	496, 0, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 428, 429,
	430, 431, 432, 435, 436, 441, 442, 443, 444, 445,
	453, 454, 458, 476, 478, 490, 504, 509, 434, 281,
	485, 510, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 499, 455, 214, 422, 273, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 0, 346, 467, 468, 291,
}

var yyPact = [...]int{
	3934, -1000, -411, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2030, 2227, -1000, -1000,
	-1000, -1000, 2191, -1000, 802, 1773, -1000, 2019, 3636, -1000,
	41925, 541, -1000, 40717, 537, 313, 41925, -1000, 183, -1000,
	166, 41925, 178, 40113, -1000, -1000, -314, 17755, 1973, 38,
	37, 41925, -1000, -1000, -1000, -1000, 2143, 1762, -1000, 335,
	-1000, -1000, -1000, -1000, -1000, -1000, 39509, -1000, -1000, -1000,
	2022, 2027, 2197, 714, 1965, -1000, 2098, 1762, -1000, 17755,
	2133, 2076, 17151, -1000, 17151, 402, -1000, -1000, 12913, -1000,
	-1000, 23805, 41925, 29845, 325, -1000, 2019, -1000, -1000, -1000,
	100, -1000, 329, 1601, -1000, 1594, -1000, 500, 612, 355,
	477, 476, 354, 352, 351, 350, 349, 345, 344, 340,
	364, -1000, 757, 757, -180, -185, 3337, 517, 401, 401,
	439, 1991, 1987, -1000, 646, -1000, 757, 757, 757, 303,
	757, 757, 757, 757, 315, 312, 757, 757, 757, 757,
	757, 757, 757, 757, 757, 757, 757, 757, 757, 757,
	757, 757, 757, 300, 2019, 290, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 41925, 260, 41925, -1000, 647,
	41925, 867, 867, 108, 867, 867, 867, 867, 163, 624,
	33, -1000, 152, 283, 146, 291, 870, 204, -1000, -1000,
	277, 870, 1254, -1000, 733, 137, -1000, 867, 867, -1000,
	10477, 148, 10477, 10477, -1000, 2006, -1000, -1000, -1000, -1000,
	1189, -1000, 437, -1000, -1000, -1000, -1000, 41925, 38905, 399,
	775, -1000, -1000, -1000, 74, -1000, -1000, 1371, 1049, 17755,
	1406, -1000, 836, 695, -1000, -1000, -1000, -1000, -1000, 614,
	18359, 18359, 18359, 18359, -1000, -1000, 1511, 1511, 1511, 1511,
	18359, 1511, 18359, 1511, 1511, 1511, 1511, 17755, 1511, 1511,
	1511, -1000, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
	1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
	1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
	1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
	1511, 1511, 1511, 1511, 645, 1511, 1511, 1511, 1511, 1511,
	-1000, -1000, -1000, -1000, 1511, 1511, 1511, 1511, 1511, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21384, -1000,
	15339, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 41925, -1000, 1511, 223, 41925, 41925, 359, 2098, 1762,
	-1000, 2143, 2188, 335, -1000, 2158, 1556, 1353, 1232, 1762,
	1531, 41925, -1000, 1621, -1000, -1000, -1000, 1901, 1165, 1253,
	-1000, -1000, -1000, -1000, 1335, 17755, -1000, -1000, 2174, -1000,
	20780, 641, 879, 2172, 38301, -1000, 402, 402, 1579, 12304,
	2, -1000, -1000, -1000, 774, 27429, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2006, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1726, 41925,
	-1000, -1000, 4117, 1245, -1000, 1767, -1000, 1720, -1000, 1717,
	17755, 1707, 531, 1245, 486, 485, 461, -1000, -65, -1000,
	-1000, -1000, -1000, -1000, -1000, 757, 757, 757, -1000, 353,
	2130, 3636, 5820, -1000, -1000, -1000, 37697, 1766, 1245, -1000,
	1763, -1000, 821, 504, 596, 596, 1245, -1000, -1000, 41925,
	1245, 819, 818, 1245, 1245, 41925, 41925, -1000, 37093, -1000,
	36489, 35885, 1100, 41925, 35281, 34677, 34073, 33469, 32865, -1000,
	1923, -1000, 1849, -1000, -1000, -1000, 41925, 1245, 1245, 41925,
	41925, 324, -1000, -1000, 41925, 1245, -1000, -1000, 1097, 1096,
	1089, 757, 757, 1086, 1249, 1248, 1247, 757, 757, 1077,
	1244, 28637, 1235, 274, 1071, 1058, 1056, 1124, 1224, 189,
	1220, 1083, 957, 1055, 41925, 1757, 41925, -1000, 261, 747,
	552, 773, 2019, 1967, 1559, 434, 526, 1245, 421, 421,
	41925, -1000, 11086, -1000, -1000, 1218, 17755, -1000, 872, 870,
	870, -1000, -1000, -1000, -1000, -1000, -1000, 867, 41925, 872,
	-1000, -1000, -1000, 870, 867, 41925, 867, 867, 867, 867,
	870, 870, 870, 867, 41925, 41925, 41925, 41925, 41925, 41925,
	41925, 41925, 41925, 10477, 733, 867, -318, -1000, 1210, -1000,
	1883, -1000, -1000, -1000, -1000, -1000, -1000, 10477, 10477, -1000,
	-1000, -1000, -1000, 174, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -87, 1543, 32261, -1000, -319, -320, -323,
	-324, -1000, -1000, -1000, -329, -330, -1000, -1000, -1000, 17755,
	17755, 17755, 17755, -213, -1000, 991, 18359, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 968, 761, 18359, 18359, 18359, 18359,
	18359, 18359, 18359, 18359, 18359, 18359, 18359, 18359, 18359, 18359,
	18359, 25617, 4538, 4538, 695, 695, 695, 695, -1000, 17151,
	17755, 17755, 695, -1000, 1245, 31657, 17151, 17151, 17755, 2010,
	780, 1049, 41925, -1000, 1232, -1000, -1000, -1000, 1080, -1000,
	2010, 852, 41925, 41925, 80, 17755, 17755, 17755, 17755, 17755,
	17755, 14126, 17755, 17755, 17755, 17755, 17755, 17755, 17755, 17755,
	17755, 17755, 17755, 17755, 17755, 17755, 17755, 17755, 17755, 17755,
	17755, 17755, 17755, 17755, 17755, 17755, 17755, 17755, 13522, 11086,
	17151, 17151, 17151, 17151, 17151, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 635, 1875, 1359,
	1567, -1000, 1540, -1000, -158, 23201, 17755, 1202, 2169, 1802,
	41925, -1000, -1000, -1000, 2098, -1000, 2098, 1875, 2016, 1911,
	17151, -1000, -1000, 2016, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1326, -1000, 41925, 1531, 2069, 41925, 1891, 1201,
	422, -1000, 17755, 17755, 1519, -1000, 1169, 41925, -1000, -213,
	-1000, 31053, -1000, -1000, 9868, -1000, 41925, 338, 41925, -1000,
	22597, 30449, 11695, 2, -1000, 11695, 1453, -1000, 8, -4,
	14730, 694, -1000, -1000, -1000, 3337, 19567, 1338, 694, 82,
	-1000, -1000, -1000, 1717, -1000, 1717, 1717, 1717, 1717, 422,
	422, 422, 422, -1000, -1000, -1000, -1000, -1000, 1751, 1750,
	-1000, 1717, 1717, 1717, 1717, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1746, 1746, 1746, 1730, 1730, 392, -1000, 17755,
	282, 29845, 2038, 1050, 1503, 261, 424, 1791, 1245, 1245,
	1245, 424, -1000, 1476, 1456, 1334, -1000, -402, 1517, -1000,
	-1000, 2126, -1000, -1000, 692, 841, 839, 703, 41925, 236,
	334, -1000, 385, -1000, 29845, 1245, 815, 596, 1245, -1000,
	1245, -1000, -1000, -1000, -1000, -1000, 1245, -1000, -1000, 1514,
	-1000, 1565, 895, 837, 894, 833, 1514, -1000, -1000, -116,
	1514, -1000, 1514, -1000, 1514, -1000, 1514, -1000, 1514, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 763, 143,
	-234, 41925, 236, 25617, -1000, 431, -1000, -1000, -1000, 25617,
	25617, -1000, -1000, -1000, -1000, 1184, 1183, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -388, 41925, -1000, 258,
	766, 316, 347, 323, 41925, 240, 2084, 2079, 2074, 286,
	310, 41925, 41925, 421, 1858, 41925, 2043, 41925, -1000, -1000,
	-1000, -1000, -1000, 1049, 41925, -1000, -1000, 867, 867, -1000,
	-1000, 41925, 867, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 867, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 41925, -1000, -1000,
	-1000, -1000, 41925, -1000, -1000, -1000, -1000, -1000, 150, 1,
	318, -1000, -1000, -1000, -1000, -1000, 2094, -1000, 1049, 805,
	795, -1000, 1511, -1000, -1000, 1031, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 968, 18359, 18359, 18359, 1598, 460, 1510,
	898, 913, 878, 878, 846, 846, 700, 700, 700, 700,
	700, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1179,
	-1000, 1638, -1000, 1706, 1267, 1232, -1000, 1638, 1638, 1329,
	17151, -1000, -1000, 784, -1000, 17755, 1232, -1000, -1000, 1232,
	1232, 17755, 1232, 17755, -1000, 1505, 1502, 2166, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 958,
	1503, 1503, 1503, 1503, 1503, 17755, 1241, -1000, -1000, -1000,
	1897, 1885, 1232, 1371, 1232, 1494, -1000, 1842, 1503, 1788,
	1783, 1777, 1370, 1769, 1764, 1752, 1503, 1503, 1503, 1227,
	1748, 1735, 1724, 1702, 1695, 1689, 1661, 1655, 1647, 1503,
	1232, 17151, 17151, 1475, 1511, 630, -1000, 1638, 1232, 1232,
	1638, 1638, 11086, 1232, -1000, 41925, -1000, -310, -1000, -28,
	723, 1511, -1000, 28637, 1232, -1000, 6714, -1000, 43133, -1000,
	-1000, -1000, -1000, -1000, 26825, 1434, 2016, -1000, -1000, 1511,
	1718, -1000, -1000, 422, 66, 26221, 690, 690, 165, 1049,
	1049, 17755, -1000, -1000, -1000, -1000, -1000, -1000, 623, 2144,
	341, 1511, -1000, 1491, 2005, -1000, -1000, -1000, 2065, 20176,
	-1000, 1511, 1511, 41925, 1697, 1626, -1000, 622, -1000, 1453,
	2, -25, -1000, -1000, -1000, -1000, 1049, -1000, 1322, 339,
	3064, -1000, 413, -1000, -1000, -1000, -1000, 1979, 59, -1000,
	-1000, -1000, 203, 422, -1000, -1000, -1000, -1000, -1000, -1000,
	1177, 1177, -1000, -1000, -1000, -1000, -1000, 1038, -1000, -1000,
	-1000, 1037, -1000, -1000, 1639, 1839, 282, -1000, -1000, 757,
	1174, -1000, -1000, 1981, 757, 757, 41925, -1000, -1000, 1319,
	2038, 258, 41925, 789, 1852, -1000, 1791, 1791, 1791, 41925,
	-1000, -1000, -1000, -1000, -1000, -1000, -390, 64, 348, -1000,
	-1000, -1000, 5614, 41925, 1714, -1000, 232, -1000, 1296, -1000,
	41925, -1000, 1692, 1743, 1245, 1245, -1000, -1000, -1000, 41925,
	1511, -1000, -1000, -1000, -1000, 502, 2012, 239, -1000, -1000,
	-230, -1000, -1000, 236, 232, 694, 1245, -1000, -1000, -1000,
	-1000, -1000, -391, 1642, 445, 242, 322, 41925, 41925, 41925,
	41925, 41925, 566, -1000, -1000, -1000, -1000, 193, -1000, -1000,
	193, -1000, -1000, -1000, -1000, 298, 428, -1000, 41925, 41925,
	610, -1000, -1000, -1000, 870, -1000, -1000, 870, -1000, -1000,
	-1000, -1000, -1000, 1999, 41925, -12, -351, -1000, -347, 17755,
	-1000, -1000, -1000, -1000, 1271, 459, 1510, 18359, 18359, 17151,
	-105, 576, 576, 25617, -1000, -1000, -1000, 17755, 17755, 1465,
	762, -1000, 17755, 950, -1000, -1000, -1000, 1503, -1000, 1503,
	17755, 17755, 17755, 1232, 273, -1000, -1000, -1000, -1000, -1000,
	2152, -1000, 17755, 17755, 17755, -1000, -1000, 17755, 17755, -1000,
	17755, 17755, 18963, 1232, 18963, 17755, 17755, 18963, -1000, -1000,
	-1000, -1000, 18963, 17755, 17755, 17755, 17755, 17755, 17755, 17755,
	17755, 17755, -1000, -1000, 1638, 1638, 17151, 11086, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 723, -1000,
	596, 596, 596, 41925, -1000, -1000, -1000, -1000, -1000, -1000,
	1432, 2087, -1000, 1929, 1918, 2148, 2144, -1000, 22597, 2016,
	-1000, -1000, 41925, -304, -1000, 1962, 1926, 690, 690, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 9259, 2098, 17755, 1838,
	41925, 1511, -1000, 21993, 41925, 41925, 22597, 22597, 22597, 22597,
	22597, -1000, 1873, 1872, -1000, 1886, 1869, 1898, 41925, -1000,
	1634, 1232, 2188, 20176, 335, 17755, 24409, 1301, 22597, -1000,
	-1000, 22597, 41925, 8650, -1000, -1000, -17, -10, -1000, -1000,
	-1000, -1000, 3337, -1000, -1000, 245, 2060, 1977, -1000, -1000,
	-1000, -1000, -1000, 1608, -1000, 1604, 1425, 1599, 143, -1000,
	1666, 1996, 757, 757, -1000, 1030, -1000, 1245, 1163, 1157,
	-1000, -1000, -1000, 443, -1000, 2041, 41925, 1836, 1830, 1828,
	-1000, -399, 1029, 1738, 1652, 17755, 1734, 2125, 1383, 41925,
	-1000, -1000, 41925, -1000, 284, -1000, 282, 41925, -1000, -1000,
	-1000, 334, 41925, -1000, 6672, -1000, -1000, -1000, 232, -1000,
	-1000, -1000, -1000, -1000, -1000, 41925, 270, -1000, 1733, 1133,
	-1000, -1000, 1778, -1000, -1000, -1000, -1000, 176, 306, 188,
	1151, 188, -1000, 41925, 597, 1839, 41925, -1000, -1000, -1000,
	867, 867, -1000, -1000, 1994, -1000, 1245, 1503, 18359, 18359,
	-1000, 695, -1000, 1511, 1232, 1717, 1717, -1000, 1717, 1730,
	-1000, 1717, 141, 1717, 135, 1717, -1000, -1000, 1232, 1232,
	1130, 1101, -74, -1000, 1049, 17755, -1000, -1000, 1633, 1615,
	1503, -1000, 1712, 1704, 17755, 1503, 1503, 1503, -1000, 1049,
	1370, 1607, 1450, -1000, -1000, -1000, -1000, 1409, 1503, 1580,
	-302, 1232, 1573, 1573, 1573, 1573, 1573, 1567, 1567, 1567,
	1567, -1000, -1000, 1232, -1000, -1000, 2093, 2093, 2093, 1533,
	42529, 41925, -1000, -1000, -1000, -1000, 2144, 2142, 1401, -1000,
	-1000, 66, 400, -1000, 1950, 1926, -1000, 2119, 1957, 2118,
	-1000, -1000, -1000, -1000, -1000, 1049, -1000, 2007, 1315, -1000,
	764, 1342, -1000, -1000, 16547, 1537, 1914, 564, 1533, 1535,
	2005, 1801, 1823, 2302, -1000, -1000, -1000, -1000, 1871, -1000,
	1859, -1000, -1000, 1621, -1000, -1000, 1359, 1232, 1390, 338,
	22597, 1385, 1385, -1000, 560, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 859, 6542, 2195, -1000, 1150, -1000, 1306, 198,
	1027, -1000, -1000, 757, 757, -1000, 814, 813, -1000, 41925,
	1663, -1000, 422, 1149, 422, 1021, -1000, 1017, -1000, -1000,
	-1000, -1000, 1827, 1915, -1000, -1000, -1000, -1000, 41925, -1000,
	-1000, 41925, 41925, 41925, 1658, 2114, -1000, 17755, 1654, 760,
	1576, 41925, 41925, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 447, 757, -370, 302, 295, 757,
	757, 757, -400, -1000, -1000, 1528, 1526, -1000, -139, -1000,
	17755, -1000, -1000, -1000, 1074, 1074, -1000, 1621, -1000, -1000,
	-1000, 1282, -1000, -1000, -118, 41925, 41925, 41925, 41925, -1000,
	1009, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 695, 18359, -1000, -1000, 422, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 17755, -1000, 17755,
	-1000, 2098, 1145, 1049, 17755, 17755, -1000, 1016, 1004, 1503,
	-1000, -1000, -1000, 1232, 18963, -1000, 18963, -1000, 17755, 234,
	576, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1511, 1998, 1511, 1511, 24409, -1000, -1000, 2142,
	2137, 2111, 1930, 1946, 1946, 1950, -1000, 2108, 2107, -1000,
	1137, 2104, 1136, 811, -1000, 41925, 17755, 1511, -1000, 289,
	41925, 1511, 41925, -1000, 2135, -1000, -1000, 17755, 1637, -1000,
	17755, -1000, -1000, -1000, -1000, -1000, -1000, 4538, 2144, 1385,
	-1000, -1000, 706, -1000, 17755, -1000, -1000, -1000, 4213, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1135, 1132, -1000,
	-1000, 1623, 17755, -1000, -1000, -1000, 1280, 1276, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1621, -1000, -1000, -1000,
	-1000, 334, -395, 1544, 41925, 995, -1000, 1485, 1383, 321,
	1511, 1131, 757, 757, 757, 989, 976, 28637, 1483, -1000,
	41925, 365, -1000, 334, -1000, -189, -192, 1503, -1000, -1000,
	2051, -1000, -1000, 11086, -1000, -1000, 1614, 1784, -1000, -1000,
	-1000, 304, -1000, 1503, 1503, 1232, -1000, 1503, 1503, 1273,
	1269, -1000, -1000, 1450, -1000, 982, -1000, 234, 1232, 1820,
	-1000, -1000, 4538, -1000, 25013, -1000, 2103, 2102, 29241, 29241,
	723, 2137, -1000, 17755, 17755, 1942, 903, -1000, -1000, -1000,
	-1000, 1128, 1119, -1000, 1117, -1000, 2189, -1000, 1049, -1000,
	1511, -1000, 557, 1342, -1000, 2098, 1049, 41925, 1049, 54,
	2135, -1000, 1503, -1000, 1511, 1511, 1511, 1511, 1511, 1511,
	1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
	1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511,
	1511, 1511, 1511, 1511, 1511, 1511, 1511, 1511, -1000, -1000,
	41925, 1186, -1000, -1000, 2028, 1447, 63, -1000, 1423, -1000,
	-1000, 503, -1000, 17755, -1000, 28637, 1114, 1110, -1000, -1000,
	-1000, -1000, -400, -1000, -1000, -1000, -1000, -1000, -1000, 335,
	1379, -1000, 748, 41925, 41925, 1232, 294, -125, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 17755, -1000, 1232,
	1818, -1000, -247, -1000, 1416, -1000, -1000, -1000, -1000, -1000,
	1416, 1416, -1000, -1000, 1049, 1371, -1000, 901, -1000, -1000,
	-1000, -1000, -1000, 41925, 1342, 41925, -1000, 1414, 1232, 1511,
	2098, -1000, 1356, -1000, 335, -1000, 1407, 1652, -1000, -1000,
	-1000, 15943, -1000, -1000, -1000, -1000, -1000, 227, -117, 11086,
	8041, 1272, -1000, -1000, 1888, -109, -140, 1370, -1000, -340,
	-1000, -1000, 28033, -1000, -1000, -1000, -1000, -1000, 1330, -1000,
	-1000, 24409, 41321, -1000, -103, 314, -117, 17755, 1360, 1232,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -23, -1000,
	-1000, -1000, -1000, -1000, 1778, -1000, 1856, -1000, 1232, -1000,
	-1000, -1000, 1264, -1000, 2868, -260, 1809, -1000, -108, -1000,
	-1000, -1000, 844, 1105, -1000, -1000, -1000, -1000, -1000, -1000,
	1113, 41925, -1000, 387, -1000, -1000, -118, -120, -1000, -1000,
	41321, -255, 694, 4538, -1000, 1805, 1789, 2165, -1000, -1000,
	-1000, -1000, -1000, -1000, -407, 1262, 266, -1000, -131, -1000,
	-1000, 2036, 54, -1000, 2186, -1000, 2178, 664, 664, -1000,
	911, -407, -1000, -150, -270, -1000, -1000, -1000, -1000, -1000,
	384, 977, -1000, -1000, -1000, -1000, 4538, -1000, -1000, -1000,
	215, 215, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2531, 2528, 30, 5, 37, 36, 2527, 26, 111,
	188, 25, 217, 105, 2526, 2525, 2523, 2521, 2520, 2519,
	2514, 225, 224, 219, 2513, 2512, 2511, 2510, 2509, 2505,
	2500, 2499, 2498, 2497, 221, 172, 184, 2496, 2495, 2491,
	127, 178, 97, 96, 181, 2490, 2487, 90, 2486, 2483,
	2482, 209, 208, 200, 865, 2481, 203, 130, 46, 2480,
	2479, 2478, 2477, 2474, 2473, 2472, 2471, 2469, 2468, 2467,
	2466, 2465, 2464, 2461, 2460, 2458, 316, 2457, 2456, 17,
	2455, 85, 2454, 2453, 2451, 2450, 142, 2449, 2448, 2447,
	38, 2446, 2445, 2444, 2443, 2442, 2440, 2439, 156, 2438,
	2437, 2436, 169, 192, 2435, 2434, 248, 126, 123, 2433,
	2432, 119, 183, 2431, 139, 2430, 2429, 2428, 161, 2426,
	5250, 2424, 76, 70, 2422, 71, 89, 61, 74, 10,
	23, 2421, 2415, 75, 103, 2414, 118, 81, 2413, 115,
	110, 2411, 2410, 12, 7, 2409, 1, 4, 2, 77,
	2407, 2406, 133, 2405, 2404, 2403, 108, 2402, 2401, 122,
	2400, 107, 145, 120, 84, 2397, 44, 65, 2396, 2395,
	2394, 2393, 2392, 53, 2391, 2390, 2389, 154, 73, 173,
	40, 68, 52, 148, 2384, 63, 93, 2377, 153, 152,
	2376, 69, 32, 42, 2367, 39, 147, 134, 58, 100,
	149, 2365, 2363, 66, 83, 2360, 2358, 2357, 2356, 2353,
	2350, 80, 2348, 60, 2347, 193, 2344, 14, 2343, 50,
	41, 2342, 78, 125, 79, 31, 2340, 223, 2339, 49,
	171, 143, 167, 2338, 2336, 2334, 2333, 182, 274, 2332,
	2331, 86, 174, 157, 160, 102, 2330, 268, 2329, 2328,
	99, 1536, 2252, 28, 170, 2327, 2325, 3741, 155, 43,
	18, 2324, 199, 2323, 2322, 2320, 195, 168, 132, 991,
	82, 2315, 2310, 15, 2309, 2308, 2306, 2305, 2304, 2299,
	101, 35, 34, 33, 196, 59, 9, 117, 175, 88,
	2292, 2291, 2289, 136, 95, 2288, 166, 164, 140, 190,
	2287, 179, 158, 150, 2284, 131, 29, 2280, 2277, 2274,
	2271, 98, 2268, 2267, 2264, 2262, 163, 159, 135, 92,
	2261, 94, 129, 162, 165, 48, 2260, 47, 2257, 2255,
	21, 180, 24, 2253, 13, 67, 55, 22, 121, 146,
	2251, 0, 2248, 16, 177, 273, 189, 2246, 2238, 6,
	8, 11, 2236, 2235, 2232, 2231, 151, 2227, 2226, 2219,
	2218, 20, 45, 19, 3, 128, 91, 2215, 2213, 2212,
	4822, 2808, 144, 2200, 201,
}

//line sql.y:7142
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 368, 369, 369, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 341, 341,
	341, 344, 344, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	372, 372, 154, 154, 152, 152, 153, 153, 222, 222,
	24, 25, 25, 232, 232, 231, 231, 231, 233, 233,
	233, 233, 269, 269, 26, 26, 26, 26, 26, 104,
	104, 343, 343, 342, 334, 334, 333, 333, 332, 340,
	340, 339, 339, 338, 38, 39, 48, 48, 48, 48,
	49, 50, 345, 345, 307, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 309, 309, 295, 295, 308, 308, 308, 308, 308,
	308, 308, 294, 294, 115, 115, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 360, 360, 360, 359, 359, 202, 202,
	202, 202, 202, 202, 202, 202, 124, 124, 133, 133,
	133, 133, 133, 122, 122, 123, 121, 121, 121, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 132, 132, 128, 128, 128, 129, 129,
	129, 130, 130, 361, 361, 361, 361, 273, 273, 273,
	273, 276, 276, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 275, 275, 275, 275, 275, 277, 277, 277,
	277, 277, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 279, 279,
	279, 279, 279, 279, 279, 279, 293, 293, 280, 280,
	288, 288, 289, 289, 289, 290, 290, 290, 291, 291,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 287,
	287, 286, 286, 286, 296, 321, 321, 320, 320, 318,
	318, 318, 318, 318, 318, 318, 318, 305, 305, 315,
	315, 315, 315, 315, 304, 304, 300, 300, 300, 301,
	301, 302, 302, 299, 299, 303, 303, 317, 317, 316,
	316, 297, 297, 298, 298, 323, 362, 362, 362, 362,
	362, 363, 363, 324, 352, 354, 354, 354, 353, 353,
	350, 351, 349, 349, 349, 349, 349, 81, 81, 81,
	245, 245, 246, 246, 313, 313, 312, 312, 312, 314,
	314, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 240, 240, 240, 348, 348, 348, 348, 348,
	348, 347, 347, 347, 310, 310, 310, 346, 346, 57,
	57, 186, 186, 365, 365, 366, 366, 366, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 86, 86, 87, 87, 87, 87, 89,
	89, 89, 326, 326, 58, 58, 3, 3, 142, 144,
	145, 145, 143, 143, 143, 143, 143, 143, 60, 60,
	59, 59, 147, 146, 148, 148, 148, 1, 1, 2,
	2, 4, 4, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 292, 292, 292, 325, 325,
	327, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 92, 91, 91, 90, 93, 93, 93, 93, 93,
	93, 93, 93, 329, 329, 329, 61, 61, 330, 281,
	282, 283, 5, 6, 306, 328, 100, 100, 28, 37,
	37, 29, 29, 29, 29, 30, 30, 62, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 239,
	239, 248, 248, 238, 238, 262, 262, 262, 241, 241,
	241, 242, 242, 358, 358, 358, 235, 235, 64, 64,
	64, 66, 66, 67, 68, 68, 264, 264, 265, 265,
	69, 70, 82, 82, 82, 82, 82, 82, 85, 85,
	85, 15, 15, 15, 15, 78, 78, 78, 14, 14,
	65, 65, 72, 355, 355, 356, 357, 357, 357, 357,
	73, 75, 31, 31, 31, 31, 31, 31, 110, 110,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 105, 105, 105, 99, 99, 373, 76, 77,
	77, 103, 103, 103, 96, 96, 96, 102, 102, 102,
	16, 16, 17, 221, 221, 18, 18, 107, 107, 109,
	109, 109, 109, 109, 111, 111, 111, 111, 111, 111,
	111, 367, 106, 106, 108, 108, 108, 108, 255, 255,
	255, 254, 254, 136, 136, 138, 137, 137, 139, 139,
	140, 140, 140, 140, 184, 184, 162, 162, 219, 219,
	217, 217, 218, 218, 220, 220, 220, 220, 223, 223,
	141, 141, 141, 141, 149, 149, 150, 150, 151, 151,
	263, 263, 260, 260, 260, 259, 259, 155, 155, 155,
	157, 156, 156, 156, 156, 158, 158, 160, 160, 159,
	159, 161, 166, 166, 165, 165, 163, 163, 163, 163,
	164, 164, 164, 164, 167, 167, 120, 120, 120, 120,
	120, 120, 120, 131, 131, 131, 131, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 83, 83, 83, 236, 236, 168,
	168, 176, 176, 176, 176, 169, 169, 169, 169, 169,
	169, 169, 177, 177, 177, 183, 178, 178, 174, 174,
	174, 174, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 271, 271, 337, 337, 336, 336, 335,
	335, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 374, 374, 284, 284, 284, 284, 175, 175,
	175, 175, 175, 101, 101, 101, 101, 101, 268, 268,
	268, 272, 272, 272, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 189,
	189, 97, 97, 187, 187, 188, 190, 190, 185, 185,
	185, 171, 171, 171, 191, 191, 192, 192, 193, 193,
	195, 194, 194, 196, 197, 197, 197, 198, 198, 199,
	199, 199, 47, 47, 47, 47, 47, 42, 42, 42,
	42, 43, 43, 43, 43, 112, 112, 112, 112, 114,
	114, 113, 113, 79, 79, 80, 80, 80, 118, 118,
	119, 119, 119, 116, 116, 117, 117, 215, 215, 200,
	200, 200, 207, 207, 207, 203, 203, 205, 205, 205,
	206, 206, 206, 204, 212, 212, 214, 214, 213, 213,
	209, 209, 210, 210, 211, 211, 211, 208, 208, 170,
	170, 170, 170, 170, 216, 216, 216, 216, 224, 224,
	180, 180, 182, 182, 181, 135, 225, 225, 229, 226,
	226, 230, 230, 230, 230, 230, 227, 227, 228, 228,
	256, 256, 256, 234, 234, 247, 247, 243, 243, 244,
	244, 237, 237, 249, 249, 249, 74, 179, 179, 322,
	322, 319, 252, 252, 253, 253, 257, 257, 261, 261,
	258, 258, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 370, 371, 266, 267, 267, 267,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 2, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 3, 4, 3, 7, 0, 3,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 6, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 9, 6, 6, 6, 2,
	2, 3, 3, 3, 1, 1, 1, 0, 3, 1,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 5,
	5, 6, 4, 4, 8, 6, 8, 6, 8, 5,
	4, 2, 2, 1, 2, 2, 2, 5, 4, 5,
	8, 8, 6, 5, 4, 4, 4, 4, 4, 7,
	4, 6, 6, 6, 4, 4, 4, 7, 8, 6,
	5, 6, 8, 11, 7, 8, 8, 9, 4, 4,
	4, 4, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 4, 0, 2, 0, 2, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 3, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 0, 5, 5, 2, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 2, 1, 1, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 2, 2, 0, 3, 0, 2, 0, 1,
	3, 1, 3, 2, 0, 1, 1, 0, 1, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 0, 3, 3, 3, 0,
	3, 1, 1, 0, 4, 0, 1, 1, 0, 3,
	1, 3, 2, 1, 1, 0, 1, 2, 4, 9,
	3, 5, 0, 3, 3, 0, 1, 0, 2, 2,
	0, 2, 2, 2, 0, 2, 1, 2, 3, 3,
	0, 2, 1, 2, 3, 4, 3, 0, 1, 2,
	1, 5, 4, 4, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 1,
	3, 3, 3, 3, 3, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -368, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -84, -33, 32, -38, -48, 220, -49, -39, 221,
	-50, 223, 222, 259, 224, 252, 74, 305, 306, 308,
	309, 310, 311, -85, 257, 258, 226, 36, 45, 33,
	34, 37, 230, 265, 266, 229, -10, -34, 8, -370,
	11, 436, 254, 253, 28, -12, 472, 86, -369, 613,
	-215, -200, 22, 33, 29, -199, -195, -103, -200, 20,
	18, 7, -76, -373, -76, -76, 12, 13, -76, -307,
	-309, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -331, -44, -41, 225, 222, 269,
	120, 121, 259, 260, 261, 224, 243, 258, 262, 257,
	278, -40, 81, 33, 472, 475, -314, 221, 227, 228,
	437, 123, 122, 75, 223, -311, 359, 505, 583, -56,
	585, 102, 104, 584, 44, 233, 586, 587, 588, 512,
	589, 242, 590, 591, 592, 593, 599, 554, 600, 601,
	602, 124, 7, -76, -261, -257, -341, -251, 89, 90,
	91, 469, 245, 503, 504, 294, 81, 41, 356, 359,
	505, 467, 583, 305, 319, 313, 340, 332, 470, 506,
	479, 297, 246, 282, 580, 330, 132, 585, 300, 507,
	260, 364, 365, 508, 366, 102, 308, 403, 598, 299,
	509, 596, 104, 584, 79, 466, 51, 44, 255, 328,
	229, 324, 586, 283, 510, 481, 276, 123, 120, 605,
	36, 322, 50, 30, 595, 122, 49, 587, 147, 511,
	588, 512, 368, 347, 574, 48, 369, 261, 513, 84,
	266, 474, 303, 582, 370, 323, 371, 293, 594, 226,
	514, 566, 372, 373, 575, 515, 348, 352, 516, 395,
	374, 612, 52, 517, 518, 576, 121, 519, 78, 589,
	80, 317, 318, 520, 291, 244, 397, 344, 449, 456,
	457, 108, 109, 452, 110, 458, 111, 459, 460, 461,
	450, 112, 105, 451, 462, 463, 345, 346, 113, 464,
	107, 106, 453, 455, 114, 465, 242, 35, 375, 471,
	295, 58, 270, 398, 46, 350, 609, 45, 570, 521,
	573, 343, 339, 446, 53, 522, 523, 524, 525, 590,
	342, 316, 338, 604, 4, 288, 591, 62, 228, 354,
	353, 355, 277, 394, 335, 526, 527, 528, 249, 82,
	529, 325, 21, 530, 531, 376, 284, 532, 56, 533,
	534, 401, 258, 535, 54, 592, 39, 536, 263, 606,
	593, 537, 538, 539, 540, 265, 541, 378, 542, 377,
	349, 351, 272, 379, 473, 543, 304, 321, 262, 597,
	544, 250, 581, 264, 269, 257, 402, 251, 545, 546,
	547, 548, 549, 298, 565, 550, 551, 309, 599, 447,
	43, 552, 553, 554, 555, 556, 292, 287, 396, 405,
	61, 83, 361, 557, 558, 579, 315, 285, 559, 306,
	55, 600, 601, 602, 279, 603, 9, 610, 611, 381,
	124, 289, 290, 47, 336, 271, 560, 301, 561, 326,
	327, 341, 314, 337, 307, 567, 273, 382, 448, 259,
	562, 404, 286, 357, 362, 302, 477, 278, 383, 578,
	476, 334, 331, 280, 563, 384, 234, 274, 275, 564,
	568, 385, 386, 296, 387, 388, 389, 390, 391, 393,
	392, 281, 475, 312, 329, 363, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 445, 232, -76, 232, -159, -257,
	232, -227, 365, -248, 367, 380, 375, 385, 373, -239,
	376, 378, 272, -358, 395, 232, 382, 220, 368, 377,
	386, 387, 296, 393, 388, 392, 281, 389, 390, 391,
	-341, 173, 588, 603, 132, 333, 372, 370, 396, 570,
	-257, 307, -264, 312, -252, -341, -251, 310, -159, -82,
	566, 224, -266, -266, -105, 570, 572, -178, -120, 140,
	-131, -134, -125, -126, -172, -173, -174, -175, -132, -185,
	162, 163, 170, 141, -183, -135, 26, 468, 438, 437,
	173, 31, 216, 68, 69, 440, 441, 143, 57, 413,
	414, -133, 408, 415, 410, 467, 466, 443, 444, 115,
	445, 105, 107, 106, 446, 447, 448, 345, 346, 449,
	450, 451, 108, 109, 110, 111, 112, 113, 114, 452,
	455, 453, 454, 456, 457, 458, 463, 464, 459, 460,
	461, 462, 465, -252, -257, 237, 407, 231, 168, 436,
	-127, -123, -8, -181, 406, 411, 412, 416, 409, -341,
	-251, -129, -128, -168, 92, 98, 103, 99, -364, 116,
	-370, 93, 94, 95, 96, 97, 117, 118, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	44, 381, 381, -159, -76, -76, -76, -76, -193, -103,
	-195, -10, -8, -370, 8, -76, -8, -9, -13, -34,
	-36, 499, -35, -257, -200, -215, 12, 158, 42, 50,
	-198, -199, -12, -8, -120, 19, 23, 24, -108, 164,
	-120, -257, -77, -108, -237, 236, -76, -76, -226, -269,
	307, -230, 396, 395, -253, -228, -252, -250, -227, 394,
	225, 23, 478, 139, 25, 27, 142, 173, 127, 19,
	143, 37, 227, 333, 243, 172, 239, 437, 220, 72,
	480, 408, 410, 406, 413, 439, 440, 407, 367, 31,
	13, 482, 28, 253, 24, 38, 166, 222, 146, 483,
	256, 26, 254, 115, 118, 485, 22, 75, 248, 14,
	241, 40, 16, 486, 487, 17, 237, 236, 158, 233,
	70, 11, 216, 29, 155, 66, 488, 134, 489, 490,
	491, 492, 128, 68, 156, 20, 607, 411, 412, 33,
	571, 468, 267, 168, 73, 59, 572, 140, 409, 493,
	494, 116, 495, 119, 76, 577, 136, 18, 71, 42,
	496, 268, 497, 238, 608, 498, 399, 499, 157, 223,
	436, 69, 500, 231, 380, 8, 442, 32, 252, 240,
	126, 67, 501, 232, 145, 443, 444, 235, 129, 117,
	7, 133, 34, 12, 74, 77, 414, 415, 416, 57,
	125, 472, 144, 15, 502, 400, 138, 132, -308, 156,
	-294, -298, -252, 247, -324, 243, -159, -317, -316, -252,
	-370, -104, -247, 233, 241, 240, 133, -345, 136, 289,
	407, 231, -51, -52, -53, -227, 172, 587, -86, 264,
	268, 87, 87, -298, -297, -296, -346, 268, 247, -323,
	-315, 239, 248, -304, 240, 241, -299, 233, 134, -346,
	-299, 238, 248, 243, 247, 268, 268, 124, 268, 124,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 263,
	-305, 148, -305, 476, 476, -311, -346, 243, 233, -346,
	-346, 235, 35, 35, -249, -299, 235, 25, -305, -305,
	-305, -227, 172, -305, -305, -305, -305, 276, 276, -305,
	-305, -305, -305, -305, -305, -305, -305, -305, -305, -305,
	-305, -305, -305, -305, -305, -305, 232, -345, -112, 392,
	296, 81, -54, 278, -37, -159, -247, 233, 234, -345,
	265, -159, 217, -159, -241, 156, 15, -241, -238, 381,
	379, 366, 371, -241, -241, -241, -241, 279, 364, -300,
	233, 35, 244, 381, 279, 364, 279, 280, 279, 280,
	374, 384, 279, -262, 14, 158, 407, 369, 373, 272,
	232, 273, 234, 383, 280, -262, 93, -242, 156, 381,
	275, -241, -241, -267, -370, -253, 333, -341, 573, -267,
	-267, 32, 90, 235, -252, -78, -252, 93, -15, -11,
	-22, -21, -23, 148, -110, 381, -98, 173, 588, 574,
	575, 576, 573, 378, 581, 579, 577, 279, 578, 87,
	136, 138, 139, 4, -120, 155, -169, 148, 149, 150,
	151, 152, 153, 154, 158, 140, 142, 156, 157, 137,
	159, 160, 161, 162, 163, 164, 165, 167, 166, 168,
	169, 172, 218, 219, -126, -126, -126, -126, -183, -370,
	-370, -370, -126, -236, -370, -126, -370, -370, -370, -370,
	-189, -120, -370, -374, -370, -374, -374, -284, -370, -284,
	-370, -370, -370, -370, -370, -370, -370, -370, -370, -370,
	-370, -370, -370, -370, -370, -370, -370, -370, -370, -370,
	-370, -370, -370, -370, -370, -370, -370, -370, -370, -370,
	-370, -370, -370, -370, -370, -370, -370, -370, -370, 217,
	-370, -370, -370, -370, -370, -284, -284, -284, -284, -284,
	103, 98, 92, -185, 99, 93, -252, -257, -8, -9,
	-178, -266, -355, -356, -162, -159, -370, 296, -252, -252,
	265, -198, -12, -8, -193, -199, -195, -8, -76, -96,
	-109, 63, 64, -111, 24, 38, 67, 65, 23, -371,
	88, -371, -215, -371, 87, -36, -219, 86, 61, 43,
	93, 93, 87, 21, -194, -196, -120, 14, -255, 4,
	-254, 25, -252, 93, 217, 101, 14, -160, 29, -159,
	-237, -237, 87, 307, -230, -269, -232, -231, 397, 399,
	148, -256, -252, 93, 31, 88, 87, -159, -273, -276,
	-278, -277, -279, -274, -275, 330, 331, 173, 334, 336,
	337, 338, 339, 340, 341, 342, 343, 344, 347, 32,
	255, 326, 327, 328, 329, 348, 349, 350, 351, 352,
	353, 354, 355, 313, 332, 470, 314, 315, 316, 317,
	318, 319, 321, 322, 323, 324, 325, -344, -341, 86,
	88, 87, -280, 86, -120, -112, 232, -341, 233, 233,
	233, -76, 436, -305, -305, -305, 263, 19, -44, -41,
	-331, 18, -40, -41, 225, 120, 121, 222, 86, -294,
	86, -303, -344, -341, 86, 134, 238, 133, -302, -299,
	-302, -303, -341, -185, -341, 134, 134, -341, -341, -223,
	-252, -223, -223, 23, -223, 23, -223, 23, 95, -252,
	-223, 23, -223, 23, -223, 23, -223, 23, -223, 23,
	31, 78, 79, 80, 31, 82, 83, 84, -185, -341,
	-341, -185, -294, -227, -159, -341, 95, 95, 95, -305,
	-305, 95, 93, 93, 93, -305, -305, 95, 93, -259,
	-257, 93, 93, -347, 249, 293, 295, 95, 95, 95,
	95, 31, 93, -348, 31, 595, 594, 596, 597, 598,
	93, 95, 31, 95, 31, 95, -252, 86, -159, -118,
	283, 220, 222, 225, 76, 93, 297, 301, 302, 148,
	44, 87, 235, 232, -341, -243, 237, -243, -252, -258,
	-257, -250, 93, -120, -301, 14, 158, -262, -262, -241,
	-159, -301, -262, -241, -159, -241, -241, -241, -241, -262,
	-262, -262, -241, -257, -257, -159, -159, -159, -159, -159,
	-159, -159, -267, -242, -241, 573, 93, -235, 14, 76,
	-267, -267, -265, 310, 344, 567, 568, 569, 87, 472,
	-152, -159, 573, 573, 573, 573, 573, 573, -120, -120,
	-120, -120, 495, -176, 116, 140, 117, 118, -134, -177,
	-181, -183, 100, 158, 142, 156, 157, -125, -126, -125,
	-125, -125, -125, -125, -125, -125, -125, -125, -125, -125,
	-125, -125, -268, -252, 93, 173, -130, -129, 99, -364,
	-130, -106, -108, -120, -120, -341, -252, -106, -106, -120,
	-102, 24, 38, -187, -188, 144, -185, -371, -371, 95,
	99, -102, -367, -102, 164, -252, -252, -95, -94, 418,
	419, 420, 421, 423, 424, 425, 428, 429, 433, 434,
	417, 435, 422, 427, 430, 431, 432, 426, 329, -120,
	-120, -120, -120, -120, -120, -83, -120, 127, 128, 129,
	-120, -120, -179, -178, -340, -339, -338, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-107, 24, 38, -106, -253, -258, -250, -106, -107, -107,
	-106, -106, 217, -215, -371, 87, -357, 399, 400, 571,
	-260, 268, -259, 25, -179, 93, 14, -221, 77, -252,
	-198, -198, 63, 64, 59, -106, -111, -371, -35, 25,
	-217, -252, 62, 93, -285, -227, 356, 357, 173, -120,
	-120, 87, -197, 27, 28, -159, -254, 164, -258, -159,
	-222, 268, -159, -137, -139, -140, -141, -162, -184, -370,
	-142, 491, 488, 14, -152, -153, -161, -257, -230, -232,
	87, 398, 400, 401, 76, 119, -120, -286, 172, -313,
	-312, -311, -294, -296, -297, -298, 88, -286, -290, 362,
	361, -280, -280, -280, -280, -280, -285, -285, -285, -285,
	86, 86, -280, -280, -280, -280, -288, 86, -288, -288,
	-289, 86, -289, -324, -120, -321, -320, -318, -319, 242,
	102, 564, 520, 472, 512, 554, 77, -316, -197, 95,
	-371, -118, -244, 237, -322, -319, -341, -341, -341, -244,
	-341, 93, -341, 93, -341, 93, -87, -58, -1, 607,
	608, 609, 87, 19, -295, -294, -57, 293, -327, -328,
	268, -323, -317, -303, 134, -302, -303, -303, -341, 87,
	29, 124, 124, 124, 124, 472, 222, 32, -245, 511,
	140, 564, 520, -294, -57, -268, 235, -268, -268, 93,
	93, -240, 603, -152, -114, 285, 148, 274, 274, 232,
	232, 287, -159, 298, 300, 299, 297, 301, 302, 23,
	23, 23, 286, 288, 290, 276, -159, -159, -243, 76,
	-154, -159, 26, -257, -159, -241, -241, -159, -241, -241,
	-159, -252, -98, 399, 87, 472, 22, -99, 22, -370,
	116, 117, 118, -177, -125, -126, -125, 139, 256, 87,
	-371, 25, 87, 77, -371, -371, -371, 87, 14, -106,
	-190, -188, 146, -120, -371, -371, -371, -120, -371, -120,
	87, 87, 14, -272, 25, -371, -371, -371, -371, -371,
	-189, -371, 14, 87, 87, -371, -371, 87, 87, -371,
	87, 87, 87, -337, 87, 87, 87, 87, -371, -371,
	-371, -371, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, -371, -371, -106, -106, -370, 217, -371, -371,
	-371, -371, -371, -253, -356, 570, 400, -166, -165, -163,
	74, 236, 75, -370, -259, -371, -130, 90, -218, 90,
	-217, -171, -252, 95, 99, -200, -136, -138, 14, -111,
	-183, 88, 87, -285, -204, -209, -238, -252, 93, 173,
	-287, 173, -287, 356, 357, -196, 217, -167, 15, -170,
	32, 57, -11, -370, -370, 32, 87, -155, -157, -156,
	-158, 66, 70, 72, 67, 68, 69, 73, -263, 25,
	-137, -9, -8, -370, -370, -370, -159, -152, -372, 14,
	77, -372, 87, 217, -231, -233, 402, 399, 405, -341,
	93, -86, 87, -311, -298, -201, -115, 40, -291, 363,
	-285, 479, -285, -293, 93, -293, 95, 95, 88, -47,
	-42, -43, 33, 81, -318, -305, 93, 39, -305, -305,
	-252, 88, -197, -114, -159, 140, 76, -322, -322, -322,
	-257, -2, 606, 612, 134, 86, 366, 18, -217, 87,
	88, -186, 294, 88, -88, -252, 88, 86, -303, -303,
	-252, -370, 232, 31, 31, 564, 520, 511, -57, -186,
	-286, -341, 605, 604, 88, 234, 292, -119, 413, -116,
	93, 89, -159, -159, -159, -159, -159, 225, 222, -365,
	303, -365, 277, 235, -152, -159, 87, -81, 251, 246,
	-262, -262, 33, -159, 399, 582, 580, -120, 139, 256,
	-134, -126, -108, 469, -270, 173, 330, 255, 328, 324,
	344, 335, 361, 326, 362, 323, 322, 321, -270, -268,
	-120, -120, -193, 147, -120, 145, -371, -371, -120, -120,
	-120, -371, 173, 330, 14, -120, -120, -120, -338, -120,
	-120, -120, -336, -335, -130, -185, -371, -336, -120, -120,
	-335, -335, -339, -339, -339, -339, -339, -178, -178, -178,
	-178, -371, -371, -107, -253, -163, -299, -299, -299, -223,
	87, -234, 22, 14, 57, 57, -136, -167, -137, -111,
	-252, -207, 566, -212, 46, -210, -211, 47, -208, 48,
	56, -287, -287, 164, -198, -120, -224, 76, -225, -229,
	-185, -180, -182, -181, -370, -216, -371, -252, -223, -225,
	-139, -140, -140, -139, -140, 66, 66, 66, 71, 66,
	71, 66, -156, -257, -371, -371, -9, -9, -120, -260,
	77, -137, -137, -161, -257, 164, 399, 403, 404, -311,
	-363, 116, 140, 31, 76, 359, 102, -361, 172, 508,
	559, 564, 520, 512, 554, -362, 238, 133, 134, 250,
	25, 41, 88, 87, 88, 87, 88, 87, -246, -245,
	-43, -42, -305, -305, 95, -341, 93, 93, 234, 26,
	-159, 76, 76, 76, -89, 610, 95, 86, -3, 81,
	-120, 86, 19, -294, -185, -329, -281, -330, -282, -283,
	-5, -6, -306, -92, 57, 102, -61, 44, 233, 590,
	591, 124, -370, 603, -321, -217, -325, -327, -159, -122,
	-370, -121, -123, -127, 162, 163, -186, -159, -113, 283,
	291, 86, -117, 90, -343, 77, 274, 359, 274, -366,
	304, 93, -366, -159, -81, -47, -159, -241, -241, 33,
	-341, -371, -134, -126, -370, -371, -280, -280, -280, -289,
	-280, 318, -280, 318, -280, -371, -371, 87, -371, 22,
	-371, -97, 442, -120, 87, 87, -371, 86, 86, -120,
	-371, -371, -371, -337, 87, -371, 87, -371, 87, -271,
	565, -371, -371, -371, -371, -371, -371, -371, -371, -371,
	-371, -371, -164, 22, -164, -164, -371, 90, -159, -167,
	-191, 16, -204, 51, 336, -214, -213, 55, 47, -211,
	19, 49, 19, 30, -224, 87, 148, 87, -371, -371,
	87, 57, 217, -371, -167, -150, -149, 76, 77, -151,
	76, -149, 66, 66, -219, -371, -371, 87, -222, -137,
	-167, -167, 217, 116, -370, -124, -133, -122, 12, 93,
	93, -341, -360, 594, 595, 31, 95, -305, -305, 134,
	134, -159, 86, -285, 93, -285, 95, 95, 31, 82,
	83, 84, 31, 78, 79, 80, -159, -159, -159, -159,
	-326, 86, 19, -120, 86, 148, 88, -217, -217, 270,
	158, -305, 588, 276, 276, -305, -305, -305, -91, -90,
	610, 88, -371, 87, -292, 472, 475, -120, -128, -128,
	-219, 88, -334, 472, -342, -252, -252, -252, -252, 95,
	97, -125, -285, -120, -120, -198, 93, -120, -120, 95,
	95, -371, -371, -336, -335, -120, -371, -147, -146, -148,
	574, 116, 31, -270, -370, 66, 18, 16, -370, -370,
	-260, -191, -192, 17, 19, -205, 53, -203, 52, -203,
	-213, 19, 19, 93, 19, 93, 134, -229, -120, -182,
	57, -11, -252, -180, -252, -193, -120, 86, -120, -130,
	-167, -167, -120, -173, 467, 466, 445, 105, 107, 106,
	446, 447, 448, 345, 346, 449, 450, 451, 108, 109,
	110, 111, 112, 113, 114, 452, 455, 453, 456, 457,
	458, 463, 464, 459, 460, 461, 462, 465, 93, 93,
	86, -120, 88, 88, -219, -325, -58, 88, -217, 95,
	88, 271, -181, -370, 93, -305, -305, -305, 95, 95,
	-259, -371, 87, -252, -362, -327, 476, 476, -371, 25,
	-333, -332, -253, 86, 77, -101, 158, 472, -371, -371,
	-371, -371, -371, 88, 88, -371, -371, 87, -371, -146,
	-148, -371, 76, -130, -220, -371, -252, 238, 19, 19,
	-220, -220, -166, -192, -120, -178, -206, 54, 76, 119,
	93, 93, 93, 12, -180, 217, -198, -217, -144, 366,
	-193, -371, -217, 88, 25, 88, 612, 134, 88, -181,
	-100, -370, 267, -259, 93, 93, -90, -93, -11, 87,
	148, -217, -159, -371, 470, 73, 473, -120, -371, 76,
	483, 574, 87, -371, -371, -371, 76, 119, -225, -252,
	88, -371, -370, -198, 88, -202, -11, 86, -3, 267,
	-281, -330, -282, -283, -5, -6, -306, -79, 472, -332,
	-310, -253, 93, 95, 88, 62, 471, 474, -337, -252,
	238, -260, -145, -143, -252, 526, -353, -352, 468, -363,
	-359, 116, 140, 102, -361, 564, 520, 125, 126, -79,
	-120, 86, -371, -80, 282, 570, -343, 62, -371, -371,
	87, 22, -273, -60, 537, -350, -351, 76, -354, 372,
	536, 557, 116, 93, 88, -217, 243, -334, 472, -143,
	533, -286, -130, -351, 76, -350, 76, 13, 12, -4,
	611, 88, 284, 473, -59, 26, -144, -349, 251, 246,
	249, 32, -349, 95, -4, 474, 537, 245, 31, 116,
	-130, -147, -146, -146,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 827,
	827, 827, 0, 827, 0, 0, 827, -2, -2, 827,
	1318, 0, 827, 0, 0, -2, 759, 761, 0, 763,
	-2, 0, 0, 772, 1825, 1825, 822, 0, 0, 0,
	0, 0, 827, 827, 827, 827, 1178, 48, 827, 0,
	83, 84, 778, 779, 780, 63, 0, 1823, 1, 3,
	69, 73, 0, 0, 0, 56, 1187, 0, 76, 0,
	0, 831, 0, 829, 0, 1301, 827, 827, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 573, 501, 552, 499, 537, -2, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 377, 377, 0, 0, -2, 487, 487, 487,
	0, 0, 0, 534, 1303, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1205, 153, 1319, 1316, 1317, 38, 39,
	40, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817,
	1818, 1819, 1820, 1821, 1822, 0, 1295, 0, 686, 929,
	0, 748, 748, 0, 748, 748, 748, 748, 0, 0,
	0, 698, 0, 0, 0, 0, 745, 0, 714, 715,
	0, 745, 0, 721, 751, 0, 726, 748, 748, 729,
	1826, 0, 1826, 1826, 1286, 0, 742, 740, 754, 755,
	758, 762, 0, 767, 770, 1312, 1313, 0, 785, 47,
	1559, 777, 790, 791, 0, 823, 824, 43, 1026, 0,
	951, 956, 967, 980, 981, 982, 983, 984, 986, 987,
	0, 0, 0, 0, 992, 993, 0, 0, 0, 0,
	0, 1007, 0, 0, 0, 0, 0, 1159, 0, 1122,
	1122, 1043, 1122, 1124, 1124, 1479, 1513, 0, 0, 0,
	1822, 1600, 1608, 1609, 1631, 1717, 1766, 1604, 1605, 1586,
	1598, 1601, 1589, 1590, 1592, 1594, 1599, 1606, 1612, 1591,
	1611, 1610, 0, 1587, 1588, 1593, 1603, 1607, 1595, 1596,
	1597, 1602, 1613, 1168, 0, 0, 0, 0, 0, 0,
	273, 274, 1025, 1275, 1124, 1124, 1124, 1124, 1124, -2,
	-2, 219, 220, 221, 222, 223, 224, 225, 0, 215,
	0, 278, 279, 275, 276, 277, 1009, 1010, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 245, 246, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 258, 259, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270, 271, 272,
	1825, 0, 800, 0, 0, 0, 0, 0, 1187, 0,
	1179, 1178, 61, 0, 827, -2, 0, 0, 0, 0,
	45, 0, 50, 888, 75, 74, 1227, 0, 0, 0,
	57, 1188, 65, 67, 1189, 0, 832, 833, 0, 864,
	868, 0, 828, 0, 0, 1302, 1301, 1301, 100, 0,
	1762, 1279, -2, -2, 0, 0, 1314, 1315, 1288, -2,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, -2, 0, 0,
	165, 166, 0, 41, 404, 0, 161, 0, 397, 338,
	0, 1205, 0, 0, 0, 0, 0, 827, 0, 1296,
	142, 143, 150, 151, 152, 377, 377, 377, 549, 0,
	0, 153, 153, 508, 509, 510, 0, 0, -2, 402,
	0, 488, 0, 0, 391, 391, 395, 393, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 0, 527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 634,
	0, 378, 0, 547, 548, 440, 0, 0, 0, 0,
	0, 0, 524, 525, 0, 0, 1304, 1305, 0, 0,
	0, 377, 377, 0, 0, 0, 0, 377, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 141, 1218, 0,
	0, 0, -2, 0, 678, 0, 0, 0, 1297, 1297,
	0, 685, 0, 687, 688, 0, 0, 689, 0, 745,
	745, 743, 744, 691, 692, 693, 694, 748, 0, 0,
	386, 387, 388, 745, 748, 0, 748, 748, 748, 748,
	745, 745, 745, 748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 751, 748, 0, 722, 0, 723,
	724, 727, 728, 730, 1827, 1828, 1335, 1826, 1826, 734,
	738, 1287, 760, 768, 771, 788, 786, 787, 789, 781,
	782, 783, 784, 0, 802, 803, 808, 0, 0, 0,
	0, 814, 815, 816, 0, 0, 819, 820, 821, 0,
	0, 0, 0, 0, 949, 0, 0, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 988, 989, 990, 991, 994, 0,
	0, 0, 999, 1000, 0, 0, 0, 0, 0, 837,
	0, 1160, 0, 1041, 0, 1042, 1044, 1045, 0, 1046,
	837, 837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1307, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 847, 0,
	0, 847, 847, 0, 0, 208, 209, 210, 211, 212,
	226, 227, 228, 229, 230, 280, 1168, 0, 1025, 0,
	0, 44, 792, 793, 0, 912, 1307, 0, 0, 843,
	0, 55, 64, 66, 1187, 59, 1187, 0, 849, 0,
	0, -2, -2, 850, 856, 857, 858, 859, 860, 52,
	1824, 53, 0, 72, 0, 46, 0, 0, 0, 0,
	350, 1230, 0, 0, 1180, 1181, 1184, 0, 865, 1642,
	869, 0, 871, 872, 0, 830, 0, 98, 0, 928,
	0, 0, 0, 1762, 1285, 0, 102, 103, 0, 0,
	0, 361, 1290, 1291, 1292, -2, 384, 0, 361, 345,
	288, 289, 290, 338, 292, 338, 338, 338, 338, 350,
	350, 350, 350, 321, 322, 323, 324, 325, 0, 0,
	307, 338, 338, 338, 338, 328, 329, 330, 331, 332,
	333, 334, 335, 293, 294, 295, 296, 297, 298, 299,
	300, 301, 340, 340, 340, 342, 342, 0, 42, 0,
	365, 0, 1184, 0, 0, 1218, 1299, 1309, 0, 0,
	0, 1299, 120, 0, 0, 0, 550, 584, 502, 538,
	551, 0, 505, 506, -2, 0, 0, 487, 0, 489,
	0, 385, 0, -2, 0, 395, 0, 391, 395, 392,
	395, 383, 396, 528, 529, 530, 0, 532, 533, 614,
	898, 0, 0, 0, 0, 0, 620, 621, 622, 0,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 489, 0, 535, 0, 441, 442, 443, 0,
	0, 446, 447, 448, 449, 0, 0, 452, 453, 454,
	915, 916, 455, 456, 481, 482, 483, 457, 458, 459,
	460, 461, 462, 463, 475, 476, 477, 478, 479, 480,
	464, 465, 466, 467, 468, 469, 472, 0, 135, 1209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1297, 0, 0, 0, 0, 846, 930,
	1320, 1321, 749, 750, 0, 389, 390, 748, 748, 695,
	735, 0, 748, 699, 736, 700, 702, 701, 703, 716,
	717, 748, 706, 746, 747, 707, 708, 709, 710, 711,
	712, 713, 731, 718, 719, 720, 752, 0, 756, 757,
	732, 733, 0, 769, 773, 774, 775, 776, 0, 0,
	805, 94, 810, 811, 812, 813, 825, 818, 1027, 946,
	947, 948, 0, 950, 953, 0, 1011, 1013, 955, 957,
	1022, 1023, 1024, 0, 0, 0, 0, 0, 961, 965,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 985, 1138, 1139, 1140, 1002, 281, 282, 0,
	1003, 0, 862, 0, 0, 0, 1001, 0, 0, 0,
	0, 838, 839, 1166, 1163, 0, 0, 1123, 1125, 0,
	0, 0, 0, 0, 861, 0, 0, 0, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1141,
	0, 0, 0, 0, 0, 1159, 0, 1004, 1005, 1006,
	0, 0, 0, 1308, 0, 130, 131, 0, 0, 0,
	0, 0, 1095, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 848, 1169, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 1274, 0, 795, 796, 798, 0,
	932, 0, 913, 0, 0, 801, 0, 842, 0, 845,
	58, 60, 854, 855, 0, 873, 851, 54, 49, 0,
	0, 890, 1228, 350, 1250, 0, 359, 359, 356, 1190,
	1191, 0, 1183, 1185, 1186, 77, 870, 866, 0, 944,
	0, 0, 927, 0, 876, 878, 879, 880, 910, 0,
	883, 0, 0, 0, 0, 0, 96, 929, 1280, 101,
	0, 0, 106, 107, 1281, 1282, 1283, 1284, 0, 573,
	-2, 436, 167, 169, 170, 171, 162, -2, 348, 346,
	347, 291, 350, 350, 315, 316, 317, 318, 319, 320,
	0, 0, 308, 309, 310, 311, 302, 0, 303, 304,
	305, 0, 306, 403, 0, 1192, 366, 367, 369, 377,
	0, 372, 373, 0, 377, 377, 0, 398, 399, 0,
	1184, 1209, 0, 0, 0, 1310, 1309, 1309, 1309, 0,
	155, 156, 157, 158, 159, 160, 609, 0, 0, 585,
	607, 608, 153, 0, 0, 163, 491, 490, 0, 641,
	0, 401, 0, 0, 395, 395, 380, 381, 531, 0,
	0, 616, 617, 618, 619, 0, 0, 0, 518, 430,
	0, 519, 520, 489, 491, 361, 0, 444, 445, 450,
	451, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 565, 566, 567, 493, 571, 568,
	493, 572, 1206, 1207, 1208, 0, 0, 679, 0, 0,
	427, 92, 1298, 684, 745, 705, 737, 745, 697, 704,
	725, 765, 809, 0, 0, 0, 0, 817, 0, 0,
	954, 1012, 1014, 958, 0, 962, 966, 0, 0, 0,
	0, 0, 0, 0, 1008, 1032, 1033, 0, 0, 1178,
	0, 1164, 0, 0, 1040, 1126, 1127, 0, 1048, 0,
	0, 0, 0, 0, 0, 1054, 1055, 1056, 1057, 1058,
	0, 1060, 0, 0, 0, 1064, 1065, 0, 0, 1066,
	0, 0, 0, 0, 0, 0, 0, 0, 1078, 1079,
	1080, 1081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1092, 1028, 0, 0, 847, 0, 1128, 1129,
	1130, 1131, 1132, 1169, 794, 797, 799, 886, 933, 934,
	0, 0, 0, 0, 914, 1306, 840, 841, 844, -2,
	0, 0, 1171, 0, 0, 873, 944, 874, 0, 852,
	51, 889, 0, 1232, 1231, 1244, 1257, 359, 359, 353,
	354, 360, 355, 357, 358, 1182, 0, 1187, 0, 1268,
	0, 0, 1260, 0, 0, 0, 0, 0, 0, 0,
	0, 917, 0, 0, 920, 0, 0, 0, 0, 911,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 90,
	91, 0, 0, 0, 104, 105, 0, 0, 111, 362,
	363, 144, 153, 438, 168, 411, 0, 0, 287, 349,
	312, 313, 314, 0, 336, 0, 0, 0, 432, 116,
	1196, 1195, 377, 377, 368, 0, 371, 0, 0, 0,
	1311, 339, 400, 0, 134, 0, 0, 0, 0, 0,
	140, 579, 0, 0, 586, 0, 0, 0, 500, 0,
	511, 512, 0, 613, -2, 675, 365, 0, 379, 382,
	899, 0, 0, 513, 0, 516, 517, 431, 491, 522,
	523, 536, 473, 474, 471, 0, 0, 1219, 1220, 1225,
	1223, 1224, 121, 557, 559, 558, 562, 0, 0, 495,
	0, 495, 555, 0, 427, 1192, 0, 683, 428, 429,
	748, 748, 804, 95, 0, 807, 0, 0, 0, 0,
	959, 963, 863, 0, 0, 338, 338, 1146, 338, 342,
	1149, 338, 1151, 338, 1154, 338, 1157, 1158, 0, 0,
	0, 0, 1161, 1039, 1167, 0, 1047, 1049, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 0, 132, 133,
	1095, 0, 0, 1097, 1099, 1100, 1070, 1096, 0, 0,
	1093, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1029, 1030, 0, 1170, 935, 940, 940, 940, 0,
	0, 0, 1293, 1294, 1172, 1173, 944, 1174, 875, 853,
	891, 1250, 0, 1243, 0, -2, 1252, 0, 0, 0,
	1258, 351, 352, 867, 78, 945, 81, 0, 1268, 1276,
	0, 1259, 1270, 1272, 0, 0, 0, 1264, 0, 944,
	877, 906, 908, 0, 903, 918, 919, 921, 0, 923,
	0, 925, 926, 888, 882, 884, 0, 0, 0, 98,
	0, 944, 944, 97, 0, 931, 108, 109, 110, 437,
	172, 177, 0, 0, 0, 182, 0, 184, 0, 0,
	0, 189, 190, 377, 377, 412, 0, 284, 286, 0,
	0, 175, 350, 0, 350, 0, 343, 0, 413, 433,
	1193, 1194, 0, 0, 370, 374, 375, 376, 0, 1300,
	136, 0, 0, 0, 582, 0, 610, 0, 0, 0,
	0, 0, 0, 164, 492, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 0, 377, 0, 0, 0, 377,
	377, 377, 0, 667, 364, 0, 0, 638, 635, 514,
	0, 213, 214, 216, 0, 0, 521, 888, 1210, 1211,
	1212, 0, 1222, 1226, 124, 0, 0, 0, 0, 569,
	0, 494, 570, 680, 681, 682, 93, 690, 696, 806,
	826, 952, 960, 964, 0, 996, 1144, 350, 1147, 1148,
	1150, 1152, 1153, 1155, 1156, 997, 998, 0, 1035, 0,
	1037, 1187, 0, 1165, 0, 0, 1052, 0, 0, 0,
	1061, 1062, 1063, 0, 0, 1069, 0, 1071, 0, 0,
	0, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
	1091, 1031, 0, 0, 0, 0, 912, -2, 62, 1174,
	1176, 0, 1237, 1235, 1235, 1245, 1246, 0, 0, 1253,
	0, 0, 0, 0, 82, 0, 0, 0, 1273, 0,
	0, 0, 0, 99, 1178, 900, 907, 0, 0, 901,
	0, 902, 922, 924, 881, -2, 885, 0, 944, 944,
	88, 89, 0, 178, 0, 180, 206, 207, 0, 183,
	185, 186, 187, 193, 194, 195, 188, 0, 0, 283,
	285, 0, 0, 326, 337, 327, 0, 0, 1197, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 888, 137, 138, 139,
	574, 0, 584, 0, 0, 0, 577, 0, 503, 0,
	0, 0, 377, 377, 377, 0, 0, 0, 0, 652,
	0, 0, 615, 0, 623, 0, 0, 0, 217, 218,
	0, 1221, 556, 0, 122, 123, 0, 0, 561, 496,
	497, 1133, 1145, 0, 0, 0, 1162, 0, 0, 0,
	0, 1059, 1067, 0, 1098, 0, 1074, 0, 0, 0,
	604, 605, 0, 1094, 0, 941, 0, 0, 0, 0,
	932, 1176, 80, 0, 0, 1240, 0, 1233, 1236, 1234,
	1247, 0, 0, 1254, 0, 1256, 0, 1277, 1278, 1271,
	0, 1263, 1266, 1262, 1265, 1187, 904, 0, 909, 0,
	1178, 87, 0, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 192,
	0, 0, 341, 344, 0, 0, 0, 575, 0, 587,
	578, 0, 665, 0, 669, 0, 0, 0, 672, 673,
	674, 651, 0, 655, 405, 639, 636, 637, 515, 0,
	125, 126, 0, 0, 0, 0, 0, 0, 1034, 1036,
	1038, 1050, 1051, 1142, 1143, 1068, 1072, 0, 1075, 0,
	0, 1076, 0, 606, 0, 937, 894, 895, 942, 943,
	0, 0, 887, 79, 1177, 1175, 1229, 0, 1238, 1239,
	1248, 1249, 1255, 0, 1261, 0, 85, 0, 0, 0,
	1187, 179, 0, 198, 0, 583, 0, 586, 576, 663,
	664, 0, 676, 668, 670, 671, 653, -2, 1213, 0,
	0, 0, 563, 995, 0, 0, 0, 1095, 1077, 0,
	602, 603, 0, 936, 938, 939, 1241, 1242, 1269, 1267,
	905, 912, 0, 86, 418, 411, 1213, 0, 0, 0,
	656, 657, 658, 659, 660, 661, 662, 553, 1215, 127,
	128, 484, 485, 486, 121, 1134, 0, 1137, 0, 896,
	897, 588, 0, 590, 0, -2, 406, 419, 0, 173,
	199, 200, 0, 0, 203, 204, 205, 196, 197, 117,
	0, 0, 677, 0, 1216, 1217, 124, 1135, 1073, 589,
	0, 0, 361, 0, 599, 407, 408, 0, 414, 415,
	416, 417, 201, 202, 611, 0, 0, 560, 0, 591,
	592, 600, 0, 409, 0, 410, 0, 0, 0, 580,
	0, 611, 1214, 0, 0, 601, 597, 420, 422, 423,
	0, 0, 421, 612, 581, 1136, 0, 424, 425, 426,
	593, 594, 595, 596,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 167, 159, 3,
	86, 88, 164, 162, 87, 163, 217, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 613,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 169, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 170,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 160,
	161, 166, 168, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:536
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:541
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:542
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:546
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:582
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:588
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:592
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:596
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:601
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:605
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:611
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:617
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:623
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:627
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:636
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:642
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:646
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:652
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:658
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:662
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:666
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:689
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:695
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:713
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:726
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:736
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:786
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:792
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:798
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:805
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:811
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:819
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:829
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:841
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:853
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:857
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:863
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:869
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:873
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:877
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:881
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:886
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:887
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:891
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:895
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:901
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:905
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:911
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:915
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:920
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:924
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:930
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:936
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:940
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:946
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:950
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:956
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:960
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:964
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:970
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:974
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:978
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:982
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:988
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:992
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:998
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1004
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1011
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1020
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1024
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1031
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1035
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1040
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1044
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1050
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1055
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1060
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1066
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1071
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1077
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1086
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1092
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1096
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1102
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1108
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1115
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1122
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1127
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1132
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1137
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1144
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1151
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1162
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1169
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1173
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1179
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1183
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1187
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1195
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1199
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1205
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1209
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1215
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1219
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1225
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1229
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1235
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1239
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1245
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1249
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1255
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1259
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1265
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1270
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1275
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1279
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1284
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1288
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1292
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1303
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1312
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1321
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1334
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1338
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1344
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1350
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1355
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1360
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1365
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1370
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1375
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1380
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1384
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1389
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1393
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1398
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1404
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1410
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1414
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1420
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1424
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1428
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1434
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1438
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1443
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1447
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1452
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1458
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1464
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1469
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1474
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1480
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1488
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1495
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1499
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1503
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1507
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1511
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1521
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1528
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1532
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1538
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1542
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1546
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1550
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1554
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1558
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1562
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1567
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1571
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1575
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1579
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1583
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1764
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1768
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1772
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1778
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1782
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1786
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1792
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1796
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1803
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1807
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1811
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1815
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1832
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1899
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1917
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1925
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1929
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1935
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1939
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1945
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1953
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1969
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1981
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1993
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2043
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2048
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2052
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2057
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2061
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2069
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2073
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2079
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2087
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2091
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2095
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2100
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2104
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2109
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2121
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2125
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2145
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2151
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2155
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2160
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2164
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2168
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2174
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2179
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2183
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2189
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2193
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2199
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2203
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2208
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2212
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2216
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2220
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2224
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2228
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2234
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2244
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2248
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2252
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2256
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2260
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2265
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2269
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2275
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2279
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2283
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2289
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2293
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2298
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2302
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2308
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2312
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2317
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2321
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2327
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2331
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2337
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2341
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2347
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2351
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2357
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2361
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2367
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2373
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2377
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2381
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2385
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2389
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2394
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2398
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2404
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2410
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2416
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2420
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2424
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2429
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2433
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2439
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2445
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2451
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2455
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2459
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2463
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2467
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2476
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2486
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2490
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2495
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2499
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2504
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2508
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2514
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2518
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2522
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2528
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2532
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2538
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2542
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2546
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2550
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2554
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2558
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2562
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2566
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2570
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2574
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2578
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2582
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2586
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2590
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2594
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2598
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2602
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2606
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2610
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2614
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2618
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2622
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2626
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2630
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2634
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2638
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2642
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2646
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2650
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2654
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2658
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2663
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2667
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2671
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2694
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2703
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2709
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2713
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2718
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2722
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2727
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2731
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2740
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2744
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2749
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2753
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2757
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2761
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2765
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2769
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2775
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2779
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2783
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2789
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2793
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2797
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2801
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2805
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2809
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2813
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2817
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2821
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2825
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2830
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2835
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2839
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2843
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2847
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2851
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2855
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2859
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2863
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2867
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2871
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2875
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2879
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2883
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2887
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2891
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2895
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2899
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2903
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2907
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2913
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2917
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2923
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2927
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2931
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2935
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2939
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2943
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2947
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2951
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2955
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2959
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2965
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2972
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2979
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2986
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2992
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3002
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3009
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3016
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3028
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3038
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3042
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3046
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3059
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3069
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3073
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3084
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3091
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3098
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3105
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3112
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3118
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3127
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3135
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3142
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3149
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3153
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3162
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3170
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3179
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3186
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3194
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3198
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3207
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3222
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3227
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3231
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3236
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3240
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3246
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3252
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3258
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3262
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3268
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3272
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3278
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3284
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3290
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3296
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3302
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3306
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3310
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3314
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3320
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3326
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3332
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3336
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3340
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3346
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3350
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3355
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3359
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3364
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3368
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3374
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3378
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3382
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3386
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3390
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3394
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3398
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3402
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3406
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3410
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3414
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3418
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3422
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3426
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3430
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3434
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3438
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3442
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3446
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3450
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3454
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3458
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3463
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3467
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3471
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3477
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3481
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3487
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3492
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3496
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3501
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3506
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3511
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3516
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3521
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3527
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3533
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3538
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3544
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3550
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3554
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3560
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3565
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3569
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3574
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3579
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3584
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3589
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3595
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3601
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3608
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3615
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3622
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3630
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3634
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3640
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3646
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3652
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3658
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3664
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3670
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3676
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3682
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3688
		{
			yyVAL.str = ""
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3692
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3698
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3704
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3708
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3714
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3718
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3727
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3731
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3737
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3741
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3747
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3753
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3757
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3761
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3765
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3769
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3773
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3777
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3781
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3785
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3789
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3793
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3797
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3805
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3813
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3817
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3821
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3825
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3829
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3833
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3837
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3841
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3845
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3849
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3853
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3857
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3861
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3865
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3869
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3873
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3877
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3881
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3885
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3889
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3893
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3897
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3901
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3905
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3909
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3913
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3917
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3962
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3966
		{
			yyVAL.str = "extended "
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3972
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3976
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3982
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3986
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3992
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3996
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4000
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4006
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4010
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4014
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4020
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4024
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4030
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4034
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4038
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4044
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4048
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4054
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4058
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4062
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4068
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4078
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4084
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4093
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4095
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4098
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4100
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4110
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4115
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4119
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4123
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4127
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4131
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4135
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4141
		{
			yyVAL.str = yyDollar[1].str
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			yyVAL.str = yyDollar[1].str
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4149
		{
			yyVAL.str = yyDollar[1].str
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4155
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4159
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4172
		{
			yyVAL.str = ""
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4176
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4180
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4186
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4190
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4196
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4206
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4212
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4216
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4222
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4228
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4232
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4236
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4240
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4246
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4252
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4258
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4262
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4266
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4270
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4274
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4278
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4288
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4294
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4298
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4302
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4306
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4310
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4314
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4318
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4322
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4326
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4330
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4334
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4338
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4343
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4347
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4351
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4356
		{
			yyVAL.str = ""
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4365
		{
			setAllowComments(yylex, true)
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4369
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4375
		{
			yyVAL.strs = nil
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4379
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4385
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4389
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4393
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4398
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4402
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4406
		{
			yyVAL.str = SQLCacheStr
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4411
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4415
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4419
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4425
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4429
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4441
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4446
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4450
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4456
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4460
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4465
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4469
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4474
		{
			yyVAL.strs = nil
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4482
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4486
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4490
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4496
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4500
		{
			yyVAL.str = SQLCacheStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4504
		{
			yyVAL.str = DistinctStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4508
		{
			yyVAL.str = DistinctStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4512
		{
			yyVAL.str = StraightJoinHint
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4516
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4520
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL StarExpr
//line sql.y:4526
		{
			yyLOCAL = StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4532
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4536
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4542
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4546
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4550
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4554
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4559
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4563
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4567
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4574
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4579
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4583
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4589
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4595
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4599
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4609
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4613
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4617
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4621
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4627
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4631
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4637
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4641
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4646
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4650
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4656
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4660
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4666
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4670
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4676
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4680
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4684
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4688
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4694
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4698
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4711
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4715
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4719
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4723
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4729
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4731
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4735
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4737
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4741
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4743
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4746
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4748
		{
			yyVAL.empty = struct{}{}
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4751
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4755
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4759
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4766
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4772
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4776
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4780
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4786
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4792
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4796
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4800
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4804
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4810
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4814
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4824
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4828
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4834
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4838
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4844
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4849
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4853
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4859
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4863
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4869
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4873
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4877
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4881
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4886
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4890
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4894
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4898
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4904
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4908
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4915
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4919
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4923
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4927
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4931
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4935
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4939
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4946
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4950
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4954
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4958
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4964
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4968
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4972
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4976
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4980
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4984
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4988
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4992
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4996
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5000
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5004
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5010
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5014
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5018
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5022
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5026
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5042
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5046
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5050
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5054
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5058
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5064
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5068
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5072
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5076
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5080
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5084
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5088
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5092
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5096
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5100
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5104
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5108
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5112
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5116
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5120
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5124
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5128
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5132
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5136
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5144
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5148
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5156
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5160
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5166
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5170
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5174
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5180
		{
			yyVAL.str = ""
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5184
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5190
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5194
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5201
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5205
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5209
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5213
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5219
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5223
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5227
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5231
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5235
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5239
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5243
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5249
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5253
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5257
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5264
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5270
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5274
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5292
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5306
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5310
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5314
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5318
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5322
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5326
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5330
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5342
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5353
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5357
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5372
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5376
		{
			yyLOCAL = &Avg{Arg: yyDollar[4].exprUnion(), Distinct: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5380
		{
			yyLOCAL = &CountStar{Star: yyDollar[3].starExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5384
		{
			yyLOCAL = &Count{Arg: yyDollar[4].exprUnion(), Distinct: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5388
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5392
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5396
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5400
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5404
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5408
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5412
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5416
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5420
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5424
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5428
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5432
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5436
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5440
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5444
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5448
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5452
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5456
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5460
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5464
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5468
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5472
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5476
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5480
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5484
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5488
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5492
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5496
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5500
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5504
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5508
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5512
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5516
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5520
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5524
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5528
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5532
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5536
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5540
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5544
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5548
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5552
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5556
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5561
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5565
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5570
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5574
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5580
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5584
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5590
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5594
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5600
		{
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5602
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5606
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5610
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5614
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5618
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5622
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5626
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5630
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5634
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5638
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5642
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5648
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5652
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5656
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5660
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5664
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5668
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5672
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5676
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5680
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5690
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5694
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5698
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5702
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5713
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5717
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5721
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5725
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5729
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5735
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5739
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5743
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5747
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5751
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5757
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5761
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5765
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5771
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5775
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5779
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5785
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5789
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5793
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5797
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5801
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5807
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5811
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5815
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5819
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5823
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5827
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5831
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5835
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5839
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5843
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5849
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5853
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5858
		{
			yyVAL.str = string("")
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5862
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5868
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5872
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5878
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5887
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5893
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5897
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5901
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5907
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5926
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5930
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5935
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5939
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5944
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5948
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5954
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5960
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5964
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5970
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5975
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5979
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5983
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5988
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5992
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5998
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6002
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6006
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6011
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6015
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6019
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6023
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6027
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6034
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6038
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6042
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6046
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6052
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6056
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6060
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6064
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6069
		{
			yyVAL.str = ""
		}
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6073
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6077
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6081
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6086
		{
			yyVAL.str = ""
		}
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6090
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6096
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6100
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6105
		{
			yyVAL.str = ""
		}
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6109
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6114
		{
			yyVAL.str = "cascaded"
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6118
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6122
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6127
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6131
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6137
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6143
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6149
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6158
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6162
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6167
		{
			yyVAL.str = ""
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6171
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6177
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6181
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6187
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6191
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6195
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6200
		{
			yyVAL.str = ""
		}
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6204
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6208
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6213
		{
			yyVAL.str = ""
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6217
		{
			yyVAL.str = " header"
		}
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6222
		{
			yyVAL.str = ""
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6226
		{
			yyVAL.str = " manifest on"
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6230
		{
			yyVAL.str = " manifest off"
		}
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6235
		{
			yyVAL.str = ""
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6239
		{
			yyVAL.str = " overwrite on"
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6243
		{
			yyVAL.str = " overwrite off"
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6249
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6254
		{
			yyVAL.str = ""
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6258
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6264
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6268
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6274
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6278
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6283
		{
			yyVAL.str = ""
		}
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6287
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6293
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6297
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6303
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6307
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6311
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6316
		{
			yyVAL.str = ""
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6320
		{
			yyVAL.str = " optionally"
		}
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6333
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6337
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6341
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6345
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6349
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6355
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6359
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6363
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1267:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6367
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6372
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6376
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6382
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6386
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6392
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6396
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6402
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6407
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6417
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6421
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6427
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6433
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6437
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6443
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6447
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6451
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6455
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6459
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6467
		{
			yyVAL.str = "charset"
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6477
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6481
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6485
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6494
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6496
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6499
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6501
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6504
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6506
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6509
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6511
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6514
		{
			yyVAL.empty = struct{}{}
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6516
		{
			yyVAL.empty = struct{}{}
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6518
		{
			yyVAL.empty = struct{}{}
		}
	case 1306:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6522
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6527
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6531
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6536
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6538
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6542
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6548
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6552
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6559
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6565
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6569
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6575
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6579
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6586
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7112
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7121
		{
			decNesting(yylex)
		}
	case 1825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7126
		{
			skipToEnd(yylex)
		}
	case 1826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7131
		{
			skipToEnd(yylex)
		}
	case 1827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7135
		{
			skipToEnd(yylex)
		}
	case 1828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7139
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
