// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const BEGIN = 57624
const START = 57625
const TRANSACTION = 57626
const COMMIT = 57627
const ROLLBACK = 57628
const SAVEPOINT = 57629
const RELEASE = 57630
const WORK = 57631
const BIT = 57632
const TINYINT = 57633
const SMALLINT = 57634
const MEDIUMINT = 57635
const INT = 57636
const INTEGER = 57637
const BIGINT = 57638
const INTNUM = 57639
const REAL = 57640
const DOUBLE = 57641
const FLOAT_TYPE = 57642
const DECIMAL_TYPE = 57643
const NUMERIC = 57644
const TIME = 57645
const TIMESTAMP = 57646
const DATETIME = 57647
const YEAR = 57648
const CHAR = 57649
const VARCHAR = 57650
const BOOL = 57651
const CHARACTER = 57652
const VARBINARY = 57653
const NCHAR = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const BLOB = 57659
const TINYBLOB = 57660
const MEDIUMBLOB = 57661
const LONGBLOB = 57662
const JSON = 57663
const JSON_SCHEMA_VALID = 57664
const JSON_SCHEMA_VALIDATION_REPORT = 57665
const ENUM = 57666
const GEOMETRY = 57667
const POINT = 57668
const LINESTRING = 57669
const POLYGON = 57670
const GEOMETRYCOLLECTION = 57671
const MULTIPOINT = 57672
const MULTILINESTRING = 57673
const MULTIPOLYGON = 57674
const ASCII = 57675
const UNICODE = 57676
const NULLX = 57677
const AUTO_INCREMENT = 57678
const APPROXNUM = 57679
const SIGNED = 57680
const UNSIGNED = 57681
const ZEROFILL = 57682
const CODE = 57683
const COLLATION = 57684
const COLUMNS = 57685
const DATABASES = 57686
const ENGINES = 57687
const EVENT = 57688
const EXTENDED = 57689
const FIELDS = 57690
const FULL = 57691
const FUNCTION = 57692
const GTID_EXECUTED = 57693
const KEYSPACES = 57694
const OPEN = 57695
const PLUGINS = 57696
const PRIVILEGES = 57697
const PROCESSLIST = 57698
const SCHEMAS = 57699
const TABLES = 57700
const TRIGGERS = 57701
const USER = 57702
const VGTID_EXECUTED = 57703
const VITESS_KEYSPACES = 57704
const VITESS_METADATA = 57705
const VITESS_MIGRATIONS = 57706
const VITESS_REPLICATION_STATUS = 57707
const VITESS_SHARDS = 57708
const VITESS_TABLETS = 57709
const VITESS_TARGET = 57710
const VSCHEMA = 57711
const NAMES = 57712
const GLOBAL = 57713
const SESSION = 57714
const ISOLATION = 57715
const LEVEL = 57716
const READ = 57717
const WRITE = 57718
const ONLY = 57719
const REPEATABLE = 57720
const COMMITTED = 57721
const UNCOMMITTED = 57722
const SERIALIZABLE = 57723
const CURRENT_TIMESTAMP = 57724
const DATABASE = 57725
const CURRENT_DATE = 57726
const NOW = 57727
const CURRENT_TIME = 57728
const LOCALTIME = 57729
const LOCALTIMESTAMP = 57730
const CURRENT_USER = 57731
const UTC_DATE = 57732
const UTC_TIME = 57733
const UTC_TIMESTAMP = 57734
const DAY = 57735
const DAY_HOUR = 57736
const DAY_MICROSECOND = 57737
const DAY_MINUTE = 57738
const DAY_SECOND = 57739
const HOUR = 57740
const HOUR_MICROSECOND = 57741
const HOUR_MINUTE = 57742
const HOUR_SECOND = 57743
const MICROSECOND = 57744
const MINUTE = 57745
const MINUTE_MICROSECOND = 57746
const MINUTE_SECOND = 57747
const MONTH = 57748
const QUARTER = 57749
const SECOND = 57750
const SECOND_MICROSECOND = 57751
const YEAR_MONTH = 57752
const WEEK = 57753
const REPLACE = 57754
const CONVERT = 57755
const CAST = 57756
const SUBSTR = 57757
const SUBSTRING = 57758
const GROUP_CONCAT = 57759
const SEPARATOR = 57760
const TIMESTAMPADD = 57761
const TIMESTAMPDIFF = 57762
const WEIGHT_STRING = 57763
const LTRIM = 57764
const RTRIM = 57765
const TRIM = 57766
const JSON_ARRAY = 57767
const JSON_OBJECT = 57768
const JSON_QUOTE = 57769
const JSON_DEPTH = 57770
const JSON_TYPE = 57771
const JSON_LENGTH = 57772
const JSON_VALID = 57773
const JSON_ARRAY_APPEND = 57774
const JSON_ARRAY_INSERT = 57775
const JSON_INSERT = 57776
const JSON_MERGE = 57777
const JSON_MERGE_PATCH = 57778
const JSON_MERGE_PRESERVE = 57779
const JSON_REMOVE = 57780
const JSON_REPLACE = 57781
const JSON_SET = 57782
const JSON_UNQUOTE = 57783
const MATCH = 57784
const AGAINST = 57785
const BOOLEAN = 57786
const LANGUAGE = 57787
const WITH = 57788
const QUERY = 57789
const EXPANSION = 57790
const WITHOUT = 57791
const VALIDATION = 57792
const UNUSED = 57793
const ARRAY = 57794
const CUME_DIST = 57795
const DESCRIPTION = 57796
const DENSE_RANK = 57797
const EMPTY = 57798
const EXCEPT = 57799
const FIRST_VALUE = 57800
const GROUPING = 57801
const GROUPS = 57802
const JSON_TABLE = 57803
const LAG = 57804
const LAST_VALUE = 57805
const LATERAL = 57806
const LEAD = 57807
const NTH_VALUE = 57808
const NTILE = 57809
const OF = 57810
const OVER = 57811
const PERCENT_RANK = 57812
const RANK = 57813
const RECURSIVE = 57814
const ROW_NUMBER = 57815
const SYSTEM = 57816
const WINDOW = 57817
const ACTIVE = 57818
const ADMIN = 57819
const BUCKETS = 57820
const CLONE = 57821
const COMPONENT = 57822
const DEFINITION = 57823
const ENFORCED = 57824
const EXCLUDE = 57825
const FOLLOWING = 57826
const GEOMCOLLECTION = 57827
const GET_MASTER_PUBLIC_KEY = 57828
const HISTOGRAM = 57829
const HISTORY = 57830
const INACTIVE = 57831
const INVISIBLE = 57832
const LOCKED = 57833
const MASTER_COMPRESSION_ALGORITHMS = 57834
const MASTER_PUBLIC_KEY_PATH = 57835
const MASTER_TLS_CIPHERSUITES = 57836
const MASTER_ZSTD_COMPRESSION_LEVEL = 57837
const NESTED = 57838
const NETWORK_NAMESPACE = 57839
const NOWAIT = 57840
const NULLS = 57841
const OJ = 57842
const OLD = 57843
const OPTIONAL = 57844
const ORDINALITY = 57845
const ORGANIZATION = 57846
const OTHERS = 57847
const PATH = 57848
const PERSIST = 57849
const PERSIST_ONLY = 57850
const PRECEDING = 57851
const PRIVILEGE_CHECKS_USER = 57852
const PROCESS = 57853
const RANDOM = 57854
const REFERENCE = 57855
const REQUIRE_ROW_FORMAT = 57856
const RESOURCE = 57857
const RESPECT = 57858
const RESTART = 57859
const RETAIN = 57860
const REUSE = 57861
const ROLE = 57862
const SECONDARY = 57863
const SECONDARY_ENGINE = 57864
const SECONDARY_LOAD = 57865
const SECONDARY_UNLOAD = 57866
const SKIP = 57867
const SRID = 57868
const THREAD_PRIORITY = 57869
const TIES = 57870
const UNBOUNDED = 57871
const VCPU = 57872
const VISIBLE = 57873
const FORMAT = 57874
const TREE = 57875
const VITESS = 57876
const TRADITIONAL = 57877
const LOCAL = 57878
const LOW_PRIORITY = 57879
const NO_WRITE_TO_BINLOG = 57880
const LOGS = 57881
const ERROR = 57882
const GENERAL = 57883
const HOSTS = 57884
const OPTIMIZER_COSTS = 57885
const USER_RESOURCES = 57886
const SLOW = 57887
const CHANNEL = 57888
const RELAY = 57889
const EXPORT = 57890
const AVG_ROW_LENGTH = 57891
const CONNECTION = 57892
const CHECKSUM = 57893
const DELAY_KEY_WRITE = 57894
const ENCRYPTION = 57895
const ENGINE = 57896
const INSERT_METHOD = 57897
const MAX_ROWS = 57898
const MIN_ROWS = 57899
const PACK_KEYS = 57900
const PASSWORD = 57901
const FIXED = 57902
const DYNAMIC = 57903
const COMPRESSED = 57904
const REDUNDANT = 57905
const COMPACT = 57906
const ROW_FORMAT = 57907
const STATS_AUTO_RECALC = 57908
const STATS_PERSISTENT = 57909
const STATS_SAMPLE_PAGES = 57910
const STORAGE = 57911
const MEMORY = 57912
const DISK = 57913
const PARTITIONS = 57914
const LINEAR = 57915
const RANGE = 57916
const LIST = 57917
const SUBPARTITION = 57918
const SUBPARTITIONS = 57919
const HASH = 57920

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	596, 145,
	-2, 151,
	-1, 48,
	131, 151,
	171, 151,
	327, 151,
	-2, 456,
	-1, 55,
	35, 671,
	231, 671,
	242, 671,
	277, 685,
	278, 685,
	-2, 673,
	-1, 60,
	233, 698,
	-2, 696,
	-1, 114,
	230, 1217,
	-2, 119,
	-1, 116,
	1, 146,
	596, 146,
	-2, 151,
	-1, 126,
	132, 358,
	236, 358,
	-2, 450,
	-1, 145,
	131, 151,
	171, 151,
	327, 151,
	-2, 465,
	-1, 676,
	215, 1238,
	-2, 1234,
	-1, 677,
	215, 1239,
	-2, 1235,
	-1, 751,
	59, 766,
	-2, 781,
	-1, 788,
	147, 1636,
	-2, 112,
	-1, 789,
	147, 1482,
	-2, 113,
	-1, 795,
	147, 1565,
	-2, 1211,
	-1, 943,
	147, 1413,
	-2, 1208,
	-1, 982,
	241, 41,
	246, 41,
	-2, 369,
	-1, 1059,
	1, 504,
	596, 504,
	-2, 151,
	-1, 1296,
	59, 767,
	-2, 786,
	-1, 1297,
	59, 768,
	-2, 787,
	-1, 1350,
	131, 151,
	171, 151,
	327, 151,
	-2, 400,
	-1, 1428,
	132, 358,
	236, 358,
	-2, 450,
	-1, 1437,
	241, 42,
	246, 42,
	-2, 370,
	-1, 1736,
	215, 1243,
	-2, 1237,
	-1, 1819,
	131, 151,
	171, 151,
	327, 151,
	-2, 401,
	-1, 1826,
	25, 170,
	-2, 172,
	-1, 2060,
	86, 39,
	-2, 823,
	-1, 2112,
	77, 94,
	86, 94,
	-2, 843,
	-1, 2177,
	571, 599,
	-2, 586,
	-1, 2310,
	49, 1179,
	-2, 1173,
	-1, 2516,
	86, 39,
	-2, 824,
	-1, 2554,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 815,
	-1, 2848,
	22, 1567,
	32, 1567,
	172, 1567,
	253, 1567,
	307, 1567,
	308, 1567,
	309, 1567,
	310, 1567,
	311, 1567,
	312, 1567,
	313, 1567,
	315, 1567,
	316, 1567,
	317, 1567,
	318, 1567,
	319, 1567,
	320, 1567,
	321, 1567,
	322, 1567,
	323, 1567,
	324, 1567,
	325, 1567,
	326, 1567,
	328, 1567,
	330, 1567,
	331, 1567,
	332, 1567,
	333, 1567,
	334, 1567,
	335, 1567,
	336, 1567,
	337, 1567,
	338, 1567,
	341, 1567,
	342, 1567,
	343, 1567,
	344, 1567,
	345, 1567,
	346, 1567,
	347, 1567,
	348, 1567,
	349, 1567,
	461, 1567,
	-2, 544,
}

const yyPrivate = 57344

const yyLast = 41706

var yyAct = [...]int{
	676, 2269, 2915, 2914, 2897, 2891, 2784, 1816, 1770, 2621,
	2846, 2850, 1353, 2448, 2830, 1750, 2363, 685, 2370, 2014,
	2743, 2404, 2760, 2651, 2431, 1752, 96, 2372, 1122, 1275,
	3, 2321, 2324, 678, 2048, 1880, 2322, 669, 37, 1311,
	2430, 744, 2325, 667, 594, 1774, 620, 2525, 679, 2268,
	2267, 182, 766, 2656, 182, 2433, 559, 182, 1012, 2519,
	2106, 2319, 574, 2083, 182, 668, 2075, 1789, 2545, 2311,
	670, 1849, 182, 2511, 590, 592, 2174, 1854, 1870, 946,
	2145, 2144, 2146, 2214, 591, 1071, 1805, 182, 2095, 767,
	38, 1407, 793, 154, 1298, 1793, 2067, 586, 598, 2050,
	1706, 1636, 1869, 746, 2231, 140, 1646, 36, 1435, 574,
	1889, 1594, 574, 182, 574, 748, 1730, 752, 1781, 1922,
	2138, 1856, 972, 1342, 1320, 1796, 1794, 95, 1451, 1207,
	977, 2114, 1613, 1278, 603, 769, 1658, 790, 1143, 1539,
	953, 1705, 1543, 1442, 950, 980, 983, 1525, 954, 978,
	91, 1867, 979, 1341, 1100, 1339, 1775, 758, 1325, 1702,
	157, 1114, 1548, 1845, 1120, 117, 118, 1402, 123, 124,
	754, 780, 1427, 756, 97, 1214, 1055, 85, 76, 1743,
	1210, 89, 581, 2793, 2167, 2898, 2401, 753, 98, 1882,
	1883, 1884, 1882, 2422, 2193, 2192, 1920, 2165, 1511, 755,
	77, 1014, 2604, 1144, 2222, 102, 2419, 990, 119, 774,
	2223, 779, 531, 2918, 1028, 1029, 90, 1032, 1033, 1034,
	1035, 125, 8, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 7, 1017,
	1144, 760, 947, 6, 2924, 2925, 104, 105, 582, 108,
	2420, 745, 114, 1747, 1748, 179, 747, 1601, 526, 1600,
	184, 185, 186, 1599, 787, 794, 1598, 1597, 1596, 1579,
	1588, 761, 2426, 993, 2865, 768, 970, 119, 740, 741,
	742, 743, 969, 968, 751, 584, 2046, 585, 2307, 2077,
	2911, 963, 1018, 1019, 1020, 2875, 2888, 2917, 958, 2387,
	2580, 1606, 2739, 2738, 2614, 1733, 178, 2615, 1154, 1016,
	1015, 2910, 782, 783, 1030, 1861, 2840, 2901, 1960, 2810,
	2886, 2622, 2831, 1908, 2839, 2809, 2230, 78, 2925, 2482,
	120, 1417, 142, 78, 2123, 994, 80, 2122, 2201, 1859,
	2124, 119, 2200, 162, 2047, 1154, 2360, 2361, 78, 178,
	2359, 2086, 78, 1811, 1812, 1343, 2221, 1344, 1957, 1810,
	1058, 1025, 1095, 1096, 1117, 1090, 1176, 738, 737, 2785,
	1078, 1091, 1078, 120, 152, 1079, 2087, 1079, 2168, 141,
	2423, 1084, 1958, 1077, 2135, 1076, 162, 2748, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1185, 1184, 1186, 1187, 1688,
	159, 2669, 160, 1150, 87, 2522, 1142, 1829, 1828, 563,
	87, 178, 563, 2257, 563, 1749, 563, 2473, 129, 130,
	151, 150, 177, 2471, 572, 87, 1587, 2450, 2128, 87,
	576, 570, 1282, 1531, 1107, 120, 1109, 2175, 1890, 962,
	1150, 2196, 964, 159, 1923, 160, 2443, 1526, 162, 1031,
	2900, 1111, 1092, 1097, 2444, 1099, 971, 1934, 1931, 1933,
	1932, 1928, 1085, 1098, 1060, 177, 1116, 2606, 1501, 1093,
	1094, 1054, 2209, 2605, 1106, 1108, 1939, 967, 1858, 1064,
	1065, 1037, 1589, 1590, 1591, 1036, 1680, 1669, 1670, 1671,
	1672, 1682, 1673, 1674, 1675, 1687, 1683, 1676, 1677, 1684,
	1685, 1686, 1678, 1679, 1681, 159, 1927, 160, 2451, 967,
	1053, 1067, 1502, 1936, 1503, 1937, 1929, 1938, 146, 127,
	153, 134, 126, 2452, 147, 148, 182, 177, 182, 1925,
	163, 182, 2726, 973, 87, 965, 967, 974, 959, 168,
	135, 1893, 1285, 2602, 2905, 961, 960, 2866, 1926, 1420,
	1790, 1001, 974, 1010, 138, 136, 131, 132, 133, 137,
	574, 1124, 574, 574, 1009, 2258, 128, 1104, 999, 1008,
	992, 1105, 1007, 163, 1057, 139, 1006, 574, 574, 1005,
	1004, 1110, 168, 1003, 992, 1011, 998, 1149, 1146, 1147,
	1148, 1153, 1155, 1152, 965, 1151, 1188, 2376, 1188, 2884,
	951, 1441, 1145, 1958, 1103, 564, 2213, 951, 564, 1136,
	564, 949, 564, 1088, 951, 2895, 37, 992, 1074, 986,
	1080, 1081, 1082, 1083, 1149, 1146, 1147, 1148, 1153, 1155,
	1152, 985, 1151, 1776, 1777, 163, 1532, 1540, 1868, 1145,
	781, 2210, 1118, 1119, 168, 2792, 2166, 1914, 966, 1536,
	2051, 2053, 155, 2169, 2601, 1130, 2198, 1021, 2394, 2386,
	2185, 2195, 992, 1415, 1414, 1413, 1056, 1910, 991, 1537,
	1411, 2366, 1027, 995, 985, 1191, 1192, 1193, 1194, 2226,
	966, 1972, 991, 996, 2523, 1199, 530, 1202, 985, 988,
	989, 525, 951, 2749, 1002, 155, 982, 986, 2781, 2208,
	2561, 1860, 2207, 997, 2541, 1440, 1112, 966, 1189, 1190,
	2119, 1000, 1530, 2808, 2798, 991, 2367, 981, 2082, 2038,
	995, 985, 2424, 2425, 1742, 1273, 1126, 1127, 1125, 149,
	996, 1329, 1817, 1254, 1069, 2427, 1188, 1187, 182, 2916,
	1195, 2369, 574, 574, 1513, 1512, 1514, 1515, 1516, 116,
	2358, 763, 1115, 1101, 81, 2364, 111, 155, 182, 1959,
	991, 2216, 143, 2804, 2216, 144, 2215, 1013, 2597, 2215,
	2535, 1924, 2374, 2375, 746, 1291, 1533, 574, 77, 2365,
	992, 182, 86, 1288, 1268, 1549, 574, 1292, 86, 1289,
	1345, 1140, 574, 748, 992, 1274, 1073, 1286, 2250, 1216,
	1212, 1139, 1213, 86, 2158, 2856, 1659, 86, 1986, 1087,
	2052, 2371, 1659, 1159, 790, 1158, 1159, 1137, 1066, 2854,
	1089, 2665, 1138, 1075, 2572, 1063, 112, 2893, 2858, 2859,
	2894, 2571, 2892, 1897, 1450, 1449, 2374, 2375, 1290, 1439,
	1902, 1907, 95, 2855, 1905, 1001, 999, 1260, 1261, 1262,
	1263, 1264, 2880, 1902, 1527, 1909, 1528, 1274, 2562, 1529,
	184, 185, 186, 1279, 1638, 156, 161, 158, 164, 165,
	166, 167, 169, 170, 171, 172, 2373, 1906, 991, 1618,
	1026, 173, 174, 175, 176, 2906, 1330, 2816, 2376, 1160,
	1904, 1340, 991, 1619, 1620, 1617, 1102, 2774, 985, 988,
	989, 2232, 951, 98, 2908, 2881, 982, 986, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 1276,
	2734, 87, 745, 1287, 173, 174, 175, 176, 1550, 2817,
	1059, 1310, 2733, 1307, 747, 1616, 1072, 2724, 2637, 2775,
	2373, 2636, 794, 1305, 1639, 2579, 182, 1964, 1965, 1966,
	1403, 2578, 2376, 2402, 1335, 1336, 1293, 690, 691, 692,
	1412, 1180, 1181, 1182, 1183, 1185, 1184, 1186, 1187, 2907,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 574, 2234, 1437, 2392, 1305, 173, 174, 175, 176,
	1160, 1446, 1663, 2368, 2142, 1448, 1664, 2141, 574, 574,
	785, 574, 1864, 574, 574, 1521, 574, 574, 574, 574,
	574, 574, 1182, 1183, 1185, 1184, 1186, 1187, 1506, 1505,
	1157, 574, 1158, 1159, 1520, 182, 1484, 1504, 1518, 1418,
	1419, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1184, 1186,
	1187, 182, 1160, 1495, 2244, 2243, 2242, 2236, 1489, 2240,
	1486, 2235, 574, 2233, 182, 184, 185, 186, 2238, 2569,
	1433, 2801, 1485, 1995, 1460, 1538, 1497, 2237, 574, 2800,
	182, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1184,
	1186, 1187, 1426, 1160, 2239, 2241, 182, 1519, 2778, 1487,
	1488, 1517, 1447, 182, 2777, 1493, 1494, 1508, 1314, 1445,
	1481, 2776, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 574, 184, 185, 186, 2729, 2126, 1479, 1480, 2664,
	2662, 1157, 2633, 1158, 1159, 574, 574, 1453, 2576, 1454,
	2252, 1456, 1458, 1444, 1410, 1462, 1464, 1466, 1468, 1470,
	2568, 2151, 2139, 182, 1424, 1422, 1160, 1315, 1423, 1270,
	1436, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1162, 1918,
	1507, 1160, 1545, 1917, 2479, 2759, 1305, 1773, 1160, 1416,
	1553, 2756, 1755, 1157, 1580, 1158, 1159, 1557, 1482, 1559,
	1560, 1561, 1562, 1280, 1546, 1509, 1566, 1160, 1496, 1637,
	1492, 1640, 1644, 1491, 1490, 1160, 1443, 1443, 1578, 184,
	185, 186, 1649, 574, 1316, 2003, 1541, 1643, 1643, 1113,
	1782, 1783, 2447, 1129, 1157, 1160, 1158, 1159, 574, 574,
	119, 2755, 1160, 1641, 1641, 969, 968, 2073, 2899, 1305,
	2718, 1551, 1552, 94, 1160, 101, 2717, 528, 1612, 1318,
	2871, 1305, 1614, 2477, 1305, 1556, 100, 577, 99, 1555,
	1622, 2882, 1563, 1564, 1565, 739, 2620, 1160, 1621, 1703,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1577, 2176, 1576, 2154, 1157, 1305, 1158,
	1159, 182, 1825, 1734, 2073, 2837, 574, 2073, 2824, 1584,
	1585, 1305, 1157, 1160, 1158, 1159, 952, 2023, 1305, 1157,
	2091, 1158, 1159, 1982, 1317, 1903, 1615, 1977, 1660, 2320,
	182, 1703, 2534, 574, 2862, 1305, 1976, 2536, 1157, 2534,
	1158, 1159, 1156, 182, 2073, 2820, 1157, 574, 1158, 1159,
	2812, 1305, 182, 2803, 182, 2073, 182, 182, 574, 2015,
	92, 574, 1760, 2092, 1761, 1160, 1157, 1736, 1158, 1159,
	2084, 93, 574, 1157, 2092, 1158, 1159, 2496, 1734, 2073,
	2794, 1826, 1902, 95, 2382, 1157, 790, 1158, 1159, 790,
	2612, 2791, 2295, 1738, 1739, 1981, 1608, 1610, 1611, 184,
	185, 186, 95, 1878, 1160, 184, 185, 186, 1157, 1876,
	1158, 1159, 1809, 1766, 1160, 101, 1792, 1735, 2496, 1305,
	1609, 2073, 2725, 2612, 1305, 1305, 100, 574, 99, 2353,
	1835, 1836, 1837, 1838, 1871, 1872, 1873, 94, 1958, 1875,
	1877, 2092, 1736, 100, 1157, 92, 1158, 1159, 2789, 2073,
	2610, 1821, 94, 574, 1902, 1305, 93, 2539, 1305, 574,
	1446, 1754, 1973, 1446, 1820, 1446, 1156, 1305, 1803, 2084,
	1830, 1901, 1831, 1832, 1833, 1834, 2008, 677, 760, 1891,
	2008, 1305, 1992, 1160, 2384, 2383, 2556, 1768, 1841, 1842,
	1843, 1844, 1787, 1851, 2827, 1305, 1157, 1305, 1158, 1159,
	2115, 574, 1824, 1637, 1857, 1785, 2380, 2381, 1637, 1637,
	1305, 1973, 1808, 1807, 794, 2380, 2379, 794, 2092, 1305,
	1991, 1823, 1645, 1902, 1822, 1973, 1305, 1885, 183, 1651,
	1652, 183, 1888, 1160, 183, 1157, 1780, 1158, 1159, 575,
	2534, 183, 1958, 2194, 182, 1157, 1863, 1158, 1159, 183,
	1309, 182, 1406, 2179, 2172, 2173, 182, 182, 1160, 1745,
	182, 1592, 182, 2116, 183, 87, 2722, 1852, 1896, 182,
	2745, 1899, 2118, 1900, 1535, 1862, 182, 1337, 1866, 976,
	1911, 1737, 1847, 1848, 1740, 1741, 575, 1160, 1874, 575,
	183, 575, 975, 1160, 2073, 2072, 1312, 993, 2715, 1895,
	2115, 1852, 182, 1894, 1913, 1898, 2676, 574, 1176, 1915,
	1916, 1172, 1912, 1173, 1157, 2498, 1158, 1159, 750, 1160,
	1176, 1765, 2225, 1160, 1406, 1405, 2596, 1174, 1175, 1171,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1184, 1186,
	1187, 2598, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1185,
	1184, 1186, 1187, 2593, 1176, 1921, 1971, 1949, 1950, 994,
	1351, 1350, 1952, 2116, 1157, 2574, 1158, 1159, 2405, 1443,
	2143, 1953, 1958, 1160, 2148, 2494, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1185, 1184, 1186, 1187, 1160, 2069, 1157,
	2488, 1158, 1159, 1160, 2487, 87, 1408, 1942, 1160, 1850,
	1058, 2485, 1160, 94, 2923, 2484, 2445, 2407, 1614, 2403,
	1160, 2581, 2180, 1176, 1846, 1969, 1840, 1839, 1157, 1160,
	1158, 1159, 1523, 1968, 1157, 1970, 1158, 1159, 1438, 1062,
	1160, 1068, 1434, 1404, 1070, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1185, 1184, 1186, 1187, 1160, 113, 2546, 2547,
	1157, 1956, 1158, 1159, 1157, 2032, 1158, 1159, 2147, 2449,
	1973, 2582, 2583, 2584, 2746, 1475, 182, 1861, 1758, 2031,
	1967, 2921, 1615, 2877, 182, 2030, 2851, 1160, 2057, 574,
	2029, 2549, 2552, 2399, 2028, 574, 1582, 2061, 2398, 2397,
	2320, 2044, 2027, 2159, 1643, 1943, 574, 2342, 2340, 2055,
	2868, 2026, 2343, 2341, 1157, 2148, 1158, 1159, 2838, 2551,
	1641, 1160, 2025, 2339, 1985, 1476, 1477, 1478, 1157, 182,
	1158, 1159, 2338, 182, 1157, 1772, 1158, 1159, 2024, 1157,
	1313, 1158, 1159, 1157, 1160, 1158, 1159, 1764, 2125, 2074,
	2088, 1157, 2540, 1158, 1159, 2001, 2300, 37, 1583, 2299,
	1157, 2773, 1158, 1159, 2585, 1736, 2108, 1160, 2655, 2018,
	2657, 1157, 2527, 1158, 1159, 2097, 2100, 2101, 2102, 2098,
	2526, 2099, 2103, 1472, 2530, 2546, 2547, 1157, 2309, 1158,
	1159, 2070, 574, 2344, 1160, 2101, 2102, 1534, 182, 1160,
	2646, 1279, 2645, 2017, 736, 182, 2378, 2136, 2137, 2045,
	1160, 2586, 2587, 2312, 2314, 1735, 2133, 574, 1157, 764,
	1158, 1159, 2315, 1655, 574, 2171, 2016, 765, 1446, 1446,
	1473, 1474, 2152, 574, 2071, 2081, 2107, 1656, 1023, 1022,
	2459, 1160, 92, 2129, 2113, 2191, 2066, 2150, 2147, 2013,
	2644, 2190, 1157, 93, 1158, 1159, 182, 182, 182, 182,
	182, 92, 2219, 2120, 1857, 1128, 2117, 2187, 94, 2186,
	2532, 2127, 93, 182, 182, 1157, 2012, 1158, 1159, 120,
	94, 2011, 2130, 1782, 1783, 2903, 2395, 1946, 2790, 182,
	1983, 2140, 2009, 2741, 1334, 2377, 2105, 1769, 1157, 1935,
	1158, 1159, 772, 773, 2160, 2161, 2162, 2149, 1637, 101,
	2512, 1962, 99, 183, 2155, 183, 2156, 2765, 183, 2189,
	100, 1426, 99, 2005, 2764, 1157, 2298, 1158, 1159, 2663,
	1157, 94, 1158, 1159, 2297, 101, 2181, 2182, 1160, 2661,
	746, 1157, 2660, 1158, 1159, 2653, 100, 575, 99, 575,
	575, 2594, 2188, 2652, 2531, 2249, 660, 2529, 2408, 1975,
	1886, 1643, 1421, 1643, 575, 575, 1643, 2035, 2036, 574,
	101, 1643, 1157, 1160, 1158, 1159, 2227, 1641, 2228, 1641,
	771, 100, 1641, 100, 2211, 574, 2520, 1641, 2084, 2282,
	2283, 2284, 2285, 2879, 2878, 2879, 2272, 2289, 2275, 2069,
	182, 2259, 1993, 2276, 574, 1756, 1331, 1322, 2779, 2246,
	2229, 2245, 2567, 574, 106, 107, 762, 103, 573, 88,
	574, 574, 1, 182, 182, 182, 182, 182, 2853, 543,
	1746, 1277, 2849, 2217, 1510, 182, 2218, 1500, 2623, 2263,
	182, 2289, 2270, 182, 2270, 182, 1704, 2270, 182, 182,
	182, 2742, 2270, 2332, 2413, 2004, 2411, 752, 2352, 1352,
	2303, 2302, 1892, 2592, 1855, 792, 2317, 984, 948, 1157,
	955, 1158, 1159, 145, 1818, 1819, 2833, 1292, 2108, 2290,
	110, 944, 109, 2393, 2288, 2418, 987, 1086, 2326, 1887,
	182, 2613, 2134, 2301, 1827, 2304, 2277, 2278, 2279, 2280,
	2281, 2415, 2414, 574, 1157, 2354, 1158, 1159, 2355, 2412,
	754, 574, 1357, 2294, 1355, 2323, 182, 1356, 2333, 2429,
	2323, 2336, 2345, 1354, 1359, 183, 182, 753, 95, 575,
	575, 1358, 1994, 1586, 571, 2356, 2390, 2391, 1483, 2104,
	180, 182, 1545, 1346, 182, 183, 1323, 2349, 2350, 2331,
	2334, 2335, 2362, 2337, 2460, 1024, 533, 2389, 2388, 2385,
	1919, 2437, 539, 1200, 575, 1581, 2296, 1524, 183, 1303,
	1299, 2121, 791, 575, 2097, 2100, 2101, 2102, 2098, 575,
	2099, 2103, 2409, 2436, 1300, 784, 1757, 2428, 1857, 2291,
	2292, 2293, 2059, 2328, 2524, 2440, 2308, 2310, 2076, 1554,
	2313, 1303, 1299, 2306, 2410, 2772, 1558, 2654, 2825, 1762,
	1763, 1302, 2131, 1301, 1319, 2493, 1300, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 2455, 2454, 574, 182, 1984, 1657,
	2462, 1797, 2463, 2457, 2458, 1607, 596, 595, 2469, 593,
	2062, 1296, 1297, 1302, 2085, 1301, 1163, 680, 2049, 1332,
	2096, 2094, 2093, 1944, 2466, 2467, 1595, 2468, 1804, 2548,
	2470, 2544, 2472, 2913, 2474, 2845, 1799, 1795, 2068, 604,
	597, 589, 2564, 2435, 2197, 2446, 2199, 2132, 2442, 1141,
	1295, 583, 957, 1654, 182, 2747, 2796, 1961, 2481, 1294,
	1667, 1668, 2400, 2177, 1879, 2518, 2513, 2514, 63, 41,
	1695, 578, 2570, 2521, 2864, 1132, 778, 182, 32, 31,
	2528, 30, 29, 2533, 28, 23, 2553, 22, 21, 20,
	19, 25, 18, 17, 16, 182, 2543, 2421, 182, 182,
	182, 2874, 2902, 183, 115, 2550, 50, 47, 574, 574,
	2437, 45, 122, 2565, 2558, 121, 2599, 2600, 2559, 2560,
	2557, 48, 2566, 44, 1061, 2575, 42, 2577, 27, 26,
	15, 14, 2436, 13, 12, 11, 10, 9, 575, 5,
	4, 35, 34, 33, 1135, 24, 2, 2417, 2416, 2164,
	574, 574, 574, 574, 1881, 575, 575, 0, 575, 0,
	575, 575, 0, 575, 575, 575, 575, 575, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 575, 2603,
	0, 2619, 183, 2607, 2608, 2609, 0, 2617, 2618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 575,
	0, 183, 1643, 2629, 1643, 1788, 182, 1791, 0, 0,
	1595, 0, 0, 0, 0, 575, 0, 183, 1641, 0,
	1641, 2649, 0, 0, 2632, 0, 0, 0, 0, 0,
	574, 0, 574, 183, 0, 2640, 2641, 0, 0, 2628,
	183, 0, 0, 0, 0, 0, 0, 0, 2678, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 575, 2670,
	746, 2666, 2659, 2672, 1643, 0, 37, 2658, 2650, 2668,
	0, 0, 575, 575, 0, 2674, 792, 0, 792, 792,
	1641, 0, 0, 2270, 0, 2270, 0, 574, 0, 0,
	183, 0, 0, 1131, 1133, 2723, 0, 2326, 0, 0,
	182, 2326, 2682, 0, 0, 0, 0, 0, 0, 0,
	0, 2679, 2680, 574, 0, 0, 0, 0, 2719, 0,
	2721, 0, 0, 2323, 2720, 2735, 0, 2737, 2736, 0,
	0, 0, 0, 0, 574, 0, 0, 0, 574, 574,
	0, 2744, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 0, 0, 2730, 2731, 2732, 0, 0, 0, 0,
	2766, 2767, 0, 2727, 2769, 575, 575, 574, 0, 0,
	0, 0, 0, 2771, 2768, 2783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2780, 0, 0, 0, 746, 1595, 0, 0,
	0, 0, 1271, 0, 1930, 0, 574, 0, 0, 1940,
	1941, 2786, 0, 1945, 2788, 0, 0, 2782, 0, 0,
	0, 182, 1948, 0, 0, 0, 0, 0, 183, 1951,
	2326, 0, 0, 575, 0, 0, 574, 182, 0, 0,
	0, 0, 0, 0, 2805, 0, 2799, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 0, 183, 1283, 1284,
	575, 0, 2802, 0, 0, 0, 0, 0, 0, 37,
	183, 0, 574, 0, 575, 0, 0, 0, 0, 183,
	0, 183, 0, 183, 183, 575, 0, 2795, 575, 0,
	0, 0, 0, 1327, 574, 574, 0, 0, 0, 575,
	0, 2818, 792, 574, 0, 2828, 0, 0, 1347, 0,
	0, 2826, 182, 574, 2832, 0, 0, 0, 37, 0,
	0, 2841, 2744, 2834, 0, 0, 0, 2844, 0, 2823,
	0, 2860, 2852, 0, 2857, 0, 0, 0, 0, 0,
	0, 2867, 0, 0, 0, 0, 0, 0, 0, 0,
	2873, 2876, 0, 574, 575, 0, 0, 0, 0, 0,
	0, 2883, 574, 0, 0, 0, 2890, 2885, 2323, 0,
	0, 2889, 2887, 0, 0, 2896, 0, 0, 0, 0,
	575, 0, 1643, 0, 0, 0, 575, 2904, 0, 0,
	0, 0, 0, 0, 2909, 0, 0, 0, 1641, 0,
	0, 0, 0, 2912, 0, 0, 2920, 2919, 0, 0,
	2922, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 1643, 0, 575, 0,
	0, 0, 0, 0, 0, 1641, 0, 0, 0, 0,
	0, 0, 1641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 2112, 0, 183, 0,
	0, 0, 0, 183, 183, 0, 0, 183, 0, 183,
	0, 0, 0, 0, 0, 0, 183, 948, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	1271, 0, 0, 0, 1452, 1452, 0, 1452, 0, 1452,
	1452, 0, 1461, 1452, 1452, 1452, 1452, 1452, 0, 183,
	0, 0, 0, 0, 575, 1271, 1271, 948, 0, 0,
	0, 2157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2202,
	2203, 2204, 2205, 2206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1595, 2212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 792, 0, 0,
	0, 0, 2220, 0, 0, 0, 0, 0, 0, 0,
	0, 792, 792, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	0, 661, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 575, 0, 0, 0,
	0, 0, 575, 0, 0, 0, 0, 0, 0, 1650,
	0, 0, 0, 575, 0, 0, 1271, 0, 0, 0,
	560, 0, 0, 0, 1665, 1666, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 529, 183, 0, 569, 0,
	183, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 0, 0,
	0, 792, 0, 0, 0, 0, 547, 0, 759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 0, 777, 0, 777, 0, 0, 0,
	0, 0, 1759, 0, 529, 0, 0, 0, 0, 575,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 542, 1771,
	0, 0, 0, 2396, 575, 0, 0, 555, 0, 0,
	0, 575, 0, 1327, 0, 0, 792, 0, 0, 0,
	575, 0, 552, 0, 792, 0, 0, 792, 0, 2432,
	0, 0, 0, 0, 0, 0, 0, 0, 948, 2441,
	0, 0, 0, 183, 183, 183, 183, 183, 0, 2872,
	0, 0, 0, 0, 2453, 564, 0, 2456, 0, 1374,
	183, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 0, 534,
	548, 0, 566, 955, 565, 538, 0, 536, 540, 549,
	541, 0, 535, 0, 546, 0, 0, 537, 550, 551,
	553, 556, 557, 558, 554, 0, 544, 567, 0, 948,
	0, 0, 0, 0, 0, 955, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 948, 0, 0,
	0, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 1362,
	575, 0, 0, 0, 0, 0, 0, 575, 575, 0,
	183, 183, 183, 183, 183, 0, 0, 0, 0, 0,
	2573, 0, 183, 0, 0, 0, 0, 183, 0, 0,
	183, 0, 183, 0, 0, 183, 183, 183, 2588, 0,
	0, 2589, 2590, 2591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1955, 0, 0, 0, 183, 0, 0,
	1375, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 575, 561,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 183, 0, 0, 1388, 1391, 1392, 1393, 1394, 1395,
	1396, 0, 1397, 1398, 1399, 1400, 1401, 1376, 1377, 1378,
	1379, 1360, 1361, 1389, 0, 1363, 0, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 0, 0, 1373, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 0, 0, 0,
	0, 78, 39, 40, 80, 0, 0, 529, 0, 529,
	0, 0, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 43, 69, 70, 0, 67,
	71, 0, 0, 575, 183, 0, 0, 0, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1771, 0, 56, 0, 0,
	178, 2063, 0, 0, 0, 0, 0, 0, 87, 0,
	0, 2170, 2078, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 120, 0, 142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 1390, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 183, 183, 183, 152, 0,
	0, 0, 0, 141, 0, 575, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 160, 1272, 2153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1429, 1430, 151, 150, 177, 575, 575, 575,
	575, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	2178, 0, 0, 0, 1304, 0, 0, 0, 0, 2183,
	2806, 46, 49, 52, 51, 54, 0, 66, 0, 529,
	75, 72, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 759,
	0, 0, 0, 55, 83, 82, 0, 0, 64, 65,
	53, 0, 0, 183, 0, 0, 73, 74, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 0, 575,
	0, 0, 146, 1431, 153, 0, 1428, 0, 147, 148,
	0, 0, 57, 58, 163, 59, 60, 61, 62, 0,
	0, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1271, 0, 1271, 0, 0, 1271, 0, 0, 0, 0,
	1271, 0, 0, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 792, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 1452, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2305, 575, 0, 0, 0, 575, 575, 0, 0, 792,
	0, 0, 0, 1271, 0, 0, 2330, 1452, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 0, 155, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 0, 0, 86, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 1272, 0, 0, 0, 948,
	0, 0, 1271, 575, 183, 0, 0, 1771, 0, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	1272, 1272, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	0, 0, 1498, 0, 0, 0, 143, 0, 0, 144,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	0, 575, 575, 0, 0, 0, 0, 0, 0, 0,
	575, 1544, 0, 0, 0, 0, 0, 0, 0, 183,
	575, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 1567, 1568, 529, 529, 529, 529, 529,
	529, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 0, 2305, 0, 0, 0, 0, 0, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 156,
	161, 158, 164, 165, 166, 167, 169, 170, 171, 172,
	0, 0, 0, 0, 0, 173, 174, 175, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 777, 0,
	0, 0, 178, 0, 0, 777, 777, 0, 0, 0,
	0, 1272, 0, 1425, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 120, 0, 142, 0,
	0, 0, 0, 0, 1771, 1771, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 777, 1544, 777, 777, 777,
	777, 777, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 141, 2624, 2625, 2626, 2627,
	0, 0, 1498, 0, 0, 2058, 0, 0, 688, 689,
	0, 0, 0, 0, 1642, 0, 159, 777, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 0, 0, 1429, 1430, 151, 150, 177, 0,
	0, 1271, 0, 1271, 529, 0, 0, 0, 0, 0,
	0, 1544, 0, 529, 0, 529, 0, 529, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 0, 0, 0, 0, 2671, 0, 2673, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	0, 0, 0, 0, 146, 1431, 153, 0, 1428, 0,
	147, 148, 0, 1771, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 776, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2762, 0, 0, 0, 2762, 2762, 0, 0, 1306, 1308,
	0, 0, 0, 0, 0, 0, 2684, 2686, 2685, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 626, 0, 0, 0,
	0, 0, 587, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	0, 0, 529, 0, 770, 0, 0, 529, 529, 0,
	0, 529, 1771, 1947, 0, 0, 0, 0, 155, 0,
	529, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 0, 2819, 0,
	687, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 0, 0, 0,
	792, 792, 0, 0, 0, 0, 0, 0, 0, 2842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2847,
	0, 0, 0, 0, 0, 0, 777, 0, 143, 0,
	0, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 749, 1771,
	79, 0, 0, 0, 0, 0, 0, 0, 2847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2690, 2691, 0, 956, 0, 0, 0, 0, 0,
	0, 0, 0, 777, 777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1544, 0, 0, 529, 0, 0,
	0, 0, 0, 0, 0, 1498, 0, 0, 0, 0,
	0, 156, 161, 158, 164, 165, 166, 167, 169, 170,
	171, 172, 0, 0, 0, 0, 0, 173, 174, 175,
	176, 671, 0, 621, 675, 623, 672, 673, 0, 619,
	622, 674, 0, 0, 0, 0, 688, 689, 0, 0,
	529, 0, 1642, 0, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 624, 625,
	2683, 2687, 2688, 2689, 2692, 2693, 2694, 2702, 2704, 649,
	2703, 2705, 2706, 2707, 2710, 2711, 2712, 2713, 2708, 2709,
	2714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 0, 0, 2163, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 529, 529,
	529, 529, 0, 0, 0, 0, 1661, 0, 0, 0,
	1662, 0, 0, 0, 529, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1306,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1272, 0, 1272, 0, 0,
	1272, 0, 0, 1161, 0, 1272, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1272, 0,
	0, 0, 0, 1272, 529, 529, 529, 529, 529, 0,
	0, 0, 0, 0, 0, 0, 2346, 0, 0, 0,
	0, 529, 0, 0, 1498, 0, 529, 0, 0, 529,
	2357, 1544, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	1121, 0, 1121, 1121, 0, 0, 0, 1272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 1321, 0, 0, 0,
	0, 0, 529, 0, 0, 529, 749, 1196, 1197, 1198,
	0, 1201, 0, 1203, 1204, 1205, 1206, 0, 1209, 1211,
	1211, 0, 1211, 1215, 1215, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1374, 1255, 1256, 1257, 1258, 1259, 0, 0,
	0, 0, 1215, 1215, 1215, 1215, 1215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1281, 0, 0, 0, 0, 529, 749, 0, 0, 0,
	749, 0, 0, 0, 0, 0, 749, 0, 0, 0,
	1974, 0, 0, 0, 1978, 0, 1979, 1980, 529, 0,
	0, 0, 0, 0, 0, 1988, 0, 0, 1989, 1990,
	0, 1409, 0, 0, 0, 0, 529, 0, 0, 529,
	529, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1362, 0, 0, 1996, 1997, 1998, 1999, 2000,
	0, 2002, 0, 0, 0, 0, 0, 2006, 0, 2007,
	0, 0, 0, 2010, 0, 0, 0, 0, 0, 0,
	0, 2019, 2020, 2021, 2022, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2033, 2034, 0, 0, 0, 0,
	0, 0, 2039, 2040, 2041, 2042, 2043, 0, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1375, 0, 0, 1272, 0, 1272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1547, 0,
	0, 0, 0, 0, 0, 0, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1388, 1391, 1392,
	1393, 1394, 1395, 1396, 0, 1397, 1398, 1399, 1400, 1401,
	1376, 1377, 1378, 1379, 1360, 1361, 1389, 0, 1363, 0,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 0,
	0, 1373, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	0, 1602, 1603, 1604, 1605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1647, 1648, 0, 0, 0, 0, 0, 0,
	1653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1689, 1690, 1691, 1692, 1693,
	1694, 1696, 1700, 1701, 587, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 587, 0, 0, 2256,
	0, 1121, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1498, 0, 0, 1121, 1121, 0, 0, 2271,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 1778, 1779, 0, 0, 0, 0, 0, 87,
	2286, 2287, 0, 0, 0, 681, 688, 689, 690, 691,
	692, 682, 684, 0, 0, 0, 683, 0, 0, 0,
	1815, 1272, 0, 0, 0, 0, 0, 0, 0, 686,
	693, 694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2329, 0, 0, 0, 0, 0,
	0, 0, 0, 1498, 0, 0, 0, 0, 0, 0,
	0, 2347, 2348, 0, 0, 2438, 2439, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1798, 0, 0, 2461,
	0, 0, 0, 0, 0, 0, 2465, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2475, 2476, 2478, 2480, 0, 0, 0, 0, 0, 0,
	2486, 0, 0, 0, 0, 2490, 2491, 2492, 0, 0,
	0, 0, 2495, 0, 0, 0, 0, 0, 2497, 0,
	2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508,
	2509, 0, 0, 2510, 0, 0, 0, 956, 0, 2515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 956,
	0, 0, 2537, 2538, 0, 0, 2542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 671, 2554, 2555, 675, 0, 672, 673,
	87, 0, 0, 674, 0, 0, 681, 688, 689, 690,
	691, 692, 682, 684, 1987, 0, 0, 683, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 693, 694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2611, 2438, 2439, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 0,
	0, 0, 0, 0, 2638, 1321, 0, 1963, 2639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2740, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2750, 2751, 2752, 0, 2753,
	2754, 0, 2054, 0, 0, 2757, 0, 2758, 2761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2224, 0,
	2089, 2090, 0, 0, 0, 0, 2787, 0, 0, 2109,
	0, 2110, 2111, 0, 0, 0, 2247, 2248, 0, 0,
	0, 2251, 0, 0, 0, 0, 2253, 2254, 2255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2260, 2261,
	2262, 0, 0, 1707, 2264, 0, 2265, 2266, 0, 0,
	0, 2273, 2274, 0, 0, 0, 0, 0, 0, 1707,
	1707, 1707, 1707, 1707, 587, 587, 587, 587, 0, 0,
	0, 0, 2807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2813, 0, 0, 0, 0,
	0, 2814, 2815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2821,
	0, 0, 0, 0, 2184, 0, 0, 0, 0, 2318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2351, 0, 0, 0,
	0, 0, 0, 0, 2863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2869, 0, 0, 0,
	2870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1798, 0, 0, 0, 0, 0, 0, 2483, 0, 0,
	0, 0, 0, 0, 2489, 0, 0, 0, 2327, 0,
	79, 0, 0, 1798, 1798, 1798, 1798, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2109, 749, 0, 0, 0, 1798, 0, 0, 1798, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2595, 0,
	0, 2464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2616,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2630, 0, 2631, 0, 0, 0, 0, 2634,
	2635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 0, 0, 0, 0, 0,
	2667, 0, 0, 0, 0, 0, 0, 2563, 0, 0,
	0, 2675, 0, 0, 2677, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2770, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2643, 0, 2647, 2648, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2327, 0, 79,
	0, 2327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 587, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1220, 1221, 1222, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 352, 2822, 0, 926, 911,
	449, 79, 857, 929, 826, 845, 939, 848, 851, 893,
	805, 871, 370, 842, 797, 830, 800, 837, 801, 828,
	859, 244, 825, 913, 875, 928, 325, 241, 807, 831,
	384, 847, 193, 895, 425, 228, 335, 332, 456, 255,
	247, 243, 227, 281, 342, 382, 443, 376, 935, 329,
	881, 0, 434, 355, 0, 0, 0, 861, 917, 869,
	907, 856, 894, 815, 880, 930, 843, 890, 931, 287,
	226, 192, 367, 435, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 2835, 0, 2836, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 839, 887, 925, 840, 889,
	239, 285, 246, 238, 453, 936, 916, 804, 868, 924,
	0, 0, 209, 927, 863, 0, 892, 0, 942, 799,
	883, 0, 802, 806, 938, 920, 834, 249, 0, 0,
	0, 0, 0, 0, 0, 860, 870, 904, 854, 0,
	0, 0, 0, 0, 0, 0, 832, 0, 879, 0,
	0, 0, 811, 803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 858, 0, 0, 0, 814,
	0, 833, 905, 0, 796, 268, 808, 356, 231, 0,
	909, 919, 855, 487, 923, 853, 852, 899, 812, 915,
	846, 324, 810, 293, 188, 205, 0, 844, 366, 407,
	413, 914, 829, 838, 229, 836, 411, 380, 471, 213,
	257, 404, 385, 409, 392, 260, 878, 897, 410, 330,
	458, 399, 468, 488, 489, 237, 360, 478, 447, 484,
	501, 206, 234, 374, 440, 474, 431, 353, 454, 455,
	292, 430, 266, 191, 328, 494, 204, 419, 221, 211,
	197, 442, 466, 218, 422, 0, 0, 503, 199, 464,
	439, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 461, 462, 230, 504, 208, 483, 201, 1123, 482,
	362, 457, 465, 350, 340, 200, 463, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 475, 0, 195, 0, 436, 476, 505, 214,
	215, 216, 824, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 910, 452, 469, 479, 486,
	492, 493, 495, 496, 497, 498, 499, 500, 361, 278,
	432, 294, 331, 902, 941, 379, 412, 219, 473, 433,
	819, 823, 817, 884, 818, 873, 874, 820, 932, 933,
	934, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 0,
	906, 813, 0, 821, 822, 0, 912, 921, 922, 524,
	341, 424, 470, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	877, 187, 202, 327, 937, 401, 261, 502, 481, 477,
	798, 816, 236, 827, 835, 0, 841, 849, 850, 862,
	864, 865, 866, 867, 885, 886, 888, 896, 898, 901,
	903, 908, 918, 940, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 420, 421, 426,
	427, 428, 429, 437, 441, 459, 460, 472, 485, 490,
	270, 467, 491, 0, 336, 876, 882, 338, 254, 273,
	284, 891, 480, 438, 207, 408, 262, 196, 225, 210,
	233, 248, 251, 288, 347, 354, 383, 387, 267, 245,
	223, 405, 220, 423, 444, 445, 446, 448, 351, 240,
	386, 872, 900, 334, 450, 451, 280, 352, 0, 0,
	926, 911, 449, 0, 857, 929, 826, 845, 939, 848,
	851, 893, 805, 871, 370, 842, 797, 830, 800, 837,
	801, 828, 859, 244, 825, 913, 875, 928, 325, 241,
	807, 831, 384, 847, 193, 895, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	935, 329, 881, 0, 434, 355, 0, 0, 0, 861,
	917, 869, 907, 856, 894, 815, 880, 930, 843, 890,
	931, 287, 226, 192, 367, 435, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 839, 887, 925,
	840, 889, 239, 285, 246, 238, 453, 936, 916, 804,
	868, 924, 0, 0, 209, 927, 863, 0, 892, 0,
	942, 799, 883, 0, 802, 806, 938, 920, 834, 249,
	0, 0, 0, 0, 0, 0, 0, 860, 870, 904,
	854, 0, 0, 0, 0, 0, 2358, 0, 832, 0,
	879, 0, 0, 0, 811, 803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 858, 0, 0,
	0, 814, 0, 833, 905, 0, 796, 268, 808, 356,
	231, 0, 909, 919, 855, 487, 923, 853, 852, 899,
	812, 915, 846, 324, 810, 293, 188, 205, 0, 844,
	366, 407, 413, 914, 829, 838, 229, 836, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 878, 897,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	1123, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 824, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 910, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	361, 278, 432, 294, 331, 902, 941, 379, 412, 219,
	473, 433, 819, 823, 817, 884, 818, 873, 874, 820,
	932, 933, 934, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 0, 906, 813, 0, 821, 822, 0, 912, 921,
	922, 524, 341, 424, 470, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 877, 187, 202, 327, 937, 401, 261, 502,
	481, 477, 798, 816, 236, 827, 835, 0, 841, 849,
	850, 862, 864, 865, 866, 867, 885, 886, 888, 896,
	898, 901, 903, 908, 918, 940, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 420,
	421, 426, 427, 428, 429, 437, 441, 459, 460, 472,
	485, 490, 270, 467, 491, 0, 336, 876, 882, 338,
	254, 273, 284, 891, 480, 438, 207, 408, 262, 196,
	225, 210, 233, 248, 251, 288, 347, 354, 383, 387,
	267, 245, 223, 405, 220, 423, 444, 445, 446, 448,
	351, 240, 386, 872, 900, 334, 450, 451, 280, 352,
	0, 0, 926, 911, 449, 0, 857, 929, 826, 845,
	939, 848, 851, 893, 805, 871, 370, 842, 797, 830,
	800, 837, 801, 828, 859, 244, 825, 913, 875, 928,
	325, 241, 807, 831, 384, 847, 193, 895, 425, 228,
	335, 332, 456, 255, 247, 243, 227, 281, 342, 382,
	443, 376, 935, 329, 881, 0, 434, 355, 0, 0,
	0, 861, 917, 869, 907, 856, 894, 815, 880, 930,
	843, 890, 931, 287, 226, 192, 367, 435, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 839,
	887, 925, 840, 889, 239, 285, 246, 238, 453, 936,
	916, 804, 868, 924, 0, 0, 209, 927, 863, 0,
	892, 0, 942, 799, 883, 0, 802, 806, 938, 920,
	834, 249, 0, 0, 0, 0, 0, 0, 0, 860,
	870, 904, 854, 0, 0, 0, 0, 0, 2316, 0,
	832, 0, 879, 0, 0, 0, 811, 803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 858,
	0, 0, 0, 814, 0, 833, 905, 0, 796, 268,
	808, 356, 231, 0, 909, 919, 855, 487, 923, 853,
	852, 899, 812, 915, 846, 324, 810, 293, 188, 205,
	0, 844, 366, 407, 413, 914, 829, 838, 229, 836,
	411, 380, 471, 213, 257, 404, 385, 409, 392, 260,
	878, 897, 410, 330, 458, 399, 468, 488, 489, 237,
	360, 478, 447, 484, 501, 206, 234, 374, 440, 474,
	431, 353, 454, 455, 292, 430, 266, 191, 328, 494,
	204, 419, 221, 211, 197, 442, 466, 218, 422, 0,
	0, 503, 199, 464, 439, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 461, 462, 230, 504, 208,
	483, 201, 1123, 482, 362, 457, 465, 350, 340, 200,
	463, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 475, 0, 195, 0,
	436, 476, 505, 214, 215, 216, 824, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 910,
	452, 469, 479, 486, 492, 493, 495, 496, 497, 498,
	499, 500, 361, 278, 432, 294, 331, 902, 941, 379,
	412, 219, 473, 433, 819, 823, 817, 884, 818, 873,
	874, 820, 932, 933, 934, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 0, 906, 813, 0, 821, 822, 0,
	912, 921, 922, 524, 341, 424, 470, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 877, 187, 202, 327, 937, 401,
	261, 502, 481, 477, 798, 816, 236, 827, 835, 0,
	841, 849, 850, 862, 864, 865, 866, 867, 885, 886,
	888, 896, 898, 901, 903, 908, 918, 940, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 420, 421, 426, 427, 428, 429, 437, 441, 459,
	460, 472, 485, 490, 270, 467, 491, 0, 336, 876,
	882, 338, 254, 273, 284, 891, 480, 438, 207, 408,
	262, 196, 225, 210, 233, 248, 251, 288, 347, 354,
	383, 387, 267, 245, 223, 405, 220, 423, 444, 445,
	446, 448, 351, 240, 386, 872, 900, 334, 450, 451,
	280, 352, 0, 0, 926, 911, 449, 0, 857, 929,
	826, 845, 939, 848, 851, 893, 805, 871, 370, 842,
	797, 830, 800, 837, 801, 828, 859, 244, 825, 913,
	875, 928, 325, 241, 807, 831, 384, 847, 193, 895,
	425, 228, 335, 332, 456, 255, 247, 243, 227, 281,
	342, 382, 443, 376, 935, 329, 881, 0, 434, 355,
	0, 0, 0, 861, 917, 869, 907, 856, 894, 815,
	880, 930, 843, 890, 931, 287, 226, 192, 367, 435,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 839, 887, 925, 840, 889, 239, 285, 246, 238,
	453, 936, 916, 804, 868, 924, 0, 0, 209, 927,
	863, 0, 892, 0, 942, 799, 883, 0, 802, 806,
	938, 920, 834, 249, 0, 0, 0, 0, 0, 0,
	0, 860, 870, 904, 854, 0, 0, 0, 0, 0,
	1786, 0, 832, 0, 879, 0, 0, 0, 811, 803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 858, 0, 0, 0, 814, 0, 833, 905, 0,
	796, 268, 808, 356, 231, 0, 909, 919, 855, 487,
	923, 853, 852, 899, 812, 915, 846, 324, 810, 293,
	188, 205, 0, 844, 366, 407, 413, 914, 829, 838,
	229, 836, 411, 380, 471, 213, 257, 404, 385, 409,
	392, 260, 878, 897, 410, 330, 458, 399, 468, 488,
	489, 237, 360, 478, 447, 484, 501, 206, 234, 374,
	440, 474, 431, 353, 454, 455, 292, 430, 266, 191,
	328, 494, 204, 419, 221, 211, 197, 442, 466, 218,
	422, 0, 0, 503, 199, 464, 439, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 461, 462, 230,
	504, 208, 483, 201, 1123, 482, 362, 457, 465, 350,
	340, 200, 463, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 475, 0,
	195, 0, 436, 476, 505, 214, 215, 216, 824, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 910, 452, 469, 479, 486, 492, 493, 495, 496,
	497, 498, 499, 500, 361, 278, 432, 294, 331, 902,
	941, 379, 412, 219, 473, 433, 819, 823, 817, 884,
	818, 873, 874, 820, 932, 933, 934, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 906, 813, 0, 821,
	822, 0, 912, 921, 922, 524, 341, 424, 470, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 877, 187, 202, 327,
	937, 401, 261, 502, 481, 477, 798, 816, 236, 827,
	835, 0, 841, 849, 850, 862, 864, 865, 866, 867,
	885, 886, 888, 896, 898, 901, 903, 908, 918, 940,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 420, 421, 426, 427, 428, 429, 437,
	441, 459, 460, 472, 485, 490, 270, 467, 491, 0,
	336, 876, 882, 338, 254, 273, 284, 891, 480, 438,
	207, 408, 262, 196, 225, 210, 233, 248, 251, 288,
	347, 354, 383, 387, 267, 245, 223, 405, 220, 423,
	444, 445, 446, 448, 351, 240, 386, 872, 900, 334,
	450, 451, 280, 352, 0, 0, 926, 911, 449, 0,
	857, 929, 826, 845, 939, 848, 851, 893, 805, 871,
	370, 842, 797, 830, 800, 837, 801, 828, 859, 244,
	825, 913, 875, 928, 325, 241, 807, 831, 384, 847,
	193, 895, 425, 228, 335, 332, 456, 255, 247, 243,
	227, 281, 342, 382, 443, 376, 935, 329, 881, 0,
	434, 355, 0, 0, 0, 861, 917, 869, 907, 856,
	894, 815, 880, 930, 843, 890, 931, 287, 226, 192,
	367, 435, 259, 0, 87, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 839, 887, 925, 840, 889, 239, 285,
	246, 238, 453, 936, 916, 804, 868, 924, 0, 0,
	209, 927, 863, 0, 892, 0, 942, 799, 883, 0,
	802, 806, 938, 920, 834, 249, 0, 0, 0, 0,
	0, 0, 0, 860, 870, 904, 854, 0, 0, 0,
	0, 0, 0, 0, 832, 0, 879, 0, 0, 0,
	811, 803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 858, 0, 0, 0, 814, 0, 833,
	905, 0, 796, 268, 808, 356, 231, 0, 909, 919,
	855, 487, 923, 853, 852, 899, 812, 915, 846, 324,
	810, 293, 188, 205, 0, 844, 366, 407, 413, 914,
	829, 838, 229, 836, 411, 380, 471, 213, 257, 404,
	385, 409, 392, 260, 878, 897, 410, 330, 458, 399,
	468, 488, 489, 237, 360, 478, 447, 484, 501, 206,
	234, 374, 440, 474, 431, 353, 454, 455, 292, 430,
	266, 191, 328, 494, 204, 419, 221, 211, 197, 442,
	466, 218, 422, 0, 0, 503, 199, 464, 439, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 461,
	462, 230, 504, 208, 483, 201, 1123, 482, 362, 457,
	465, 350, 340, 200, 463, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	475, 0, 195, 0, 436, 476, 505, 214, 215, 216,
	824, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 910, 452, 469, 479, 486, 492, 493,
	495, 496, 497, 498, 499, 500, 361, 278, 432, 294,
	331, 902, 941, 379, 412, 219, 473, 433, 819, 823,
	817, 884, 818, 873, 874, 820, 932, 933, 934, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 0, 906, 813,
	0, 821, 822, 0, 912, 921, 922, 524, 341, 424,
	470, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 877, 187,
	202, 327, 937, 401, 261, 502, 481, 477, 798, 816,
	236, 827, 835, 0, 841, 849, 850, 862, 864, 865,
	866, 867, 885, 886, 888, 896, 898, 901, 903, 908,
	918, 940, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 420, 421, 426, 427, 428,
	429, 437, 441, 459, 460, 472, 485, 490, 270, 467,
	491, 0, 336, 876, 882, 338, 254, 273, 284, 891,
	480, 438, 207, 408, 262, 196, 225, 210, 233, 248,
	251, 288, 347, 354, 383, 387, 267, 245, 223, 405,
	220, 423, 444, 445, 446, 448, 351, 240, 386, 872,
	900, 334, 450, 451, 280, 352, 0, 0, 926, 911,
	449, 0, 857, 929, 826, 845, 939, 848, 851, 893,
	805, 871, 370, 842, 797, 830, 800, 837, 801, 828,
	859, 244, 825, 913, 875, 928, 325, 241, 807, 831,
	384, 847, 193, 895, 425, 228, 335, 332, 456, 255,
	247, 243, 227, 281, 342, 382, 443, 376, 935, 329,
	881, 0, 434, 355, 0, 0, 0, 861, 917, 869,
	907, 856, 894, 815, 880, 930, 843, 890, 931, 287,
	226, 192, 367, 435, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 839, 887, 925, 840, 889,
	239, 285, 246, 238, 453, 936, 916, 804, 868, 924,
	0, 0, 209, 927, 863, 0, 892, 0, 942, 799,
	883, 0, 802, 806, 938, 920, 834, 249, 0, 0,
	0, 0, 0, 0, 0, 860, 870, 904, 854, 0,
	0, 0, 0, 0, 0, 0, 832, 0, 879, 0,
	0, 0, 811, 803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 858, 0, 0, 0, 814,
	0, 833, 905, 0, 796, 268, 808, 356, 231, 0,
	909, 919, 855, 487, 923, 853, 852, 899, 812, 915,
	846, 324, 810, 293, 188, 205, 0, 844, 366, 407,
	413, 914, 829, 838, 229, 836, 411, 380, 471, 213,
	257, 404, 385, 409, 392, 260, 878, 897, 410, 330,
	458, 399, 468, 488, 489, 237, 360, 478, 447, 484,
	501, 206, 234, 374, 440, 474, 431, 353, 454, 455,
	292, 430, 266, 191, 328, 494, 204, 419, 221, 211,
	197, 442, 466, 218, 422, 0, 0, 503, 199, 464,
	439, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 461, 462, 230, 504, 208, 483, 201, 1123, 482,
	362, 457, 465, 350, 340, 200, 463, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 475, 0, 195, 0, 436, 476, 505, 214,
	215, 216, 824, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 910, 452, 469, 479, 486,
	492, 493, 495, 496, 497, 498, 499, 500, 361, 278,
	432, 294, 331, 902, 941, 379, 412, 219, 473, 433,
	819, 823, 817, 884, 818, 873, 874, 820, 932, 933,
	934, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 0,
	906, 813, 0, 821, 822, 0, 912, 921, 922, 524,
	341, 424, 470, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	877, 187, 202, 327, 937, 401, 261, 502, 481, 477,
	798, 816, 236, 827, 835, 0, 841, 849, 850, 862,
	864, 865, 866, 867, 885, 886, 888, 896, 898, 901,
	903, 908, 918, 940, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 420, 421, 426,
	427, 428, 429, 437, 441, 459, 460, 472, 485, 490,
	270, 467, 491, 0, 336, 876, 882, 338, 254, 273,
	284, 891, 480, 438, 207, 408, 262, 196, 225, 210,
	233, 248, 251, 288, 347, 354, 383, 387, 267, 245,
	223, 405, 220, 423, 444, 445, 446, 448, 351, 240,
	386, 872, 900, 334, 450, 451, 280, 352, 0, 0,
	926, 911, 449, 0, 857, 929, 826, 845, 939, 848,
	851, 893, 805, 871, 370, 842, 797, 830, 800, 837,
	801, 828, 859, 244, 825, 913, 875, 928, 325, 241,
	807, 831, 384, 847, 193, 895, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	935, 329, 881, 0, 434, 355, 0, 0, 0, 861,
	917, 869, 907, 856, 894, 815, 880, 930, 843, 890,
	931, 287, 226, 192, 367, 435, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 839, 887, 925,
	840, 889, 239, 285, 246, 238, 453, 936, 916, 804,
	868, 924, 0, 0, 943, 927, 863, 0, 892, 0,
	942, 799, 883, 0, 802, 806, 938, 920, 834, 249,
	0, 0, 0, 0, 0, 0, 0, 860, 870, 904,
	854, 0, 0, 0, 0, 0, 0, 0, 832, 0,
	879, 0, 0, 0, 811, 803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 858, 0, 0,
	0, 814, 0, 833, 905, 0, 796, 268, 808, 356,
	231, 0, 909, 919, 855, 487, 923, 853, 852, 899,
	812, 915, 846, 324, 810, 293, 188, 205, 0, 844,
	366, 407, 413, 914, 829, 838, 229, 836, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 878, 897,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	809, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 824, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 910, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	795, 789, 788, 294, 331, 902, 941, 379, 412, 219,
	473, 433, 819, 823, 817, 884, 818, 873, 874, 820,
	932, 933, 934, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 0, 906, 813, 0, 821, 822, 0, 912, 921,
	922, 524, 341, 424, 470, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 877, 187, 202, 327, 937, 401, 261, 502,
	481, 477, 798, 816, 236, 827, 835, 0, 841, 849,
	850, 862, 864, 865, 866, 867, 885, 886, 888, 896,
	898, 901, 903, 908, 918, 940, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 420,
	421, 426, 427, 428, 429, 437, 441, 459, 460, 472,
	485, 490, 270, 467, 491, 0, 336, 876, 882, 338,
	254, 273, 284, 891, 480, 438, 207, 408, 262, 196,
	225, 210, 233, 248, 251, 288, 347, 354, 383, 387,
	267, 245, 223, 405, 220, 423, 444, 445, 446, 448,
	351, 240, 386, 872, 900, 334, 450, 451, 280, 352,
	0, 0, 926, 911, 449, 0, 857, 929, 826, 845,
	939, 848, 851, 893, 805, 871, 370, 842, 797, 830,
	800, 837, 801, 828, 859, 244, 825, 913, 875, 928,
	325, 241, 807, 831, 384, 847, 193, 895, 425, 228,
	335, 332, 456, 255, 247, 243, 227, 281, 342, 382,
	443, 376, 935, 329, 881, 0, 434, 355, 0, 0,
	0, 861, 917, 869, 907, 856, 894, 815, 880, 930,
	843, 890, 931, 287, 226, 192, 367, 435, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 839,
	887, 925, 840, 889, 239, 285, 246, 238, 453, 936,
	916, 804, 868, 924, 0, 0, 943, 927, 863, 0,
	892, 0, 942, 799, 883, 0, 802, 806, 938, 920,
	834, 249, 0, 0, 0, 0, 0, 0, 0, 860,
	870, 904, 854, 0, 0, 0, 0, 0, 0, 0,
	832, 0, 879, 0, 0, 0, 811, 803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 858,
	0, 0, 0, 814, 0, 833, 905, 0, 796, 268,
	808, 356, 231, 0, 909, 919, 855, 487, 923, 853,
	852, 899, 812, 915, 846, 324, 810, 293, 188, 205,
	0, 844, 366, 407, 413, 914, 829, 838, 229, 836,
	411, 380, 471, 213, 257, 404, 385, 409, 392, 260,
	878, 897, 410, 330, 458, 399, 468, 488, 489, 237,
	360, 478, 447, 484, 501, 206, 234, 374, 440, 474,
	431, 353, 454, 455, 292, 430, 266, 191, 328, 494,
	204, 419, 221, 211, 197, 442, 1338, 218, 422, 0,
	0, 503, 199, 464, 439, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 461, 462, 230, 504, 208,
	483, 201, 809, 482, 362, 457, 465, 350, 340, 200,
	463, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 475, 0, 195, 0,
	436, 476, 505, 214, 215, 216, 824, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 910,
	452, 469, 479, 486, 492, 493, 495, 496, 497, 498,
	499, 500, 795, 789, 788, 294, 331, 902, 941, 379,
	412, 219, 473, 433, 819, 823, 817, 884, 818, 873,
	874, 820, 932, 933, 934, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 0, 906, 813, 0, 821, 822, 0,
	912, 921, 922, 524, 341, 424, 470, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 877, 187, 202, 327, 937, 401,
	261, 502, 481, 477, 798, 816, 236, 827, 835, 0,
	841, 849, 850, 862, 864, 865, 866, 867, 885, 886,
	888, 896, 898, 901, 903, 908, 918, 940, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 420, 421, 426, 427, 428, 429, 437, 441, 459,
	460, 472, 485, 490, 270, 467, 491, 0, 336, 876,
	882, 338, 254, 273, 284, 891, 480, 438, 207, 408,
	262, 196, 225, 210, 233, 248, 251, 288, 347, 354,
	383, 387, 267, 245, 223, 405, 220, 423, 444, 445,
	446, 448, 351, 240, 386, 872, 900, 334, 450, 451,
	280, 352, 0, 0, 926, 911, 449, 0, 857, 929,
	826, 845, 939, 848, 851, 893, 805, 871, 370, 842,
	797, 830, 800, 837, 801, 828, 859, 244, 825, 913,
	875, 928, 325, 241, 807, 831, 384, 847, 193, 895,
	425, 228, 335, 332, 456, 255, 247, 243, 227, 281,
	342, 382, 443, 376, 935, 329, 881, 0, 434, 355,
	0, 0, 0, 861, 917, 869, 907, 856, 894, 815,
	880, 930, 843, 890, 931, 287, 226, 192, 367, 435,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 839, 887, 925, 840, 889, 239, 285, 246, 238,
	453, 936, 916, 804, 868, 924, 0, 0, 943, 927,
	863, 0, 892, 0, 942, 799, 883, 0, 802, 806,
	938, 920, 834, 249, 0, 0, 0, 0, 0, 0,
	0, 860, 870, 904, 854, 0, 0, 0, 0, 0,
	0, 0, 832, 0, 879, 0, 0, 0, 811, 803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 858, 0, 0, 0, 814, 0, 833, 905, 0,
	796, 268, 808, 356, 231, 0, 909, 919, 855, 487,
	923, 853, 852, 899, 812, 915, 846, 324, 810, 293,
	188, 205, 0, 844, 366, 407, 413, 914, 829, 838,
	229, 836, 411, 380, 471, 213, 257, 404, 385, 409,
	392, 260, 878, 897, 410, 330, 458, 399, 468, 488,
	489, 237, 360, 478, 447, 484, 501, 206, 234, 374,
	440, 474, 431, 353, 454, 455, 292, 430, 266, 191,
	328, 494, 204, 419, 221, 211, 197, 442, 786, 218,
	422, 0, 0, 503, 199, 464, 439, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 461, 462, 230,
	504, 208, 483, 201, 809, 482, 362, 457, 465, 350,
	340, 200, 463, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 475, 0,
	195, 0, 436, 476, 505, 214, 215, 216, 824, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 910, 452, 469, 479, 486, 492, 493, 495, 496,
	497, 498, 499, 500, 795, 789, 788, 294, 331, 902,
	941, 379, 412, 219, 473, 433, 819, 823, 817, 884,
	818, 873, 874, 820, 932, 933, 934, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 906, 813, 0, 821,
	822, 0, 912, 921, 922, 524, 341, 424, 470, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 877, 187, 202, 327,
	937, 401, 261, 502, 481, 477, 798, 816, 236, 827,
	835, 0, 841, 849, 850, 862, 864, 865, 866, 867,
	885, 886, 888, 896, 898, 901, 903, 908, 918, 940,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 420, 421, 426, 427, 428, 429, 437,
	441, 459, 460, 472, 485, 490, 270, 467, 491, 0,
	336, 876, 882, 338, 254, 273, 284, 891, 480, 438,
	207, 408, 262, 196, 225, 210, 233, 248, 251, 288,
	347, 354, 383, 387, 267, 245, 223, 405, 220, 423,
	444, 445, 446, 448, 351, 240, 386, 872, 900, 334,
	450, 451, 280, 352, 0, 0, 0, 0, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 1731, 0, 605, 0, 0, 0, 244,
	610, 0, 0, 0, 325, 241, 0, 1732, 384, 0,
	193, 0, 425, 228, 335, 332, 456, 255, 247, 243,
	227, 281, 342, 382, 443, 376, 617, 329, 0, 0,
	434, 355, 0, 0, 0, 0, 0, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 435, 259, 0, 87, 0, 0, 184, 185, 186,
	681, 688, 689, 690, 691, 692, 682, 684, 0, 0,
	217, 683, 224, 628, 630, 629, 639, 640, 641, 642,
	643, 644, 645, 626, 686, 693, 694, 0, 239, 285,
	246, 238, 453, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 588, 602,
	0, 616, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	599, 600, 775, 0, 0, 0, 665, 0, 601, 0,
	0, 609, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 664, 0,
	0, 487, 0, 0, 662, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 471, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 458, 399,
	468, 488, 489, 237, 360, 478, 447, 484, 501, 206,
	234, 374, 440, 474, 431, 353, 454, 455, 292, 430,
	266, 191, 328, 494, 204, 419, 221, 211, 197, 442,
	466, 218, 422, 0, 0, 503, 199, 464, 439, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 461,
	462, 230, 504, 208, 483, 201, 0, 482, 362, 457,
	465, 350, 340, 200, 463, 348, 339, 295, 634, 635,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	475, 0, 195, 0, 436, 476, 505, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 452, 469, 479, 486, 492, 493,
	495, 496, 497, 498, 499, 500, 361, 278, 432, 294,
	331, 0, 0, 379, 412, 219, 473, 433, 671, 663,
	621, 675, 623, 672, 673, 618, 619, 622, 674, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 0, 666, 608,
	607, 0, 614, 615, 0, 624, 625, 627, 631, 632,
	633, 636, 637, 638, 646, 648, 649, 647, 650, 651,
	652, 655, 656, 657, 658, 653, 654, 659, 606, 187,
	202, 327, 0, 401, 261, 502, 481, 477, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 420, 421, 426, 427, 428,
	429, 437, 441, 459, 460, 472, 485, 490, 270, 467,
	491, 0, 336, 0, 0, 338, 254, 273, 284, 0,
	480, 438, 207, 408, 262, 196, 225, 210, 233, 248,
	251, 288, 347, 354, 383, 387, 267, 245, 223, 405,
	220, 423, 444, 445, 446, 448, 351, 240, 386, 0,
	352, 334, 450, 451, 280, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 605, 0, 0, 0, 244, 610, 0, 0,
	0, 325, 241, 0, 0, 384, 0, 193, 0, 425,
	228, 335, 332, 456, 255, 247, 243, 227, 281, 342,
	382, 443, 376, 617, 329, 0, 0, 434, 355, 0,
	0, 0, 0, 0, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 367, 435, 259,
	0, 87, 0, 0, 184, 185, 186, 681, 688, 689,
	690, 691, 692, 682, 684, 0, 0, 217, 683, 224,
	628, 630, 629, 639, 640, 641, 642, 643, 644, 645,
	626, 686, 693, 694, 0, 239, 285, 246, 238, 453,
	0, 0, 1697, 1698, 1699, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 588, 602, 0, 616, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 599, 600, 0,
	0, 0, 0, 665, 0, 601, 0, 0, 609, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 356, 231, 0, 664, 0, 0, 487, 0,
	0, 662, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 366, 407, 413, 0, 0, 0, 229,
	0, 411, 380, 471, 213, 257, 404, 385, 409, 392,
	260, 0, 0, 410, 330, 458, 399, 468, 488, 489,
	237, 360, 478, 447, 484, 501, 206, 234, 374, 440,
	474, 431, 353, 454, 455, 292, 430, 266, 191, 328,
	494, 204, 419, 221, 211, 197, 442, 466, 218, 422,
	0, 0, 503, 199, 464, 439, 349, 289, 290, 198,
	0, 403, 242, 264, 232, 369, 461, 462, 230, 504,
	208, 483, 201, 0, 482, 362, 457, 465, 350, 340,
	200, 463, 348, 339, 295, 634, 635, 253, 275, 397,
	333, 398, 276, 358, 357, 359, 194, 475, 0, 195,
	0, 436, 476, 505, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 373, 396, 394, 400,
	0, 452, 469, 479, 486, 492, 493, 495, 496, 497,
	498, 499, 500, 361, 278, 432, 294, 331, 0, 0,
	379, 412, 219, 473, 433, 671, 663, 621, 675, 623,
	672, 673, 618, 619, 622, 674, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 666, 608, 607, 0, 614,
	615, 0, 624, 625, 627, 631, 632, 633, 636, 637,
	638, 646, 648, 649, 647, 650, 651, 652, 655, 656,
	657, 658, 653, 654, 659, 606, 187, 202, 327, 0,
	401, 261, 502, 481, 477, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 420, 421, 426, 427, 428, 429, 437, 441,
	459, 460, 472, 485, 490, 270, 467, 491, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 480, 438, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 423, 444,
	445, 446, 448, 351, 240, 386, 0, 352, 334, 450,
	451, 280, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 605,
	0, 0, 0, 244, 610, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	617, 329, 0, 0, 434, 355, 0, 0, 0, 0,
	0, 612, 613, 0, 0, 0, 0, 0, 0, 1813,
	0, 287, 226, 192, 367, 435, 259, 0, 87, 0,
	0, 184, 185, 186, 681, 688, 689, 690, 691, 692,
	682, 684, 0, 0, 217, 683, 224, 628, 630, 629,
	639, 640, 641, 642, 643, 644, 645, 626, 686, 693,
	694, 1814, 239, 285, 246, 238, 453, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 588, 602, 0, 616, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 599, 600, 0, 0, 0, 0,
	665, 0, 601, 0, 0, 609, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 611, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 664, 0, 0, 487, 0, 0, 662, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	0, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 634, 635, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	361, 278, 432, 294, 331, 0, 0, 379, 412, 219,
	473, 433, 671, 663, 621, 675, 623, 672, 673, 618,
	619, 622, 674, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 0, 666, 608, 607, 0, 614, 615, 0, 624,
	625, 627, 631, 632, 633, 636, 637, 638, 646, 648,
	649, 647, 650, 651, 652, 655, 656, 657, 658, 653,
	654, 659, 606, 187, 202, 327, 0, 401, 261, 502,
	481, 477, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 420,
	421, 426, 427, 428, 429, 437, 441, 459, 460, 472,
	485, 490, 270, 467, 491, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 480, 438, 207, 408, 262, 196,
	225, 210, 233, 248, 251, 288, 347, 354, 383, 387,
	267, 245, 223, 405, 220, 423, 444, 445, 446, 448,
	351, 240, 386, 0, 0, 334, 450, 451, 280, 352,
	0, 0, 0, 78, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 605, 0, 0, 0, 244, 610, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 425, 228,
	335, 332, 456, 255, 247, 243, 227, 281, 342, 382,
	443, 376, 617, 329, 0, 0, 434, 355, 0, 0,
	0, 0, 0, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 435, 259, 0,
	87, 0, 0, 184, 185, 186, 681, 688, 689, 690,
	691, 692, 682, 684, 0, 0, 217, 683, 224, 628,
	630, 629, 639, 640, 641, 642, 643, 644, 645, 626,
	686, 693, 694, 0, 239, 285, 246, 238, 453, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 588, 602, 0, 616, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 599, 600, 0, 0,
	0, 0, 665, 0, 601, 0, 0, 609, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 611,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 664, 0, 0, 487, 0, 0,
	662, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 471, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 458, 399, 468, 488, 489, 237,
	360, 478, 447, 484, 501, 206, 234, 374, 440, 474,
	431, 353, 454, 455, 292, 430, 266, 191, 328, 494,
	204, 419, 221, 211, 197, 442, 466, 218, 422, 0,
	0, 503, 199, 464, 439, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 461, 462, 230, 504, 208,
	483, 201, 0, 482, 362, 457, 465, 350, 340, 200,
	463, 348, 339, 295, 634, 635, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 475, 0, 195, 0,
	436, 476, 505, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	452, 469, 479, 486, 492, 493, 495, 496, 497, 498,
	499, 500, 361, 278, 432, 294, 331, 0, 0, 379,
	412, 219, 473, 433, 671, 663, 621, 675, 623, 672,
	673, 618, 619, 622, 674, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 0, 666, 608, 607, 0, 614, 615,
	0, 624, 625, 627, 631, 632, 633, 636, 637, 638,
	646, 648, 649, 647, 650, 651, 652, 655, 656, 657,
	658, 653, 654, 659, 606, 187, 202, 327, 86, 401,
	261, 502, 481, 477, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 420, 421, 426, 427, 428, 429, 437, 441, 459,
	460, 472, 485, 490, 270, 467, 491, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 480, 438, 207, 408,
	262, 196, 225, 210, 233, 248, 251, 288, 347, 354,
	383, 387, 267, 245, 223, 405, 220, 423, 444, 445,
	446, 448, 351, 240, 386, 0, 352, 334, 450, 451,
	280, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 0, 605, 0,
	0, 0, 244, 610, 0, 0, 0, 325, 241, 0,
	0, 384, 0, 193, 0, 425, 228, 335, 332, 456,
	255, 247, 243, 227, 281, 342, 382, 443, 376, 617,
	329, 0, 0, 434, 355, 0, 0, 0, 0, 0,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 367, 435, 259, 0, 87, 0, 0,
	184, 185, 186, 681, 688, 689, 690, 691, 692, 682,
	684, 0, 0, 217, 683, 224, 628, 630, 629, 639,
	640, 641, 642, 643, 644, 645, 626, 686, 693, 694,
	0, 239, 285, 246, 238, 453, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 588, 602, 0, 616, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 599, 600, 0, 0, 0, 0, 665,
	0, 601, 0, 0, 609, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 611, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 356, 231,
	0, 664, 0, 0, 487, 0, 0, 662, 0, 0,
	0, 0, 324, 0, 293, 188, 205, 0, 0, 366,
	407, 413, 0, 0, 0, 229, 0, 411, 380, 471,
	213, 257, 404, 385, 409, 392, 260, 2829, 0, 410,
	330, 458, 399, 468, 488, 489, 237, 360, 478, 447,
	484, 501, 206, 234, 374, 440, 474, 431, 353, 454,
	455, 292, 430, 266, 191, 328, 494, 204, 419, 221,
	211, 197, 442, 466, 218, 422, 0, 0, 503, 199,
	464, 439, 349, 289, 290, 198, 0, 403, 242, 264,
	232, 369, 461, 462, 230, 504, 208, 483, 201, 0,
	482, 362, 457, 465, 350, 340, 200, 463, 348, 339,
	295, 634, 635, 253, 275, 397, 333, 398, 276, 358,
	357, 359, 194, 475, 0, 195, 0, 436, 476, 505,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 326, 373, 396, 394, 400, 0, 452, 469, 479,
	486, 492, 493, 495, 496, 497, 498, 499, 500, 361,
	278, 432, 294, 331, 0, 0, 379, 412, 219, 473,
	433, 671, 663, 621, 675, 623, 672, 673, 618, 619,
	622, 674, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 666, 608, 607, 0, 614, 615, 0, 624, 625,
	627, 631, 632, 633, 636, 637, 638, 646, 648, 649,
	647, 650, 651, 652, 655, 656, 657, 658, 653, 654,
	659, 606, 187, 202, 327, 0, 401, 261, 502, 481,
	477, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 420, 421,
	426, 427, 428, 429, 437, 441, 459, 460, 472, 485,
	490, 270, 467, 491, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 480, 438, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 423, 444, 445, 446, 448, 351,
	240, 386, 0, 352, 334, 450, 451, 280, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 605, 0, 0, 0, 244,
	610, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 425, 228, 335, 332, 456, 255, 247, 243,
	227, 281, 342, 382, 443, 376, 617, 329, 0, 0,
	434, 355, 0, 0, 0, 0, 0, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 435, 259, 0, 87, 0, 1305, 184, 185, 186,
	681, 688, 689, 690, 691, 692, 682, 684, 0, 0,
	217, 683, 224, 628, 630, 629, 639, 640, 641, 642,
	643, 644, 645, 626, 686, 693, 694, 0, 239, 285,
	246, 238, 453, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 588, 602,
	0, 616, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	599, 600, 0, 0, 0, 0, 665, 0, 601, 0,
	0, 609, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 664, 0,
	0, 487, 0, 0, 662, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 471, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 458, 399,
	468, 488, 489, 237, 360, 478, 447, 484, 501, 206,
	234, 374, 440, 474, 431, 353, 454, 455, 292, 430,
	266, 191, 328, 494, 204, 419, 221, 211, 197, 442,
	466, 218, 422, 0, 0, 503, 199, 464, 439, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 461,
	462, 230, 504, 208, 483, 201, 0, 482, 362, 457,
	465, 350, 340, 200, 463, 348, 339, 295, 634, 635,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	475, 0, 195, 0, 436, 476, 505, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 452, 469, 479, 486, 492, 493,
	495, 496, 497, 498, 499, 500, 361, 278, 432, 294,
	331, 0, 0, 379, 412, 219, 473, 433, 671, 663,
	621, 675, 623, 672, 673, 618, 619, 622, 674, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 0, 666, 608,
	607, 0, 614, 615, 0, 624, 625, 627, 631, 632,
	633, 636, 637, 638, 646, 648, 649, 647, 650, 651,
	652, 655, 656, 657, 658, 653, 654, 659, 606, 187,
	202, 327, 0, 401, 261, 502, 481, 477, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 420, 421, 426, 427, 428,
	429, 437, 441, 459, 460, 472, 485, 490, 270, 467,
	491, 0, 336, 0, 0, 338, 254, 273, 284, 0,
	480, 438, 207, 408, 262, 196, 225, 210, 233, 248,
	251, 288, 347, 354, 383, 387, 267, 245, 223, 405,
	220, 423, 444, 445, 446, 448, 351, 240, 386, 0,
	352, 334, 450, 451, 280, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 605, 0, 0, 0, 244, 610, 0, 0,
	0, 325, 241, 0, 0, 384, 0, 193, 0, 425,
	228, 335, 332, 456, 255, 247, 243, 227, 281, 342,
	382, 443, 376, 617, 329, 0, 0, 434, 355, 0,
	0, 0, 0, 0, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 367, 435, 259,
	0, 87, 0, 0, 184, 185, 186, 681, 688, 689,
	690, 691, 692, 682, 684, 0, 0, 217, 683, 224,
	628, 630, 629, 639, 640, 641, 642, 643, 644, 645,
	626, 686, 693, 694, 0, 239, 285, 246, 238, 453,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 588, 602, 0, 616, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 599, 600, 775,
	0, 0, 0, 665, 0, 601, 0, 0, 609, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 356, 231, 0, 664, 0, 0, 487, 0,
	0, 662, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 366, 407, 413, 0, 0, 0, 229,
	0, 411, 380, 471, 213, 257, 404, 385, 409, 392,
	260, 0, 0, 410, 330, 458, 399, 468, 488, 489,
	237, 360, 478, 447, 484, 501, 206, 234, 374, 440,
	474, 431, 353, 454, 455, 292, 430, 266, 191, 328,
	494, 204, 419, 221, 211, 197, 442, 466, 218, 422,
	0, 0, 503, 199, 464, 439, 349, 289, 290, 198,
	0, 403, 242, 264, 232, 369, 461, 462, 230, 504,
	208, 483, 201, 0, 482, 362, 457, 465, 350, 340,
	200, 463, 348, 339, 295, 634, 635, 253, 275, 397,
	333, 398, 276, 358, 357, 359, 194, 475, 0, 195,
	0, 436, 476, 505, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 373, 396, 394, 400,
	0, 452, 469, 479, 486, 492, 493, 495, 496, 497,
	498, 499, 500, 361, 278, 432, 294, 331, 0, 0,
	379, 412, 219, 473, 433, 671, 663, 621, 675, 623,
	672, 673, 618, 619, 622, 674, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 666, 608, 607, 0, 614,
	615, 0, 624, 625, 627, 631, 632, 633, 636, 637,
	638, 646, 648, 649, 647, 650, 651, 652, 655, 656,
	657, 658, 653, 654, 659, 606, 187, 202, 327, 0,
	401, 261, 502, 481, 477, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 420, 421, 426, 427, 428, 429, 437, 441,
	459, 460, 472, 485, 490, 270, 467, 491, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 480, 438, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 423, 444,
	445, 446, 448, 351, 240, 386, 0, 352, 334, 450,
	451, 280, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 605,
	0, 0, 0, 244, 610, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	617, 329, 0, 0, 434, 355, 0, 0, 0, 0,
	0, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 435, 259, 0, 87, 0,
	0, 184, 185, 186, 681, 688, 689, 690, 691, 692,
	682, 684, 0, 0, 217, 683, 224, 628, 630, 629,
	639, 640, 641, 642, 643, 644, 645, 626, 686, 693,
	694, 0, 239, 285, 246, 238, 453, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 588, 602, 0, 616, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 599, 600, 0, 0, 0, 0,
	665, 0, 601, 0, 0, 609, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 611, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 664, 0, 0, 487, 0, 0, 662, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	0, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 634, 635, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	361, 278, 432, 294, 331, 0, 0, 379, 412, 219,
	473, 433, 671, 663, 621, 675, 623, 672, 673, 618,
	619, 622, 674, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 0, 666, 608, 607, 0, 614, 615, 0, 624,
	625, 627, 631, 632, 633, 636, 637, 638, 646, 648,
	649, 647, 650, 651, 652, 655, 656, 657, 658, 653,
	654, 659, 606, 187, 202, 327, 0, 401, 261, 502,
	481, 477, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 420,
	421, 426, 427, 428, 429, 437, 441, 459, 460, 472,
	485, 490, 270, 467, 491, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 480, 438, 207, 408, 262, 196,
	225, 210, 233, 248, 251, 288, 347, 354, 383, 387,
	267, 245, 223, 405, 220, 423, 444, 445, 446, 448,
	351, 240, 386, 0, 352, 334, 450, 451, 280, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 0, 605, 0, 0, 0,
	244, 610, 0, 0, 0, 325, 241, 0, 0, 384,
	0, 193, 0, 425, 228, 335, 332, 456, 255, 247,
	243, 227, 281, 342, 382, 443, 376, 617, 329, 0,
	0, 434, 355, 0, 0, 0, 0, 0, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 367, 435, 259, 0, 87, 0, 0, 184, 185,
	186, 681, 688, 689, 690, 691, 692, 682, 684, 0,
	0, 217, 683, 224, 628, 630, 629, 639, 640, 641,
	642, 643, 644, 645, 626, 686, 693, 694, 0, 239,
	285, 246, 238, 453, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	602, 0, 616, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 599, 600, 0, 0, 0, 0, 665, 0, 601,
	0, 0, 609, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 611, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 356, 231, 0, 664,
	0, 0, 487, 0, 0, 662, 0, 0, 0, 0,
	324, 0, 293, 188, 205, 0, 0, 366, 407, 413,
	0, 0, 0, 229, 0, 411, 380, 471, 213, 257,
	404, 385, 409, 392, 260, 0, 0, 410, 330, 458,
	399, 468, 488, 489, 237, 360, 478, 447, 484, 501,
	206, 234, 374, 440, 474, 431, 353, 454, 455, 292,
	430, 266, 191, 328, 494, 204, 419, 221, 211, 197,
	442, 466, 218, 422, 0, 0, 503, 199, 464, 439,
	349, 289, 290, 198, 0, 403, 242, 264, 232, 369,
	461, 462, 230, 504, 208, 483, 201, 0, 482, 362,
	457, 465, 350, 340, 200, 463, 348, 339, 295, 634,
	635, 253, 275, 397, 333, 398, 276, 358, 357, 359,
	194, 475, 0, 195, 0, 436, 476, 505, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	373, 396, 394, 400, 0, 452, 469, 479, 486, 492,
	493, 495, 496, 497, 498, 499, 500, 361, 278, 432,
	294, 331, 0, 0, 379, 412, 219, 473, 433, 671,
	663, 621, 675, 623, 672, 673, 618, 619, 622, 674,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 666,
	608, 607, 0, 614, 615, 0, 624, 625, 627, 631,
	632, 633, 636, 637, 638, 646, 648, 649, 647, 650,
	651, 652, 655, 656, 657, 658, 653, 654, 659, 606,
	187, 202, 327, 0, 401, 261, 502, 481, 477, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 343,
	344, 345, 346, 363, 364, 365, 368, 371, 372, 375,
	377, 378, 381, 388, 389, 390, 391, 393, 395, 402,
	406, 414, 415, 416, 417, 418, 420, 421, 426, 427,
	428, 429, 437, 441, 459, 460, 472, 485, 490, 270,
	467, 491, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 480, 438, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 423, 444, 445, 446, 448, 351, 240, 386,
	0, 352, 334, 450, 451, 280, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	425, 228, 335, 332, 456, 255, 247, 243, 227, 281,
	342, 382, 443, 376, 0, 329, 0, 0, 434, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 435,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 688,
	689, 0, 0, 0, 0, 1642, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	453, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 471, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 458, 399, 468, 488,
	489, 237, 360, 478, 447, 484, 501, 206, 234, 374,
	440, 474, 431, 353, 454, 455, 292, 430, 266, 191,
	328, 494, 204, 419, 221, 211, 197, 442, 466, 218,
	422, 0, 0, 503, 199, 464, 439, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 461, 462, 230,
	504, 208, 483, 201, 0, 482, 362, 457, 465, 350,
	340, 200, 463, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 475, 0,
	195, 0, 436, 476, 505, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 452, 469, 479, 486, 492, 493, 495, 496,
	497, 498, 499, 500, 361, 278, 432, 294, 331, 0,
	0, 379, 412, 219, 473, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 524, 341, 424, 470, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 401, 261, 502, 481, 477, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 420, 421, 426, 427, 428, 429, 437,
	441, 459, 460, 472, 485, 490, 270, 467, 491, 0,
	336, 0, 0, 338, 254, 273, 284, 0, 480, 438,
	207, 408, 262, 196, 225, 210, 233, 248, 251, 288,
	347, 354, 383, 387, 267, 245, 223, 405, 220, 423,
	444, 445, 446, 448, 351, 240, 386, 0, 352, 334,
	450, 451, 280, 449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 325,
	241, 0, 0, 384, 0, 193, 0, 425, 228, 335,
	332, 456, 255, 247, 243, 227, 281, 342, 382, 443,
	376, 0, 329, 0, 0, 434, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 367, 435, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 310, 319,
	318, 299, 300, 302, 304, 309, 316, 322, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 453, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 992, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	356, 231, 0, 0, 0, 991, 487, 0, 0, 0,
	0, 0, 988, 989, 324, 951, 293, 188, 205, 982,
	986, 366, 407, 413, 0, 0, 0, 229, 0, 411,
	380, 471, 213, 257, 404, 385, 409, 392, 260, 0,
	0, 410, 330, 458, 399, 468, 488, 489, 237, 360,
	478, 447, 484, 501, 206, 234, 374, 440, 474, 431,
	353, 454, 455, 292, 430, 266, 191, 328, 494, 204,
	419, 221, 211, 197, 442, 466, 218, 422, 0, 0,
	503, 199, 464, 439, 349, 289, 290, 198, 0, 403,
	242, 264, 232, 369, 461, 462, 230, 504, 208, 483,
	201, 0, 482, 362, 457, 465, 350, 340, 200, 463,
	348, 339, 295, 314, 315, 253, 275, 397, 333, 398,
	276, 358, 357, 359, 194, 475, 0, 195, 0, 436,
	476, 505, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 373, 396, 394, 400, 0, 452,
	469, 479, 486, 492, 493, 495, 496, 497, 498, 499,
	500, 361, 278, 432, 294, 331, 0, 0, 379, 412,
	219, 473, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 341, 424, 470, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 401, 261,
	502, 481, 477, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	420, 421, 426, 427, 428, 429, 437, 441, 459, 460,
	472, 485, 490, 270, 467, 491, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 480, 438, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 423, 444, 445, 446,
	448, 351, 240, 386, 0, 0, 334, 450, 451, 280,
	352, 0, 0, 0, 78, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 325, 241, 0, 0, 384, 0, 193, 0, 425,
	228, 335, 332, 456, 255, 247, 243, 227, 281, 342,
	382, 443, 376, 0, 329, 0, 0, 434, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 367, 435, 259,
	0, 87, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	310, 319, 318, 299, 300, 302, 304, 309, 316, 322,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 453,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 356, 231, 0, 0, 0, 0, 487, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 366, 407, 413, 0, 0, 0, 229,
	0, 411, 380, 471, 213, 257, 404, 385, 409, 392,
	260, 0, 0, 410, 330, 458, 399, 468, 488, 489,
	237, 360, 478, 447, 484, 501, 206, 234, 374, 440,
	474, 431, 353, 454, 455, 292, 430, 266, 191, 328,
	494, 204, 419, 221, 211, 197, 442, 466, 218, 422,
	0, 0, 503, 199, 464, 439, 349, 289, 290, 198,
	0, 403, 242, 264, 232, 369, 461, 462, 230, 504,
	208, 483, 201, 0, 482, 362, 457, 465, 350, 340,
	200, 463, 348, 339, 295, 314, 315, 253, 275, 397,
	333, 398, 276, 358, 357, 359, 194, 475, 0, 195,
	0, 436, 476, 505, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 373, 396, 394, 400,
	0, 452, 469, 479, 486, 492, 493, 495, 496, 497,
	498, 499, 500, 361, 278, 432, 294, 331, 0, 0,
	379, 412, 219, 473, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 524, 341, 424, 470, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 86,
	401, 261, 502, 481, 477, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 420, 421, 426, 427, 428, 429, 437, 441,
	459, 460, 472, 485, 490, 270, 467, 491, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 480, 438, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 423, 444,
	445, 446, 448, 351, 240, 386, 0, 1324, 334, 450,
	451, 280, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 1326, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	0, 329, 0, 0, 434, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 435, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 453, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 1157, 0,
	1158, 1159, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	0, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	361, 278, 432, 294, 331, 0, 0, 379, 412, 219,
	473, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 341, 424, 470, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 401, 261, 502,
	481, 477, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 420,
	421, 426, 427, 428, 429, 437, 441, 459, 460, 472,
	485, 490, 270, 467, 491, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 480, 438, 207, 408, 262, 196,
	225, 210, 233, 248, 251, 288, 347, 354, 383, 387,
	267, 245, 223, 405, 220, 423, 444, 445, 446, 448,
	351, 240, 386, 0, 352, 334, 450, 451, 280, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 325, 241, 0, 0, 384,
	0, 193, 0, 425, 228, 335, 332, 456, 255, 247,
	243, 227, 281, 342, 382, 443, 376, 0, 329, 0,
	0, 434, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 367, 435, 259, 0, 0, 0, 0, 184, 185,
	186, 1267, 1270, 0, 0, 0, 0, 1266, 1269, 0,
	0, 217, 1265, 224, 310, 319, 318, 299, 300, 302,
	304, 309, 316, 322, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 453, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 356, 231, 0, 0,
	0, 0, 487, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 293, 188, 205, 0, 0, 366, 407, 413,
	0, 0, 0, 229, 0, 411, 380, 471, 213, 257,
	404, 385, 409, 392, 260, 0, 0, 410, 330, 458,
	399, 468, 488, 489, 237, 360, 478, 447, 484, 501,
	206, 234, 374, 440, 474, 431, 353, 454, 455, 292,
	430, 266, 191, 328, 494, 204, 419, 221, 211, 197,
	442, 466, 218, 422, 0, 0, 503, 199, 464, 439,
	349, 289, 290, 198, 0, 403, 242, 264, 232, 369,
	461, 462, 230, 504, 208, 483, 201, 0, 482, 362,
	457, 465, 350, 340, 200, 463, 348, 339, 295, 314,
	315, 253, 275, 397, 333, 398, 276, 358, 357, 359,
	194, 475, 0, 195, 0, 436, 476, 505, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	373, 396, 394, 400, 0, 452, 469, 479, 486, 492,
	493, 495, 496, 497, 498, 499, 500, 361, 278, 432,
	294, 331, 0, 0, 379, 412, 219, 473, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 524, 341,
	424, 470, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 401, 261, 502, 481, 477, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 343,
	344, 345, 346, 363, 364, 365, 368, 371, 372, 375,
	377, 378, 381, 388, 389, 390, 391, 393, 395, 402,
	406, 414, 415, 416, 417, 418, 420, 421, 426, 427,
	428, 429, 437, 441, 459, 460, 472, 485, 490, 270,
	467, 491, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 480, 438, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 423, 444, 445, 446, 448, 351, 240, 386,
	0, 0, 334, 450, 451, 280, 352, 0, 0, 0,
	78, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 325, 241, 0,
	0, 384, 0, 193, 0, 425, 228, 335, 332, 456,
	255, 247, 243, 227, 281, 342, 382, 443, 376, 0,
	329, 0, 0, 434, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 367, 435, 259, 0, 87, 0, 1305,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 310, 319, 318, 299,
	300, 302, 304, 309, 316, 322, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 453, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 356, 231,
	0, 0, 0, 0, 487, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 293, 188, 205, 0, 0, 366,
	407, 413, 0, 0, 0, 229, 0, 411, 380, 471,
	213, 257, 404, 385, 409, 392, 260, 0, 0, 410,
	330, 458, 399, 468, 488, 489, 237, 360, 478, 447,
	484, 501, 206, 234, 374, 440, 474, 431, 353, 454,
	455, 292, 430, 266, 191, 328, 494, 204, 419, 221,
	211, 197, 442, 466, 218, 422, 0, 0, 503, 199,
	464, 439, 349, 289, 290, 198, 0, 403, 242, 264,
	232, 369, 461, 462, 230, 504, 208, 483, 201, 0,
	482, 362, 457, 465, 350, 340, 200, 463, 348, 339,
	295, 314, 315, 253, 275, 397, 333, 398, 276, 358,
	357, 359, 194, 475, 0, 195, 0, 436, 476, 505,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 326, 373, 396, 394, 400, 0, 452, 469, 479,
	486, 492, 493, 495, 496, 497, 498, 499, 500, 361,
	278, 432, 294, 331, 0, 0, 379, 412, 219, 473,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 341, 424, 470, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 86, 401, 261, 502, 481,
	477, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 420, 421,
	426, 427, 428, 429, 437, 441, 459, 460, 472, 485,
	490, 270, 467, 491, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 480, 438, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 423, 444, 445, 446, 448, 351,
	240, 386, 0, 352, 334, 450, 451, 280, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 425, 228, 335, 332, 456, 255, 247, 243,
	227, 281, 342, 382, 443, 376, 0, 329, 0, 0,
	434, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 435, 259, 0, 87, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 453, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 471, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 458, 399,
	468, 488, 489, 237, 360, 478, 447, 484, 501, 206,
	234, 374, 440, 474, 431, 353, 454, 455, 292, 430,
	266, 191, 328, 494, 204, 419, 221, 211, 197, 442,
	466, 218, 422, 0, 0, 503, 199, 464, 439, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 461,
	462, 230, 504, 208, 483, 201, 0, 482, 362, 457,
	465, 350, 340, 200, 463, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	475, 0, 195, 0, 436, 476, 505, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 452, 469, 479, 486, 492, 493,
	495, 496, 497, 498, 499, 500, 361, 278, 432, 294,
	331, 0, 0, 379, 412, 219, 473, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 524, 341, 424,
	470, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 502, 481, 477, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 1801, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 420, 421, 426, 427, 428,
	429, 437, 441, 459, 460, 472, 485, 490, 270, 467,
	491, 0, 336, 0, 0, 338, 254, 273, 284, 0,
	480, 438, 207, 408, 262, 196, 225, 210, 233, 248,
	251, 288, 347, 354, 383, 387, 267, 245, 223, 405,
	220, 423, 444, 445, 446, 448, 351, 240, 386, 0,
	352, 334, 450, 451, 280, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 1753, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 325, 241, 0, 0, 384, 0, 193, 0, 425,
	228, 335, 332, 456, 255, 247, 243, 227, 281, 342,
	382, 443, 376, 0, 329, 0, 0, 434, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 367, 435, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1499, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	310, 319, 318, 299, 300, 302, 304, 309, 316, 322,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 453,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 356, 231, 0, 0, 0, 0, 487, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 366, 407, 413, 0, 0, 0, 229,
	0, 411, 380, 471, 213, 257, 404, 385, 409, 392,
	260, 0, 1751, 410, 330, 458, 399, 468, 488, 489,
	237, 360, 478, 447, 484, 501, 206, 234, 374, 440,
	474, 431, 353, 454, 455, 292, 430, 266, 191, 328,
	494, 204, 419, 221, 211, 197, 442, 466, 218, 422,
	0, 0, 503, 199, 464, 439, 349, 289, 290, 198,
	0, 403, 242, 264, 232, 369, 461, 462, 230, 504,
	208, 483, 201, 0, 482, 362, 457, 465, 350, 340,
	200, 463, 348, 339, 295, 314, 315, 253, 275, 397,
	333, 398, 276, 358, 357, 359, 194, 475, 0, 195,
	0, 436, 476, 505, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 373, 396, 394, 400,
	0, 452, 469, 479, 486, 492, 493, 495, 496, 497,
	498, 499, 500, 361, 278, 432, 294, 331, 0, 0,
	379, 412, 219, 473, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 524, 341, 424, 470, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 0,
	401, 261, 502, 481, 477, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 420, 421, 426, 427, 428, 429, 437, 441,
	459, 460, 472, 485, 490, 270, 467, 491, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 480, 438, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 423, 444,
	445, 446, 448, 351, 240, 386, 0, 352, 334, 450,
	451, 280, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	0, 329, 0, 0, 434, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 435, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 453, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 945, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	0, 0, 0, 324, 951, 293, 188, 205, 949, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	0, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	361, 278, 432, 294, 331, 0, 0, 379, 412, 219,
	473, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 341, 424, 470, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 401, 261, 502,
	481, 477, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 420,
	421, 426, 427, 428, 429, 437, 441, 459, 460, 472,
	485, 490, 270, 467, 491, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 480, 438, 207, 408, 262, 196,
	225, 210, 233, 248, 251, 288, 347, 354, 383, 387,
	267, 245, 223, 405, 220, 423, 444, 445, 446, 448,
	351, 240, 386, 0, 352, 334, 450, 451, 280, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 1753, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 325, 241, 0, 0, 384,
	0, 193, 0, 425, 228, 335, 332, 456, 255, 247,
	243, 227, 281, 342, 382, 443, 376, 0, 329, 0,
	0, 434, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 367, 435, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1499, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 310, 319, 318, 299, 300, 302,
	304, 309, 316, 322, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 453, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 356, 231, 0, 0,
	0, 0, 487, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 293, 188, 205, 0, 0, 366, 407, 413,
	0, 0, 0, 229, 0, 411, 380, 471, 213, 257,
	404, 385, 409, 392, 260, 0, 0, 410, 330, 458,
	399, 468, 488, 489, 237, 360, 478, 447, 484, 501,
	206, 234, 374, 440, 474, 431, 353, 454, 455, 292,
	430, 266, 191, 328, 494, 204, 419, 221, 211, 197,
	442, 466, 218, 422, 0, 0, 503, 199, 464, 439,
	349, 289, 290, 198, 0, 403, 242, 264, 232, 369,
	461, 462, 230, 504, 208, 483, 201, 0, 482, 362,
	457, 465, 350, 340, 200, 463, 348, 339, 295, 314,
	315, 253, 275, 397, 333, 398, 276, 358, 357, 359,
	194, 475, 0, 195, 0, 436, 476, 505, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	373, 396, 394, 400, 0, 452, 469, 479, 486, 492,
	493, 495, 496, 497, 498, 499, 500, 361, 278, 432,
	294, 331, 0, 0, 379, 412, 219, 473, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 524, 341,
	424, 470, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 401, 261, 502, 481, 477, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 343,
	344, 345, 346, 363, 364, 365, 368, 371, 372, 375,
	377, 378, 381, 388, 389, 390, 391, 393, 395, 402,
	406, 414, 415, 416, 417, 418, 420, 421, 426, 427,
	428, 429, 437, 441, 459, 460, 472, 485, 490, 270,
	467, 491, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 480, 438, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 423, 444, 445, 446, 448, 351, 240, 386,
	0, 352, 334, 450, 451, 280, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	425, 228, 335, 332, 456, 255, 247, 243, 227, 281,
	342, 382, 443, 376, 0, 329, 0, 0, 434, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 435,
	259, 0, 0, 0, 1305, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	453, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 487,
	0, 0, 0, 2763, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 471, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 458, 399, 468, 488,
	489, 237, 360, 478, 447, 484, 501, 206, 234, 374,
	440, 474, 431, 353, 454, 455, 292, 430, 266, 191,
	328, 494, 204, 419, 221, 211, 197, 442, 466, 218,
	422, 0, 0, 503, 199, 464, 439, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 461, 462, 230,
	504, 208, 483, 201, 0, 482, 362, 457, 465, 350,
	340, 200, 463, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 475, 0,
	195, 0, 436, 476, 505, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 452, 469, 479, 486, 492, 493, 495, 496,
	497, 498, 499, 500, 361, 278, 432, 294, 331, 0,
	0, 379, 412, 219, 473, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 524, 341, 424, 470, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 401, 261, 502, 481, 477, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 420, 421, 426, 427, 428, 429, 437,
	441, 459, 460, 472, 485, 490, 270, 467, 491, 0,
	336, 0, 0, 338, 254, 273, 284, 0, 480, 438,
	207, 408, 262, 196, 225, 210, 233, 248, 251, 288,
	347, 354, 383, 387, 267, 245, 223, 405, 220, 423,
	444, 445, 446, 448, 351, 240, 386, 0, 352, 334,
	450, 451, 280, 449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 325,
	241, 0, 0, 384, 0, 193, 0, 425, 228, 335,
	332, 456, 255, 247, 243, 227, 281, 342, 382, 443,
	376, 0, 329, 0, 0, 434, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 367, 435, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 2079, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 310, 319,
	318, 299, 300, 302, 304, 309, 316, 322, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 453, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	356, 231, 0, 0, 0, 0, 487, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 293, 188, 205, 0,
	0, 366, 407, 413, 0, 0, 0, 229, 0, 411,
	380, 471, 213, 257, 404, 385, 409, 392, 260, 0,
	0, 410, 330, 458, 399, 468, 488, 489, 237, 360,
	478, 447, 484, 501, 206, 234, 374, 440, 474, 431,
	353, 454, 455, 292, 430, 266, 191, 328, 494, 204,
	419, 221, 211, 197, 442, 466, 218, 422, 0, 0,
	503, 199, 464, 439, 349, 289, 290, 198, 0, 403,
	242, 264, 232, 369, 461, 462, 230, 504, 208, 483,
	201, 0, 482, 362, 457, 465, 350, 340, 200, 463,
	348, 339, 295, 314, 315, 253, 275, 397, 333, 398,
	276, 358, 357, 359, 194, 475, 0, 195, 0, 436,
	476, 505, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 373, 396, 394, 400, 0, 452,
	469, 479, 486, 492, 493, 495, 496, 497, 498, 499,
	500, 361, 278, 432, 294, 331, 0, 0, 379, 412,
	219, 473, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 341, 424, 470, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 401, 261,
	502, 481, 477, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	420, 421, 426, 427, 428, 429, 437, 441, 459, 460,
	472, 485, 490, 270, 467, 491, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 480, 438, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 423, 444, 445, 446,
	448, 351, 240, 386, 0, 352, 334, 450, 451, 280,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 425, 228, 335, 332, 456, 255,
	247, 243, 227, 281, 342, 382, 443, 376, 0, 329,
	0, 0, 434, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 435, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 2064, 0, 0, 0, 2065,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 453, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 471, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	458, 399, 468, 488, 489, 237, 360, 478, 447, 484,
	501, 206, 234, 374, 440, 474, 431, 353, 454, 455,
	292, 430, 266, 191, 328, 494, 204, 419, 221, 211,
	197, 442, 466, 218, 422, 0, 0, 503, 199, 464,
	439, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 461, 462, 230, 504, 208, 483, 201, 0, 482,
	362, 457, 465, 350, 340, 200, 463, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 475, 0, 195, 0, 436, 476, 505, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 452, 469, 479, 486,
	492, 493, 495, 496, 497, 498, 499, 500, 361, 278,
	432, 294, 331, 0, 0, 379, 412, 219, 473, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 524,
	341, 424, 470, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 401, 261, 502, 481, 477,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 420, 421, 426,
	427, 428, 429, 437, 441, 459, 460, 472, 485, 490,
	270, 467, 491, 0, 336, 0, 0, 338, 254, 273,
	284, 0, 480, 438, 207, 408, 262, 196, 225, 210,
	233, 248, 251, 288, 347, 354, 383, 387, 267, 245,
	223, 405, 220, 423, 444, 445, 446, 448, 351, 240,
	386, 0, 352, 334, 450, 451, 280, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 1349,
	0, 0, 0, 325, 241, 0, 0, 384, 0, 193,
	0, 425, 228, 335, 332, 456, 255, 247, 243, 227,
	281, 342, 382, 443, 376, 0, 329, 0, 0, 434,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 367,
	435, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	1348, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 310, 319, 318, 299, 300, 302, 304, 309,
	316, 322, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 453, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 356, 231, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	293, 188, 205, 0, 0, 366, 407, 413, 0, 0,
	0, 229, 0, 411, 380, 471, 213, 257, 404, 385,
	409, 392, 260, 0, 0, 410, 330, 458, 399, 468,
	488, 489, 237, 360, 478, 447, 484, 501, 206, 234,
	374, 440, 474, 431, 353, 454, 455, 292, 430, 266,
	191, 328, 494, 204, 419, 221, 211, 197, 442, 466,
	218, 422, 0, 0, 503, 199, 464, 439, 349, 289,
	290, 198, 0, 403, 242, 264, 232, 369, 461, 462,
	230, 504, 208, 483, 201, 0, 482, 362, 457, 465,
	350, 340, 200, 463, 348, 339, 295, 314, 315, 253,
	275, 397, 333, 398, 276, 358, 357, 359, 194, 475,
	0, 195, 0, 436, 476, 505, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 326, 373, 396,
	394, 400, 0, 452, 469, 479, 486, 492, 493, 495,
	496, 497, 498, 499, 500, 361, 278, 432, 294, 331,
	0, 0, 379, 412, 219, 473, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 524, 341, 424, 470,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 0, 187, 202,
	327, 0, 401, 261, 502, 481, 477, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 343, 344, 345,
	346, 363, 364, 365, 368, 371, 372, 375, 377, 378,
	381, 388, 389, 390, 391, 393, 395, 402, 406, 414,
	415, 416, 417, 418, 420, 421, 426, 427, 428, 429,
	437, 441, 459, 460, 472, 485, 490, 270, 467, 491,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 480,
	438, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	423, 444, 445, 446, 448, 351, 240, 386, 0, 352,
	334, 450, 451, 280, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 425, 228,
	335, 332, 456, 255, 247, 243, 227, 281, 342, 382,
	443, 376, 0, 329, 0, 0, 434, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 435, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 453, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 487, 0, 0,
	0, 2843, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 471, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 458, 399, 468, 488, 489, 237,
	360, 478, 447, 484, 501, 206, 234, 374, 440, 474,
	431, 353, 454, 455, 292, 430, 266, 191, 328, 494,
	204, 419, 221, 211, 197, 442, 466, 218, 422, 0,
	0, 503, 199, 464, 439, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 461, 462, 230, 504, 208,
	483, 201, 0, 482, 362, 457, 465, 350, 340, 200,
	463, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 475, 0, 195, 0,
	436, 476, 505, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	452, 469, 479, 486, 492, 493, 495, 496, 497, 498,
	499, 500, 361, 278, 432, 294, 331, 0, 0, 379,
	412, 219, 473, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 524, 341, 424, 470, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 401,
	261, 502, 481, 477, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 420, 421, 426, 427, 428, 429, 437, 441, 459,
	460, 472, 485, 490, 270, 467, 491, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 480, 438, 207, 408,
	262, 196, 225, 210, 233, 248, 251, 288, 347, 354,
	383, 387, 267, 245, 223, 405, 220, 423, 444, 445,
	446, 448, 351, 240, 386, 0, 352, 334, 450, 451,
	280, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 325, 241, 0,
	0, 384, 0, 193, 0, 425, 228, 335, 332, 456,
	255, 247, 243, 227, 281, 342, 382, 443, 376, 0,
	329, 0, 0, 434, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 367, 435, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 1499, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 310, 319, 318, 299,
	300, 302, 304, 309, 316, 322, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 453, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 356, 231,
	0, 0, 0, 0, 487, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 293, 188, 205, 0, 0, 366,
	407, 413, 0, 0, 0, 229, 0, 411, 380, 471,
	213, 257, 404, 385, 409, 392, 260, 0, 0, 410,
	330, 458, 399, 468, 488, 489, 237, 360, 478, 447,
	484, 501, 206, 234, 374, 440, 474, 431, 353, 454,
	455, 292, 430, 266, 191, 328, 494, 204, 419, 221,
	211, 197, 442, 466, 218, 422, 0, 0, 503, 199,
	464, 439, 349, 289, 290, 198, 0, 403, 242, 264,
	232, 369, 461, 462, 230, 504, 208, 483, 201, 0,
	482, 362, 457, 465, 350, 340, 200, 463, 348, 339,
	295, 314, 315, 253, 275, 397, 333, 398, 276, 358,
	357, 359, 194, 475, 0, 195, 0, 436, 476, 505,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 326, 373, 396, 394, 400, 0, 452, 469, 479,
	486, 492, 493, 495, 496, 497, 498, 499, 500, 361,
	278, 432, 294, 331, 0, 0, 379, 412, 219, 473,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 341, 424, 470, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 401, 261, 502, 481,
	477, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 420, 421,
	426, 427, 428, 429, 437, 441, 459, 460, 472, 485,
	490, 270, 467, 491, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 480, 438, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 423, 444, 445, 446, 448, 351,
	240, 386, 0, 352, 334, 450, 451, 280, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 425, 228, 335, 332, 456, 255, 247, 243,
	227, 281, 342, 382, 443, 376, 0, 329, 0, 0,
	434, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 435, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 453, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 487, 0, 0, 0, 2763, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 471, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 458, 399,
	468, 488, 489, 237, 360, 478, 447, 484, 501, 206,
	234, 374, 440, 474, 431, 353, 454, 455, 292, 430,
	266, 191, 328, 494, 204, 419, 221, 211, 197, 442,
	466, 218, 422, 0, 0, 503, 199, 464, 439, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 461,
	462, 230, 504, 208, 483, 201, 0, 482, 362, 457,
	465, 350, 340, 200, 463, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	475, 0, 195, 0, 436, 476, 505, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 452, 469, 479, 486, 492, 493,
	495, 496, 497, 498, 499, 500, 361, 278, 432, 294,
	331, 0, 0, 379, 412, 219, 473, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 524, 341, 424,
	470, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 502, 481, 477, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 420, 421, 426, 427, 428,
	429, 437, 441, 459, 460, 472, 485, 490, 270, 467,
	491, 0, 336, 0, 0, 338, 254, 273, 284, 0,
	480, 438, 207, 408, 262, 196, 225, 210, 233, 248,
	251, 288, 347, 354, 383, 387, 267, 245, 223, 405,
	220, 423, 444, 445, 446, 448, 351, 240, 386, 0,
	352, 334, 450, 451, 280, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 325, 241, 0, 0, 384, 0, 193, 0, 425,
	228, 335, 332, 456, 255, 247, 243, 227, 281, 342,
	382, 443, 376, 0, 329, 0, 0, 434, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 367, 435, 259,
	0, 87, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	310, 319, 318, 299, 300, 302, 304, 309, 316, 322,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 453,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 356, 231, 0, 0, 0, 0, 487, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 366, 407, 413, 0, 0, 0, 229,
	0, 411, 380, 471, 213, 257, 404, 385, 409, 392,
	260, 0, 0, 410, 330, 458, 399, 468, 488, 489,
	237, 360, 478, 447, 484, 501, 206, 234, 374, 440,
	474, 431, 353, 454, 455, 292, 430, 266, 191, 328,
	494, 204, 419, 221, 211, 197, 442, 466, 218, 422,
	0, 0, 503, 199, 464, 439, 349, 289, 290, 198,
	0, 403, 242, 264, 232, 369, 461, 462, 230, 504,
	208, 483, 201, 0, 482, 362, 457, 465, 350, 340,
	200, 463, 348, 339, 295, 314, 315, 253, 275, 397,
	333, 398, 276, 358, 357, 359, 194, 475, 0, 195,
	0, 436, 476, 505, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 373, 396, 394, 400,
	0, 452, 469, 479, 486, 492, 493, 495, 496, 497,
	498, 499, 500, 361, 278, 432, 294, 331, 0, 0,
	379, 412, 219, 473, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 524, 341, 424, 470, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 0,
	401, 261, 502, 481, 477, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 420, 421, 426, 427, 428, 429, 437, 441,
	459, 460, 472, 485, 490, 270, 467, 491, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 480, 438, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 423, 444,
	445, 446, 448, 351, 240, 386, 0, 352, 334, 450,
	451, 280, 449, 0, 0, 0, 0, 1802, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	0, 329, 0, 0, 434, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 435, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 453, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	0, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	361, 278, 432, 294, 331, 0, 0, 379, 412, 219,
	473, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 341, 424, 470, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 401, 261, 502,
	481, 477, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 420,
	421, 426, 427, 428, 429, 437, 441, 459, 460, 472,
	485, 490, 270, 467, 491, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 480, 438, 207, 408, 262, 196,
	225, 210, 233, 248, 251, 288, 347, 354, 383, 387,
	267, 245, 223, 405, 220, 423, 444, 445, 446, 448,
	351, 240, 386, 0, 352, 334, 450, 451, 280, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 325, 241, 0, 0, 384,
	0, 193, 0, 425, 228, 335, 332, 456, 255, 247,
	243, 227, 281, 342, 382, 443, 376, 0, 329, 0,
	0, 434, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 367, 435, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 310, 319, 318, 299, 300, 302,
	304, 309, 316, 322, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 453, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 356, 231, 0, 0,
	0, 0, 487, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 293, 188, 205, 0, 0, 366, 407, 413,
	0, 0, 0, 229, 0, 411, 380, 471, 213, 257,
	404, 385, 409, 392, 260, 0, 0, 410, 330, 458,
	399, 468, 488, 489, 237, 360, 478, 447, 484, 501,
	206, 234, 374, 440, 474, 431, 353, 454, 455, 292,
	430, 266, 191, 328, 494, 204, 419, 221, 211, 197,
	442, 466, 218, 422, 0, 0, 503, 199, 464, 439,
	349, 289, 290, 198, 0, 403, 242, 264, 232, 369,
	461, 462, 230, 504, 208, 483, 201, 0, 482, 362,
	457, 465, 350, 340, 200, 463, 348, 339, 295, 314,
	315, 253, 275, 397, 333, 398, 276, 358, 357, 359,
	194, 475, 0, 195, 0, 436, 476, 505, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	373, 396, 394, 400, 0, 452, 469, 479, 486, 492,
	493, 495, 496, 497, 498, 499, 500, 361, 278, 432,
	294, 331, 0, 0, 379, 412, 219, 473, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 524, 341,
	424, 470, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 401, 261, 502, 481, 477, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 343,
	344, 345, 346, 363, 364, 365, 368, 371, 372, 375,
	377, 378, 381, 388, 389, 390, 391, 393, 395, 402,
	406, 414, 415, 416, 417, 418, 420, 421, 426, 427,
	428, 429, 437, 441, 459, 460, 472, 485, 490, 270,
	467, 491, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 480, 438, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 423, 444, 445, 446, 448, 351, 240, 386,
	0, 352, 334, 450, 451, 280, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	425, 228, 335, 332, 456, 255, 247, 243, 227, 281,
	342, 382, 443, 376, 0, 329, 0, 0, 434, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 435,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	453, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 471, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 458, 399, 468, 488,
	489, 237, 360, 478, 447, 484, 501, 206, 234, 374,
	440, 474, 431, 353, 454, 455, 292, 430, 266, 191,
	328, 494, 204, 419, 221, 211, 197, 442, 466, 218,
	422, 0, 0, 503, 199, 464, 439, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 461, 462, 230,
	504, 208, 483, 201, 0, 482, 362, 457, 465, 350,
	340, 200, 463, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 475, 0,
	195, 0, 436, 476, 505, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 452, 469, 479, 486, 492, 493, 495, 496,
	497, 498, 499, 500, 361, 278, 432, 294, 331, 0,
	0, 379, 412, 219, 473, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 524, 341, 424, 470, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 401, 261, 502, 481, 477, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 420, 421, 426, 427, 428, 429, 437,
	441, 459, 460, 472, 485, 490, 270, 467, 491, 0,
	336, 0, 0, 338, 254, 273, 284, 0, 480, 438,
	207, 408, 262, 196, 225, 210, 233, 248, 251, 288,
	347, 354, 383, 387, 267, 245, 223, 405, 220, 423,
	444, 445, 446, 448, 351, 240, 386, 0, 352, 334,
	450, 451, 280, 449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 325,
	241, 0, 0, 384, 0, 193, 0, 425, 228, 335,
	332, 456, 255, 247, 243, 227, 281, 342, 382, 443,
	376, 0, 329, 0, 0, 434, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 367, 435, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 310, 319,
	318, 299, 300, 302, 304, 309, 316, 322, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 453, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	356, 231, 0, 0, 0, 0, 487, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 293, 188, 205, 0,
	0, 366, 407, 413, 0, 0, 0, 229, 0, 411,
	380, 471, 213, 257, 404, 385, 409, 392, 260, 0,
	0, 410, 330, 458, 399, 468, 488, 489, 237, 360,
	478, 447, 484, 501, 206, 234, 374, 440, 474, 431,
	353, 454, 455, 292, 430, 266, 191, 328, 494, 204,
	419, 221, 211, 197, 442, 466, 218, 422, 0, 0,
	503, 199, 464, 439, 349, 289, 290, 198, 0, 403,
	242, 264, 232, 369, 461, 462, 230, 504, 208, 483,
	201, 0, 482, 362, 457, 465, 350, 340, 200, 463,
	348, 339, 295, 314, 315, 253, 275, 397, 333, 398,
	276, 358, 357, 359, 194, 475, 0, 195, 0, 436,
	476, 505, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 373, 396, 394, 400, 0, 452,
	469, 479, 486, 492, 493, 495, 496, 497, 498, 499,
	500, 361, 278, 432, 294, 331, 0, 0, 379, 412,
	219, 473, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 341, 424, 470, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 1593, 401, 261,
	502, 481, 477, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	420, 421, 426, 427, 428, 429, 437, 441, 459, 460,
	472, 485, 490, 270, 467, 491, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 480, 438, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 423, 444, 445, 446,
	448, 351, 240, 386, 0, 352, 334, 450, 451, 280,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 1471, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 425, 228, 335, 332, 456, 255,
	247, 243, 227, 281, 342, 382, 443, 376, 0, 329,
	0, 0, 434, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 435, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 453, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 471, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	458, 399, 468, 488, 489, 237, 360, 478, 447, 484,
	501, 206, 234, 374, 440, 474, 431, 353, 454, 455,
	292, 430, 266, 191, 328, 494, 204, 419, 221, 211,
	197, 442, 466, 218, 422, 0, 0, 503, 199, 464,
	439, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 461, 462, 230, 504, 208, 483, 201, 0, 482,
	362, 457, 465, 350, 340, 200, 463, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 475, 0, 195, 0, 436, 476, 505, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 452, 469, 479, 486,
	492, 493, 495, 496, 497, 498, 499, 500, 361, 278,
	432, 294, 331, 0, 0, 379, 412, 219, 473, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 524,
	341, 424, 470, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 401, 261, 502, 481, 477,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 420, 421, 426,
	427, 428, 429, 437, 441, 459, 460, 472, 485, 490,
	270, 467, 491, 0, 336, 0, 0, 338, 254, 273,
	284, 0, 480, 438, 207, 408, 262, 196, 225, 210,
	233, 248, 251, 288, 347, 354, 383, 387, 267, 245,
	223, 405, 220, 423, 444, 445, 446, 448, 351, 240,
	386, 0, 352, 334, 450, 451, 280, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 1469, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 325, 241, 0, 0, 384, 0, 193,
	0, 425, 228, 335, 332, 456, 255, 247, 243, 227,
	281, 342, 382, 443, 376, 0, 329, 0, 0, 434,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 367,
	435, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 310, 319, 318, 299, 300, 302, 304, 309,
	316, 322, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 453, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 356, 231, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	293, 188, 205, 0, 0, 366, 407, 413, 0, 0,
	0, 229, 0, 411, 380, 471, 213, 257, 404, 385,
	409, 392, 260, 0, 0, 410, 330, 458, 399, 468,
	488, 489, 237, 360, 478, 447, 484, 501, 206, 234,
	374, 440, 474, 431, 353, 454, 455, 292, 430, 266,
	191, 328, 494, 204, 419, 221, 211, 197, 442, 466,
	218, 422, 0, 0, 503, 199, 464, 439, 349, 289,
	290, 198, 0, 403, 242, 264, 232, 369, 461, 462,
	230, 504, 208, 483, 201, 0, 482, 362, 457, 465,
	350, 340, 200, 463, 348, 339, 295, 314, 315, 253,
	275, 397, 333, 398, 276, 358, 357, 359, 194, 475,
	0, 195, 0, 436, 476, 505, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 326, 373, 396,
	394, 400, 0, 452, 469, 479, 486, 492, 493, 495,
	496, 497, 498, 499, 500, 361, 278, 432, 294, 331,
	0, 0, 379, 412, 219, 473, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 524, 341, 424, 470,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 0, 187, 202,
	327, 0, 401, 261, 502, 481, 477, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 343, 344, 345,
	346, 363, 364, 365, 368, 371, 372, 375, 377, 378,
	381, 388, 389, 390, 391, 393, 395, 402, 406, 414,
	415, 416, 417, 418, 420, 421, 426, 427, 428, 429,
	437, 441, 459, 460, 472, 485, 490, 270, 467, 491,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 480,
	438, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	423, 444, 445, 446, 448, 351, 240, 386, 0, 352,
	334, 450, 451, 280, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 1467, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 425, 228,
	335, 332, 456, 255, 247, 243, 227, 281, 342, 382,
	443, 376, 0, 329, 0, 0, 434, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 435, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 453, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 471, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 458, 399, 468, 488, 489, 237,
	360, 478, 447, 484, 501, 206, 234, 374, 440, 474,
	431, 353, 454, 455, 292, 430, 266, 191, 328, 494,
	204, 419, 221, 211, 197, 442, 466, 218, 422, 0,
	0, 503, 199, 464, 439, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 461, 462, 230, 504, 208,
	483, 201, 0, 482, 362, 457, 465, 350, 340, 200,
	463, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 475, 0, 195, 0,
	436, 476, 505, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	452, 469, 479, 486, 492, 493, 495, 496, 497, 498,
	499, 500, 361, 278, 432, 294, 331, 0, 0, 379,
	412, 219, 473, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 524, 341, 424, 470, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 401,
	261, 502, 481, 477, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 420, 421, 426, 427, 428, 429, 437, 441, 459,
	460, 472, 485, 490, 270, 467, 491, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 480, 438, 207, 408,
	262, 196, 225, 210, 233, 248, 251, 288, 347, 354,
	383, 387, 267, 245, 223, 405, 220, 423, 444, 445,
	446, 448, 351, 240, 386, 0, 352, 334, 450, 451,
	280, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 1465, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 325, 241, 0,
	0, 384, 0, 193, 0, 425, 228, 335, 332, 456,
	255, 247, 243, 227, 281, 342, 382, 443, 376, 0,
	329, 0, 0, 434, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 367, 435, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 310, 319, 318, 299,
	300, 302, 304, 309, 316, 322, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 453, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 356, 231,
	0, 0, 0, 0, 487, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 293, 188, 205, 0, 0, 366,
	407, 413, 0, 0, 0, 229, 0, 411, 380, 471,
	213, 257, 404, 385, 409, 392, 260, 0, 0, 410,
	330, 458, 399, 468, 488, 489, 237, 360, 478, 447,
	484, 501, 206, 234, 374, 440, 474, 431, 353, 454,
	455, 292, 430, 266, 191, 328, 494, 204, 419, 221,
	211, 197, 442, 466, 218, 422, 0, 0, 503, 199,
	464, 439, 349, 289, 290, 198, 0, 403, 242, 264,
	232, 369, 461, 462, 230, 504, 208, 483, 201, 0,
	482, 362, 457, 465, 350, 340, 200, 463, 348, 339,
	295, 314, 315, 253, 275, 397, 333, 398, 276, 358,
	357, 359, 194, 475, 0, 195, 0, 436, 476, 505,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 326, 373, 396, 394, 400, 0, 452, 469, 479,
	486, 492, 493, 495, 496, 497, 498, 499, 500, 361,
	278, 432, 294, 331, 0, 0, 379, 412, 219, 473,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 341, 424, 470, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 401, 261, 502, 481,
	477, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 420, 421,
	426, 427, 428, 429, 437, 441, 459, 460, 472, 485,
	490, 270, 467, 491, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 480, 438, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 423, 444, 445, 446, 448, 351,
	240, 386, 0, 352, 334, 450, 451, 280, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 1463, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 425, 228, 335, 332, 456, 255, 247, 243,
	227, 281, 342, 382, 443, 376, 0, 329, 0, 0,
	434, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 435, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 453, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 471, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 458, 399,
	468, 488, 489, 237, 360, 478, 447, 484, 501, 206,
	234, 374, 440, 474, 431, 353, 454, 455, 292, 430,
	266, 191, 328, 494, 204, 419, 221, 211, 197, 442,
	466, 218, 422, 0, 0, 503, 199, 464, 439, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 461,
	462, 230, 504, 208, 483, 201, 0, 482, 362, 457,
	465, 350, 340, 200, 463, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	475, 0, 195, 0, 436, 476, 505, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 452, 469, 479, 486, 492, 493,
	495, 496, 497, 498, 499, 500, 361, 278, 432, 294,
	331, 0, 0, 379, 412, 219, 473, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 524, 341, 424,
	470, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 502, 481, 477, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 420, 421, 426, 427, 428,
	429, 437, 441, 459, 460, 472, 485, 490, 270, 467,
	491, 0, 336, 0, 0, 338, 254, 273, 284, 0,
	480, 438, 207, 408, 262, 196, 225, 210, 233, 248,
	251, 288, 347, 354, 383, 387, 267, 245, 223, 405,
	220, 423, 444, 445, 446, 448, 351, 240, 386, 0,
	352, 334, 450, 451, 280, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 1459,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 325, 241, 0, 0, 384, 0, 193, 0, 425,
	228, 335, 332, 456, 255, 247, 243, 227, 281, 342,
	382, 443, 376, 0, 329, 0, 0, 434, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 367, 435, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	310, 319, 318, 299, 300, 302, 304, 309, 316, 322,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 453,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 356, 231, 0, 0, 0, 0, 487, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 366, 407, 413, 0, 0, 0, 229,
	0, 411, 380, 471, 213, 257, 404, 385, 409, 392,
	260, 0, 0, 410, 330, 458, 399, 468, 488, 489,
	237, 360, 478, 447, 484, 501, 206, 234, 374, 440,
	474, 431, 353, 454, 455, 292, 430, 266, 191, 328,
	494, 204, 419, 221, 211, 197, 442, 466, 218, 422,
	0, 0, 503, 199, 464, 439, 349, 289, 290, 198,
	0, 403, 242, 264, 232, 369, 461, 462, 230, 504,
	208, 483, 201, 0, 482, 362, 457, 465, 350, 340,
	200, 463, 348, 339, 295, 314, 315, 253, 275, 397,
	333, 398, 276, 358, 357, 359, 194, 475, 0, 195,
	0, 436, 476, 505, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 373, 396, 394, 400,
	0, 452, 469, 479, 486, 492, 493, 495, 496, 497,
	498, 499, 500, 361, 278, 432, 294, 331, 0, 0,
	379, 412, 219, 473, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 524, 341, 424, 470, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 0,
	401, 261, 502, 481, 477, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 420, 421, 426, 427, 428, 429, 437, 441,
	459, 460, 472, 485, 490, 270, 467, 491, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 480, 438, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 423, 444,
	445, 446, 448, 351, 240, 386, 0, 352, 334, 450,
	451, 280, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 1457, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	0, 329, 0, 0, 434, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 435, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 453, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	0, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	361, 278, 432, 294, 331, 0, 0, 379, 412, 219,
	473, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 341, 424, 470, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 401, 261, 502,
	481, 477, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 420,
	421, 426, 427, 428, 429, 437, 441, 459, 460, 472,
	485, 490, 270, 467, 491, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 480, 438, 207, 408, 262, 196,
	225, 210, 233, 248, 251, 288, 347, 354, 383, 387,
	267, 245, 223, 405, 220, 423, 444, 445, 446, 448,
	351, 240, 386, 0, 352, 334, 450, 451, 280, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 1455, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 325, 241, 0, 0, 384,
	0, 193, 0, 425, 228, 335, 332, 456, 255, 247,
	243, 227, 281, 342, 382, 443, 376, 0, 329, 0,
	0, 434, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 367, 435, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 310, 319, 318, 299, 300, 302,
	304, 309, 316, 322, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 453, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 356, 231, 0, 0,
	0, 0, 487, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 293, 188, 205, 0, 0, 366, 407, 413,
	0, 0, 0, 229, 0, 411, 380, 471, 213, 257,
	404, 385, 409, 392, 260, 0, 0, 410, 330, 458,
	399, 468, 488, 489, 237, 360, 478, 447, 484, 501,
	206, 234, 374, 440, 474, 431, 353, 454, 455, 292,
	430, 266, 191, 328, 494, 204, 419, 221, 211, 197,
	442, 466, 218, 422, 0, 0, 503, 199, 464, 439,
	349, 289, 290, 198, 0, 403, 242, 264, 232, 369,
	461, 462, 230, 504, 208, 483, 201, 0, 482, 362,
	457, 465, 350, 340, 200, 463, 348, 339, 295, 314,
	315, 253, 275, 397, 333, 398, 276, 358, 357, 359,
	194, 475, 0, 195, 0, 436, 476, 505, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	373, 396, 394, 400, 0, 452, 469, 479, 486, 492,
	493, 495, 496, 497, 498, 499, 500, 361, 278, 432,
	294, 331, 0, 0, 379, 412, 219, 473, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 524, 341,
	424, 470, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 401, 261, 502, 481, 477, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 343,
	344, 345, 346, 363, 364, 365, 368, 371, 372, 375,
	377, 378, 381, 388, 389, 390, 391, 393, 395, 402,
	406, 414, 415, 416, 417, 418, 420, 421, 426, 427,
	428, 429, 437, 441, 459, 460, 472, 485, 490, 270,
	467, 491, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 480, 438, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 423, 444, 445, 446, 448, 351, 240, 386,
	0, 352, 334, 450, 451, 280, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	425, 228, 335, 332, 456, 255, 247, 243, 227, 281,
	342, 382, 443, 376, 0, 329, 0, 0, 434, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 435,
	259, 0, 1432, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	453, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 471, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 458, 399, 468, 488,
	489, 237, 360, 478, 447, 484, 501, 206, 234, 374,
	440, 474, 431, 353, 454, 455, 292, 430, 266, 191,
	328, 494, 204, 419, 221, 211, 197, 442, 466, 218,
	422, 0, 0, 503, 199, 464, 439, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 461, 462, 230,
	504, 208, 483, 201, 0, 482, 362, 457, 465, 350,
	340, 200, 463, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 475, 0,
	195, 0, 436, 476, 505, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 452, 469, 479, 486, 492, 493, 495, 496,
	497, 498, 499, 500, 361, 278, 432, 294, 331, 0,
	0, 379, 412, 219, 473, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 524, 341, 424, 470, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 401, 261, 502, 481, 477, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 420, 421, 426, 427, 428, 429, 437,
	441, 459, 460, 472, 485, 490, 270, 467, 491, 0,
	336, 0, 0, 338, 254, 273, 284, 0, 480, 438,
	207, 408, 262, 196, 225, 210, 233, 248, 251, 288,
	347, 354, 383, 387, 267, 245, 223, 405, 220, 423,
	444, 445, 446, 448, 351, 240, 386, 0, 352, 334,
	450, 451, 280, 449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 1333, 244, 0, 0, 0, 0, 325,
	241, 0, 0, 384, 0, 193, 0, 425, 228, 335,
	332, 456, 255, 247, 243, 227, 281, 342, 382, 443,
	376, 0, 329, 0, 0, 434, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 367, 435, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 310, 319,
	318, 299, 300, 302, 304, 309, 316, 322, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 453, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	356, 231, 0, 0, 0, 0, 487, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 293, 188, 205, 0,
	0, 366, 407, 413, 0, 0, 0, 229, 0, 411,
	380, 471, 213, 257, 404, 385, 409, 392, 260, 0,
	0, 410, 330, 458, 399, 468, 488, 489, 237, 360,
	478, 447, 484, 501, 206, 234, 374, 440, 474, 431,
	353, 454, 455, 292, 430, 266, 191, 328, 494, 204,
	419, 221, 211, 197, 442, 466, 218, 422, 0, 0,
	503, 199, 464, 439, 349, 289, 290, 198, 0, 403,
	242, 264, 232, 369, 461, 462, 230, 504, 208, 483,
	201, 0, 482, 362, 457, 465, 350, 340, 200, 463,
	348, 339, 295, 314, 315, 253, 275, 397, 333, 398,
	276, 358, 357, 359, 194, 475, 0, 195, 0, 436,
	476, 505, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 373, 396, 394, 400, 0, 452,
	469, 479, 486, 492, 493, 495, 496, 497, 498, 499,
	500, 361, 278, 432, 294, 331, 0, 0, 379, 412,
	219, 473, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 341, 424, 470, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 401, 261,
	502, 481, 477, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	420, 421, 426, 427, 428, 429, 437, 441, 459, 460,
	472, 485, 490, 270, 467, 491, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 480, 438, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 423, 444, 445, 446,
	448, 351, 240, 386, 0, 352, 334, 450, 451, 280,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 425, 228, 335, 332, 456, 255,
	247, 243, 227, 281, 342, 382, 443, 376, 0, 329,
	0, 0, 434, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 435, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 1134, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 453, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 471, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	458, 399, 468, 488, 489, 237, 360, 478, 447, 484,
	501, 206, 234, 374, 440, 474, 431, 353, 454, 455,
	292, 430, 266, 191, 328, 494, 204, 419, 221, 211,
	197, 442, 466, 218, 422, 0, 0, 503, 199, 464,
	439, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 461, 462, 230, 504, 208, 483, 201, 0, 482,
	362, 457, 465, 350, 340, 200, 463, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 475, 0, 195, 0, 436, 476, 505, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 452, 469, 479, 486,
	492, 493, 495, 496, 497, 498, 499, 500, 361, 278,
	432, 294, 331, 0, 0, 379, 412, 219, 473, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 524,
	341, 424, 470, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 401, 261, 502, 481, 477,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 420, 421, 426,
	427, 428, 429, 437, 441, 459, 460, 472, 485, 490,
	270, 467, 491, 0, 336, 0, 0, 338, 254, 273,
	284, 0, 480, 438, 207, 408, 262, 196, 225, 210,
	233, 248, 251, 288, 347, 354, 383, 387, 267, 245,
	223, 405, 220, 423, 444, 445, 446, 448, 351, 240,
	386, 0, 352, 334, 450, 451, 280, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 325, 241, 0, 0, 384, 0, 193,
	0, 425, 228, 335, 332, 456, 255, 247, 243, 227,
	281, 342, 382, 443, 376, 0, 329, 0, 0, 434,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 367,
	435, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 310, 319, 318, 299, 300, 302, 304, 309,
	316, 322, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 453, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 356, 231, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	293, 188, 205, 0, 0, 366, 407, 413, 0, 0,
	0, 229, 0, 411, 380, 471, 213, 257, 404, 385,
	409, 392, 260, 0, 0, 410, 330, 458, 399, 468,
	488, 489, 237, 360, 478, 447, 484, 501, 206, 234,
	374, 440, 474, 431, 353, 454, 455, 292, 430, 266,
	191, 328, 494, 204, 419, 221, 211, 197, 442, 466,
	218, 422, 0, 0, 503, 199, 464, 439, 349, 289,
	290, 198, 0, 403, 242, 264, 232, 369, 461, 462,
	230, 504, 208, 483, 201, 0, 482, 362, 457, 465,
	350, 340, 200, 463, 348, 339, 295, 314, 315, 253,
	275, 397, 333, 398, 276, 358, 357, 359, 194, 475,
	0, 195, 0, 436, 476, 505, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 326, 373, 396,
	394, 400, 0, 452, 469, 479, 486, 492, 493, 495,
	496, 497, 498, 499, 500, 361, 278, 432, 294, 331,
	0, 0, 379, 412, 219, 473, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 524, 341, 424, 470,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 0, 187, 202,
	327, 0, 401, 261, 502, 481, 477, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 757, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 343, 344, 345,
	346, 363, 364, 365, 368, 371, 372, 375, 377, 378,
	381, 388, 389, 390, 391, 393, 395, 402, 406, 414,
	415, 416, 417, 418, 420, 421, 426, 427, 428, 429,
	437, 441, 459, 460, 472, 485, 490, 270, 467, 491,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 480,
	438, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	423, 444, 445, 446, 448, 351, 240, 386, 0, 352,
	334, 450, 451, 280, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 425, 228,
	335, 332, 456, 255, 247, 243, 227, 281, 342, 382,
	443, 376, 0, 329, 0, 0, 434, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 435, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 453, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 471, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 458, 399, 468, 488, 489, 237,
	360, 478, 447, 484, 501, 206, 234, 374, 440, 474,
	431, 353, 454, 455, 292, 430, 266, 191, 328, 494,
	204, 419, 221, 211, 197, 442, 466, 218, 422, 0,
	0, 503, 199, 464, 439, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 461, 462, 230, 504, 208,
	483, 201, 0, 482, 362, 457, 465, 350, 340, 200,
	463, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 475, 0, 195, 0,
	436, 476, 505, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	452, 469, 479, 486, 492, 493, 495, 496, 497, 498,
	499, 500, 361, 278, 432, 294, 331, 0, 0, 379,
	412, 219, 473, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 524, 341, 424, 470, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 401,
	261, 502, 481, 477, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 420, 421, 426, 427, 428, 429, 437, 441, 459,
	460, 472, 485, 490, 579, 467, 491, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 480, 438, 207, 408,
	262, 196, 225, 210, 233, 248, 251, 288, 347, 354,
	383, 387, 267, 245, 223, 405, 220, 423, 444, 445,
	446, 448, 351, 240, 386, 0, 352, 334, 450, 451,
	280, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 325, 241, 0,
	0, 384, 0, 193, 0, 425, 228, 335, 332, 456,
	255, 247, 243, 227, 281, 342, 382, 443, 376, 0,
	329, 0, 0, 434, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 367, 435, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 310, 319, 318, 299,
	300, 302, 304, 309, 316, 322, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 453, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 356, 231,
	0, 0, 527, 0, 487, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 293, 188, 205, 0, 0, 366,
	407, 413, 0, 0, 0, 229, 0, 411, 380, 471,
	213, 257, 404, 385, 409, 392, 260, 0, 0, 410,
	330, 458, 399, 468, 488, 489, 237, 360, 478, 447,
	484, 501, 206, 234, 374, 440, 474, 431, 353, 454,
	455, 292, 430, 266, 191, 328, 494, 204, 419, 221,
	211, 197, 442, 466, 218, 422, 0, 0, 503, 199,
	464, 439, 349, 289, 290, 198, 0, 403, 242, 264,
	232, 369, 461, 462, 230, 504, 208, 483, 201, 0,
	482, 362, 457, 465, 350, 340, 200, 463, 348, 339,
	295, 314, 315, 253, 275, 397, 333, 398, 276, 358,
	357, 359, 194, 475, 0, 195, 0, 436, 476, 505,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 326, 373, 396, 394, 400, 0, 452, 469, 479,
	486, 492, 493, 495, 496, 497, 498, 499, 500, 361,
	278, 432, 294, 331, 0, 0, 379, 412, 219, 473,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 341, 424, 470, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 401, 261, 502, 481,
	477, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 420, 421,
	426, 427, 428, 429, 437, 441, 459, 460, 472, 485,
	490, 270, 467, 491, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 480, 438, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 423, 444, 445, 446, 448, 351,
	240, 386, 0, 352, 334, 450, 451, 280, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 425, 228, 335, 332, 456, 255, 247, 243,
	227, 281, 342, 382, 443, 376, 0, 329, 0, 0,
	434, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 435, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 453, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 471, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 458, 399,
	468, 488, 489, 237, 360, 478, 447, 484, 501, 206,
	234, 374, 440, 474, 431, 353, 454, 455, 292, 430,
	266, 191, 328, 494, 204, 419, 221, 211, 197, 442,
	466, 218, 422, 0, 0, 503, 199, 464, 439, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 461,
	462, 230, 504, 208, 483, 201, 0, 482, 362, 457,
	465, 350, 340, 200, 463, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	475, 0, 195, 0, 436, 476, 505, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 452, 469, 479, 486, 492, 493,
	495, 496, 497, 498, 499, 500, 361, 278, 432, 294,
	331, 0, 0, 379, 412, 219, 473, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 524, 341, 424,
	470, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 502, 481, 477, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 2848, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 420, 421, 426, 427, 428,
	429, 437, 441, 459, 460, 472, 485, 490, 270, 467,
	491, 0, 336, 0, 0, 338, 254, 273, 284, 0,
	480, 438, 207, 408, 262, 196, 225, 210, 233, 248,
	251, 288, 347, 354, 383, 387, 267, 245, 223, 405,
	220, 423, 444, 445, 446, 448, 351, 240, 386, 0,
	352, 334, 450, 451, 280, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 325, 241, 0, 0, 384, 0, 193, 0, 425,
	228, 335, 332, 456, 255, 247, 243, 227, 281, 342,
	382, 443, 376, 0, 329, 0, 0, 434, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 367, 435, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	310, 319, 318, 299, 300, 302, 304, 309, 316, 322,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 453,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 356, 231, 0, 0, 0, 0, 487, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 366, 407, 413, 0, 0, 0, 229,
	0, 411, 380, 471, 213, 257, 404, 385, 409, 392,
	260, 0, 0, 410, 330, 458, 399, 468, 488, 489,
	237, 360, 478, 447, 484, 501, 206, 234, 374, 440,
	474, 431, 353, 454, 455, 292, 430, 266, 191, 328,
	494, 204, 419, 221, 211, 197, 442, 466, 218, 422,
	0, 0, 503, 199, 464, 439, 349, 289, 290, 198,
	0, 403, 242, 264, 232, 369, 461, 462, 230, 504,
	208, 483, 201, 0, 482, 362, 457, 465, 350, 340,
	200, 463, 348, 339, 295, 314, 315, 253, 275, 397,
	333, 398, 276, 358, 357, 359, 194, 475, 0, 195,
	0, 436, 476, 505, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 373, 396, 394, 400,
	0, 452, 469, 479, 486, 492, 493, 495, 496, 497,
	498, 499, 500, 361, 278, 432, 294, 331, 0, 0,
	379, 412, 219, 473, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 524, 341, 424, 470, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 0,
	401, 261, 502, 481, 477, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 420, 421, 426, 427, 428, 429, 437, 441,
	459, 460, 472, 485, 490, 270, 467, 491, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 480, 438, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 423, 444,
	445, 446, 448, 351, 240, 386, 0, 352, 334, 450,
	451, 280, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	0, 329, 0, 0, 434, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 435, 259, 0, 0, 0,
	0, 184, 2516, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 453, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	0, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	361, 278, 432, 294, 331, 0, 0, 379, 412, 219,
	473, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 341, 424, 470, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 401, 261, 502,
	481, 477, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 420,
	421, 426, 427, 428, 429, 437, 441, 459, 460, 472,
	485, 490, 270, 467, 491, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 480, 438, 207, 408, 262, 196,
	225, 210, 233, 248, 251, 288, 347, 354, 383, 387,
	267, 245, 223, 405, 220, 423, 444, 445, 446, 448,
	351, 240, 386, 0, 352, 334, 450, 451, 280, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 325, 241, 0, 0, 384,
	0, 193, 0, 425, 228, 335, 332, 456, 255, 247,
	243, 227, 281, 342, 382, 443, 376, 0, 329, 0,
	0, 434, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 367, 435, 259, 0, 0, 0, 0, 184, 2060,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 310, 319, 318, 299, 300, 302,
	304, 309, 316, 322, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 453, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 356, 231, 0, 0,
	0, 0, 487, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 293, 188, 205, 0, 0, 366, 407, 413,
	0, 0, 0, 229, 0, 411, 380, 471, 213, 257,
	404, 385, 409, 392, 260, 0, 0, 410, 330, 458,
	399, 468, 488, 489, 237, 360, 478, 447, 484, 501,
	206, 234, 374, 440, 474, 431, 353, 454, 455, 292,
	430, 266, 191, 328, 494, 204, 419, 221, 211, 197,
	442, 466, 218, 422, 0, 0, 503, 199, 464, 439,
	349, 289, 290, 198, 0, 403, 242, 264, 232, 369,
	461, 462, 230, 504, 208, 483, 201, 0, 482, 362,
	457, 465, 350, 340, 200, 463, 348, 339, 295, 314,
	315, 253, 275, 397, 333, 398, 276, 358, 357, 359,
	194, 475, 0, 195, 0, 436, 476, 505, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	373, 396, 394, 400, 0, 452, 469, 479, 486, 492,
	493, 495, 496, 497, 498, 499, 500, 361, 278, 432,
	294, 331, 0, 0, 379, 412, 219, 473, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 524, 341,
	424, 470, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 401, 261, 502, 481, 477, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 343,
	344, 345, 346, 363, 364, 365, 368, 371, 372, 375,
	377, 378, 381, 388, 389, 390, 391, 393, 395, 402,
	406, 414, 415, 416, 417, 418, 420, 421, 426, 427,
	428, 429, 437, 441, 459, 460, 472, 485, 490, 270,
	467, 491, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 480, 438, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 423, 444, 445, 446, 448, 351, 240, 386,
	0, 0, 334, 450, 451, 280,
}

var yyPact = [...]int{
	3713, -1000, -415, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1909, 1972, -1000, -1000,
	-1000, -1000, 2072, -1000, 671, 1642, -1000, 1918, 299, -1000,
	39936, 461, -1000, 38762, 456, 3068, 39936, -1000, 130, -1000,
	118, 39936, 126, 38175, -1000, -1000, -268, 17033, 1830, -7,
	-8, 39936, -1000, -1000, -1000, -1000, 2033, 1590, -1000, 340,
	-1000, -1000, -1000, -1000, -1000, -1000, 37588, -1000, -1000, -1000,
	1921, 1890, 2074, 594, 1847, -1000, 1962, 1590, -1000, 17033,
	2031, 1949, 16446, -1000, 16446, 406, -1000, -1000, 12327, -1000,
	-1000, 22913, 39936, 28196, 307, -1000, 1918, -1000, -1000, 285,
	-1000, 271, 1486, -1000, 1473, -1000, 451, 437, 320, 445,
	428, 317, 314, 313, 310, 306, 303, 298, 287, 324,
	-1000, 620, 620, -157, -158, 404, 394, 394, 394, 424,
	1874, 1873, -1000, 647, -1000, 620, 620, 278, 620, 620,
	620, 620, 211, 207, 620, 620, 620, 620, 620, 620,
	620, 620, 620, 620, 620, 620, 620, 620, 620, 280,
	1918, 188, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 39936, 248, 39936, -1000, 519,
	39936, 781, 781, 10, 781, 781, 781, 781, 104, 578,
	-10, -1000, 94, 192, 85, 178, 739, 204, -1000, -1000,
	173, 739, 1117, 597, 91, -1000, 781, 781, -1000, 9959,
	172, 9959, 9959, -1000, 1903, -1000, -1000, -1000, -1000, 1124,
	-1000, 422, -1000, -1000, -1000, -1000, 39936, 37001, 325, 644,
	-1000, -1000, -1000, 31, -1000, -1000, 1236, 885, 17033, 1004,
	-1000, 1452, 565, -1000, -1000, -1000, -1000, -1000, 492, 17620,
	17620, 17620, 17620, -1000, -1000, 1460, 1460, 1460, 1460, 17620,
	1460, 17620, 1460, 1460, 1460, 1460, 17033, 1460, 1460, 1460,
	-1000, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460,
	1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460,
	1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460,
	1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460,
	1460, 518, 1460, 1460, 1460, 1460, 1460, -1000, -1000, -1000,
	-1000, 1460, 1460, 1460, 1460, 1460, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 20560, -1000, 14685, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 39936, -1000, 1460,
	138, 39936, 39936, 279, 1962, 1590, -1000, 2033, 1998, 340,
	-1000, 2248, 1388, 1403, 856, 1590, 1444, 39936, -1000, 1491,
	-1000, -1000, -1000, 1749, 1055, 1112, -1000, -1000, -1000, -1000,
	1218, 17033, -1000, -1000, 2063, -1000, 19973, 516, 786, 2062,
	36414, -1000, 406, 406, 1471, 11735, -35, -1000, -1000, -1000,
	643, 25848, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1903,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1554, 39936, -1000, -1000, 5440, 1111,
	-1000, 1628, -1000, 1518, -1000, 1591, 17033, 1600, 440, 1111,
	434, 433, 432, -1000, -98, -1000, -1000, -1000, -1000, -1000,
	620, 620, -1000, 288, 2013, 299, 4395, -1000, -1000, -1000,
	35827, 1627, 1111, -1000, 1623, -1000, 706, 469, 529, 529,
	1111, -1000, -1000, 39936, 1111, 702, 701, 39936, 39936, -1000,
	35240, -1000, 34653, 34066, 970, 39936, 33479, 32892, 32305, 31718,
	31131, -1000, 1822, -1000, 1714, -1000, -1000, -1000, 39936, 39936,
	39936, 281, -1000, -1000, 39936, 1111, -1000, -1000, 968, 956,
	620, 620, 954, 1102, 1101, 1098, 620, 620, 949, 1096,
	27022, 221, 933, 925, 924, 1066, 1093, 167, 997, 993,
	911, 39936, 1617, 39936, -1000, 166, 636, 341, 629, 1918,
	1823, 1468, 416, 439, 1111, 402, 402, 39936, -1000, 10551,
	-1000, -1000, 1092, 17033, -1000, 771, 739, 739, -1000, -1000,
	-1000, -1000, -1000, -1000, 781, 39936, 771, -1000, -1000, -1000,
	739, 781, 39936, 781, 781, 781, 781, 739, 739, 739,
	781, 39936, 39936, 39936, 39936, 39936, 39936, 39936, 39936, 39936,
	9959, 597, 781, -287, -1000, 1082, -1000, 1752, -1000, -1000,
	-1000, -1000, -1000, -1000, 9959, 9959, -1000, -1000, -1000, -1000,
	122, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-68, 1455, 30544, -1000, -288, -289, -290, -293, -1000, -1000,
	-1000, -297, -299, -1000, -1000, -1000, 17033, 17033, 17033, 17033,
	-184, -1000, 1261, 17620, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 836, 738, 17620, 17620, 17620, 17620, 17620, 17620, 17620,
	17620, 17620, 17620, 17620, 17620, 17620, 17620, 17620, 772, 4904,
	4904, 565, 565, 565, 565, -1000, 16446, 17033, 17033, 565,
	-1000, 1111, 29957, 16446, 16446, 17033, 1869, 669, 885, 39936,
	-1000, 856, -1000, -1000, -1000, 898, -1000, 39936, 39936, 76,
	17033, 17033, 17033, 17033, 17033, 17033, 13506, 17033, 17033, 17033,
	17033, 17033, 17033, 17033, 17033, 17033, 17033, 17033, 17033, 17033,
	17033, 17033, 17033, 17033, 17033, 17033, 17033, 17033, 17033, 17033,
	17033, 17033, 17033, 12919, 10551, 16446, 16446, 16446, 16446, 16446,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 509, 1228, 1318, 1360, -1000, 1453, -1000, -139,
	22326, 17033, 1080, 2061, 1671, 39936, -1000, -1000, -1000, 1962,
	-1000, 1962, 1228, 2216, 1758, 16446, -1000, -1000, 2216, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1204, -1000, 39936,
	1444, 1942, 39936, 1743, 1075, 283, -1000, 17033, 17033, 1430,
	-1000, 1183, 39936, -1000, -184, -1000, 29370, -1000, -1000, 9367,
	-1000, 39936, 284, 39936, -1000, 21739, 28783, 11143, -35, -1000,
	11143, 1306, -1000, -32, -40, 14093, 561, -1000, -1000, -1000,
	404, 18794, 1195, 561, 52, -1000, -1000, -1000, 1591, -1000,
	1591, 1591, 1591, 1591, 283, 283, 283, 283, -1000, -1000,
	-1000, -1000, -1000, 1612, 1611, -1000, 1591, 1591, 1591, 1591,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1609, 1609, 1609,
	1594, 1594, 359, -1000, 17033, 238, 28196, 1926, 908, 1390,
	166, 403, 1670, 1111, 1111, 1111, 403, -1000, 1297, 1291,
	-1000, -401, 1421, -1000, -1000, 2011, -1000, -1000, 661, 723,
	722, 484, 39936, 147, 275, -1000, 373, -1000, 28196, 1111,
	700, 529, 1111, -1000, 1111, -1000, -1000, -1000, -1000, -1000,
	1111, 1417, -1000, 1276, 767, 721, 754, 718, 1417, -1000,
	-1000, -140, 1417, -1000, 1417, -1000, 1417, -1000, 1417, -1000,
	1417, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 635,
	39936, 147, 772, -1000, 414, -1000, -1000, 772, 772, -1000,
	-1000, -1000, -1000, 1071, 1067, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -390, 39936, -1000, 161, 624, 257, 276, 231,
	39936, 162, 1946, 229, 202, 39936, 39936, 402, 1699, 39936,
	1931, 39936, -1000, -1000, -1000, -1000, -1000, 885, 39936, -1000,
	-1000, 781, 781, -1000, -1000, 39936, 781, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 781, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 39936, -1000, -1000, -1000, -1000, 39936, -1000, -1000, -1000,
	-1000, -1000, 68, -34, 296, -1000, -1000, -1000, -1000, -1000,
	1959, -1000, 885, 678, 675, -1000, 1460, -1000, -1000, 832,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 836, 17620, 17620,
	17620, 1498, 427, 1557, 913, 872, 800, 800, 849, 849,
	569, 569, 569, 569, 569, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1057, -1000, 1419, -1000, 2004, 1230, 856,
	-1000, 1419, 1419, 1289, 16446, -1000, -1000, 663, -1000, 17033,
	856, -1000, -1000, 856, 856, 1414, 1376, 2058, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1038,
	1390, 1390, 1390, 1390, 1390, 17033, 1191, -1000, -1000, -1000,
	2039, 1907, 856, 1236, 856, 1370, -1000, 1876, 1390, 1865,
	1860, 1833, 1253, 1810, 1787, 1753, 1390, 1390, 1390, 1211,
	1722, 1706, 1695, 1686, 1678, 1674, 1669, 1663, 1649, 1390,
	856, 16446, 16446, 1356, 1460, 504, -1000, 1419, 856, 856,
	1419, 1419, 10551, 856, -1000, 39936, -1000, -267, -1000, -49,
	576, 1460, -1000, 27022, 856, -1000, 4396, -1000, 41110, -1000,
	-1000, -1000, -1000, -1000, 25261, 1654, 2216, -1000, -1000, 1460,
	1488, -1000, -1000, 283, 12, 24674, -1000, -1000, 885, 885,
	17033, -1000, -1000, -1000, -1000, -1000, -1000, 503, 2043, 319,
	1460, -1000, 1268, 2178, -1000, -1000, -1000, 1941, 19386, -1000,
	1460, 1460, 39936, 1566, 1466, -1000, 495, -1000, 1306, -35,
	-58, -1000, -1000, -1000, -1000, 885, -1000, 1024, 286, 342,
	-1000, 366, -1000, -1000, -1000, -1000, 1846, 27, -1000, -1000,
	-1000, 283, 283, -1000, -1000, -1000, -1000, -1000, -1000, 1050,
	1050, -1000, -1000, -1000, -1000, -1000, 903, -1000, -1000, -1000,
	900, -1000, -1000, 1563, 1705, 238, -1000, -1000, 620, 1049,
	1863, 39936, -1000, -1000, 1189, 1926, 161, 39936, 665, 1697,
	-1000, 1670, 1670, 1670, 39936, -1000, -1000, -1000, -1000, -392,
	51, 293, -1000, -1000, -1000, 3783, 39936, 1448, -1000, 145,
	-1000, 1187, -1000, 39936, -1000, 1446, 1607, 1111, 1111, -1000,
	-1000, -1000, 39936, 1460, -1000, -1000, -1000, -1000, 430, 1908,
	1906, 147, 145, 561, 1111, -1000, -1000, -1000, -1000, -1000,
	-393, 1436, 429, 151, 250, 39936, 39936, 39936, 39936, 39936,
	479, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 197,
	408, -1000, 39936, 39936, 520, -1000, -1000, -1000, 739, -1000,
	-1000, 739, -1000, -1000, -1000, -1000, -1000, 1899, 39936, -36,
	-361, -1000, -353, 17033, -1000, -1000, -1000, -1000, 1464, 425,
	1557, 17620, 17620, 16446, -134, 729, 729, 772, -1000, -1000,
	-1000, 17033, 17033, 1405, 652, -1000, 17033, 986, -1000, -1000,
	-1000, 17033, 17033, 17033, 856, 241, -1000, -1000, -1000, -1000,
	-1000, 2057, -1000, 17033, 17033, 17033, -1000, -1000, 17033, 17033,
	-1000, 17033, 17033, 18207, 856, 18207, 17033, 17033, 18207, -1000,
	-1000, -1000, -1000, 18207, 17033, 17033, 17033, 17033, 17033, 17033,
	17033, 17033, 17033, -1000, -1000, 1419, 1419, 16446, 10551, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 576,
	-1000, 529, 529, 529, 39936, -1000, -1000, -1000, -1000, -1000,
	-1000, 1286, 1982, -1000, 1772, 1769, 2055, 2043, -1000, 21739,
	2216, -1000, -1000, 39936, -261, -1000, 1812, 1836, -1000, -1000,
	-1000, -1000, 8775, 1962, 17033, 1694, 39936, 1460, -1000, 21152,
	39936, 39936, 21739, 21739, 21739, 21739, 21739, -1000, 1736, 1727,
	-1000, 1712, 1711, 1797, 39936, -1000, 1412, 856, 1998, 19386,
	340, 17033, 23500, 1332, 21739, -1000, -1000, 21739, 39936, 8183,
	-1000, -1000, -42, -50, -1000, -1000, -1000, -1000, 404, -1000,
	-1000, 640, 1940, 1835, -1000, -1000, -1000, -1000, 1409, -1000,
	1400, 1278, 1378, 160, -1000, 1574, 1885, 620, 620, -1000,
	890, -1000, 1111, -1000, -1000, -1000, 426, -1000, 1930, 39936,
	1693, 1692, 1687, -1000, -407, 859, 1604, 1568, 17033, 1602,
	2009, 1249, 39936, -1000, -1000, 39936, -1000, 149, -1000, 238,
	39936, -1000, -1000, -1000, 275, 39936, -1000, 6195, 145, -1000,
	-1000, -1000, -1000, -1000, -1000, 39936, 165, -1000, 1601, 1123,
	-1000, -1000, 1662, -1000, -1000, -1000, -1000, 155, 251, -1000,
	39936, 517, 1705, 39936, -1000, -1000, -1000, 781, 781, -1000,
	-1000, 1877, -1000, 1111, 1390, 17620, 17620, -1000, 565, -1000,
	1460, 856, 1591, 1591, -1000, 1591, 1594, -1000, 1591, 111,
	1591, 105, 1591, -1000, -1000, 856, 856, 1157, 1142, -106,
	-1000, 885, 17033, 1599, 1595, 1390, -1000, 1589, 1585, 17033,
	1390, 1390, 1390, -1000, 885, 1253, 1569, 1312, -1000, -1000,
	-1000, -1000, 1271, 1390, 1509, 856, 856, 1374, 1374, 1374,
	1374, 1374, 1360, 1360, 1360, 1360, -1000, -1000, 856, -1000,
	-1000, 1958, 1958, 1958, 1348, 40523, 39936, -1000, -1000, -1000,
	-1000, 2043, 2040, 1257, -1000, -1000, 12, 354, -1000, 1795,
	1836, -1000, 2008, 1805, 2005, -1000, -1000, -1000, 885, -1000,
	1910, 1233, -1000, 623, 1231, -1000, -1000, 15859, 1351, 1765,
	489, 1348, 1434, 2178, 1652, 1685, 1779, -1000, -1000, -1000,
	-1000, 1723, -1000, 1696, -1000, -1000, 1491, -1000, -1000, 1318,
	856, 1380, 284, 21739, 1335, 1335, -1000, 485, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 743, 5874, 2070, -1000, 1048,
	-1000, 967, -1000, 698, 691, -1000, 39936, 1560, -1000, 283,
	1036, 283, 857, -1000, 851, -1000, -1000, -199, -1000, -1000,
	1660, 1803, -1000, -1000, 39936, -1000, -1000, 39936, 39936, 39936,
	1548, 2002, -1000, 17033, 1521, 621, 1534, 39936, 39936, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 386,
	620, -369, 199, 193, 620, 620, 620, -1000, -1000, 1343,
	1317, -1000, -159, -1000, 17033, -1000, -1000, -1000, 863, 863,
	-1000, 1491, -1000, -1000, -1000, 1169, -1000, -1000, -142, 39936,
	39936, 39936, 39936, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 565, 17620, -1000, -1000, 283, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 17033, -1000, 17033,
	-1000, 1962, 1030, 885, 17033, 17033, -1000, 847, 844, 1390,
	-1000, -1000, -1000, 856, 18207, -1000, 18207, -1000, 17033, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1460, 1854, 1460, 1460, 23500, -1000, -1000, 2040, 2006,
	1996, 1785, 1788, 1788, 1795, -1000, 1993, 1990, -1000, 1028,
	1980, 1027, 688, -1000, 39936, 17033, 1460, -1000, 344, 39936,
	1460, 39936, -1000, 2035, -1000, -1000, 17033, 1501, -1000, 17033,
	-1000, -1000, -1000, -1000, -1000, -1000, 4904, 2043, 1335, -1000,
	-1000, 587, -1000, 17033, -1000, -1000, -1000, 4582, -1000, -1000,
	-1000, -1000, -1000, 1493, 17033, -1000, -1000, -1000, 1149, 1143,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1491, -1000,
	-1000, -1000, -1000, 275, -398, 1459, 39936, 843, -1000, 1315,
	1249, 263, 1460, 1023, 620, 620, 620, 838, 826, 27022,
	349, -1000, 275, -1000, -164, -165, 1390, -1000, -1000, 1938,
	-1000, -1000, 10551, -1000, -1000, 1465, 1667, -1000, 230, -1000,
	1390, 1390, 856, -1000, 1390, 1390, 1134, 1084, -1000, -1000,
	1312, -1000, 1079, 24087, -1000, 1975, 1968, 27609, 27609, 576,
	2006, -1000, 17033, 17033, 1777, 821, -1000, -1000, -1000, -1000,
	1009, 1002, -1000, 996, -1000, 2066, -1000, 885, -1000, 1460,
	-1000, 483, 1231, -1000, 1962, 885, 39936, 885, 9, 2035,
	-1000, 1390, -1000, 1460, 1460, 1460, 1460, 1460, 1460, 1460,
	1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460,
	1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460,
	1460, 1460, 1460, 1460, 1460, 39936, 1341, -1000, -1000, 1933,
	1284, 50, -1000, 1273, -1000, -1000, 449, -1000, 17033, -1000,
	27022, 977, 969, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 340, 1247, -1000, 616, 39936, 39936, 856, 252, -145,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 17033,
	1244, -1000, -1000, -1000, -1000, -1000, 1244, 1244, -1000, -1000,
	885, 1236, -1000, 811, -1000, -1000, -1000, -1000, -1000, 39936,
	1231, 39936, -1000, 1238, 856, 1460, 1962, -1000, 1201, -1000,
	340, -1000, 1389, 1568, -1000, -1000, -1000, 15272, -1000, -1000,
	-1000, -1000, -141, 10551, 7591, 1198, -1000, -1000, 1726, -138,
	-149, 1253, 26435, -1000, -1000, -1000, -1000, -1000, 1226, -1000,
	-1000, 23500, 39349, -1000, 1680, 704, -141, 17033, 1229, 856,
	-1000, -6, -1000, -1000, -1000, -1000, -1000, 1662, -1000, 1718,
	-1000, 856, -1000, -1000, -1000, 1154, -1000, 3367, -228, 1677,
	-1000, 2051, -1000, -1000, -1000, 737, 813, -1000, -1000, -1000,
	-1000, 1164, 39936, -1000, 358, -1000, -1000, -142, -143, -1000,
	-1000, 39349, -224, 561, 4904, -1000, -1000, 2053, 583, 583,
	-1000, -1000, -409, 1141, 168, -1000, -147, -1000, -1000, 1929,
	9, -1000, -1000, -1000, 301, 854, -1000, -1000, 810, -409,
	-1000, -154, -233, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4904, 182, 182, -1000, 1675, -1000, -1000, 4904, -1000,
	1608, -229, -1000, -312, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2454, 2449, 21, 4, 2448, 2447, 2446, 37, 107,
	178, 30, 177, 90, 2445, 2444, 2443, 2442, 2441, 2440,
	2439, 243, 238, 222, 2437, 2436, 2435, 2434, 2433, 2431,
	2430, 2429, 2428, 2426, 199, 157, 173, 2424, 2423, 2421,
	105, 172, 80, 82, 169, 2415, 2412, 81, 2411, 2407,
	2406, 166, 165, 749, 2404, 160, 110, 35, 2402, 2401,
	2397, 2394, 2393, 2392, 2391, 2390, 2389, 2388, 2387, 2385,
	2384, 2382, 2381, 2379, 2378, 205, 2376, 2375, 14, 2374,
	83, 2371, 2370, 2369, 2368, 122, 2364, 2363, 2362, 2361,
	2360, 2359, 2358, 138, 2357, 2356, 2355, 2353, 174, 2352,
	2351, 305, 116, 106, 2350, 2349, 94, 176, 2348, 119,
	2347, 2346, 2345, 147, 2344, 4634, 2343, 55, 65, 2342,
	84, 75, 43, 48, 33, 1, 2341, 2340, 46, 74,
	2339, 96, 60, 2338, 95, 126, 2337, 2336, 10, 6,
	2335, 3, 2333, 2, 68, 2331, 2329, 111, 2328, 2323,
	2322, 88, 2321, 2320, 1183, 2319, 86, 125, 99, 73,
	2318, 34, 63, 2317, 2316, 2314, 2310, 2309, 44, 2307,
	2306, 2305, 132, 29, 159, 32, 70, 42, 134, 2301,
	98, 76, 2299, 136, 129, 2298, 59, 23, 41, 2284,
	26, 124, 118, 52, 89, 150, 2282, 2278, 53, 66,
	2277, 2275, 2273, 2270, 2268, 2267, 69, 2266, 47, 2264,
	179, 2263, 8, 2262, 39, 22, 2256, 67, 128, 61,
	31, 2255, 156, 2242, 36, 155, 123, 153, 2241, 2236,
	2235, 2233, 171, 289, 2232, 2230, 85, 161, 139, 151,
	2229, 298, 2226, 2225, 92, 1457, 2026, 28, 158, 2216,
	2213, 3201, 142, 25, 15, 2210, 154, 2209, 2204, 2203,
	182, 164, 101, 891, 104, 2202, 12, 2201, 2194, 2193,
	2187, 2184, 2182, 91, 2179, 2172, 2171, 175, 45, 7,
	163, 71, 2164, 2162, 2161, 120, 79, 2159, 152, 149,
	130, 207, 2157, 162, 143, 108, 2156, 58, 2155, 2152,
	2151, 2150, 2146, 93, 2145, 2144, 2143, 2137, 148, 140,
	121, 78, 2134, 77, 102, 146, 144, 40, 2133, 24,
	2132, 2126, 2124, 168, 20, 2121, 9, 49, 50, 19,
	100, 141, 2116, 0, 2108, 13, 167, 291, 145, 2107,
	2104, 5, 2102, 11, 2101, 133, 2100, 2099, 2098, 18,
	27, 16, 17, 2092, 2089, 4810, 3924, 131, 2087, 180,
}

//line sql.y:6733
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 353, 354, 354, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 333, 333,
	333, 336, 336, 32, 70, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 83, 83, 22, 23, 23, 23, 23,
	357, 357, 149, 149, 147, 147, 148, 148, 217, 217,
	24, 25, 25, 227, 227, 226, 226, 226, 228, 228,
	228, 228, 263, 263, 26, 26, 26, 26, 26, 99,
	99, 335, 335, 334, 326, 326, 325, 325, 324, 332,
	332, 331, 331, 330, 38, 39, 48, 48, 48, 48,
	49, 50, 337, 337, 299, 54, 54, 53, 53, 53,
	53, 55, 55, 52, 52, 51, 51, 301, 301, 287,
	287, 300, 300, 300, 300, 300, 300, 300, 286, 286,
	110, 110, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 348, 348, 197, 197, 197, 197, 197,
	197, 119, 119, 128, 128, 128, 128, 128, 117, 117,
	118, 116, 116, 116, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 127, 127, 123,
	123, 123, 124, 124, 124, 125, 125, 349, 349, 349,
	349, 266, 266, 266, 266, 269, 269, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 268, 268, 268, 268,
	268, 270, 270, 270, 270, 270, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 272, 272, 272, 272, 272, 272, 272, 272, 285,
	285, 273, 273, 280, 280, 281, 281, 281, 282, 282,
	282, 283, 283, 278, 278, 278, 278, 278, 278, 279,
	279, 279, 288, 313, 313, 312, 312, 310, 310, 310,
	310, 297, 297, 307, 307, 307, 307, 307, 296, 296,
	292, 292, 292, 293, 293, 294, 294, 291, 291, 295,
	295, 309, 309, 308, 308, 289, 289, 290, 290, 315,
	350, 350, 350, 350, 351, 351, 316, 342, 343, 341,
	341, 341, 341, 341, 80, 80, 80, 240, 240, 240,
	305, 305, 304, 304, 304, 306, 306, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 235, 235, 235, 340, 340,
	340, 340, 340, 340, 339, 339, 339, 302, 302, 302,
	338, 338, 56, 56, 181, 181, 45, 45, 45, 45,
	45, 45, 44, 44, 44, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 46, 46,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 85,
	85, 86, 86, 86, 86, 88, 88, 88, 318, 318,
	57, 57, 3, 3, 137, 139, 140, 140, 138, 138,
	138, 138, 138, 138, 59, 59, 58, 58, 142, 141,
	143, 143, 143, 1, 1, 2, 2, 4, 4, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 284, 284, 284, 317, 317, 319, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 321, 321, 321, 60,
	60, 322, 274, 275, 276, 5, 6, 298, 320, 95,
	95, 28, 37, 37, 29, 29, 29, 29, 30, 30,
	61, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 234, 234, 242, 242, 233, 233, 256, 256, 256,
	236, 236, 236, 237, 237, 347, 347, 347, 230, 230,
	63, 63, 63, 65, 65, 66, 67, 67, 258, 258,
	259, 259, 68, 69, 81, 81, 81, 81, 81, 81,
	84, 84, 84, 15, 15, 15, 15, 77, 77, 77,
	14, 14, 64, 64, 71, 344, 344, 345, 346, 346,
	346, 346, 72, 74, 31, 31, 31, 31, 31, 31,
	105, 105, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 100, 100, 100, 94, 94, 358,
	75, 76, 76, 98, 98, 98, 91, 91, 91, 97,
	97, 97, 16, 16, 17, 216, 216, 18, 18, 102,
	102, 104, 104, 104, 104, 104, 106, 106, 106, 106,
	106, 106, 106, 101, 101, 103, 103, 103, 103, 249,
	249, 249, 248, 248, 131, 131, 133, 132, 132, 134,
	134, 135, 135, 135, 135, 179, 179, 157, 157, 214,
	214, 212, 212, 213, 213, 215, 215, 215, 215, 218,
	218, 136, 136, 136, 136, 144, 144, 145, 145, 146,
	146, 257, 257, 254, 254, 254, 253, 253, 150, 150,
	150, 152, 151, 151, 151, 151, 153, 153, 155, 155,
	154, 154, 156, 161, 161, 160, 160, 158, 158, 158,
	158, 159, 159, 159, 159, 162, 162, 115, 115, 115,
	115, 115, 115, 115, 126, 126, 126, 126, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 82, 82, 82, 231, 231,
	163, 163, 171, 171, 171, 171, 164, 164, 164, 164,
	164, 164, 164, 172, 172, 172, 178, 173, 173, 169,
	169, 169, 169, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 329, 329,
	328, 328, 327, 327, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 359, 359, 277, 277, 277,
	277, 170, 170, 170, 170, 170, 96, 96, 96, 96,
	96, 262, 262, 262, 265, 265, 265, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 184, 184, 92, 92, 182, 182, 183, 185,
	185, 180, 180, 180, 166, 166, 166, 186, 186, 187,
	187, 188, 188, 190, 189, 189, 191, 192, 192, 192,
	193, 193, 194, 194, 194, 47, 47, 47, 47, 47,
	42, 42, 42, 42, 43, 43, 43, 107, 107, 107,
	107, 109, 109, 108, 108, 78, 78, 79, 79, 79,
	113, 113, 114, 114, 114, 111, 111, 112, 112, 210,
	210, 195, 195, 195, 202, 202, 202, 198, 198, 200,
	200, 200, 201, 201, 201, 199, 207, 207, 209, 209,
	208, 208, 204, 204, 205, 205, 206, 206, 206, 203,
	203, 165, 165, 165, 165, 165, 211, 211, 211, 211,
	219, 219, 175, 175, 177, 177, 176, 130, 220, 220,
	224, 221, 221, 225, 225, 225, 225, 225, 222, 222,
	223, 223, 250, 250, 250, 229, 229, 241, 241, 238,
	238, 239, 239, 232, 232, 243, 243, 243, 73, 174,
	174, 314, 314, 311, 246, 246, 247, 247, 251, 251,
	255, 255, 252, 252, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 355,
	356, 260, 261, 261, 261,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 2, 2, 2, 1, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	5, 6, 6, 7, 0, 1, 5, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 0, 1, 2,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 8, 6, 5, 5, 2, 2, 2,
	2, 3, 3, 3, 4, 1, 3, 5, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 0,
	6, 5, 6, 4, 5, 0, 8, 9, 0, 3,
	0, 1, 0, 3, 8, 4, 1, 3, 3, 6,
	7, 7, 8, 4, 0, 1, 0, 1, 3, 3,
	1, 1, 2, 1, 1, 0, 2, 0, 2, 5,
	3, 7, 4, 4, 4, 4, 3, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 0, 2, 2, 1, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 2, 2, 4, 4, 3, 0,
	1, 4, 3, 4, 4, 3, 3, 3, 2, 1,
	3, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	3, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 2, 4,
	4, 4, 4, 4, 3, 3, 3, 5, 2, 3,
	3, 2, 3, 4, 4, 4, 3, 4, 4, 5,
	3, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 1, 1,
	2, 1, 3, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 3, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 6, 4, 7, 6,
	1, 3, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 5, 5, 4, 0, 2, 4, 4, 0,
	1, 0, 1, 2, 3, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 3, 1, 3, 4, 3, 7, 0,
	3, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 0, 2, 3, 3, 0, 2, 3, 3, 3,
	2, 3, 1, 6, 3, 4, 3, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 9, 6, 6, 6,
	2, 2, 3, 3, 3, 1, 1, 1, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	5, 5, 6, 4, 4, 8, 6, 8, 6, 8,
	5, 4, 2, 2, 1, 2, 2, 2, 8, 8,
	6, 5, 4, 4, 4, 4, 4, 7, 4, 6,
	6, 6, 4, 4, 4, 7, 8, 6, 5, 6,
	8, 11, 6, 4, 4, 4, 4, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 4, 0, 2,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 3,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 2, 2, 0, 3, 0,
	2, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 1, 0, 1, 2,
	4, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 2, 1, 2,
	3, 3, 0, 2, 1, 2, 3, 4, 3, 0,
	1, 2, 1, 5, 4, 4, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 3, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 0, 3, 0, 1, 0, 1, 1, 5, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -353, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -61, -62, -63, -65,
	-66, -67, -68, -69, -14, -64, -31, -32, -70, -71,
	-72, -73, -74, -16, -17, -18, -9, -8, -13, 9,
	10, -83, -33, 32, -38, -48, 218, -49, -39, 219,
	-50, 221, 220, 257, 222, 250, 74, 299, 300, 302,
	303, 304, 305, -84, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -10, -34, 8, -355,
	11, 429, 252, 251, 28, -12, 463, 85, -354, 596,
	-210, -195, 22, 33, 29, -194, -190, -98, -195, 20,
	18, 7, -75, -358, -75, -75, 12, 13, -75, -299,
	-301, 85, 155, 85, -75, -54, -53, -52, -51, -55,
	31, -45, -46, -323, -44, -41, 223, 220, 267, 119,
	120, 257, 258, 259, 222, 241, 256, 260, 255, 276,
	-40, 80, 33, 463, 466, -306, 219, 225, 226, 430,
	122, 121, 75, 221, -303, 353, 566, -55, 568, 101,
	103, 567, 44, 231, 569, 570, 571, 572, 240, 573,
	574, 575, 576, 582, 583, 584, 585, 123, 7, -75,
	-255, -251, -333, -245, 88, 89, 90, 460, 243, 493,
	494, 292, 80, 41, 350, 353, 566, 299, 313, 307,
	334, 326, 461, 495, 295, 244, 280, 563, 324, 131,
	568, 298, 496, 258, 358, 359, 360, 101, 302, 396,
	581, 297, 497, 579, 103, 567, 79, 51, 44, 253,
	322, 227, 318, 569, 281, 498, 471, 274, 122, 119,
	588, 36, 316, 50, 30, 578, 121, 49, 570, 146,
	499, 571, 362, 341, 557, 48, 363, 259, 500, 83,
	264, 465, 565, 364, 317, 365, 291, 577, 224, 501,
	549, 366, 367, 558, 502, 342, 346, 503, 388, 368,
	595, 52, 504, 505, 559, 120, 506, 78, 572, 311,
	312, 507, 289, 242, 390, 338, 442, 449, 450, 107,
	108, 445, 109, 451, 110, 452, 453, 454, 443, 111,
	104, 444, 455, 456, 339, 340, 112, 457, 106, 105,
	446, 448, 113, 458, 240, 35, 369, 462, 293, 58,
	268, 391, 46, 344, 592, 45, 553, 508, 556, 337,
	333, 439, 53, 509, 510, 511, 512, 573, 336, 310,
	332, 587, 4, 286, 574, 62, 226, 348, 347, 349,
	275, 387, 329, 513, 514, 515, 247, 81, 516, 319,
	21, 517, 518, 370, 282, 519, 56, 520, 521, 394,
	256, 522, 54, 575, 39, 261, 589, 576, 523, 524,
	525, 526, 263, 527, 372, 528, 371, 343, 345, 270,
	373, 464, 529, 315, 260, 580, 530, 248, 564, 262,
	267, 255, 395, 249, 531, 532, 533, 534, 535, 296,
	536, 537, 303, 582, 440, 43, 538, 539, 540, 541,
	290, 285, 389, 398, 61, 82, 355, 542, 562, 309,
	283, 543, 300, 55, 583, 584, 585, 277, 586, 9,
	593, 594, 375, 123, 287, 288, 47, 330, 269, 544,
	545, 320, 321, 335, 308, 331, 301, 550, 271, 376,
	441, 257, 546, 397, 284, 351, 356, 468, 276, 377,
	561, 467, 328, 325, 278, 547, 378, 232, 272, 273,
	548, 551, 379, 380, 294, 381, 382, 383, 384, 385,
	386, 279, 466, 306, 323, 357, 410, 411, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 438, 230, -75, 230, -154, -251,
	230, -222, 359, -242, 361, 374, 369, 379, 367, -234,
	370, 372, 270, -347, 388, 230, 376, 218, 362, 371,
	380, 381, 294, 382, 386, 279, 383, 384, 385, -333,
	172, 571, 586, 131, 327, 366, 364, 389, 553, -251,
	301, -258, 306, -246, -333, -245, 304, -154, -81, 549,
	222, -260, -260, -100, 553, 555, -173, -115, 139, -126,
	-129, -120, -121, -167, -168, -169, -170, -127, -180, 161,
	162, 169, 140, -178, -130, 26, 459, 431, 430, 172,
	31, 214, 68, 69, 433, 434, 142, 57, 406, 407,
	-128, 401, 408, 403, 436, 437, 114, 438, 104, 106,
	105, 439, 440, 441, 339, 340, 442, 443, 444, 107,
	108, 109, 110, 111, 112, 113, 445, 448, 446, 447,
	449, 450, 451, 456, 457, 452, 453, 454, 455, 458,
	-246, -251, 235, 400, 229, 167, 429, -122, -118, -8,
	-176, 399, 404, 405, 409, 402, -333, -245, -124, -123,
	-163, 91, 97, 102, 98, -352, 115, -355, 92, 93,
	94, 95, 96, 116, 117, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 44, 375, 375, -154,
	-75, -75, -75, -75, -188, -98, -190, -10, -8, -355,
	8, -75, -8, -9, -13, -34, -36, 489, -35, -251,
	-195, -210, 12, 157, 42, 50, -193, -194, -12, -8,
	-115, 19, 23, 24, -103, 163, -115, -251, -76, -103,
	-232, 234, -75, -75, -221, -263, 301, -225, 389, 388,
	-247, -223, -246, -244, -222, 387, 223, 23, 469, 138,
	25, 27, 141, 172, 126, 19, 142, 37, 225, 327,
	241, 171, 237, 430, 218, 72, 470, 401, 403, 399,
	406, 432, 433, 400, 361, 31, 13, 472, 28, 251,
	24, 38, 165, 220, 145, 473, 254, 26, 252, 114,
	117, 475, 22, 75, 246, 14, 239, 40, 16, 476,
	477, 17, 235, 234, 157, 231, 70, 11, 214, 29,
	154, 66, 478, 133, 479, 480, 481, 482, 127, 68,
	155, 20, 590, 404, 405, 33, 554, 459, 265, 167,
	73, 59, 555, 139, 402, 483, 484, 115, 485, 118,
	76, 560, 135, 18, 71, 42, 486, 266, 487, 236,
	591, 488, 392, 489, 156, 221, 429, 69, 490, 229,
	374, 8, 435, 32, 250, 238, 125, 67, 491, 230,
	144, 436, 437, 233, 128, 116, 7, 132, 34, 12,
	74, 77, 407, 408, 409, 57, 124, 463, 143, 15,
	492, 393, 137, 131, -300, 155, -286, -290, -246, 245,
	-316, 241, -154, -309, -308, -246, -355, -99, -241, 231,
	239, 238, 132, -337, 135, 287, 400, 229, -51, -52,
	-222, 171, -85, 262, 266, 86, 86, -290, -289, -288,
	-338, 266, 245, -315, -307, 237, 246, -296, 238, 239,
	-291, 231, 133, -338, -291, 236, 246, 266, 266, 123,
	266, 123, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 261, -297, 147, -297, 467, 467, -303, -338, -338,
	-338, 233, 35, 35, -243, -291, 233, 25, -297, -297,
	-222, 171, -297, -297, -297, -297, 274, 274, -297, -297,
	-297, -297, -297, -297, -297, -297, -297, -297, -297, -297,
	-297, -297, -297, 230, -337, -107, 386, 294, 80, -53,
	276, -37, -154, -241, 231, 232, -337, 263, -154, 215,
	-154, -236, 155, 15, -236, -233, 375, 373, 360, 365,
	-236, -236, -236, -236, 277, 358, -292, 231, 35, 242,
	375, 277, 358, 277, 278, 277, 278, 368, 378, 277,
	-256, 14, 157, 400, 363, 367, 270, 230, 271, 232,
	377, 278, -256, 92, -237, 155, 375, 273, -236, -236,
	-261, -355, -247, 327, -333, 556, -261, -261, 32, 89,
	233, -246, -77, -246, 92, -15, -11, -22, -21, -23,
	147, -105, 375, -93, 172, 571, 557, 558, 559, 556,
	372, 564, 562, 560, 277, 561, 86, 135, 137, 138,
	4, -115, 154, -164, 147, 148, 149, 150, 151, 152,
	153, 157, 139, 141, 155, 156, 136, 158, 159, 160,
	161, 162, 163, 164, 166, 165, 167, 168, 171, 216,
	217, -121, -121, -121, -121, -178, -355, -355, -355, -121,
	-231, -355, -121, -355, -355, -355, -355, -184, -115, -355,
	-359, -355, -359, -359, -277, -355, -277, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, 215, -355, -355, -355, -355, -355,
	-277, -277, -277, -277, -277, 102, 97, 91, -180, 98,
	92, -246, -251, -8, -9, -173, -260, -344, -345, -157,
	-154, -355, 294, -246, -246, 263, -193, -12, -8, -188,
	-194, -190, -8, -75, -91, -104, 63, 64, -106, 24,
	38, 67, 65, 23, -356, 87, -356, -210, -356, 86,
	-36, -214, 85, 61, 43, 92, 92, 86, 21, -189,
	-191, -115, 14, -249, 4, -248, 25, -246, 92, 215,
	100, 14, -155, 29, -154, -232, -232, 86, 301, -225,
	-263, -227, -226, 390, 392, 147, -250, -246, 92, 31,
	87, 86, -154, -266, -269, -271, -270, -272, -267, -268,
	324, 325, 172, 328, 330, 331, 332, 333, 334, 335,
	336, 337, 338, 341, 32, 253, 320, 321, 322, 323,
	342, 343, 344, 345, 346, 347, 348, 349, 307, 326,
	461, 308, 309, 310, 311, 312, 313, 315, 316, 317,
	318, 319, -336, -333, 85, 87, 86, -273, 85, -115,
	-107, 230, -333, 231, 231, 231, -75, 429, -297, -297,
	261, 19, -44, -41, -323, 18, -40, -41, 223, 119,
	120, 220, 85, -286, 85, -295, -336, -333, 85, 133,
	236, 132, -294, -291, -294, -295, -333, -180, -333, 133,
	133, -218, -246, -218, -218, 23, -218, 23, -218, 23,
	94, -246, -218, 23, -218, 23, -218, 23, -218, 23,
	-218, 23, 31, 78, 79, 31, 81, 82, 83, -180,
	-180, -286, -222, -154, -333, 94, 94, -297, -297, 94,
	92, 92, 92, -297, -297, 94, 92, -253, -251, 92,
	-339, 247, 291, 293, 94, 94, 94, 94, 31, 92,
	-340, 31, 578, 577, 579, 580, 581, 94, 31, 94,
	31, 94, -246, 85, -154, -113, 281, 218, 220, 223,
	76, 92, 295, 147, 44, 86, 233, 230, -333, -238,
	235, -238, -246, -252, -251, -244, 92, -115, -293, 14,
	157, -256, -256, -236, -154, -293, -256, -236, -154, -236,
	-236, -236, -236, -256, -256, -256, -236, -251, -251, -154,
	-154, -154, -154, -154, -154, -154, -261, -237, -236, 556,
	92, -230, 14, 76, -261, -261, -259, 304, 338, 550,
	551, 552, 86, 463, -147, -154, 556, 556, 556, 556,
	556, 556, -115, -115, -115, -115, 485, -171, 115, 139,
	116, 117, -129, -172, -176, -178, 99, 157, 141, 155,
	156, -120, -121, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -262, -333, 92, 172,
	-125, -124, 98, -352, -125, -101, -103, -115, -115, -333,
	-246, -101, -101, -115, -97, 24, 38, -182, -183, 143,
	-180, -356, -356, 94, 98, -246, -246, -90, -89, 411,
	412, 413, 414, 416, 417, 418, 421, 422, 426, 427,
	410, 428, 415, 420, 423, 424, 425, 419, 323, -115,
	-115, -115, -115, -115, -115, -82, -115, 126, 127, 128,
	-115, -115, -174, -173, -332, -331, -330, -115, -115, -115,
	-115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
	-115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
	-102, 24, 38, -101, -247, -252, -244, -101, -102, -102,
	-101, -101, 215, -210, -356, 86, -346, 392, 393, 554,
	-254, 266, -253, 25, -174, 92, 14, -216, 77, -246,
	-193, -193, 63, 64, 59, -101, -106, -356, -35, 25,
	-212, -246, 62, 92, -278, -222, 350, 351, -115, -115,
	86, -192, 27, 28, -154, -248, 163, -252, -154, -217,
	266, -154, -132, -134, -135, -136, -157, -179, -355, -137,
	481, 478, 14, -147, -148, -156, -251, -225, -227, 86,
	391, 393, 394, 76, 118, -115, -279, 171, -305, -304,
	-303, -286, -288, -289, -290, 87, -279, -282, 356, 355,
	-273, -273, -273, -273, -273, -278, -278, -278, -278, 85,
	85, -273, -273, -273, -273, -280, 85, -280, -280, -281,
	85, -281, -316, -115, -313, -312, -310, -311, 240, 101,
	463, 77, -308, -192, 94, -356, -113, -239, 235, -314,
	-311, -333, -333, -333, -239, -333, 92, -333, 92, -86,
	-57, -1, 590, 591, 592, 86, 19, -287, -286, -56,
	291, -319, -320, 266, -315, -309, -295, 133, -294, -295,
	-295, -333, 86, 29, 123, 123, 123, 123, 463, 220,
	32, -286, -56, -262, 233, -262, -262, 92, 92, -235,
	586, -147, -109, 283, 147, 272, 272, 230, 230, 285,
	-154, 296, 298, 297, 295, 23, 284, 286, 288, 274,
	-154, -154, -238, 76, -149, -154, 26, -251, -154, -236,
	-236, -154, -236, -236, -154, -246, -93, 392, 86, 463,
	22, -94, 22, -355, 115, 116, 117, -172, -120, -121,
	-120, 138, 254, 86, -356, 25, 86, 77, -356, -356,
	-356, 86, 14, -101, -185, -183, 145, -115, -356, -356,
	-356, 86, 86, 14, -265, 25, -356, -356, -356, -356,
	-356, -184, -356, 14, 86, 86, -356, -356, 86, 86,
	-356, 86, 86, 86, -329, 86, 86, 86, 86, -356,
	-356, -356, -356, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 86, -356, -356, -101, -101, -355, 215, -356,
	-356, -356, -356, -356, -247, -345, 553, 393, -161, -160,
	-158, 74, 234, 75, -355, -253, -356, -125, 89, -213,
	89, -212, -166, -246, 94, 98, -195, -131, -133, 14,
	-106, -178, 87, 86, -278, -199, -204, -233, -246, 92,
	172, -191, 215, -162, 15, -165, 32, 57, -11, -355,
	-355, 32, 86, -150, -152, -151, -153, 66, 70, 72,
	67, 68, 69, 73, -257, 25, -132, -9, -8, -355,
	-355, -355, -154, -147, -357, 14, 77, -357, 86, 215,
	-226, -228, 395, 392, 398, -333, 92, -85, 86, -303,
	-290, -196, -110, 40, -283, 357, -278, -278, -285, 92,
	-285, 94, 94, 87, -47, -42, -43, 33, 80, -310,
	-297, 92, 39, -246, 87, -192, -109, -154, 139, 76,
	-314, -314, -314, -251, -2, 589, 595, 133, 85, 360,
	18, -212, 86, 87, -181, 292, 87, -87, -246, 87,
	85, -295, -295, -246, -355, 230, 31, 31, -56, -181,
	-279, -333, 588, 587, 87, 232, 290, -114, 406, -111,
	92, 88, -154, -154, -154, -154, -154, 223, 220, 275,
	233, -147, -154, 86, -80, 249, 244, -256, -256, 33,
	-154, 392, 565, 563, -115, 138, 254, -129, -121, -103,
	460, -264, 172, 324, 253, 322, 318, 338, 329, 355,
	320, 356, 317, 316, 315, -264, -262, -115, -115, -188,
	146, -115, 144, -115, -115, -115, -356, 172, 324, 14,
	-115, -115, -115, -330, -115, -115, -115, -328, -327, -125,
	-180, -356, -328, -115, -115, -327, -327, -331, -331, -331,
	-331, -331, -173, -173, -173, -173, -356, -356, -102, -247,
	-158, -291, -291, -291, -218, 86, -229, 22, 14, 57,
	57, -131, -162, -132, -106, -246, -202, 549, -207, 46,
	-205, -206, 47, -203, 48, 56, 163, -193, -115, -219,
	76, -220, -224, -180, -175, -177, -176, -355, -211, -356,
	-246, -218, -220, -134, -135, -135, -134, -135, 66, 66,
	66, 71, 66, 71, 66, -151, -251, -356, -356, -9,
	-9, -115, -254, 77, -132, -132, -156, -251, 163, 392,
	396, 397, -303, -351, 115, 139, 31, 76, 353, 101,
	-349, 171, -350, 236, 132, 133, 248, 25, 41, 87,
	86, 87, 86, 87, 86, -240, 499, 139, -43, -42,
	-297, -297, 94, -333, 232, 26, -154, 76, 76, 76,
	-88, 593, 94, 85, -3, 80, -115, 85, 19, -286,
	-180, -321, -274, -322, -275, -276, -5, -6, -298, 57,
	101, -60, 44, 231, 573, 574, 123, 586, -313, -212,
	-317, -319, -154, -117, -355, -116, -118, -122, 161, 162,
	-181, -154, -108, 281, 289, 85, -112, 89, -335, 77,
	272, 353, 272, -154, -80, -47, -154, -236, -236, 33,
	-333, -356, -129, -121, -355, -356, -273, -273, -273, -281,
	-273, 312, -273, 312, -273, -356, -356, 86, -356, 22,
	-356, -92, 435, -115, 86, 86, -356, 85, 85, -115,
	-356, -356, -356, -329, 86, -356, 86, -356, 86, -356,
	-356, -356, -356, -356, -356, -356, -356, -356, -356, -356,
	-356, -159, 22, -159, -159, -356, 89, -154, -162, -186,
	16, -199, 51, 330, -209, -208, 55, 47, -206, 19,
	49, 19, 30, -219, 86, 147, 86, -356, -356, 86,
	57, 215, -356, -162, -145, -144, 76, 77, -146, 76,
	-144, 66, 66, -214, -356, -356, 86, -217, -132, -162,
	-162, 215, 115, -355, -119, -128, -117, 12, 92, 92,
	-333, 133, 133, -154, 85, -278, 92, -278, 94, 94,
	499, 31, 81, 82, 83, 31, 78, 79, -154, -154,
	-154, -154, -318, 85, 19, -115, 85, 147, 87, -212,
	-212, 268, 157, -297, 571, 274, 274, -297, -297, -297,
	87, -356, 86, -284, 463, 466, -115, -123, -123, -214,
	87, -326, 463, -334, -246, -246, -246, -246, -120, -278,
	-115, -115, -193, 92, -115, -115, 94, 94, -356, -356,
	-328, -327, -115, -355, 66, 18, 16, -355, -355, -254,
	-186, -187, 17, 19, -200, 53, -198, 52, -198, -208,
	19, 19, 92, 19, 92, 133, -224, -115, -177, 57,
	-11, -246, -175, -246, -188, -115, 85, -115, -125, -162,
	-162, -115, -168, 438, 104, 106, 105, 439, 440, 441,
	339, 340, 442, 443, 444, 107, 108, 109, 110, 111,
	112, 113, 445, 448, 446, 449, 450, 451, 456, 457,
	452, 453, 454, 455, 458, 85, -115, 87, 87, -214,
	-317, -57, 87, -212, 94, 87, 269, -176, -355, 92,
	-297, -297, -297, 94, 94, -253, -350, -319, 467, 467,
	-356, 25, -325, -324, -247, 85, 77, -96, 157, 463,
	-356, -356, -356, -356, -356, 87, 87, -356, -356, 86,
	-215, -356, -246, 236, 19, 19, -215, -215, -161, -187,
	-115, -173, -201, 54, 76, 118, 92, 92, 92, 12,
	-175, 215, -193, -212, -139, 360, -188, -356, -212, 87,
	25, 87, 595, 133, 87, -176, -95, -355, 265, -253,
	92, 92, -11, 86, 147, -212, -154, -356, 461, 73,
	464, -115, 86, -356, -356, -356, 76, 118, -220, -246,
	87, -356, -355, -193, 87, -197, -11, 85, -3, 265,
	-78, 463, -324, -302, -247, 92, 94, 87, 62, 462,
	465, -329, -246, 236, -254, -140, -138, -246, 513, -342,
	-343, 76, -351, -348, 115, 139, 101, -349, 124, 125,
	-78, -115, 85, -356, -79, 280, 553, -335, 62, -356,
	-356, 86, 22, -266, -59, 523, -343, 76, 13, 12,
	115, 92, 87, -212, 241, -326, 463, -138, 520, -279,
	-125, -341, 249, 244, 247, 32, -341, -4, 594, 87,
	282, 464, -58, 26, -139, 243, 31, 115, 94, -4,
	465, 523, -125, -142, -141, -143, 557, 115, 31, -141,
	-143, 76, -125, 76, 473, 557,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 759,
	759, 759, 0, 759, 0, 0, 759, -2, -2, 759,
	1240, 0, 759, 0, 0, -2, 691, 693, 0, 695,
	-2, 0, 0, 704, 1731, 1731, 754, 0, 0, 0,
	0, 0, 759, 759, 759, 759, 1101, 48, 759, 0,
	83, 84, 710, 711, 712, 63, 0, 1729, 1, 3,
	69, 73, 0, 0, 0, 56, 1110, 0, 76, 0,
	0, 763, 0, 761, 0, 1223, 759, 759, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 519, 459, 502, 457, 488, -2, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	462, 351, 351, 0, 0, -2, 450, 450, 450, 0,
	0, 0, 485, 1225, 405, 351, 351, 0, 351, 351,
	351, 351, 0, 0, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 1127,
	151, 1241, 1238, 1239, 38, 39, 40, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 0, 1217, 0, 619, 860,
	0, 680, 680, 0, 680, 680, 680, 680, 0, 0,
	0, 631, 0, 0, 0, 0, 677, 0, 647, 648,
	0, 677, 0, 683, 0, 658, 680, 680, 661, 1732,
	0, 1732, 1732, 1208, 0, 674, 672, 686, 687, 690,
	694, 0, 699, 702, 1234, 1235, 0, 717, 47, 1474,
	709, 722, 723, 0, 755, 756, 43, 957, 0, 882,
	887, 898, 911, 912, 913, 914, 915, 917, 918, 0,
	0, 0, 0, 923, 924, 0, 0, 0, 0, 0,
	938, 0, 0, 0, 0, 0, 1082, 0, 1045, 1045,
	974, 1045, 1047, 1047, 0, 0, 0, 1728, 1514, 1522,
	1523, 1545, 1628, 1674, 1518, 1519, 1500, 1512, 1515, 1503,
	1504, 1506, 1508, 1513, 1520, 1526, 1505, 1525, 1524, 0,
	1501, 1502, 1507, 1517, 1521, 1509, 1510, 1511, 1516, 1527,
	1091, 0, 0, 0, 0, 0, 0, 257, 258, 956,
	1197, 1047, 1047, 1047, 1047, 1047, -2, -2, 204, 205,
	206, 207, 208, 209, 210, 0, 200, 0, 262, 263,
	259, 260, 261, 940, 941, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 1731, 0, 732, 0,
	0, 0, 0, 0, 1110, 0, 1102, 1101, 61, 0,
	759, -2, 0, 0, 0, 0, 45, 0, 50, 819,
	75, 74, 1149, 0, 0, 0, 57, 1111, 65, 67,
	1112, 0, 764, 765, 0, 795, 799, 0, 760, 0,
	0, 1224, 1223, 1223, 100, 0, 1670, 1201, -2, -2,
	0, 0, 1236, 1237, 1210, -2, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, -2, 0, 0, 161, 162, 0, 41,
	378, 0, 157, 0, 371, 321, 0, 1127, 0, 0,
	0, 0, 0, 759, 0, 1218, 142, 143, 149, 150,
	351, 351, 499, 0, 0, 151, 151, 466, 467, 468,
	0, 0, -2, 376, 0, 451, 0, 0, 365, 365,
	369, 367, 368, 0, 0, 0, 0, 0, 0, 479,
	0, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 0, 352, 0, 497, 498, 406, 0, 0,
	0, 0, 477, 478, 0, 0, 1226, 1227, 0, 0,
	351, 351, 0, 0, 0, 0, 351, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 141, 1140, 0, 0, 0, -2,
	0, 611, 0, 0, 0, 1219, 1219, 0, 618, 0,
	620, 621, 0, 0, 622, 0, 677, 677, 675, 676,
	624, 625, 626, 627, 680, 0, 0, 360, 361, 362,
	677, 680, 0, 680, 680, 680, 680, 677, 677, 677,
	680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1732, 683, 680, 0, 654, 0, 655, 656, 659, 660,
	662, 1733, 1734, 1257, 1732, 1732, 666, 670, 1209, 692,
	700, 703, 720, 718, 719, 721, 713, 714, 715, 716,
	0, 734, 735, 740, 0, 0, 0, 0, 746, 747,
	748, 0, 0, 751, 752, 753, 0, 0, 0, 0,
	0, 880, 0, 0, 946, 947, 948, 949, 950, 951,
	952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 919, 920, 921, 922, 925, 0, 0, 0, 930,
	931, 0, 0, 0, 0, 0, 769, 0, 1083, 0,
	972, 0, 973, 975, 976, 0, 977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1229,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 779, 0, 0, 779, 779, 0, 0,
	193, 194, 195, 196, 197, 211, 212, 213, 214, 215,
	264, 1091, 0, 956, 0, 0, 44, 724, 725, 0,
	843, 1229, 0, 0, 775, 0, 55, 64, 66, 1110,
	59, 1110, 0, 781, 0, 0, -2, -2, 782, 788,
	789, 790, 791, 792, 52, 1730, 53, 0, 72, 0,
	46, 0, 0, 0, 0, 333, 1152, 0, 0, 1103,
	1104, 1107, 0, 796, 1556, 800, 0, 802, 803, 0,
	762, 0, 98, 0, 859, 0, 0, 0, 1670, 1207,
	0, 102, 103, 0, 0, 0, 339, 1212, 1213, 1214,
	-2, 358, 0, 339, 328, 272, 273, 274, 321, 276,
	321, 321, 321, 321, 333, 333, 333, 333, 304, 305,
	306, 307, 308, 0, 0, 291, 321, 321, 321, 321,
	311, 312, 313, 314, 315, 316, 317, 318, 277, 278,
	279, 280, 281, 282, 283, 284, 285, 323, 323, 323,
	325, 325, 0, 42, 0, 343, 0, 1107, 0, 0,
	1140, 1221, 1231, 0, 0, 0, 1221, 120, 0, 0,
	500, 530, 460, 489, 501, 0, 463, 464, -2, 0,
	0, 450, 0, 452, 0, 359, 0, -2, 0, 369,
	0, 365, 369, 366, 369, 357, 370, 481, 482, 483,
	0, 560, 829, 0, 0, 0, 0, 0, 566, 567,
	568, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 490, 491, 492, 493, 494, 495, 496, 0,
	0, 452, 0, 486, 0, 407, 408, 0, 0, 411,
	412, 413, 414, 0, 0, 417, 418, 419, 846, 847,
	420, 444, 445, 446, 421, 422, 423, 424, 425, 426,
	427, 438, 439, 440, 441, 442, 443, 428, 429, 430,
	431, 432, 435, 0, 135, 1131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1219, 0, 0,
	0, 0, 778, 861, 1242, 1243, 681, 682, 0, 363,
	364, 680, 680, 628, 667, 0, 680, 632, 668, 633,
	635, 634, 636, 649, 650, 680, 639, 678, 679, 640,
	641, 642, 643, 644, 645, 646, 663, 651, 652, 653,
	684, 0, 688, 689, 664, 665, 0, 701, 705, 706,
	707, 708, 0, 0, 737, 94, 742, 743, 744, 745,
	757, 750, 958, 877, 878, 879, 0, 881, 884, 0,
	942, 944, 886, 888, 953, 954, 955, 0, 0, 0,
	0, 0, 892, 896, 899, 900, 901, 902, 903, 904,
	905, 906, 907, 908, 909, 910, 916, 1061, 1062, 1063,
	933, 265, 266, 0, 934, 0, 793, 0, 0, 0,
	932, 0, 0, 0, 0, 770, 771, 1089, 1086, 0,
	0, 1046, 1048, 0, 0, 0, 0, 0, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1064,
	0, 0, 0, 0, 0, 1082, 0, 935, 936, 937,
	0, 0, 0, 1230, 0, 130, 131, 0, 0, 0,
	0, 0, 1018, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 780, 1092, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 1196, 0, 727, 728, 730, 0,
	863, 0, 844, 0, 0, 733, 0, 774, 0, 777,
	58, 60, 786, 787, 0, 804, 783, 54, 49, 0,
	0, 821, 1150, 333, 1172, 0, 337, 338, 1113, 1114,
	0, 1106, 1108, 1109, 77, 801, 797, 0, 875, 0,
	0, 858, 0, 807, 809, 810, 811, 841, 0, 814,
	0, 0, 0, 0, 0, 96, 860, 1202, 101, 0,
	0, 106, 107, 1203, 1204, 1205, 1206, 0, 519, -2,
	402, 163, 165, 166, 167, 158, -2, 331, 329, 330,
	275, 333, 333, 298, 299, 300, 301, 302, 303, 0,
	0, 292, 293, 294, 295, 286, 0, 287, 288, 289,
	0, 290, 377, 0, 1115, 344, 345, 347, 351, 0,
	0, 0, 372, 373, 0, 1107, 1131, 0, 0, 0,
	1232, 1231, 1231, 1231, 0, 153, 154, 155, 156, 555,
	0, 0, 531, 553, 554, 151, 0, 0, 159, 454,
	453, 0, 587, 0, 375, 0, 0, 369, 369, 354,
	355, 484, 0, 0, 562, 563, 564, 565, 0, 0,
	0, 452, 454, 339, 0, 409, 410, 415, 416, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 515, 516, 517, 518, 1128, 1129, 1130, 0,
	0, 612, 0, 0, 394, 92, 1220, 617, 677, 638,
	669, 677, 630, 637, 657, 697, 741, 0, 0, 0,
	0, 749, 0, 0, 885, 943, 945, 889, 0, 893,
	897, 0, 0, 0, 0, 0, 0, 0, 939, 963,
	964, 0, 0, 1101, 0, 1087, 0, 0, 971, 1049,
	1050, 0, 0, 0, 0, 0, 982, 983, 984, 985,
	986, 0, 988, 0, 0, 0, 992, 993, 0, 0,
	994, 0, 0, 0, 0, 0, 0, 0, 0, 1003,
	1004, 1005, 1006, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1017, 959, 0, 0, 779, 0, 1051,
	1052, 1053, 1054, 1055, 1092, 726, 729, 731, 817, 864,
	865, 0, 0, 0, 0, 845, 1228, 772, 773, 776,
	-2, 0, 0, 1094, 0, 0, 804, 875, 805, 0,
	784, 51, 820, 0, 1154, 1153, 1166, 1179, 334, 335,
	336, 1105, 0, 1110, 0, 1190, 0, 0, 1182, 0,
	0, 0, 0, 0, 0, 0, 0, 848, 0, 0,
	851, 0, 0, 0, 0, 842, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 90, 91, 0, 0, 0,
	104, 105, 0, 0, 111, 340, 341, 144, 151, 404,
	164, 384, 0, 0, 271, 332, 296, 297, 0, 319,
	0, 0, 0, 397, 116, 1119, 1118, 351, 351, 346,
	0, 349, 0, 1233, 322, 374, 0, 134, 0, 0,
	0, 0, 0, 140, 525, 0, 0, 532, 0, 0,
	0, 458, 0, 469, 470, 0, 559, -2, 608, 343,
	0, 353, 356, 830, 0, 0, 471, 0, 454, 475,
	476, 487, 436, 437, 434, 0, 0, 1141, 1142, 1147,
	1145, 1146, 121, 507, 509, 508, 512, 0, 0, 505,
	0, 394, 1115, 0, 616, 395, 396, 680, 680, 736,
	95, 0, 739, 0, 0, 0, 0, 890, 894, 794,
	0, 0, 321, 321, 1069, 321, 325, 1072, 321, 1074,
	321, 1077, 321, 1080, 1081, 0, 0, 0, 0, 1084,
	970, 1090, 0, 0, 0, 0, 981, 0, 0, 0,
	0, 0, 0, 132, 133, 1018, 0, 0, 1020, 1022,
	1023, 998, 1019, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 960, 961, 0, 1093,
	866, 871, 871, 871, 0, 0, 0, 1215, 1216, 1095,
	1096, 875, 1097, 806, 785, 822, 1172, 0, 1165, 0,
	-2, 1174, 0, 0, 0, 1180, 798, 78, 876, 81,
	0, 1190, 1198, 0, 1181, 1192, 1194, 0, 0, 0,
	1186, 0, 875, 808, 837, 839, 0, 834, 849, 850,
	852, 0, 854, 0, 856, 857, 819, 813, 815, 0,
	0, 0, 98, 0, 875, 875, 97, 0, 862, 108,
	109, 110, 403, 168, 173, 0, 0, 0, 178, 0,
	180, 0, 385, 0, 268, 270, 0, 0, 171, 333,
	0, 333, 0, 326, 0, 386, 398, 0, 1116, 1117,
	0, 0, 348, 350, 0, 1222, 136, 0, 0, 0,
	528, 0, 556, 0, 0, 0, 0, 0, 0, 160,
	455, 588, 589, 590, 591, 592, 593, 594, 595, 0,
	351, 0, 0, 0, 351, 351, 351, 600, 342, 0,
	0, 584, 581, 472, 0, 198, 199, 201, 0, 0,
	474, 819, 1132, 1133, 1134, 0, 1144, 1148, 124, 0,
	0, 0, 0, 613, 614, 615, 93, 623, 629, 738,
	758, 883, 891, 895, 0, 927, 1067, 333, 1070, 1071,
	1073, 1075, 1076, 1078, 1079, 928, 929, 0, 966, 0,
	968, 1110, 0, 1088, 0, 0, 980, 0, 0, 0,
	989, 990, 991, 0, 0, 997, 0, 999, 0, 1002,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	962, 0, 0, 0, 0, 843, -2, 62, 1097, 1099,
	0, 1159, 1157, 1157, 1167, 1168, 0, 0, 1175, 0,
	0, 0, 0, 82, 0, 0, 0, 1195, 0, 0,
	0, 0, 99, 1101, 831, 838, 0, 0, 832, 0,
	833, 853, 855, 812, -2, 816, 0, 875, 875, 88,
	89, 0, 174, 0, 176, 191, 192, 0, 179, 181,
	182, 267, 269, 0, 0, 309, 320, 310, 0, 0,
	399, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 819, 137,
	138, 139, 520, 0, 530, 0, 0, 0, 523, 0,
	461, 0, 0, 0, 351, 351, 351, 0, 0, 0,
	0, 561, 0, 569, 0, 0, 0, 202, 203, 0,
	1143, 506, 0, 122, 123, 0, 0, 511, 1056, 1068,
	0, 0, 0, 1085, 0, 0, 0, 0, 987, 995,
	0, 1021, 0, 0, 872, 0, 0, 0, 0, 863,
	1099, 80, 0, 0, 1162, 0, 1155, 1158, 1156, 1169,
	0, 0, 1176, 0, 1178, 0, 1199, 1200, 1193, 0,
	1185, 1188, 1184, 1187, 1110, 835, 0, 840, 0, 1101,
	87, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 327, 0,
	0, 0, 521, 0, 533, 524, 0, 598, 0, 602,
	0, 0, 0, 605, 606, 607, 379, 585, 582, 583,
	473, 0, 125, 126, 0, 0, 0, 0, 0, 0,
	965, 967, 969, 978, 979, 1065, 1066, 996, 1000, 0,
	0, 868, 825, 826, 873, 874, 0, 0, 818, 79,
	1100, 1098, 1151, 0, 1160, 1161, 1170, 1171, 1177, 0,
	1183, 0, 85, 0, 0, 0, 1110, 175, 0, 185,
	0, 529, 0, 532, 522, 596, 597, 0, 609, 601,
	603, 604, 1135, 0, 0, 0, 513, 926, 0, 0,
	0, 1018, 0, 867, 869, 870, 1163, 1164, 1191, 1189,
	836, 843, 0, 86, 380, 384, 1135, 0, 0, 0,
	503, 1137, 127, 128, 447, 448, 449, 121, 1057, 0,
	1060, 0, 827, 828, 534, 0, 536, 0, -2, 381,
	382, 0, 169, 186, 187, 0, 0, 190, 183, 184,
	117, 0, 0, 610, 0, 1138, 1139, 124, 1058, 1001,
	535, 0, 0, 339, 0, 545, 383, 0, 0, 0,
	188, 189, 557, 0, 0, 510, 0, 537, 538, 546,
	0, 387, 389, 390, 0, 0, 388, 526, 0, 557,
	1136, 0, 0, 547, 543, 391, 392, 393, 558, 527,
	1059, 0, 539, 540, 541, 0, 550, 551, 0, 542,
	0, 0, 552, 0, 548, 549,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 596,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:517
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:522
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:523
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:527
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:563
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:569
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:573
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:577
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:582
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:586
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:592
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:598
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:604
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:608
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:613
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:617
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:623
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:627
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:633
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:639
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:647
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:670
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:676
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:681
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:687
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:694
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:707
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:717
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:773
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:786
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:792
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:812
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:824
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:836
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:840
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:846
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:852
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:856
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:860
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:864
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:869
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:870
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:874
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:878
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:884
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:888
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:894
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:898
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:907
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:913
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:919
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:923
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:929
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:933
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:939
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:943
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:947
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:953
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:957
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:961
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:965
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:971
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:975
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:981
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:987
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:994
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1003
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1014
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1018
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1023
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1027
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1033
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1038
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1043
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1049
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1054
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1060
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1069
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1075
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1079
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1085
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1091
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1098
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1105
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1110
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1115
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1120
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1127
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1134
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1145
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1156
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1162
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1166
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1174
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1180
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1184
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1190
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1194
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1200
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1204
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1211
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1215
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1221
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1231
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1236
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1241
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1245
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1258
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1269
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1278
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1287
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1291
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1300
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1304
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1310
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1316
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1321
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1326
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1331
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1336
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1341
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1346
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1350
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1357
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1361
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1366
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1370
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1375
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1381
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1387
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1392
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1399
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1406
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1410
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1414
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1418
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1422
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1433
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1440
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1444
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1450
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1454
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1458
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1462
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1466
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1470
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1474
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1479
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1483
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1487
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1491
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1495
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = Armscii8Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = ASCIIStr
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = Big5Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = UBinaryStr
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = Cp1250Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.str = Cp1251Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.str = Cp1256Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = Cp1257Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = Cp850Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.str = Cp852Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = Cp866Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = Cp932Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = Dec8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = EucjpmsStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.str = EuckrStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.str = Gb18030Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.str = Gb2312Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.str = GbkStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.str = Geostd8Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = GreekStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = HebrewStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Hp8Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = Keybcs2Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = Koi8rStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = Koi8uStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = Latin1Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Latin2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = Latin5Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = Latin7Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = MacceStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = MacromanStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = SjisStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Swe7Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = Tis620Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = Ucs2Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = UjisStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = Utf16Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Utf16leStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = Utf32Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = Utf8Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = Utf8mb4Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1676
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1686
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1690
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1711
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1715
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1719
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1723
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1729
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1740
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1895
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1930
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1940
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1945
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1954
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1959
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1963
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1971
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1975
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1981
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1989
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1993
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1997
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2002
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2006
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2011
		{
			yyVAL.str = ""
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2019
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2023
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2046
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2053
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2062
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2068
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2078
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2082
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2087
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2091
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2097
		{
			yyVAL.str = ""
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2107
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2111
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2115
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2119
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2123
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2128
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.str = yyDollar[2].str
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2142
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2146
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2153
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2162
		{
			yyVAL.str = "key"
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.str = yyDollar[1].str
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2181
		{
			yyVAL.str = ""
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2185
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2191
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2195
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2201
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2205
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2211
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2215
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2221
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2225
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2231
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2237
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2241
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2245
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2249
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2254
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2258
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2264
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2270
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2276
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2282
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2286
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2290
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2294
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2298
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2303
		{
			yyVAL.str = ""
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2307
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2311
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2316
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2320
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2324
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2333
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2339
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2343
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2347
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2353
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2357
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2363
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2367
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2371
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2375
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2379
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2383
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2387
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2391
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2395
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2399
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2403
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2407
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2411
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2415
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2419
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2423
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2427
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2431
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2435
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2439
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2443
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2447
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2451
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2455
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2459
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2463
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2467
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2471
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2476
		{
			yyVAL.str = ""
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2484
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2507
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2516
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2522
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2526
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2531
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2535
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2540
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2544
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2548
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2552
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2556
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 461:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2560
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2566
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2570
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2574
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2580
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2584
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2588
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2592
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2596
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2600
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2604
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2608
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2612
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2616
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2620
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2624
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2628
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2632
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2636
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2640
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2644
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2648
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2652
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2656
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2660
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2664
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2668
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2674
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2678
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2684
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2688
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2692
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2696
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2700
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2704
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2708
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2712
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2716
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2722
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2729
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2736
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2743
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2749
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2753
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2760
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2767
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2779
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2789
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2793
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2797
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2810
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2820
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2824
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2835
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2842
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2849
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2856
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2863
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2874
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2883
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2891
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2900
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2907
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2915
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2919
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2928
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2939
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2943
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2948
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2952
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2957
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2961
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2967
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2973
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2979
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2983
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2989
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2993
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2999
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3005
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3011
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3017
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3023
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3027
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3031
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3035
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3041
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3047
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3053
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3057
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3061
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3067
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3071
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3076
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3080
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3085
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3089
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3095
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3099
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3103
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3107
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3111
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3115
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3119
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3123
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3127
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3131
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3135
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3139
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3143
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3147
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3151
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3155
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3159
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3163
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3167
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3171
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3175
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3179
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3184
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3188
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3192
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3199
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3203
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3209
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3214
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3218
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3223
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3228
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3233
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3238
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3243
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3249
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3255
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3262
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3269
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3276
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3284
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3288
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3294
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3300
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3306
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3312
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3318
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3324
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3330
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3336
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3342
		{
			yyVAL.str = ""
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3346
		{
			yyVAL.str = ""
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3352
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3358
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3362
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 614:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3368
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3372
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3381
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3385
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3391
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3395
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3400
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3406
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3410
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3414
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3418
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3422
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3426
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3430
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3434
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3438
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3442
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3446
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3450
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3454
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3458
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3462
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3466
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3470
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3474
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3478
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3482
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3486
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3490
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3494
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3498
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3502
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3506
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3510
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3514
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3518
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3522
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3526
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3530
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3534
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3538
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3542
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3546
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3550
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3554
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3558
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3562
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3566
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3573
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3577
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3581
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3585
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3589
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3593
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3597
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3601
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3605
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3611
		{
			yyVAL.str = ""
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = "extended "
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3621
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3625
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3631
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3635
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3641
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3645
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3649
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3655
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3659
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3663
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3669
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3673
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3679
		{
			yyVAL.empty = struct{}{}
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3683
		{
			yyVAL.empty = struct{}{}
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3687
		{
			yyVAL.empty = struct{}{}
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3693
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3697
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3703
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3707
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3711
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3717
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3721
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3727
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3733
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3737
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3742
		{
			yyVAL.empty = struct{}{}
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3744
		{
			yyVAL.empty = struct{}{}
		}
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3747
		{
			yyVAL.empty = struct{}{}
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3749
		{
			yyVAL.empty = struct{}{}
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3754
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3760
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3765
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3769
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3773
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3777
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3781
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3785
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3791
		{
			yyVAL.str = yyDollar[1].str
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3795
		{
			yyVAL.str = yyDollar[1].str
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3799
		{
			yyVAL.str = yyDollar[1].str
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3805
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3813
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3817
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3822
		{
			yyVAL.str = ""
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3826
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3836
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3846
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3850
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3856
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3862
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3866
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3872
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3878
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3882
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3886
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3890
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3896
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3902
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3920
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3934
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3938
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3944
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3948
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3952
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3956
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3960
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3964
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3972
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3976
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3980
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3984
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3993
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3997
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4001
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4006
		{
			yyVAL.str = ""
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4010
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4015
		{
			setAllowComments(yylex, true)
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4019
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4025
		{
			yyVAL.strs = nil
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4029
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4035
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4039
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4043
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4048
		{
			yyVAL.str = ""
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4052
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4056
		{
			yyVAL.str = SQLCacheStr
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4061
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4065
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4069
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4075
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4079
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4091
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4096
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4100
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4106
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4110
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4115
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4119
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4124
		{
			yyVAL.strs = nil
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4128
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4132
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4136
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4140
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4146
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4150
		{
			yyVAL.str = SQLCacheStr
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4154
		{
			yyVAL.str = DistinctStr
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4158
		{
			yyVAL.str = DistinctStr
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4162
		{
			yyVAL.str = StraightJoinHint
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4166
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4170
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4176
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4180
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4186
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4190
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4194
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4198
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4203
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4207
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4211
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4223
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4227
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4233
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4239
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4243
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4253
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4257
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4261
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4265
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4271
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4275
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4281
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4285
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4290
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4294
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4300
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4304
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4310
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4314
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4320
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4324
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4328
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4332
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4338
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4342
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4355
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4359
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4363
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4367
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4373
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4375
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4379
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4381
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4385
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4387
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4390
		{
			yyVAL.empty = struct{}{}
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4392
		{
			yyVAL.empty = struct{}{}
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4395
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4399
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4403
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4410
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4416
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4420
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4424
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4430
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4436
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4440
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4444
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4448
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4454
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4458
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4468
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4482
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4488
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4493
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4497
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4503
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4507
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 867:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4513
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4517
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4521
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4525
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4530
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4534
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4538
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4542
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4552
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4559
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4563
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4567
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4571
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4575
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4579
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4583
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4590
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4594
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4598
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4602
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4608
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4612
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4616
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4620
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4624
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4628
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4632
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4636
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4640
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4644
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4648
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4654
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4658
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4662
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4666
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4670
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4674
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4678
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4682
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4686
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4690
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4694
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4698
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4702
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4708
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4712
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4716
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4720
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4724
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4728
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4732
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4736
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4740
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4744
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4748
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4752
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4756
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4760
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4764
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4768
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4772
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4776
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4780
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4788
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4792
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4800
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4804
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4810
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4814
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4818
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4824
		{
			yyVAL.str = ""
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4828
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4834
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4838
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4845
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4849
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4853
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4857
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4863
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4867
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4871
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4875
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4879
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4883
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4887
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4893
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4897
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4901
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4908
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4914
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4918
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4928
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4932
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4936
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4940
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4950
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4954
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4958
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4962
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4966
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4970
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4974
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4978
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4982
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4986
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4997
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5001
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5007
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5011
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5016
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5020
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5024
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5028
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5032
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5036
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5040
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5044
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5048
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5052
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5064
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5068
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5072
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5076
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5080
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5084
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5088
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5092
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5096
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5100
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5104
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5108
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5112
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5116
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5120
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5124
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5128
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5132
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5136
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5140
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5144
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5148
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5152
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5156
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5160
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5164
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5168
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5172
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5176
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5181
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5185
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5191
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5195
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5201
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5205
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5211
		{
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5213
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5217
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5221
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5225
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5229
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5233
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5237
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5241
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5245
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5249
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5253
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5259
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5263
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5267
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5271
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5275
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5279
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5283
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5287
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5291
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5301
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5313
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5340
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5346
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5350
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5354
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5358
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5362
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5368
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5372
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5376
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5382
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5386
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5390
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5396
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5400
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5404
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5408
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5412
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5418
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5422
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5426
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5430
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5434
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5438
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5442
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5446
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5450
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5454
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5460
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5464
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5469
		{
			yyVAL.str = string("")
		}
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5473
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5479
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5483
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5489
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5498
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5504
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5508
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5512
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5527
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5531
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5537
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5541
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5550
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5555
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5559
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5565
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5571
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5575
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5581
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5586
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5590
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5594
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5599
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5603
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5609
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5613
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5617
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5622
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5626
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5630
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5634
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5638
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5645
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5649
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5653
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5657
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5663
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5667
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5671
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5676
		{
			yyVAL.str = ""
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5680
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5684
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5688
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5693
		{
			yyVAL.str = ""
		}
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5697
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5703
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5707
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5712
		{
			yyVAL.str = ""
		}
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5716
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5721
		{
			yyVAL.str = "cascaded"
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5725
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5729
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5738
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5744
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5750
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5756
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5765
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5769
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5774
		{
			yyVAL.str = ""
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5778
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5784
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5788
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5794
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5798
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5802
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5807
		{
			yyVAL.str = ""
		}
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5811
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5815
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5820
		{
			yyVAL.str = ""
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5824
		{
			yyVAL.str = " header"
		}
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5829
		{
			yyVAL.str = ""
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5833
		{
			yyVAL.str = " manifest on"
		}
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5837
		{
			yyVAL.str = " manifest off"
		}
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5842
		{
			yyVAL.str = ""
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5846
		{
			yyVAL.str = " overwrite on"
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5850
		{
			yyVAL.str = " overwrite off"
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5856
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5861
		{
			yyVAL.str = ""
		}
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5865
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5871
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5875
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5881
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5885
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5890
		{
			yyVAL.str = ""
		}
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5894
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5900
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5904
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5910
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5914
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5918
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5923
		{
			yyVAL.str = ""
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5927
		{
			yyVAL.str = " optionally"
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5940
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5944
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5948
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5952
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5956
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5962
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5966
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5970
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5974
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5979
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5983
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5989
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5993
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5999
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6003
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6009
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6024
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6028
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6034
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6040
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6044
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6050
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6054
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6058
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6062
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6066
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6074
		{
			yyVAL.str = "charset"
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6101
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6103
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6106
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6108
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6111
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6113
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6116
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6118
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6121
		{
			yyVAL.empty = struct{}{}
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6123
		{
			yyVAL.empty = struct{}{}
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6125
		{
			yyVAL.empty = struct{}{}
		}
	case 1228:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6129
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6138
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6143
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6145
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6149
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6155
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6159
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6166
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6172
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6176
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6182
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6186
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6193
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6703
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6712
		{
			decNesting(yylex)
		}
	case 1731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6717
		{
			skipToEnd(yylex)
		}
	case 1732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6722
		{
			skipToEnd(yylex)
		}
	case 1733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6726
		{
			skipToEnd(yylex)
		}
	case 1734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6730
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
