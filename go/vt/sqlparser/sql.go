// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const VALUE_ARG = 57439
const LIST_ARG = 57440
const COMMENT = 57441
const COMMENT_KEYWORD = 57442
const BITNUM = 57443
const BIT_LITERAL = 57444
const COMPRESSION = 57445
const JSON_PRETTY = 57446
const JSON_STORAGE_SIZE = 57447
const JSON_STORAGE_FREE = 57448
const JSON_CONTAINS = 57449
const JSON_CONTAINS_PATH = 57450
const JSON_EXTRACT = 57451
const JSON_KEYS = 57452
const JSON_OVERLAPS = 57453
const JSON_SEARCH = 57454
const JSON_VALUE = 57455
const EXTRACT = 57456
const NULL = 57457
const TRUE = 57458
const FALSE = 57459
const OFF = 57460
const DISCARD = 57461
const IMPORT = 57462
const ENABLE = 57463
const DISABLE = 57464
const TABLESPACE = 57465
const VIRTUAL = 57466
const STORED = 57467
const BOTH = 57468
const LEADING = 57469
const TRAILING = 57470
const EMPTY_FROM_CLAUSE = 57471
const LOWER_THAN_CHARSET = 57472
const CHARSET = 57473
const UNIQUE = 57474
const KEY = 57475
const EXPRESSION_PREC_SETTER = 57476
const OR = 57477
const XOR = 57478
const AND = 57479
const NOT = 57480
const BETWEEN = 57481
const CASE = 57482
const WHEN = 57483
const THEN = 57484
const ELSE = 57485
const END = 57486
const LE = 57487
const GE = 57488
const NE = 57489
const NULL_SAFE_EQUAL = 57490
const IS = 57491
const LIKE = 57492
const REGEXP = 57493
const RLIKE = 57494
const IN = 57495
const SHIFT_LEFT = 57496
const SHIFT_RIGHT = 57497
const DIV = 57498
const MOD = 57499
const UNARY = 57500
const COLLATE = 57501
const BINARY = 57502
const UNDERSCORE_ARMSCII8 = 57503
const UNDERSCORE_ASCII = 57504
const UNDERSCORE_BIG5 = 57505
const UNDERSCORE_BINARY = 57506
const UNDERSCORE_CP1250 = 57507
const UNDERSCORE_CP1251 = 57508
const UNDERSCORE_CP1256 = 57509
const UNDERSCORE_CP1257 = 57510
const UNDERSCORE_CP850 = 57511
const UNDERSCORE_CP852 = 57512
const UNDERSCORE_CP866 = 57513
const UNDERSCORE_CP932 = 57514
const UNDERSCORE_DEC8 = 57515
const UNDERSCORE_EUCJPMS = 57516
const UNDERSCORE_EUCKR = 57517
const UNDERSCORE_GB18030 = 57518
const UNDERSCORE_GB2312 = 57519
const UNDERSCORE_GBK = 57520
const UNDERSCORE_GEOSTD8 = 57521
const UNDERSCORE_GREEK = 57522
const UNDERSCORE_HEBREW = 57523
const UNDERSCORE_HP8 = 57524
const UNDERSCORE_KEYBCS2 = 57525
const UNDERSCORE_KOI8R = 57526
const UNDERSCORE_KOI8U = 57527
const UNDERSCORE_LATIN1 = 57528
const UNDERSCORE_LATIN2 = 57529
const UNDERSCORE_LATIN5 = 57530
const UNDERSCORE_LATIN7 = 57531
const UNDERSCORE_MACCE = 57532
const UNDERSCORE_MACROMAN = 57533
const UNDERSCORE_SJIS = 57534
const UNDERSCORE_SWE7 = 57535
const UNDERSCORE_TIS620 = 57536
const UNDERSCORE_UCS2 = 57537
const UNDERSCORE_UJIS = 57538
const UNDERSCORE_UTF16 = 57539
const UNDERSCORE_UTF16LE = 57540
const UNDERSCORE_UTF32 = 57541
const UNDERSCORE_UTF8 = 57542
const UNDERSCORE_UTF8MB4 = 57543
const UNDERSCORE_UTF8MB3 = 57544
const INTERVAL = 57545
const WINDOW_EXPR = 57546
const JSON_EXTRACT_OP = 57547
const JSON_UNQUOTE_EXTRACT_OP = 57548
const CREATE = 57549
const ALTER = 57550
const DROP = 57551
const RENAME = 57552
const ANALYZE = 57553
const ADD = 57554
const FLUSH = 57555
const CHANGE = 57556
const MODIFY = 57557
const DEALLOCATE = 57558
const REVERT = 57559
const SCHEMA = 57560
const TABLE = 57561
const INDEX = 57562
const VIEW = 57563
const TO = 57564
const IGNORE = 57565
const IF = 57566
const PRIMARY = 57567
const COLUMN = 57568
const SPATIAL = 57569
const FULLTEXT = 57570
const KEY_BLOCK_SIZE = 57571
const CHECK = 57572
const INDEXES = 57573
const ACTION = 57574
const CASCADE = 57575
const CONSTRAINT = 57576
const FOREIGN = 57577
const NO = 57578
const REFERENCES = 57579
const RESTRICT = 57580
const SHOW = 57581
const DESCRIBE = 57582
const EXPLAIN = 57583
const DATE = 57584
const ESCAPE = 57585
const REPAIR = 57586
const OPTIMIZE = 57587
const TRUNCATE = 57588
const COALESCE = 57589
const EXCHANGE = 57590
const REBUILD = 57591
const PARTITIONING = 57592
const REMOVE = 57593
const PREPARE = 57594
const EXECUTE = 57595
const MAXVALUE = 57596
const PARTITION = 57597
const REORGANIZE = 57598
const LESS = 57599
const THAN = 57600
const PROCEDURE = 57601
const TRIGGER = 57602
const VINDEX = 57603
const VINDEXES = 57604
const DIRECTORY = 57605
const NAME = 57606
const UPGRADE = 57607
const STATUS = 57608
const VARIABLES = 57609
const WARNINGS = 57610
const CASCADED = 57611
const DEFINER = 57612
const OPTION = 57613
const SQL = 57614
const UNDEFINED = 57615
const SEQUENCE = 57616
const MERGE = 57617
const TEMPORARY = 57618
const TEMPTABLE = 57619
const INVOKER = 57620
const SECURITY = 57621
const FIRST = 57622
const AFTER = 57623
const LAST = 57624
const VITESS_MIGRATION = 57625
const CANCEL = 57626
const RETRY = 57627
const COMPLETE = 57628
const CLEANUP = 57629
const THROTTLE = 57630
const UNTHROTTLE = 57631
const EXPIRE = 57632
const RATIO = 57633
const BEGIN = 57634
const START = 57635
const TRANSACTION = 57636
const COMMIT = 57637
const ROLLBACK = 57638
const SAVEPOINT = 57639
const RELEASE = 57640
const WORK = 57641
const BIT = 57642
const TINYINT = 57643
const SMALLINT = 57644
const MEDIUMINT = 57645
const INT = 57646
const INTEGER = 57647
const BIGINT = 57648
const INTNUM = 57649
const REAL = 57650
const DOUBLE = 57651
const FLOAT_TYPE = 57652
const DECIMAL_TYPE = 57653
const NUMERIC = 57654
const TIME = 57655
const TIMESTAMP = 57656
const DATETIME = 57657
const YEAR = 57658
const CHAR = 57659
const VARCHAR = 57660
const BOOL = 57661
const CHARACTER = 57662
const VARBINARY = 57663
const NCHAR = 57664
const TEXT = 57665
const TINYTEXT = 57666
const MEDIUMTEXT = 57667
const LONGTEXT = 57668
const BLOB = 57669
const TINYBLOB = 57670
const MEDIUMBLOB = 57671
const LONGBLOB = 57672
const JSON = 57673
const JSON_SCHEMA_VALID = 57674
const JSON_SCHEMA_VALIDATION_REPORT = 57675
const ENUM = 57676
const GEOMETRY = 57677
const POINT = 57678
const LINESTRING = 57679
const POLYGON = 57680
const GEOMCOLLECTION = 57681
const GEOMETRYCOLLECTION = 57682
const MULTIPOINT = 57683
const MULTILINESTRING = 57684
const MULTIPOLYGON = 57685
const ASCII = 57686
const UNICODE = 57687
const NULLX = 57688
const AUTO_INCREMENT = 57689
const APPROXNUM = 57690
const SIGNED = 57691
const UNSIGNED = 57692
const ZEROFILL = 57693
const CODE = 57694
const COLLATION = 57695
const COLUMNS = 57696
const DATABASES = 57697
const ENGINES = 57698
const EVENT = 57699
const EXTENDED = 57700
const FIELDS = 57701
const FULL = 57702
const FUNCTION = 57703
const GTID_EXECUTED = 57704
const KEYSPACES = 57705
const OPEN = 57706
const PLUGINS = 57707
const PRIVILEGES = 57708
const PROCESSLIST = 57709
const SCHEMAS = 57710
const TABLES = 57711
const TRIGGERS = 57712
const USER = 57713
const VGTID_EXECUTED = 57714
const VITESS_KEYSPACES = 57715
const VITESS_METADATA = 57716
const VITESS_MIGRATIONS = 57717
const VITESS_REPLICATION_STATUS = 57718
const VITESS_SHARDS = 57719
const VITESS_TABLETS = 57720
const VITESS_TARGET = 57721
const VSCHEMA = 57722
const VITESS_THROTTLED_APPS = 57723
const NAMES = 57724
const GLOBAL = 57725
const SESSION = 57726
const ISOLATION = 57727
const LEVEL = 57728
const READ = 57729
const WRITE = 57730
const ONLY = 57731
const REPEATABLE = 57732
const COMMITTED = 57733
const UNCOMMITTED = 57734
const SERIALIZABLE = 57735
const CURRENT_TIMESTAMP = 57736
const DATABASE = 57737
const CURRENT_DATE = 57738
const NOW = 57739
const CURRENT_TIME = 57740
const LOCALTIME = 57741
const LOCALTIMESTAMP = 57742
const CURRENT_USER = 57743
const UTC_DATE = 57744
const UTC_TIME = 57745
const UTC_TIMESTAMP = 57746
const DAY = 57747
const DAY_HOUR = 57748
const DAY_MICROSECOND = 57749
const DAY_MINUTE = 57750
const DAY_SECOND = 57751
const HOUR = 57752
const HOUR_MICROSECOND = 57753
const HOUR_MINUTE = 57754
const HOUR_SECOND = 57755
const MICROSECOND = 57756
const MINUTE = 57757
const MINUTE_MICROSECOND = 57758
const MINUTE_SECOND = 57759
const MONTH = 57760
const QUARTER = 57761
const SECOND = 57762
const SECOND_MICROSECOND = 57763
const YEAR_MONTH = 57764
const WEEK = 57765
const REPLACE = 57766
const CONVERT = 57767
const CAST = 57768
const SUBSTR = 57769
const SUBSTRING = 57770
const SEPARATOR = 57771
const TIMESTAMPADD = 57772
const TIMESTAMPDIFF = 57773
const WEIGHT_STRING = 57774
const LTRIM = 57775
const RTRIM = 57776
const TRIM = 57777
const JSON_ARRAY = 57778
const JSON_OBJECT = 57779
const JSON_QUOTE = 57780
const JSON_DEPTH = 57781
const JSON_TYPE = 57782
const JSON_LENGTH = 57783
const JSON_VALID = 57784
const JSON_ARRAY_APPEND = 57785
const JSON_ARRAY_INSERT = 57786
const JSON_INSERT = 57787
const JSON_MERGE = 57788
const JSON_MERGE_PATCH = 57789
const JSON_MERGE_PRESERVE = 57790
const JSON_REMOVE = 57791
const JSON_REPLACE = 57792
const JSON_SET = 57793
const JSON_UNQUOTE = 57794
const COUNT = 57795
const AVG = 57796
const MAX = 57797
const MIN = 57798
const SUM = 57799
const GROUP_CONCAT = 57800
const BIT_AND = 57801
const BIT_OR = 57802
const BIT_XOR = 57803
const STD = 57804
const STDDEV = 57805
const STDDEV_POP = 57806
const STDDEV_SAMP = 57807
const VAR_POP = 57808
const VAR_SAMP = 57809
const VARIANCE = 57810
const REGEXP_INSTR = 57811
const REGEXP_LIKE = 57812
const REGEXP_REPLACE = 57813
const REGEXP_SUBSTR = 57814
const ExtractValue = 57815
const UpdateXML = 57816
const GET_LOCK = 57817
const RELEASE_LOCK = 57818
const RELEASE_ALL_LOCKS = 57819
const IS_FREE_LOCK = 57820
const IS_USED_LOCK = 57821
const LOCATE = 57822
const POSITION = 57823
const MATCH = 57824
const AGAINST = 57825
const BOOLEAN = 57826
const LANGUAGE = 57827
const WITH = 57828
const QUERY = 57829
const EXPANSION = 57830
const WITHOUT = 57831
const VALIDATION = 57832
const UNUSED = 57833
const ARRAY = 57834
const BYTE = 57835
const CUME_DIST = 57836
const DESCRIPTION = 57837
const DENSE_RANK = 57838
const EMPTY = 57839
const EXCEPT = 57840
const FIRST_VALUE = 57841
const GROUPING = 57842
const GROUPS = 57843
const JSON_TABLE = 57844
const LAG = 57845
const LAST_VALUE = 57846
const LATERAL = 57847
const LEAD = 57848
const NTH_VALUE = 57849
const NTILE = 57850
const OF = 57851
const OVER = 57852
const PERCENT_RANK = 57853
const RANK = 57854
const RECURSIVE = 57855
const ROW_NUMBER = 57856
const SYSTEM = 57857
const WINDOW = 57858
const ACTIVE = 57859
const ADMIN = 57860
const AUTOEXTEND_SIZE = 57861
const BUCKETS = 57862
const CLONE = 57863
const COLUMN_FORMAT = 57864
const COMPONENT = 57865
const DEFINITION = 57866
const ENFORCED = 57867
const ENGINE_ATTRIBUTE = 57868
const EXCLUDE = 57869
const FOLLOWING = 57870
const GET_MASTER_PUBLIC_KEY = 57871
const HISTOGRAM = 57872
const HISTORY = 57873
const INACTIVE = 57874
const INVISIBLE = 57875
const LOCKED = 57876
const MASTER_COMPRESSION_ALGORITHMS = 57877
const MASTER_PUBLIC_KEY_PATH = 57878
const MASTER_TLS_CIPHERSUITES = 57879
const MASTER_ZSTD_COMPRESSION_LEVEL = 57880
const NESTED = 57881
const NETWORK_NAMESPACE = 57882
const NOWAIT = 57883
const NULLS = 57884
const OJ = 57885
const OLD = 57886
const OPTIONAL = 57887
const ORDINALITY = 57888
const ORGANIZATION = 57889
const OTHERS = 57890
const PARTIAL = 57891
const PATH = 57892
const PERSIST = 57893
const PERSIST_ONLY = 57894
const PRECEDING = 57895
const PRIVILEGE_CHECKS_USER = 57896
const PROCESS = 57897
const RANDOM = 57898
const REFERENCE = 57899
const REQUIRE_ROW_FORMAT = 57900
const RESOURCE = 57901
const RESPECT = 57902
const RESTART = 57903
const RETAIN = 57904
const REUSE = 57905
const ROLE = 57906
const SECONDARY = 57907
const SECONDARY_ENGINE = 57908
const SECONDARY_ENGINE_ATTRIBUTE = 57909
const SECONDARY_LOAD = 57910
const SECONDARY_UNLOAD = 57911
const SIMPLE = 57912
const SKIP = 57913
const SRID = 57914
const THREAD_PRIORITY = 57915
const TIES = 57916
const UNBOUNDED = 57917
const VCPU = 57918
const VISIBLE = 57919
const RETURNING = 57920
const FORMAT_BYTES = 57921
const FORMAT_PICO_TIME = 57922
const PS_CURRENT_THREAD_ID = 57923
const PS_THREAD_ID = 57924
const GTID_SUBSET = 57925
const GTID_SUBTRACT = 57926
const WAIT_FOR_EXECUTED_GTID_SET = 57927
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57928
const FORMAT = 57929
const TREE = 57930
const VITESS = 57931
const TRADITIONAL = 57932
const VTEXPLAIN = 57933
const LOCAL = 57934
const LOW_PRIORITY = 57935
const NO_WRITE_TO_BINLOG = 57936
const LOGS = 57937
const ERROR = 57938
const GENERAL = 57939
const HOSTS = 57940
const OPTIMIZER_COSTS = 57941
const USER_RESOURCES = 57942
const SLOW = 57943
const CHANNEL = 57944
const RELAY = 57945
const EXPORT = 57946
const CURRENT = 57947
const ROW = 57948
const ROWS = 57949
const AVG_ROW_LENGTH = 57950
const CONNECTION = 57951
const CHECKSUM = 57952
const DELAY_KEY_WRITE = 57953
const ENCRYPTION = 57954
const ENGINE = 57955
const INSERT_METHOD = 57956
const MAX_ROWS = 57957
const MIN_ROWS = 57958
const PACK_KEYS = 57959
const PASSWORD = 57960
const FIXED = 57961
const DYNAMIC = 57962
const COMPRESSED = 57963
const REDUNDANT = 57964
const COMPACT = 57965
const ROW_FORMAT = 57966
const STATS_AUTO_RECALC = 57967
const STATS_PERSISTENT = 57968
const STATS_SAMPLE_PAGES = 57969
const STORAGE = 57970
const MEMORY = 57971
const DISK = 57972
const PARTITIONS = 57973
const LINEAR = 57974
const RANGE = 57975
const LIST = 57976
const SUBPARTITION = 57977
const SUBPARTITIONS = 57978
const HASH = 57979

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 48,
	14, 48,
	-2, 37,
	-1, 49,
	1, 147,
	655, 147,
	-2, 155,
	-1, 50,
	134, 155,
	175, 155,
	337, 155,
	-2, 505,
	-1, 57,
	36, 748,
	237, 748,
	248, 748,
	283, 762,
	284, 762,
	-2, 750,
	-1, 62,
	239, 779,
	-2, 777,
	-1, 116,
	236, 1433,
	-2, 121,
	-1, 118,
	1, 148,
	655, 148,
	-2, 155,
	-1, 129,
	135, 391,
	242, 391,
	-2, 494,
	-1, 148,
	134, 155,
	175, 155,
	337, 155,
	-2, 514,
	-1, 763,
	87, 1450,
	-2, 1297,
	-1, 764,
	87, 1451,
	220, 1455,
	-2, 1298,
	-1, 797,
	220, 1454,
	-2, 39,
	-1, 877,
	60, 848,
	-2, 863,
	-1, 963,
	247, 40,
	252, 40,
	-2, 402,
	-1, 1048,
	1, 562,
	655, 562,
	-2, 155,
	-1, 1337,
	220, 1455,
	-2, 1298,
	-1, 1485,
	60, 849,
	-2, 868,
	-1, 1486,
	60, 850,
	-2, 869,
	-1, 1537,
	134, 155,
	175, 155,
	337, 155,
	-2, 441,
	-1, 1616,
	135, 391,
	242, 391,
	-2, 494,
	-1, 1625,
	247, 41,
	252, 41,
	-2, 403,
	-1, 1978,
	220, 1459,
	-2, 1453,
	-1, 1979,
	220, 1455,
	-2, 1451,
	-1, 2078,
	134, 155,
	175, 155,
	337, 155,
	-2, 442,
	-1, 2085,
	26, 176,
	-2, 178,
	-1, 2446,
	78, 95,
	88, 95,
	-2, 927,
	-1, 2514,
	630, 675,
	-2, 649,
	-1, 2680,
	50, 1392,
	-2, 1386,
	-1, 2977,
	8, 54,
	19, 54,
	21, 54,
	89, 54,
	-2, 897,
	-1, 3336,
	630, 675,
	-2, 663,
	-1, 3424,
	23, 1810,
	33, 1810,
	176, 1810,
	259, 1810,
	317, 1810,
	318, 1810,
	319, 1810,
	320, 1810,
	321, 1810,
	322, 1810,
	323, 1810,
	325, 1810,
	326, 1810,
	327, 1810,
	328, 1810,
	329, 1810,
	330, 1810,
	331, 1810,
	332, 1810,
	333, 1810,
	334, 1810,
	335, 1810,
	336, 1810,
	338, 1810,
	340, 1810,
	341, 1810,
	342, 1810,
	343, 1810,
	344, 1810,
	345, 1810,
	346, 1810,
	347, 1810,
	348, 1810,
	351, 1810,
	352, 1810,
	353, 1810,
	354, 1810,
	355, 1810,
	357, 1810,
	358, 1810,
	359, 1810,
	360, 1810,
	501, 1810,
	-2, 607,
}

const yyPrivate = 57344

const yyLast = 46839

var yyAct = [...]int{
	1493, 3506, 3495, 3084, 3085, 3317, 3464, 3083, 3422, 799,
	806, 671, 3401, 3465, 2075, 1540, 2909, 3054, 798, 1845,
	2027, 651, 3367, 2832, 3390, 3301, 2735, 2742, 2007, 767,
	3249, 2792, 39, 2797, 2794, 2793, 2791, 2796, 1111, 2795,
	5, 2693, 657, 3299, 3041, 2344, 2009, 870, 2783, 2696,
	3113, 2639, 2378, 2145, 653, 2811, 3289, 2417, 2697, 2694,
	995, 2948, 2942, 3118, 893, 2812, 2750, 2574, 2031, 2047,
	2440, 2968, 761, 1500, 681, 2814, 768, 2691, 2681, 2404,
	2934, 2108, 2479, 649, 762, 2558, 1969, 2837, 2133, 1463,
	1594, 2511, 925, 2113, 2480, 2176, 2481, 157, 2063, 894,
	2051, 2429, 872, 2410, 38, 1113, 2396, 1487, 40, 874,
	1641, 878, 2380, 1966, 1841, 1940, 1089, 1974, 2550, 2154,
	2039, 1939, 650, 2193, 1799, 2052, 2115, 1623, 2473, 953,
	896, 2448, 1529, 143, 958, 2132, 1509, 2054, 1467, 98,
	1349, 971, 99, 1060, 1860, 1818, 663, 1864, 1630, 1743,
	932, 1277, 2130, 1739, 929, 964, 961, 959, 960, 645,
	933, 1722, 1528, 94, 658, 911, 913, 1514, 884, 2032,
	1333, 1936, 1873, 1975, 1309, 881, 2104, 10, 79, 1103,
	9, 8, 1748, 121, 1589, 119, 879, 126, 127, 1044,
	880, 1109, 120, 882, 78, 87, 906, 161, 1615, 100,
	640, 1353, 3326, 101, 2504, 92, 997, 3496, 2147, 2148,
	2149, 2502, 1357, 3042, 2780, 1999, 2147, 2534, 2533, 1014,
	1015, 1016, 2191, 1019, 1020, 1021, 1022, 587, 3034, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1000, 122, 926, 128,
	901, 905, 184, 3352, 93, 3448, 2802, 887, 1707, 1278,
	620, 2566, 89, 89, 2567, 815, 816, 817, 641, 2799,
	89, 3348, 975, 3347, 873, 920, 123, 2, 871, 3353,
	921, 626, 2004, 2005, 1821, 2997, 1806, 974, 1805, 166,
	2232, 1804, 950, 1803, 1008, 1802, 895, 1801, 89, 1779,
	2376, 951, 949, 643, 948, 644, 1001, 1004, 1005, 1278,
	888, 947, 3443, 626, 2800, 2677, 122, 2406, 2180, 105,
	106, 107, 184, 110, 3468, 2802, 116, 3088, 3088, 185,
	2524, 1017, 582, 2643, 942, 937, 3432, 2806, 3452, 3450,
	1294, 3516, 3463, 639, 3486, 2914, 123, 163, 145, 2913,
	164, 3430, 866, 867, 868, 869, 620, 2527, 877, 166,
	3436, 3437, 2179, 3451, 3449, 2178, 1288, 3302, 2752, 2753,
	183, 2345, 3348, 1811, 2856, 3431, 3245, 3244, 919, 765,
	766, 999, 998, 2800, 122, 1494, 908, 909, 3408, 3047,
	156, 3446, 3048, 3477, 3255, 3066, 144, 3055, 617, 3391,
	1310, 80, 3398, 815, 816, 817, 2806, 2173, 80, 919,
	765, 766, 3254, 3087, 3087, 3065, 1288, 163, 620, 1850,
	164, 620, 2853, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1319, 1318, 1320, 1321, 3427, 2241, 132, 133, 155, 154,
	183, 2876, 1604, 80, 2541, 2542, 603, 3331, 2803, 2377,
	3131, 3402, 620, 2732, 2733, 2070, 2071, 2731, 601, 80,
	2035, 2565, 82, 621, 2238, 2457, 1284, 2420, 2456, 1276,
	946, 2458, 1053, 1054, 1291, 2751, 1292, 1293, 1530, 89,
	1531, 167, 2069, 1106, 1079, 864, 89, 2754, 2006, 2124,
	173, 1096, 2421, 1098, 863, 1084, 1085, 2505, 598, 3318,
	2239, 1067, 1080, 1073, 1056, 2469, 1068, 612, 2088, 2087,
	1047, 620, 620, 3469, 2118, 2608, 1284, 2803, 2413, 2414,
	1043, 89, 608, 620, 2834, 2945, 3408, 2864, 944, 2862,
	634, 1095, 1097, 2537, 3470, 1787, 632, 89, 638, 149,
	130, 152, 137, 129, 2838, 150, 151, 2233, 2234, 2236,
	2235, 167, 941, 1067, 2035, 943, 1527, 2551, 1068, 621,
	173, 138, 1728, 3277, 1018, 3278, 1066, 1471, 1065, 2205,
	2202, 2204, 2203, 2206, 2207, 141, 139, 134, 135, 136,
	140, 1697, 2212, 2512, 2213, 2155, 2214, 131, 1081, 1074,
	1105, 1086, 588, 2199, 590, 604, 142, 623, 912, 622,
	594, 1087, 592, 596, 605, 597, 2194, 591, 158, 602,
	2835, 3498, 593, 606, 607, 610, 613, 614, 615, 611,
	609, 621, 600, 624, 621, 1698, 1100, 1699, 1088, 1093,
	2827, 1723, 1049, 1094, 2198, 3444, 1082, 1083, 2828, 2553,
	3036, 3035, 2215, 1099, 1024, 2033, 2034, 945, 2200, 1023,
	2836, 2196, 946, 3032, 938, 621, 3229, 2117, 984, 982,
	2158, 940, 939, 946, 1042, 954, 3092, 1092, 2048, 955,
	2642, 1608, 955, 2609, 993, 992, 2197, 991, 158, 990,
	989, 1327, 1328, 1329, 1330, 988, 922, 916, 914, 994,
	987, 1341, 986, 981, 1345, 1283, 1280, 1281, 1282, 1287,
	1289, 1286, 1474, 1285, 1324, 1324, 3510, 2754, 973, 1335,
	944, 930, 3517, 1279, 621, 621, 967, 922, 916, 914,
	3325, 930, 2503, 1003, 1101, 928, 621, 3475, 1046, 966,
	930, 1629, 1063, 1002, 1069, 1070, 1071, 1072, 966, 2033,
	2034, 2381, 2383, 1740, 764, 1283, 1280, 1281, 1282, 1287,
	1289, 1286, 2131, 1285, 907, 952, 153, 1107, 1108, 1077,
	2554, 3404, 2184, 1279, 2854, 2177, 3031, 2183, 2411, 2175,
	1736, 2239, 2539, 1730, 1269, 1729, 1526, 1731, 1732, 1011,
	159, 2506, 2773, 3435, 2536, 1602, 1601, 171, 1600, 2570,
	2253, 3403, 973, 1010, 2471, 2522, 1737, 189, 812, 812,
	189, 2557, 1264, 631, 985, 983, 812, 1598, 637, 972,
	1265, 1266, 1331, 2946, 976, 966, 586, 146, 189, 978,
	147, 581, 3314, 979, 977, 1045, 2076, 3434, 179, 945,
	2984, 625, 2549, 189, 1324, 2548, 1325, 1326, 1628, 2964,
	945, 1461, 3064, 2804, 2805, 1727, 2453, 2416, 2526, 1455,
	159, 2353, 618, 1853, 1518, 1426, 2808, 171, 637, 189,
	637, 1058, 1709, 1708, 1710, 1711, 1712, 619, 118, 160,
	165, 162, 168, 169, 170, 172, 174, 175, 176, 177,
	1495, 1497, 1355, 1321, 1356, 178, 180, 181, 182, 2995,
	2996, 83, 2525, 972, 2730, 88, 915, 1359, 179, 3404,
	890, 1477, 88, 973, 1090, 1481, 2382, 1064, 3086, 3086,
	1874, 874, 2804, 2805, 2121, 2240, 1462, 1055, 1052, 1104,
	113, 1478, 1749, 3508, 1875, 2808, 3509, 915, 3507, 3403,
	1914, 2898, 3339, 2560, 996, 1475, 3027, 88, 2559, 160,
	165, 162, 168, 169, 170, 172, 174, 175, 176, 177,
	973, 1062, 2958, 88, 2122, 178, 180, 181, 182, 2195,
	1076, 2120, 2174, 2560, 1865, 1796, 1733, 1532, 2559, 2594,
	1865, 1078, 2270, 1823, 1479, 3127, 2495, 1480, 98, 2575,
	1462, 99, 1432, 1433, 1434, 1435, 1436, 1824, 1322, 1323,
	1822, 114, 1724, 3478, 1725, 2123, 1293, 1726, 1292, 1293,
	3002, 1468, 1294, 3001, 972, 2119, 1009, 973, 2162, 1638,
	1006, 1605, 1606, 1607, 1637, 1627, 1294, 1635, 2167, 1906,
	1895, 1896, 1897, 1898, 1908, 1899, 1900, 1901, 1913, 1909,
	1902, 1903, 1910, 1911, 1912, 1904, 1905, 1907, 2172, 2170,
	984, 982, 101, 2167, 1670, 3369, 3307, 1673, 3518, 1675,
	1091, 972, 1872, 3512, 1621, 1048, 2171, 966, 969, 970,
	3471, 930, 2577, 1465, 2985, 963, 967, 1476, 1750, 2245,
	2246, 2247, 886, 871, 1692, 2738, 873, 1499, 1682, 1683,
	3061, 2169, 3062, 973, 1688, 1689, 962, 1494, 3237, 3370,
	3308, 1614, 1643, 1061, 1644, 1496, 1646, 1648, 1674, 1633,
	1652, 1654, 1656, 1658, 1660, 1523, 1524, 3236, 972, 3227,
	1494, 1631, 1631, 976, 966, 3077, 3076, 1870, 978, 1632,
	2739, 1871, 979, 977, 3009, 3008, 1597, 2998, 2587, 2586,
	2585, 2579, 2781, 2583, 3519, 2578, 1291, 2576, 1292, 1293,
	2769, 2477, 2581, 980, 1612, 1610, 2741, 1717, 1624, 1715,
	1291, 2580, 1292, 1293, 1482, 1611, 1813, 1815, 1816, 2596,
	2476, 2736, 1294, 2127, 1745, 1718, 1704, 1294, 1702, 2582,
	2584, 1316, 1317, 1319, 1318, 1320, 1321, 1701, 2752, 2753,
	1814, 1678, 1751, 1752, 972, 2737, 2040, 2041, 184, 2297,
	966, 969, 970, 1971, 930, 1700, 1756, 1968, 963, 967,
	1690, 1970, 626, 1763, 1764, 1765, 815, 816, 817, 1741,
	1684, 1716, 123, 1714, 1681, 1680, 1679, 1753, 2743, 810,
	1603, 1650, 2992, 626, 1757, 166, 1759, 1760, 1761, 1762,
	1703, 1971, 949, 1766, 948, 2831, 2460, 626, 2143, 2142,
	1527, 947, 2141, 2140, 1503, 1778, 122, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1319, 1318, 1320, 1321, 1755, 1314,
	1315, 1316, 1317, 1319, 1318, 1320, 1321, 1268, 2462, 1312,
	1313, 1314, 1315, 1316, 1317, 1319, 1318, 1320, 1321, 3472,
	1777, 3334, 1294, 163, 3333, 2751, 164, 2957, 2139, 2138,
	1504, 1776, 1310, 3311, 2569, 3310, 1291, 2754, 1292, 1293,
	2307, 1291, 39, 1292, 1293, 3309, 183, 2402, 3497, 97,
	1290, 1494, 1494, 1792, 3232, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1319, 1318, 1320, 1321, 189, 3216, 189, 104,
	1827, 189, 3459, 1494, 1294, 3215, 1848, 1848, 1294, 3126,
	103, 3124, 102, 1294, 1846, 1846, 1849, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1296, 1868, 2258, 1294, 95, 1869,
	3073, 637, 1294, 637, 637, 97, 3482, 1494, 1494, 96,
	1290, 1494, 1294, 1310, 1461, 1460, 1294, 1335, 1459, 95,
	1458, 1817, 1819, 637, 189, 2402, 3397, 2402, 3377, 3327,
	96, 2871, 3006, 1932, 1866, 2309, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1319, 1318, 1320, 1321, 2740, 2402, 3373,
	1494, 1337, 3360, 1494, 3045, 3324, 1291, 167, 1292, 1293,
	3263, 1964, 3480, 1494, 1494, 3262, 173, 3414, 1494, 3220,
	1826, 2991, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835,
	1836, 1837, 1838, 1839, 1840, 1494, 1993, 3473, 79, 1462,
	1795, 2839, 1820, 1793, 1794, 1784, 1785, 1494, 3240, 1494,
	3412, 1494, 3219, 1495, 2000, 1976, 2402, 3228, 1291, 2772,
	1292, 1293, 1291, 2771, 1292, 1293, 1926, 1291, 2486, 1292,
	1293, 1825, 3045, 1494, 2402, 3043, 1937, 2167, 1494, 2962,
	1494, 1291, 2474, 1292, 1293, 1457, 1291, 2024, 1292, 1293,
	2318, 1494, 2762, 2761, 104, 1852, 1291, 1967, 1292, 1293,
	1291, 1928, 1292, 1293, 2449, 103, 1294, 102, 2758, 2759,
	1859, 1861, 2758, 2757, 3053, 1294, 97, 2267, 2426, 1494,
	2239, 2535, 1978, 2449, 1876, 1877, 1878, 1879, 1593, 2516,
	2513, 1294, 1310, 2017, 158, 2018, 1981, 1982, 1890, 2189,
	1294, 1337, 2509, 2510, 2001, 2085, 2188, 1976, 2402, 2401,
	1937, 98, 2263, 1494, 99, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1319, 1318, 1320, 1321, 1977, 2450, 1851, 1494,
	2491, 98, 2744, 2030, 99, 1494, 2748, 2452, 2012, 2168,
	1780, 1746, 2398, 2747, 2050, 2023, 2450, 2128, 1713, 1705,
	2266, 1980, 2418, 1695, 1983, 1984, 2239, 97, 189, 3410,
	1494, 103, 637, 637, 1691, 1687, 1686, 1685, 1593, 1592,
	2094, 2095, 2096, 2097, 1978, 3286, 1494, 2749, 189, 1538,
	1537, 2080, 2745, 1294, 3258, 2079, 2089, 2746, 2090, 2091,
	2092, 2093, 2011, 1505, 1102, 2425, 2084, 2167, 637, 2061,
	1291, 189, 1292, 1293, 2100, 2101, 2102, 2103, 2022, 1291,
	887, 1292, 1293, 637, 1290, 2263, 2959, 2025, 2045, 189,
	2110, 2692, 3365, 2083, 2426, 1291, 2418, 1292, 1293, 3338,
	1290, 2116, 2957, 2043, 1291, 2402, 1292, 1293, 2156, 2067,
	920, 2066, 2065, 2725, 2426, 921, 2082, 2081, 2918, 2760,
	2426, 2665, 2068, 2239, 2263, 2318, 637, 2294, 2293, 2167,
	2150, 2038, 1498, 2153, 1294, 2126, 159, 3284, 1494, 1337,
	2002, 1851, 1797, 171, 1735, 637, 637, 1525, 637, 957,
	637, 637, 1294, 637, 637, 637, 637, 637, 637, 3010,
	876, 956, 89, 1294, 2111, 3440, 1337, 2784, 2957, 1337,
	637, 1337, 189, 3380, 2125, 2161, 2137, 3251, 2164, 2129,
	2165, 975, 2106, 2107, 179, 1501, 2181, 1291, 3217, 1292,
	1293, 1631, 189, 3138, 1294, 3026, 974, 2160, 2163, 2111,
	2159, 1666, 3023, 3004, 2881, 637, 2880, 189, 1595, 2109,
	3011, 3012, 3013, 2185, 2182, 2829, 2786, 2186, 2187, 3322,
	2782, 637, 2517, 189, 2105, 160, 165, 162, 168, 169,
	170, 172, 174, 175, 176, 177, 3281, 1494, 89, 189,
	2099, 178, 180, 181, 182, 2098, 189, 3267, 1494, 1720,
	1626, 1622, 1667, 1668, 1669, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 637, 2192, 2250, 1591, 1291, 115,
	1292, 1293, 1294, 2256, 3014, 2483, 1047, 2261, 2933, 1494,
	2264, 2833, 2265, 2969, 2970, 1662, 1291, 2272, 1292, 1293,
	3252, 2274, 2275, 2276, 2124, 2015, 2482, 1291, 1782, 1292,
	1293, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2218, 2257, 1294, 2255, 2225, 2226, 3492, 3490, 1819,
	2228, 3015, 3016, 3017, 3466, 3346, 3272, 2972, 1291, 2229,
	1292, 1293, 1663, 1664, 1665, 2778, 2777, 2298, 2299, 2300,
	2301, 2302, 1294, 2304, 2483, 3342, 2260, 2306, 2776, 1294,
	2692, 2311, 2312, 2496, 2313, 2219, 2259, 2316, 1294, 2317,
	1783, 2975, 2974, 2320, 2711, 2714, 2249, 2324, 2251, 2237,
	2715, 2329, 2330, 2331, 2332, 2712, 3253, 2710, 2029, 1978,
	2713, 1502, 2021, 2277, 2343, 2963, 2346, 2347, 2248, 1820,
	2716, 2670, 2435, 2436, 2349, 2351, 3117, 2926, 1494, 2669,
	2292, 2354, 2355, 2356, 2357, 2358, 1291, 3306, 1292, 1293,
	3119, 1734, 2365, 2366, 2953, 2367, 1294, 2950, 2370, 2372,
	2024, 2679, 2374, 1977, 862, 2949, 2923, 1494, 637, 637,
	1294, 2269, 2386, 2921, 1494, 1310, 637, 3108, 1306, 3107,
	1307, 189, 2886, 1494, 1848, 2756, 2467, 1291, 2487, 1292,
	1293, 1294, 1846, 2387, 1308, 1322, 1323, 1305, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1319, 1318, 1320, 1321, 1013,
	1874, 2682, 2684, 1294, 1012, 2847, 1291, 2385, 1292, 1293,
	2685, 1267, 2303, 1291, 1875, 1292, 1293, 3106, 1294, 637,
	2482, 1507, 1291, 2563, 1292, 1293, 95, 39, 95, 1337,
	1310, 3224, 2252, 891, 1294, 97, 2442, 96, 2422, 96,
	637, 892, 2523, 1294, 2869, 1494, 1337, 1294, 123, 2403,
	2388, 2955, 2390, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1319, 1318, 1320, 1321, 1294, 2373, 1494, 97, 2040, 2041,
	3419, 637, 637, 104, 3504, 1294, 2774, 2222, 3323, 3247,
	1291, 2399, 1292, 1293, 103, 2755, 102, 1506, 2412, 2439,
	1468, 2375, 2026, 2211, 1291, 97, 1292, 1293, 899, 900,
	2210, 1294, 2371, 1494, 2209, 2668, 2208, 2935, 1294, 2470,
	2472, 2441, 2305, 2667, 2243, 1291, 102, 1292, 1293, 3028,
	1294, 1979, 2508, 2400, 1294, 2415, 2463, 2979, 2485, 3294,
	104, 2350, 1494, 2488, 2489, 2447, 2395, 1291, 3293, 1292,
	1293, 103, 103, 102, 2451, 3275, 3125, 3123, 2333, 1494,
	2532, 2454, 1291, 2116, 1292, 1293, 3122, 2461, 3115, 2325,
	1494, 3024, 1294, 2954, 189, 2464, 646, 1294, 1291, 637,
	1292, 1293, 2952, 2787, 2151, 1294, 2530, 1291, 2475, 1292,
	1293, 1291, 1294, 1292, 1293, 1609, 1494, 898, 3114, 2943,
	2418, 2484, 2928, 189, 1294, 3096, 637, 2398, 1291, 2492,
	1292, 1293, 2610, 2493, 2924, 3493, 189, 2295, 2896, 1291,
	637, 1292, 1293, 1979, 189, 104, 189, 2013, 189, 189,
	2497, 2498, 2499, 1294, 2529, 2572, 103, 1519, 2598, 2599,
	2600, 2601, 2602, 637, 1614, 1291, 1511, 1292, 1293, 3494,
	2518, 2519, 1291, 3312, 1292, 1293, 2892, 2607, 3494, 3493,
	2990, 2528, 2478, 1294, 1291, 889, 1292, 1293, 1291, 2878,
	1292, 1293, 1294, 108, 109, 3, 2877, 91, 1, 897,
	2994, 3429, 903, 903, 599, 2003, 1466, 2588, 2874, 2552,
	3467, 3425, 3426, 1706, 1696, 3056, 2571, 1938, 637, 3248,
	2603, 2561, 1294, 2555, 2562, 2790, 1291, 2157, 1292, 1293,
	3022, 1291, 2590, 1292, 1293, 2114, 965, 2369, 148, 1291,
	1294, 1292, 1293, 2077, 2078, 637, 1291, 1294, 1292, 1293,
	3393, 637, 112, 923, 111, 2589, 968, 2573, 1291, 1075,
	1292, 1293, 2431, 2434, 2435, 2436, 2432, 2368, 2433, 2437,
	2152, 3046, 2649, 2644, 2468, 2086, 2364, 1544, 1542, 1543,
	1541, 2646, 1546, 1545, 2855, 2296, 2897, 1291, 2591, 1292,
	1293, 2620, 1786, 2622, 633, 2438, 627, 186, 637, 1533,
	1512, 2910, 2612, 637, 2701, 1007, 2363, 637, 637, 2633,
	2634, 2635, 2636, 1967, 2618, 1967, 1294, 1291, 589, 1292,
	1293, 2719, 2720, 2763, 2362, 1294, 1291, 2190, 1292, 1293,
	1294, 2361, 595, 878, 2672, 2649, 2628, 2629, 2630, 2631,
	2632, 1342, 2645, 2695, 2647, 189, 1781, 2704, 2695, 2673,
	2648, 2666, 189, 1481, 2442, 2724, 1291, 2455, 1292, 1293,
	189, 189, 2689, 918, 189, 910, 189, 2014, 2389, 917,
	3225, 2700, 2660, 189, 1291, 2664, 1292, 1293, 2698, 2947,
	189, 1291, 2671, 1292, 1293, 2678, 2680, 2674, 2405, 2683,
	2676, 2686, 2687, 3305, 3116, 3378, 2465, 1508, 2917, 2726,
	2360, 2268, 2727, 2661, 2662, 2663, 189, 2705, 879, 2359,
	2708, 637, 880, 1863, 2348, 2703, 1332, 2055, 2810, 2717,
	3091, 1812, 98, 2767, 2768, 99, 655, 654, 2721, 2722,
	652, 2728, 2391, 2706, 2707, 2789, 2709, 2419, 1297, 1745,
	2734, 1294, 800, 2379, 1520, 2430, 2428, 2427, 2220, 2849,
	1291, 2062, 1292, 1293, 2764, 2971, 2766, 2765, 1294, 1291,
	2967, 1292, 1293, 3421, 1291, 2057, 1292, 1293, 2053, 2866,
	2867, 2868, 2851, 2870, 2872, 2397, 1337, 2818, 1979, 1294,
	753, 752, 2788, 1294, 664, 2116, 656, 2879, 648, 2817,
	2809, 751, 2883, 2884, 2885, 2887, 2888, 2889, 2890, 750,
	2824, 2891, 2987, 2893, 2894, 2895, 2816, 1294, 2899, 2900,
	2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 3405, 2843,
	2840, 2842, 1294, 2538, 2830, 2342, 2915, 2540, 2466, 2919,
	2826, 2920, 2922, 2850, 2925, 2927, 1275, 2929, 2930, 2931,
	2932, 2860, 2341, 1484, 642, 2938, 2857, 2858, 936, 2859,
	2852, 3329, 2861, 2242, 2863, 2875, 2865, 1483, 1893, 1894,
	3336, 1294, 2798, 2340, 3040, 2912, 2779, 2339, 1294, 2514,
	2144, 65, 2916, 43, 3300, 1291, 3366, 1292, 1293, 1294,
	2960, 2961, 749, 1294, 2965, 2845, 2846, 1294, 746, 3093,
	3094, 2338, 1291, 1294, 1292, 1293, 3095, 2640, 1294, 2641,
	3349, 3350, 2977, 2978, 745, 3351, 2337, 1921, 1272, 2941,
	3442, 1788, 90, 1291, 34, 1292, 1293, 1291, 33, 1292,
	1293, 32, 31, 2936, 2937, 30, 25, 189, 24, 23,
	1294, 22, 2939, 21, 1294, 189, 2944, 27, 1294, 2951,
	20, 1291, 2966, 1292, 1293, 2336, 637, 19, 18, 2801,
	3462, 2956, 2335, 3503, 117, 52, 1291, 637, 1292, 1293,
	2973, 49, 47, 2334, 2982, 2983, 1294, 2328, 125, 124,
	50, 2327, 2976, 46, 2980, 1294, 2981, 2326, 1050, 44,
	29, 189, 2323, 28, 17, 189, 16, 3029, 3030, 2999,
	3000, 2818, 3044, 2988, 2989, 1291, 1294, 1292, 1293, 15,
	1294, 14, 1291, 2817, 1292, 1293, 3005, 13, 3007, 3050,
	3051, 12, 11, 1291, 2322, 1292, 1293, 1291, 2321, 1292,
	1293, 1291, 2319, 1292, 1293, 7, 6, 1291, 37, 1292,
	1293, 1294, 1291, 3063, 1292, 1293, 3067, 36, 35, 1791,
	26, 3033, 4, 2501, 1295, 3037, 3038, 3039, 2146, 637,
	2315, 0, 0, 0, 0, 189, 0, 0, 0, 2314,
	0, 0, 189, 3078, 1291, 1294, 1292, 1293, 1291, 0,
	1292, 1293, 1291, 1350, 1292, 1293, 637, 0, 3082, 3052,
	2310, 0, 0, 637, 2308, 0, 0, 0, 0, 0,
	3090, 0, 637, 0, 0, 0, 0, 0, 3097, 0,
	1291, 0, 1292, 1293, 0, 0, 0, 3068, 1337, 1291,
	0, 1292, 1293, 1469, 0, 2273, 0, 0, 0, 0,
	3072, 189, 189, 189, 189, 189, 0, 0, 0, 0,
	1291, 0, 1292, 1293, 1291, 0, 1292, 1293, 0, 0,
	0, 0, 0, 189, 189, 0, 3089, 3111, 0, 2262,
	2431, 2434, 2435, 2436, 2432, 0, 2433, 2437, 0, 0,
	2969, 2970, 3080, 0, 189, 1291, 0, 1292, 1293, 584,
	1848, 39, 0, 1492, 1488, 0, 0, 0, 1846, 3140,
	2695, 0, 3132, 0, 3112, 637, 0, 865, 1489, 3121,
	3120, 0, 0, 3134, 3136, 1492, 1488, 3128, 3130, 1291,
	0, 1292, 1293, 0, 0, 0, 0, 0, 0, 0,
	1489, 0, 0, 2019, 2020, 1491, 2698, 1490, 3141, 3142,
	2698, 3239, 0, 0, 0, 3144, 0, 3226, 931, 0,
	3246, 0, 637, 0, 0, 1485, 1486, 1491, 0, 1490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3256, 3257, 0, 3259, 0, 3260, 3261, 0, 3223, 3222,
	3264, 3265, 3266, 0, 3268, 3271, 3238, 3269, 3270, 0,
	637, 0, 3221, 0, 3250, 3233, 3234, 3235, 637, 1848,
	3280, 3282, 3283, 3285, 3287, 3288, 3290, 1846, 3273, 3230,
	3242, 3243, 0, 0, 0, 1510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3274,
	0, 0, 0, 189, 3320, 3276, 0, 637, 0, 3279,
	0, 0, 1596, 0, 0, 0, 0, 0, 0, 3316,
	0, 637, 0, 3298, 3297, 1337, 3295, 3296, 637, 637,
	1337, 189, 189, 189, 189, 189, 0, 0, 0, 0,
	0, 3313, 0, 189, 0, 0, 0, 0, 189, 3319,
	0, 189, 0, 189, 0, 0, 189, 189, 189, 0,
	0, 3315, 0, 0, 0, 3304, 0, 0, 2698, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3321, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 0, 0, 1337, 0, 0,
	0, 0, 637, 0, 0, 0, 0, 189, 0, 0,
	3345, 0, 3340, 0, 0, 0, 0, 39, 0, 1747,
	3332, 189, 0, 0, 0, 3335, 0, 0, 3337, 0,
	3361, 0, 0, 0, 0, 0, 3362, 3363, 0, 189,
	0, 0, 189, 0, 0, 0, 3328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3374, 0,
	0, 0, 3355, 0, 0, 3356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3364, 0, 3399, 3400, 0, 0, 0, 0,
	0, 0, 0, 39, 3371, 2695, 0, 3344, 3409, 3411,
	3413, 3406, 0, 3407, 3379, 3354, 0, 0, 3384, 3392,
	3389, 3386, 3385, 3383, 3388, 3381, 3387, 3250, 3394, 0,
	0, 0, 637, 3441, 3376, 0, 0, 0, 0, 0,
	0, 3417, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3420, 3438, 3428, 3433, 0, 0, 0,
	0, 189, 3406, 0, 3407, 3447, 0, 0, 0, 0,
	0, 3445, 3458, 0, 0, 0, 0, 0, 0, 0,
	1345, 0, 0, 0, 0, 0, 0, 0, 0, 3461,
	0, 3456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3479, 3481, 3483, 0, 0, 0,
	0, 3474, 0, 3476, 0, 0, 0, 0, 3485, 0,
	189, 0, 3491, 1848, 3484, 0, 3487, 0, 3489, 0,
	0, 1846, 3488, 0, 0, 3502, 0, 0, 3406, 0,
	3407, 3499, 0, 0, 3505, 0, 3511, 0, 0, 189,
	3513, 3514, 3515, 0, 0, 0, 0, 1807, 1808, 1809,
	1810, 0, 0, 0, 0, 1051, 0, 1057, 189, 0,
	1059, 189, 189, 189, 3522, 3523, 3270, 1848, 3521, 0,
	0, 637, 637, 0, 0, 1846, 3520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 1855, 0, 0,
	0, 1857, 0, 903, 903, 1862, 0, 3460, 0, 1867,
	0, 0, 0, 1271, 0, 0, 0, 1561, 637, 637,
	637, 637, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887,
	1888, 1889, 0, 0, 0, 0, 1915, 1916, 1917, 1918,
	1919, 1920, 1922, 0, 1927, 0, 1929, 1930, 1931, 0,
	1933, 1934, 1935, 0, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 1959, 1960, 1961, 1962, 1963, 0, 1965, 0,
	1972, 1973, 903, 0, 903, 903, 903, 903, 903, 0,
	0, 0, 0, 0, 1985, 1986, 1987, 1988, 1989, 1990,
	1991, 1992, 0, 1994, 1995, 1996, 1997, 1998, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 903, 1337, 0, 0, 0, 0, 637, 0, 637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1549, 0, 0, 2036, 2037, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 41, 42, 82, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	0, 0, 0, 86, 0, 0, 0, 45, 71, 72,
	0, 69, 73, 0, 0, 0, 0, 0, 0, 0,
	70, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 58,
	637, 0, 0, 1562, 0, 0, 0, 0, 2112, 0,
	0, 89, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 637, 637, 0, 0, 1539, 0,
	0, 1575, 1578, 1579, 1580, 1581, 1582, 1583, 0, 1584,
	1585, 1586, 1587, 1588, 1563, 1564, 1565, 1566, 1547, 1548,
	1576, 0, 1550, 637, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 0, 0, 1560, 1567, 1568, 1569, 1570,
	0, 1571, 1572, 1573, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3162, 3164, 3163, 3181,
	3182, 3183, 3184, 3185, 3186, 3187, 703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1676, 0, 0, 0, 0, 0, 0, 48, 51,
	54, 53, 56, 0, 68, 0, 0, 77, 74, 0,
	0, 0, 637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 0, 189, 0,
	57, 85, 84, 0, 0, 66, 67, 55, 0, 0,
	0, 0, 0, 75, 76, 0, 637, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1769, 1770, 1771, 1772,
	1773, 1774, 1775, 59, 60, 0, 61, 62, 63, 64,
	0, 0, 0, 0, 0, 1577, 0, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1337, 0, 637,
	811, 0, 0, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2271, 637, 637, 0, 0, 0, 0, 0,
	0, 0, 0, 2278, 2279, 2280, 2281, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 0,
	875, 0, 81, 3168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3176, 3177,
	0, 875, 0, 637, 0, 83, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 935, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 637, 0, 637, 0, 0, 0, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	769, 0, 682, 773, 684, 770, 771, 88, 680, 683,
	772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 701, 702, 3161, 3165,
	3166, 3167, 3178, 3179, 3180, 3188, 3190, 734, 3189, 3191,
	3192, 3193, 3196, 3197, 3198, 3199, 3194, 3195, 3200, 3145,
	3149, 3146, 3147, 3148, 3160, 3150, 3151, 3152, 3153, 3154,
	3155, 3156, 3157, 3158, 3159, 3201, 3202, 3203, 3204, 3205,
	3206, 3171, 3175, 3174, 3172, 3173, 3169, 3170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	774, 0, 775, 0, 0, 779, 0, 0, 0, 781,
	780, 0, 782, 748, 747, 0, 0, 776, 777, 0,
	778, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3207, 3208, 3209, 3210, 3211,
	3212, 3213, 3214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2042, 0, 0, 0, 0,
	0, 0, 0, 2046, 0, 2049, 0, 0, 1800, 0,
	0, 2568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	903, 0, 0, 2592, 2593, 0, 0, 2595, 0, 0,
	2597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2604, 2605, 2606, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2611, 0, 0, 2613, 2614, 2615, 0, 0,
	0, 2616, 2617, 0, 0, 1941, 2619, 0, 0, 2621,
	0, 0, 2623, 2624, 2625, 2626, 0, 0, 0, 0,
	2627, 1941, 1941, 1941, 1941, 1941, 0, 0, 0, 0,
	763, 0, 0, 0, 0, 0, 0, 0, 0, 903,
	0, 0, 0, 0, 0, 0, 2650, 2651, 2652, 2653,
	2654, 2655, 0, 0, 0, 2656, 2657, 0, 2658, 0,
	2659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2690, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 2201, 2723, 0, 0, 0, 0, 0, 0, 2216,
	2217, 0, 0, 2221, 636, 0, 636, 1110, 0, 1110,
	1110, 0, 2224, 0, 0, 0, 0, 0, 0, 2227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2230, 0, 0, 0, 0,
	0, 0, 2785, 0, 0, 0, 875, 1334, 1339, 1340,
	0, 1343, 0, 1344, 1346, 1347, 1348, 0, 1351, 1352,
	1354, 1354, 0, 1354, 1358, 1358, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 0, 0, 2873, 0, 1425, 0, 1427, 1428, 1429,
	1430, 1431, 0, 0, 0, 0, 0, 2882, 0, 0,
	1358, 1358, 1358, 1358, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 813, 0,
	1971, 0, 0, 814, 0, 0, 0, 0, 1847, 0,
	0, 0, 0, 1464, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1470, 0, 0, 0,
	0, 0, 875, 0, 0, 0, 875, 0, 0, 0,
	0, 0, 875, 0, 0, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 0, 0, 0,
	0, 0, 0, 0, 2446, 0, 0, 0, 0, 3025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 754, 0, 0, 0, 0, 0, 0,
	0, 0, 3049, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3069, 635, 3070, 0,
	0, 3071, 0, 0, 3074, 3075, 0, 0, 0, 0,
	0, 0, 0, 3079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2543, 2544, 2545, 2546, 2547, 3098, 0, 927, 3099, 934,
	3100, 3101, 0, 3102, 0, 3103, 0, 0, 0, 0,
	3104, 0, 1800, 2556, 0, 0, 0, 184, 0, 0,
	1110, 0, 0, 0, 0, 0, 0, 0, 2507, 0,
	0, 0, 0, 2564, 0, 3129, 0, 636, 1263, 636,
	636, 123, 0, 145, 0, 0, 3137, 0, 0, 3139,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 636,
	0, 0, 0, 3143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3218, 184, 0, 0, 156, 0, 1336, 0, 0,
	0, 144, 0, 1613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 123, 0, 145, 0,
	0, 0, 163, 0, 0, 164, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1617, 1618, 155, 154, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 0,
	164, 0, 0, 0, 1110, 1110, 0, 0, 0, 0,
	0, 3303, 0, 81, 0, 0, 1617, 1618, 155, 154,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 0,
	0, 0, 0, 0, 149, 1619, 152, 0, 1616, 0,
	150, 151, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 636, 636,
	2775, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	1619, 152, 0, 1616, 0, 150, 151, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 2813, 0, 0, 0,
	173, 0, 0, 0, 636, 0, 0, 0, 0, 0,
	2825, 0, 0, 0, 0, 3343, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 2841, 1590,
	0, 2844, 0, 0, 0, 0, 0, 0, 3357, 1599,
	0, 3358, 0, 3359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 636, 0, 1625, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 1336, 1636, 0, 0, 1639,
	1640, 636, 636, 0, 636, 0, 636, 636, 0, 636,
	636, 636, 636, 636, 636, 0, 0, 0, 0, 0,
	0, 0, 1336, 1671, 1672, 1336, 636, 1336, 0, 1677,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 2056, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 3439, 0, 0,
	2940, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3453, 0, 3454,
	0, 3455, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 1112, 1112, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 0, 935, 147, 153, 0, 0, 0,
	636, 0, 1270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 935, 3003, 0,
	0, 0, 171, 0, 0, 0, 0, 3500, 0, 3501,
	0, 0, 0, 0, 0, 0, 0, 3018, 0, 0,
	3019, 3020, 3021, 0, 0, 0, 0, 146, 0, 0,
	147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 165, 162, 168, 169, 170,
	172, 174, 175, 176, 177, 0, 0, 0, 0, 0,
	178, 180, 181, 182, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 636, 636, 0, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 0, 0, 160,
	165, 162, 168, 169, 170, 172, 174, 175, 176, 177,
	0, 0, 0, 0, 0, 178, 180, 181, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 1472, 1473, 0, 0, 1336, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 0, 636, 0, 0, 0,
	0, 2254, 1336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 636, 0,
	0, 0, 1534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 927, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 1642, 0, 1642, 0, 1642,
	1642, 0, 1651, 1642, 1642, 1642, 1642, 1642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 927,
	0, 1561, 0, 0, 0, 636, 0, 2352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 755, 0,
	0, 0, 636, 0, 1719, 0, 0, 0, 0, 2384,
	0, 0, 0, 0, 0, 0, 636, 0, 0, 636,
	1742, 0, 0, 0, 0, 0, 0, 875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 2423, 2424,
	0, 187, 0, 0, 585, 0, 0, 2443, 0, 2444,
	2445, 0, 0, 1112, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 885, 0, 0,
	0, 0, 0, 0, 636, 0, 0, 0, 0, 0,
	0, 2134, 2135, 2136, 904, 904, 0, 0, 0, 0,
	0, 0, 0, 585, 1549, 0, 0, 0, 0, 0,
	0, 636, 0, 0, 0, 0, 3341, 636, 1634, 0,
	0, 1634, 0, 1634, 0, 0, 0, 0, 0, 2166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2521,
	0, 0, 0, 0, 636, 0, 0, 0, 0, 636,
	0, 0, 0, 636, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1562, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1112, 1112, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 1578, 1579, 1580, 1581,
	1582, 1583, 0, 1584, 1585, 1586, 1587, 1588, 1563, 1564,
	1565, 1566, 1547, 1548, 1576, 0, 1550, 0, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 636, 1842, 1560,
	1567, 1568, 1569, 1570, 0, 1571, 1572, 1573, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1891, 1892, 0, 0, 0, 0, 2637, 0, 0, 0,
	0, 0, 1336, 0, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 0, 0, 0, 0, 0, 0, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2699, 0, 81, 0, 0, 2056, 2056, 2056,
	2056, 2056, 0, 0, 0, 0, 0, 0, 2016, 1577,
	0, 0, 0, 0, 2443, 875, 0, 0, 0, 2056,
	0, 0, 2056, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1516,
	0, 0, 1112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 927, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2807, 0, 0, 0, 0,
	0, 0, 636, 0, 0, 2815, 0, 0, 0, 0,
	0, 0, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 934, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2459, 0, 0,
	585, 0, 585, 0, 927, 585, 0, 0, 0, 0,
	934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 927, 585, 0,
	0, 0, 1842, 0, 0, 0, 1842, 1842, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 1634, 1634, 1338, 0, 0, 636, 0,
	0, 0, 0, 0, 0, 0, 813, 0, 0, 0,
	0, 814, 0, 0, 1336, 2531, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2056, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 636, 0, 820, 821, 822, 823, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 1338, 0, 0, 636, 0,
	0, 0, 0, 0, 0, 0, 0, 1112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 0, 0, 0,
	0, 0, 0, 0, 636, 0, 0, 0, 0, 0,
	0, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 885, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 636, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 1336, 0, 585, 636, 636, 1336, 0, 0, 0,
	0, 0, 0, 0, 0, 3105, 0, 3109, 3110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2699, 0, 81, 0, 2699, 0, 0, 0, 0, 0,
	0, 0, 0, 1338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2392, 0, 0, 2770, 0,
	0, 0, 0, 0, 0, 0, 2407, 0, 0, 0,
	1338, 0, 0, 1338, 0, 1338, 585, 0, 0, 0,
	636, 0, 0, 1336, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 0, 0, 0, 1693, 0, 0, 0,
	0, 0, 0, 3231, 0, 0, 0, 0, 0, 0,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2848, 0,
	0, 0, 0, 585, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 2490, 1767,
	1768, 585, 585, 585, 585, 585, 585, 585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2028, 0, 0, 0, 0,
	0, 0, 2515, 0, 0, 0, 0, 0, 0, 0,
	0, 2520, 2699, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 0, 0, 0, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 0, 0, 0, 0, 0,
	3330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2993, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 0, 0, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2638,
	0, 0, 0, 0, 0, 0, 0, 1112, 0, 3375,
	0, 0, 0, 0, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 1338, 636, 636, 636, 636, 0, 0,
	0, 0, 0, 0, 0, 904, 904, 0, 1642, 0,
	1338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 0, 0, 0, 0, 2702, 1642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3457, 0, 0, 0, 904, 1744, 904, 904, 904, 904,
	904, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1336, 0,
	0, 0, 0, 636, 0, 636, 0, 0, 1693, 0,
	0, 0, 0, 927, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 904, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 1744, 585, 0,
	585, 0, 585, 2064, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 636, 0, 0, 0, 0, 0, 0,
	89, 0, 0, 813, 0, 0, 636, 801, 814, 815,
	816, 817, 802, 805, 0, 0, 0, 803, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 810, 818, 819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2911, 0, 0, 0, 0, 636, 0, 0, 0,
	636, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2819, 2820,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 636, 585,
	0, 0, 2821, 0, 0, 0, 585, 0, 0, 0,
	0, 0, 0, 0, 585, 585, 0, 0, 585, 0,
	2223, 0, 0, 0, 0, 0, 0, 585, 0, 0,
	2028, 2028, 636, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2822, 2823, 0, 0, 3057, 3058, 3059,
	3060, 0, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1336, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 769, 0, 636, 773, 0, 770,
	771, 0, 0, 0, 772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 3133, 0, 3135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 636, 0,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2028, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 0, 0, 0, 0, 3241, 0, 0, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 0, 0, 0, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3291,
	0, 0, 0, 3291, 3291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 585,
	0, 0, 0, 0, 0, 0, 2500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2028, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 585, 585, 585, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2028, 0, 585, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 904, 0, 0, 0, 3368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3372, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1112, 1112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 904, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 0, 0,
	0, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1338,
	0, 2911, 0, 3423, 1338, 585, 585, 585, 585, 585,
	0, 0, 0, 0, 0, 0, 0, 2718, 0, 0,
	0, 0, 585, 0, 0, 1693, 0, 585, 0, 0,
	585, 2729, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	813, 0, 0, 0, 801, 814, 815, 816, 817, 802,
	805, 0, 0, 0, 803, 804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 0, 0, 810, 818,
	819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2819, 2820, 0, 0, 0,
	0, 0, 0, 585, 0, 0, 585, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2822, 2823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 0, 0, 585, 585, 585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1338, 379, 0, 0, 0, 1246, 1231, 495, 0,
	1174, 1249, 1143, 1162, 1259, 1165, 1168, 1210, 1122, 1188,
	398, 1159, 1115, 1147, 1117, 1154, 1118, 1145, 1176, 257,
	1142, 1233, 1192, 1248, 350, 254, 1124, 1148, 412, 1164,
	196, 1212, 465, 241, 360, 357, 503, 269, 260, 256,
	239, 303, 368, 410, 485, 404, 1255, 354, 1198, 0,
	475, 383, 0, 1693, 0, 1178, 1237, 1186, 1224, 1173,
	1211, 1132, 1197, 1250, 1160, 1207, 1251, 309, 237, 311,
	195, 395, 476, 273, 0, 0, 0, 0, 3395, 626,
	0, 0, 0, 0, 3396, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 1156, 1204, 1245, 1157, 1206,
	252, 307, 259, 251, 500, 1256, 1236, 1121, 1185, 1244,
	0, 0, 219, 1247, 1180, 0, 1209, 0, 1262, 1116,
	1200, 0, 1119, 1123, 1258, 1240, 1151, 262, 0, 0,
	0, 0, 0, 0, 0, 1177, 1187, 1221, 1225, 1171,
	0, 0, 0, 0, 0, 0, 0, 1149, 0, 1196,
	0, 0, 0, 1128, 1120, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1175, 0, 0,
	0, 0, 1131, 0, 1150, 1222, 0, 1114, 284, 1125,
	384, 244, 0, 1229, 1239, 1172, 540, 1243, 1170, 1169,
	1216, 1129, 1235, 1163, 349, 1127, 316, 191, 215, 0,
	1161, 394, 440, 452, 1234, 1146, 1155, 242, 1153, 450,
	408, 519, 223, 271, 437, 414, 448, 421, 274, 1195,
	1214, 449, 355, 505, 431, 516, 541, 542, 250, 388,
	528, 489, 536, 557, 216, 247, 402, 482, 522, 472,
	380, 501, 502, 315, 471, 282, 194, 353, 547, 214,
	458, 232, 221, 507, 525, 276, 435, 203, 484, 514,
	229, 462, 0, 0, 559, 205, 512, 481, 376, 312,
	313, 204, 0, 436, 255, 280, 245, 397, 509, 510,
	243, 560, 218, 535, 210, 1126, 534, 390, 504, 513,
	377, 366, 209, 511, 375, 365, 320, 339, 340, 267,
	293, 428, 358, 429, 292, 294, 386, 385, 387, 198,
	523, 0, 199, 0, 477, 524, 561, 224, 225, 227,
	1141, 266, 270, 278, 281, 289, 290, 299, 351, 401,
	427, 423, 432, 1230, 499, 517, 529, 539, 545, 546,
	548, 549, 550, 551, 552, 554, 553, 389, 297, 473,
	319, 356, 1219, 1261, 407, 451, 230, 521, 474, 1136,
	1140, 1134, 1201, 1135, 1190, 1191, 1137, 1252, 1253, 1254,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 0, 1223,
	1130, 0, 1138, 1139, 1232, 1241, 1242, 580, 367, 464,
	518, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	373, 381, 498, 298, 206, 207, 208, 491, 492, 493,
	494, 532, 533, 537, 441, 442, 443, 444, 279, 527,
	295, 447, 446, 317, 318, 362, 430, 1194, 190, 211,
	352, 1257, 433, 275, 558, 531, 526, 197, 213, 1133,
	249, 1144, 1152, 0, 1158, 1166, 1167, 1179, 1181, 1182,
	1183, 1184, 1202, 1203, 1205, 1213, 1215, 1218, 1220, 1227,
	1238, 1260, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 363,
	369, 370, 371, 372, 391, 392, 393, 396, 399, 400,
	403, 405, 406, 409, 413, 417, 418, 419, 420, 422,
	424, 434, 439, 453, 454, 455, 456, 457, 460, 461,
	466, 467, 468, 469, 470, 478, 479, 483, 506, 508,
	520, 538, 543, 459, 287, 288, 425, 426, 300, 301,
	555, 556, 286, 515, 544, 0, 0, 361, 1193, 1199,
	364, 268, 291, 306, 1208, 530, 480, 217, 445, 277,
	240, 1226, 1228, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 1189, 1217, 359,
	496, 497, 302, 379, 0, 0, 0, 1246, 1231, 495,
	0, 1174, 1249, 1143, 1162, 1259, 1165, 1168, 1210, 1122,
	1188, 398, 1159, 1115, 1147, 1117, 1154, 1118, 1145, 1176,
	257, 1142, 1233, 1192, 1248, 350, 254, 1124, 1148, 412,
	1164, 196, 1212, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 1255, 354, 1198,
	0, 475, 383, 0, 0, 0, 1178, 1237, 1186, 1224,
	1173, 1211, 1132, 1197, 1250, 1160, 1207, 1251, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 1156, 1204, 1245, 1157,
	1206, 252, 307, 259, 251, 500, 1256, 1236, 1121, 1185,
	1244, 0, 0, 219, 1247, 1180, 0, 1209, 0, 1262,
	1116, 1200, 0, 1119, 1123, 1258, 1240, 1151, 262, 0,
	0, 0, 0, 0, 0, 0, 1177, 1187, 1221, 1225,
	1171, 0, 0, 0, 0, 0, 2730, 0, 1149, 0,
	1196, 0, 0, 0, 1128, 1120, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1175, 0,
	0, 0, 0, 1131, 0, 1150, 1222, 0, 1114, 284,
	1125, 384, 244, 0, 1229, 1239, 1172, 540, 1243, 1170,
	1169, 1216, 1129, 1235, 1163, 349, 1127, 316, 191, 215,
	0, 1161, 394, 440, 452, 1234, 1146, 1155, 242, 1153,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	1195, 1214, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 1126, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 1141, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 1230, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 1219, 1261, 407, 451, 230, 521, 474,
	1136, 1140, 1134, 1201, 1135, 1190, 1191, 1137, 1252, 1253,
	1254, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	1223, 1130, 0, 1138, 1139, 1232, 1241, 1242, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 1194, 190,
	211, 352, 1257, 433, 275, 558, 531, 526, 197, 213,
	1133, 249, 1144, 1152, 0, 1158, 1166, 1167, 1179, 1181,
	1182, 1183, 1184, 1202, 1203, 1205, 1213, 1215, 1218, 1220,
	1227, 1238, 1260, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 1193,
	1199, 364, 268, 291, 306, 1208, 530, 480, 217, 445,
	277, 240, 1226, 1228, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 1189, 1217,
	359, 496, 497, 302, 379, 0, 0, 0, 1246, 1231,
	495, 0, 1174, 1249, 1143, 1162, 1259, 1165, 1168, 1210,
	1122, 1188, 398, 1159, 1115, 1147, 1117, 1154, 1118, 1145,
	1176, 257, 1142, 1233, 1192, 1248, 350, 254, 1124, 1148,
	412, 1164, 196, 1212, 465, 241, 360, 357, 503, 269,
	260, 256, 239, 303, 368, 410, 485, 404, 1255, 354,
	1198, 0, 475, 383, 0, 0, 0, 1178, 1237, 1186,
	1224, 1173, 1211, 1132, 1197, 1250, 1160, 1207, 1251, 309,
	237, 311, 195, 395, 476, 273, 0, 0, 0, 0,
	0, 626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 1156, 1204, 1245,
	1157, 1206, 252, 307, 259, 251, 500, 1256, 1236, 1121,
	1185, 1244, 0, 0, 219, 1247, 1180, 0, 1209, 0,
	1262, 1116, 1200, 0, 1119, 1123, 1258, 1240, 1151, 262,
	0, 0, 0, 0, 0, 0, 0, 1177, 1187, 1221,
	1225, 1171, 0, 0, 0, 0, 0, 2688, 0, 1149,
	0, 1196, 0, 0, 0, 1128, 1120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1175,
	0, 0, 0, 0, 1131, 0, 1150, 1222, 0, 1114,
	284, 1125, 384, 244, 0, 1229, 1239, 1172, 540, 1243,
	1170, 1169, 1216, 1129, 1235, 1163, 349, 1127, 316, 191,
	215, 0, 1161, 394, 440, 452, 1234, 1146, 1155, 242,
	1153, 450, 408, 519, 223, 271, 437, 414, 448, 421,
	274, 1195, 1214, 449, 355, 505, 431, 516, 541, 542,
	250, 388, 528, 489, 536, 557, 216, 247, 402, 482,
	522, 472, 380, 501, 502, 315, 471, 282, 194, 353,
	547, 214, 458, 232, 221, 507, 525, 276, 435, 203,
	484, 514, 229, 462, 0, 0, 559, 205, 512, 481,
	376, 312, 313, 204, 0, 436, 255, 280, 245, 397,
	509, 510, 243, 560, 218, 535, 210, 1126, 534, 390,
	504, 513, 377, 366, 209, 511, 375, 365, 320, 339,
	340, 267, 293, 428, 358, 429, 292, 294, 386, 385,
	387, 198, 523, 0, 199, 0, 477, 524, 561, 224,
	225, 227, 1141, 266, 270, 278, 281, 289, 290, 299,
	351, 401, 427, 423, 432, 1230, 499, 517, 529, 539,
	545, 546, 548, 549, 550, 551, 552, 554, 553, 389,
	297, 473, 319, 356, 1219, 1261, 407, 451, 230, 521,
	474, 1136, 1140, 1134, 1201, 1135, 1190, 1191, 1137, 1252,
	1253, 1254, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	0, 1223, 1130, 0, 1138, 1139, 1232, 1241, 1242, 580,
	367, 464, 518, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 373, 381, 498, 298, 206, 207, 208, 491,
	492, 493, 494, 532, 533, 537, 441, 442, 443, 444,
	279, 527, 295, 447, 446, 317, 318, 362, 430, 1194,
	190, 211, 352, 1257, 433, 275, 558, 531, 526, 197,
	213, 1133, 249, 1144, 1152, 0, 1158, 1166, 1167, 1179,
	1181, 1182, 1183, 1184, 1202, 1203, 1205, 1213, 1215, 1218,
	1220, 1227, 1238, 1260, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 363, 369, 370, 371, 372, 391, 392, 393, 396,
	399, 400, 403, 405, 406, 409, 413, 417, 418, 419,
	420, 422, 424, 434, 439, 453, 454, 455, 456, 457,
	460, 461, 466, 467, 468, 469, 470, 478, 479, 483,
	506, 508, 520, 538, 543, 459, 287, 288, 425, 426,
	300, 301, 555, 556, 286, 515, 544, 0, 0, 361,
	1193, 1199, 364, 268, 291, 306, 1208, 530, 480, 217,
	445, 277, 240, 1226, 1228, 202, 236, 220, 246, 261,
	264, 310, 374, 382, 411, 416, 283, 258, 234, 438,
	231, 463, 486, 487, 488, 490, 378, 253, 415, 1189,
	1217, 359, 496, 497, 302, 379, 0, 0, 0, 1246,
	1231, 495, 0, 1174, 1249, 1143, 1162, 1259, 1165, 1168,
	1210, 1122, 1188, 398, 1159, 1115, 1147, 1117, 1154, 1118,
	1145, 1176, 257, 1142, 1233, 1192, 1248, 350, 254, 1124,
	1148, 412, 1164, 196, 1212, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 1255,
	354, 1198, 0, 475, 383, 0, 0, 0, 1178, 1237,
	1186, 1224, 1173, 1211, 1132, 1197, 1250, 1160, 1207, 1251,
	309, 237, 311, 195, 395, 476, 273, 0, 0, 0,
	0, 0, 797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 1156, 1204,
	1245, 1157, 1206, 252, 307, 259, 251, 500, 1256, 1236,
	1121, 1185, 1244, 0, 0, 219, 1247, 1180, 0, 1209,
	0, 1262, 1116, 1200, 0, 1119, 1123, 1258, 1240, 1151,
	262, 0, 0, 0, 0, 0, 0, 0, 1177, 1187,
	1221, 1225, 1171, 0, 0, 0, 0, 0, 2044, 0,
	1149, 0, 1196, 0, 0, 0, 1128, 1120, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1175, 0, 0, 0, 0, 1131, 0, 1150, 1222, 0,
	1114, 284, 1125, 384, 244, 0, 1229, 1239, 1172, 540,
	1243, 1170, 1169, 1216, 1129, 1235, 1163, 349, 1127, 316,
	191, 215, 0, 1161, 394, 440, 452, 1234, 1146, 1155,
	242, 1153, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 1195, 1214, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 232, 221, 507, 525, 276, 435,
	203, 484, 514, 229, 462, 0, 0, 559, 205, 512,
	481, 376, 312, 313, 204, 0, 436, 255, 280, 245,
	397, 509, 510, 243, 560, 218, 535, 210, 1126, 534,
	390, 504, 513, 377, 366, 209, 511, 375, 365, 320,
	339, 340, 267, 293, 428, 358, 429, 292, 294, 386,
	385, 387, 198, 523, 0, 199, 0, 477, 524, 561,
	224, 225, 227, 1141, 266, 270, 278, 281, 289, 290,
	299, 351, 401, 427, 423, 432, 1230, 499, 517, 529,
	539, 545, 546, 548, 549, 550, 551, 552, 554, 553,
	389, 297, 473, 319, 356, 1219, 1261, 407, 451, 230,
	521, 474, 1136, 1140, 1134, 1201, 1135, 1190, 1191, 1137,
	1252, 1253, 1254, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 0, 1223, 1130, 0, 1138, 1139, 1232, 1241, 1242,
	580, 367, 464, 518, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 373, 381, 498, 298, 206, 207, 208,
	491, 492, 493, 494, 532, 533, 537, 441, 442, 443,
	444, 279, 527, 295, 447, 446, 317, 318, 362, 430,
	1194, 190, 211, 352, 1257, 433, 275, 558, 531, 526,
	197, 213, 1133, 249, 1144, 1152, 0, 1158, 1166, 1167,
	1179, 1181, 1182, 1183, 1184, 1202, 1203, 1205, 1213, 1215,
	1218, 1220, 1227, 1238, 1260, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 363, 369, 370, 371, 372, 391, 392, 393,
	396, 399, 400, 403, 405, 406, 409, 413, 417, 418,
	419, 420, 422, 424, 434, 439, 453, 454, 455, 456,
	457, 460, 461, 466, 467, 468, 469, 470, 478, 479,
	483, 506, 508, 520, 538, 543, 459, 287, 288, 425,
	426, 300, 301, 555, 556, 286, 515, 544, 0, 0,
	361, 1193, 1199, 364, 268, 291, 306, 1208, 530, 480,
	217, 445, 277, 240, 1226, 1228, 202, 236, 220, 246,
	261, 264, 310, 374, 382, 411, 416, 283, 258, 234,
	438, 231, 463, 486, 487, 488, 490, 378, 253, 415,
	1189, 1217, 359, 496, 497, 302, 379, 0, 0, 0,
	1246, 1231, 495, 0, 1174, 1249, 1143, 1162, 1259, 1165,
	1168, 1210, 1122, 1188, 398, 1159, 1115, 1147, 1117, 1154,
	1118, 1145, 1176, 257, 1142, 1233, 1192, 1248, 350, 254,
	1124, 1148, 412, 1164, 196, 1212, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	1255, 354, 1198, 0, 475, 383, 0, 0, 0, 1178,
	1237, 1186, 1224, 1173, 1211, 1132, 1197, 1250, 1160, 1207,
	1251, 309, 237, 311, 195, 395, 476, 273, 0, 89,
	0, 0, 0, 626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 1156,
	1204, 1245, 1157, 1206, 252, 307, 259, 251, 500, 1256,
	1236, 1121, 1185, 1244, 0, 0, 219, 1247, 1180, 0,
	1209, 0, 1262, 1116, 1200, 0, 1119, 1123, 1258, 1240,
	1151, 262, 0, 0, 0, 0, 0, 0, 0, 1177,
	1187, 1221, 1225, 1171, 0, 0, 0, 0, 0, 0,
	0, 1149, 0, 1196, 0, 0, 0, 1128, 1120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1175, 0, 0, 0, 0, 1131, 0, 1150, 1222,
	0, 1114, 284, 1125, 384, 244, 0, 1229, 1239, 1172,
	540, 1243, 1170, 1169, 1216, 1129, 1235, 1163, 349, 1127,
	316, 191, 215, 0, 1161, 394, 440, 452, 1234, 1146,
	1155, 242, 1153, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 1195, 1214, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 1126,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 1141, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 1230, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 1219, 1261, 407, 451,
	230, 521, 474, 1136, 1140, 1134, 1201, 1135, 1190, 1191,
	1137, 1252, 1253, 1254, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 1223, 1130, 0, 1138, 1139, 1232, 1241,
	1242, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 1194, 190, 211, 352, 1257, 433, 275, 558, 531,
	526, 197, 213, 1133, 249, 1144, 1152, 0, 1158, 1166,
	1167, 1179, 1181, 1182, 1183, 1184, 1202, 1203, 1205, 1213,
	1215, 1218, 1220, 1227, 1238, 1260, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 1193, 1199, 364, 268, 291, 306, 1208, 530,
	480, 217, 445, 277, 240, 1226, 1228, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 1189, 1217, 359, 496, 497, 302, 379, 0, 0,
	0, 1246, 1231, 495, 0, 1174, 1249, 1143, 1162, 1259,
	1165, 1168, 1210, 1122, 1188, 398, 1159, 1115, 1147, 1117,
	1154, 1118, 1145, 1176, 257, 1142, 1233, 1192, 1248, 350,
	254, 1124, 1148, 412, 1164, 196, 1212, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 1255, 354, 1198, 0, 475, 383, 0, 0, 0,
	1178, 1237, 1186, 1224, 1173, 1211, 1132, 1197, 1250, 1160,
	1207, 1251, 309, 237, 311, 195, 395, 476, 273, 0,
	0, 0, 0, 0, 626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	1156, 1204, 1245, 1157, 1206, 252, 307, 259, 251, 500,
	1256, 1236, 1121, 1185, 1244, 0, 0, 219, 1247, 1180,
	0, 1209, 0, 1262, 1116, 1200, 0, 1119, 1123, 1258,
	1240, 1151, 262, 0, 0, 0, 0, 0, 0, 0,
	1177, 1187, 1221, 1225, 1171, 0, 0, 0, 0, 0,
	0, 0, 1149, 0, 1196, 0, 0, 0, 1128, 1120,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1175, 0, 0, 0, 0, 1131, 0, 1150,
	1222, 0, 1114, 284, 1125, 384, 244, 0, 1229, 1239,
	1172, 540, 1243, 1170, 1169, 1216, 1129, 1235, 1163, 349,
	1127, 316, 191, 215, 0, 1161, 394, 440, 452, 1234,
	1146, 1155, 242, 1153, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 1195, 1214, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 232, 221, 507, 525,
	276, 435, 203, 484, 514, 229, 462, 0, 0, 559,
	205, 512, 481, 376, 312, 313, 204, 0, 436, 255,
	280, 245, 397, 509, 510, 243, 560, 218, 535, 210,
	1126, 534, 390, 504, 513, 377, 366, 209, 511, 375,
	365, 320, 339, 340, 267, 293, 428, 358, 429, 292,
	294, 386, 385, 387, 198, 523, 0, 199, 0, 477,
	524, 561, 224, 225, 227, 1141, 266, 270, 278, 281,
	289, 290, 299, 351, 401, 427, 423, 432, 1230, 499,
	517, 529, 539, 545, 546, 548, 549, 550, 551, 552,
	554, 553, 389, 297, 473, 319, 356, 1219, 1261, 407,
	451, 230, 521, 474, 1136, 1140, 1134, 1201, 1135, 1190,
	1191, 1137, 1252, 1253, 1254, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 0, 1223, 1130, 0, 1138, 1139, 1232,
	1241, 1242, 580, 367, 464, 518, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 373, 381, 498, 298, 206,
	207, 208, 491, 492, 493, 494, 532, 533, 537, 441,
	442, 443, 444, 279, 527, 295, 447, 446, 317, 318,
	362, 430, 1194, 190, 211, 352, 1257, 433, 275, 558,
	531, 526, 197, 213, 1133, 249, 1144, 1152, 0, 1158,
	1166, 1167, 1179, 1181, 1182, 1183, 1184, 1202, 1203, 1205,
	1213, 1215, 1218, 1220, 1227, 1238, 1260, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 363, 369, 370, 371, 372, 391,
	392, 393, 396, 399, 400, 403, 405, 406, 409, 413,
	417, 418, 419, 420, 422, 424, 434, 439, 453, 454,
	455, 456, 457, 460, 461, 466, 467, 468, 469, 470,
	478, 479, 483, 506, 508, 520, 538, 543, 459, 287,
	288, 425, 426, 300, 301, 555, 556, 286, 515, 544,
	0, 0, 361, 1193, 1199, 364, 268, 291, 306, 1208,
	530, 480, 217, 445, 277, 240, 1226, 1228, 202, 236,
	220, 246, 261, 264, 310, 374, 382, 411, 416, 283,
	258, 234, 438, 231, 463, 486, 487, 488, 490, 378,
	253, 415, 1189, 1217, 359, 496, 497, 302, 379, 0,
	0, 0, 1246, 1231, 495, 0, 1174, 1249, 1143, 1162,
	1259, 1165, 1168, 1210, 1122, 1188, 398, 1159, 1115, 1147,
	1117, 1154, 1118, 1145, 1176, 257, 1142, 1233, 1192, 1248,
	350, 254, 1124, 1148, 412, 1164, 196, 1212, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 1255, 354, 1198, 0, 475, 383, 0, 0,
	0, 1178, 1237, 1186, 1224, 1173, 1211, 1132, 1197, 1250,
	1160, 1207, 1251, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 0, 797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 1156, 1204, 1245, 1157, 1206, 252, 307, 259, 251,
	500, 1256, 1236, 1121, 1185, 1244, 0, 0, 219, 1247,
	1180, 0, 1209, 0, 1262, 1116, 1200, 0, 1119, 1123,
	1258, 1240, 1151, 262, 0, 0, 0, 0, 0, 0,
	0, 1177, 1187, 1221, 1225, 1171, 0, 0, 0, 0,
	0, 0, 0, 1149, 0, 1196, 0, 0, 0, 1128,
	1120, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1175, 0, 0, 0, 0, 1131, 0,
	1150, 1222, 0, 1114, 284, 1125, 384, 244, 0, 1229,
	1239, 1172, 540, 1243, 1170, 1169, 1216, 1129, 1235, 1163,
	349, 1127, 316, 191, 215, 0, 1161, 394, 440, 452,
	1234, 1146, 1155, 242, 1153, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 1195, 1214, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 1126, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 1141, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 1230,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 1219, 1261,
	407, 451, 230, 521, 474, 1136, 1140, 1134, 1201, 1135,
	1190, 1191, 1137, 1252, 1253, 1254, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 1223, 1130, 0, 1138, 1139,
	1232, 1241, 1242, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 1194, 190, 211, 352, 1257, 433, 275,
	558, 531, 526, 197, 213, 1133, 249, 1144, 1152, 0,
	1158, 1166, 1167, 1179, 1181, 1182, 1183, 1184, 1202, 1203,
	1205, 1213, 1215, 1218, 1220, 1227, 1238, 1260, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 1193, 1199, 364, 268, 291, 306,
	1208, 530, 480, 217, 445, 277, 240, 1226, 1228, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 1189, 1217, 359, 496, 497, 302, 379,
	0, 0, 0, 1246, 1231, 495, 0, 1174, 1249, 1143,
	1162, 1259, 1165, 1168, 1210, 1122, 1188, 398, 1159, 1115,
	1147, 1117, 1154, 1118, 1145, 1176, 257, 1142, 1233, 1192,
	1248, 350, 254, 1124, 1148, 412, 1164, 196, 1212, 465,
	241, 360, 357, 503, 269, 260, 256, 239, 303, 368,
	410, 485, 404, 1255, 354, 1198, 0, 475, 383, 0,
	0, 0, 1178, 1237, 1186, 1224, 1173, 1211, 1132, 1197,
	1250, 1160, 1207, 1251, 309, 237, 311, 195, 395, 476,
	273, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 1156, 1204, 1245, 1157, 1206, 252, 307, 259,
	251, 500, 1256, 1236, 1121, 1185, 1244, 0, 0, 219,
	1247, 1180, 0, 1209, 0, 1262, 1116, 1200, 0, 1119,
	1123, 1258, 1240, 1151, 262, 0, 0, 0, 0, 0,
	0, 0, 1177, 1187, 1221, 1225, 1171, 0, 0, 0,
	0, 0, 0, 0, 1149, 0, 1196, 0, 0, 0,
	1128, 1120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1175, 0, 0, 0, 0, 1131,
	0, 1150, 1222, 0, 1114, 284, 1125, 384, 244, 0,
	1229, 1239, 1172, 540, 1243, 1170, 1169, 1216, 1129, 1235,
	1163, 349, 1127, 316, 191, 215, 0, 1161, 394, 440,
	452, 1234, 1146, 1155, 242, 1153, 450, 408, 519, 223,
	271, 437, 414, 448, 421, 274, 1195, 1214, 449, 355,
	505, 431, 516, 541, 542, 250, 388, 528, 489, 536,
	557, 216, 247, 402, 482, 522, 472, 380, 501, 502,
	315, 471, 282, 194, 353, 547, 214, 458, 232, 221,
	507, 525, 276, 435, 203, 484, 514, 229, 462, 0,
	0, 559, 205, 512, 481, 376, 312, 313, 204, 0,
	436, 255, 280, 245, 397, 509, 510, 243, 560, 218,
	535, 210, 1126, 534, 390, 504, 513, 377, 366, 209,
	511, 375, 365, 320, 339, 340, 267, 293, 428, 358,
	429, 292, 294, 386, 385, 387, 198, 523, 0, 199,
	0, 477, 524, 561, 224, 225, 227, 1141, 266, 270,
	278, 281, 289, 290, 299, 351, 401, 427, 423, 432,
	1230, 499, 517, 529, 539, 545, 546, 548, 549, 550,
	551, 552, 554, 553, 389, 297, 473, 319, 356, 1219,
	1261, 407, 451, 230, 521, 474, 1136, 1140, 1134, 1201,
	1135, 1190, 1191, 1137, 1252, 1253, 1254, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 0, 1223, 1130, 0, 1138,
	1139, 1232, 1241, 1242, 580, 367, 464, 518, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 373, 381, 498,
	298, 206, 207, 208, 491, 492, 493, 494, 532, 533,
	537, 441, 442, 443, 444, 279, 527, 295, 447, 446,
	317, 318, 362, 430, 1194, 190, 211, 352, 1257, 433,
	275, 558, 531, 526, 197, 213, 1133, 249, 1144, 1152,
	0, 1158, 1166, 1167, 1179, 1181, 1182, 1183, 1184, 1202,
	1203, 1205, 1213, 1215, 1218, 1220, 1227, 1238, 1260, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 363, 369, 370, 371,
	372, 391, 392, 393, 396, 399, 400, 403, 405, 406,
	409, 413, 417, 418, 419, 420, 422, 424, 434, 439,
	453, 454, 455, 456, 457, 460, 461, 466, 467, 468,
	469, 470, 478, 479, 483, 506, 508, 520, 538, 543,
	459, 287, 288, 425, 426, 300, 301, 555, 556, 286,
	515, 544, 0, 0, 361, 1193, 1199, 364, 268, 291,
	306, 1208, 530, 480, 217, 445, 277, 240, 1226, 1228,
	202, 236, 220, 246, 261, 264, 310, 374, 382, 411,
	416, 283, 258, 234, 438, 231, 463, 486, 487, 488,
	490, 378, 253, 415, 1189, 1217, 359, 496, 497, 302,
	379, 0, 0, 0, 0, 0, 495, 0, 678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 0,
	0, 0, 0, 665, 0, 0, 0, 257, 670, 0,
	0, 0, 350, 254, 0, 0, 412, 0, 196, 0,
	465, 241, 360, 357, 503, 269, 260, 256, 239, 303,
	368, 410, 485, 404, 677, 354, 0, 0, 475, 383,
	0, 0, 0, 0, 0, 673, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 237, 311, 195, 395,
	476, 273, 0, 89, 0, 0, 813, 797, 765, 766,
	801, 814, 815, 816, 817, 802, 805, 0, 0, 228,
	803, 804, 235, 705, 707, 706, 724, 725, 726, 727,
	728, 729, 730, 703, 810, 818, 819, 0, 252, 307,
	259, 251, 500, 0, 0, 1923, 1924, 1925, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 647, 662,
	0, 676, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 659, 660, 0, 0, 0, 0, 759, 0, 661,
	0, 0, 669, 820, 821, 822, 823, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 672, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 384, 244,
	0, 758, 0, 0, 540, 0, 0, 756, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 394,
	440, 452, 0, 0, 0, 807, 0, 450, 408, 519,
	223, 271, 437, 414, 448, 421, 274, 0, 0, 449,
	355, 505, 431, 516, 541, 542, 250, 388, 528, 489,
	536, 557, 216, 247, 402, 482, 522, 472, 380, 501,
	502, 315, 471, 282, 194, 353, 547, 214, 458, 232,
	221, 507, 525, 276, 435, 203, 484, 514, 229, 462,
	0, 0, 559, 205, 512, 481, 376, 312, 313, 204,
	0, 436, 255, 280, 245, 397, 808, 809, 243, 560,
	711, 535, 210, 0, 534, 390, 504, 513, 377, 366,
	209, 511, 375, 365, 320, 719, 720, 267, 293, 428,
	358, 429, 292, 294, 386, 385, 387, 198, 523, 0,
	199, 0, 477, 524, 561, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 401, 427, 423,
	432, 0, 499, 517, 529, 539, 545, 546, 548, 549,
	550, 551, 552, 554, 553, 389, 297, 473, 319, 356,
	0, 0, 407, 451, 230, 521, 474, 769, 757, 682,
	773, 684, 770, 771, 679, 680, 683, 772, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 0, 760, 668, 667,
	0, 675, 0, 701, 702, 704, 708, 709, 710, 721,
	722, 723, 731, 733, 734, 732, 735, 736, 737, 740,
	741, 742, 743, 738, 739, 744, 685, 689, 686, 687,
	688, 700, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 783, 784, 785, 786, 787, 788, 714, 718,
	717, 715, 716, 712, 713, 666, 190, 211, 352, 0,
	433, 275, 558, 531, 526, 197, 213, 774, 249, 775,
	0, 0, 779, 0, 0, 0, 781, 780, 0, 782,
	748, 747, 0, 0, 776, 777, 0, 778, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 363, 369, 370,
	371, 372, 391, 392, 393, 396, 399, 400, 403, 405,
	406, 409, 413, 417, 418, 419, 420, 422, 424, 434,
	439, 453, 454, 455, 456, 457, 460, 461, 466, 467,
	468, 469, 470, 478, 479, 483, 506, 508, 520, 538,
	543, 459, 789, 790, 791, 792, 793, 794, 795, 796,
	286, 515, 544, 0, 0, 361, 0, 0, 364, 268,
	291, 306, 0, 530, 480, 217, 445, 277, 240, 812,
	0, 202, 236, 220, 246, 261, 264, 310, 374, 382,
	411, 416, 283, 258, 234, 438, 231, 463, 486, 487,
	488, 490, 378, 253, 415, 379, 0, 359, 496, 497,
	302, 495, 0, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 665, 0,
	0, 0, 257, 670, 0, 0, 0, 350, 254, 0,
	0, 412, 0, 196, 0, 465, 241, 360, 357, 503,
	269, 260, 256, 239, 303, 368, 410, 485, 404, 677,
	354, 0, 0, 475, 383, 0, 0, 0, 0, 0,
	673, 674, 0, 0, 0, 0, 0, 0, 2072, 0,
	309, 237, 311, 195, 395, 476, 273, 0, 89, 0,
	0, 813, 797, 765, 766, 801, 814, 815, 816, 817,
	802, 805, 0, 0, 228, 803, 804, 235, 705, 707,
	706, 724, 725, 726, 727, 728, 729, 730, 703, 810,
	818, 819, 2073, 252, 307, 259, 251, 500, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 647, 662, 0, 676, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 659, 660, 0, 0,
	0, 0, 759, 0, 661, 0, 0, 669, 820, 821,
	822, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	672, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 384, 244, 0, 758, 0, 0, 540,
	0, 0, 756, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 394, 440, 452, 0, 0, 0,
	807, 0, 450, 408, 519, 223, 271, 437, 414, 448,
	421, 274, 0, 0, 449, 355, 505, 431, 516, 541,
	542, 250, 388, 528, 489, 536, 557, 216, 247, 402,
	482, 522, 472, 380, 501, 502, 315, 471, 282, 194,
	353, 547, 214, 458, 232, 221, 507, 525, 276, 435,
	203, 484, 514, 229, 462, 0, 0, 559, 205, 512,
	481, 376, 312, 313, 204, 0, 436, 255, 280, 245,
	397, 808, 809, 243, 560, 711, 535, 210, 0, 534,
	390, 504, 513, 377, 366, 209, 511, 375, 365, 320,
	719, 720, 267, 293, 428, 358, 429, 292, 294, 386,
	385, 387, 198, 523, 0, 199, 0, 477, 524, 561,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 401, 427, 423, 432, 0, 499, 517, 529,
	539, 545, 546, 548, 549, 550, 551, 552, 554, 553,
	389, 297, 473, 319, 356, 0, 0, 407, 451, 230,
	521, 474, 769, 757, 682, 773, 684, 770, 771, 679,
	680, 683, 772, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 0, 760, 668, 667, 0, 675, 0, 701, 702,
	704, 708, 709, 710, 721, 722, 723, 731, 733, 734,
	732, 735, 736, 737, 740, 741, 742, 743, 738, 739,
	744, 685, 689, 686, 687, 688, 700, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 783, 784, 785,
	786, 787, 788, 714, 718, 717, 715, 716, 712, 713,
	666, 190, 211, 352, 0, 433, 275, 558, 531, 526,
	197, 213, 774, 249, 775, 0, 0, 779, 0, 0,
	0, 781, 780, 0, 782, 748, 747, 0, 0, 776,
	777, 0, 778, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 363, 369, 370, 371, 372, 391, 392, 393,
	396, 399, 400, 403, 405, 406, 409, 413, 417, 418,
	419, 420, 422, 424, 434, 439, 453, 454, 455, 456,
	457, 460, 461, 466, 467, 468, 469, 470, 478, 479,
	483, 506, 508, 520, 538, 543, 459, 789, 790, 791,
	792, 793, 794, 795, 796, 286, 515, 544, 0, 0,
	361, 0, 0, 364, 268, 291, 306, 0, 530, 480,
	217, 445, 277, 240, 812, 0, 202, 236, 220, 246,
	261, 264, 310, 374, 382, 411, 416, 283, 258, 234,
	438, 231, 463, 486, 487, 488, 490, 378, 253, 415,
	0, 379, 359, 496, 497, 302, 80, 495, 0, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 665, 0, 0, 0, 257, 670,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 677, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 673, 674, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 89, 0, 0, 813, 797, 765,
	766, 801, 814, 815, 816, 817, 802, 805, 0, 0,
	228, 803, 804, 235, 705, 707, 706, 724, 725, 726,
	727, 728, 729, 730, 703, 810, 818, 819, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 647,
	662, 0, 676, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 659, 660, 0, 0, 0, 0, 759, 0,
	661, 0, 0, 669, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 672, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 758, 0, 0, 540, 0, 0, 756, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 807, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 808, 809, 243,
	560, 711, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 719, 720, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 769, 757,
	682, 773, 684, 770, 771, 679, 680, 683, 772, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 760, 668,
	667, 0, 675, 0, 701, 702, 704, 708, 709, 710,
	721, 722, 723, 731, 733, 734, 732, 735, 736, 737,
	740, 741, 742, 743, 738, 739, 744, 685, 689, 686,
	687, 688, 700, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 783, 784, 785, 786, 787, 788, 714,
	718, 717, 715, 716, 712, 713, 666, 190, 211, 352,
	88, 433, 275, 558, 531, 526, 197, 213, 774, 249,
	775, 0, 0, 779, 0, 0, 0, 781, 780, 0,
	782, 748, 747, 0, 0, 776, 777, 0, 778, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 789, 790, 791, 792, 793, 794, 795,
	796, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	812, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 379, 0, 359, 496,
	497, 302, 495, 0, 678, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 665,
	0, 0, 0, 257, 670, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	677, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 89,
	0, 0, 813, 797, 765, 766, 801, 814, 815, 816,
	817, 802, 805, 0, 0, 228, 803, 804, 235, 705,
	707, 706, 724, 725, 726, 727, 728, 729, 730, 703,
	810, 818, 819, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 647, 662, 0, 676, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 659, 660, 0,
	0, 0, 0, 759, 0, 661, 0, 0, 669, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 672, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 758, 0, 0,
	540, 0, 0, 756, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 807, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 3382, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 808, 809, 243, 560, 711, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 719, 720, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 769, 757, 682, 773, 684, 770, 771,
	679, 680, 683, 772, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 760, 668, 667, 0, 675, 0, 701,
	702, 704, 708, 709, 710, 721, 722, 723, 731, 733,
	734, 732, 735, 736, 737, 740, 741, 742, 743, 738,
	739, 744, 685, 689, 686, 687, 688, 700, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 783, 784,
	785, 786, 787, 788, 714, 718, 717, 715, 716, 712,
	713, 666, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 774, 249, 775, 0, 0, 779, 0,
	0, 0, 781, 780, 0, 782, 748, 747, 0, 0,
	776, 777, 0, 778, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 789, 790,
	791, 792, 793, 794, 795, 796, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 812, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 379, 0, 359, 496, 497, 302, 495, 0, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 665, 0, 0, 0, 257, 670,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 677, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 673, 674, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 89, 0, 1494, 813, 797, 765,
	766, 801, 814, 815, 816, 817, 802, 805, 0, 0,
	228, 803, 804, 235, 705, 707, 706, 724, 725, 726,
	727, 728, 729, 730, 703, 810, 818, 819, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 647,
	662, 0, 676, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 659, 660, 0, 0, 0, 0, 759, 0,
	661, 0, 0, 669, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 672, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 758, 0, 0, 540, 0, 0, 756, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 807, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 808, 809, 243,
	560, 711, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 719, 720, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 769, 757,
	682, 773, 684, 770, 771, 679, 680, 683, 772, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 760, 668,
	667, 0, 675, 0, 701, 702, 704, 708, 709, 710,
	721, 722, 723, 731, 733, 734, 732, 735, 736, 737,
	740, 741, 742, 743, 738, 739, 744, 685, 689, 686,
	687, 688, 700, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 783, 784, 785, 786, 787, 788, 714,
	718, 717, 715, 716, 712, 713, 666, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 774, 249,
	775, 0, 0, 779, 0, 0, 0, 781, 780, 0,
	782, 748, 747, 0, 0, 776, 777, 0, 778, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 789, 790, 791, 792, 793, 794, 795,
	796, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	812, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 379, 0, 359, 496,
	497, 302, 495, 0, 678, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 665,
	0, 0, 0, 257, 670, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	677, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 89,
	0, 0, 813, 797, 765, 766, 801, 814, 815, 816,
	817, 802, 805, 0, 0, 228, 803, 804, 235, 705,
	707, 706, 724, 725, 726, 727, 728, 729, 730, 703,
	810, 818, 819, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 647, 662, 0, 676, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 659, 660, 902,
	0, 0, 0, 759, 0, 661, 0, 0, 669, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 672, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 758, 0, 0,
	540, 0, 0, 756, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 807, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 808, 809, 243, 560, 711, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 719, 720, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 769, 757, 682, 773, 684, 770, 771,
	679, 680, 683, 772, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 760, 668, 667, 0, 675, 0, 701,
	702, 704, 708, 709, 710, 721, 722, 723, 731, 733,
	734, 732, 735, 736, 737, 740, 741, 742, 743, 738,
	739, 744, 685, 689, 686, 687, 688, 700, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 783, 784,
	785, 786, 787, 788, 714, 718, 717, 715, 716, 712,
	713, 666, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 774, 249, 775, 0, 0, 779, 0,
	0, 0, 781, 780, 0, 782, 748, 747, 0, 0,
	776, 777, 0, 778, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 789, 790,
	791, 792, 793, 794, 795, 796, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 812, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 379, 0, 359, 496, 497, 302, 495, 0, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 665, 0, 0, 0, 257, 670,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 677, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 673, 674, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 89, 0, 0, 813, 797, 765,
	766, 801, 814, 815, 816, 817, 802, 805, 0, 0,
	228, 803, 804, 235, 705, 707, 706, 724, 725, 726,
	727, 728, 729, 730, 703, 810, 818, 819, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 647,
	662, 0, 676, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 659, 660, 0, 0, 0, 0, 759, 0,
	661, 0, 0, 669, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 672, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 758, 0, 0, 540, 0, 0, 756, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	394, 440, 452, 0, 0, 0, 807, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 808, 809, 243,
	560, 711, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 719, 720, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 769, 757,
	682, 773, 684, 770, 771, 679, 680, 683, 772, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 760, 668,
	667, 0, 675, 0, 701, 702, 704, 708, 709, 710,
	721, 722, 723, 731, 733, 734, 732, 735, 736, 737,
	740, 741, 742, 743, 738, 739, 744, 685, 689, 686,
	687, 688, 700, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 783, 784, 785, 786, 787, 788, 714,
	718, 717, 715, 716, 712, 713, 666, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 774, 249,
	775, 0, 0, 779, 0, 0, 0, 781, 780, 0,
	782, 748, 747, 0, 0, 776, 777, 0, 778, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 789, 790, 791, 792, 793, 794, 795,
	796, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	812, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 379, 0, 359, 496,
	497, 302, 495, 0, 678, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 665,
	0, 0, 0, 257, 670, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	677, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 673, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 89,
	0, 0, 813, 797, 765, 766, 801, 814, 815, 816,
	817, 802, 805, 0, 0, 228, 803, 804, 235, 705,
	707, 706, 724, 725, 726, 727, 728, 729, 730, 703,
	810, 818, 819, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 662, 0, 676, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 659, 660, 0,
	0, 0, 0, 759, 0, 661, 0, 0, 669, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 672, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 758, 0, 0,
	540, 0, 0, 756, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 807, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 808, 809, 243, 560, 711, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 719, 720, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 769, 757, 682, 773, 684, 770, 771,
	679, 680, 683, 772, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 760, 668, 667, 0, 675, 0, 701,
	702, 704, 708, 709, 710, 721, 722, 723, 731, 733,
	734, 732, 735, 736, 737, 740, 741, 742, 743, 738,
	739, 744, 685, 689, 686, 687, 688, 700, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 783, 784,
	785, 786, 787, 788, 714, 718, 717, 715, 716, 712,
	713, 666, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 774, 249, 775, 0, 0, 779, 0,
	0, 0, 781, 780, 0, 782, 748, 747, 0, 0,
	776, 777, 0, 778, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 789, 790,
	791, 792, 793, 794, 795, 796, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 812, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 379, 0, 359, 496, 497, 302, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 412, 0, 196,
	0, 465, 241, 360, 357, 503, 269, 260, 256, 239,
	303, 368, 410, 485, 404, 0, 354, 0, 0, 475,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	395, 476, 273, 0, 0, 0, 0, 0, 626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 500, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 973, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 384,
	244, 0, 0, 0, 972, 540, 0, 0, 0, 0,
	0, 969, 970, 349, 930, 316, 191, 215, 963, 967,
	394, 440, 452, 0, 0, 0, 242, 0, 450, 408,
	519, 223, 271, 437, 414, 448, 421, 274, 0, 0,
	449, 355, 505, 431, 516, 541, 542, 250, 388, 528,
	489, 536, 557, 216, 247, 402, 482, 522, 472, 380,
	501, 502, 315, 471, 282, 194, 353, 547, 214, 458,
	232, 221, 507, 525, 276, 435, 203, 484, 514, 229,
	462, 0, 0, 559, 205, 512, 481, 376, 312, 313,
	204, 0, 436, 255, 280, 245, 397, 509, 510, 243,
	560, 218, 535, 210, 0, 534, 390, 504, 513, 377,
	366, 209, 511, 375, 365, 320, 339, 340, 267, 293,
	428, 358, 429, 292, 294, 386, 385, 387, 198, 523,
	0, 199, 0, 477, 524, 561, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 401, 427,
	423, 432, 0, 499, 517, 529, 539, 545, 546, 548,
	549, 550, 551, 552, 554, 553, 389, 297, 473, 319,
	356, 0, 0, 407, 451, 230, 521, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 367, 464, 518,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 373,
	381, 498, 298, 206, 207, 208, 491, 492, 493, 494,
	532, 533, 537, 441, 442, 443, 444, 279, 527, 295,
	447, 446, 317, 318, 362, 430, 0, 190, 211, 352,
	0, 433, 275, 558, 531, 526, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 363, 369,
	370, 371, 372, 391, 392, 393, 396, 399, 400, 403,
	405, 406, 409, 413, 417, 418, 419, 420, 422, 424,
	434, 439, 453, 454, 455, 456, 457, 460, 461, 466,
	467, 468, 469, 470, 478, 479, 483, 506, 508, 520,
	538, 543, 459, 287, 288, 425, 426, 300, 301, 555,
	556, 286, 515, 544, 0, 0, 361, 0, 0, 364,
	268, 291, 306, 0, 530, 480, 217, 445, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 374,
	382, 411, 416, 283, 258, 234, 438, 231, 463, 486,
	487, 488, 490, 378, 253, 415, 379, 0, 359, 496,
	497, 302, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 412, 0, 196, 0, 465, 241, 360, 357,
	503, 269, 260, 256, 239, 303, 368, 410, 485, 404,
	0, 354, 0, 0, 475, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 395, 476, 273, 0, 0,
	0, 0, 1457, 797, 0, 0, 1454, 0, 0, 0,
	0, 1452, 1456, 0, 0, 228, 1453, 1451, 235, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 500, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 384, 244, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 394, 440, 452, 0, 0,
	0, 242, 0, 450, 408, 519, 223, 271, 437, 414,
	448, 421, 274, 0, 0, 449, 355, 505, 431, 516,
	541, 542, 250, 388, 528, 489, 536, 557, 216, 247,
	402, 482, 522, 472, 380, 501, 502, 315, 471, 282,
	194, 353, 547, 214, 458, 232, 221, 507, 525, 276,
	435, 203, 484, 514, 229, 462, 0, 0, 559, 205,
	512, 481, 376, 312, 313, 204, 0, 436, 255, 280,
	245, 397, 509, 510, 243, 560, 218, 535, 210, 0,
	534, 390, 504, 513, 377, 366, 209, 511, 375, 365,
	320, 339, 340, 267, 293, 428, 358, 429, 292, 294,
	386, 385, 387, 198, 523, 0, 199, 0, 477, 524,
	561, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 401, 427, 423, 432, 0, 499, 517,
	529, 539, 545, 546, 548, 549, 550, 551, 552, 554,
	553, 389, 297, 473, 319, 356, 0, 0, 407, 451,
	230, 521, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 367, 464, 518, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 373, 381, 498, 298, 206, 207,
	208, 491, 492, 493, 494, 532, 533, 537, 441, 442,
	443, 444, 279, 527, 295, 447, 446, 317, 318, 362,
	430, 0, 190, 211, 352, 0, 433, 275, 558, 531,
	526, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 363, 369, 370, 371, 372, 391, 392,
	393, 396, 399, 400, 403, 405, 406, 409, 413, 417,
	418, 419, 420, 422, 424, 434, 439, 453, 454, 455,
	456, 457, 460, 461, 466, 467, 468, 469, 470, 478,
	479, 483, 506, 508, 520, 538, 543, 459, 287, 288,
	425, 426, 300, 301, 555, 556, 286, 515, 544, 0,
	0, 361, 0, 0, 364, 268, 291, 306, 0, 530,
	480, 217, 445, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 374, 382, 411, 416, 283, 258,
	234, 438, 231, 463, 486, 487, 488, 490, 378, 253,
	415, 0, 379, 359, 496, 497, 302, 80, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 350, 254, 0, 0, 412, 0,
	196, 0, 465, 241, 360, 357, 503, 269, 260, 256,
	239, 303, 368, 410, 485, 404, 0, 354, 0, 0,
	475, 383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 395, 476, 273, 0, 89, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 500, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	384, 244, 0, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 394, 440, 452, 0, 0, 0, 242, 0, 450,
	408, 519, 223, 271, 437, 414, 448, 421, 274, 0,
	0, 449, 355, 505, 431, 516, 541, 542, 250, 388,
	528, 489, 536, 557, 216, 247, 402, 482, 522, 472,
	380, 501, 502, 315, 471, 282, 194, 353, 547, 214,
	458, 232, 221, 507, 525, 276, 435, 203, 484, 514,
	229, 462, 0, 0, 559, 205, 512, 481, 376, 312,
	313, 204, 0, 436, 255, 280, 245, 397, 509, 510,
	243, 560, 218, 535, 210, 0, 534, 390, 504, 513,
	377, 366, 209, 511, 375, 365, 320, 339, 340, 267,
	293, 428, 358, 429, 292, 294, 386, 385, 387, 198,
	523, 0, 199, 0, 477, 524, 561, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 401,
	427, 423, 432, 0, 499, 517, 529, 539, 545, 546,
	548, 549, 550, 551, 552, 554, 553, 389, 297, 473,
	319, 356, 0, 0, 407, 451, 230, 521, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 367, 464,
	518, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	373, 381, 498, 298, 206, 207, 208, 491, 492, 493,
	494, 532, 533, 537, 441, 442, 443, 444, 279, 527,
	295, 447, 446, 317, 318, 362, 430, 0, 190, 211,
	352, 88, 433, 275, 558, 531, 526, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 2059, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 363,
	369, 370, 371, 372, 391, 392, 393, 396, 399, 400,
	403, 405, 406, 409, 413, 417, 418, 419, 420, 422,
	424, 434, 439, 453, 454, 455, 456, 457, 460, 461,
	466, 467, 468, 469, 470, 478, 479, 483, 506, 508,
	520, 538, 543, 459, 287, 288, 425, 426, 300, 301,
	555, 556, 286, 515, 544, 0, 0, 361, 0, 0,
	364, 268, 291, 306, 0, 530, 480, 217, 445, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	374, 382, 411, 416, 283, 258, 234, 438, 231, 463,
	486, 487, 488, 490, 378, 253, 415, 1513, 0, 359,
	496, 497, 302, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 0, 0, 0, 1515,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 412, 0, 196, 0, 465, 241, 360,
	357, 503, 269, 260, 256, 239, 303, 368, 410, 485,
	404, 0, 354, 0, 0, 475, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 395, 476, 273, 0,
	0, 0, 0, 1517, 626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 500,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 1291, 0, 1292, 1293, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 384, 244, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 394, 440, 452, 0,
	0, 0, 242, 0, 450, 408, 519, 223, 271, 437,
	414, 448, 421, 274, 0, 0, 449, 355, 505, 431,
	516, 541, 542, 250, 388, 528, 489, 536, 557, 216,
	247, 402, 482, 522, 472, 380, 501, 502, 315, 471,
	282, 194, 353, 547, 214, 458, 232, 221, 507, 525,
	276, 435, 203, 484, 514, 229, 462, 0, 0, 559,
	205, 512, 481, 376, 312, 313, 204, 0, 436, 255,
	280, 245, 397, 509, 510, 243, 560, 218, 535, 210,
	0, 534, 390, 504, 513, 377, 366, 209, 511, 375,
	365, 320, 339, 340, 267, 293, 428, 358, 429, 292,
	294, 386, 385, 387, 198, 523, 0, 199, 0, 477,
	524, 561, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 401, 427, 423, 432, 0, 499,
	517, 529, 539, 545, 546, 548, 549, 550, 551, 552,
	554, 553, 389, 297, 473, 319, 356, 0, 0, 407,
	451, 230, 521, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 367, 464, 518, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 373, 381, 498, 298, 206,
	207, 208, 491, 492, 493, 494, 532, 533, 537, 441,
	442, 443, 444, 279, 527, 295, 447, 446, 317, 318,
	362, 430, 0, 190, 211, 352, 0, 433, 275, 558,
	531, 526, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 363, 369, 370, 371, 372, 391,
	392, 393, 396, 399, 400, 403, 405, 406, 409, 413,
	417, 418, 419, 420, 422, 424, 434, 439, 453, 454,
	455, 456, 457, 460, 461, 466, 467, 468, 469, 470,
	478, 479, 483, 506, 508, 520, 538, 543, 459, 287,
	288, 425, 426, 300, 301, 555, 556, 286, 515, 544,
	0, 0, 361, 0, 0, 364, 268, 291, 306, 0,
	530, 480, 217, 445, 277, 240, 0, 0, 202, 236,
	220, 246, 261, 264, 310, 374, 382, 411, 416, 283,
	258, 234, 438, 231, 463, 486, 487, 488, 490, 378,
	253, 415, 0, 379, 359, 496, 497, 302, 80, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 89, 0, 1494, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 88, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 89, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 2059, 0, 0, 2058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 2010, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 1694,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 2008, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 924, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	349, 930, 316, 191, 215, 928, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 2010, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 1694,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 1494, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 3292, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 1843,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 2408, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 0,
	626, 0, 0, 0, 0, 2393, 0, 0, 0, 2394,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 1536, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 1535, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 0,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 3416, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 1694,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 3292, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 89, 0, 0, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 2060,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 1517,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 1798, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 1790, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 1661, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 1659, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 1657, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 1655, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 1653, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 1649, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 1647, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 1645, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 1620, 0, 0, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 1521, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 89, 0, 0, 0,
	797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1274, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 1273, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 883,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	583, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 0,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 3424, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 379, 0, 359, 496, 497, 302, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 412,
	0, 196, 0, 465, 241, 360, 357, 503, 269, 260,
	256, 239, 303, 368, 410, 485, 404, 0, 354, 0,
	0, 475, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 395, 476, 273, 0, 0, 0, 0, 0,
	797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 500, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 384, 244, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 394, 440, 452, 0, 0, 0, 242, 0,
	450, 408, 519, 223, 271, 437, 414, 448, 421, 274,
	0, 0, 449, 355, 505, 431, 516, 541, 542, 250,
	388, 528, 489, 536, 557, 216, 247, 402, 482, 522,
	472, 380, 501, 502, 315, 471, 282, 194, 353, 547,
	214, 458, 232, 221, 507, 525, 276, 435, 203, 484,
	514, 229, 462, 0, 0, 559, 205, 512, 481, 376,
	312, 313, 204, 0, 436, 255, 280, 245, 397, 509,
	510, 243, 560, 218, 535, 210, 0, 534, 390, 504,
	513, 377, 366, 209, 511, 375, 365, 320, 339, 340,
	267, 293, 428, 358, 429, 292, 294, 386, 385, 387,
	198, 523, 0, 199, 0, 477, 524, 561, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	401, 427, 423, 432, 0, 499, 517, 529, 539, 545,
	546, 548, 549, 550, 551, 552, 554, 553, 389, 297,
	473, 319, 356, 0, 0, 407, 451, 230, 521, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 367,
	464, 518, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 373, 381, 498, 298, 206, 207, 208, 491, 492,
	493, 494, 532, 533, 537, 441, 442, 443, 444, 279,
	527, 295, 447, 446, 317, 318, 362, 430, 0, 190,
	211, 352, 0, 433, 275, 558, 531, 526, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	363, 369, 370, 371, 372, 391, 392, 393, 396, 399,
	400, 403, 405, 406, 409, 413, 417, 418, 419, 420,
	422, 424, 434, 439, 453, 454, 455, 456, 457, 460,
	461, 466, 467, 468, 469, 470, 478, 479, 483, 506,
	508, 520, 538, 543, 459, 287, 288, 425, 426, 300,
	301, 555, 556, 286, 515, 544, 0, 0, 361, 0,
	0, 364, 268, 291, 306, 0, 530, 480, 217, 445,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 374, 382, 411, 416, 283, 258, 234, 438, 231,
	463, 486, 487, 488, 490, 378, 253, 415, 379, 0,
	359, 496, 497, 302, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 412, 0, 196, 0, 465, 241,
	360, 357, 503, 269, 260, 256, 239, 303, 368, 410,
	485, 404, 0, 354, 0, 0, 475, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 395, 476, 273,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	500, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 384, 244, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 394, 440, 452,
	0, 0, 0, 242, 0, 450, 408, 519, 223, 271,
	437, 414, 448, 421, 274, 0, 0, 449, 355, 505,
	431, 516, 541, 542, 250, 388, 528, 489, 536, 557,
	216, 247, 402, 482, 522, 472, 380, 501, 502, 315,
	471, 282, 194, 353, 547, 214, 458, 232, 221, 507,
	525, 276, 435, 203, 484, 514, 229, 462, 0, 0,
	559, 205, 512, 481, 376, 312, 313, 204, 0, 436,
	255, 280, 245, 397, 509, 510, 243, 560, 218, 535,
	210, 0, 534, 390, 504, 513, 377, 366, 209, 511,
	375, 365, 320, 339, 340, 267, 293, 428, 358, 429,
	292, 294, 386, 385, 387, 198, 523, 0, 199, 0,
	477, 524, 561, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 401, 427, 423, 432, 0,
	499, 517, 529, 539, 545, 546, 548, 549, 550, 551,
	552, 554, 553, 389, 297, 473, 319, 356, 0, 0,
	407, 451, 230, 521, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 367, 464, 518, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 373, 381, 498, 298,
	206, 207, 208, 491, 492, 493, 494, 532, 533, 537,
	441, 442, 443, 444, 279, 527, 295, 447, 446, 317,
	318, 362, 430, 0, 190, 211, 352, 0, 433, 275,
	558, 531, 526, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 363, 369, 370, 371, 372,
	391, 392, 393, 396, 399, 400, 403, 405, 406, 409,
	413, 417, 418, 419, 420, 422, 424, 434, 439, 453,
	454, 455, 456, 457, 460, 461, 466, 467, 468, 469,
	470, 478, 479, 483, 506, 508, 520, 538, 543, 459,
	287, 288, 425, 426, 300, 301, 555, 556, 286, 515,
	544, 0, 0, 361, 0, 0, 364, 268, 291, 306,
	0, 530, 480, 217, 445, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 374, 382, 411, 416,
	283, 258, 234, 438, 231, 463, 486, 487, 488, 490,
	378, 253, 415, 0, 0, 359, 496, 497, 302,
}

var yyPact = [...]int{
	-1000, -1000, 3724, -1000, -450, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2055, 2115,
	-1000, -1000, -1000, -1000, 2300, -1000, 833, 1762, -1000, 2066,
	314, -1000, 46184, 585, -1000, 43604, 580, 222, 28769, -1000,
	225, -1000, 214, 44894, 224, -1000, -1000, -1000, -306, 18447,
	1959, 108, 99, 46184, -1000, -1000, -1000, -1000, 2257, 1731,
	-1000, 399, -1000, -1000, -1000, -1000, -1000, -1000, 42959, -1000,
	970, -1000, -1000, 2087, 2053, 2292, 739, 2040, -1000, 2145,
	1731, -1000, 18447, 2217, 2124, 17802, 17802, 514, -1000, -1000,
	287, -1000, -1000, 24254, 46184, 31349, 417, -1000, 2066, -1000,
	-1000, -1000, 126, -1000, 397, 1653, -1000, 1641, -1000, 814,
	871, 421, 533, 532, 420, 418, 413, 408, 407, 405,
	403, 402, 422, -1000, 784, 784, -125, -126, 244, 486,
	495, 495, 767, 540, 2018, 2013, -1000, -1000, 784, 784,
	784, 389, 784, 784, 784, 784, 369, 364, 784, 784,
	784, 784, 784, 784, 784, 784, 784, 784, 784, 784,
	784, 784, 784, 784, 784, 428, 2066, 350, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 46184, 235, 46184, -1000, 641, 46184, 935, 935, 182,
	935, 935, 935, 935, 220, 723, 98, -1000, 219, 353,
	212, 345, 889, 255, -1000, -1000, 342, 889, 1554, -1000,
	761, 204, -1000, 935, 935, -1000, 11972, 190, 11972, 11972,
	-1000, 2028, -1000, -1000, -1000, -1000, -1000, 1175, -1000, -1000,
	-1000, -1000, -1000, 535, -1000, -1000, -1000, -1000, 44894, 42314,
	-1000, -1000, 83, -1000, -1000, 1576, 1353, 18447, 1197, -1000,
	1876, 659, -1000, -1000, -1000, -1000, -1000, 614, -1000, 19092,
	19092, 19092, 19092, -1000, -1000, 1655, 41669, 1655, 1655, 19092,
	1655, -1000, 19092, 1655, 1655, 1655, 18447, 1655, 1655, 1655,
	1655, -1000, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655,
	1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655,
	1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655,
	1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655,
	1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655,
	1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655,
	1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655,
	-1000, -1000, -1000, -1000, 1655, 635, 1655, 1655, 1655, 1655,
	1655, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1655,
	1655, 1655, 1655, 1655, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1655, 1655, 1655, 1655, 1655, 1655, 1655,
	1655, 1655, 1655, 1655, 1655, 1655, 1655, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 20382, 1290, 1288, 1285,
	-1000, 15867, 1655, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 46184, -1000, 1655, 267, 44894, 44894, 433,
	2145, 1731, -1000, 2257, 2172, 399, -1000, 2991, 1496, 1335,
	1223, 1731, 1624, 46184, -1000, 1678, -1000, -1000, -1000, -1000,
	1899, 1200, 1553, -1000, -1000, -1000, -1000, 2049, 18447, -1000,
	-1000, 2271, -1000, 21673, 634, 2262, 41024, -1000, 514, 514,
	1639, 465, 76, -1000, -1000, -1000, -1000, 817, 28124, -1000,
	-1000, -1000, -1000, 1541, 46184, -1000, -1000, 5998, 1111, -1000,
	1760, -1000, 1530, -1000, 1701, 18447, 1774, 571, 1111, 551,
	549, 548, -1000, 1, -1000, -1000, -1000, -1000, -1000, -1000,
	784, 784, 784, -1000, 404, 2215, 314, 5214, -1000, -1000,
	-1000, 40379, 1744, 1111, -1000, 1743, -1000, 879, 596, 656,
	656, 1111, -1000, -1000, 45539, 1111, 878, 873, 1111, 1111,
	44894, 44894, -1000, 39734, -1000, 39089, 38444, 1125, 44894, 37799,
	37154, 36509, 35864, 35219, -1000, 1833, -1000, 1749, -1000, -1000,
	-1000, 45539, 1111, 1111, 45539, 44894, 45539, 46184, 1111, -1000,
	-1000, 377, -1000, -1000, 1120, 1119, 1118, 784, 784, 1114,
	1527, 1526, 1525, 784, 784, 1104, 1524, 30059, 1513, 328,
	1099, 1081, 1072, 1134, 1509, 226, 1508, 1117, 1115, 1069,
	44894, 1742, 46184, -1000, 344, 768, 472, 816, 2066, 1946,
	1636, 531, 560, 1111, 502, 502, 44894, -1000, 13925, -1000,
	-1000, 1501, 18447, -1000, 907, 889, 889, -1000, -1000, -1000,
	-1000, -1000, -1000, 935, 46184, 907, -1000, -1000, -1000, 889,
	935, 46184, 935, 935, 935, 935, 889, 889, 889, 935,
	46184, 46184, 46184, 46184, 46184, 46184, 46184, 46184, 46184, 11972,
	761, 935, -313, -1000, 1500, -1000, 1863, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 11972, 11972, -1000, -1000, -1000, -1000, 221,
	-1000, 34574, 450, 815, -1000, 1634, 33929, -1000, -315, -317,
	-319, -321, -1000, -1000, -1000, -324, -326, -1000, -1000, -1000,
	18447, 18447, 18447, 18447, -153, -1000, 1038, 19092, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 183, 829, 19092, 19092, 19092,
	19092, 19092, 19092, 19092, 19092, 19092, 19092, 19092, 19092, 19092,
	19092, 19092, -1000, -1000, 26189, 6646, 6646, 659, 659, 659,
	659, -1000, -81, 1633, 45539, -1000, -1000, -1000, 633, 18447,
	18447, 659, -1000, 1111, 15867, 33284, 17802, 17802, 18447, 818,
	1353, 45539, 18447, -1000, 1223, -1000, -1000, -1000, 1021, -1000,
	885, 2025, 2025, 2025, 2025, 18447, 18447, 18447, 18447, 18447,
	18447, 18447, 18447, 18447, 18447, 2025, 44894, 44894, 597, 18447,
	18447, 18447, 18447, 18447, 18447, 14576, 18447, 18447, 19092, 18447,
	18447, 18447, 1223, 18447, 18447, 18447, 18447, 18447, 18447, 18447,
	18447, 18447, 18447, 18447, 18447, 18447, 18447, 18447, 18447, 18447,
	18447, 18447, 18447, 18447, 18447, 18447, 18447, 18447, 18447, 18447,
	1223, 18447, 1101, 18447, 18447, 17802, 13274, 17802, 17802, 17802,
	17802, 17802, -1000, -1000, -1000, -1000, -1000, 18447, 18447, 18447,
	18447, 18447, 18447, 18447, 18447, 1223, 18447, 18447, 18447, 18447,
	18447, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1321, 1356, 1282, 18447, -1000, 1632, -1000, -122, 23609,
	18447, 1498, 2252, 1797, 44894, -1000, -1000, -1000, 2145, -1000,
	2145, 1321, 2969, 1902, 17802, -1000, -1000, 2969, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1279, -1000, 46184, 1624,
	2116, 44894, 1895, 1493, 378, -1000, 18447, 18447, 1623, -1000,
	1158, 46184, -1000, -153, -1000, 32639, -1000, -1000, 11321, 46184,
	396, 46184, -1000, 22964, 31994, 318, 76, -1000, 1614, -1000,
	79, 50, 15221, 651, -1000, -1000, -1000, 244, 19737, 1557,
	651, 142, -1000, -1000, -1000, 1701, -1000, 1701, 1701, 1701,
	1701, 378, 378, 378, 378, -1000, -1000, -1000, -1000, -1000,
	1738, 1733, -1000, 1701, 1701, 1701, 1701, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1717, 1717, 1717, 1702, 1702, 483,
	-1000, 18447, 411, 31349, 2090, 1067, 998, 344, 511, 1796,
	1111, 1111, 1111, 511, -1000, 1198, 1152, 1148, -1000, -441,
	1622, -1000, -1000, 2204, -1000, -1000, 947, 915, 914, 572,
	44894, 288, 388, -1000, 464, -1000, 31349, 1111, 872, 656,
	1111, -1000, 1111, -1000, -1000, -1000, -1000, -1000, 1111, -1000,
	-1000, 1621, -1000, 1559, 955, 913, 930, 912, 1621, -1000,
	-1000, -96, 1621, -1000, 1621, -1000, 1621, -1000, 1621, -1000,
	1621, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	736, 223, -232, 44894, 288, 528, -1000, 523, 26189, -1000,
	-1000, -1000, 26189, 26189, -1000, -1000, -1000, -1000, 1466, 1459,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -423,
	46184, -1000, 317, 809, 373, 398, 357, 46184, 268, 2132,
	2130, 2126, 2119, 292, 362, 46184, 46184, 502, 1858, 46184,
	2100, 46184, -1000, -1000, -1000, -1000, -1000, 1353, 46184, -1000,
	-1000, 935, 935, -1000, -1000, 46184, 935, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 935, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 46184, -1000, -1000, -1000, -1000, 44894, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -58, 133, 60, 412,
	-1000, -1000, -1000, -1000, -1000, 2141, -1000, 1353, 858, 855,
	-1000, 1655, -1000, -1000, 951, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 183, 19092, 19092, 19092, 1941, 530, 1403, 1085,
	1106, 1094, 1094, 1004, 1004, 711, 711, 711, 711, 711,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1405, -1000,
	1655, 45539, 1490, 13274, 1330, 1848, 1223, 2881, -1000, 1474,
	-1000, 1474, 1512, 824, -1000, 18447, 1223, 2847, -1000, -1000,
	1223, 1223, 1223, 18447, -1000, -1000, 18447, 18447, 18447, 18447,
	998, 998, 998, 998, 998, 998, 998, 998, 998, 998,
	18447, 1620, 1619, 2242, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1163, 998, 998, 998, 998,
	998, 18447, 2147, -1000, -1000, -1000, 1222, 2816, 1234, 2812,
	998, 998, -1000, 998, 2791, 2782, 1223, 1576, 1223, 1617,
	-1000, 2754, 998, 2750, 2746, 2714, 2121, 2709, 2703, 2699,
	998, 998, 998, 2110, 2695, 2684, 2677, 2638, 2623, 2599,
	2595, 2574, 2557, 998, -156, 998, 1223, -1000, -1000, -1000,
	-1000, -1000, 2446, 2093, 1223, 1616, 1655, 631, -1000, -1000,
	1474, 1223, 1223, 1474, 1474, 2441, 2432, 2363, 2356, 2338,
	2308, 998, 998, -1000, 998, 2299, 2269, 2064, 2027, 1223,
	-1000, 1282, 46184, -1000, -309, -1000, 44, 666, 1655, -1000,
	30059, 1223, -1000, 4768, -1000, 1139, -1000, -1000, -1000, -1000,
	-1000, 27479, 1577, 2969, -1000, -1000, 1655, 1470, -1000, -1000,
	378, 130, 26834, 592, 592, 157, 1353, 1353, 18447, -1000,
	-1000, -1000, -1000, -1000, -1000, 627, 2224, 434, 1655, -1000,
	1612, 2315, -1000, -1000, -1000, 2113, 21028, -1000, 1655, 1655,
	46184, 1518, 1499, -1000, 626, -1000, 1149, 1614, 76, 61,
	-1000, -1000, -1000, -1000, 1353, -1000, 1146, 400, 1180, -1000,
	474, -1000, -1000, -1000, -1000, 1985, 137, -1000, -1000, -1000,
	284, 378, -1000, -1000, -1000, -1000, -1000, -1000, 1402, 1402,
	-1000, -1000, -1000, -1000, -1000, 1064, -1000, -1000, -1000, 1045,
	-1000, -1000, 2213, 1842, 411, -1000, -1000, 784, 1388, -1000,
	-1000, 1988, 784, 784, 44894, -1000, -1000, 1491, 2090, 317,
	46184, 834, 1856, -1000, 1796, 1796, 1796, 46184, -1000, -1000,
	-1000, -1000, -1000, -1000, -437, 68, 410, -1000, -1000, -1000,
	5149, 44894, 1464, -1000, 285, -1000, 1451, -1000, 44894, -1000,
	1450, 1715, 1111, 1111, -1000, -1000, -1000, 44894, 1655, -1000,
	-1000, -1000, -1000, 559, 2060, 298, -1000, -1000, -185, -1000,
	-1000, 288, 285, 45539, 1111, 651, -1000, -1000, -1000, -1000,
	-1000, -429, 1442, 546, 237, 354, 46184, 46184, 46184, 46184,
	46184, 606, -1000, -1000, -1000, -1000, 250, -1000, -1000, -1000,
	250, -1000, -1000, -1000, -1000, 358, 521, -1000, 46184, 46184,
	713, -1000, -1000, -1000, 889, -1000, -1000, 889, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2039, 46184,
	57, -360, -1000, -355, 18447, -1000, -1000, -1000, -1000, 1153,
	529, 1403, 19092, 19092, 19092, -1000, -1000, -1000, 803, 803,
	26189, -1000, 18447, 17802, -1000, -1000, 18447, 18447, 820, -1000,
	18447, 1012, -1000, 18447, -1000, -1000, -1000, 1282, 998, 998,
	998, 998, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1592, 18447, 18447, 18447, 1223, 339, -1000, -1000,
	-1000, -1000, -1000, 2237, -1000, 18447, -1000, 26189, 18447, 18447,
	18447, -1000, -1000, -1000, 18447, 18447, -1000, -1000, 18447, 18447,
	-1000, 18447, 18447, 18447, -1000, 18447, 18447, 18447, 18447, -1000,
	-1000, -1000, -1000, 18447, 18447, 18447, 18447, 18447, 18447, 18447,
	18447, 18447, 18447, -1000, -1000, 31349, 93, -156, 1101, 93,
	1101, -1000, 17802, 12623, -1000, -1000, -1000, -1000, -1000, 18447,
	18447, 18447, 18447, 18447, 18447, -1000, -1000, -1000, 18447, 18447,
	-1000, 18447, -1000, 18447, -1000, -1000, -1000, -1000, -1000, 666,
	-1000, 656, 656, 656, 44894, -1000, -1000, -1000, -1000, 1613,
	-1000, 2140, -1000, 1921, 1913, 2232, 2224, -1000, 22964, 2969,
	-1000, -1000, 44894, -289, -1000, 1954, 2003, 592, 592, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 10670, 2145, 18447, 1853,
	45539, 175, -1000, 22319, 44894, 45539, 22964, 22964, 22964, 22964,
	22964, -1000, 1890, 1877, -1000, 1888, 1878, 1903, 46184, -1000,
	1440, 1223, 2172, 21028, 399, 18447, 24899, 1615, 22964, -1000,
	-1000, 22964, 46184, 10019, -1000, -1000, 53, 45, -1000, -1000,
	-1000, -1000, 244, -1000, -1000, 1043, 2109, 1983, -1000, -1000,
	-1000, -1000, -1000, 1434, -1000, 1430, 1611, 1414, 223, -1000,
	1773, 2036, 784, 784, -1000, 1044, -1000, 1111, 1383, 1379,
	-1000, -1000, -1000, 544, -1000, 2099, 46184, 1851, 1839, 1838,
	-1000, -438, 1036, 1713, 1665, 18447, 1709, 2203, 1597, 44894,
	-1000, -1000, 45539, -1000, 211, -1000, 411, 44894, -1000, -1000,
	-1000, 388, 46184, -1000, 8440, -1000, -1000, -1000, 285, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 46184, 343, -1000, 1708,
	1143, -1000, -1000, 1783, -1000, -1000, -1000, -1000, 246, 372,
	236, 1361, 236, -1000, 46184, 683, 1842, 46184, -1000, -1000,
	-1000, 935, 935, -1000, -1000, 2021, -1000, 1111, 998, 19092,
	19092, -1000, 659, 261, -135, 1701, 1701, -1000, 1701, 1702,
	-1000, 1701, 207, 1701, 205, 1701, -1000, -1000, 1223, 1223,
	1282, -1000, 2006, 1368, -1000, 1353, 18447, 2240, -1000, -1000,
	-1000, -1000, -1000, -5, 2228, 2221, 998, -1000, 1699, 1697,
	18447, 998, 1223, 1934, 998, 998, 998, 998, -1000, 1353,
	1282, 2208, 1282, 998, 998, 2170, 336, 998, 1412, 1412,
	1412, 1412, 1412, 1282, 1282, 1282, 1282, 44894, -1000, -156,
	-1000, -1000, -210, -214, -1000, 1223, -156, 1610, 1223, -1000,
	1925, 1918, 2166, 1889, 998, 2154, 998, 998, 998, 1770,
	-1000, 2134, 2134, 2134, 1399, 1139, 46184, -1000, -1000, -1000,
	-1000, 2224, 2222, 1606, -1000, -1000, 130, 473, -1000, 1949,
	2003, -1000, 2202, 1944, 2193, -1000, -1000, -1000, -1000, -1000,
	1353, -1000, 2070, 1594, -1000, 802, 1578, -1000, -1000, 17157,
	1401, 1907, 619, 1399, 1660, 2315, 1786, 1830, 2903, -1000,
	-1000, -1000, -1000, 1875, -1000, 1874, -1000, -1000, 1678, -1000,
	-1000, 1356, 1223, 2089, 396, 22964, 1586, 1586, -1000, 610,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 946, 7523, 2287,
	-1000, 1341, -1000, 1132, 253, 1031, -1000, -1000, 784, 784,
	-1000, 867, 864, -1000, 46184, 1696, -1000, 378, 1302, 378,
	1029, -1000, 1028, -1000, -1000, -1000, -1000, 1707, 1822, -1000,
	-1000, -1000, -1000, 46184, -1000, -1000, 46184, 46184, 46184, 1695,
	2191, -1000, 18447, 1688, 786, 2080, 44894, 44894, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 492,
	784, -402, 361, 360, 784, 784, 784, -439, -1000, -1000,
	1396, 1394, -1000, -114, -1000, 18447, -1000, -1000, -1000, 1110,
	1110, 1290, 1288, 1285, -1000, 1678, -1000, -1000, -1000, 1435,
	-1000, -1000, -106, 44894, 44894, 44894, 44894, -1000, 984, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 659, 1223, 341, -109, 1223, -1000, -1000, 378, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18447,
	-1000, 18447, -1000, 1353, 18447, 2145, 1270, 18447, 18447, -1000,
	1020, 1019, 998, -1000, -1000, -1000, 18447, -1000, -1000, -1000,
	-1000, -1000, 18447, -1000, -1000, -1000, 18447, 296, 803, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1223,
	394, -1000, -1000, -1000, -1000, 2230, -1000, 1223, 18447, -1000,
	-1000, 18447, -1000, 18447, 18447, -1000, 18447, -1000, 18447, -1000,
	-1000, -1000, -1000, 18447, 1655, 2000, 1655, 1655, 24899, -1000,
	-1000, 2222, 2220, 2188, 1922, 1937, 1937, 1949, -1000, 2186,
	2177, -1000, 1251, 2176, 1249, 839, -1000, 45539, 18447, 175,
	-1000, 392, 44894, 175, 44894, -1000, 2173, -1000, -1000, 18447,
	1686, -1000, 18447, -1000, -1000, -1000, -1000, -1000, -1000, 6646,
	2224, 1586, -1000, -1000, 727, -1000, 18447, -1000, -1000, -1000,
	3809, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1245,
	1237, -1000, -1000, 1681, 18447, -1000, -1000, -1000, 1373, 1340,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1678, -1000,
	-1000, -1000, -1000, 388, -433, 1992, 44894, 1013, -1000, 1378,
	1597, 381, 175, 1224, 784, 784, 784, 1011, 992, 30059,
	1370, -1000, 44894, 453, -1000, 388, -1000, -130, -131, 998,
	-1000, -1000, 2103, -1000, -1000, 12623, -1000, -1000, 1670, 1792,
	-1000, -1000, -1000, -1000, 1893, -90, -111, -1000, -1000, 998,
	998, 1546, 1223, -1000, 998, 998, 1336, 1331, -1000, 998,
	1282, 1739, -1000, 296, 1223, 1829, -1000, -1000, 6646, -1000,
	-1000, 2173, 2175, 93, -1000, -1000, 266, 93, 1353, 1728,
	998, 1629, 1537, 998, 998, 25544, -1000, 2168, 2159, 30704,
	30704, 666, 2220, -166, 18447, 18447, 1932, 969, -1000, -1000,
	-1000, -1000, 1215, 1205, -1000, 1203, -1000, 2280, -1000, 1353,
	-1000, 175, -1000, 602, 1578, -1000, 2145, 1353, 44894, 1353,
	128, 2173, -1000, 998, -1000, 1655, 1655, 1655, 1655, 1655,
	1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655,
	1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655,
	1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655,
	1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655,
	1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655,
	1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655, 1655,
	1655, 1655, 1655, 1655, 1655, -1000, -1000, 44894, 1710, -1000,
	-1000, 2102, 1326, 66, -1000, 1300, 1597, -1000, -1000, 176,
	-1000, 18447, -1000, 30059, 1194, 1191, -1000, -1000, -1000, -1000,
	-439, -1000, -1000, -1000, -1000, -1000, -1000, 399, 1591, -1000,
	782, 44894, 46184, -1000, 1862, -1000, -1000, -1000, 18447, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 18447, -1000, 1223,
	1828, -1000, -241, -1000, -371, 18447, -156, -1000, -1000, -156,
	-1000, 18447, -1000, -1000, 18447, -1000, 18447, -1000, -1000, 1324,
	-1000, -1000, -1000, -1000, -1000, 1324, 1324, -1000, -166, -1000,
	1584, -1000, 44894, 1353, 1576, -1000, 968, -1000, -1000, -1000,
	-1000, -1000, 45539, 1578, 44894, -1000, 1320, 1223, 1655, 2145,
	-1000, 1299, -1000, 399, -1000, 1666, 1665, -1000, -1000, -1000,
	16512, -1000, -1000, -1000, -1000, -1000, 280, -104, 12623, 9368,
	1297, -1000, -101, 998, 1282, -1000, -342, -1000, -1000, -1000,
	-1000, 307, -1000, -1000, 1576, -1000, -1000, 1521, 1372, 1339,
	29414, -1000, -1000, -1000, -1000, -166, -1000, -1000, 2094, -1000,
	-1000, 1199, -1000, -1000, 24899, 44249, -1000, -65, 233, -104,
	18447, 1658, 1223, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 26, -1000, -1000, -1000, -1000, -1000, 1783, -113, -1000,
	-1000, -1000, 169, -368, -206, -207, -1000, -1000, 19092, -1000,
	18447, -1000, 18447, -1000, 18447, -1000, -1000, -1000, 44894, 1655,
	-1000, 1244, -1000, 3544, -225, 1827, -1000, -53, -1000, -1000,
	-1000, 942, 1189, -1000, -1000, -1000, -1000, -1000, -1000, 1358,
	44894, -1000, 480, -1000, -1000, -106, -112, 852, -1000, -1000,
	-1000, -1000, -1000, 1334, 1278, 998, -1000, 44894, -1000, 44249,
	-219, 651, 6646, -1000, 1821, 1820, 2285, -1000, -1000, -1000,
	-1000, -1000, -1000, -446, 1219, 323, -1000, -1000, 169, -1000,
	18447, -1000, 18447, -1000, 1223, -1000, -1000, 2097, 128, -1000,
	2276, -1000, 2241, 673, 673, -1000, 957, -446, -1000, -1000,
	998, 998, -1000, -226, -1000, -1000, -1000, -1000, -1000, 463,
	1016, -1000, -1000, -1000, -1000, -1000, 6646, -1000, -1000, -1000,
	295, 295, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2868, 2863, 48, 2, 39, 37, 2862, 29, 104,
	194, 40, 195, 108, 2860, 2859, 2858, 2857, 2848, 2846,
	2845, 181, 180, 177, 2832, 2831, 2827, 2821, 2819, 2806,
	2804, 2803, 2800, 2799, 175, 168, 193, 2798, 2793, 2790,
	133, 198, 94, 96, 188, 2789, 2788, 82, 2782, 2781,
	2775, 192, 185, 183, 868, 2774, 197, 119, 53, 2773,
	2770, 2769, 2768, 2767, 2760, 2757, 2753, 2751, 2749, 2748,
	2746, 2745, 2742, 2741, 2738, 2734, 277, 2732, 2731, 24,
	2730, 85, 2728, 2727, 2725, 2724, 12, 2721, 2720, 16,
	45, 2719, 2717, 51, 2716, 2710, 2709, 2708, 2702, 22,
	2696, 25, 2694, 43, 2693, 2691, 129, 2690, 2689, 2686,
	44, 2684, 2682, 2680, 2679, 2678, 2677, 2675, 151, 2673,
	2671, 2670, 172, 199, 2668, 2664, 173, 117, 144, 2663,
	2656, 107, 189, 2650, 123, 2648, 2647, 2644, 161, 2643,
	2216, 2638, 2626, 75, 84, 2622, 122, 2619, 2611, 11,
	21, 72, 9, 18, 19, 2608, 2606, 74, 83, 2604,
	113, 2601, 2600, 106, 70, 2595, 100, 125, 2588, 2585,
	8, 5, 2583, 3, 7, 4, 71, 2580, 2575, 124,
	2571, 2568, 2567, 101, 2566, 2565, 2933, 2564, 98, 137,
	112, 80, 2563, 52, 57, 2562, 2558, 2557, 2552, 2550,
	54, 2547, 2546, 2541, 145, 89, 171, 2540, 49, 76,
	58, 146, 2537, 42, 91, 170, 2536, 2533, 147, 140,
	2521, 2518, 62, 50, 47, 2517, 102, 136, 120, 64,
	99, 163, 2516, 2515, 63, 79, 2514, 2513, 2510, 2509,
	174, 2508, 2506, 78, 2505, 61, 2499, 215, 2491, 20,
	73, 2490, 56, 164, 2489, 86, 2488, 2487, 69, 110,
	77, 41, 2485, 169, 2483, 59, 166, 132, 162, 2477,
	2471, 2466, 2461, 196, 317, 2452, 2447, 143, 179, 153,
	152, 95, 2443, 335, 2438, 2425, 105, 744, 5023, 2421,
	38, 167, 2420, 2419, 6058, 149, 46, 28, 2417, 116,
	2416, 2415, 2414, 2412, 200, 191, 114, 165, 67, 2406,
	2405, 2404, 15, 2403, 2402, 2400, 2399, 2398, 2397, 90,
	36, 35, 34, 212, 68, 14, 103, 176, 81, 2395,
	2394, 2391, 128, 92, 2390, 158, 157, 134, 141, 2379,
	182, 148, 127, 2376, 60, 33, 2374, 2373, 2372, 2370,
	97, 2364, 2363, 2358, 2356, 160, 150, 126, 88, 2355,
	93, 135, 155, 154, 55, 2350, 65, 2347, 2345, 31,
	187, 30, 2339, 17, 115, 121, 2337, 4560, 184, 2335,
	23, 334, 156, 2334, 2333, 1, 6, 13, 2332, 2331,
	2330, 2326, 138, 2325, 2324, 2321, 2320, 27, 66, 26,
	10, 118, 87, 2318, 2317, 4060, 0, 131, 2315, 201,
}

//line sql.y:7851
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 403, 404, 404, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 255, 377,
	378, 378, 253, 253, 32, 71, 34, 34, 33, 33,
	36, 36, 35, 8, 8, 8, 9, 9, 9, 9,
	9, 9, 9, 9, 10, 10, 10, 10, 10, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 19, 20,
	12, 12, 21, 21, 104, 104, 22, 23, 23, 23,
	23, 407, 407, 181, 181, 179, 179, 180, 180, 258,
	258, 24, 25, 25, 268, 268, 267, 267, 267, 269,
	269, 269, 269, 307, 307, 307, 26, 26, 26, 26,
	26, 124, 124, 380, 380, 379, 373, 373, 372, 372,
	371, 376, 376, 375, 375, 374, 38, 39, 48, 48,
	48, 48, 49, 50, 381, 381, 346, 55, 55, 54,
	54, 54, 54, 54, 54, 56, 56, 52, 52, 51,
	51, 53, 53, 348, 348, 334, 334, 347, 347, 347,
	347, 347, 347, 347, 333, 333, 135, 135, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 396, 396, 396, 395, 395,
	233, 233, 233, 233, 233, 233, 233, 233, 145, 145,
	157, 157, 157, 157, 157, 143, 143, 144, 142, 142,
	142, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	156, 156, 152, 152, 152, 153, 153, 153, 154, 154,
	397, 397, 397, 397, 312, 312, 312, 312, 315, 315,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 314,
	314, 314, 314, 314, 316, 316, 316, 316, 316, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 318, 318, 318, 318, 318,
	318, 318, 318, 332, 332, 319, 319, 327, 327, 328,
	328, 328, 329, 329, 329, 330, 330, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 326, 326, 325, 325,
	325, 335, 360, 360, 359, 359, 357, 357, 357, 357,
	357, 357, 357, 357, 344, 344, 354, 354, 354, 354,
	354, 343, 343, 339, 339, 339, 340, 340, 341, 341,
	338, 338, 342, 342, 356, 356, 355, 355, 336, 336,
	337, 337, 362, 398, 398, 398, 398, 398, 399, 399,
	363, 388, 390, 390, 390, 389, 389, 386, 387, 385,
	385, 385, 385, 385, 81, 81, 81, 281, 281, 282,
	282, 352, 352, 351, 351, 351, 353, 353, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 276,
	276, 276, 384, 384, 384, 384, 384, 384, 383, 383,
	383, 349, 349, 349, 382, 382, 57, 57, 214, 214,
	401, 401, 402, 402, 402, 45, 45, 45, 45, 45,
	45, 44, 44, 44, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 46, 46, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 106, 106, 107, 107, 107, 107, 109, 109,
	109, 365, 365, 58, 58, 3, 3, 169, 171, 172,
	172, 170, 170, 170, 170, 170, 170, 60, 60, 59,
	59, 174, 173, 175, 175, 175, 1, 1, 2, 2,
	4, 4, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 331, 331, 331, 364, 364, 366,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	112, 111, 111, 110, 113, 113, 113, 113, 113, 113,
	113, 113, 368, 368, 368, 61, 61, 369, 320, 321,
	322, 5, 6, 345, 367, 120, 120, 28, 37, 37,
	29, 29, 29, 29, 30, 30, 62, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 275, 275,
	284, 284, 274, 274, 299, 299, 299, 277, 277, 277,
	278, 278, 394, 394, 394, 271, 271, 64, 64, 64,
	300, 300, 300, 300, 66, 66, 67, 68, 68, 302,
	302, 303, 303, 69, 70, 82, 82, 82, 82, 82,
	82, 82, 105, 105, 105, 15, 15, 15, 15, 78,
	78, 78, 14, 14, 65, 65, 72, 391, 391, 392,
	393, 393, 393, 393, 73, 75, 31, 31, 31, 31,
	31, 31, 130, 130, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 125, 125, 125, 119,
	119, 408, 76, 77, 77, 123, 123, 123, 116, 116,
	116, 122, 122, 122, 16, 16, 17, 257, 257, 18,
	18, 127, 127, 129, 129, 129, 129, 129, 131, 131,
	131, 131, 131, 131, 131, 126, 126, 128, 128, 128,
	128, 292, 292, 292, 291, 291, 163, 163, 165, 164,
	164, 166, 166, 167, 167, 167, 167, 212, 212, 189,
	189, 250, 250, 251, 251, 249, 249, 256, 256, 252,
	252, 252, 252, 259, 259, 168, 168, 168, 168, 176,
	176, 177, 177, 178, 178, 301, 301, 297, 297, 297,
	296, 296, 182, 182, 182, 184, 183, 183, 183, 183,
	185, 185, 187, 187, 186, 186, 188, 193, 193, 192,
	192, 190, 190, 190, 190, 191, 191, 191, 191, 194,
	194, 140, 140, 140, 140, 140, 140, 140, 155, 155,
	155, 155, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 240, 240, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 149, 216, 216, 215, 215, 83, 83,
	83, 84, 84, 85, 85, 85, 85, 85, 86, 86,
	86, 86, 86, 141, 141, 88, 88, 87, 87, 207,
	207, 289, 289, 89, 90, 90, 93, 93, 92, 91,
	91, 97, 97, 94, 94, 96, 96, 95, 98, 98,
	99, 100, 100, 272, 272, 195, 195, 203, 203, 203,
	203, 196, 196, 196, 196, 196, 196, 196, 204, 204,
	204, 211, 205, 205, 201, 201, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 160, 160, 160, 160, 221, 221, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 148, 148, 161, 161, 161, 161, 162,
	162, 162, 162, 162, 162, 162, 309, 309, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 409,
	409, 323, 323, 323, 323, 202, 202, 202, 202, 202,
	121, 121, 121, 121, 121, 306, 306, 306, 310, 310,
	310, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 311, 311, 219, 219,
	117, 117, 217, 217, 218, 220, 220, 213, 213, 213,
	213, 198, 198, 198, 222, 222, 223, 223, 101, 102,
	102, 103, 103, 224, 224, 226, 225, 225, 227, 228,
	228, 228, 229, 229, 230, 230, 230, 47, 47, 47,
	47, 47, 42, 42, 42, 42, 43, 43, 43, 43,
	132, 132, 132, 132, 134, 134, 133, 133, 79, 79,
	80, 80, 80, 138, 138, 139, 139, 139, 136, 136,
	137, 137, 247, 247, 231, 231, 231, 238, 238, 238,
	234, 234, 236, 236, 236, 237, 237, 237, 235, 244,
	244, 246, 246, 245, 245, 241, 241, 242, 242, 243,
	243, 243, 239, 239, 197, 197, 197, 197, 197, 248,
	248, 248, 248, 260, 260, 208, 208, 210, 210, 209,
	209, 159, 261, 261, 265, 262, 262, 266, 266, 266,
	266, 254, 254, 254, 263, 263, 264, 264, 293, 293,
	293, 270, 270, 283, 283, 279, 279, 280, 280, 273,
	273, 285, 285, 285, 74, 206, 206, 361, 361, 358,
	288, 288, 290, 290, 294, 294, 298, 298, 295, 295,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	405, 406, 304, 305, 305, 305,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	0, 1, 1, 1, 2, 3, 2, 3, 0, 1,
	3, 1, 4, 3, 3, 4, 3, 2, 3, 4,
	3, 4, 2, 7, 1, 3, 3, 3, 3, 1,
	2, 1, 1, 3, 2, 3, 3, 2, 5, 7,
	10, 9, 7, 8, 1, 1, 10, 11, 9, 8,
	8, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 5, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 0, 3, 3,
	2, 2, 2, 1, 2, 2, 0, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 1,
	1, 3, 3, 3, 0, 1, 4, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 4, 3, 1,
	3, 1, 7, 6, 7, 7, 8, 8, 0, 1,
	5, 2, 1, 1, 1, 0, 1, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 1, 2, 0,
	1, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 0, 2,
	0, 2, 0, 2, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 8, 5, 5, 4, 4, 4, 6, 5,
	5, 5, 2, 2, 2, 2, 3, 3, 3, 4,
	3, 3, 1, 3, 5, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 5, 7, 7,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 3, 3, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 2, 4, 4, 4, 4, 4,
	2, 3, 3, 3, 5, 2, 3, 3, 2, 3,
	4, 4, 4, 3, 4, 4, 5, 3, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 1, 1, 2, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 4, 4, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 6, 4,
	7, 6, 1, 3, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 1, 1, 0, 1, 1, 0,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	1, 0, 1, 1, 5, 5, 4, 0, 2, 4,
	4, 0, 1, 0, 1, 2, 3, 4, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 3, 1, 3, 4, 3,
	7, 0, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 3, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 1, 1,
	2, 6, 5, 6, 6, 0, 2, 3, 3, 0,
	2, 3, 3, 3, 2, 3, 1, 6, 3, 4,
	3, 1, 3, 4, 5, 6, 3, 4, 5, 6,
	3, 4, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 2, 2, 2,
	1, 1, 2, 7, 7, 6, 6, 2, 2, 1,
	6, 3, 3, 3, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 0, 1, 2, 5, 0,
	3, 0, 1, 4, 4, 2, 0, 1, 1, 2,
	2, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	5, 1, 3, 0, 3, 1, 1, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 4, 8, 6,
	8, 6, 5, 4, 10, 2, 2, 1, 2, 2,
	2, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 8, 8, 8,
	6, 5, 4, 4, 4, 4, 4, 7, 4, 4,
	6, 6, 6, 8, 6, 6, 4, 4, 3, 4,
	6, 6, 4, 4, 4, 6, 8, 6, 4, 6,
	6, 8, 10, 7, 8, 8, 9, 4, 4, 4,
	4, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 4, 4, 6, 5, 9, 6, 9, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 6, 8,
	10, 12, 14, 6, 8, 8, 10, 12, 14, 6,
	8, 10, 12, 6, 8, 4, 4, 3, 4, 6,
	6, 4, 6, 4, 6, 8, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 3, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 1, 3,
	5, 1, 2, 2, 0, 3, 0, 2, 2, 1,
	3, 0, 1, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 1,
	0, 1, 2, 4, 9, 3, 5, 0, 3, 3,
	0, 1, 0, 2, 2, 0, 2, 2, 2, 0,
	2, 1, 2, 3, 3, 0, 2, 1, 2, 3,
	4, 3, 0, 1, 2, 1, 5, 4, 4, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	4, 1, 1, 3, 3, 1, 3, 3, 3, 3,
	3, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 1, 1, 5, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -403, -76, -408, -7, -11, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -29, -30, -62, -63,
	-64, -66, -67, -68, -69, -70, -14, -65, -31, -32,
	-71, -72, -73, -74, -75, -16, -17, -18, -9, -8,
	-13, 10, 11, -104, -33, 33, -38, -48, 224, -49,
	-39, 225, -50, 227, 226, 263, 228, 256, 75, 309,
	310, 312, 313, 314, 315, -105, 261, 262, 230, 37,
	46, 34, 35, 38, 234, 269, 270, 233, -10, -34,
	9, -405, 12, 441, 258, 257, 29, -12, 503, 87,
	-77, -404, 655, -247, -231, 23, 34, 30, -230, -226,
	-123, -231, 21, 19, 8, -76, -76, -76, 13, 14,
	-76, -346, -348, 87, 158, 87, -76, -55, -54, -52,
	-51, -53, -56, 32, -45, -46, -370, -44, -41, 229,
	226, 273, 122, 123, 263, 264, 265, 228, 247, 262,
	266, 261, 282, -40, 82, 34, 503, 506, -353, 225,
	231, 232, 227, 442, 125, 124, 76, -350, 364, 536,
	625, -56, 627, 103, 106, 626, 45, 237, 628, 629,
	630, 543, 631, 246, 632, 633, 634, 635, 641, 584,
	642, 643, 644, 126, 8, -76, -298, -294, 91, -287,
	500, 249, 534, 535, 298, 82, 42, 509, 361, 364,
	536, 471, 625, 309, 323, 317, 476, 477, 478, 344,
	336, 501, 537, 510, 301, 250, 286, 619, 334, 134,
	627, 304, 538, 264, 369, 370, 539, 371, 103, 312,
	408, 640, 303, 540, 638, 106, 626, 80, 470, 52,
	622, 45, 259, 332, 233, 328, 628, 287, 541, 512,
	280, 125, 122, 647, 37, 326, 51, 31, 637, 124,
	50, 629, 149, 542, 630, 543, 373, 351, 613, 49,
	374, 265, 544, 85, 270, 505, 307, 621, 375, 490,
	327, 376, 297, 636, 230, 545, 604, 596, 597, 377,
	378, 614, 356, 352, 357, 492, 546, 400, 475, 379,
	600, 601, 654, 53, 547, 548, 615, 123, 549, 79,
	631, 81, 321, 322, 550, 295, 248, 495, 496, 402,
	348, 453, 460, 461, 110, 111, 456, 112, 462, 113,
	463, 464, 465, 454, 114, 107, 455, 466, 467, 349,
	350, 115, 468, 109, 108, 457, 459, 116, 469, 246,
	36, 380, 502, 299, 59, 274, 403, 47, 354, 651,
	46, 609, 497, 551, 612, 347, 343, 450, 54, 552,
	553, 554, 555, 472, 632, 346, 320, 342, 646, 4,
	292, 473, 633, 63, 232, 359, 358, 360, 281, 399,
	339, 556, 557, 558, 253, 83, 559, 329, 22, 560,
	561, 381, 288, 562, 57, 563, 564, 406, 262, 565,
	55, 634, 40, 566, 267, 648, 635, 567, 568, 569,
	570, 269, 571, 383, 572, 598, 599, 382, 353, 355,
	498, 276, 384, 504, 573, 308, 325, 266, 639, 574,
	254, 486, 487, 488, 489, 620, 494, 493, 268, 273,
	261, 407, 255, 575, 576, 577, 578, 579, 302, 595,
	580, 581, 313, 641, 451, 44, 582, 583, 584, 585,
	586, 296, 291, 401, 410, 62, 84, 366, 587, 588,
	618, 319, 289, 589, 310, 56, 642, 643, 644, 283,
	645, 479, 480, 481, 482, 10, 652, 653, 474, 386,
	126, 293, 294, 48, 340, 275, 590, 305, 591, 330,
	331, 345, 318, 341, 311, 605, 277, 387, 452, 263,
	592, 409, 290, 362, 367, 306, 508, 491, 282, 388,
	617, 507, 483, 484, 338, 335, 284, 485, 593, 389,
	238, 278, 279, 594, 606, 390, 391, 300, 392, 393,
	394, 395, 396, 398, 397, 602, 603, 285, 506, 316,
	333, 368, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	449, 236, -76, 236, -186, -294, 236, -263, 370, -284,
	372, 385, 380, 390, 378, -275, 381, 383, 276, -394,
	400, 236, 387, 224, 373, 382, 391, 392, 300, 398,
	393, 397, 285, 394, 395, 396, -377, 176, 630, 645,
	134, 337, 377, 375, 401, 609, 91, -300, 91, 92,
	93, -287, 311, -302, 316, -288, -377, -287, 314, -76,
	-304, -304, -125, 609, 611, -205, -140, 142, -155, -158,
	-146, -150, -199, -200, -201, -202, -156, -213, -253, 165,
	166, 173, 143, -211, -159, 27, 499, 443, 442, 176,
	32, -149, 219, 69, 70, 445, 145, 58, 12, 418,
	419, -157, 413, 420, 415, 470, 472, 473, 474, 471,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	475, 447, 448, 117, 449, 107, 109, 108, 450, 451,
	452, 334, 497, 498, 492, 495, 496, 494, 493, 349,
	350, 453, 454, 455, 110, 111, 112, 113, 114, 115,
	116, 456, 459, 457, 458, 460, 461, 462, 467, 468,
	463, 464, 465, 466, 469, -85, -97, 525, 524, -98,
	-147, -148, -161, -162, -288, -294, 241, 412, 235, 171,
	441, -151, -144, -377, -287, 92, 93, -8, -209, 411,
	416, 417, 421, 414, 511, 513, 528, 529, 531, 516,
	521, 520, 523, 486, 487, 488, 489, 490, 491, 596,
	597, 598, 599, 600, 601, 602, 603, 91, -153, -152,
	-195, 94, 99, 104, 105, 100, -400, 259, 330, 331,
	118, -405, 623, 90, 95, 96, 97, 98, 119, 120,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 45, 386, 386, -186, -76, -76, -76, -76,
	-224, -123, -226, -10, -8, -405, 9, -76, -8, -9,
	-13, -34, -36, 530, -35, -294, 102, -231, -247, 13,
	161, 43, 51, -229, -230, -12, -8, -140, 20, 24,
	25, -128, 167, -140, -294, -128, -273, 240, -76, -76,
	-262, -307, 311, -266, 401, 609, 400, -254, -264, 91,
	-253, -263, 399, -347, 158, -333, -337, -288, 251, -363,
	247, -186, -356, -355, -288, -405, -124, -283, 237, 245,
	244, 135, -381, 138, 293, 412, 235, -51, -52, -53,
	-263, 175, 629, -106, 268, 272, 88, 88, -337, -336,
	-335, -382, 272, 251, -362, -354, 243, 252, -343, 244,
	245, -338, 237, 136, -382, -338, 242, 252, 247, 251,
	272, 272, 126, 272, 126, 272, 272, 272, 272, 272,
	272, 272, 272, 272, 267, -344, 150, -344, 507, 507,
	-350, -382, 247, 237, -382, -382, 243, -285, -338, 239,
	26, 239, 36, 36, -344, -344, -344, -263, 175, -344,
	-344, -344, -344, 280, 280, -344, -344, -344, -344, -344,
	-344, -344, -344, -344, -344, -344, -344, -344, -344, -344,
	-344, -344, 236, -381, -132, 397, 300, 82, -54, 282,
	-37, -186, -283, 237, 238, -381, 269, -186, 220, -186,
	-277, 158, 16, -277, -274, 386, 384, 371, 376, -277,
	-277, -277, -277, 283, 369, -339, 237, 36, 248, 386,
	283, 369, 283, 284, 283, 284, 379, 389, 283, -299,
	15, 161, 412, 374, 378, 276, 236, 277, 238, 388,
	284, -299, 90, -278, 158, 386, 279, -277, -277, -305,
	-405, -290, -288, -286, 229, 24, 141, 26, 28, 144,
	176, 129, 20, 145, 38, 231, 337, 247, 175, 243,
	442, 224, 73, 511, 413, 415, 411, 418, 444, 445,
	412, 372, 32, 14, 513, 29, 257, 25, 39, 169,
	226, 148, 514, 260, 27, 258, 117, 120, 516, 23,
	76, 252, 15, 245, 41, 17, 517, 518, 18, 241,
	240, 161, 237, 71, 12, 219, 30, 157, 67, 519,
	136, 520, 521, 522, 523, 130, 69, 158, 21, 649,
	416, 417, 34, 610, 499, 271, 171, 74, 60, 611,
	142, 414, 524, 525, 118, 526, 121, 77, 616, 138,
	19, 72, 43, 527, 272, 528, 242, 650, 529, 404,
	530, 159, 227, 441, 70, 160, 623, 531, 624, 235,
	385, 9, 446, 33, 256, 244, 128, 68, 532, 236,
	147, 447, 448, 239, 131, 119, 8, 135, 35, 13,
	75, 78, 419, 420, 421, 58, 127, 503, 146, 16,
	533, 405, 140, -377, 612, -305, -305, 33, 92, 239,
	-288, -186, -82, 604, 228, -130, 386, -118, 176, 630,
	613, 614, 615, 612, 383, 620, 618, 616, 283, 617,
	88, 138, 140, 141, 4, -140, 157, -196, 150, 151,
	152, 153, 154, 155, 156, 161, 142, 144, 158, -240,
	139, 162, 163, 164, 165, 166, 167, 168, 170, 169,
	171, 172, 159, 160, 175, 222, 223, -150, -150, -150,
	-150, -211, -216, -215, -405, -213, -377, -287, -294, -405,
	-405, -150, -272, -405, -405, -150, -405, -405, -405, -219,
	-140, -405, -405, -409, -405, -409, -409, -323, -405, -323,
	-405, -405, -405, -405, -405, -405, -405, -405, -405, -405,
	-405, -405, -405, -405, -405, -405, -405, -405, -405, -405,
	-405, -405, -405, -405, -405, -405, -405, -405, -405, -405,
	-405, -405, -405, -405, -405, -405, -405, -405, -405, -405,
	-405, -405, -405, -405, -405, -405, -405, -405, -405, -405,
	-405, -405, -405, -405, -405, -405, -405, -405, -405, -405,
	-405, -405, -405, -405, -405, -405, 220, -405, -405, -405,
	-405, -405, -323, -323, -323, -323, -323, -405, -405, -405,
	-405, -405, -405, -405, -405, -405, -405, -405, -405, -405,
	-405, 105, 99, 104, 94, -213, 100, 90, 90, 90,
	90, -8, -9, -205, -405, -304, -391, -392, -189, -186,
	-405, 300, -288, -288, 269, -229, -12, -8, -224, -230,
	-226, -8, -76, -116, -129, 64, 65, -131, 25, 39,
	68, 66, 24, -406, 89, -406, -247, -406, 88, -36,
	-250, 87, 62, 44, 90, 90, 88, 22, -225, -227,
	-140, 15, -292, 4, -291, 26, -288, 90, 220, 15,
	-187, 30, -186, -273, -273, 88, 311, 91, -268, -267,
	402, 404, 150, -293, -288, 90, 32, 89, 88, -186,
	-312, -315, -317, -316, -318, -313, -314, 334, 335, 176,
	338, 340, 341, 342, 343, 344, 345, 346, 347, 348,
	351, 33, 259, 330, 331, 332, 333, 352, 353, 354,
	355, 357, 358, 359, 360, 317, 336, 501, 318, 319,
	320, 321, 322, 323, 325, 326, 327, 328, 329, -378,
	-377, 87, 89, 88, -319, 87, -140, -132, 236, -377,
	237, 237, 237, -76, 441, -344, -344, -344, 267, 20,
	-44, -41, -370, 19, -40, -41, 229, 122, 123, 226,
	87, -333, 87, -342, -378, -377, 87, 136, 242, 135,
	-341, -338, -341, -342, -377, -213, -377, 136, 136, -377,
	-377, -259, -288, -259, -259, 24, -259, 24, -259, 24,
	96, -288, -259, 24, -259, 24, -259, 24, -259, 24,
	-259, 24, 32, 79, 80, 81, 32, 83, 84, 85,
	-213, -377, -377, -213, -333, -213, -186, -377, -263, 96,
	96, 96, -344, -344, 96, 90, 90, 90, -344, -344,
	96, 90, -296, -294, 90, 90, -383, 253, 297, 299,
	96, 96, 96, 96, 32, 90, -384, 32, 637, 636,
	638, 639, 640, 90, 96, 32, 96, 32, 96, -288,
	87, -186, -138, 287, 224, 226, 229, 77, 90, 303,
	301, 305, 306, 150, 45, 88, 239, 236, -377, -279,
	241, -279, -288, -295, -294, -286, 90, -140, -340, 15,
	161, -299, -299, -277, -186, -340, -299, -277, -186, -277,
	-277, -277, -277, -299, -299, -299, -277, -294, -294, -186,
	-186, -186, -186, -186, -186, -186, -305, -278, -277, 612,
	90, -271, 15, 77, -305, -305, -303, 314, -78, -288,
	90, -15, -11, -22, -21, -23, 150, 88, 503, -179,
	-186, 612, 612, 612, 612, 612, 612, -140, -140, -140,
	-140, 526, -203, 118, 142, 119, 120, -158, -204, -209,
	-211, 101, 161, 144, 158, -240, -146, -150, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -306, -288, 90, 176, -154, -153, 100, -400, -154,
	500, 88, -215, 220, -140, -140, -377, -140, -288, -126,
	-128, -126, -140, -217, -218, 146, -213, -140, -406, -406,
	96, 100, 167, -122, 25, 39, -122, -122, -122, -122,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-122, -288, -288, -115, -114, 423, 424, 425, 426, 428,
	429, 430, 433, 434, 438, 439, 422, 440, 427, 432,
	435, 436, 437, 431, 333, -140, -140, -140, -140, -140,
	-140, -83, -140, 129, 130, 131, -205, -140, -146, -140,
	-140, -140, -406, -140, -140, -140, -206, -205, -376, -375,
	-374, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -406, -140, -160, -144, 96, -255,
	100, 92, -140, -140, -127, -126, -290, -295, -286, -287,
	-126, -127, -127, -126, -126, -140, -140, -140, -140, -140,
	-140, -140, -140, -406, -140, -140, -140, -140, -140, -247,
	-406, -205, 88, -393, 404, 405, 610, -297, 272, -296,
	26, -206, 90, 15, -257, 78, -288, -229, -229, 64,
	65, 60, -126, -131, -406, -35, 26, -249, -288, 63,
	90, -324, -263, 361, 362, 176, -140, -140, 88, -228,
	28, 29, -186, -291, 167, -295, -186, -258, 272, -186,
	-164, -166, -167, -168, -189, -212, -405, -169, 522, 519,
	15, -179, -180, -188, -294, -266, -307, -268, 88, 403,
	405, 406, 77, 121, -140, -325, 175, -352, -351, -350,
	-333, -335, -336, -337, 89, -325, -329, 367, 366, -319,
	-319, -319, -319, -319, -324, -324, -324, -324, 87, 87,
	-319, -319, -319, -319, -327, 87, -327, -327, -328, 87,
	-328, -363, -140, -360, -359, -357, -358, 246, 103, 594,
	550, 503, 543, 584, 78, -355, -228, 96, -406, -138,
	-280, 241, -361, -358, -377, -377, -377, -280, 91, 90,
	91, 90, 91, 90, -107, -58, -1, 649, 650, 651,
	88, 20, -334, -333, -57, 297, -366, -367, 272, -362,
	-356, -342, 136, -341, -342, -342, -377, 88, 30, 126,
	126, 126, 126, 503, 226, 33, -281, 542, 142, 594,
	550, -333, -57, 239, 239, -306, -306, -306, 90, 90,
	-276, 645, -179, -134, 289, 150, 278, 278, 236, 236,
	291, -186, 302, 304, 303, 301, 305, 306, 24, 24,
	24, 24, 290, 292, 294, 280, -186, -186, -279, 77,
	-181, -186, 27, -294, -186, -277, -277, -186, -277, -277,
	-186, -288, 348, 605, 606, 608, 607, -118, 404, 88,
	503, 23, -119, 23, -405, 118, 119, 120, -204, -146,
	-150, -146, 141, 260, -405, -213, -406, -290, 26, 88,
	78, -406, 88, 88, -406, -406, 88, 15, -220, -218,
	148, -140, -406, 88, -406, -406, -406, -205, -140, -140,
	-140, -140, -406, -406, -406, -406, -406, -406, -406, -406,
	-406, -406, -205, 88, 88, 15, -310, 26, -406, -406,
	-406, -406, -406, -219, -406, 15, -406, 78, 88, 161,
	88, -406, -406, -406, 88, 88, -406, -406, 88, 88,
	-406, 88, 88, 88, -406, 88, 88, 88, 88, -406,
	-406, -406, -406, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, -406, -90, 527, -406, -406, 88, -406,
	88, -406, -405, 220, -406, -406, -406, -406, -406, 88,
	88, 88, 88, 88, 88, -406, -406, -406, 88, 88,
	-406, 88, -406, 88, -406, -392, 609, 405, -193, -192,
	-190, 75, 240, 76, -405, -296, -406, -154, -255, -256,
	-255, -198, -288, 96, 100, -231, -163, -165, 15, -131,
	-211, 89, 88, -324, -235, -241, -274, -288, 90, 176,
	-326, 176, -326, 361, 362, -227, 220, -194, 16, -197,
	33, 58, -11, -405, -405, 33, 88, -182, -184, -183,
	-185, 67, 71, 73, 68, 69, 70, 74, -301, 26,
	-164, -9, -8, -405, -405, -405, -186, -179, -407, 15,
	78, -407, 88, 220, -267, -269, 407, 404, 410, -377,
	90, -106, 88, -350, -337, -232, -135, 41, -330, 368,
	-324, 510, -324, -332, 90, -332, 96, 96, 89, -47,
	-42, -43, 34, 82, -357, -344, 90, 40, -344, -344,
	-288, 89, -228, -134, -186, 142, 77, -361, -361, -361,
	-294, -2, 648, 654, 136, 87, 371, 19, -249, 88,
	89, -214, 298, 89, -108, -288, 89, 87, -342, -342,
	-288, -405, 236, 32, 32, 594, 550, 542, -57, -214,
	-213, -377, -325, 647, 646, 89, 238, 296, -139, 418,
	-136, 90, 91, -186, -186, -186, -186, -186, 229, 226,
	-401, 307, -401, 281, 239, -179, -186, 88, -81, 255,
	250, -299, -299, 34, -186, 404, 621, 619, -140, 141,
	260, -158, -150, -146, -308, 176, 334, 259, 332, 328,
	348, 339, 366, 330, 367, 327, 326, 325, -308, -306,
	-205, -128, -140, -140, 149, -140, 147, -140, -406, -406,
	-406, -406, -406, -224, -140, -140, -140, -406, 176, 334,
	15, -140, -306, -140, -140, -140, -140, -140, -374, -140,
	-205, -140, -205, -140, -140, -140, -140, -140, -375, -375,
	-375, -375, -375, -205, -205, -205, -205, -405, -288, -93,
	-92, -91, 577, 240, -90, -160, -93, -160, -127, -290,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-190, -338, -338, -338, -259, 88, -270, 23, 15, 58,
	58, -163, -194, -164, -131, -288, -238, 604, -244, 47,
	-242, -243, 48, -239, 49, 57, -326, -326, 167, -229,
	-140, -260, 77, -261, -265, -213, -208, -210, -209, -405,
	-248, -406, -288, -259, -261, -166, -167, -167, -166, -167,
	67, 67, 67, 72, 67, 72, 67, -183, -294, -406,
	-406, -9, -9, -140, -297, 78, -164, -164, -188, -294,
	167, 404, 408, 409, -350, -399, 118, 142, 32, 77,
	364, 103, -397, 175, 539, 589, 594, 550, 543, 584,
	-398, 242, 135, 136, 254, 26, 42, 89, 88, 89,
	88, 89, 88, -282, -281, -43, -42, -344, -344, 96,
	-377, 90, 90, 238, 27, -186, 77, 77, 77, -109,
	652, 96, 87, -3, 82, -140, 87, 20, -333, -213,
	-368, -320, -369, -321, -322, -5, -6, -345, -112, 58,
	103, -61, 45, 237, 632, 633, 126, -405, 645, -360,
	-249, -364, -366, -186, -143, -405, -142, -144, -151, 165,
	166, 259, 330, 331, -214, -186, -133, 287, 295, 87,
	-137, 92, -380, 78, 278, 364, 278, -402, 308, 90,
	-402, -186, -81, -47, -186, -277, -277, 34, -377, -406,
	-158, -150, -121, 161, 503, -311, 509, -319, -319, -319,
	-328, -319, 322, -319, 322, -319, -406, -406, -406, 88,
	-406, 23, -406, -140, 88, -117, 446, 88, 88, -406,
	87, 87, -140, -406, -406, -406, 88, -406, -406, -406,
	-406, -406, 88, -406, -406, -406, 88, -309, 595, -406,
	-406, -406, -406, -406, -406, -406, -406, -406, -406, -89,
	-289, -288, -90, 559, 559, -406, -90, -221, 88, -406,
	-406, 88, -406, 88, 88, -406, 88, -406, 88, -406,
	-406, -406, -406, 88, -191, 23, -191, -191, -406, -255,
	-186, -194, -222, 17, -235, 52, 340, -246, -245, 56,
	48, -243, 20, 50, 20, 31, -260, 88, 150, 88,
	-406, -406, 88, 58, 220, -406, -194, -177, -176, 77,
	78, -178, 77, -176, 67, 67, -250, -406, -406, 88,
	-258, -164, -194, -194, 220, 118, -405, -145, -157, -143,
	13, 90, 90, -377, -396, 636, 637, 32, 96, -344,
	-344, 136, 136, -186, 87, -324, 90, -324, 96, 96,
	32, 83, 84, 85, 32, 79, 80, 81, -186, -186,
	-186, -186, -365, 87, 20, -140, 87, 150, 89, -249,
	-249, 274, 161, -344, 630, 280, 280, -344, -344, -344,
	-111, -110, 652, 89, -406, 88, -331, 503, 506, -140,
	-152, -152, -250, 89, -373, 503, -379, -288, -288, -288,
	-288, 96, 98, -406, 501, 74, 504, -406, -324, -140,
	-140, -140, -229, 90, -140, -140, 96, 96, -406, -140,
	-205, -140, -406, -174, -173, -175, 613, 118, 32, -308,
	-406, -207, 272, -96, -95, -94, 15, -406, -140, -140,
	-140, -140, -140, -140, -140, -405, 67, 19, 17, -405,
	-405, -297, -222, -223, 18, 20, -236, 54, -234, 53,
	-234, -245, 20, 20, 90, 20, 90, 136, -265, -140,
	-210, 58, -11, -288, -208, -288, -224, -140, 87, -140,
	-154, -194, -194, -140, -200, 470, 472, 473, 474, 471,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	475, 449, 107, 109, 108, 450, 451, 452, 334, 497,
	498, 492, 495, 496, 494, 493, 349, 350, 453, 454,
	455, 110, 111, 112, 113, 114, 115, 116, 456, 459,
	457, 460, 461, 462, 467, 468, 463, 464, 465, 466,
	469, 486, 487, 488, 489, 490, 491, 596, 597, 598,
	599, 600, 601, 602, 603, 90, 90, 87, -140, 89,
	89, -250, -364, -58, 89, -251, -249, 96, 89, 275,
	-209, -405, 90, -344, -344, -344, 96, 96, -296, -406,
	88, -288, -398, -366, 507, 507, -406, 26, -372, -371,
	-290, 87, 78, 63, 502, 505, -406, -406, 88, -406,
	-406, -406, 89, 89, -406, -406, -406, 88, -406, -173,
	-175, -406, 77, -154, -224, 20, -93, 297, 299, -93,
	-406, 88, -406, -406, 88, -406, 88, -406, -406, -252,
	-406, -288, 242, 20, 20, -252, -252, -193, -223, -103,
	-102, -101, 533, -140, -205, -237, 55, 77, 121, 90,
	90, 90, 13, -208, 220, -229, -249, -171, 371, -224,
	-406, -249, 89, 26, 89, 654, 136, 89, -209, -120,
	-405, 271, -296, 90, 90, -110, -113, -11, 88, 150,
	-249, -186, 63, -140, -205, -406, 77, 514, 613, -88,
	-87, -84, 624, 650, -205, -90, -90, -140, -140, -140,
	88, -406, -406, -406, -103, 88, -100, -99, -288, 77,
	121, -261, -288, 89, -406, -405, -229, 89, -233, -11,
	87, -3, 271, -320, -369, -321, -322, -5, -6, -345,
	-79, 503, -371, -349, -290, 90, 96, 89, 503, -406,
	-406, -86, 144, 622, 592, -141, -152, -149, 219, -406,
	88, -406, 88, -406, 88, -288, 242, -101, 88, 26,
	-297, -172, -170, -288, 556, -389, -388, 499, -399, -395,
	118, 142, 103, -397, 594, 550, 127, 128, -79, -140,
	87, -406, -80, 286, 609, -380, 504, -86, 623, 570,
	545, 570, 545, -140, -140, -140, -99, -405, -406, 88,
	23, -312, -60, 567, -386, -387, 77, -390, 377, 566,
	587, 118, 90, 89, -249, 247, -373, 505, 141, -406,
	88, -406, 88, -406, -89, -170, 563, -325, -154, -387,
	77, -386, 77, 14, 13, -4, 653, 89, 288, -86,
	-140, -140, -406, -59, 27, -171, -385, 255, 250, 253,
	33, -385, 96, -4, -406, -406, 567, 249, 32, 118,
	-154, -174, -173, -173,
}

var yyDef = [...]int{
	841, -2, -2, 843, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 69, 71,
	72, 841, 841, 841, 0, 841, 0, 0, 841, -2,
	-2, 841, 1456, 0, 841, 0, 0, -2, 768, 774,
	0, 776, -2, 0, 0, 841, 2002, 2002, 836, 0,
	0, 0, 0, 0, 841, 841, 841, 841, 1313, 49,
	841, 0, 84, 85, 792, 793, 794, 64, 0, 2000,
	842, 1, 3, 70, 74, 0, 0, 0, 57, 1322,
	0, 77, 0, 0, 845, 0, 0, 1439, 841, 841,
	0, 116, 117, 0, 0, 0, -2, 120, -2, 149,
	150, 151, 0, 156, 582, 508, 560, 506, 545, -2,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 384, 384, 0, 0, -2, 494,
	494, 494, 1441, 0, 0, 0, 542, 446, 384, 384,
	384, 0, 384, 384, 384, 384, 0, 0, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 1340, 155, 1457, 1454, 1455,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758,
	1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768,
	1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908,
	1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918,
	1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928,
	1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938,
	1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948,
	1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958,
	1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968,
	1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978,
	1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
	1999, 0, 1433, 0, 695, 944, 0, 757, 757, 0,
	757, 757, 757, 757, 0, 0, 0, 707, 0, 0,
	0, 0, 754, 0, 723, 724, 0, 754, 0, 730,
	760, 0, 735, 757, 757, 738, 2003, 0, 2003, 2003,
	1424, 0, 751, 749, 763, 764, 39, 767, 770, 771,
	772, 773, 775, 0, 780, 783, 1450, 1451, 0, 785,
	804, 805, 0, 837, 838, 44, 1092, 0, 966, 971,
	982, 997, 998, 999, 1000, 1001, 1003, 1004, 1005, 0,
	0, 0, 0, 1010, 1011, 0, 0, 0, 0, 0,
	1073, 1019, 0, 0, 0, 0, 1288, 0, 0, 1249,
	1249, 1107, 1249, 1251, 1251, 1657, 1792, 1800, 1917, 1620,
	1625, 1626, 1627, 1910, 1911, 1912, 1913, 1951, 1952, 1956,
	1717, 0, 0, 0, 1999, 1754, 1762, 1763, 1786, 1883,
	1937, 1637, 1781, 1849, 1714, 1736, 1737, 1865, 1866, 1758,
	1759, 1740, 1752, 1755, 1743, 1744, 1746, 1748, 1753, 1760,
	1766, 1745, 1765, 1764, 0, 1741, 1742, 1747, 1757, 1761,
	1749, 1750, 1751, 1756, 1767, 0, 0, 0, 0, 0,
	1188, 1189, 1190, 1191, 0, 0, 0, 0, 0, 0,
	0, 280, 281, -2, -2, 42, 43, 1091, 1411, 1251,
	1251, 1251, 1251, 1251, 1033, 1034, 1035, 1036, 1037, 1061,
	1062, 1068, 1069, 1860, 1861, 1862, 1863, 1698, 1946, 1706,
	1707, 1844, 1845, 1719, 1720, 1974, 1975, -2, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 1661, 1928, 1929,
	217, 0, 0, 285, 286, 282, 283, 284, 1075, 1076,
	238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 272, 273, 274, 275, 276, 277,
	278, 279, 2002, 0, 814, 0, 0, 0, 0, 0,
	1322, 0, 1314, 1313, 62, 0, 841, -2, 0, 0,
	0, 0, 46, 0, 51, 901, 844, 76, 75, 1362,
	0, 0, 0, 58, 1323, 66, 68, 1324, 0, 846,
	847, 0, 877, 881, 0, 0, 0, 1440, 1439, 1439,
	101, 0, 0, 1415, 113, 114, 115, 0, 0, 1421,
	1422, 1426, 1427, 0, 0, 167, 168, 0, 40, 411,
	0, 163, 0, 404, 345, 0, 1340, 0, 0, 0,
	0, 0, 841, 0, 1434, 144, 145, 152, 153, 154,
	384, 384, 384, 557, 0, 0, 155, 155, 515, 516,
	517, 0, 0, -2, 409, 0, 495, 0, 0, 398,
	398, 402, 400, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 0, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 0, 385, 0, 555, 556,
	447, 0, 0, 0, 0, 0, 0, 0, 0, 1442,
	1443, 0, 532, 533, 0, 0, 0, 384, 384, 0,
	0, 0, 0, 384, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 1353, 0, 0, 0, -2, 0,
	687, 0, 0, 0, 1435, 1435, 0, 694, 0, 696,
	697, 0, 0, 698, 0, 754, 754, 752, 753, 700,
	701, 702, 703, 757, 0, 0, 393, 394, 395, 754,
	757, 0, 757, 757, 757, 757, 754, 754, 754, 757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2003,
	760, 757, 0, 731, 0, 732, 733, 736, 737, 739,
	2004, 2005, 1452, 1453, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 2003, 2003, 743, 747, 1425, 769, 781,
	784, 799, 48, 1705, 791, 816, 817, 822, 0, 0,
	0, 0, 828, 829, 830, 0, 0, 833, 834, 835,
	0, 0, 0, 0, 0, 964, 0, 0, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 983, 984, 0, 0, 0, 1006, 1007, 1008,
	1009, 1012, 0, 1024, 0, 1026, 1297, -2, 0, 0,
	0, 1017, 1018, 0, 0, 0, 0, 0, 0, 0,
	1289, 0, 0, 1105, 0, 1106, 1108, 1109, 0, 1110,
	851, 851, 851, 851, 851, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1445, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 861, 0, 0, 861, 861,
	0, 0, 210, 211, 212, 213, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 230, 231, 232, 233, 234, 287, 235, 236,
	237, 1091, 0, 0, 0, 45, 806, 807, 0, 927,
	1445, 0, 0, 857, 0, 56, 65, 67, 1322, 60,
	1322, 0, 863, 0, 0, -2, -2, 864, 870, 871,
	872, 873, 874, 53, 2001, 54, 0, 73, 0, 47,
	0, 0, 0, 0, 357, 1365, 0, 0, 1315, 1316,
	1319, 0, 878, 1798, 882, 0, 884, 885, 0, 0,
	99, 0, 943, 0, 0, 0, 0, 1423, 103, 104,
	0, 0, 0, 368, 1428, 1429, 1430, -2, 391, 0,
	368, 352, 295, 296, 297, 345, 299, 345, 345, 345,
	345, 357, 357, 357, 357, 328, 329, 330, 331, 332,
	0, 0, 314, 345, 345, 345, 345, 335, 336, 337,
	338, 339, 340, 341, 342, 300, 301, 302, 303, 304,
	305, 306, 307, 308, 347, 347, 347, 349, 349, 0,
	41, 0, 372, 0, 1319, 0, 0, 1353, 1437, 1447,
	0, 0, 0, 1437, 122, 0, 0, 0, 558, 593,
	509, 546, 559, 0, 512, 513, -2, 0, 0, 494,
	0, 496, 0, 392, 0, -2, 0, 402, 0, 398,
	402, 399, 402, 390, 403, 536, 537, 538, 0, 540,
	541, 623, 913, 0, 0, 0, 0, 0, 629, 630,
	631, 0, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 0, 0, 0, 496, 0, 543, 0, 0, 448,
	449, 450, 0, 0, 453, 454, 455, 456, 0, 0,
	459, 460, 461, 930, 931, 462, 463, 488, 489, 490,
	464, 465, 466, 467, 468, 469, 470, 482, 483, 484,
	485, 486, 487, 471, 472, 473, 474, 475, 476, 479,
	0, 137, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1435, 0, 0,
	0, 0, 860, 945, 1458, 1459, 758, 759, 0, 396,
	397, 757, 757, 704, 744, 0, 757, 708, 745, 709,
	711, 710, 712, 725, 726, 757, 715, 755, 756, 716,
	717, 718, 719, 720, 721, 722, 740, 727, 728, 729,
	761, 0, 765, 766, 741, 742, 0, 782, 802, 800,
	801, 803, 795, 796, 797, 798, 0, 0, 0, 819,
	95, 824, 825, 826, 827, 839, 832, 1093, 961, 962,
	963, 0, 965, 968, 0, 1077, 1079, 970, 972, 1088,
	1089, 1090, 0, 0, 0, 0, 0, 976, 980, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 1002, 1265, 1266, 1267, 1021, 288, 289, 0, 1022,
	0, 0, 0, 0, 0, 0, 0, 1092, 1023, 0,
	875, 0, 0, 1295, 1292, 0, 0, 0, 1250, 1252,
	0, 0, 0, 0, 852, 853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1268, 0, 0, 0, 0,
	0, 1288, 0, 1028, 1029, 1030, 0, 0, 0, 0,
	0, 0, 1148, 0, 0, 0, 0, 1446, 0, 132,
	133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1192, 1193, 1194,
	1195, 38, 0, 0, 0, 862, 1299, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1217, 0, 0, 0, 0, 0, 0,
	1409, 0, 0, 809, 810, 812, 0, 947, 0, 928,
	0, 0, 815, 0, 856, 0, 859, 59, 61, 868,
	869, 0, 886, 865, 55, 50, 0, 0, 905, 1363,
	357, 1385, 0, 366, 366, 363, 1325, 1326, 0, 1318,
	1320, 1321, 78, 883, 879, 0, 959, 0, 0, 942,
	0, 889, 891, 892, 893, 925, 0, 896, 0, 0,
	0, 0, 0, 97, 944, 1416, 0, 102, 0, 0,
	107, 108, 1417, 1418, 1419, 1420, 0, 582, -2, 443,
	169, 171, 172, 173, 164, -2, 355, 353, 354, 298,
	357, 357, 322, 323, 324, 325, 326, 327, 0, 0,
	315, 316, 317, 318, 309, 0, 310, 311, 312, 0,
	313, 410, 0, 1327, 373, 374, 376, 384, 0, 379,
	380, 0, 384, 384, 0, 405, 406, 0, 1319, 1344,
	0, 0, 0, 1448, 1447, 1447, 1447, 0, 157, 158,
	159, 160, 161, 162, 618, 0, 0, 594, 616, 617,
	155, 0, 0, 165, 498, 497, 0, 650, 0, 408,
	0, 0, 402, 402, 387, 388, 539, 0, 0, 625,
	626, 627, 628, 0, 0, 0, 525, 437, 0, 526,
	527, 496, 498, 0, 0, 368, 451, 452, 457, 458,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 573, 574, 576, 500, 580, 575, 577,
	500, 581, 1341, 1342, 1343, 0, 0, 688, 0, 0,
	434, 93, 1436, 693, 754, 714, 746, 754, 706, 713,
	734, 778, 786, 787, 788, 789, 790, 823, 0, 0,
	0, 0, 831, 0, 0, 969, 1078, 1080, 973, 0,
	977, 981, 0, 0, 0, 1027, 1025, 1299, 0, 0,
	0, 1074, 0, 0, 1096, 1097, 0, 0, 0, 1293,
	0, 0, 1103, 0, 1253, 1254, 1111, 0, 0, 0,
	0, 0, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124,
	1125, 1126, 1313, 0, 0, 0, 0, 0, 1132, 1133,
	1134, 1135, 1136, 0, 1138, 0, 1139, 0, 0, 0,
	0, 1146, 1147, 1149, 0, 0, 1152, 1153, 0, 0,
	1154, 0, 0, 0, 1158, 0, 0, 0, 0, 1167,
	1168, 1169, 1170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1181, 1182, 0, 1056, 0, 0, 1056,
	0, 1094, 861, 0, 1255, 1256, 1257, 1258, 1259, 0,
	0, 0, 0, 0, 0, 1215, 1216, 1218, 0, 0,
	1221, 0, 1223, 0, 1410, 808, 811, 813, 899, 948,
	949, 0, 0, 0, 0, 929, 1444, 854, 855, 858,
	907, 0, 1301, 0, 0, 886, 959, 887, 0, 866,
	52, 902, 0, 1367, 1366, 1379, 1392, 366, 366, 360,
	361, 367, 362, 364, 365, 1317, 0, 1322, 0, 1403,
	0, 0, 1395, 0, 0, 0, 0, 0, 0, 0,
	0, 932, 0, 0, 935, 0, 0, 0, 0, 926,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 91,
	92, 0, 0, 0, 105, 106, 0, 0, 112, 369,
	370, 146, 155, 445, 170, 418, 0, 0, 294, 356,
	319, 320, 321, 0, 343, 0, 0, 0, 439, 118,
	1331, 1330, 384, 384, 375, 0, 378, 0, 0, 0,
	1449, 346, 407, 0, 136, 0, 0, 0, 0, 0,
	142, 588, 0, 0, 595, 0, 0, 0, 507, 0,
	518, 519, 0, 622, -2, 684, 372, 0, 386, 389,
	914, 0, 0, 520, 0, 523, 524, 438, 498, 529,
	530, 544, 531, 480, 481, 478, 0, 0, 1354, 1355,
	1360, 1358, 1359, 123, 565, 567, 566, 570, 0, 0,
	502, 0, 502, 563, 0, 434, 1327, 0, 692, 435,
	436, 757, 757, 818, 96, 0, 821, 0, 0, 0,
	0, 974, 978, 1260, 1286, 345, 345, 1273, 345, 349,
	1276, 345, 1278, 345, 1281, 345, 1284, 1285, 0, 0,
	0, 876, 0, 0, 1102, 1296, 0, 0, 1112, 1113,
	1114, 1115, 1116, 1290, 0, 0, 0, 1131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	0, 0, 0, 0, 0, 0, 1226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1051, 1055, 0,
	1057, 1058, 0, 0, 1184, 0, 0, 1196, 0, 1300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	950, 955, 955, 955, 0, 0, 0, 1431, 1432, 1302,
	1303, 959, 1304, 888, 867, 906, 1385, 0, 1378, 0,
	-2, 1387, 0, 0, 0, 1393, 358, 359, 880, 79,
	960, 82, 0, 1403, 1412, 0, 1394, 1405, 1407, 0,
	0, 0, 1399, 0, 959, 890, 921, 923, 0, 918,
	933, 934, 936, 0, 938, 0, 940, 941, 901, 895,
	897, 0, 0, 0, 99, 0, 959, 959, 98, 0,
	946, 109, 110, 111, 444, 174, 179, 0, 0, 0,
	184, 0, 186, 0, 0, 0, 191, 192, 384, 384,
	419, 0, 291, 293, 0, 0, 177, 357, 0, 357,
	0, 350, 0, 420, 440, 1328, 1329, 0, 0, 377,
	381, 382, 383, 0, 1438, 138, 0, 0, 0, 591,
	0, 619, 0, 0, 0, 0, 0, 0, 166, 499,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 0,
	384, 0, 0, 0, 384, 384, 384, 0, 676, 371,
	0, 0, 647, 644, 521, 0, 215, 216, 218, 0,
	0, 0, 0, 0, 528, 901, 1345, 1346, 1347, 0,
	1357, 1361, 126, 0, 0, 0, 0, 578, 0, 501,
	579, 689, 690, 691, 94, 699, 705, 820, 840, 967,
	975, 979, 0, 0, 0, 0, 1287, 1271, 357, 1274,
	1275, 1277, 1279, 1280, 1282, 1283, 1015, 1016, 1020, 0,
	1099, 0, 1101, 1294, 0, 1322, 0, 0, 0, 1130,
	0, 0, 0, 1141, 1140, 1142, 0, 1144, 1145, 1150,
	1151, 1155, 0, 1157, 1159, 1160, 0, 0, 0, 1171,
	1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 0,
	1049, 1052, 1183, 1059, 1060, 1065, 1186, 0, 0, 1095,
	1198, 0, 1203, 0, 0, 1209, 0, 1213, 0, 1219,
	1220, 1222, 1224, 0, 0, 0, 0, 0, 927, 908,
	63, 1304, 1306, 0, 1372, 1370, 1370, 1380, 1381, 0,
	0, 1388, 0, 0, 0, 0, 83, 0, 0, 0,
	1408, 0, 0, 0, 0, 100, 1313, 915, 922, 0,
	0, 916, 0, 917, 937, 939, 894, -2, 898, 0,
	959, 959, 89, 90, 0, 180, 0, 182, 208, 209,
	0, 185, 187, 188, 189, 195, 196, 197, 190, 0,
	0, 290, 292, 0, 0, 333, 344, 334, 0, 0,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 901, 139,
	140, 141, 583, 0, 593, 0, 903, 0, 586, 0,
	510, 0, 0, 0, 384, 384, 384, 0, 0, 0,
	0, 661, 0, 0, 624, 0, 632, 0, 0, 0,
	219, 220, 0, 1356, 564, 0, 124, 125, 0, 0,
	569, 503, 504, 1013, 0, 0, 0, 1014, 1272, 0,
	0, 0, 0, 1291, 0, 0, 0, 0, 1137, 0,
	0, 0, 1163, 0, 0, 0, 613, 614, 0, 1227,
	1054, 1313, 0, 1056, 1066, 1067, 0, 1056, 1197, 0,
	0, 0, 0, 0, 0, 0, 956, 0, 0, 0,
	0, 947, 1306, 1311, 0, 0, 1375, 0, 1368, 1371,
	1369, 1382, 0, 0, 1389, 0, 1391, 0, 1413, 1414,
	1406, 0, 1398, 1401, 1397, 1400, 1322, 919, 0, 924,
	0, 1313, 88, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 348,
	351, 0, 0, 0, 584, 0, 904, 596, 587, 0,
	674, 0, 678, 0, 0, 0, 681, 682, 683, 660,
	0, 664, 412, 648, 645, 646, 522, 0, 127, 128,
	0, 0, 0, 1261, 0, 1264, 1098, 1100, 0, 1127,
	1128, 1129, 1269, 1270, 1143, 1156, 1161, 0, 1164, 0,
	0, 1165, 0, 615, 1045, 0, 0, 1063, 1064, 0,
	1199, 0, 1204, 1205, 0, 1210, 0, 1214, 1225, 0,
	952, 909, 910, 957, 958, 0, 0, 900, 1311, 81,
	1312, 1309, 0, 1307, 1305, 1364, 0, 1373, 1374, 1383,
	1384, 1390, 0, 1396, 0, 86, 0, 0, 0, 1322,
	181, 0, 200, 0, 592, 0, 595, 585, 672, 673,
	0, 685, 677, 679, 680, 662, -2, 1348, 0, 0,
	0, 571, 1262, 0, 0, 1166, 0, 611, 612, 1053,
	1046, 0, 1031, 1032, 1050, 1185, 1187, 0, 0, 0,
	0, 951, 953, 954, 80, 0, 1308, 1071, 0, 1376,
	1377, 1404, 1402, 920, 927, 0, 87, 425, 418, 1348,
	0, 0, 0, 665, 666, 667, 668, 669, 670, 671,
	561, 1350, 129, 130, 491, 492, 493, 123, 0, 1104,
	1162, 1047, 0, 0, 0, 0, 1043, 1044, 0, 1200,
	0, 1206, 0, 1211, 0, 911, 912, 1310, 0, 0,
	597, 0, 599, 0, -2, 413, 426, 0, 175, 201,
	202, 0, 0, 205, 206, 207, 198, 199, 119, 0,
	0, 686, 0, 1351, 1352, 126, 0, 0, 1038, 1039,
	1040, 1041, 1042, 0, 0, 0, 1072, 1051, 598, 0,
	0, 368, 0, 608, 414, 415, 0, 421, 422, 423,
	424, 203, 204, 620, 0, 0, 568, 1263, 0, 1201,
	0, 1207, 0, 1212, 0, 600, 601, 609, 0, 416,
	0, 417, 0, 0, 0, 589, 0, 620, 1349, 1048,
	0, 0, 1070, 0, 610, 606, 427, 429, 430, 0,
	0, 428, 621, 590, 1202, 1208, 0, 431, 432, 433,
	602, 603, 604, 605,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 143, 3, 3, 3, 170, 162, 3,
	87, 89, 167, 165, 88, 166, 220, 168, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 655,
	151, 150, 152, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 172, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 173,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 140, 141, 142, 144, 145, 146,
	147, 148, 149, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 163, 164, 169, 171, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:597
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:610
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:611
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:615
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:651
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:657
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:663
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:668
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:672
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:678
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:682
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:688
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:694
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:700
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:704
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:709
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:713
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:719
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:723
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:729
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:735
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:766
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:772
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:790
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:803
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:807
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:821
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:825
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:829
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:839
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:854
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:858
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:869
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:875
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:882
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:888
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:896
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:900
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:906
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:918
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:930
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:934
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:940
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:946
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:950
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:954
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:958
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:963
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:964
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:968
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:972
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:978
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:982
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:988
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:997
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1001
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1013
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1017
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: NoScope}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:1023
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1027
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1033
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1037
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1041
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1047
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1051
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1055
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1059
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1065
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1069
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1073
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1079
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1085
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1092
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1101
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1105
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1112
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1116
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1121
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1125
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1131
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1136
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1141
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1147
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1152
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1158
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1163
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1167
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1173
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1177
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1183
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1189
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1196
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1203
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1208
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1213
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1218
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1225
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1232
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1243
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1250
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1254
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1260
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1264
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1268
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1272
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1276
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1280
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1286
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1290
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1296
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1300
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1306
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1310
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1316
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1320
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1326
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1330
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1336
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1340
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1346
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1351
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1356
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1360
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1365
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1369
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1373
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1384
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1393
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1402
		{
			yyVAL.str = ""
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1406
		{
			yyVAL.str = ""
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1415
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1419
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1425
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1431
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1436
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1441
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1446
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1451
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1456
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1461
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1465
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1470
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1474
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1479
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1485
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1491
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1495
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1501
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1505
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1509
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1515
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1519
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1524
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1528
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1533
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1539
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1545
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1550
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1555
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1561
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1569
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1576
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1580
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1584
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1588
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1592
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1602
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1609
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1613
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1619
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1623
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1627
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1631
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1635
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1639
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1643
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1647
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1652
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1656
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1660
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1664
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1668
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1677
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1681
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1685
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.str = Armscii8Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.str = ASCIIStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.str = Big5Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.str = UBinaryStr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = Cp1250Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = Cp1251Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.str = Cp1256Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.str = Cp1257Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = Cp850Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = Cp852Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.str = Cp866Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = Cp932Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = Dec8Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = EucjpmsStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = EuckrStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = Gb18030Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = Gb2312Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = GbkStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = Geostd8Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = GreekStr
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = HebrewStr
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = Hp8Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Keybcs2Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Koi8rStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Koi8uStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = Latin1Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = Latin2Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = Latin5Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = Latin7Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = MacceStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = MacromanStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = SjisStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = Swe7Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = Tis620Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = Ucs2Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = UjisStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = Utf16Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = Utf16leStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = Utf32Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = Utf8Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = Utf8mb4Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = Utf8Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1865
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1869
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1873
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1879
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1883
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1887
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1893
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1897
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1904
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1908
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1912
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1916
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1938
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1944
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1952
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1956
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1960
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1964
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1982
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1988
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2040
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2070
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2074
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2094
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2099
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2125
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2129
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2133
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2139
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2144
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2149
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2153
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2158
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2162
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2170
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2174
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2180
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2188
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2192
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2196
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2201
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2205
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2222
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2226
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2236
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2241
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2246
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2252
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2256
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2261
		{
			yyVAL.str = ""
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2265
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2269
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2275
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2280
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2284
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2290
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2294
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2300
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2304
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2309
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2313
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2317
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2321
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2325
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2329
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2335
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2339
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2345
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2349
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2353
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2357
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2361
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2366
		{
			yyVAL.str = ""
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2370
		{
			yyVAL.str = yyDollar[2].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2376
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2380
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2390
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2394
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2399
		{
			yyVAL.str = "key"
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2403
		{
			yyVAL.str = yyDollar[1].str
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2409
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2413
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2418
		{
			yyVAL.str = ""
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2428
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2432
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2438
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2442
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2448
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2452
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2458
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2462
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2468
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2474
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2478
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2482
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2486
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2490
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2495
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2499
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2505
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2511
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2517
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2521
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2525
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2530
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2534
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2540
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2546
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2552
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2556
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2560
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2564
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2568
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2573
		{
			yyVAL.str = ""
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2577
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2581
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2587
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2591
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2596
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2600
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2605
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2609
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2615
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2619
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2623
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2629
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2633
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2639
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2643
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2647
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2651
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2655
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2659
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2663
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2667
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2671
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2675
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2679
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2683
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2687
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2691
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2695
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2699
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2703
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2707
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2711
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2715
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2719
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2723
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2727
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2731
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2735
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2739
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2743
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2747
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2751
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2755
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2759
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2764
		{
			yyVAL.str = ""
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2772
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2791
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2795
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2799
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2804
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2810
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2814
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2819
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2823
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2828
		{
			yyVAL.str = ""
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2832
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2837
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2841
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2845
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2854
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2858
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2862
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2866
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 510:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2870
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2876
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2880
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2884
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2890
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2894
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2898
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2902
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2906
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2910
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2914
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2918
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2922
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2926
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2931
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2936
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2940
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2944
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2948
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2952
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2956
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2960
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2964
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2968
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2972
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2976
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2980
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2984
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3018
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3022
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3032
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3036
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3044
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3048
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3052
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3056
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3060
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3064
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3070
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3077
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3084
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3091
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3097
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3114
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3121
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3133
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3143
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3147
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3151
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3164
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3178
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3196
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3210
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3216
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3229
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3238
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3246
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3253
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3260
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3264
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3273
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3281
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3290
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3297
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3305
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3309
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3318
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3333
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3338
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3342
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3347
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3351
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3357
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3363
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3369
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3373
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3379
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3383
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3389
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3395
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3401
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3407
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3413
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3417
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3421
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3425
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3431
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3437
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3443
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3447
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3451
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3457
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3461
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3466
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3470
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3475
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3479
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3485
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3489
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3493
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3497
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3501
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3505
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3509
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3513
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3517
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3521
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3525
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3529
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3533
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3537
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3541
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3545
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3549
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3553
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3557
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3561
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3565
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3569
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3574
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3578
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3582
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3588
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3592
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3598
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3603
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3607
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3612
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3617
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3622
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3627
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3632
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3638
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3644
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3649
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3655
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3661
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3665
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3671
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3676
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3680
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3685
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3690
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3695
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3700
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3706
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3712
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3719
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3726
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3733
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3741
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3745
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3751
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3757
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3763
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3769
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3775
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3781
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3787
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3793
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3799
		{
			yyVAL.str = ""
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3803
		{
			yyVAL.str = ""
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3815
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3819
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3825
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3829
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3838
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3842
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3848
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3852
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3858
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3864
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3868
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3876
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3880
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3884
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3888
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3892
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3896
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3900
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3904
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3920
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3960
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3968
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3980
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3984
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3988
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4000
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4004
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4008
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4012
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4016
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4020
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4024
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4028
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4035
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4043
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4047
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4051
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4055
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4059
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4063
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4067
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4073
		{
			yyVAL.str = ""
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4077
		{
			yyVAL.str = "extended "
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4083
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4087
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4093
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4103
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4107
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4111
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4117
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4121
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4125
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4131
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4135
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4141
		{
			yyVAL.empty = struct{}{}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			yyVAL.empty = struct{}{}
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4149
		{
			yyVAL.empty = struct{}{}
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4155
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4173
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4180
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4184
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4188
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4192
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4199
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4203
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4209
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4215
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4219
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4224
		{
			yyVAL.empty = struct{}{}
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4226
		{
			yyVAL.empty = struct{}{}
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4229
		{
			yyVAL.empty = struct{}{}
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4231
		{
			yyVAL.empty = struct{}{}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4235
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4241
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4246
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4250
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4254
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4258
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4262
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4266
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4270
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.str = yyDollar[1].str
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.str = yyDollar[1].str
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
			yyVAL.str = yyDollar[1].str
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4290
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4294
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4298
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4302
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4307
		{
			yyVAL.str = ""
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4315
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4321
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4325
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4331
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4335
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4341
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4347
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4351
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4357
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4363
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4367
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4371
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4375
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4381
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4387
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4393
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4397
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4401
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4405
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4409
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4413
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4419
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4423
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4429
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4433
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4437
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4441
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4445
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4453
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4457
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4461
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4465
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4469
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4473
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4478
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4482
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4486
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4491
		{
			yyVAL.str = ""
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4495
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4500
		{
			setAllowComments(yylex, true)
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4504
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4510
		{
			yyVAL.strs = nil
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4514
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4520
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4524
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4528
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4533
		{
			yyVAL.str = ""
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4537
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4541
		{
			yyVAL.str = SQLCacheStr
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4546
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4550
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4554
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4560
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4564
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4574
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4579
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4583
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4589
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4593
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4602
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4607
		{
			yyVAL.strs = nil
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4611
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4615
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4619
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4623
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4629
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4633
		{
			yyVAL.str = SQLCacheStr
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.str = DistinctStr
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4641
		{
			yyVAL.str = DistinctStr
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4645
		{
			yyVAL.str = StraightJoinHint
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4653
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4659
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4663
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4669
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4673
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4677
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4681
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4686
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4690
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4694
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4701
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4706
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4710
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4716
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4722
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4726
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4736
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4740
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4744
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4748
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4754
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4758
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4764
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4768
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4773
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4777
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4782
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4786
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4792
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4796
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4802
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4806
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4812
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4816
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4820
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4824
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4830
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4834
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4847
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4851
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4855
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4859
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4865
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4867
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4871
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4873
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4877
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4879
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4882
		{
			yyVAL.empty = struct{}{}
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4884
		{
			yyVAL.empty = struct{}{}
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4887
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4891
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4895
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4902
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4908
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4912
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4916
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4922
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4928
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4932
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4936
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4940
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4946
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4950
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4960
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4964
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4970
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4974
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4980
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4989
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4995
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4999
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5005
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5009
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5013
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5017
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5022
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5026
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5030
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5034
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5044
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5051
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5055
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5059
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5063
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5067
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5071
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5075
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5081
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5085
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5089
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5093
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5099
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5103
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5107
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5111
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5115
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5119
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5123
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5127
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5131
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5135
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5139
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5145
		{
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5148
		{
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5166
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5170
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5174
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5178
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5182
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5186
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5190
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5194
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5198
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5202
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5208
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5212
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5216
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5220
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5224
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5228
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5232
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5236
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5240
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5244
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5248
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5252
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5256
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5260
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5264
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5268
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5272
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5276
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5280
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5292
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5318
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5324
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5328
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5334
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5338
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5344
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5348
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5352
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5358
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5362
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5369
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5373
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5377
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5381
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5385
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5391
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5395
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5399
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5403
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5407
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5413
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5417
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5422
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5426
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5432
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5436
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5441
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5445
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5450
		{
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5453
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5459
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5465
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5469
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5474
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5481
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5487
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5491
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5497
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5501
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5507
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5511
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5516
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5523
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5529
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5533
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5539
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5545
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5549
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5555
		{
			yyVAL.str = ""
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5559
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5565
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5569
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5576
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5580
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5584
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5588
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5594
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5598
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5602
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5606
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5610
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5614
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5618
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5624
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5628
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5632
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5639
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5645
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5649
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5659
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5663
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5673
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5677
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5681
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5685
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5689
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5693
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5697
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5701
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5705
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5709
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5720
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5724
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5730
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5734
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5739
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5743
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5747
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5751
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5755
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5759
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5763
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5767
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5771
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5775
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5779
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5783
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5787
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5791
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5795
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5799
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5803
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5807
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5811
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5815
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5819
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5823
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5827
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5831
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5835
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5839
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5843
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5847
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5851
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5855
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5859
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5863
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5867
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5871
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5875
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5879
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5883
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5887
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5891
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5895
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5899
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5903
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5907
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5911
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5915
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5919
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5923
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5931
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5935
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5939
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5943
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5947
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5951
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5955
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5959
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5963
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5967
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5971
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5975
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5979
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5983
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5987
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5991
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5995
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5999
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6003
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6007
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6011
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6015
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6019
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6023
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6027
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6031
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6035
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6039
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6043
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6047
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6057
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6061
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6065
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6069
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6075
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6079
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6085
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6114
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6131
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6135
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6139
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6143
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6160
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6164
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6168
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6172
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6198
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6202
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6207
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6211
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6217
		{
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6219
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6223
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6227
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6231
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6235
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6239
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6243
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6247
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6251
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6255
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6259
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6265
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6269
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6273
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6277
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6281
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6285
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6289
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6293
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6297
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6307
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6311
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6315
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6319
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6330
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6334
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6338
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6342
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6346
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6352
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6356
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6360
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6364
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6368
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6374
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6378
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6382
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6388
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6392
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6396
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6402
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6406
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6410
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6414
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6418
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6424
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6428
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6432
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6436
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6440
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6444
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6448
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6452
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6456
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6460
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6466
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6470
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6475
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6479
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6484
		{
			yyVAL.str = string("")
		}
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6488
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6494
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6498
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6504
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6509
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6513
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6519
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6523
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6527
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6531
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6546
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6550
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6556
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6560
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6565
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6575
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6581
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6585
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6590
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6594
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6599
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6603
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6609
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6615
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6619
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6625
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6630
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6634
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6638
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6647
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6653
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6657
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6661
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6666
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6670
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6674
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6678
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6682
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6689
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6693
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6697
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6701
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6707
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6711
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6715
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6719
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6724
		{
			yyVAL.str = ""
		}
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6728
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6732
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6736
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6741
		{
			yyVAL.str = ""
		}
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6745
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6751
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6755
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6760
		{
			yyVAL.str = ""
		}
	case 1349:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6764
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6769
		{
			yyVAL.str = "cascaded"
		}
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6773
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6777
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6782
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6786
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6792
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6798
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6804
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6813
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6817
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6822
		{
			yyVAL.str = ""
		}
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6826
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6832
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6836
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6842
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6846
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6850
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6855
		{
			yyVAL.str = ""
		}
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6859
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6863
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6868
		{
			yyVAL.str = ""
		}
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6872
		{
			yyVAL.str = " header"
		}
	case 1372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6877
		{
			yyVAL.str = ""
		}
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6881
		{
			yyVAL.str = " manifest on"
		}
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6885
		{
			yyVAL.str = " manifest off"
		}
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6890
		{
			yyVAL.str = ""
		}
	case 1376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6894
		{
			yyVAL.str = " overwrite on"
		}
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6898
		{
			yyVAL.str = " overwrite off"
		}
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6904
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6909
		{
			yyVAL.str = ""
		}
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6913
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6919
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6923
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6929
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6933
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6938
		{
			yyVAL.str = ""
		}
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6942
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6948
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6952
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6958
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1390:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6962
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6966
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6971
		{
			yyVAL.str = ""
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6975
		{
			yyVAL.str = " optionally"
		}
	case 1394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6988
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6992
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6996
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7000
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7004
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7010
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7014
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7018
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1402:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7022
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7027
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7031
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7037
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7041
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7047
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7051
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7057
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7061
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7066
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7076
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7080
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7086
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:7092
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7096
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7102
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7106
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7110
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7114
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7120
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7124
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7128
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7135
		{
			yyVAL.str = "charset"
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7145
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7149
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7153
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7162
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7164
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7167
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7169
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7172
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7174
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7177
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7179
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7182
		{
			yyVAL.empty = struct{}{}
		}
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7184
		{
			yyVAL.empty = struct{}{}
		}
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7186
		{
			yyVAL.empty = struct{}{}
		}
	case 1444:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7190
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7195
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7199
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7204
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7206
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7210
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7216
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7220
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7227
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7233
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7237
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7243
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7247
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7254
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7821
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7830
		{
			decNesting(yylex)
		}
	case 2002:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7835
		{
			skipToEnd(yylex)
		}
	case 2003:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7840
		{
			skipToEnd(yylex)
		}
	case 2004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7844
		{
			skipToEnd(yylex)
		}
	case 2005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7848
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
