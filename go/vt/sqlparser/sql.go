// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const QUERIES = 57561
const SCHEMA = 57562
const TABLE = 57563
const INDEX = 57564
const VIEW = 57565
const TO = 57566
const IGNORE = 57567
const IF = 57568
const PRIMARY = 57569
const COLUMN = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const KEY_BLOCK_SIZE = 57573
const CHECK = 57574
const INDEXES = 57575
const ACTION = 57576
const CASCADE = 57577
const CONSTRAINT = 57578
const FOREIGN = 57579
const NO = 57580
const REFERENCES = 57581
const RESTRICT = 57582
const SHOW = 57583
const DESCRIBE = 57584
const EXPLAIN = 57585
const DATE = 57586
const ESCAPE = 57587
const REPAIR = 57588
const OPTIMIZE = 57589
const TRUNCATE = 57590
const COALESCE = 57591
const EXCHANGE = 57592
const REBUILD = 57593
const PARTITIONING = 57594
const REMOVE = 57595
const PREPARE = 57596
const EXECUTE = 57597
const MAXVALUE = 57598
const PARTITION = 57599
const REORGANIZE = 57600
const LESS = 57601
const THAN = 57602
const PROCEDURE = 57603
const TRIGGER = 57604
const VINDEX = 57605
const VINDEXES = 57606
const DIRECTORY = 57607
const NAME = 57608
const UPGRADE = 57609
const STATUS = 57610
const VARIABLES = 57611
const WARNINGS = 57612
const CASCADED = 57613
const DEFINER = 57614
const OPTION = 57615
const SQL = 57616
const UNDEFINED = 57617
const SEQUENCE = 57618
const MERGE = 57619
const TEMPORARY = 57620
const TEMPTABLE = 57621
const INVOKER = 57622
const SECURITY = 57623
const FIRST = 57624
const AFTER = 57625
const LAST = 57626
const VITESS_MIGRATION = 57627
const CANCEL = 57628
const RETRY = 57629
const LAUNCH = 57630
const COMPLETE = 57631
const CLEANUP = 57632
const THROTTLE = 57633
const UNTHROTTLE = 57634
const EXPIRE = 57635
const RATIO = 57636
const VITESS_THROTTLER = 57637
const BEGIN = 57638
const START = 57639
const TRANSACTION = 57640
const COMMIT = 57641
const ROLLBACK = 57642
const SAVEPOINT = 57643
const RELEASE = 57644
const WORK = 57645
const CONSISTENT = 57646
const SNAPSHOT = 57647
const BIT = 57648
const TINYINT = 57649
const SMALLINT = 57650
const MEDIUMINT = 57651
const INT = 57652
const INTEGER = 57653
const BIGINT = 57654
const INTNUM = 57655
const REAL = 57656
const DOUBLE = 57657
const FLOAT_TYPE = 57658
const FLOAT4_TYPE = 57659
const FLOAT8_TYPE = 57660
const DECIMAL_TYPE = 57661
const NUMERIC = 57662
const TIME = 57663
const TIMESTAMP = 57664
const DATETIME = 57665
const YEAR = 57666
const CHAR = 57667
const VARCHAR = 57668
const BOOL = 57669
const CHARACTER = 57670
const VARBINARY = 57671
const NCHAR = 57672
const TEXT = 57673
const TINYTEXT = 57674
const MEDIUMTEXT = 57675
const LONGTEXT = 57676
const BLOB = 57677
const TINYBLOB = 57678
const MEDIUMBLOB = 57679
const LONGBLOB = 57680
const JSON = 57681
const JSON_SCHEMA_VALID = 57682
const JSON_SCHEMA_VALIDATION_REPORT = 57683
const ENUM = 57684
const GEOMETRY = 57685
const POINT = 57686
const LINESTRING = 57687
const POLYGON = 57688
const GEOMCOLLECTION = 57689
const GEOMETRYCOLLECTION = 57690
const MULTIPOINT = 57691
const MULTILINESTRING = 57692
const MULTIPOLYGON = 57693
const ASCII = 57694
const UNICODE = 57695
const NULLX = 57696
const AUTO_INCREMENT = 57697
const APPROXNUM = 57698
const SIGNED = 57699
const UNSIGNED = 57700
const ZEROFILL = 57701
const PURGE = 57702
const BEFORE = 57703
const CODE = 57704
const COLLATION = 57705
const COLUMNS = 57706
const DATABASES = 57707
const ENGINES = 57708
const EVENT = 57709
const EXTENDED = 57710
const FIELDS = 57711
const FULL = 57712
const FUNCTION = 57713
const GTID_EXECUTED = 57714
const KEYSPACES = 57715
const OPEN = 57716
const PLUGINS = 57717
const PRIVILEGES = 57718
const PROCESSLIST = 57719
const SCHEMAS = 57720
const TABLES = 57721
const TRIGGERS = 57722
const USER = 57723
const VGTID_EXECUTED = 57724
const VITESS_KEYSPACES = 57725
const VITESS_METADATA = 57726
const VITESS_MIGRATIONS = 57727
const VITESS_REPLICATION_STATUS = 57728
const VITESS_SHARDS = 57729
const VITESS_TABLETS = 57730
const VITESS_TARGET = 57731
const VSCHEMA = 57732
const VITESS_THROTTLED_APPS = 57733
const NAMES = 57734
const GLOBAL = 57735
const SESSION = 57736
const ISOLATION = 57737
const LEVEL = 57738
const READ = 57739
const WRITE = 57740
const ONLY = 57741
const REPEATABLE = 57742
const COMMITTED = 57743
const UNCOMMITTED = 57744
const SERIALIZABLE = 57745
const CURRENT_TIMESTAMP = 57746
const DATABASE = 57747
const CURRENT_DATE = 57748
const CURDATE = 57749
const NOW = 57750
const CURTIME = 57751
const CURRENT_TIME = 57752
const LOCALTIME = 57753
const LOCALTIMESTAMP = 57754
const CURRENT_USER = 57755
const UTC_DATE = 57756
const UTC_TIME = 57757
const UTC_TIMESTAMP = 57758
const SYSDATE = 57759
const DAY = 57760
const DAY_HOUR = 57761
const DAY_MICROSECOND = 57762
const DAY_MINUTE = 57763
const DAY_SECOND = 57764
const HOUR = 57765
const HOUR_MICROSECOND = 57766
const HOUR_MINUTE = 57767
const HOUR_SECOND = 57768
const MICROSECOND = 57769
const MINUTE = 57770
const MINUTE_MICROSECOND = 57771
const MINUTE_SECOND = 57772
const MONTH = 57773
const QUARTER = 57774
const SECOND = 57775
const SECOND_MICROSECOND = 57776
const YEAR_MONTH = 57777
const WEEK = 57778
const REPLACE = 57779
const CONVERT = 57780
const CAST = 57781
const SUBSTR = 57782
const SUBSTRING = 57783
const SEPARATOR = 57784
const TIMESTAMPADD = 57785
const TIMESTAMPDIFF = 57786
const WEIGHT_STRING = 57787
const LTRIM = 57788
const RTRIM = 57789
const TRIM = 57790
const JSON_ARRAY = 57791
const JSON_OBJECT = 57792
const JSON_QUOTE = 57793
const JSON_DEPTH = 57794
const JSON_TYPE = 57795
const JSON_LENGTH = 57796
const JSON_VALID = 57797
const JSON_ARRAY_APPEND = 57798
const JSON_ARRAY_INSERT = 57799
const JSON_INSERT = 57800
const JSON_MERGE = 57801
const JSON_MERGE_PATCH = 57802
const JSON_MERGE_PRESERVE = 57803
const JSON_REMOVE = 57804
const JSON_REPLACE = 57805
const JSON_SET = 57806
const JSON_UNQUOTE = 57807
const COUNT = 57808
const AVG = 57809
const MAX = 57810
const MIN = 57811
const SUM = 57812
const GROUP_CONCAT = 57813
const BIT_AND = 57814
const BIT_OR = 57815
const BIT_XOR = 57816
const STD = 57817
const STDDEV = 57818
const STDDEV_POP = 57819
const STDDEV_SAMP = 57820
const VAR_POP = 57821
const VAR_SAMP = 57822
const VARIANCE = 57823
const REGEXP_INSTR = 57824
const REGEXP_LIKE = 57825
const REGEXP_REPLACE = 57826
const REGEXP_SUBSTR = 57827
const ExtractValue = 57828
const UpdateXML = 57829
const GET_LOCK = 57830
const RELEASE_LOCK = 57831
const RELEASE_ALL_LOCKS = 57832
const IS_FREE_LOCK = 57833
const IS_USED_LOCK = 57834
const LOCATE = 57835
const POSITION = 57836
const ST_GeometryCollectionFromText = 57837
const ST_GeometryFromText = 57838
const ST_LineStringFromText = 57839
const ST_MultiLineStringFromText = 57840
const ST_MultiPointFromText = 57841
const ST_MultiPolygonFromText = 57842
const ST_PointFromText = 57843
const ST_PolygonFromText = 57844
const ST_GeometryCollectionFromWKB = 57845
const ST_GeometryFromWKB = 57846
const ST_LineStringFromWKB = 57847
const ST_MultiLineStringFromWKB = 57848
const ST_MultiPointFromWKB = 57849
const ST_MultiPolygonFromWKB = 57850
const ST_PointFromWKB = 57851
const ST_PolygonFromWKB = 57852
const ST_AsBinary = 57853
const ST_AsText = 57854
const ST_Dimension = 57855
const ST_Envelope = 57856
const ST_IsSimple = 57857
const ST_IsEmpty = 57858
const ST_GeometryType = 57859
const ST_X = 57860
const ST_Y = 57861
const ST_Latitude = 57862
const ST_Longitude = 57863
const ST_EndPoint = 57864
const ST_IsClosed = 57865
const ST_Length = 57866
const ST_NumPoints = 57867
const ST_StartPoint = 57868
const ST_PointN = 57869
const MATCH = 57870
const AGAINST = 57871
const BOOLEAN = 57872
const LANGUAGE = 57873
const WITH = 57874
const QUERY = 57875
const EXPANSION = 57876
const WITHOUT = 57877
const VALIDATION = 57878
const UNUSED = 57879
const ARRAY = 57880
const BYTE = 57881
const CUME_DIST = 57882
const DESCRIPTION = 57883
const DENSE_RANK = 57884
const EMPTY = 57885
const EXCEPT = 57886
const FIRST_VALUE = 57887
const GROUPING = 57888
const GROUPS = 57889
const JSON_TABLE = 57890
const LAG = 57891
const LAST_VALUE = 57892
const LATERAL = 57893
const LEAD = 57894
const NTH_VALUE = 57895
const NTILE = 57896
const OF = 57897
const OVER = 57898
const PERCENT_RANK = 57899
const RANK = 57900
const RECURSIVE = 57901
const ROW_NUMBER = 57902
const SYSTEM = 57903
const WINDOW = 57904
const ACTIVE = 57905
const ADMIN = 57906
const AUTOEXTEND_SIZE = 57907
const BUCKETS = 57908
const CLONE = 57909
const COLUMN_FORMAT = 57910
const COMPONENT = 57911
const DEFINITION = 57912
const ENFORCED = 57913
const ENGINE_ATTRIBUTE = 57914
const EXCLUDE = 57915
const FOLLOWING = 57916
const GET_MASTER_PUBLIC_KEY = 57917
const HISTOGRAM = 57918
const HISTORY = 57919
const INACTIVE = 57920
const INVISIBLE = 57921
const LOCKED = 57922
const MASTER_COMPRESSION_ALGORITHMS = 57923
const MASTER_PUBLIC_KEY_PATH = 57924
const MASTER_TLS_CIPHERSUITES = 57925
const MASTER_ZSTD_COMPRESSION_LEVEL = 57926
const NESTED = 57927
const NETWORK_NAMESPACE = 57928
const NOWAIT = 57929
const NULLS = 57930
const OJ = 57931
const OLD = 57932
const OPTIONAL = 57933
const ORDINALITY = 57934
const ORGANIZATION = 57935
const OTHERS = 57936
const PARTIAL = 57937
const PATH = 57938
const PERSIST = 57939
const PERSIST_ONLY = 57940
const PRECEDING = 57941
const PRIVILEGE_CHECKS_USER = 57942
const PROCESS = 57943
const RANDOM = 57944
const REFERENCE = 57945
const REQUIRE_ROW_FORMAT = 57946
const RESOURCE = 57947
const RESPECT = 57948
const RESTART = 57949
const RETAIN = 57950
const REUSE = 57951
const ROLE = 57952
const SECONDARY = 57953
const SECONDARY_ENGINE = 57954
const SECONDARY_ENGINE_ATTRIBUTE = 57955
const SECONDARY_LOAD = 57956
const SECONDARY_UNLOAD = 57957
const SIMPLE = 57958
const SKIP = 57959
const SRID = 57960
const THREAD_PRIORITY = 57961
const TIES = 57962
const UNBOUNDED = 57963
const VCPU = 57964
const VISIBLE = 57965
const RETURNING = 57966
const FORMAT_BYTES = 57967
const FORMAT_PICO_TIME = 57968
const PS_CURRENT_THREAD_ID = 57969
const PS_THREAD_ID = 57970
const GTID_SUBSET = 57971
const GTID_SUBTRACT = 57972
const WAIT_FOR_EXECUTED_GTID_SET = 57973
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57974
const FORMAT = 57975
const TREE = 57976
const VITESS = 57977
const TRADITIONAL = 57978
const VTEXPLAIN = 57979
const VEXPLAIN = 57980
const PLAN = 57981
const LOCAL = 57982
const LOW_PRIORITY = 57983
const NO_WRITE_TO_BINLOG = 57984
const LOGS = 57985
const ERROR = 57986
const GENERAL = 57987
const HOSTS = 57988
const OPTIMIZER_COSTS = 57989
const USER_RESOURCES = 57990
const SLOW = 57991
const CHANNEL = 57992
const RELAY = 57993
const EXPORT = 57994
const CURRENT = 57995
const ROW = 57996
const ROWS = 57997
const AVG_ROW_LENGTH = 57998
const CONNECTION = 57999
const CHECKSUM = 58000
const DELAY_KEY_WRITE = 58001
const ENCRYPTION = 58002
const ENGINE = 58003
const INSERT_METHOD = 58004
const MAX_ROWS = 58005
const MIN_ROWS = 58006
const PACK_KEYS = 58007
const PASSWORD = 58008
const FIXED = 58009
const DYNAMIC = 58010
const COMPRESSED = 58011
const REDUNDANT = 58012
const COMPACT = 58013
const ROW_FORMAT = 58014
const STATS_AUTO_RECALC = 58015
const STATS_PERSISTENT = 58016
const STATS_SAMPLE_PAGES = 58017
const STORAGE = 58018
const MEMORY = 58019
const DISK = 58020
const PARTITIONS = 58021
const LINEAR = 58022
const RANGE = 58023
const LIST = 58024
const SUBPARTITION = 58025
const SUBPARTITIONS = 58026
const HASH = 58027

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"NOW",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 50,
	14, 50,
	-2, 39,
	-1, 51,
	1, 158,
	703, 158,
	-2, 166,
	-1, 52,
	135, 166,
	176, 166,
	345, 166,
	-2, 522,
	-1, 60,
	36, 771,
	239, 771,
	250, 771,
	285, 785,
	286, 785,
	-2, 773,
	-1, 65,
	241, 809,
	-2, 807,
	-1, 120,
	238, 1540,
	-2, 132,
	-1, 122,
	1, 159,
	703, 159,
	-2, 166,
	-1, 133,
	136, 407,
	244, 407,
	-2, 511,
	-1, 152,
	135, 166,
	176, 166,
	345, 166,
	-2, 531,
	-1, 890,
	87, 1557,
	-2, 1411,
	-1, 891,
	87, 1558,
	221, 1562,
	-2, 1412,
	-1, 892,
	221, 1561,
	-2, 41,
	-1, 972,
	60, 883,
	-2, 898,
	-1, 1058,
	249, 42,
	254, 42,
	-2, 418,
	-1, 1143,
	1, 579,
	703, 579,
	-2, 166,
	-1, 1445,
	221, 1562,
	-2, 1412,
	-1, 1635,
	60, 884,
	-2, 903,
	-1, 1636,
	60, 885,
	-2, 904,
	-1, 1687,
	135, 166,
	176, 166,
	345, 166,
	-2, 457,
	-1, 1768,
	136, 407,
	244, 407,
	-2, 511,
	-1, 1777,
	249, 43,
	254, 43,
	-2, 419,
	-1, 2176,
	221, 1566,
	-2, 1560,
	-1, 2177,
	221, 1562,
	-2, 1558,
	-1, 2277,
	135, 166,
	176, 166,
	345, 166,
	-2, 458,
	-1, 2284,
	26, 187,
	-2, 189,
	-1, 2714,
	78, 97,
	88, 97,
	-2, 962,
	-1, 2783,
	678, 695,
	-2, 669,
	-1, 2975,
	50, 1508,
	-2, 1502,
	-1, 3740,
	678, 695,
	-2, 683,
	-1, 3829,
	90, 627,
	95, 627,
	105, 627,
	178, 627,
	179, 627,
	180, 627,
	181, 627,
	182, 627,
	183, 627,
	184, 627,
	185, 627,
	186, 627,
	187, 627,
	188, 627,
	189, 627,
	190, 627,
	191, 627,
	192, 627,
	193, 627,
	194, 627,
	195, 627,
	196, 627,
	197, 627,
	198, 627,
	199, 627,
	200, 627,
	201, 627,
	202, 627,
	203, 627,
	204, 627,
	205, 627,
	206, 627,
	207, 627,
	208, 627,
	209, 627,
	210, 627,
	211, 627,
	212, 627,
	213, 627,
	214, 627,
	215, 627,
	216, 627,
	217, 627,
	218, 627,
	219, 627,
	-2, 1922,
}

const yyPrivate = 57344

const yyLast = 50925

var yyAct = [...]int{
	1643, 906, 3913, 894, 85, 3433, 3434, 3902, 901, 3721,
	722, 3806, 3870, 2274, 3871, 3244, 3827, 3387, 3771, 893,
	1690, 2005, 1210, 1896, 3794, 3432, 3125, 3027, 2205, 3034,
	3705, 3637, 3085, 2988, 3090, 3087, 3086, 3084, 3089, 859,
	3088, 3076, 41, 1951, 3703, 3104, 5, 2614, 1650, 3374,
	2687, 704, 2348, 2992, 2989, 1208, 3283, 3105, 3277, 2207,
	3042, 3467, 2844, 2229, 854, 732, 3107, 2245, 853, 3303,
	2986, 2976, 2674, 700, 2167, 2780, 2248, 2749, 3269, 2316,
	2336, 2750, 2379, 2311, 2262, 970, 161, 85, 2828, 2748,
	1020, 989, 1090, 967, 2249, 2699, 42, 3131, 2666, 2250,
	2680, 1637, 2650, 2172, 2164, 40, 970, 2132, 2020, 2001,
	1959, 2820, 1775, 1793, 2357, 147, 2335, 2237, 2396, 1746,
	2318, 1030, 2741, 969, 1048, 973, 1679, 988, 2716, 1659,
	98, 2252, 1053, 102, 1617, 103, 2991, 1457, 2024, 1385,
	1027, 1370, 1613, 1892, 991, 1024, 1059, 3462, 1782, 1978,
	2333, 3693, 1056, 2648, 714, 1874, 1028, 1066, 1054, 2307,
	1055, 1678, 1006, 1664, 2308, 1008, 1441, 965, 709, 2934,
	2230, 2032, 105, 2131, 979, 2095, 1417, 976, 1199, 1950,
	83, 1903, 975, 702, 1741, 97, 1206, 1185, 165, 125,
	123, 974, 124, 130, 1767, 131, 1139, 91, 977, 1001,
	701, 708, 96, 104, 82, 3903, 1466, 2173, 2350, 2351,
	2352, 3756, 3375, 1461, 3073, 2350, 696, 2771, 996, 1000,
	2803, 2802, 691, 2394, 3330, 3367, 3854, 2836, 982, 2837,
	3437, 636, 3752, 2202, 2203, 1966, 1965, 3757, 1964, 1095,
	126, 1963, 1092, 3437, 1962, 1961, 2225, 132, 3751, 1934,
	1021, 1155, 694, 3848, 695, 1109, 1110, 1111, 1859, 1114,
	1115, 1116, 1117, 2646, 2972, 1120, 1121, 1122, 1123, 1124,
	1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
	1135, 1136, 3730, 1015, 983, 1016, 966, 1069, 968, 2,
	93, 93, 1070, 2773, 692, 1156, 1381, 1045, 2793, 2441,
	1644, 676, 990, 2383, 670, 3874, 1096, 1099, 1100, 2938,
	1981, 126, 1044, 1043, 1103, 1042, 93, 3436, 188, 910,
	911, 912, 3095, 1037, 1402, 2676, 3858, 910, 911, 912,
	3436, 3095, 855, 109, 110, 111, 1112, 114, 1032, 676,
	120, 3923, 127, 189, 3092, 1046, 630, 2382, 3249, 3752,
	3856, 3857, 3869, 3893, 3248, 170, 2796, 3706, 689, 690,
	2615, 1014, 857, 858, 1971, 1014, 857, 858, 961, 962,
	963, 964, 3150, 93, 972, 3855, 3807, 3633, 3093, 126,
	3632, 3380, 84, 670, 3381, 84, 1094, 3093, 1093, 3884,
	84, 3643, 2450, 3852, 860, 3399, 1372, 3388, 2730, 3795,
	2381, 3803, 1003, 1004, 3099, 670, 2690, 2376, 3642, 670,
	2010, 167, 3837, 3099, 168, 84, 3832, 3170, 86, 2647,
	1756, 1041, 2268, 1148, 1149, 667, 3024, 3025, 3023, 3398,
	3835, 2691, 2725, 2835, 3480, 2724, 2447, 187, 2726, 3841,
	3842, 2269, 2270, 3813, 1943, 1944, 2819, 3044, 3045, 1180,
	1181, 3813, 670, 1203, 3836, 1151, 1680, 2448, 1681, 1399,
	93, 1400, 1401, 93, 1175, 1163, 959, 958, 93, 1163,
	1164, 3722, 1176, 652, 1164, 1899, 3735, 2204, 1162, 1039,
	1161, 2737, 2287, 2286, 2683, 2684, 650, 1169, 3158, 3156,
	2439, 1942, 3127, 93, 2233, 2878, 684, 1946, 688, 3132,
	1676, 682, 1621, 670, 2821, 670, 2781, 2358, 1382, 2810,
	2811, 3120, 2806, 1138, 671, 3681, 3096, 3682, 1849, 3121,
	2417, 2397, 2418, 2327, 2419, 3096, 647, 2402, 3905, 1875,
	3875, 1371, 1178, 1179, 1201, 662, 2409, 2405, 2407, 2408,
	2406, 2410, 2411, 1184, 1113, 1144, 2321, 1418, 1196, 171,
	657, 3876, 2823, 1182, 2361, 3043, 3129, 3369, 177, 2401,
	660, 3280, 1850, 1183, 1851, 3368, 1177, 3046, 1202, 3147,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1426, 1428,
	1429, 1170, 2403, 2420, 3128, 1007, 1119, 1118, 2399, 3617,
	3441, 1760, 1089, 671, 2442, 2443, 2445, 2444, 2246, 1049,
	2073, 2400, 3365, 1050, 2774, 1050, 1040, 1088, 1087, 1086,
	1085, 1084, 1900, 1083, 1082, 671, 1081, 1076, 1624, 671,
	3046, 1025, 3849, 1025, 3881, 1061, 1062, 1023, 637, 3924,
	639, 653, 1025, 673, 1893, 672, 643, 2334, 641, 645,
	654, 646, 1002, 640, 2824, 651, 2387, 1754, 642, 655,
	656, 659, 663, 664, 665, 661, 658, 1098, 649, 674,
	2879, 2386, 671, 1061, 1889, 1373, 1106, 1097, 1207, 3066,
	1207, 1207, 2805, 1753, 1752, 2791, 1890, 1750, 3850, 1017,
	1011, 1009, 162, 1017, 1011, 1009, 2231, 2232, 634, 629,
	2937, 1433, 1434, 2320, 2065, 2054, 2055, 2056, 2057, 2067,
	2058, 2059, 2060, 2072, 2068, 2061, 2062, 2069, 2070, 2071,
	2063, 2064, 2066, 671, 2818, 671, 3364, 2817, 970, 1442,
	1447, 1448, 3718, 1451, 1677, 1452, 1454, 1455, 1456, 3317,
	1459, 1460, 1462, 1462, 3299, 1462, 1462, 1467, 1467, 1467,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1197, 2380, 1047, 3729, 1574, 2808,
	1576, 1577, 1578, 1579, 1580, 1364, 1365, 3281, 2772, 3435,
	87, 3809, 2795, 1467, 1467, 1467, 1467, 1467, 1467, 3809,
	1363, 1439, 3435, 2739, 907, 907, 3328, 3329, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 163, 3808, 1435, 1436, 1437, 1438, 2775, 175,
	907, 3808, 3397, 1386, 1449, 675, 2794, 3840, 1079, 1614,
	1861, 1860, 1862, 1863, 1864, 1880, 1781, 1077, 2449, 1068,
	2448, 1432, 92, 1142, 1453, 92, 668, 1010, 1380, 1036,
	92, 1010, 1038, 1159, 1432, 1165, 1166, 1167, 1168, 1386,
	183, 669, 2827, 1468, 1469, 1463, 1611, 1464, 1465, 1068,
	2378, 3839, 1879, 2845, 1150, 92, 3148, 3097, 3098, 1204,
	1205, 3232, 1620, 2721, 1160, 2686, 3097, 3098, 970, 1147,
	3101, 2623, 970, 670, 2013, 1645, 1647, 1668, 970, 3101,
	1575, 1153, 1173, 164, 169, 166, 172, 173, 174, 176,
	178, 179, 180, 181, 2324, 122, 2681, 635, 2275, 182,
	184, 185, 186, 1192, 1432, 1194, 1627, 2840, 3917, 1429,
	1631, 1396, 1612, 3022, 1186, 2233, 969, 2651, 2653, 2033,
	2462, 1067, 985, 1200, 1780, 3743, 2864, 1061, 1064, 1065,
	1041, 1025, 1033, 2034, 2325, 1058, 1062, 2847, 117, 1035,
	1034, 2323, 1904, 1191, 1193, 1158, 1091, 1396, 3360, 3293,
	1443, 1067, 2398, 1955, 1886, 1080, 1057, 1068, 1682, 1105,
	2025, 1629, 2479, 1630, 1078, 102, 1983, 103, 1581, 1582,
	1583, 1584, 1585, 1586, 2025, 2326, 1612, 2764, 1041, 1137,
	1984, 1430, 1431, 1982, 2830, 2322, 1400, 1401, 1039, 2829,
	1618, 3885, 1401, 1625, 1424, 1425, 1427, 1426, 1428, 1429,
	1876, 3476, 1877, 1605, 105, 1878, 2830, 2857, 2856, 2855,
	118, 2829, 2849, 3335, 2853, 3334, 2848, 1068, 2846, 1392,
	2365, 1790, 1384, 2851, 1789, 1779, 3877, 2375, 1883, 2373,
	1881, 1882, 2850, 1884, 1885, 1079, 1628, 1077, 1757, 1758,
	1759, 3318, 981, 1141, 2377, 3919, 3625, 1773, 1068, 1189,
	2852, 2854, 3394, 1190, 3395, 1392, 2454, 2455, 2456, 1067,
	1646, 1187, 2031, 1195, 1626, 1061, 1064, 1065, 1766, 1025,
	1068, 2370, 966, 1058, 1062, 3773, 1898, 1649, 3624, 1785,
	1615, 968, 1844, 671, 2652, 1172, 1143, 1188, 1157, 1905,
	1795, 1826, 1796, 1402, 1798, 1800, 1174, 1207, 1804, 1806,
	1808, 1810, 1812, 1673, 1674, 1834, 1835, 2231, 2232, 1644,
	2374, 1840, 1841, 2370, 1784, 1040, 2030, 2238, 2239, 1067,
	3774, 2169, 1783, 1783, 1071, 1061, 3615, 3915, 1749, 1073,
	3916, 1402, 3914, 1074, 1072, 1422, 1423, 1424, 1425, 1427,
	1426, 1428, 1429, 1776, 3410, 1764, 1763, 1762, 1140, 3409,
	1067, 3342, 2372, 2505, 1075, 1071, 1061, 3341, 1402, 3331,
	1073, 1632, 1402, 1040, 1074, 1072, 1973, 1975, 1976, 3074,
	1402, 1869, 1067, 3062, 1104, 2746, 1418, 1830, 1101, 1414,
	2467, 1415, 910, 911, 912, 3124, 2745, 188, 1867, 1418,
	1974, 2839, 3925, 2744, 1894, 1416, 1430, 1431, 1413, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1427, 1426, 1428, 1429,
	1856, 127, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427,
	1426, 1428, 1429, 1367, 170, 2330, 1870, 1755, 1399, 1402,
	1400, 1401, 126, 1044, 1043, 1868, 1042, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1427, 1426, 1428, 1429, 1854, 1906,
	1907, 1402, 1866, 1910, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1404, 1402, 1911, 1207, 1207, 1399, 3711, 1400, 1401,
	1918, 1919, 1920, 1853, 1855, 1932, 1852, 1842, 85, 3926,
	167, 85, 1931, 168, 1836, 1402, 1391, 1388, 1389, 1390,
	1395, 1397, 1394, 1399, 1393, 1400, 1401, 1399, 1833, 1400,
	1401, 1832, 1787, 2469, 1387, 1399, 187, 1400, 1401, 1831,
	1402, 1802, 3712, 2468, 2866, 676, 41, 3325, 676, 41,
	108, 1676, 1391, 1388, 1389, 1390, 1395, 1397, 1394, 1822,
	1393, 107, 1825, 106, 1827, 3889, 1644, 101, 108, 1653,
	1387, 3878, 2008, 2008, 2169, 3738, 3887, 1644, 2166, 107,
	3737, 106, 3715, 2006, 2006, 1402, 2009, 2168, 2728, 676,
	101, 2346, 2345, 2028, 1399, 1908, 1400, 1401, 2029, 3819,
	1644, 905, 1912, 3714, 1914, 1915, 1916, 1917, 3713, 1977,
	3620, 1921, 1418, 2344, 2343, 1654, 1399, 3604, 1400, 1401,
	2342, 2341, 1611, 1933, 3817, 1644, 1644, 1399, 3603, 1400,
	1401, 1644, 1644, 2091, 2517, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1427, 1426, 1428, 1429, 3475, 1402, 171, 1644,
	1399, 1402, 1400, 1401, 2672, 3904, 3731, 177, 1420, 1421,
	1422, 1423, 1424, 1425, 1427, 1426, 1428, 1429, 3473, 3815,
	1644, 3865, 1644, 3651, 99, 1399, 3406, 1400, 1401, 1939,
	1940, 1418, 2515, 2461, 83, 100, 1610, 83, 1612, 1956,
	1398, 1644, 1398, 1644, 2672, 3802, 2672, 3781, 1980, 1609,
	2162, 2672, 3777, 3650, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1427, 1426, 1428, 1429, 3764, 1644, 3378, 3728, 3608,
	1399, 1985, 1400, 1401, 1402, 1608, 2191, 3339, 2176, 2175,
	1987, 3690, 1644, 1402, 3324, 3688, 1644, 3607, 1402, 2012,
	1644, 3628, 1644, 1645, 2198, 3133, 1986, 1402, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2174, 2672, 3616, 3386, 1402, 2165, 3378, 1644, 2085,
	3130, 1418, 3065, 2035, 2036, 2037, 2038, 2222, 3064, 2096,
	2755, 162, 1399, 2742, 1400, 1401, 1399, 2049, 1400, 1401,
	2672, 3376, 2019, 2021, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1427, 1426, 1428, 1429, 2254, 2370, 1644, 3685, 1644,
	2782, 2179, 2180, 3297, 1644, 2582, 1644, 3671, 1644, 3055,
	3054, 2176, 2243, 1644, 3052, 3053, 3050, 3051, 2760, 2087,
	1607, 3268, 1644, 102, 2284, 103, 2156, 2157, 2158, 2159,
	2160, 3050, 3049, 2256, 2430, 1402, 2696, 1644, 2717, 3261,
	1644, 1402, 2429, 102, 2174, 103, 3030, 2448, 2804, 1399,
	2392, 1400, 1401, 1745, 2785, 2778, 2779, 99, 1399, 2221,
	1400, 1401, 1402, 1399, 101, 1400, 1401, 1030, 100, 2331,
	2672, 2671, 1399, 2391, 1400, 1401, 2215, 2199, 2216, 2472,
	1644, 2011, 1644, 2096, 2228, 2293, 2294, 2295, 2296, 2210,
	1399, 3031, 1400, 1401, 2278, 1443, 1935, 982, 1901, 2279,
	1030, 2718, 2717, 1865, 2178, 2260, 1857, 2181, 2182, 1847,
	1402, 2720, 2026, 2987, 2668, 3033, 2209, 1402, 2197, 3258,
	1644, 2688, 1843, 1644, 3292, 3256, 1644, 2283, 1979, 101,
	1839, 1838, 1837, 3028, 1655, 2288, 1198, 2289, 2290, 2291,
	2292, 2282, 2688, 2223, 2313, 2319, 3224, 1644, 1402, 2241,
	3044, 3045, 2359, 2299, 2300, 2301, 2302, 3029, 2265, 2266,
	3292, 2264, 2220, 1398, 1015, 2718, 1016, 2281, 3294, 2280,
	1399, 1402, 1400, 1401, 3769, 2448, 1399, 1402, 1400, 1401,
	2695, 163, 1402, 2356, 2329, 1745, 1744, 2472, 175, 3742,
	3035, 1688, 1687, 2696, 3222, 1644, 3165, 1399, 3017, 1400,
	1401, 3220, 1644, 2672, 2696, 2371, 3253, 2314, 2448, 3052,
	2960, 1402, 2364, 2267, 3292, 2367, 2472, 2368, 2310, 2303,
	2305, 2306, 2328, 107, 2582, 2332, 2340, 2502, 2501, 183,
	2370, 2353, 3218, 1644, 2236, 2696, 2384, 1402, 1648, 2363,
	2200, 1402, 2314, 2362, 1069, 1399, 1402, 1400, 1401, 1070,
	2366, 2011, 1399, 1957, 1400, 1401, 3879, 1402, 3043, 1783,
	2388, 2385, 1644, 2370, 2389, 2390, 3216, 1644, 2476, 1941,
	3046, 1888, 164, 169, 166, 172, 173, 174, 176, 178,
	179, 180, 181, 1399, 1675, 1400, 1401, 1052, 182, 184,
	185, 186, 1398, 2453, 1051, 3214, 1644, 93, 3845, 971,
	3784, 3639, 1651, 2395, 3605, 3487, 1399, 3359, 1400, 1401,
	3356, 3337, 1399, 3175, 1400, 1401, 3174, 1399, 1747, 1400,
	1401, 3212, 1644, 1402, 3126, 3210, 1644, 2312, 3122, 3310,
	3208, 1644, 2463, 2465, 3079, 3075, 2786, 2470, 2309, 2304,
	2473, 2475, 2474, 2298, 2297, 1872, 1399, 2481, 1400, 1401,
	1778, 2483, 2484, 1774, 2423, 1743, 2176, 2175, 119, 3077,
	2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499,
	1402, 2752, 1399, 1142, 1400, 1401, 1399, 93, 1400, 1401,
	3640, 1399, 2327, 1400, 1401, 2213, 3032, 3899, 1657, 2466,
	3304, 3305, 1399, 3897, 1400, 1401, 2506, 2507, 2508, 2509,
	2510, 3872, 2512, 2438, 1402, 2751, 2514, 3206, 1644, 3750,
	2519, 2520, 3676, 2521, 3307, 2513, 2524, 2446, 2525, 2527,
	2529, 2530, 2531, 2532, 2533, 2534, 2536, 2538, 2539, 2540,
	2542, 3071, 2544, 2545, 2547, 2549, 2551, 2553, 2555, 2557,
	2559, 2561, 2563, 2565, 2567, 2569, 2571, 2573, 2575, 2577,
	2579, 2581, 2457, 2752, 1656, 2584, 3070, 1980, 1399, 2588,
	1400, 1401, 3069, 2593, 2594, 2595, 2596, 1937, 2701, 2704,
	2705, 2706, 2702, 3343, 2703, 2707, 2607, 2608, 2609, 2610,
	2611, 2612, 2478, 2987, 2616, 2617, 1402, 2765, 2459, 1644,
	1402, 2424, 2619, 2621, 3309, 2485, 2622, 1402, 3006, 2624,
	2625, 2626, 2627, 2628, 2458, 1399, 2460, 1400, 1401, 1818,
	2635, 2636, 2500, 2637, 3009, 3005, 2640, 2642, 2222, 3010,
	2644, 3746, 2432, 2433, 3344, 3345, 3346, 2435, 2654, 1938,
	2656, 1402, 3007, 3641, 2227, 1652, 2436, 3008, 2511, 1399,
	2008, 1400, 1401, 2219, 1402, 3011, 970, 2705, 2706, 3347,
	3457, 2006, 3456, 2657, 1402, 2977, 2979, 3298, 2965, 2964,
	1819, 1820, 1821, 1402, 2980, 3710, 3466, 2693, 2694, 3285,
	3204, 1644, 3468, 3288, 3202, 1644, 2254, 3284, 1402, 970,
	2713, 3200, 1644, 2701, 2704, 2705, 2706, 2702, 2655, 2703,
	2707, 1402, 2974, 3304, 3305, 3048, 3348, 3349, 3350, 3036,
	3455, 1887, 957, 3040, 2735, 41, 2658, 2756, 2660, 2692,
	3039, 1402, 2673, 1108, 2710, 3198, 1644, 2712, 1402, 1107,
	99, 1399, 1402, 1400, 1401, 1399, 2033, 1400, 1401, 3726,
	3141, 100, 1399, 986, 1400, 1401, 2751, 2833, 3196, 1644,
	2034, 987, 1366, 2669, 3041, 2792, 3290, 3194, 1644, 3037,
	1402, 2711, 1618, 2682, 3038, 2645, 127, 101, 1402, 2238,
	2239, 3911, 3180, 1644, 2464, 3067, 1399, 1402, 1400, 1401,
	2427, 2665, 2416, 2738, 2740, 3163, 1644, 1402, 3824, 1399,
	1612, 1400, 1401, 1402, 2731, 3727, 2685, 3635, 3047, 1399,
	2715, 1400, 1401, 2790, 1402, 2643, 1644, 1979, 1399, 2670,
	1400, 1401, 2641, 1644, 2709, 2415, 2620, 1644, 1402, 2224,
	2719, 2414, 99, 1399, 2722, 1400, 1401, 2413, 2319, 101,
	2412, 2729, 2801, 100, 994, 995, 1399, 106, 1400, 1401,
	3270, 2452, 2732, 2754, 2597, 1644, 2963, 3698, 2757, 2758,
	3697, 2743, 2589, 1644, 2962, 1402, 1399, 3679, 1400, 1401,
	1402, 2580, 1644, 1399, 1402, 1400, 1401, 1399, 2753, 1400,
	1401, 2578, 1644, 3474, 3472, 1402, 697, 2576, 1644, 2761,
	107, 2762, 1402, 108, 2766, 2767, 2768, 1402, 2574, 1644,
	3471, 2798, 1402, 3464, 107, 1399, 106, 1400, 1401, 1766,
	1402, 3357, 3646, 1399, 1402, 1400, 1401, 3289, 2787, 2788,
	3287, 3080, 1399, 2354, 1400, 1401, 2868, 2869, 2870, 2871,
	2872, 1402, 1399, 1761, 1400, 1401, 1814, 108, 1399, 2797,
	1400, 1401, 993, 1402, 3463, 2877, 2688, 1402, 107, 1399,
	3612, 1400, 1401, 1402, 2572, 1644, 3445, 3278, 2570, 1644,
	1402, 3901, 3900, 1399, 3900, 1400, 1401, 2822, 2668, 2568,
	1644, 2858, 2880, 2503, 2825, 2841, 2566, 1644, 2211, 1402,
	1669, 2564, 1644, 1815, 1816, 1817, 2562, 1644, 1661, 1402,
	112, 113, 3901, 992, 2560, 1644, 998, 998, 2558, 1644,
	1399, 3716, 1400, 1401, 3323, 1399, 984, 1400, 1401, 1399,
	1954, 1400, 1401, 10, 1952, 2556, 1644, 9, 1402, 2859,
	1399, 2861, 1400, 1401, 3, 95, 1, 1399, 3361, 1400,
	1401, 3312, 1399, 1953, 1400, 1401, 8, 1399, 2747, 1400,
	1401, 2777, 1369, 1368, 3263, 1399, 3327, 1400, 1401, 1399,
	3834, 1400, 1401, 648, 2860, 2201, 1616, 2932, 3873, 2831,
	1402, 3830, 2832, 2554, 1644, 2882, 1399, 3831, 1400, 1401,
	1858, 1848, 3389, 2552, 1644, 2130, 3636, 3083, 1399, 2360,
	1400, 1401, 1399, 3355, 1400, 1401, 2842, 2317, 1399, 1060,
	1400, 1401, 152, 2276, 2277, 1399, 108, 1400, 1401, 3797,
	116, 1018, 2550, 1644, 2843, 2939, 115, 107, 2873, 106,
	2254, 1063, 1171, 2355, 1399, 3379, 1400, 1401, 101, 2944,
	2736, 1402, 2285, 2165, 1399, 2165, 1400, 1401, 1694, 1692,
	2912, 1693, 1691, 2994, 2996, 85, 1696, 1402, 2254, 2254,
	2254, 2254, 2254, 1402, 2548, 1644, 1695, 3149, 2256, 2504,
	3231, 1945, 3014, 1399, 683, 1400, 1401, 2967, 2254, 2799,
	2708, 2254, 677, 2940, 190, 2942, 2943, 1683, 2914, 2999,
	2916, 1662, 3245, 973, 1102, 638, 2256, 2256, 2256, 2256,
	2256, 1402, 2944, 3016, 1898, 2968, 2927, 2928, 2929, 2930,
	3056, 2393, 2955, 644, 1450, 1399, 2256, 1400, 1401, 2256,
	1936, 2961, 2723, 1013, 2966, 2546, 1644, 1005, 2959, 2212,
	2659, 2969, 2922, 2923, 2924, 2925, 2926, 1012, 2981, 2982,
	3613, 2541, 1644, 2995, 3282, 3100, 2973, 2537, 1644, 2941,
	975, 3000, 2975, 3018, 3003, 3108, 3019, 3001, 3002, 974,
	3004, 2675, 102, 3012, 103, 3020, 2978, 2971, 2998, 2956,
	2957, 2958, 1642, 1638, 3709, 2984, 1399, 3026, 1400, 1401,
	3465, 3782, 2733, 1658, 3252, 2535, 1644, 1639, 3059, 2477,
	3057, 3058, 1399, 2023, 1400, 1401, 1440, 2253, 1399, 3143,
	1400, 1401, 3440, 1972, 3060, 3061, 706, 705, 703, 2661,
	1402, 2689, 2217, 2218, 1641, 1402, 1640, 1405, 3110, 3160,
	3161, 3162, 3111, 3164, 3166, 3102, 2319, 1402, 895, 3081,
	2649, 1670, 1402, 3117, 2700, 2698, 1399, 3173, 1400, 1401,
	2697, 2425, 3177, 3178, 3179, 3181, 3182, 3183, 3184, 3185,
	3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3195, 3197,
	3199, 3201, 3203, 3205, 3207, 3209, 3211, 3213, 3215, 3217,
	3219, 3221, 3223, 3144, 3136, 3225, 3137, 3227, 3228, 3229,
	3134, 2261, 3233, 3234, 3235, 3236, 3237, 3238, 3239, 3240,
	3241, 3242, 3243, 3154, 2528, 1644, 3306, 1402, 3302, 2526,
	1644, 3250, 1402, 3826, 3254, 2255, 3255, 3257, 2251, 3260,
	3262, 3259, 3264, 3265, 3266, 3267, 3230, 2667, 845, 844,
	3273, 715, 707, 699, 843, 3151, 3152, 842, 3153, 1402,
	3320, 3155, 3109, 3157, 1402, 3159, 3810, 2807, 3123, 2809,
	2734, 3119, 3247, 1402, 1383, 1399, 1634, 1400, 1401, 3251,
	1399, 693, 1400, 1401, 1402, 3295, 3296, 1031, 3146, 3300,
	3733, 1402, 1399, 2451, 1400, 1401, 1402, 1399, 3169, 1400,
	1401, 1633, 2052, 2053, 1402, 3740, 3091, 3276, 1402, 2254,
	3373, 3226, 3072, 2990, 3145, 2783, 3172, 2347, 2990, 68,
	45, 3704, 3319, 3103, 3770, 3274, 3271, 3272, 1402, 841,
	838, 3442, 3443, 3444, 3279, 2935, 1402, 3286, 2936, 3753,
	3301, 3754, 837, 3171, 3755, 2080, 1379, 2256, 3168, 3291,
	1376, 3847, 3311, 1947, 1402, 94, 36, 2639, 35, 3315,
	3316, 34, 1399, 3308, 1400, 1401, 1402, 1399, 2638, 1400,
	1401, 33, 1402, 32, 3313, 2634, 2993, 1402, 26, 25,
	2633, 24, 23, 22, 3314, 3110, 3321, 3322, 2632, 3111,
	29, 1402, 2631, 19, 1399, 3377, 1400, 1401, 21, 1399,
	20, 1400, 1401, 3338, 3082, 3340, 3383, 3384, 1399, 1402,
	1400, 1401, 2630, 1402, 18, 3094, 3868, 3139, 3140, 1399,
	2629, 1400, 1401, 3332, 3333, 3910, 1399, 121, 1400, 1401,
	54, 1399, 1402, 1400, 1401, 1403, 1402, 3396, 2618, 1399,
	3400, 1400, 1401, 1399, 51, 1400, 1401, 49, 129, 128,
	2613, 52, 48, 1145, 1642, 1638, 2606, 3385, 1402, 46,
	31, 2605, 30, 1399, 1458, 1400, 1401, 3411, 1402, 1639,
	17, 1399, 1402, 1400, 1401, 2604, 3366, 16, 15, 14,
	3370, 3371, 3372, 13, 12, 11, 7, 6, 39, 1399,
	38, 1400, 1401, 2603, 1635, 1636, 1641, 2602, 1640, 28,
	37, 1399, 27, 1400, 1401, 1402, 3401, 1399, 4, 1400,
	1401, 2770, 1399, 1402, 1400, 1401, 2601, 2349, 0, 0,
	2600, 0, 3431, 0, 0, 0, 1399, 0, 1400, 1401,
	0, 1402, 0, 0, 0, 3439, 0, 1402, 0, 0,
	0, 0, 2599, 3446, 1399, 0, 1400, 1401, 1399, 0,
	1400, 1401, 2598, 0, 0, 0, 2592, 0, 0, 0,
	0, 3454, 0, 3458, 3459, 0, 0, 1399, 0, 1400,
	1401, 1399, 0, 1400, 1401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3438, 2994, 3405, 85, 2591,
	2994, 0, 3460, 1399, 0, 1400, 1401, 2590, 0, 0,
	1402, 0, 0, 1399, 0, 1400, 1401, 1399, 0, 1400,
	1401, 2008, 0, 0, 0, 2587, 3362, 3363, 1402, 0,
	0, 2586, 2006, 0, 3489, 3461, 41, 0, 0, 3470,
	3481, 0, 0, 3469, 0, 0, 0, 3477, 3479, 0,
	1399, 0, 1400, 1401, 0, 0, 0, 1402, 1399, 0,
	1400, 1401, 0, 0, 3490, 3491, 0, 3619, 0, 3429,
	0, 0, 0, 0, 3627, 3493, 1399, 0, 1400, 1401,
	0, 0, 1399, 3634, 1400, 1401, 0, 0, 0, 0,
	0, 0, 0, 0, 2585, 0, 0, 0, 0, 0,
	3609, 0, 3610, 3644, 3645, 0, 3647, 0, 3648, 3649,
	3611, 0, 2583, 3652, 3653, 3654, 3655, 3656, 3657, 3658,
	3659, 3660, 3661, 3662, 3663, 3664, 3665, 3666, 3667, 3668,
	3669, 3670, 3626, 3672, 3675, 3483, 3631, 3630, 3673, 3674,
	1660, 2543, 0, 0, 3638, 1399, 2008, 1400, 1401, 3684,
	3686, 3687, 3689, 3691, 3692, 3694, 0, 2006, 0, 3677,
	3621, 3622, 3623, 1399, 0, 1400, 1401, 0, 0, 3485,
	0, 0, 0, 0, 0, 0, 0, 1748, 0, 0,
	0, 0, 2994, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1399, 3724, 1400, 1401, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1902, 3614, 3708, 3678, 3702,
	3699, 3700, 3680, 3719, 3701, 0, 3683, 3717, 0, 3734,
	0, 0, 0, 0, 0, 2990, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1402, 0, 0, 0, 0, 3723, 0,
	0, 0, 0, 0, 0, 0, 0, 1402, 0, 0,
	0, 0, 0, 0, 3749, 41, 0, 891, 3739, 3741,
	0, 3736, 0, 0, 0, 0, 0, 0, 0, 2993,
	0, 0, 0, 2993, 3765, 0, 1402, 0, 0, 0,
	3766, 3767, 1402, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1402,
	0, 0, 3778, 0, 3779, 0, 0, 0, 3759, 85,
	0, 3760, 193, 1402, 3720, 193, 0, 2523, 0, 681,
	0, 0, 0, 0, 687, 0, 0, 3768, 3804, 3805,
	3775, 2522, 0, 0, 0, 193, 0, 0, 0, 3811,
	3618, 0, 3814, 3816, 3818, 0, 3812, 41, 0, 0,
	193, 3783, 3785, 3788, 3796, 3793, 3790, 3789, 3787, 3792,
	2518, 3791, 0, 0, 0, 0, 2516, 3846, 1399, 0,
	1400, 1401, 0, 0, 0, 687, 193, 687, 3638, 3799,
	3822, 0, 1399, 2482, 1400, 1401, 0, 3825, 3843, 0,
	3833, 3811, 3838, 0, 3748, 0, 0, 2471, 3812, 3853,
	0, 0, 3758, 0, 0, 0, 3863, 3864, 0, 3851,
	0, 1399, 0, 1400, 1401, 0, 0, 1399, 0, 1400,
	1401, 0, 3862, 0, 0, 1967, 1968, 1969, 1970, 3867,
	0, 3780, 3725, 0, 1399, 0, 1400, 1401, 0, 0,
	3886, 3888, 3890, 0, 0, 0, 0, 0, 1399, 3883,
	1400, 1401, 0, 1898, 3882, 2993, 0, 2008, 0, 3891,
	0, 3894, 3892, 0, 3898, 3896, 3744, 0, 2006, 3811,
	3895, 0, 3909, 0, 2014, 2015, 3812, 3906, 0, 2017,
	0, 998, 998, 2022, 3918, 3912, 0, 2027, 3921, 3922,
	0, 0, 3920, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2008, 3929, 3930, 3674, 2074, 2075, 2076, 2077,
	2078, 2079, 2081, 2006, 2086, 3927, 2088, 2089, 2090, 0,
	2092, 2093, 2094, 3928, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122,
	2123, 2124, 2125, 2126, 2127, 2128, 2129, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145,
	2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155,
	0, 0, 3732, 0, 1453, 2161, 0, 2163, 0, 2170,
	2171, 998, 0, 998, 998, 998, 998, 998, 0, 0,
	0, 0, 0, 0, 2183, 2184, 2185, 2186, 2187, 2188,
	2189, 2190, 0, 2192, 2193, 2194, 2195, 2196, 0, 2990,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 998, 127, 0, 149, 0, 0, 0, 0, 0,
	0, 0, 3880, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 2234, 2235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 2273,
	0, 0, 148, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 136, 137, 159, 158, 187, 0, 0,
	2776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2315, 0, 0, 127, 0, 149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 148, 84, 43, 44, 86, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 90, 168, 0, 0, 47, 75,
	76, 0, 73, 77, 0, 0, 153, 134, 156, 141,
	133, 74, 154, 155, 1769, 1770, 159, 158, 187, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 142,
	0, 1619, 0, 0, 0, 0, 0, 193, 0, 193,
	61, 0, 193, 145, 143, 138, 139, 140, 144, 0,
	0, 0, 93, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 687, 0, 687, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 0, 0, 687, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 960,
	0, 0, 0, 0, 0, 0, 0, 153, 1771, 156,
	0, 1768, 0, 154, 155, 1445, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1026, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 53, 56, 55, 58, 0, 72, 0, 0, 81,
	78, 0, 2480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2486, 2487, 2488, 2489, 0, 0, 0, 0,
	0, 0, 0, 60, 89, 88, 0, 0, 70, 71,
	57, 0, 0, 0, 0, 157, 79, 80, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1458, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 63,
	0, 64, 65, 66, 67, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 1445,
	0, 0, 0, 0, 0, 0, 0, 0, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	0, 127, 151, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 0, 170, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 0, 0, 193, 0, 0, 175,
	687, 687, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 148, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 168, 0, 0, 687, 0, 0, 193,
	183, 0, 0, 1660, 0, 0, 0, 0, 0, 87,
	0, 687, 1769, 1770, 159, 158, 187, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 0, 151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 169, 166, 172, 173, 174, 176,
	178, 179, 180, 181, 687, 0, 0, 0, 0, 182,
	184, 185, 186, 163, 0, 0, 0, 1445, 0, 0,
	175, 0, 0, 687, 687, 0, 687, 0, 687, 687,
	0, 687, 687, 687, 687, 687, 687, 0, 0, 0,
	0, 0, 0, 0, 1445, 0, 0, 1445, 687, 1445,
	193, 0, 0, 0, 92, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 153, 1771, 156, 0, 1768,
	193, 154, 155, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 687, 0, 193, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 687,
	0, 193, 0, 0, 164, 169, 166, 172, 173, 174,
	176, 178, 179, 180, 181, 0, 0, 0, 193, 0,
	182, 184, 185, 186, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 998,
	0, 0, 2862, 2863, 0, 0, 2865, 0, 0, 2867,
	0, 1146, 0, 1152, 0, 0, 1154, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 2874, 2875,
	2876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2881, 0, 0, 2883, 2884, 2885, 0, 0, 0, 2886,
	2887, 0, 0, 2888, 0, 2889, 0, 0, 0, 0,
	0, 0, 2890, 0, 2891, 0, 0, 0, 2892, 0,
	2893, 1375, 0, 2894, 0, 2895, 0, 2896, 0, 2897,
	0, 2898, 0, 2899, 0, 2900, 0, 2901, 0, 2902,
	0, 2903, 0, 2904, 0, 2905, 0, 2906, 0, 2907,
	0, 2908, 0, 2909, 157, 2910, 0, 2911, 0, 2133,
	2913, 0, 0, 2915, 0, 0, 2917, 2918, 2919, 2920,
	687, 687, 0, 0, 2921, 2133, 2133, 2133, 2133, 2133,
	0, 0, 0, 687, 0, 0, 0, 0, 0, 0,
	2931, 0, 193, 0, 0, 0, 0, 0, 0, 998,
	0, 0, 0, 0, 0, 0, 2945, 2946, 2947, 2948,
	2949, 2950, 3866, 0, 0, 2951, 2952, 0, 2953, 0,
	2954, 0, 1711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	1445, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 2985, 0, 1445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 175, 0,
	3015, 0, 0, 0, 687, 687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3078, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1699, 0, 0, 0,
	0, 0, 164, 169, 166, 172, 173, 174, 176, 178,
	179, 180, 181, 2177, 0, 0, 0, 0, 182, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 687, 1672, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3167, 0, 0, 0, 0, 0, 0,
	1712, 1689, 0, 0, 0, 0, 193, 3176, 0, 687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 687, 0, 0, 2177, 193, 0, 193,
	0, 193, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1725, 1728, 1729, 1730, 1731, 1732, 1733, 0,
	1734, 1735, 1737, 1738, 1736, 1739, 1740, 1713, 1714, 1715,
	1716, 1697, 1698, 1726, 1828, 1700, 0, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 0, 0, 1710, 1717,
	1718, 1719, 1720, 687, 1721, 1722, 1723, 1724, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	687, 0, 0, 890, 0, 0, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1909, 0, 0, 0, 0, 0, 0, 1913,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 0, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 0, 687, 0,
	0, 0, 687, 687, 666, 0, 0, 0, 0, 0,
	686, 0, 3358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 3382, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 193, 0, 0,
	193, 686, 193, 686, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 0,
	3402, 0, 3403, 0, 193, 3404, 0, 0, 3407, 3408,
	0, 0, 0, 687, 0, 0, 0, 3412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3413, 0, 3414, 0, 3415, 0, 3416, 0, 3417,
	0, 3418, 0, 3419, 0, 3420, 0, 3421, 0, 3422,
	0, 3423, 0, 3424, 0, 3425, 0, 3426, 0, 3427,
	0, 3428, 0, 0, 0, 0, 0, 3430, 0, 0,
	0, 0, 0, 0, 0, 0, 1960, 0, 0, 1445,
	0, 2177, 0, 0, 0, 0, 0, 0, 0, 0,
	3447, 0, 0, 3448, 0, 3449, 3450, 0, 3451, 0,
	3452, 0, 0, 0, 0, 3453, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 847, 0, 0, 0, 0, 0, 0, 0, 0,
	3478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3486, 0, 0, 3488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3606, 0, 191, 0, 0, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 980, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 999, 999, 0, 0, 0, 0, 0, 0, 0,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 0,
	3707, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2240, 0, 0, 0, 0, 0, 0,
	0, 2244, 0, 2247, 0, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 193, 193,
	193, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3747, 0, 0, 0, 0, 0, 0,
	0, 193, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 1362, 686, 686, 0, 0, 193, 0, 0, 0,
	0, 0, 3761, 0, 0, 3762, 0, 3763, 0, 0,
	0, 0, 686, 0, 0, 0, 0, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1444, 0, 0, 1960, 0, 0, 0, 0, 0,
	0, 2404, 0, 0, 0, 0, 0, 0, 0, 0,
	2421, 2422, 0, 687, 2426, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2431, 0, 0, 0, 0,
	0, 0, 2434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3844, 0, 0, 0, 0, 0, 0, 2437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3859, 0, 3860, 0, 3861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 0, 3907, 0, 3908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	687, 0, 1711, 0, 0, 1444, 0, 0, 0, 0,
	0, 633, 0, 633, 687, 0, 633, 0, 1445, 0,
	0, 687, 687, 1445, 193, 193, 193, 193, 193, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 193, 0, 193, 0, 0, 193, 193, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 686, 0, 0,
	0, 633, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 1446,
	0, 0, 686, 0, 0, 0, 687, 0, 0, 1445,
	0, 0, 0, 0, 687, 0, 0, 686, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 1742, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 1699, 0, 0, 0,
	0, 0, 193, 0, 0, 193, 0, 0, 0, 0,
	686, 0, 1777, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 1444, 1788, 0, 0, 1791, 1792, 686,
	686, 0, 686, 0, 686, 686, 0, 686, 686, 686,
	686, 686, 686, 0, 0, 0, 0, 0, 0, 0,
	1444, 1823, 1824, 1444, 686, 1444, 0, 1829, 0, 0,
	0, 2714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1712, 0, 0, 0, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1891, 0, 0, 686, 0, 0, 0, 0,
	687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1446, 0, 2763, 0, 0, 0, 193,
	0, 0, 1725, 1728, 1729, 1730, 1731, 1732, 1733, 686,
	1734, 1735, 1737, 1738, 1736, 1739, 1740, 1713, 1714, 1715,
	1716, 1697, 1698, 1726, 0, 1700, 0, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 0, 0, 1710, 1717,
	1718, 1719, 1720, 0, 1721, 1722, 1723, 1724, 0, 0,
	633, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 2812, 2813, 2814, 2815, 2816, 0, 0, 0, 0,
	980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 1960, 2826, 0, 0, 0,
	0, 0, 0, 633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 193, 193, 193,
	2834, 633, 0, 0, 0, 0, 0, 687, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1446, 0, 0, 687, 687, 687, 687, 0, 0,
	0, 846, 0, 0, 0, 0, 686, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1446, 686,
	0, 1446, 0, 1446, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 685, 0,
	0, 0, 0, 0, 0, 1897, 686, 0, 0, 0,
	0, 0, 0, 908, 0, 2169, 1444, 0, 909, 0,
	0, 0, 633, 0, 0, 2016, 0, 686, 2007, 633,
	0, 0, 0, 1444, 0, 0, 0, 0, 1922, 1923,
	633, 633, 633, 633, 633, 633, 633, 0, 0, 1022,
	0, 1029, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1445, 0, 0, 0, 0, 687, 0, 687, 0, 0,
	0, 915, 916, 917, 918, 919, 920, 921, 922, 923,
	924, 925, 926, 927, 928, 929, 930, 931, 932, 933,
	934, 935, 936, 937, 938, 939, 940, 941, 942, 943,
	944, 945, 946, 947, 948, 949, 950, 951, 952, 953,
	954, 955, 956, 0, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 687, 3068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 686, 0, 3118, 0, 0,
	0, 0, 0, 0, 0, 0, 633, 0, 0, 686,
	0, 0, 686, 0, 0, 0, 3135, 0, 0, 3138,
	0, 0, 687, 0, 0, 0, 687, 687, 0, 0,
	0, 0, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 0,
	0, 0, 0, 0, 1446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 999, 999, 0, 0,
	0, 1446, 0, 0, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 0, 0, 0, 2337, 2338, 2339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	0, 0, 686, 1786, 0, 0, 1786, 0, 1786, 0,
	0, 0, 0, 0, 2369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 687, 686, 0, 0, 0, 686, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 999, 1897, 999, 999,
	999, 999, 999, 0, 0, 0, 0, 687, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3336, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 999, 0, 3351, 0,
	0, 3352, 3353, 3354, 0, 0, 0, 0, 0, 0,
	980, 0, 0, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 633, 1445, 0, 687, 0, 0, 686,
	1897, 633, 0, 633, 0, 633, 2263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	687, 2177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 687, 908, 0,
	0, 0, 0, 909, 0, 1444, 0, 686, 0, 0,
	0, 0, 0, 2007, 0, 0, 0, 0, 1209, 0,
	1209, 1209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1374, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 687, 0, 687, 0, 0, 915, 916, 917, 918,
	919, 920, 921, 922, 923, 924, 925, 926, 927, 928,
	929, 930, 931, 932, 933, 934, 935, 936, 937, 938,
	939, 940, 941, 942, 943, 944, 945, 946, 947, 948,
	949, 950, 951, 952, 953, 954, 955, 956, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 633, 0, 0, 0, 0, 0,
	0, 633, 0, 0, 0, 0, 0, 0, 0, 0,
	633, 633, 0, 0, 633, 0, 2428, 0, 0, 0,
	0, 0, 0, 0, 0, 633, 0, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 633, 0,
	0, 0, 0, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1446, 0, 1897, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1622, 1623, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	1666, 0, 0, 0, 0, 686, 0, 0, 0, 1786,
	1786, 0, 0, 0, 686, 1684, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1444, 2800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1022, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 1794, 0,
	1794, 0, 1794, 1794, 0, 1803, 1794, 1794, 1794, 1794,
	1794, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1022, 0, 0, 0, 0, 0, 93, 0,
	0, 908, 0, 686, 0, 896, 909, 910, 911, 912,
	897, 0, 633, 898, 899, 0, 900, 0, 0, 0,
	1845, 0, 3745, 0, 0, 0, 0, 1871, 0, 0,
	905, 913, 914, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1895, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 633, 0, 0, 0,
	0, 633, 0, 0, 0, 0, 0, 3112, 3113, 0,
	0, 0, 0, 0, 0, 0, 0, 1209, 0, 915,
	916, 917, 918, 919, 920, 921, 922, 923, 924, 925,
	926, 927, 928, 929, 930, 931, 932, 933, 934, 935,
	936, 937, 938, 939, 940, 941, 942, 943, 944, 945,
	946, 947, 948, 949, 950, 951, 952, 953, 954, 955,
	956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 633, 0, 0, 0, 686,
	0, 0, 2769, 0, 0, 0, 0, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1446, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	0, 633, 633, 633, 633, 633, 0, 0, 0, 0,
	686, 0, 0, 0, 1444, 0, 0, 686, 686, 1444,
	0, 0, 0, 0, 0, 633, 633, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3115,
	3116, 0, 0, 0, 1209, 1209, 0, 0, 0, 0,
	633, 0, 0, 0, 0, 0, 0, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 999, 0, 0, 0, 0, 0,
	3063, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 0, 0, 1444, 0, 0, 0, 0,
	686, 0, 0, 0, 2002, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2018, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3142, 0, 0, 0, 0, 0, 0, 2050, 2051,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 999, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 1209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1446, 0, 0, 0, 0, 1446, 633, 633,
	633, 633, 633, 0, 0, 0, 2214, 0, 0, 0,
	3013, 0, 0, 0, 0, 0, 1845, 0, 633, 0,
	0, 633, 3021, 1897, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1666, 0, 0,
	1209, 0, 0, 0, 0, 0, 0, 0, 0, 3326,
	0, 0, 0, 0, 0, 0, 0, 633, 0, 0,
	1022, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1446, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 686, 686, 0, 0, 633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 633, 1029, 0, 633,
	93, 0, 0, 908, 0, 0, 0, 896, 909, 910,
	911, 912, 897, 0, 0, 898, 899, 0, 900, 0,
	686, 686, 686, 686, 1022, 0, 0, 0, 0, 0,
	1029, 0, 905, 913, 914, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1022, 0, 3112,
	3113, 0, 2002, 0, 0, 0, 2002, 2002, 0, 0,
	0, 915, 916, 917, 918, 919, 920, 921, 922, 923,
	924, 925, 926, 927, 928, 929, 930, 931, 932, 933,
	934, 935, 936, 937, 938, 939, 940, 941, 942, 943,
	944, 945, 946, 947, 948, 949, 950, 951, 952, 953,
	954, 955, 956, 633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1444, 0, 0, 633,
	0, 686, 0, 686, 0, 0, 0, 2440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 633, 0,
	0, 633, 633, 633, 0, 0, 0, 0, 0, 0,
	0, 3115, 3116, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1209, 0, 0, 0, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 861, 0, 0, 0, 865, 0,
	0, 862, 863, 0, 0, 0, 864, 866, 686, 0,
	0, 0, 686, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1446, 0, 0, 0, 0, 0,
	0, 2662, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2677, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 0, 0, 2226, 0, 0, 0,
	1444, 0, 686, 2784, 0, 0, 0, 0, 0, 0,
	0, 0, 2789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3511, 3513, 3512, 3563, 3564, 3565,
	3566, 3567, 3568, 3569, 756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 2002, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 686,
	0, 0, 0, 0, 0, 0, 0, 2002, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2933, 0, 0,
	0, 0, 0, 0, 0, 1209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 0, 0, 0,
	0, 0, 0, 0, 0, 3798, 0, 0, 0, 0,
	0, 0, 0, 0, 2970, 0, 0, 0, 3517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1209, 0,
	0, 0, 0, 3525, 3526, 2997, 1794, 3588, 3587, 3586,
	1845, 0, 3584, 3585, 3583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 861, 0, 733,
	734, 865, 736, 737, 862, 863, 0, 731, 735, 864,
	866, 0, 1897, 0, 0, 0, 0, 0, 0, 0,
	1022, 0, 0, 0, 0, 0, 0, 0, 2226, 0,
	0, 0, 0, 0, 0, 0, 754, 755, 3510, 3514,
	3515, 3516, 3527, 3561, 3562, 3570, 3572, 820, 3571, 3573,
	3574, 3575, 3578, 3579, 3580, 3581, 3576, 3577, 3582, 3494,
	3498, 3495, 3496, 3497, 3509, 3499, 3500, 3501, 3502, 3503,
	3504, 3505, 3506, 3507, 3508, 3589, 3590, 3591, 3592, 3593,
	3594, 3520, 3524, 3523, 3521, 3522, 3518, 3519, 3546, 3545,
	3547, 3548, 3549, 3550, 3551, 3552, 3554, 3553, 3555, 3556,
	3557, 3558, 3559, 3560, 3528, 3529, 3532, 3533, 3531, 3530,
	3534, 3543, 3544, 3535, 3536, 3537, 3538, 3539, 3540, 3542,
	3541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 867, 0, 868, 0, 0, 872, 0,
	0, 0, 874, 873, 0, 875, 840, 839, 0, 0,
	869, 870, 0, 871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3595, 3596,
	3597, 3598, 3599, 3600, 3601, 3602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2226, 2226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3390, 3391,
	3392, 3393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3482,
	0, 3484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3695, 0, 0, 0,
	3695, 3695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1209, 1209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3820, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 3246, 0, 3828, 1345, 1329,
	506, 0, 1272, 1348, 1241, 1260, 1358, 1263, 1266, 1308,
	1219, 1286, 405, 1257, 1212, 1245, 1214, 1252, 1215, 1243,
	1274, 263, 1240, 1331, 1290, 1347, 356, 260, 1221, 1246,
	419, 1262, 200, 1310, 475, 247, 367, 364, 547, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 1354, 360,
	1296, 0, 485, 390, 0, 0, 0, 1276, 1335, 1284,
	1322, 1271, 1309, 1229, 1295, 1349, 1258, 1305, 1350, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	3800, 892, 0, 0, 0, 0, 3801, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 1254, 1302,
	1344, 1255, 1304, 258, 313, 265, 257, 544, 1355, 1334,
	1218, 1283, 1343, 0, 0, 224, 1346, 1278, 0, 1307,
	0, 1361, 1213, 1298, 0, 1216, 1220, 1357, 1339, 1249,
	268, 0, 0, 0, 0, 0, 0, 0, 1275, 1285,
	1319, 1323, 1269, 0, 0, 0, 0, 0, 0, 0,
	1247, 0, 1294, 0, 0, 0, 1225, 1217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 0, 0, 0, 0, 1228, 0, 1248, 1320, 0,
	1211, 290, 1222, 391, 250, 0, 442, 1327, 1338, 1270,
	586, 1342, 1268, 1267, 1314, 1226, 1333, 1261, 355, 1224,
	322, 195, 220, 0, 1259, 401, 450, 462, 1332, 1244,
	1253, 248, 1251, 460, 415, 564, 228, 277, 447, 421,
	458, 429, 280, 1293, 1312, 459, 362, 549, 439, 561,
	587, 588, 256, 395, 573, 500, 581, 605, 221, 253,
	409, 493, 567, 482, 387, 545, 546, 321, 481, 288,
	198, 359, 593, 219, 468, 361, 237, 226, 551, 570,
	282, 445, 600, 208, 495, 559, 234, 472, 0, 0,
	607, 242, 492, 210, 556, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 553, 554,
	249, 608, 223, 580, 215, 1223, 579, 397, 548, 557,
	384, 373, 214, 555, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	568, 0, 203, 0, 487, 569, 609, 441, 207, 229,
	230, 232, 1239, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 1328, 543, 562, 574, 585,
	591, 592, 594, 595, 596, 597, 598, 601, 599, 396,
	303, 483, 325, 363, 1317, 1360, 414, 461, 235, 566,
	484, 1233, 1238, 1231, 0, 1299, 1234, 1232, 1288, 1289,
	1235, 1351, 1352, 1353, 1336, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 0, 1321, 1227, 0, 1236, 1237, 1330,
	1340, 1341, 628, 374, 474, 563, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 542, 304, 211,
	212, 213, 502, 503, 504, 505, 577, 578, 582, 451,
	452, 453, 454, 285, 572, 301, 457, 456, 323, 324,
	369, 438, 512, 514, 522, 525, 527, 529, 532, 535,
	513, 515, 523, 526, 528, 530, 533, 536, 507, 508,
	509, 511, 519, 518, 516, 538, 539, 520, 524, 510,
	517, 521, 531, 537, 534, 1292, 194, 216, 358, 1356,
	443, 281, 606, 576, 571, 201, 218, 1230, 255, 1242,
	1250, 0, 1256, 1264, 1265, 1277, 1279, 1280, 1281, 1282,
	1300, 1301, 1303, 1311, 1313, 1316, 1318, 1325, 1337, 1359,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 550, 552, 565, 583,
	589, 469, 293, 294, 433, 434, 306, 307, 603, 604,
	292, 560, 590, 558, 602, 584, 427, 368, 1291, 1297,
	371, 274, 297, 312, 1306, 575, 490, 222, 455, 283,
	246, 1324, 1326, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 1287, 1315, 366,
	540, 541, 308, 386, 0, 0, 0, 1345, 1329, 506,
	0, 1272, 1348, 1241, 1260, 1358, 1263, 1266, 1308, 1219,
	1286, 405, 1257, 1212, 1245, 1214, 1252, 1215, 1243, 1274,
	263, 1240, 1331, 1290, 1347, 356, 260, 1221, 1246, 419,
	1262, 200, 1310, 475, 247, 367, 364, 547, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 1354, 360, 1296,
	0, 485, 390, 0, 0, 0, 1276, 1335, 1284, 1322,
	1271, 1309, 1229, 1295, 1349, 1258, 1305, 1350, 315, 243,
	317, 199, 402, 486, 279, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 1254, 1302, 1344,
	1255, 1304, 258, 313, 265, 257, 544, 1355, 1334, 1218,
	1283, 1343, 0, 0, 224, 1346, 1278, 0, 1307, 0,
	1361, 1213, 1298, 0, 1216, 1220, 1357, 1339, 1249, 268,
	0, 0, 0, 0, 0, 0, 0, 1275, 1285, 1319,
	1323, 1269, 0, 0, 0, 0, 0, 3022, 0, 1247,
	0, 1294, 0, 0, 0, 1225, 1217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1273,
	0, 0, 0, 0, 1228, 0, 1248, 1320, 0, 1211,
	290, 1222, 391, 250, 0, 442, 1327, 1338, 1270, 586,
	1342, 1268, 1267, 1314, 1226, 1333, 1261, 355, 1224, 322,
	195, 220, 0, 1259, 401, 450, 462, 1332, 1244, 1253,
	248, 1251, 460, 415, 564, 228, 277, 447, 421, 458,
	429, 280, 1293, 1312, 459, 362, 549, 439, 561, 587,
	588, 256, 395, 573, 500, 581, 605, 221, 253, 409,
	493, 567, 482, 387, 545, 546, 321, 481, 288, 198,
	359, 593, 219, 468, 361, 237, 226, 551, 570, 282,
	445, 600, 208, 495, 559, 234, 472, 0, 0, 607,
	242, 492, 210, 556, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 553, 554, 249,
	608, 223, 580, 215, 1223, 579, 397, 548, 557, 384,
	373, 214, 555, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 568,
	0, 203, 0, 487, 569, 609, 441, 207, 229, 230,
	232, 1239, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 1328, 543, 562, 574, 585, 591,
	592, 594, 595, 596, 597, 598, 601, 599, 396, 303,
	483, 325, 363, 1317, 1360, 414, 461, 235, 566, 484,
	1233, 1238, 1231, 0, 1299, 1234, 1232, 1288, 1289, 1235,
	1351, 1352, 1353, 1336, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 1321, 1227, 0, 1236, 1237, 1330, 1340,
	1341, 628, 374, 474, 563, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 542, 304, 211, 212,
	213, 502, 503, 504, 505, 577, 578, 582, 451, 452,
	453, 454, 285, 572, 301, 457, 456, 323, 324, 369,
	438, 512, 514, 522, 525, 527, 529, 532, 535, 513,
	515, 523, 526, 528, 530, 533, 536, 507, 508, 509,
	511, 519, 518, 516, 538, 539, 520, 524, 510, 517,
	521, 531, 537, 534, 1292, 194, 216, 358, 1356, 443,
	281, 606, 576, 571, 201, 218, 1230, 255, 1242, 1250,
	0, 1256, 1264, 1265, 1277, 1279, 1280, 1281, 1282, 1300,
	1301, 1303, 1311, 1313, 1316, 1318, 1325, 1337, 1359, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 550, 552, 565, 583, 589,
	469, 293, 294, 433, 434, 306, 307, 603, 604, 292,
	560, 590, 558, 602, 584, 427, 368, 1291, 1297, 371,
	274, 297, 312, 1306, 575, 490, 222, 455, 283, 246,
	1324, 1326, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 1287, 1315, 366, 540,
	541, 308, 386, 0, 0, 0, 1345, 1329, 506, 0,
	1272, 1348, 1241, 1260, 1358, 1263, 1266, 1308, 1219, 1286,
	405, 1257, 1212, 1245, 1214, 1252, 1215, 1243, 1274, 263,
	1240, 1331, 1290, 1347, 356, 260, 1221, 1246, 419, 1262,
	200, 1310, 475, 247, 367, 364, 547, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 1354, 360, 1296, 0,
	485, 390, 0, 0, 0, 1276, 1335, 1284, 1322, 1271,
	1309, 1229, 1295, 1349, 1258, 1305, 1350, 315, 243, 317,
	199, 402, 486, 279, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 240, 0, 0, 0, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 1254, 1302, 1344, 1255,
	1304, 258, 313, 265, 257, 544, 1355, 1334, 1218, 1283,
	1343, 0, 0, 224, 1346, 1278, 0, 1307, 0, 1361,
	1213, 1298, 0, 1216, 1220, 1357, 1339, 1249, 268, 0,
	0, 0, 0, 0, 0, 0, 1275, 1285, 1319, 1323,
	1269, 0, 0, 0, 0, 0, 2983, 0, 1247, 0,
	1294, 0, 0, 0, 1225, 1217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1273, 0,
	0, 0, 0, 1228, 0, 1248, 1320, 0, 1211, 290,
	1222, 391, 250, 0, 442, 1327, 1338, 1270, 586, 1342,
	1268, 1267, 1314, 1226, 1333, 1261, 355, 1224, 322, 195,
	220, 0, 1259, 401, 450, 462, 1332, 1244, 1253, 248,
	1251, 460, 415, 564, 228, 277, 447, 421, 458, 429,
	280, 1293, 1312, 459, 362, 549, 439, 561, 587, 588,
	256, 395, 573, 500, 581, 605, 221, 253, 409, 493,
	567, 482, 387, 545, 546, 321, 481, 288, 198, 359,
	593, 219, 468, 361, 237, 226, 551, 570, 282, 445,
	600, 208, 495, 559, 234, 472, 0, 0, 607, 242,
	492, 210, 556, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 553, 554, 249, 608,
	223, 580, 215, 1223, 579, 397, 548, 557, 384, 373,
	214, 555, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 568, 0,
	203, 0, 487, 569, 609, 441, 207, 229, 230, 232,
	1239, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 1328, 543, 562, 574, 585, 591, 592,
	594, 595, 596, 597, 598, 601, 599, 396, 303, 483,
	325, 363, 1317, 1360, 414, 461, 235, 566, 484, 1233,
	1238, 1231, 0, 1299, 1234, 1232, 1288, 1289, 1235, 1351,
	1352, 1353, 1336, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 0, 1321, 1227, 0, 1236, 1237, 1330, 1340, 1341,
	628, 374, 474, 563, 327, 339, 342, 332, 351, 0,
	352, 328, 329, 334, 336, 337, 338, 343, 344, 348,
	354, 244, 205, 380, 388, 542, 304, 211, 212, 213,
	502, 503, 504, 505, 577, 578, 582, 451, 452, 453,
	454, 285, 572, 301, 457, 456, 323, 324, 369, 438,
	512, 514, 522, 525, 527, 529, 532, 535, 513, 515,
	523, 526, 528, 530, 533, 536, 507, 508, 509, 511,
	519, 518, 516, 538, 539, 520, 524, 510, 517, 521,
	531, 537, 534, 1292, 194, 216, 358, 1356, 443, 281,
	606, 576, 571, 201, 218, 1230, 255, 1242, 1250, 0,
	1256, 1264, 1265, 1277, 1279, 1280, 1281, 1282, 1300, 1301,
	1303, 1311, 1313, 1316, 1318, 1325, 1337, 1359, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	398, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 550, 552, 565, 583, 589, 469,
	293, 294, 433, 434, 306, 307, 603, 604, 292, 560,
	590, 558, 602, 584, 427, 368, 1291, 1297, 371, 274,
	297, 312, 1306, 575, 490, 222, 455, 283, 246, 1324,
	1326, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 1287, 1315, 366, 540, 541,
	308, 386, 0, 0, 0, 1345, 1329, 506, 0, 1272,
	1348, 1241, 1260, 1358, 1263, 1266, 1308, 1219, 1286, 405,
	1257, 1212, 1245, 1214, 1252, 1215, 1243, 1274, 263, 1240,
	1331, 1290, 1347, 356, 260, 1221, 1246, 419, 1262, 200,
	1310, 475, 247, 367, 364, 547, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 1354, 360, 1296, 0, 485,
	390, 0, 0, 0, 1276, 1335, 1284, 1322, 1271, 1309,
	1229, 1295, 1349, 1258, 1305, 1350, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 0, 0, 0, 892, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 1254, 1302, 1344, 1255, 1304,
	258, 313, 265, 257, 544, 1355, 1334, 1218, 1283, 1343,
	0, 0, 224, 1346, 1278, 0, 1307, 0, 1361, 1213,
	1298, 0, 1216, 1220, 1357, 1339, 1249, 268, 0, 0,
	0, 0, 0, 0, 0, 1275, 1285, 1319, 1323, 1269,
	0, 0, 0, 0, 0, 2242, 0, 1247, 0, 1294,
	0, 0, 0, 1225, 1217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1273, 0, 0,
	0, 0, 1228, 0, 1248, 1320, 0, 1211, 290, 1222,
	391, 250, 0, 442, 1327, 1338, 1270, 586, 1342, 1268,
	1267, 1314, 1226, 1333, 1261, 355, 1224, 322, 195, 220,
	0, 1259, 401, 450, 462, 1332, 1244, 1253, 248, 1251,
	460, 415, 564, 228, 277, 447, 421, 458, 429, 280,
	1293, 1312, 459, 362, 549, 439, 561, 587, 588, 256,
	395, 573, 500, 581, 605, 221, 253, 409, 493, 567,
	482, 387, 545, 546, 321, 481, 288, 198, 359, 593,
	219, 468, 361, 237, 226, 551, 570, 282, 445, 600,
	208, 495, 559, 234, 472, 0, 0, 607, 242, 492,
	210, 556, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 553, 554, 249, 608, 223,
	580, 215, 1223, 579, 397, 548, 557, 384, 373, 214,
	555, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 568, 0, 203,
	0, 487, 569, 609, 441, 207, 229, 230, 232, 1239,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 1328, 543, 562, 574, 585, 591, 592, 594,
	595, 596, 597, 598, 601, 599, 396, 303, 483, 325,
	363, 1317, 1360, 414, 461, 235, 566, 484, 1233, 1238,
	1231, 0, 1299, 1234, 1232, 1288, 1289, 1235, 1351, 1352,
	1353, 1336, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 1321, 1227, 0, 1236, 1237, 1330, 1340, 1341, 628,
	374, 474, 563, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 542, 304, 211, 212, 213, 502,
	503, 504, 505, 577, 578, 582, 451, 452, 453, 454,
	285, 572, 301, 457, 456, 323, 324, 369, 438, 512,
	514, 522, 525, 527, 529, 532, 535, 513, 515, 523,
	526, 528, 530, 533, 536, 507, 508, 509, 511, 519,
	518, 516, 538, 539, 520, 524, 510, 517, 521, 531,
	537, 534, 1292, 194, 216, 358, 1356, 443, 281, 606,
	576, 571, 201, 218, 1230, 255, 1242, 1250, 0, 1256,
	1264, 1265, 1277, 1279, 1280, 1281, 1282, 1300, 1301, 1303,
	1311, 1313, 1316, 1318, 1325, 1337, 1359, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 550, 552, 565, 583, 589, 469, 293,
	294, 433, 434, 306, 307, 603, 604, 292, 560, 590,
	558, 602, 584, 427, 368, 1291, 1297, 371, 274, 297,
	312, 1306, 575, 490, 222, 455, 283, 246, 1324, 1326,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 1287, 1315, 366, 540, 541, 308,
	386, 0, 0, 0, 1345, 1329, 506, 0, 1272, 1348,
	1241, 1260, 1358, 1263, 1266, 1308, 1219, 1286, 405, 1257,
	1212, 1245, 1214, 1252, 1215, 1243, 1274, 263, 1240, 1331,
	1290, 1347, 356, 260, 1221, 1246, 419, 1262, 200, 1310,
	475, 247, 367, 364, 547, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 1354, 360, 1296, 0, 485, 390,
	0, 0, 0, 1276, 1335, 1284, 1322, 1271, 1309, 1229,
	1295, 1349, 1258, 1305, 1350, 315, 243, 317, 199, 402,
	486, 279, 0, 93, 0, 0, 0, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	240, 0, 0, 0, 341, 350, 349, 330, 331, 333,
	335, 340, 347, 353, 1254, 1302, 1344, 1255, 1304, 258,
	313, 265, 257, 544, 1355, 1334, 1218, 1283, 1343, 0,
	0, 224, 1346, 1278, 0, 1307, 0, 1361, 1213, 1298,
	0, 1216, 1220, 1357, 1339, 1249, 268, 0, 0, 0,
	0, 0, 0, 0, 1275, 1285, 1319, 1323, 1269, 0,
	0, 0, 0, 0, 0, 0, 1247, 0, 1294, 0,
	0, 0, 1225, 1217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 0, 0, 0,
	0, 1228, 0, 1248, 1320, 0, 1211, 290, 1222, 391,
	250, 0, 442, 1327, 1338, 1270, 586, 1342, 1268, 1267,
	1314, 1226, 1333, 1261, 355, 1224, 322, 195, 220, 0,
	1259, 401, 450, 462, 1332, 1244, 1253, 248, 1251, 460,
	415, 564, 228, 277, 447, 421, 458, 429, 280, 1293,
	1312, 459, 362, 549, 439, 561, 587, 588, 256, 395,
	573, 500, 581, 605, 221, 253, 409, 493, 567, 482,
	387, 545, 546, 321, 481, 288, 198, 359, 593, 219,
	468, 361, 237, 226, 551, 570, 282, 445, 600, 208,
	495, 559, 234, 472, 0, 0, 607, 242, 492, 210,
	556, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 553, 554, 249, 608, 223, 580,
	215, 1223, 579, 397, 548, 557, 384, 373, 214, 555,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 568, 0, 203, 0,
	487, 569, 609, 441, 207, 229, 230, 232, 1239, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 1328, 543, 562, 574, 585, 591, 592, 594, 595,
	596, 597, 598, 601, 599, 396, 303, 483, 325, 363,
	1317, 1360, 414, 461, 235, 566, 484, 1233, 1238, 1231,
	0, 1299, 1234, 1232, 1288, 1289, 1235, 1351, 1352, 1353,
	1336, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 0,
	1321, 1227, 0, 1236, 1237, 1330, 1340, 1341, 628, 374,
	474, 563, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 542, 304, 211, 212, 213, 502, 503,
	504, 505, 577, 578, 582, 451, 452, 453, 454, 285,
	572, 301, 457, 456, 323, 324, 369, 438, 512, 514,
	522, 525, 527, 529, 532, 535, 513, 515, 523, 526,
	528, 530, 533, 536, 507, 508, 509, 511, 519, 518,
	516, 538, 539, 520, 524, 510, 517, 521, 531, 537,
	534, 1292, 194, 216, 358, 1356, 443, 281, 606, 576,
	571, 201, 218, 1230, 255, 1242, 1250, 0, 1256, 1264,
	1265, 1277, 1279, 1280, 1281, 1282, 1300, 1301, 1303, 1311,
	1313, 1316, 1318, 1325, 1337, 1359, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 550, 552, 565, 583, 589, 469, 293, 294,
	433, 434, 306, 307, 603, 604, 292, 560, 590, 558,
	602, 584, 427, 368, 1291, 1297, 371, 274, 297, 312,
	1306, 575, 490, 222, 455, 283, 246, 1324, 1326, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 1287, 1315, 366, 540, 541, 308, 386,
	0, 0, 0, 1345, 1329, 506, 0, 1272, 1348, 1241,
	1260, 1358, 1263, 1266, 1308, 1219, 1286, 405, 1257, 1212,
	1245, 1214, 1252, 1215, 1243, 1274, 263, 1240, 1331, 1290,
	1347, 356, 260, 1221, 1246, 419, 1262, 200, 1310, 475,
	247, 367, 364, 547, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 1354, 360, 1296, 0, 485, 390, 0,
	0, 0, 1276, 1335, 1284, 1322, 1271, 1309, 1229, 1295,
	1349, 1258, 1305, 1350, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 1254, 1302, 1344, 1255, 1304, 258, 313,
	265, 257, 544, 1355, 1334, 1218, 1283, 1343, 0, 0,
	224, 1346, 1278, 0, 1307, 0, 1361, 1213, 1298, 0,
	1216, 1220, 1357, 1339, 1249, 268, 0, 0, 0, 0,
	0, 0, 0, 1275, 1285, 1319, 1323, 1269, 0, 0,
	0, 0, 0, 0, 0, 1247, 0, 1294, 0, 0,
	0, 1225, 1217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1273, 0, 0, 0, 0,
	1228, 0, 1248, 1320, 0, 1211, 290, 1222, 391, 250,
	0, 442, 1327, 1338, 1270, 586, 1342, 1268, 1267, 1314,
	1226, 1333, 1261, 355, 1224, 322, 195, 220, 0, 1259,
	401, 450, 462, 1332, 1244, 1253, 248, 1251, 460, 415,
	564, 228, 277, 447, 421, 458, 429, 280, 1293, 1312,
	459, 362, 549, 439, 561, 587, 588, 256, 395, 573,
	500, 581, 605, 221, 253, 409, 493, 567, 482, 387,
	545, 546, 321, 481, 288, 198, 359, 593, 219, 468,
	361, 237, 226, 551, 570, 282, 445, 600, 208, 495,
	559, 234, 472, 0, 0, 607, 242, 492, 210, 556,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 553, 554, 249, 608, 223, 580, 215,
	1223, 579, 397, 548, 557, 384, 373, 214, 555, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 568, 0, 203, 0, 487,
	569, 609, 441, 207, 229, 230, 232, 1239, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	1328, 543, 562, 574, 585, 591, 592, 594, 595, 596,
	597, 598, 601, 599, 396, 303, 483, 325, 363, 1317,
	1360, 414, 461, 235, 566, 484, 1233, 1238, 1231, 0,
	1299, 1234, 1232, 1288, 1289, 1235, 1351, 1352, 1353, 1336,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 1321,
	1227, 0, 1236, 1237, 1330, 1340, 1341, 628, 374, 474,
	563, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 542, 304, 211, 212, 213, 502, 503, 504,
	505, 577, 578, 582, 451, 452, 453, 454, 285, 572,
	301, 457, 456, 323, 324, 369, 438, 512, 514, 522,
	525, 527, 529, 532, 535, 513, 515, 523, 526, 528,
	530, 533, 536, 507, 508, 509, 511, 519, 518, 516,
	538, 539, 520, 524, 510, 517, 521, 531, 537, 534,
	1292, 194, 216, 358, 1356, 443, 281, 606, 576, 571,
	201, 218, 1230, 255, 1242, 1250, 0, 1256, 1264, 1265,
	1277, 1279, 1280, 1281, 1282, 1300, 1301, 1303, 1311, 1313,
	1316, 1318, 1325, 1337, 1359, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 550, 552, 565, 583, 589, 469, 293, 294, 433,
	434, 306, 307, 603, 604, 292, 560, 590, 558, 602,
	584, 427, 368, 1291, 1297, 371, 274, 297, 312, 1306,
	575, 490, 222, 455, 283, 246, 1324, 1326, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 1287, 1315, 366, 540, 541, 308, 386, 0,
	0, 0, 1345, 1329, 506, 0, 1272, 1348, 1241, 1260,
	1358, 1263, 1266, 1308, 1219, 1286, 405, 1257, 1212, 1245,
	1214, 1252, 1215, 1243, 1274, 263, 1240, 1331, 1290, 1347,
	356, 260, 1221, 1246, 419, 1262, 200, 1310, 475, 247,
	367, 364, 547, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 1354, 360, 1296, 0, 485, 390, 0, 0,
	0, 1276, 1335, 1284, 1322, 1271, 1309, 1229, 1295, 1349,
	1258, 1305, 1350, 315, 243, 317, 199, 402, 486, 279,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 240, 0,
	0, 0, 341, 350, 349, 330, 331, 333, 335, 340,
	347, 353, 1254, 1302, 1344, 1255, 1304, 258, 313, 265,
	257, 544, 1355, 1334, 1218, 1283, 1343, 0, 0, 224,
	1346, 1278, 0, 1307, 0, 1361, 1213, 1298, 0, 1216,
	1220, 1357, 1339, 1249, 268, 0, 0, 0, 0, 0,
	0, 0, 1275, 1285, 1319, 1323, 1269, 0, 0, 0,
	0, 0, 0, 0, 1247, 0, 1294, 0, 0, 0,
	1225, 1217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1273, 0, 0, 0, 0, 1228,
	0, 1248, 1320, 0, 1211, 290, 1222, 391, 250, 0,
	442, 1327, 1338, 1270, 586, 1342, 1268, 1267, 1314, 1226,
	1333, 1261, 355, 1224, 322, 195, 220, 0, 1259, 401,
	450, 462, 1332, 1244, 1253, 248, 1251, 460, 415, 564,
	228, 277, 447, 421, 458, 429, 280, 1293, 1312, 459,
	362, 549, 439, 561, 587, 588, 256, 395, 573, 500,
	581, 605, 221, 253, 409, 493, 567, 482, 387, 545,
	546, 321, 481, 288, 198, 359, 593, 219, 468, 361,
	237, 226, 551, 570, 282, 445, 600, 208, 495, 559,
	234, 472, 0, 0, 607, 242, 492, 210, 556, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 553, 554, 249, 608, 223, 580, 215, 1223,
	579, 397, 548, 557, 384, 373, 214, 555, 382, 372,
	326, 345, 346, 273, 299, 436, 365, 437, 298, 300,
	393, 392, 394, 202, 568, 0, 203, 0, 487, 569,
	609, 441, 207, 229, 230, 232, 1239, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 1328,
	543, 562, 574, 585, 591, 592, 594, 595, 596, 597,
	598, 601, 599, 396, 303, 483, 325, 363, 1317, 1360,
	414, 461, 235, 566, 484, 1233, 1238, 1231, 0, 1299,
	1234, 1232, 1288, 1289, 1235, 1351, 1352, 1353, 1336, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 0, 1321, 1227,
	0, 1236, 1237, 1330, 1340, 1341, 628, 374, 474, 563,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 542, 304, 211, 212, 213, 502, 503, 504, 505,
	577, 578, 582, 451, 452, 453, 454, 285, 572, 301,
	457, 456, 323, 324, 369, 438, 512, 514, 522, 525,
	527, 529, 532, 535, 513, 515, 523, 526, 528, 530,
	533, 536, 507, 508, 509, 511, 519, 518, 516, 538,
	539, 520, 524, 510, 517, 521, 531, 537, 534, 1292,
	194, 216, 358, 1356, 443, 281, 606, 576, 571, 201,
	218, 1230, 255, 1242, 1250, 0, 1256, 1264, 1265, 1277,
	1279, 1280, 1281, 1282, 1300, 1301, 1303, 1311, 1313, 1316,
	1318, 1325, 1337, 1359, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	550, 552, 565, 583, 589, 469, 293, 294, 433, 434,
	306, 307, 603, 604, 292, 560, 590, 558, 602, 584,
	427, 368, 1291, 1297, 371, 274, 297, 312, 1306, 575,
	490, 222, 455, 283, 246, 1324, 1326, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 1287, 1315, 366, 540, 541, 308, 386, 0, 0,
	0, 1345, 1329, 506, 0, 1272, 1348, 1241, 1260, 1358,
	1263, 1266, 1308, 1219, 1286, 405, 1257, 1212, 1245, 1214,
	1252, 1215, 1243, 1274, 263, 1240, 1331, 1290, 1347, 356,
	260, 1221, 1246, 419, 1262, 200, 1310, 475, 247, 367,
	364, 547, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 1354, 360, 1296, 0, 485, 390, 0, 0, 0,
	1276, 1335, 1284, 1322, 1271, 1309, 1229, 1295, 1349, 1258,
	1305, 1350, 315, 243, 317, 199, 402, 486, 279, 0,
	0, 0, 0, 0, 892, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 240, 0, 0,
	0, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 1254, 1302, 1344, 1255, 1304, 258, 313, 265, 257,
	544, 1355, 1334, 1218, 1283, 1343, 0, 0, 224, 1346,
	1278, 0, 1307, 0, 1361, 1213, 1298, 0, 1216, 1220,
	1357, 1339, 1249, 268, 0, 0, 0, 0, 0, 0,
	0, 1275, 1285, 1319, 1323, 1269, 0, 0, 0, 0,
	0, 0, 0, 1247, 0, 1294, 0, 0, 0, 1225,
	1217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1273, 0, 0, 0, 0, 1228, 0,
	1248, 1320, 0, 1211, 290, 1222, 391, 250, 0, 442,
	1327, 1338, 1270, 586, 1342, 1268, 1267, 1314, 1226, 1333,
	1261, 355, 1224, 322, 195, 220, 0, 1259, 401, 450,
	462, 1332, 1244, 1253, 248, 1251, 460, 415, 564, 228,
	277, 447, 421, 458, 429, 280, 1293, 1312, 459, 362,
	549, 439, 561, 587, 588, 256, 395, 573, 500, 581,
	605, 221, 253, 409, 493, 567, 482, 387, 545, 546,
	321, 481, 288, 198, 359, 593, 219, 468, 361, 237,
	226, 551, 570, 282, 445, 600, 208, 495, 559, 234,
	472, 0, 0, 607, 242, 492, 210, 556, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 553, 554, 249, 608, 223, 580, 215, 1223, 579,
	397, 548, 557, 384, 373, 214, 555, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 568, 0, 203, 0, 487, 569, 609,
	441, 207, 229, 230, 232, 1239, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 1328, 543,
	562, 574, 585, 591, 592, 594, 595, 596, 597, 598,
	601, 599, 396, 303, 483, 325, 363, 1317, 1360, 414,
	461, 235, 566, 484, 1233, 1238, 1231, 0, 1299, 1234,
	1232, 1288, 1289, 1235, 1351, 1352, 1353, 1336, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 1321, 1227, 0,
	1236, 1237, 1330, 1340, 1341, 628, 374, 474, 563, 327,
	339, 342, 332, 351, 0, 352, 328, 329, 334, 336,
	337, 338, 343, 344, 348, 354, 244, 205, 380, 388,
	542, 304, 211, 212, 213, 502, 503, 504, 505, 577,
	578, 582, 451, 452, 453, 454, 285, 572, 301, 457,
	456, 323, 324, 369, 438, 512, 514, 522, 525, 527,
	529, 532, 535, 513, 515, 523, 526, 528, 530, 533,
	536, 507, 508, 509, 511, 519, 518, 516, 538, 539,
	520, 524, 510, 517, 521, 531, 537, 534, 1292, 194,
	216, 358, 1356, 443, 281, 606, 576, 571, 201, 218,
	1230, 255, 1242, 1250, 0, 1256, 1264, 1265, 1277, 1279,
	1280, 1281, 1282, 1300, 1301, 1303, 1311, 1313, 1316, 1318,
	1325, 1337, 1359, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 550,
	552, 565, 583, 589, 469, 293, 294, 433, 434, 306,
	307, 603, 604, 292, 560, 590, 558, 602, 584, 427,
	368, 1291, 1297, 371, 274, 297, 312, 1306, 575, 490,
	222, 455, 283, 246, 1324, 1326, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	1287, 1315, 366, 540, 541, 308, 386, 0, 0, 0,
	0, 0, 506, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 716,
	0, 0, 0, 263, 721, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	547, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	728, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 724, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 93,
	0, 0, 908, 892, 857, 858, 896, 909, 910, 911,
	912, 897, 0, 233, 898, 899, 240, 900, 0, 856,
	758, 760, 759, 810, 811, 812, 813, 814, 815, 816,
	756, 905, 913, 914, 0, 258, 313, 265, 257, 544,
	0, 0, 2082, 2083, 2084, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 698, 713, 0, 727, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 710, 711,
	0, 0, 0, 0, 851, 0, 712, 0, 0, 720,
	915, 916, 917, 918, 919, 920, 921, 922, 923, 924,
	925, 926, 927, 928, 929, 930, 931, 932, 933, 934,
	935, 936, 937, 938, 939, 940, 941, 942, 943, 944,
	945, 946, 947, 948, 949, 950, 951, 952, 953, 954,
	955, 956, 723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 850,
	0, 0, 586, 0, 0, 848, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 902, 0, 460, 415, 564, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 549,
	439, 561, 587, 588, 256, 395, 573, 500, 581, 605,
	221, 253, 409, 493, 567, 482, 387, 545, 546, 321,
	481, 288, 198, 359, 593, 219, 468, 361, 237, 226,
	551, 570, 282, 445, 600, 208, 495, 559, 234, 472,
	0, 0, 607, 242, 492, 210, 556, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	903, 904, 249, 608, 764, 580, 215, 0, 579, 397,
	548, 557, 384, 373, 214, 555, 382, 372, 326, 772,
	773, 273, 299, 836, 835, 834, 298, 300, 832, 833,
	831, 202, 568, 0, 203, 0, 487, 569, 609, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 543, 562,
	574, 585, 591, 592, 594, 595, 596, 597, 598, 601,
	599, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 566, 484, 861, 849, 733, 734, 865, 736, 737,
	862, 863, 730, 731, 735, 864, 866, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 0, 852, 719, 718, 0,
	726, 0, 754, 755, 757, 761, 762, 763, 774, 808,
	809, 817, 819, 820, 818, 821, 822, 823, 826, 827,
	828, 829, 824, 825, 830, 738, 742, 739, 740, 741,
	753, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 876, 877, 878, 879, 880, 881, 767, 771, 770,
	768, 769, 765, 766, 793, 792, 794, 795, 796, 797,
	798, 799, 801, 800, 802, 803, 804, 805, 806, 807,
	775, 776, 779, 780, 778, 777, 781, 790, 791, 782,
	783, 784, 785, 786, 787, 789, 788, 717, 194, 216,
	358, 0, 443, 281, 606, 576, 571, 201, 218, 867,
	255, 868, 0, 0, 872, 0, 0, 0, 874, 873,
	0, 875, 840, 839, 0, 0, 869, 870, 0, 871,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 550, 552,
	565, 583, 589, 469, 882, 883, 884, 885, 886, 887,
	888, 889, 292, 560, 590, 558, 602, 584, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 575, 490, 222,
	455, 283, 246, 907, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 386,
	0, 366, 540, 541, 308, 506, 0, 729, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 716, 0, 0, 0, 263, 721, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 547, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 728, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 724, 725, 0, 0, 0, 0,
	0, 0, 2271, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 93, 0, 0, 908, 892, 857, 858, 896,
	909, 910, 911, 912, 897, 0, 233, 898, 899, 240,
	900, 0, 856, 758, 760, 759, 810, 811, 812, 813,
	814, 815, 816, 756, 905, 913, 914, 2272, 258, 313,
	265, 257, 544, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 698, 713,
	0, 727, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 710, 711, 0, 0, 0, 0, 851, 0, 712,
	0, 0, 720, 915, 916, 917, 918, 919, 920, 921,
	922, 923, 924, 925, 926, 927, 928, 929, 930, 931,
	932, 933, 934, 935, 936, 937, 938, 939, 940, 941,
	942, 943, 944, 945, 946, 947, 948, 949, 950, 951,
	952, 953, 954, 955, 956, 723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 850, 0, 0, 586, 0, 0, 848, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 902, 0, 460, 415,
	564, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 549, 439, 561, 587, 588, 256, 395, 573,
	500, 581, 605, 221, 253, 409, 493, 567, 482, 387,
	545, 546, 321, 481, 288, 198, 359, 593, 219, 468,
	361, 237, 226, 551, 570, 282, 445, 600, 208, 495,
	559, 234, 472, 0, 0, 607, 242, 492, 210, 556,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 903, 904, 249, 608, 764, 580, 215,
	0, 579, 397, 548, 557, 384, 373, 214, 555, 382,
	372, 326, 772, 773, 273, 299, 836, 835, 834, 298,
	300, 832, 833, 831, 202, 568, 0, 203, 0, 487,
	569, 609, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 543, 562, 574, 585, 591, 592, 594, 595, 596,
	597, 598, 601, 599, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 566, 484, 861, 849, 733, 734,
	865, 736, 737, 862, 863, 730, 731, 735, 864, 866,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 852,
	719, 718, 0, 726, 0, 754, 755, 757, 761, 762,
	763, 774, 808, 809, 817, 819, 820, 818, 821, 822,
	823, 826, 827, 828, 829, 824, 825, 830, 738, 742,
	739, 740, 741, 753, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 876, 877, 878, 879, 880, 881,
	767, 771, 770, 768, 769, 765, 766, 793, 792, 794,
	795, 796, 797, 798, 799, 801, 800, 802, 803, 804,
	805, 806, 807, 775, 776, 779, 780, 778, 777, 781,
	790, 791, 782, 783, 784, 785, 786, 787, 789, 788,
	717, 194, 216, 358, 0, 443, 281, 606, 576, 571,
	201, 218, 867, 255, 868, 0, 0, 872, 0, 0,
	0, 874, 873, 0, 875, 840, 839, 0, 0, 869,
	870, 0, 871, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 550, 552, 565, 583, 589, 469, 882, 883, 884,
	885, 886, 887, 888, 889, 292, 560, 590, 558, 602,
	584, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	575, 490, 222, 455, 283, 246, 907, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 0, 386, 366, 540, 541, 308, 84, 506,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 0, 716, 0, 0, 0,
	263, 721, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 547, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 728, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 724, 725,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 93, 0, 0, 908,
	892, 857, 858, 896, 909, 910, 911, 912, 897, 0,
	233, 898, 899, 240, 900, 0, 856, 758, 760, 759,
	810, 811, 812, 813, 814, 815, 816, 756, 905, 913,
	914, 0, 258, 313, 265, 257, 544, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 698, 713, 0, 727, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 710, 711, 0, 0, 0,
	0, 851, 0, 712, 0, 0, 720, 915, 916, 917,
	918, 919, 920, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 930, 931, 932, 933, 934, 935, 936, 937,
	938, 939, 940, 941, 942, 943, 944, 945, 946, 947,
	948, 949, 950, 951, 952, 953, 954, 955, 956, 723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 391, 250, 0, 442, 850, 0, 0, 586,
	0, 0, 848, 0, 0, 0, 0, 355, 0, 322,
	195, 220, 0, 0, 401, 450, 462, 0, 0, 0,
	902, 0, 460, 415, 564, 228, 277, 447, 421, 458,
	429, 280, 0, 0, 459, 362, 549, 439, 561, 587,
	588, 256, 395, 573, 500, 581, 605, 221, 253, 409,
	493, 567, 482, 387, 545, 546, 321, 481, 288, 198,
	359, 593, 219, 468, 361, 237, 226, 551, 570, 282,
	445, 600, 208, 495, 559, 234, 472, 0, 0, 607,
	242, 492, 210, 556, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 903, 904, 249,
	608, 764, 580, 215, 0, 579, 397, 548, 557, 384,
	373, 214, 555, 382, 372, 326, 772, 773, 273, 299,
	836, 835, 834, 298, 300, 832, 833, 831, 202, 568,
	0, 203, 0, 487, 569, 609, 441, 207, 229, 230,
	232, 0, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 0, 543, 562, 574, 585, 591,
	592, 594, 595, 596, 597, 598, 601, 599, 396, 303,
	483, 325, 363, 0, 0, 414, 461, 235, 566, 484,
	861, 849, 733, 734, 865, 736, 737, 862, 863, 730,
	731, 735, 864, 866, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 852, 719, 718, 0, 726, 0, 754,
	755, 757, 761, 762, 763, 774, 808, 809, 817, 819,
	820, 818, 821, 822, 823, 826, 827, 828, 829, 824,
	825, 830, 738, 742, 739, 740, 741, 753, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 876, 877,
	878, 879, 880, 881, 767, 771, 770, 768, 769, 765,
	766, 793, 792, 794, 795, 796, 797, 798, 799, 801,
	800, 802, 803, 804, 805, 806, 807, 775, 776, 779,
	780, 778, 777, 781, 790, 791, 782, 783, 784, 785,
	786, 787, 789, 788, 717, 194, 216, 358, 92, 443,
	281, 606, 576, 571, 201, 218, 867, 255, 868, 0,
	0, 872, 0, 0, 0, 874, 873, 0, 875, 840,
	839, 0, 0, 869, 870, 0, 871, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 550, 552, 565, 583, 589,
	469, 882, 883, 884, 885, 886, 887, 888, 889, 292,
	560, 590, 558, 602, 584, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 575, 490, 222, 455, 283, 246,
	907, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 540,
	541, 308, 506, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 716,
	0, 0, 0, 263, 721, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	547, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	728, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 724, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 93,
	0, 0, 908, 892, 857, 858, 896, 909, 910, 911,
	912, 897, 0, 233, 898, 899, 240, 900, 0, 856,
	758, 760, 759, 810, 811, 812, 813, 814, 815, 816,
	756, 905, 913, 914, 0, 258, 313, 265, 257, 544,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 698, 713, 0, 727, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 710, 711,
	0, 0, 0, 0, 851, 0, 712, 0, 0, 720,
	915, 916, 917, 918, 919, 920, 921, 922, 923, 924,
	925, 926, 927, 928, 929, 930, 931, 932, 933, 934,
	935, 936, 937, 938, 939, 940, 941, 942, 943, 944,
	945, 946, 947, 948, 949, 950, 951, 952, 953, 954,
	955, 956, 723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 850,
	0, 0, 586, 0, 0, 848, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 902, 0, 460, 415, 564, 228, 277,
	447, 421, 458, 429, 280, 3786, 0, 459, 362, 549,
	439, 561, 587, 588, 256, 395, 573, 500, 581, 605,
	221, 253, 409, 493, 567, 482, 387, 545, 546, 321,
	481, 288, 198, 359, 593, 219, 468, 361, 237, 226,
	551, 570, 282, 445, 600, 208, 495, 559, 234, 472,
	0, 0, 607, 242, 492, 210, 556, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	903, 904, 249, 608, 764, 580, 215, 0, 579, 397,
	548, 557, 384, 373, 214, 555, 382, 372, 326, 772,
	773, 273, 299, 836, 835, 834, 298, 300, 832, 833,
	831, 202, 568, 0, 203, 0, 487, 569, 609, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 543, 562,
	574, 585, 591, 592, 594, 595, 596, 597, 598, 601,
	599, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 566, 484, 861, 849, 733, 734, 865, 736, 737,
	862, 863, 730, 731, 735, 864, 866, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 0, 852, 719, 718, 0,
	726, 0, 754, 755, 757, 761, 762, 763, 774, 808,
	809, 817, 819, 820, 818, 821, 822, 823, 826, 827,
	828, 829, 824, 825, 830, 738, 742, 739, 740, 741,
	753, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 876, 877, 878, 879, 880, 881, 767, 771, 770,
	768, 769, 765, 766, 793, 792, 794, 795, 796, 797,
	798, 799, 801, 800, 802, 803, 804, 805, 806, 807,
	775, 776, 779, 780, 778, 777, 781, 790, 791, 782,
	783, 784, 785, 786, 787, 789, 788, 717, 194, 216,
	358, 0, 443, 281, 606, 576, 571, 201, 218, 867,
	255, 868, 0, 0, 872, 0, 0, 0, 874, 873,
	0, 875, 840, 839, 0, 0, 869, 870, 0, 871,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 550, 552,
	565, 583, 589, 469, 882, 883, 884, 885, 886, 887,
	888, 889, 292, 560, 590, 558, 602, 584, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 575, 490, 222,
	455, 283, 246, 907, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 386,
	0, 366, 540, 541, 308, 506, 0, 729, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 716, 0, 0, 0, 263, 721, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 547, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 728, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 724, 725, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 93, 0, 1644, 908, 892, 857, 858, 896,
	909, 910, 911, 912, 897, 0, 233, 898, 899, 240,
	900, 0, 856, 758, 760, 759, 810, 811, 812, 813,
	814, 815, 816, 756, 905, 913, 914, 0, 258, 313,
	265, 257, 544, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 698, 713,
	0, 727, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 710, 711, 0, 0, 0, 0, 851, 0, 712,
	0, 0, 720, 915, 916, 917, 918, 919, 920, 921,
	922, 923, 924, 925, 926, 927, 928, 929, 930, 931,
	932, 933, 934, 935, 936, 937, 938, 939, 940, 941,
	942, 943, 944, 945, 946, 947, 948, 949, 950, 951,
	952, 953, 954, 955, 956, 723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 850, 0, 0, 586, 0, 0, 848, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 902, 0, 460, 415,
	564, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 549, 439, 561, 587, 588, 256, 395, 573,
	500, 581, 605, 221, 253, 409, 493, 567, 482, 387,
	545, 546, 321, 481, 288, 198, 359, 593, 219, 468,
	361, 237, 226, 551, 570, 282, 445, 600, 208, 495,
	559, 234, 472, 0, 0, 607, 242, 492, 210, 556,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 903, 904, 249, 608, 764, 580, 215,
	0, 579, 397, 548, 557, 384, 373, 214, 555, 382,
	372, 326, 772, 773, 273, 299, 836, 835, 834, 298,
	300, 832, 833, 831, 202, 568, 0, 203, 0, 487,
	569, 609, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 543, 562, 574, 585, 591, 592, 594, 595, 596,
	597, 598, 601, 599, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 566, 484, 861, 849, 733, 734,
	865, 736, 737, 862, 863, 730, 731, 735, 864, 866,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 852,
	719, 718, 0, 726, 0, 754, 755, 757, 761, 762,
	763, 774, 808, 809, 817, 819, 820, 818, 821, 822,
	823, 826, 827, 828, 829, 824, 825, 830, 738, 742,
	739, 740, 741, 753, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 876, 877, 878, 879, 880, 881,
	767, 771, 770, 768, 769, 765, 766, 793, 792, 794,
	795, 796, 797, 798, 799, 801, 800, 802, 803, 804,
	805, 806, 807, 775, 776, 779, 780, 778, 777, 781,
	790, 791, 782, 783, 784, 785, 786, 787, 789, 788,
	717, 194, 216, 358, 0, 443, 281, 606, 576, 571,
	201, 218, 867, 255, 868, 0, 0, 872, 0, 0,
	0, 874, 873, 0, 875, 840, 839, 0, 0, 869,
	870, 0, 871, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 550, 552, 565, 583, 589, 469, 882, 883, 884,
	885, 886, 887, 888, 889, 292, 560, 590, 558, 602,
	584, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	575, 490, 222, 455, 283, 246, 907, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 386, 0, 366, 540, 541, 308, 506, 0,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 716, 0, 0, 0, 263,
	721, 0, 0, 0, 356, 260, 0, 0, 419, 0,
	200, 0, 475, 247, 367, 364, 547, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 728, 360, 0, 0,
	485, 390, 0, 0, 0, 0, 0, 724, 725, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 243, 317,
	199, 402, 486, 279, 0, 93, 0, 0, 908, 892,
	857, 858, 896, 909, 910, 911, 912, 897, 0, 233,
	898, 899, 240, 900, 0, 856, 758, 760, 759, 810,
	811, 812, 813, 814, 815, 816, 756, 905, 913, 914,
	0, 258, 313, 265, 257, 544, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 698, 713, 0, 727, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 710, 711, 997, 0, 0, 0,
	851, 0, 712, 0, 0, 720, 915, 916, 917, 918,
	919, 920, 921, 922, 923, 924, 925, 926, 927, 928,
	929, 930, 931, 932, 933, 934, 935, 936, 937, 938,
	939, 940, 941, 942, 943, 944, 945, 946, 947, 948,
	949, 950, 951, 952, 953, 954, 955, 956, 723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 391, 250, 0, 442, 850, 0, 0, 586, 0,
	0, 848, 0, 0, 0, 0, 355, 0, 322, 195,
	220, 0, 0, 401, 450, 462, 0, 0, 0, 902,
	0, 460, 415, 564, 228, 277, 447, 421, 458, 429,
	280, 0, 0, 459, 362, 549, 439, 561, 587, 588,
	256, 395, 573, 500, 581, 605, 221, 253, 409, 493,
	567, 482, 387, 545, 546, 321, 481, 288, 198, 359,
	593, 219, 468, 361, 237, 226, 551, 570, 282, 445,
	600, 208, 495, 559, 234, 472, 0, 0, 607, 242,
	492, 210, 556, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 903, 904, 249, 608,
	764, 580, 215, 0, 579, 397, 548, 557, 384, 373,
	214, 555, 382, 372, 326, 772, 773, 273, 299, 836,
	835, 834, 298, 300, 832, 833, 831, 202, 568, 0,
	203, 0, 487, 569, 609, 441, 207, 229, 230, 232,
	0, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 0, 543, 562, 574, 585, 591, 592,
	594, 595, 596, 597, 598, 601, 599, 396, 303, 483,
	325, 363, 0, 0, 414, 461, 235, 566, 484, 861,
	849, 733, 734, 865, 736, 737, 862, 863, 730, 731,
	735, 864, 866, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 0, 852, 719, 718, 0, 726, 0, 754, 755,
	757, 761, 762, 763, 774, 808, 809, 817, 819, 820,
	818, 821, 822, 823, 826, 827, 828, 829, 824, 825,
	830, 738, 742, 739, 740, 741, 753, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 876, 877, 878,
	879, 880, 881, 767, 771, 770, 768, 769, 765, 766,
	793, 792, 794, 795, 796, 797, 798, 799, 801, 800,
	802, 803, 804, 805, 806, 807, 775, 776, 779, 780,
	778, 777, 781, 790, 791, 782, 783, 784, 785, 786,
	787, 789, 788, 717, 194, 216, 358, 0, 443, 281,
	606, 576, 571, 201, 218, 867, 255, 868, 0, 0,
	872, 0, 0, 0, 874, 873, 0, 875, 840, 839,
	0, 0, 869, 870, 0, 871, 0, 0, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	398, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 550, 552, 565, 583, 589, 469,
	882, 883, 884, 885, 886, 887, 888, 889, 292, 560,
	590, 558, 602, 584, 427, 368, 0, 0, 371, 274,
	297, 312, 0, 575, 490, 222, 455, 283, 246, 907,
	0, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 386, 0, 366, 540, 541,
	308, 506, 0, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 716, 0,
	0, 0, 263, 721, 0, 0, 0, 356, 260, 0,
	0, 419, 0, 200, 0, 475, 247, 367, 364, 547,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 728,
	360, 0, 0, 485, 390, 0, 0, 0, 0, 0,
	724, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 243, 317, 199, 402, 486, 279, 0, 93, 0,
	0, 908, 892, 857, 858, 896, 909, 910, 911, 912,
	897, 0, 233, 898, 899, 240, 900, 0, 856, 758,
	760, 759, 810, 811, 812, 813, 814, 815, 816, 756,
	905, 913, 914, 0, 258, 313, 265, 257, 544, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 698, 713, 0, 727, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 710, 711, 0,
	0, 0, 0, 851, 0, 712, 0, 0, 720, 915,
	916, 917, 918, 919, 920, 921, 922, 923, 924, 925,
	926, 927, 928, 929, 930, 931, 932, 933, 934, 935,
	936, 937, 938, 939, 940, 941, 942, 943, 944, 945,
	946, 947, 948, 949, 950, 951, 952, 953, 954, 955,
	956, 723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 391, 250, 0, 442, 850, 0,
	0, 586, 0, 0, 848, 0, 0, 0, 0, 355,
	0, 322, 195, 220, 0, 0, 401, 450, 462, 0,
	0, 0, 902, 0, 460, 415, 564, 228, 277, 447,
	421, 458, 429, 280, 0, 0, 459, 362, 549, 439,
	561, 587, 588, 256, 395, 573, 500, 581, 605, 221,
	253, 409, 493, 567, 482, 387, 545, 546, 321, 481,
	288, 198, 359, 593, 219, 468, 361, 237, 226, 551,
	570, 282, 445, 600, 208, 495, 559, 234, 472, 0,
	0, 607, 242, 492, 210, 556, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 903,
	904, 249, 608, 764, 580, 215, 0, 579, 397, 548,
	557, 384, 373, 214, 555, 382, 372, 326, 772, 773,
	273, 299, 836, 835, 834, 298, 300, 832, 833, 831,
	202, 568, 0, 203, 0, 487, 569, 609, 441, 207,
	229, 230, 232, 0, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 0, 543, 562, 574,
	585, 591, 592, 594, 595, 596, 597, 598, 601, 599,
	396, 303, 483, 325, 363, 0, 0, 414, 461, 235,
	566, 484, 861, 849, 733, 734, 865, 736, 737, 862,
	863, 730, 731, 735, 864, 866, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 852, 719, 718, 0, 726,
	0, 754, 755, 757, 761, 762, 763, 774, 808, 809,
	817, 819, 820, 818, 821, 822, 823, 826, 827, 828,
	829, 824, 825, 830, 738, 742, 739, 740, 741, 753,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	876, 877, 878, 879, 880, 881, 767, 771, 770, 768,
	769, 765, 766, 793, 792, 794, 795, 796, 797, 798,
	799, 801, 800, 802, 803, 804, 805, 806, 807, 775,
	776, 779, 780, 778, 777, 781, 790, 791, 782, 783,
	784, 785, 786, 787, 789, 788, 717, 194, 216, 358,
	0, 443, 281, 606, 576, 571, 201, 218, 867, 255,
	868, 0, 0, 872, 0, 0, 0, 874, 873, 0,
	875, 840, 839, 0, 0, 869, 870, 0, 871, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 550, 552, 565,
	583, 589, 469, 882, 883, 884, 885, 886, 887, 888,
	889, 292, 560, 590, 558, 602, 584, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 575, 490, 222, 455,
	283, 246, 907, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 386, 0,
	366, 540, 541, 308, 506, 0, 729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 716, 0, 0, 0, 263, 721, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 547, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 728, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 724, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 93, 0, 0, 908, 892, 857, 858, 896, 909,
	910, 911, 912, 897, 0, 233, 898, 899, 240, 900,
	0, 856, 758, 760, 759, 810, 811, 812, 813, 814,
	815, 816, 756, 905, 913, 914, 0, 258, 313, 265,
	257, 544, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 713, 0,
	727, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	710, 711, 0, 0, 0, 0, 851, 0, 712, 0,
	0, 720, 915, 916, 917, 918, 919, 920, 921, 922,
	923, 924, 925, 926, 927, 928, 929, 930, 931, 932,
	933, 934, 935, 936, 937, 938, 939, 940, 941, 942,
	943, 944, 945, 946, 947, 948, 949, 950, 951, 952,
	953, 954, 955, 956, 723, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 391, 250, 0,
	442, 850, 0, 0, 586, 0, 0, 848, 0, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 902, 0, 460, 415, 564,
	228, 277, 447, 421, 458, 429, 280, 0, 0, 459,
	362, 549, 439, 561, 587, 588, 256, 395, 573, 500,
	581, 605, 221, 253, 409, 493, 567, 482, 387, 545,
	546, 321, 481, 288, 198, 359, 593, 219, 468, 361,
	237, 226, 551, 570, 282, 445, 600, 208, 495, 559,
	234, 472, 0, 0, 607, 242, 492, 210, 556, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 903, 904, 249, 608, 764, 580, 215, 0,
	579, 397, 548, 557, 384, 373, 214, 555, 382, 372,
	326, 772, 773, 273, 299, 836, 835, 834, 298, 300,
	832, 833, 831, 202, 568, 0, 203, 0, 487, 569,
	609, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	543, 562, 574, 585, 591, 592, 594, 595, 596, 597,
	598, 601, 599, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 566, 484, 861, 849, 733, 734, 865,
	736, 737, 862, 863, 730, 731, 735, 864, 866, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 0, 852, 719,
	718, 0, 726, 0, 754, 755, 757, 761, 762, 763,
	774, 808, 809, 817, 819, 820, 818, 821, 822, 823,
	826, 827, 828, 829, 824, 825, 830, 738, 742, 739,
	740, 741, 753, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 876, 877, 878, 879, 880, 881, 767,
	771, 770, 768, 769, 765, 766, 793, 792, 794, 795,
	796, 797, 798, 799, 801, 800, 802, 803, 804, 805,
	806, 807, 775, 776, 779, 780, 778, 777, 781, 790,
	791, 782, 783, 784, 785, 786, 787, 789, 788, 717,
	194, 216, 358, 0, 443, 281, 606, 576, 571, 201,
	218, 867, 255, 868, 0, 0, 872, 0, 0, 0,
	874, 873, 0, 875, 840, 839, 0, 0, 869, 870,
	0, 871, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	550, 552, 565, 583, 589, 469, 882, 883, 884, 885,
	886, 887, 888, 889, 292, 560, 590, 558, 602, 584,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 575,
	490, 222, 455, 283, 246, 907, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 540, 541, 308, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 547, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 544, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1427, 1426, 1428,
	1429, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 564, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 549, 439, 561, 587, 588, 256,
	395, 573, 500, 581, 605, 221, 253, 409, 493, 567,
	482, 387, 545, 546, 321, 481, 288, 198, 359, 593,
	219, 468, 361, 237, 226, 551, 570, 282, 445, 600,
	208, 495, 559, 234, 472, 0, 0, 607, 242, 492,
	210, 556, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 553, 554, 249, 608, 223,
	580, 215, 0, 579, 397, 548, 557, 384, 373, 214,
	555, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 568, 0, 203,
	0, 487, 569, 609, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 543, 562, 574, 585, 591, 592, 594,
	595, 596, 597, 598, 601, 599, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 566, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	374, 474, 563, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 542, 304, 211, 212, 213, 502,
	503, 504, 505, 577, 578, 582, 451, 452, 453, 454,
	285, 572, 301, 457, 456, 323, 324, 369, 438, 512,
	514, 522, 525, 527, 529, 532, 535, 513, 515, 523,
	526, 528, 530, 533, 536, 507, 508, 509, 511, 519,
	518, 516, 538, 539, 520, 524, 510, 517, 521, 531,
	537, 534, 0, 194, 216, 358, 0, 443, 281, 606,
	576, 571, 201, 218, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 550, 552, 565, 583, 589, 469, 293,
	294, 433, 434, 306, 307, 603, 604, 292, 560, 590,
	558, 602, 584, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 575, 490, 222, 455, 283, 246, 0, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 540, 541, 308,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 547, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 0, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 0, 0,
	0, 0, 0, 258, 313, 265, 257, 544, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 1068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 0, 0, 1067,
	586, 0, 0, 0, 0, 0, 1064, 1065, 355, 1025,
	322, 195, 220, 1058, 1062, 401, 450, 462, 0, 0,
	0, 248, 0, 460, 415, 564, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 549, 439, 561,
	587, 588, 256, 395, 573, 500, 581, 605, 221, 253,
	409, 493, 567, 482, 387, 545, 546, 321, 481, 288,
	198, 359, 593, 219, 468, 361, 237, 226, 551, 570,
	282, 445, 600, 208, 495, 559, 234, 472, 0, 0,
	607, 242, 492, 210, 556, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 553, 554,
	249, 608, 223, 580, 215, 0, 579, 397, 548, 557,
	384, 373, 214, 555, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	568, 0, 203, 0, 487, 569, 609, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 543, 562, 574, 585,
	591, 592, 594, 595, 596, 597, 598, 601, 599, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 566,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 374, 474, 563, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 542, 304, 211,
	212, 213, 502, 503, 504, 505, 577, 578, 582, 451,
	452, 453, 454, 285, 572, 301, 457, 456, 323, 324,
	369, 438, 512, 514, 522, 525, 527, 529, 532, 535,
	513, 515, 523, 526, 528, 530, 533, 536, 507, 508,
	509, 511, 519, 518, 516, 538, 539, 520, 524, 510,
	517, 521, 531, 537, 534, 0, 194, 216, 358, 0,
	443, 281, 606, 576, 571, 201, 218, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 550, 552, 565, 583,
	589, 469, 293, 294, 433, 434, 306, 307, 603, 604,
	292, 560, 590, 558, 602, 584, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 575, 490, 222, 455, 283,
	246, 0, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	540, 541, 308, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 547, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 0, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	0, 0, 0, 1607, 892, 0, 0, 1604, 0, 0,
	0, 0, 1602, 0, 233, 1603, 1601, 240, 1606, 0,
	856, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 0, 0, 0, 0, 0, 258, 313, 265, 257,
	544, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	0, 0, 0, 586, 0, 0, 0, 0, 0, 0,
	0, 355, 0, 322, 195, 220, 0, 0, 401, 450,
	462, 0, 0, 0, 248, 0, 460, 415, 564, 228,
	277, 447, 421, 458, 429, 280, 0, 0, 459, 362,
	549, 439, 561, 587, 588, 256, 395, 573, 500, 581,
	605, 221, 253, 409, 493, 567, 482, 387, 545, 546,
	321, 481, 288, 198, 359, 593, 219, 468, 361, 237,
	226, 551, 570, 282, 445, 600, 208, 495, 559, 234,
	472, 0, 0, 607, 242, 492, 210, 556, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 553, 554, 249, 608, 223, 580, 215, 0, 579,
	397, 548, 557, 384, 373, 214, 555, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 568, 0, 203, 0, 487, 569, 609,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 543,
	562, 574, 585, 591, 592, 594, 595, 596, 597, 598,
	601, 599, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 566, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 374, 474, 563, 327,
	339, 342, 332, 351, 0, 352, 328, 329, 334, 336,
	337, 338, 343, 344, 348, 354, 244, 205, 380, 388,
	542, 304, 211, 212, 213, 502, 503, 504, 505, 577,
	578, 582, 451, 452, 453, 454, 285, 572, 301, 457,
	456, 323, 324, 369, 438, 512, 514, 522, 525, 527,
	529, 532, 535, 513, 515, 523, 526, 528, 530, 533,
	536, 507, 508, 509, 511, 519, 518, 516, 538, 539,
	520, 524, 510, 517, 521, 531, 537, 534, 0, 194,
	216, 358, 0, 443, 281, 606, 576, 571, 201, 218,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 550,
	552, 565, 583, 589, 469, 293, 294, 433, 434, 306,
	307, 603, 604, 292, 560, 590, 558, 602, 584, 427,
	368, 0, 0, 371, 274, 297, 312, 0, 575, 490,
	222, 455, 283, 246, 0, 0, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	0, 386, 366, 540, 541, 308, 84, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 547, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 93, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 544, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 564, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 549, 439, 561, 587, 588, 256,
	395, 573, 500, 581, 605, 221, 253, 409, 493, 567,
	482, 387, 545, 546, 321, 481, 288, 198, 359, 593,
	219, 468, 361, 237, 226, 551, 570, 282, 445, 600,
	208, 495, 559, 234, 472, 0, 0, 607, 242, 492,
	210, 556, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 553, 554, 249, 608, 223,
	580, 215, 0, 579, 397, 548, 557, 384, 373, 214,
	555, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 568, 0, 203,
	0, 487, 569, 609, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 543, 562, 574, 585, 591, 592, 594,
	595, 596, 597, 598, 601, 599, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 566, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	374, 474, 563, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 542, 304, 211, 212, 213, 502,
	503, 504, 505, 577, 578, 582, 451, 452, 453, 454,
	285, 572, 301, 457, 456, 323, 324, 369, 438, 512,
	514, 522, 525, 527, 529, 532, 535, 513, 515, 523,
	526, 528, 530, 533, 536, 507, 508, 509, 511, 519,
	518, 516, 538, 539, 520, 524, 510, 517, 521, 531,
	537, 534, 0, 194, 216, 358, 92, 443, 281, 606,
	576, 571, 201, 218, 0, 255, 0, 0, 0, 0,
	0, 0, 2258, 0, 0, 2257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 550, 552, 565, 583, 589, 469, 293,
	294, 433, 434, 306, 307, 603, 604, 292, 560, 590,
	558, 602, 584, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 575, 490, 222, 455, 283, 246, 0, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 1663, 0, 366, 540, 541, 308,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 1665, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 547, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 0, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	1667, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 0, 0,
	0, 0, 0, 258, 313, 265, 257, 544, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 1399,
	0, 1400, 1401, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 0, 0, 0,
	586, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 248, 0, 460, 415, 564, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 549, 439, 561,
	587, 588, 256, 395, 573, 500, 581, 605, 221, 253,
	409, 493, 567, 482, 387, 545, 546, 321, 481, 288,
	198, 359, 593, 219, 468, 361, 237, 226, 551, 570,
	282, 445, 600, 208, 495, 559, 234, 472, 0, 0,
	607, 242, 492, 210, 556, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 553, 554,
	249, 608, 223, 580, 215, 0, 579, 397, 548, 557,
	384, 373, 214, 555, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	568, 0, 203, 0, 487, 569, 609, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 543, 562, 574, 585,
	591, 592, 594, 595, 596, 597, 598, 601, 599, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 566,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 374, 474, 563, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 542, 304, 211,
	212, 213, 502, 503, 504, 505, 577, 578, 582, 451,
	452, 453, 454, 285, 572, 301, 457, 456, 323, 324,
	369, 438, 512, 514, 522, 525, 527, 529, 532, 535,
	513, 515, 523, 526, 528, 530, 533, 536, 507, 508,
	509, 511, 519, 518, 516, 538, 539, 520, 524, 510,
	517, 521, 531, 537, 534, 0, 194, 216, 358, 0,
	443, 281, 606, 576, 571, 201, 218, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 550, 552, 565, 583,
	589, 469, 293, 294, 433, 434, 306, 307, 603, 604,
	292, 560, 590, 558, 602, 584, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 575, 490, 222, 455, 283,
	246, 0, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 0, 386, 366,
	540, 541, 308, 84, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 547, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 0, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 93, 0, 1644, 0, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 240, 0,
	0, 0, 341, 350, 349, 330, 331, 333, 335, 340,
	347, 353, 0, 0, 0, 0, 0, 258, 313, 265,
	257, 544, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 391, 250, 0,
	442, 0, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 248, 0, 460, 415, 564,
	228, 277, 447, 421, 458, 429, 280, 0, 0, 459,
	362, 549, 439, 561, 587, 588, 256, 395, 573, 500,
	581, 605, 221, 253, 409, 493, 567, 482, 387, 545,
	546, 321, 481, 288, 198, 359, 593, 219, 468, 361,
	237, 226, 551, 570, 282, 445, 600, 208, 495, 559,
	234, 472, 0, 0, 607, 242, 492, 210, 556, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 553, 554, 249, 608, 223, 580, 215, 0,
	579, 397, 548, 557, 384, 373, 214, 555, 382, 372,
	326, 345, 346, 273, 299, 436, 365, 437, 298, 300,
	393, 392, 394, 202, 568, 0, 203, 0, 487, 569,
	609, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	543, 562, 574, 585, 591, 592, 594, 595, 596, 597,
	598, 601, 599, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 566, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 374, 474, 563,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 542, 304, 211, 212, 213, 502, 503, 504, 505,
	577, 578, 582, 451, 452, 453, 454, 285, 572, 301,
	457, 456, 323, 324, 369, 438, 512, 514, 522, 525,
	527, 529, 532, 535, 513, 515, 523, 526, 528, 530,
	533, 536, 507, 508, 509, 511, 519, 518, 516, 538,
	539, 520, 524, 510, 517, 521, 531, 537, 534, 0,
	194, 216, 358, 92, 443, 281, 606, 576, 571, 201,
	218, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	550, 552, 565, 583, 589, 469, 293, 294, 433, 434,
	306, 307, 603, 604, 292, 560, 590, 558, 602, 584,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 575,
	490, 222, 455, 283, 246, 0, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 540, 541, 308, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 547, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 93, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 544, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 564, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 549, 439, 561, 587, 588, 256,
	395, 573, 500, 581, 605, 221, 253, 409, 493, 567,
	482, 387, 545, 546, 321, 481, 288, 198, 359, 593,
	219, 468, 361, 237, 226, 551, 570, 282, 445, 600,
	208, 495, 559, 234, 472, 0, 0, 607, 242, 492,
	210, 556, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 553, 554, 249, 608, 223,
	580, 215, 0, 579, 397, 548, 557, 384, 373, 214,
	555, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 568, 0, 203,
	0, 487, 569, 609, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 543, 562, 574, 585, 591, 592, 594,
	595, 596, 597, 598, 601, 599, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 566, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	374, 474, 563, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 542, 304, 211, 212, 213, 502,
	503, 504, 505, 577, 578, 582, 451, 452, 453, 454,
	285, 572, 301, 457, 456, 323, 324, 369, 438, 512,
	514, 522, 525, 527, 529, 532, 535, 513, 515, 523,
	526, 528, 530, 533, 536, 507, 508, 509, 511, 519,
	518, 516, 538, 539, 520, 524, 510, 517, 521, 531,
	537, 534, 0, 194, 216, 358, 0, 443, 281, 606,
	576, 571, 201, 218, 0, 255, 0, 0, 0, 0,
	0, 0, 2258, 0, 0, 2257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 550, 552, 565, 583, 589, 469, 293,
	294, 433, 434, 306, 307, 603, 604, 292, 560, 590,
	558, 602, 584, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 575, 490, 222, 455, 283, 246, 0, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 540, 541, 308,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 2208, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 547, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 0, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	1846, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 0, 0,
	0, 0, 0, 258, 313, 265, 257, 544, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 0, 0, 0,
	586, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 248, 0, 460, 415, 564, 228, 277, 447, 421,
	458, 429, 280, 0, 2206, 459, 362, 549, 439, 561,
	587, 588, 256, 395, 573, 500, 581, 605, 221, 253,
	409, 493, 567, 482, 387, 545, 546, 321, 481, 288,
	198, 359, 593, 219, 468, 361, 237, 226, 551, 570,
	282, 445, 600, 208, 495, 559, 234, 472, 0, 0,
	607, 242, 492, 210, 556, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 553, 554,
	249, 608, 223, 580, 215, 0, 579, 397, 548, 557,
	384, 373, 214, 555, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	568, 0, 203, 0, 487, 569, 609, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 543, 562, 574, 585,
	591, 592, 594, 595, 596, 597, 598, 601, 599, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 566,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 374, 474, 563, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 542, 304, 211,
	212, 213, 502, 503, 504, 505, 577, 578, 582, 451,
	452, 453, 454, 285, 572, 301, 457, 456, 323, 324,
	369, 438, 512, 514, 522, 525, 527, 529, 532, 535,
	513, 515, 523, 526, 528, 530, 533, 536, 507, 508,
	509, 511, 519, 518, 516, 538, 539, 520, 524, 510,
	517, 521, 531, 537, 534, 0, 194, 216, 358, 0,
	443, 281, 606, 576, 571, 201, 218, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 550, 552, 565, 583,
	589, 469, 293, 294, 433, 434, 306, 307, 603, 604,
	292, 560, 590, 558, 602, 584, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 575, 490, 222, 455, 283,
	246, 0, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	540, 541, 308, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 547, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 0, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 240, 0, 0,
	0, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 0, 0, 0, 0, 0, 258, 313, 265, 257,
	544, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 1019, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	0, 0, 0, 586, 0, 0, 0, 0, 0, 0,
	0, 355, 1025, 322, 195, 220, 1023, 0, 401, 450,
	462, 0, 0, 0, 248, 0, 460, 415, 564, 228,
	277, 447, 421, 458, 429, 280, 0, 0, 459, 362,
	549, 439, 561, 587, 588, 256, 395, 573, 500, 581,
	605, 221, 253, 409, 493, 567, 482, 387, 545, 546,
	321, 481, 288, 198, 359, 593, 219, 468, 361, 237,
	226, 551, 570, 282, 445, 600, 208, 495, 559, 234,
	472, 0, 0, 607, 242, 492, 210, 556, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 553, 554, 249, 608, 223, 580, 215, 0, 579,
	397, 548, 557, 384, 373, 214, 555, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 568, 0, 203, 0, 487, 569, 609,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 543,
	562, 574, 585, 591, 592, 594, 595, 596, 597, 598,
	601, 599, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 566, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 374, 474, 563, 327,
	339, 342, 332, 351, 0, 352, 328, 329, 334, 336,
	337, 338, 343, 344, 348, 354, 244, 205, 380, 388,
	542, 304, 211, 212, 213, 502, 503, 504, 505, 577,
	578, 582, 451, 452, 453, 454, 285, 572, 301, 457,
	456, 323, 324, 369, 438, 512, 514, 522, 525, 527,
	529, 532, 535, 513, 515, 523, 526, 528, 530, 533,
	536, 507, 508, 509, 511, 519, 518, 516, 538, 539,
	520, 524, 510, 517, 521, 531, 537, 534, 0, 194,
	216, 358, 0, 443, 281, 606, 576, 571, 201, 218,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 550,
	552, 565, 583, 589, 469, 293, 294, 433, 434, 306,
	307, 603, 604, 292, 560, 590, 558, 602, 584, 427,
	368, 0, 0, 371, 274, 297, 312, 0, 575, 490,
	222, 455, 283, 246, 0, 0, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	386, 0, 366, 540, 541, 308, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 2208, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 356, 260, 0, 0, 419, 0, 200, 0,
	475, 247, 367, 364, 547, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 0, 360, 0, 0, 485, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 243, 317, 199, 402,
	486, 279, 0, 0, 0, 0, 1846, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	240, 0, 0, 0, 341, 350, 349, 330, 331, 333,
	335, 340, 347, 353, 0, 0, 0, 0, 0, 258,
	313, 265, 257, 544, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 391,
	250, 0, 442, 0, 0, 0, 586, 0, 0, 0,
	0, 0, 0, 0, 355, 0, 322, 195, 220, 0,
	0, 401, 450, 462, 0, 0, 0, 248, 0, 460,
	415, 564, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 549, 439, 561, 587, 588, 256, 395,
	573, 500, 581, 605, 221, 253, 409, 493, 567, 482,
	387, 545, 546, 321, 481, 288, 198, 359, 593, 219,
	468, 361, 237, 226, 551, 570, 282, 445, 600, 208,
	495, 559, 234, 472, 0, 0, 607, 242, 492, 210,
	556, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 553, 554, 249, 608, 223, 580,
	215, 0, 579, 397, 548, 557, 384, 373, 214, 555,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 568, 0, 203, 0,
	487, 569, 609, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 543, 562, 574, 585, 591, 592, 594, 595,
	596, 597, 598, 601, 599, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 566, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 374,
	474, 563, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 542, 304, 211, 212, 213, 502, 503,
	504, 505, 577, 578, 582, 451, 452, 453, 454, 285,
	572, 301, 457, 456, 323, 324, 369, 438, 512, 514,
	522, 525, 527, 529, 532, 535, 513, 515, 523, 526,
	528, 530, 533, 536, 507, 508, 509, 511, 519, 518,
	516, 538, 539, 520, 524, 510, 517, 521, 531, 537,
	534, 0, 194, 216, 358, 0, 443, 281, 606, 576,
	571, 201, 218, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 550, 552, 565, 583, 589, 469, 293, 294,
	433, 434, 306, 307, 603, 604, 292, 560, 590, 558,
	602, 584, 427, 368, 0, 0, 371, 274, 297, 312,
	0, 575, 490, 222, 455, 283, 246, 0, 0, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 386, 0, 366, 540, 541, 308, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 547, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 0, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 0, 0, 1644, 0,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 0, 0, 0,
	0, 0, 258, 313, 265, 257, 544, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 391, 250, 0, 442, 0, 0, 0, 586,
	0, 0, 0, 3696, 0, 0, 0, 355, 0, 322,
	195, 220, 0, 0, 401, 450, 462, 0, 0, 0,
	248, 0, 460, 415, 564, 228, 277, 447, 421, 458,
	429, 280, 0, 0, 459, 362, 549, 439, 561, 587,
	588, 256, 395, 573, 500, 581, 605, 221, 253, 409,
	493, 567, 482, 387, 545, 546, 321, 481, 288, 198,
	359, 593, 219, 468, 361, 237, 226, 551, 570, 282,
	445, 600, 208, 495, 559, 234, 472, 0, 0, 607,
	242, 492, 210, 556, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 553, 554, 249,
	608, 223, 580, 215, 0, 579, 397, 548, 557, 384,
	373, 214, 555, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 568,
	0, 203, 0, 487, 569, 609, 441, 207, 229, 230,
	232, 0, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 0, 543, 562, 574, 585, 591,
	592, 594, 595, 596, 597, 598, 601, 599, 396, 303,
	483, 325, 363, 0, 0, 414, 461, 235, 566, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 374, 474, 563, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 542, 304, 211, 212,
	213, 502, 503, 504, 505, 577, 578, 582, 451, 452,
	453, 454, 285, 572, 301, 457, 456, 323, 324, 369,
	438, 512, 514, 522, 525, 527, 529, 532, 535, 513,
	515, 523, 526, 528, 530, 533, 536, 507, 508, 509,
	511, 519, 518, 516, 538, 539, 520, 524, 510, 517,
	521, 531, 537, 534, 0, 194, 216, 358, 0, 443,
	281, 606, 576, 571, 201, 218, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 550, 552, 565, 583, 589,
	469, 293, 294, 433, 434, 306, 307, 603, 604, 292,
	560, 590, 558, 602, 584, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 575, 490, 222, 455, 283, 246,
	0, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 540,
	541, 308, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	547, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 0,
	0, 0, 2003, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 544,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 564, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 549,
	439, 561, 587, 588, 256, 395, 573, 500, 581, 605,
	221, 253, 409, 493, 567, 482, 387, 545, 546, 321,
	481, 288, 198, 359, 593, 219, 468, 361, 237, 226,
	551, 570, 282, 445, 600, 208, 495, 559, 234, 472,
	0, 0, 607, 242, 492, 210, 556, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	553, 554, 249, 608, 223, 580, 215, 0, 579, 397,
	548, 557, 384, 373, 214, 555, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 568, 0, 203, 0, 487, 569, 609, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 543, 562,
	574, 585, 591, 592, 594, 595, 596, 597, 598, 601,
	599, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 566, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 374, 474, 563, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 542,
	304, 211, 212, 213, 502, 503, 504, 505, 577, 578,
	582, 451, 452, 453, 454, 285, 572, 301, 457, 456,
	323, 324, 369, 438, 512, 514, 522, 525, 527, 529,
	532, 535, 513, 515, 523, 526, 528, 530, 533, 536,
	507, 508, 509, 511, 519, 518, 516, 538, 539, 520,
	524, 510, 517, 521, 531, 537, 534, 0, 194, 216,
	358, 0, 443, 281, 606, 576, 571, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 550, 552,
	565, 583, 589, 469, 293, 294, 433, 434, 306, 307,
	603, 604, 292, 560, 590, 558, 602, 584, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 575, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 386,
	0, 366, 540, 541, 308, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 547, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 2678, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 544, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2679, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 0, 0, 0, 586, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 248, 0, 460, 415,
	564, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 549, 439, 561, 587, 588, 256, 395, 573,
	500, 581, 605, 221, 253, 409, 493, 567, 482, 387,
	545, 546, 321, 481, 288, 198, 359, 593, 219, 468,
	361, 237, 226, 551, 570, 282, 445, 600, 208, 495,
	559, 234, 472, 0, 0, 607, 242, 492, 210, 556,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 553, 554, 249, 608, 223, 580, 215,
	0, 579, 397, 548, 557, 384, 373, 214, 555, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 568, 0, 203, 0, 487,
	569, 609, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 543, 562, 574, 585, 591, 592, 594, 595, 596,
	597, 598, 601, 599, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 566, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 628, 374, 474,
	563, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 542, 304, 211, 212, 213, 502, 503, 504,
	505, 577, 578, 582, 451, 452, 453, 454, 285, 572,
	301, 457, 456, 323, 324, 369, 438, 512, 514, 522,
	525, 527, 529, 532, 535, 513, 515, 523, 526, 528,
	530, 533, 536, 507, 508, 509, 511, 519, 518, 516,
	538, 539, 520, 524, 510, 517, 521, 531, 537, 534,
	0, 194, 216, 358, 0, 443, 281, 606, 576, 571,
	201, 218, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 550, 552, 565, 583, 589, 469, 293, 294, 433,
	434, 306, 307, 603, 604, 292, 560, 590, 558, 602,
	584, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	575, 490, 222, 455, 283, 246, 0, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 386, 0, 366, 540, 541, 308, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 356, 260, 0, 0, 419, 0,
	200, 0, 475, 247, 367, 364, 547, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 0, 360, 0, 0,
	485, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 243, 317,
	199, 402, 486, 279, 0, 0, 0, 0, 0, 676,
	0, 0, 0, 0, 2663, 0, 0, 0, 0, 233,
	0, 0, 240, 2664, 0, 0, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 0, 0, 0, 0,
	0, 258, 313, 265, 257, 544, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 391, 250, 0, 442, 0, 0, 0, 586, 0,
	0, 0, 0, 0, 0, 0, 355, 0, 322, 195,
	220, 0, 0, 401, 450, 462, 0, 0, 0, 248,
	0, 460, 415, 564, 228, 277, 447, 421, 458, 429,
	280, 0, 0, 459, 362, 549, 439, 561, 587, 588,
	256, 395, 573, 500, 581, 605, 221, 253, 409, 493,
	567, 482, 387, 545, 546, 321, 481, 288, 198, 359,
	593, 219, 468, 361, 237, 226, 551, 570, 282, 445,
	600, 208, 495, 559, 234, 472, 0, 0, 607, 242,
	492, 210, 556, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 553, 554, 249, 608,
	223, 580, 215, 0, 579, 397, 548, 557, 384, 373,
	214, 555, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 568, 0,
	203, 0, 487, 569, 609, 441, 207, 229, 230, 232,
	0, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 0, 543, 562, 574, 585, 591, 592,
	594, 595, 596, 597, 598, 601, 599, 396, 303, 483,
	325, 363, 0, 0, 414, 461, 235, 566, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	628, 374, 474, 563, 327, 339, 342, 332, 351, 0,
	352, 328, 329, 334, 336, 337, 338, 343, 344, 348,
	354, 244, 205, 380, 388, 542, 304, 211, 212, 213,
	502, 503, 504, 505, 577, 578, 582, 451, 452, 453,
	454, 285, 572, 301, 457, 456, 323, 324, 369, 438,
	512, 514, 522, 525, 527, 529, 532, 535, 513, 515,
	523, 526, 528, 530, 533, 536, 507, 508, 509, 511,
	519, 518, 516, 538, 539, 520, 524, 510, 517, 521,
	531, 537, 534, 0, 194, 216, 358, 0, 443, 281,
	606, 576, 571, 201, 218, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	398, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 550, 552, 565, 583, 589, 469,
	293, 294, 433, 434, 306, 307, 603, 604, 292, 560,
	590, 558, 602, 584, 427, 368, 0, 0, 371, 274,
	297, 312, 0, 575, 490, 222, 455, 283, 246, 0,
	0, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 386, 0, 366, 540, 541,
	308, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 1686, 0, 0, 0, 356, 260, 0,
	0, 419, 0, 200, 0, 475, 247, 367, 364, 547,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 0,
	360, 0, 0, 485, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 243, 317, 199, 402, 486, 279, 0, 0, 0,
	0, 1685, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 240, 0, 0, 0, 341,
	350, 349, 330, 331, 333, 335, 340, 347, 353, 0,
	0, 0, 0, 0, 258, 313, 265, 257, 544, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 391, 250, 0, 442, 0, 0,
	0, 586, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 322, 195, 220, 0, 0, 401, 450, 462, 0,
	0, 0, 248, 0, 460, 415, 564, 228, 277, 447,
	421, 458, 429, 280, 0, 0, 459, 362, 549, 439,
	561, 587, 588, 256, 395, 573, 500, 581, 605, 221,
	253, 409, 493, 567, 482, 387, 545, 546, 321, 481,
	288, 198, 359, 593, 219, 468, 361, 237, 226, 551,
	570, 282, 445, 600, 208, 495, 559, 234, 472, 0,
	0, 607, 242, 492, 210, 556, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 553,
	554, 249, 608, 223, 580, 215, 0, 579, 397, 548,
	557, 384, 373, 214, 555, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 568, 0, 203, 0, 487, 569, 609, 441, 207,
	229, 230, 232, 0, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 0, 543, 562, 574,
	585, 591, 592, 594, 595, 596, 597, 598, 601, 599,
	396, 303, 483, 325, 363, 0, 0, 414, 461, 235,
	566, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 374, 474, 563, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 542, 304,
	211, 212, 213, 502, 503, 504, 505, 577, 578, 582,
	451, 452, 453, 454, 285, 572, 301, 457, 456, 323,
	324, 369, 438, 512, 514, 522, 525, 527, 529, 532,
	535, 513, 515, 523, 526, 528, 530, 533, 536, 507,
	508, 509, 511, 519, 518, 516, 538, 539, 520, 524,
	510, 517, 521, 531, 537, 534, 0, 194, 216, 358,
	0, 443, 281, 606, 576, 571, 201, 218, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 550, 552, 565,
	583, 589, 469, 293, 294, 433, 434, 306, 307, 603,
	604, 292, 560, 590, 558, 602, 584, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 575, 490, 222, 455,
	283, 246, 0, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 386, 0,
	366, 540, 541, 308, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 547, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 0, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 0, 0, 0, 0, 678, 679, 680, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 240, 0,
	0, 0, 341, 350, 349, 330, 331, 333, 335, 340,
	347, 353, 0, 0, 0, 0, 0, 258, 313, 265,
	257, 544, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 391, 250, 0,
	442, 0, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 248, 0, 460, 415, 564,
	228, 277, 447, 421, 458, 429, 280, 0, 0, 459,
	362, 549, 439, 561, 587, 588, 256, 395, 573, 500,
	581, 605, 221, 253, 409, 493, 567, 482, 387, 545,
	546, 321, 481, 288, 198, 359, 593, 219, 468, 361,
	237, 226, 551, 570, 282, 445, 600, 208, 495, 559,
	234, 472, 0, 0, 607, 242, 492, 210, 556, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 553, 554, 249, 608, 223, 580, 215, 0,
	579, 397, 548, 557, 384, 373, 214, 555, 382, 372,
	326, 345, 346, 273, 299, 436, 365, 437, 298, 300,
	393, 392, 394, 202, 568, 0, 203, 0, 487, 569,
	609, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	543, 562, 574, 585, 591, 592, 594, 595, 596, 597,
	598, 601, 599, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 566, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 374, 474, 563,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 542, 304, 211, 212, 213, 502, 503, 504, 505,
	577, 578, 582, 451, 452, 453, 454, 285, 572, 301,
	457, 456, 323, 324, 369, 438, 512, 514, 522, 525,
	527, 529, 532, 535, 513, 515, 523, 526, 528, 530,
	533, 536, 507, 508, 509, 511, 519, 518, 516, 538,
	539, 520, 524, 510, 517, 521, 531, 537, 534, 0,
	194, 216, 358, 0, 443, 281, 606, 576, 571, 201,
	218, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	550, 552, 565, 583, 589, 469, 293, 294, 433, 434,
	306, 307, 603, 604, 292, 560, 590, 558, 602, 584,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 575,
	490, 222, 455, 283, 246, 0, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 540, 541, 308, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 547, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 544, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 586, 0, 0,
	0, 3821, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 564, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 549, 439, 561, 587, 588, 256,
	395, 573, 500, 581, 605, 221, 253, 409, 493, 567,
	482, 387, 545, 546, 321, 481, 288, 198, 359, 593,
	219, 468, 361, 237, 226, 551, 570, 282, 445, 600,
	208, 495, 559, 234, 472, 0, 0, 607, 242, 492,
	210, 556, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 553, 554, 249, 608, 223,
	580, 215, 0, 579, 397, 548, 557, 384, 373, 214,
	555, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 568, 0, 203,
	0, 487, 569, 609, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 543, 562, 574, 585, 591, 592, 594,
	595, 596, 597, 598, 601, 599, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 566, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	374, 474, 563, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 542, 304, 211, 212, 213, 502,
	503, 504, 505, 577, 578, 582, 451, 452, 453, 454,
	285, 572, 301, 457, 456, 323, 324, 369, 438, 512,
	514, 522, 525, 527, 529, 532, 535, 513, 515, 523,
	526, 528, 530, 533, 536, 507, 508, 509, 511, 519,
	518, 516, 538, 539, 520, 524, 510, 517, 521, 531,
	537, 534, 0, 194, 216, 358, 0, 443, 281, 606,
	576, 571, 201, 218, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 550, 552, 565, 583, 589, 469, 293,
	294, 433, 434, 306, 307, 603, 604, 292, 560, 590,
	558, 602, 584, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 575, 490, 222, 455, 283, 246, 0, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 540, 541, 308,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 547, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 0, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	1846, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 0, 0,
	0, 0, 0, 258, 313, 265, 257, 544, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 0, 0, 0,
	586, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 248, 0, 460, 415, 564, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 549, 439, 561,
	587, 588, 256, 395, 573, 500, 581, 605, 221, 253,
	409, 493, 567, 482, 387, 545, 546, 321, 481, 288,
	198, 359, 593, 219, 468, 361, 237, 226, 551, 570,
	282, 445, 600, 208, 495, 559, 234, 472, 0, 0,
	607, 242, 492, 210, 556, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 553, 554,
	249, 608, 223, 580, 215, 0, 579, 397, 548, 557,
	384, 373, 214, 555, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	568, 0, 203, 0, 487, 569, 609, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 543, 562, 574, 585,
	591, 592, 594, 595, 596, 597, 598, 601, 599, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 566,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 374, 474, 563, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 542, 304, 211,
	212, 213, 502, 503, 504, 505, 577, 578, 582, 451,
	452, 453, 454, 285, 572, 301, 457, 456, 323, 324,
	369, 438, 512, 514, 522, 525, 527, 529, 532, 535,
	513, 515, 523, 526, 528, 530, 533, 536, 507, 508,
	509, 511, 519, 518, 516, 538, 539, 520, 524, 510,
	517, 521, 531, 537, 534, 0, 194, 216, 358, 0,
	443, 281, 606, 576, 571, 201, 218, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 550, 552, 565, 583,
	589, 469, 293, 294, 433, 434, 306, 307, 603, 604,
	292, 560, 590, 558, 602, 584, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 575, 490, 222, 455, 283,
	246, 0, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	540, 541, 308, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 547, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 0, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 240, 0, 0,
	0, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 0, 0, 0, 0, 0, 258, 313, 265, 257,
	544, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	0, 0, 0, 586, 0, 0, 0, 3696, 0, 0,
	0, 355, 0, 322, 195, 220, 0, 0, 401, 450,
	462, 0, 0, 0, 248, 0, 460, 415, 564, 228,
	277, 447, 421, 458, 429, 280, 0, 0, 459, 362,
	549, 439, 561, 587, 588, 256, 395, 573, 500, 581,
	605, 221, 253, 409, 493, 567, 482, 387, 545, 546,
	321, 481, 288, 198, 359, 593, 219, 468, 361, 237,
	226, 551, 570, 282, 445, 600, 208, 495, 559, 234,
	472, 0, 0, 607, 242, 492, 210, 556, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 553, 554, 249, 608, 223, 580, 215, 0, 579,
	397, 548, 557, 384, 373, 214, 555, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 568, 0, 203, 0, 487, 569, 609,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 543,
	562, 574, 585, 591, 592, 594, 595, 596, 597, 598,
	601, 599, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 566, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 374, 474, 563, 327,
	339, 342, 332, 351, 0, 352, 328, 329, 334, 336,
	337, 338, 343, 344, 348, 354, 244, 205, 380, 388,
	542, 304, 211, 212, 213, 502, 503, 504, 505, 577,
	578, 582, 451, 452, 453, 454, 285, 572, 301, 457,
	456, 323, 324, 369, 438, 512, 514, 522, 525, 527,
	529, 532, 535, 513, 515, 523, 526, 528, 530, 533,
	536, 507, 508, 509, 511, 519, 518, 516, 538, 539,
	520, 524, 510, 517, 521, 531, 537, 534, 0, 194,
	216, 358, 0, 443, 281, 606, 576, 571, 201, 218,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 550,
	552, 565, 583, 589, 469, 293, 294, 433, 434, 306,
	307, 603, 604, 292, 560, 590, 558, 602, 584, 427,
	368, 0, 0, 371, 274, 297, 312, 0, 575, 490,
	222, 455, 283, 246, 0, 0, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	386, 0, 366, 540, 541, 308, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 356, 260, 0, 0, 419, 0, 200, 0,
	475, 247, 367, 364, 547, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 0, 360, 0, 0, 485, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 243, 317, 199, 402,
	486, 279, 0, 93, 0, 0, 0, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	240, 0, 0, 0, 341, 350, 349, 330, 331, 333,
	335, 340, 347, 353, 0, 0, 0, 0, 0, 258,
	313, 265, 257, 544, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 391,
	250, 0, 442, 0, 0, 0, 586, 0, 0, 0,
	0, 0, 0, 0, 355, 0, 322, 195, 220, 0,
	0, 401, 450, 462, 0, 0, 0, 248, 0, 460,
	415, 564, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 549, 439, 561, 587, 588, 256, 395,
	573, 500, 581, 605, 221, 253, 409, 493, 567, 482,
	387, 545, 546, 321, 481, 288, 198, 359, 593, 219,
	468, 361, 237, 226, 551, 570, 282, 445, 600, 208,
	495, 559, 234, 472, 0, 0, 607, 242, 492, 210,
	556, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 553, 554, 249, 608, 223, 580,
	215, 0, 579, 397, 548, 557, 384, 373, 214, 555,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 568, 0, 203, 0,
	487, 569, 609, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 543, 562, 574, 585, 591, 592, 594, 595,
	596, 597, 598, 601, 599, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 566, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 374,
	474, 563, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 542, 304, 211, 212, 213, 502, 503,
	504, 505, 577, 578, 582, 451, 452, 453, 454, 285,
	572, 301, 457, 456, 323, 324, 369, 438, 512, 514,
	522, 525, 527, 529, 532, 535, 513, 515, 523, 526,
	528, 530, 533, 536, 507, 508, 509, 511, 519, 518,
	516, 538, 539, 520, 524, 510, 517, 521, 531, 537,
	534, 0, 194, 216, 358, 0, 443, 281, 606, 576,
	571, 201, 218, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 550, 552, 565, 583, 589, 469, 293, 294,
	433, 434, 306, 307, 603, 604, 292, 560, 590, 558,
	602, 584, 427, 368, 0, 0, 371, 274, 297, 312,
	0, 575, 490, 222, 455, 283, 246, 0, 0, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 386, 0, 366, 540, 541, 308, 506,
	0, 0, 0, 0, 2259, 0, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 547, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 0, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 0, 0, 0,
	0, 0, 258, 313, 265, 257, 544, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 391, 250, 0, 442, 0, 0, 0, 586,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 322,
	195, 220, 0, 0, 401, 450, 462, 0, 0, 0,
	248, 0, 460, 415, 564, 228, 277, 447, 421, 458,
	429, 280, 0, 0, 459, 362, 549, 439, 561, 587,
	588, 256, 395, 573, 500, 581, 605, 221, 253, 409,
	493, 567, 482, 387, 545, 546, 321, 481, 288, 198,
	359, 593, 219, 468, 361, 237, 226, 551, 570, 282,
	445, 600, 208, 495, 559, 234, 472, 0, 0, 607,
	242, 492, 210, 556, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 553, 554, 249,
	608, 223, 580, 215, 0, 579, 397, 548, 557, 384,
	373, 214, 555, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 568,
	0, 203, 0, 487, 569, 609, 441, 207, 229, 230,
	232, 0, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 0, 543, 562, 574, 585, 591,
	592, 594, 595, 596, 597, 598, 601, 599, 396, 303,
	483, 325, 363, 0, 0, 414, 461, 235, 566, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 374, 474, 563, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 542, 304, 211, 212,
	213, 502, 503, 504, 505, 577, 578, 582, 451, 452,
	453, 454, 285, 572, 301, 457, 456, 323, 324, 369,
	438, 512, 514, 522, 525, 527, 529, 532, 535, 513,
	515, 523, 526, 528, 530, 533, 536, 507, 508, 509,
	511, 519, 518, 516, 538, 539, 520, 524, 510, 517,
	521, 531, 537, 534, 0, 194, 216, 358, 0, 443,
	281, 606, 576, 571, 201, 218, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 550, 552, 565, 583, 589,
	469, 293, 294, 433, 434, 306, 307, 603, 604, 292,
	560, 590, 558, 602, 584, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 575, 490, 222, 455, 283, 246,
	0, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 540,
	541, 308, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	547, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 0,
	0, 0, 1667, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 544,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 564, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 549,
	439, 561, 587, 588, 256, 395, 573, 500, 581, 605,
	221, 253, 409, 493, 567, 482, 387, 545, 546, 321,
	481, 288, 198, 359, 593, 219, 468, 361, 237, 226,
	551, 570, 282, 445, 600, 208, 495, 559, 234, 472,
	0, 0, 607, 242, 492, 210, 556, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	553, 554, 249, 608, 223, 580, 215, 0, 579, 397,
	548, 557, 384, 373, 214, 555, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 568, 0, 203, 0, 487, 569, 609, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 543, 562,
	574, 585, 591, 592, 594, 595, 596, 597, 598, 601,
	599, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 566, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 374, 474, 563, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 542,
	304, 211, 212, 213, 502, 503, 504, 505, 577, 578,
	582, 451, 452, 453, 454, 285, 572, 301, 457, 456,
	323, 324, 369, 438, 512, 514, 522, 525, 527, 529,
	532, 535, 513, 515, 523, 526, 528, 530, 533, 536,
	507, 508, 509, 511, 519, 518, 516, 538, 539, 520,
	524, 510, 517, 521, 531, 537, 534, 0, 194, 216,
	358, 0, 443, 281, 606, 576, 571, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 550, 552,
	565, 583, 589, 469, 293, 294, 433, 434, 306, 307,
	603, 604, 292, 560, 590, 558, 602, 584, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 575, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 386,
	0, 366, 540, 541, 308, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 547, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 544, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 0, 0, 0, 586, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 248, 0, 460, 415,
	564, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 549, 439, 561, 587, 588, 256, 395, 573,
	500, 581, 605, 221, 253, 409, 493, 567, 482, 387,
	545, 546, 321, 481, 288, 198, 359, 593, 219, 468,
	361, 237, 226, 551, 570, 282, 445, 600, 208, 495,
	559, 234, 472, 0, 0, 607, 242, 492, 210, 556,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 553, 554, 249, 608, 223, 580, 215,
	0, 579, 397, 548, 557, 384, 373, 214, 555, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 568, 0, 203, 0, 487,
	569, 609, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 543, 562, 574, 585, 591, 592, 594, 595, 596,
	597, 598, 601, 599, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 566, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 628, 374, 474,
	563, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 542, 304, 211, 212, 213, 502, 503, 504,
	505, 577, 578, 582, 451, 452, 453, 454, 285, 572,
	301, 457, 456, 323, 324, 369, 438, 512, 514, 522,
	525, 527, 529, 532, 535, 513, 515, 523, 526, 528,
	530, 533, 536, 507, 508, 509, 511, 519, 518, 516,
	538, 539, 520, 524, 510, 517, 521, 531, 537, 534,
	0, 194, 216, 358, 1958, 443, 281, 606, 576, 571,
	201, 218, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 550, 552, 565, 583, 589, 469, 293, 294, 433,
	434, 306, 307, 603, 604, 292, 560, 590, 558, 602,
	584, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	575, 490, 222, 455, 283, 246, 0, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 386, 0, 366, 540, 541, 308, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 356, 260, 0, 0, 419, 0,
	200, 0, 475, 247, 367, 364, 547, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 0, 360, 0, 0,
	485, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 243, 317,
	199, 402, 486, 279, 0, 0, 0, 0, 1949, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 240, 0, 0, 0, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 0, 0, 0, 0,
	0, 258, 313, 265, 257, 544, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 391, 250, 0, 442, 0, 0, 0, 586, 0,
	0, 0, 0, 0, 0, 0, 355, 0, 322, 195,
	220, 0, 0, 401, 450, 462, 0, 0, 0, 248,
	0, 460, 415, 564, 228, 277, 447, 421, 458, 429,
	280, 0, 0, 459, 362, 549, 439, 561, 587, 588,
	256, 395, 573, 500, 581, 605, 221, 253, 409, 493,
	567, 482, 387, 545, 546, 321, 481, 288, 198, 359,
	593, 219, 468, 361, 237, 226, 551, 570, 282, 445,
	600, 208, 495, 559, 234, 472, 0, 0, 607, 242,
	492, 210, 556, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 553, 554, 249, 608,
	223, 580, 215, 0, 579, 397, 548, 557, 384, 373,
	214, 555, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 568, 0,
	203, 0, 487, 569, 609, 441, 207, 229, 230, 232,
	0, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 0, 543, 562, 574, 585, 591, 592,
	594, 595, 596, 597, 598, 601, 599, 396, 303, 483,
	325, 363, 0, 0, 414, 461, 235, 566, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	628, 374, 474, 563, 327, 339, 342, 332, 351, 0,
	352, 328, 329, 334, 336, 337, 338, 343, 344, 348,
	354, 244, 205, 380, 388, 542, 304, 211, 212, 213,
	502, 503, 504, 505, 577, 578, 582, 451, 452, 453,
	454, 285, 572, 301, 457, 456, 323, 324, 369, 438,
	512, 514, 522, 525, 527, 529, 532, 535, 513, 515,
	523, 526, 528, 530, 533, 536, 507, 508, 509, 511,
	519, 518, 516, 538, 539, 520, 524, 510, 517, 521,
	531, 537, 534, 0, 194, 216, 358, 0, 443, 281,
	606, 576, 571, 201, 218, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	398, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 550, 552, 565, 583, 589, 469,
	293, 294, 433, 434, 306, 307, 603, 604, 292, 560,
	590, 558, 602, 584, 427, 368, 0, 0, 371, 274,
	297, 312, 0, 575, 490, 222, 455, 283, 246, 0,
	0, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 386, 0, 366, 540, 541,
	308, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 1813, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 356, 260, 0,
	0, 419, 0, 200, 0, 475, 247, 367, 364, 547,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 0,
	360, 0, 0, 485, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 243, 317, 199, 402, 486, 279, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 240, 0, 0, 0, 341,
	350, 349, 330, 331, 333, 335, 340, 347, 353, 0,
	0, 0, 0, 0, 258, 313, 265, 257, 544, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 391, 250, 0, 442, 0, 0,
	0, 586, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 322, 195, 220, 0, 0, 401, 450, 462, 0,
	0, 0, 248, 0, 460, 415, 564, 228, 277, 447,
	421, 458, 429, 280, 0, 0, 459, 362, 549, 439,
	561, 587, 588, 256, 395, 573, 500, 581, 605, 221,
	253, 409, 493, 567, 482, 387, 545, 546, 321, 481,
	288, 198, 359, 593, 219, 468, 361, 237, 226, 551,
	570, 282, 445, 600, 208, 495, 559, 234, 472, 0,
	0, 607, 242, 492, 210, 556, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 553,
	554, 249, 608, 223, 580, 215, 0, 579, 397, 548,
	557, 384, 373, 214, 555, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 568, 0, 203, 0, 487, 569, 609, 441, 207,
	229, 230, 232, 0, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 0, 543, 562, 574,
	585, 591, 592, 594, 595, 596, 597, 598, 601, 599,
	396, 303, 483, 325, 363, 0, 0, 414, 461, 235,
	566, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 374, 474, 563, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 542, 304,
	211, 212, 213, 502, 503, 504, 505, 577, 578, 582,
	451, 452, 453, 454, 285, 572, 301, 457, 456, 323,
	324, 369, 438, 512, 514, 522, 525, 527, 529, 532,
	535, 513, 515, 523, 526, 528, 530, 533, 536, 507,
	508, 509, 511, 519, 518, 516, 538, 539, 520, 524,
	510, 517, 521, 531, 537, 534, 0, 194, 216, 358,
	0, 443, 281, 606, 576, 571, 201, 218, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 550, 552, 565,
	583, 589, 469, 293, 294, 433, 434, 306, 307, 603,
	604, 292, 560, 590, 558, 602, 584, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 575, 490, 222, 455,
	283, 246, 0, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 386, 0,
	366, 540, 541, 308, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 1811, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 547, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 0, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 240, 0,
	0, 0, 341, 350, 349, 330, 331, 333, 335, 340,
	347, 353, 0, 0, 0, 0, 0, 258, 313, 265,
	257, 544, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 391, 250, 0,
	442, 0, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 248, 0, 460, 415, 564,
	228, 277, 447, 421, 458, 429, 280, 0, 0, 459,
	362, 549, 439, 561, 587, 588, 256, 395, 573, 500,
	581, 605, 221, 253, 409, 493, 567, 482, 387, 545,
	546, 321, 481, 288, 198, 359, 593, 219, 468, 361,
	237, 226, 551, 570, 282, 445, 600, 208, 495, 559,
	234, 472, 0, 0, 607, 242, 492, 210, 556, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 553, 554, 249, 608, 223, 580, 215, 0,
	579, 397, 548, 557, 384, 373, 214, 555, 382, 372,
	326, 345, 346, 273, 299, 436, 365, 437, 298, 300,
	393, 392, 394, 202, 568, 0, 203, 0, 487, 569,
	609, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	543, 562, 574, 585, 591, 592, 594, 595, 596, 597,
	598, 601, 599, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 566, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 374, 474, 563,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 542, 304, 211, 212, 213, 502, 503, 504, 505,
	577, 578, 582, 451, 452, 453, 454, 285, 572, 301,
	457, 456, 323, 324, 369, 438, 512, 514, 522, 525,
	527, 529, 532, 535, 513, 515, 523, 526, 528, 530,
	533, 536, 507, 508, 509, 511, 519, 518, 516, 538,
	539, 520, 524, 510, 517, 521, 531, 537, 534, 0,
	194, 216, 358, 0, 443, 281, 606, 576, 571, 201,
	218, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	550, 552, 565, 583, 589, 469, 293, 294, 433, 434,
	306, 307, 603, 604, 292, 560, 590, 558, 602, 584,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 575,
	490, 222, 455, 283, 246, 0, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 540, 541, 308, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 1809, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 547, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 544, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 564, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 549, 439, 561, 587, 588, 256,
	395, 573, 500, 581, 605, 221, 253, 409, 493, 567,
	482, 387, 545, 546, 321, 481, 288, 198, 359, 593,
	219, 468, 361, 237, 226, 551, 570, 282, 445, 600,
	208, 495, 559, 234, 472, 0, 0, 607, 242, 492,
	210, 556, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 553, 554, 249, 608, 223,
	580, 215, 0, 579, 397, 548, 557, 384, 373, 214,
	555, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 568, 0, 203,
	0, 487, 569, 609, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 543, 562, 574, 585, 591, 592, 594,
	595, 596, 597, 598, 601, 599, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 566, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	374, 474, 563, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 542, 304, 211, 212, 213, 502,
	503, 504, 505, 577, 578, 582, 451, 452, 453, 454,
	285, 572, 301, 457, 456, 323, 324, 369, 438, 512,
	514, 522, 525, 527, 529, 532, 535, 513, 515, 523,
	526, 528, 530, 533, 536, 507, 508, 509, 511, 519,
	518, 516, 538, 539, 520, 524, 510, 517, 521, 531,
	537, 534, 0, 194, 216, 358, 0, 443, 281, 606,
	576, 571, 201, 218, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 550, 552, 565, 583, 589, 469, 293,
	294, 433, 434, 306, 307, 603, 604, 292, 560, 590,
	558, 602, 584, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 575, 490, 222, 455, 283, 246, 0, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 540, 541, 308,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 1807, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 547, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 0, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	0, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 0, 0,
	0, 0, 0, 258, 313, 265, 257, 544, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 0, 0, 0,
	586, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 248, 0, 460, 415, 564, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 549, 439, 561,
	587, 588, 256, 395, 573, 500, 581, 605, 221, 253,
	409, 493, 567, 482, 387, 545, 546, 321, 481, 288,
	198, 359, 593, 219, 468, 361, 237, 226, 551, 570,
	282, 445, 600, 208, 495, 559, 234, 472, 0, 0,
	607, 242, 492, 210, 556, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 553, 554,
	249, 608, 223, 580, 215, 0, 579, 397, 548, 557,
	384, 373, 214, 555, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	568, 0, 203, 0, 487, 569, 609, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 543, 562, 574, 585,
	591, 592, 594, 595, 596, 597, 598, 601, 599, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 566,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 374, 474, 563, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 542, 304, 211,
	212, 213, 502, 503, 504, 505, 577, 578, 582, 451,
	452, 453, 454, 285, 572, 301, 457, 456, 323, 324,
	369, 438, 512, 514, 522, 525, 527, 529, 532, 535,
	513, 515, 523, 526, 528, 530, 533, 536, 507, 508,
	509, 511, 519, 518, 516, 538, 539, 520, 524, 510,
	517, 521, 531, 537, 534, 0, 194, 216, 358, 0,
	443, 281, 606, 576, 571, 201, 218, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 550, 552, 565, 583,
	589, 469, 293, 294, 433, 434, 306, 307, 603, 604,
	292, 560, 590, 558, 602, 584, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 575, 490, 222, 455, 283,
	246, 0, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	540, 541, 308, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 1805, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 547, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 0, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 240, 0, 0,
	0, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 0, 0, 0, 0, 0, 258, 313, 265, 257,
	544, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	0, 0, 0, 586, 0, 0, 0, 0, 0, 0,
	0, 355, 0, 322, 195, 220, 0, 0, 401, 450,
	462, 0, 0, 0, 248, 0, 460, 415, 564, 228,
	277, 447, 421, 458, 429, 280, 0, 0, 459, 362,
	549, 439, 561, 587, 588, 256, 395, 573, 500, 581,
	605, 221, 253, 409, 493, 567, 482, 387, 545, 546,
	321, 481, 288, 198, 359, 593, 219, 468, 361, 237,
	226, 551, 570, 282, 445, 600, 208, 495, 559, 234,
	472, 0, 0, 607, 242, 492, 210, 556, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 553, 554, 249, 608, 223, 580, 215, 0, 579,
	397, 548, 557, 384, 373, 214, 555, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 568, 0, 203, 0, 487, 569, 609,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 543,
	562, 574, 585, 591, 592, 594, 595, 596, 597, 598,
	601, 599, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 566, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 374, 474, 563, 327,
	339, 342, 332, 351, 0, 352, 328, 329, 334, 336,
	337, 338, 343, 344, 348, 354, 244, 205, 380, 388,
	542, 304, 211, 212, 213, 502, 503, 504, 505, 577,
	578, 582, 451, 452, 453, 454, 285, 572, 301, 457,
	456, 323, 324, 369, 438, 512, 514, 522, 525, 527,
	529, 532, 535, 513, 515, 523, 526, 528, 530, 533,
	536, 507, 508, 509, 511, 519, 518, 516, 538, 539,
	520, 524, 510, 517, 521, 531, 537, 534, 0, 194,
	216, 358, 0, 443, 281, 606, 576, 571, 201, 218,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 398, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 550,
	552, 565, 583, 589, 469, 293, 294, 433, 434, 306,
	307, 603, 604, 292, 560, 590, 558, 602, 584, 427,
	368, 0, 0, 371, 274, 297, 312, 0, 575, 490,
	222, 455, 283, 246, 0, 0, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	386, 0, 366, 540, 541, 308, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	1801, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 356, 260, 0, 0, 419, 0, 200, 0,
	475, 247, 367, 364, 547, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 0, 360, 0, 0, 485, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 243, 317, 199, 402,
	486, 279, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	240, 0, 0, 0, 341, 350, 349, 330, 331, 333,
	335, 340, 347, 353, 0, 0, 0, 0, 0, 258,
	313, 265, 257, 544, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 391,
	250, 0, 442, 0, 0, 0, 586, 0, 0, 0,
	0, 0, 0, 0, 355, 0, 322, 195, 220, 0,
	0, 401, 450, 462, 0, 0, 0, 248, 0, 460,
	415, 564, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 549, 439, 561, 587, 588, 256, 395,
	573, 500, 581, 605, 221, 253, 409, 493, 567, 482,
	387, 545, 546, 321, 481, 288, 198, 359, 593, 219,
	468, 361, 237, 226, 551, 570, 282, 445, 600, 208,
	495, 559, 234, 472, 0, 0, 607, 242, 492, 210,
	556, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 553, 554, 249, 608, 223, 580,
	215, 0, 579, 397, 548, 557, 384, 373, 214, 555,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 568, 0, 203, 0,
	487, 569, 609, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 543, 562, 574, 585, 591, 592, 594, 595,
	596, 597, 598, 601, 599, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 566, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 374,
	474, 563, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 542, 304, 211, 212, 213, 502, 503,
	504, 505, 577, 578, 582, 451, 452, 453, 454, 285,
	572, 301, 457, 456, 323, 324, 369, 438, 512, 514,
	522, 525, 527, 529, 532, 535, 513, 515, 523, 526,
	528, 530, 533, 536, 507, 508, 509, 511, 519, 518,
	516, 538, 539, 520, 524, 510, 517, 521, 531, 537,
	534, 0, 194, 216, 358, 0, 443, 281, 606, 576,
	571, 201, 218, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 550, 552, 565, 583, 589, 469, 293, 294,
	433, 434, 306, 307, 603, 604, 292, 560, 590, 558,
	602, 584, 427, 368, 0, 0, 371, 274, 297, 312,
	0, 575, 490, 222, 455, 283, 246, 0, 0, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 386, 0, 366, 540, 541, 308, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 0, 1799, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 547, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 0, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 0, 0, 0,
	0, 0, 258, 313, 265, 257, 544, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 391, 250, 0, 442, 0, 0, 0, 586,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 322,
	195, 220, 0, 0, 401, 450, 462, 0, 0, 0,
	248, 0, 460, 415, 564, 228, 277, 447, 421, 458,
	429, 280, 0, 0, 459, 362, 549, 439, 561, 587,
	588, 256, 395, 573, 500, 581, 605, 221, 253, 409,
	493, 567, 482, 387, 545, 546, 321, 481, 288, 198,
	359, 593, 219, 468, 361, 237, 226, 551, 570, 282,
	445, 600, 208, 495, 559, 234, 472, 0, 0, 607,
	242, 492, 210, 556, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 553, 554, 249,
	608, 223, 580, 215, 0, 579, 397, 548, 557, 384,
	373, 214, 555, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 568,
	0, 203, 0, 487, 569, 609, 441, 207, 229, 230,
	232, 0, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 0, 543, 562, 574, 585, 591,
	592, 594, 595, 596, 597, 598, 601, 599, 396, 303,
	483, 325, 363, 0, 0, 414, 461, 235, 566, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 374, 474, 563, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 542, 304, 211, 212,
	213, 502, 503, 504, 505, 577, 578, 582, 451, 452,
	453, 454, 285, 572, 301, 457, 456, 323, 324, 369,
	438, 512, 514, 522, 525, 527, 529, 532, 535, 513,
	515, 523, 526, 528, 530, 533, 536, 507, 508, 509,
	511, 519, 518, 516, 538, 539, 520, 524, 510, 517,
	521, 531, 537, 534, 0, 194, 216, 358, 0, 443,
	281, 606, 576, 571, 201, 218, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 550, 552, 565, 583, 589,
	469, 293, 294, 433, 434, 306, 307, 603, 604, 292,
	560, 590, 558, 602, 584, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 575, 490, 222, 455, 283, 246,
	0, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 540,
	541, 308, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 1797, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	547, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 544,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 564, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 549,
	439, 561, 587, 588, 256, 395, 573, 500, 581, 605,
	221, 253, 409, 493, 567, 482, 387, 545, 546, 321,
	481, 288, 198, 359, 593, 219, 468, 361, 237, 226,
	551, 570, 282, 445, 600, 208, 495, 559, 234, 472,
	0, 0, 607, 242, 492, 210, 556, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	553, 554, 249, 608, 223, 580, 215, 0, 579, 397,
	548, 557, 384, 373, 214, 555, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 568, 0, 203, 0, 487, 569, 609, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 543, 562,
	574, 585, 591, 592, 594, 595, 596, 597, 598, 601,
	599, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 566, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 374, 474, 563, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 542,
	304, 211, 212, 213, 502, 503, 504, 505, 577, 578,
	582, 451, 452, 453, 454, 285, 572, 301, 457, 456,
	323, 324, 369, 438, 512, 514, 522, 525, 527, 529,
	532, 535, 513, 515, 523, 526, 528, 530, 533, 536,
	507, 508, 509, 511, 519, 518, 516, 538, 539, 520,
	524, 510, 517, 521, 531, 537, 534, 0, 194, 216,
	358, 0, 443, 281, 606, 576, 571, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 550, 552,
	565, 583, 589, 469, 293, 294, 433, 434, 306, 307,
	603, 604, 292, 560, 590, 558, 602, 584, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 575, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 386,
	0, 366, 540, 541, 308, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 356, 260, 0, 0, 419, 0, 200, 0, 475,
	247, 367, 364, 547, 275, 266, 262, 245, 309, 375,
	417, 496, 411, 0, 360, 0, 0, 485, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 243, 317, 199, 402, 486,
	279, 0, 1772, 0, 0, 0, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 240,
	0, 0, 0, 341, 350, 349, 330, 331, 333, 335,
	340, 347, 353, 0, 0, 0, 0, 0, 258, 313,
	265, 257, 544, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 391, 250,
	0, 442, 0, 0, 0, 586, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 322, 195, 220, 0, 0,
	401, 450, 462, 0, 0, 0, 248, 0, 460, 415,
	564, 228, 277, 447, 421, 458, 429, 280, 0, 0,
	459, 362, 549, 439, 561, 587, 588, 256, 395, 573,
	500, 581, 605, 221, 253, 409, 493, 567, 482, 387,
	545, 546, 321, 481, 288, 198, 359, 593, 219, 468,
	361, 237, 226, 551, 570, 282, 445, 600, 208, 495,
	559, 234, 472, 0, 0, 607, 242, 492, 210, 556,
	491, 383, 318, 319, 209, 0, 446, 261, 286, 0,
	0, 251, 404, 553, 554, 249, 608, 223, 580, 215,
	0, 579, 397, 548, 557, 384, 373, 214, 555, 382,
	372, 326, 345, 346, 273, 299, 436, 365, 437, 298,
	300, 393, 392, 394, 202, 568, 0, 203, 0, 487,
	569, 609, 441, 207, 229, 230, 232, 0, 272, 276,
	284, 287, 295, 296, 305, 357, 408, 435, 431, 440,
	0, 543, 562, 574, 585, 591, 592, 594, 595, 596,
	597, 598, 601, 599, 396, 303, 483, 325, 363, 0,
	0, 414, 461, 235, 566, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 628, 374, 474,
	563, 327, 339, 342, 332, 351, 0, 352, 328, 329,
	334, 336, 337, 338, 343, 344, 348, 354, 244, 205,
	380, 388, 542, 304, 211, 212, 213, 502, 503, 504,
	505, 577, 578, 582, 451, 452, 453, 454, 285, 572,
	301, 457, 456, 323, 324, 369, 438, 512, 514, 522,
	525, 527, 529, 532, 535, 513, 515, 523, 526, 528,
	530, 533, 536, 507, 508, 509, 511, 519, 518, 516,
	538, 539, 520, 524, 510, 517, 521, 531, 537, 534,
	0, 194, 216, 358, 0, 443, 281, 606, 576, 571,
	201, 218, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 197, 204, 217, 227,
	231, 238, 254, 269, 271, 278, 291, 302, 310, 311,
	314, 320, 370, 376, 377, 378, 379, 398, 399, 400,
	403, 406, 407, 410, 412, 413, 416, 420, 424, 425,
	426, 428, 430, 432, 444, 449, 463, 464, 465, 466,
	467, 470, 471, 476, 477, 478, 479, 480, 488, 489,
	494, 550, 552, 565, 583, 589, 469, 293, 294, 433,
	434, 306, 307, 603, 604, 292, 560, 590, 558, 602,
	584, 427, 368, 0, 0, 371, 274, 297, 312, 0,
	575, 490, 222, 455, 283, 246, 0, 0, 206, 241,
	225, 252, 267, 270, 316, 381, 389, 418, 423, 289,
	264, 239, 448, 236, 473, 497, 498, 499, 501, 385,
	259, 422, 386, 0, 366, 540, 541, 308, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 1671, 263,
	0, 0, 0, 0, 356, 260, 0, 0, 419, 0,
	200, 0, 475, 247, 367, 364, 547, 275, 266, 262,
	245, 309, 375, 417, 496, 411, 0, 360, 0, 0,
	485, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 243, 317,
	199, 402, 486, 279, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 240, 0, 0, 0, 341, 350, 349, 330,
	331, 333, 335, 340, 347, 353, 0, 0, 0, 0,
	0, 258, 313, 265, 257, 544, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 391, 250, 0, 442, 0, 0, 0, 586, 0,
	0, 0, 0, 0, 0, 0, 355, 0, 322, 195,
	220, 0, 0, 401, 450, 462, 0, 0, 0, 248,
	0, 460, 415, 564, 228, 277, 447, 421, 458, 429,
	280, 0, 0, 459, 362, 549, 439, 561, 587, 588,
	256, 395, 573, 500, 581, 605, 221, 253, 409, 493,
	567, 482, 387, 545, 546, 321, 481, 288, 198, 359,
	593, 219, 468, 361, 237, 226, 551, 570, 282, 445,
	600, 208, 495, 559, 234, 472, 0, 0, 607, 242,
	492, 210, 556, 491, 383, 318, 319, 209, 0, 446,
	261, 286, 0, 0, 251, 404, 553, 554, 249, 608,
	223, 580, 215, 0, 579, 397, 548, 557, 384, 373,
	214, 555, 382, 372, 326, 345, 346, 273, 299, 436,
	365, 437, 298, 300, 393, 392, 394, 202, 568, 0,
	203, 0, 487, 569, 609, 441, 207, 229, 230, 232,
	0, 272, 276, 284, 287, 295, 296, 305, 357, 408,
	435, 431, 440, 0, 543, 562, 574, 585, 591, 592,
	594, 595, 596, 597, 598, 601, 599, 396, 303, 483,
	325, 363, 0, 0, 414, 461, 235, 566, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	628, 374, 474, 563, 327, 339, 342, 332, 351, 0,
	352, 328, 329, 334, 336, 337, 338, 343, 344, 348,
	354, 244, 205, 380, 388, 542, 304, 211, 212, 213,
	502, 503, 504, 505, 577, 578, 582, 451, 452, 453,
	454, 285, 572, 301, 457, 456, 323, 324, 369, 438,
	512, 514, 522, 525, 527, 529, 532, 535, 513, 515,
	523, 526, 528, 530, 533, 536, 507, 508, 509, 511,
	519, 518, 516, 538, 539, 520, 524, 510, 517, 521,
	531, 537, 534, 0, 194, 216, 358, 0, 443, 281,
	606, 576, 571, 201, 218, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 197,
	204, 217, 227, 231, 238, 254, 269, 271, 278, 291,
	302, 310, 311, 314, 320, 370, 376, 377, 378, 379,
	398, 399, 400, 403, 406, 407, 410, 412, 413, 416,
	420, 424, 425, 426, 428, 430, 432, 444, 449, 463,
	464, 465, 466, 467, 470, 471, 476, 477, 478, 479,
	480, 488, 489, 494, 550, 552, 565, 583, 589, 469,
	293, 294, 433, 434, 306, 307, 603, 604, 292, 560,
	590, 558, 602, 584, 427, 368, 0, 0, 371, 274,
	297, 312, 0, 575, 490, 222, 455, 283, 246, 0,
	0, 206, 241, 225, 252, 267, 270, 316, 381, 389,
	418, 423, 289, 264, 239, 448, 236, 473, 497, 498,
	499, 501, 385, 259, 422, 386, 0, 366, 540, 541,
	308, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 356, 260, 0,
	0, 419, 0, 200, 0, 475, 247, 367, 364, 547,
	275, 266, 262, 245, 309, 375, 417, 496, 411, 0,
	360, 0, 0, 485, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 243, 317, 199, 402, 486, 279, 0, 93, 0,
	0, 0, 892, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 240, 0, 0, 0, 341,
	350, 349, 330, 331, 333, 335, 340, 347, 353, 0,
	0, 0, 0, 0, 258, 313, 265, 257, 544, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 391, 250, 0, 442, 0, 0,
	0, 586, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 322, 195, 220, 0, 0, 401, 450, 462, 0,
	0, 0, 248, 0, 460, 415, 564, 228, 277, 447,
	421, 458, 429, 280, 0, 0, 459, 362, 549, 439,
	561, 587, 588, 256, 395, 573, 500, 581, 605, 221,
	253, 409, 493, 567, 482, 387, 545, 546, 321, 481,
	288, 198, 359, 593, 219, 468, 361, 237, 226, 551,
	570, 282, 445, 600, 208, 495, 559, 234, 472, 0,
	0, 607, 242, 492, 210, 556, 491, 383, 318, 319,
	209, 0, 446, 261, 286, 0, 0, 251, 404, 553,
	554, 249, 608, 223, 580, 215, 0, 579, 397, 548,
	557, 384, 373, 214, 555, 382, 372, 326, 345, 346,
	273, 299, 436, 365, 437, 298, 300, 393, 392, 394,
	202, 568, 0, 203, 0, 487, 569, 609, 441, 207,
	229, 230, 232, 0, 272, 276, 284, 287, 295, 296,
	305, 357, 408, 435, 431, 440, 0, 543, 562, 574,
	585, 591, 592, 594, 595, 596, 597, 598, 601, 599,
	396, 303, 483, 325, 363, 0, 0, 414, 461, 235,
	566, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 374, 474, 563, 327, 339, 342,
	332, 351, 0, 352, 328, 329, 334, 336, 337, 338,
	343, 344, 348, 354, 244, 205, 380, 388, 542, 304,
	211, 212, 213, 502, 503, 504, 505, 577, 578, 582,
	451, 452, 453, 454, 285, 572, 301, 457, 456, 323,
	324, 369, 438, 512, 514, 522, 525, 527, 529, 532,
	535, 513, 515, 523, 526, 528, 530, 533, 536, 507,
	508, 509, 511, 519, 518, 516, 538, 539, 520, 524,
	510, 517, 521, 531, 537, 534, 0, 194, 216, 358,
	0, 443, 281, 606, 576, 571, 201, 218, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 197, 204, 217, 227, 231, 238, 254, 269,
	271, 278, 291, 302, 310, 311, 314, 320, 370, 376,
	377, 378, 379, 398, 399, 400, 403, 406, 407, 410,
	412, 413, 416, 420, 424, 425, 426, 428, 430, 432,
	444, 449, 463, 464, 465, 466, 467, 470, 471, 476,
	477, 478, 479, 480, 488, 489, 494, 550, 552, 565,
	583, 589, 469, 293, 294, 433, 434, 306, 307, 603,
	604, 292, 560, 590, 558, 602, 584, 427, 368, 0,
	0, 371, 274, 297, 312, 0, 575, 490, 222, 455,
	283, 246, 0, 0, 206, 241, 225, 252, 267, 270,
	316, 381, 389, 418, 423, 289, 264, 239, 448, 236,
	473, 497, 498, 499, 501, 385, 259, 422, 386, 0,
	366, 540, 541, 308, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	356, 260, 0, 0, 419, 0, 200, 0, 475, 247,
	367, 364, 547, 275, 266, 262, 245, 309, 375, 417,
	496, 411, 0, 360, 0, 0, 485, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 243, 317, 199, 402, 486, 279,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 240, 0,
	0, 0, 341, 350, 349, 330, 331, 333, 335, 340,
	347, 353, 0, 0, 0, 0, 0, 258, 313, 265,
	257, 544, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1378, 0, 290, 0, 391, 250, 0,
	442, 0, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 322, 195, 220, 0, 0, 401,
	450, 462, 0, 0, 0, 248, 0, 460, 415, 564,
	228, 277, 447, 421, 458, 429, 280, 0, 0, 459,
	362, 549, 439, 561, 587, 588, 256, 395, 573, 500,
	581, 605, 221, 253, 409, 493, 567, 482, 387, 545,
	546, 321, 481, 288, 198, 359, 593, 219, 468, 361,
	237, 226, 551, 570, 282, 445, 600, 208, 495, 559,
	234, 472, 0, 0, 607, 242, 492, 210, 556, 491,
	383, 318, 319, 209, 0, 446, 261, 286, 0, 0,
	251, 404, 553, 554, 249, 608, 223, 580, 215, 0,
	579, 397, 548, 557, 384, 373, 214, 555, 382, 372,
	326, 345, 346, 273, 299, 436, 365, 437, 298, 300,
	393, 392, 394, 202, 568, 0, 203, 0, 487, 569,
	609, 441, 207, 229, 230, 232, 0, 272, 276, 284,
	287, 295, 296, 305, 357, 408, 435, 431, 440, 0,
	543, 562, 574, 585, 591, 592, 594, 595, 596, 597,
	598, 601, 599, 396, 303, 483, 325, 363, 0, 0,
	414, 461, 235, 566, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 374, 474, 563,
	327, 339, 342, 332, 351, 0, 352, 328, 329, 334,
	336, 337, 338, 343, 344, 348, 354, 244, 205, 380,
	388, 542, 304, 211, 212, 213, 502, 503, 504, 505,
	577, 578, 582, 451, 452, 453, 454, 285, 572, 301,
	457, 456, 323, 324, 369, 438, 512, 514, 522, 525,
	527, 529, 532, 535, 513, 515, 523, 526, 528, 530,
	533, 536, 507, 508, 509, 511, 519, 518, 516, 538,
	539, 520, 524, 510, 517, 521, 531, 537, 534, 0,
	194, 216, 358, 0, 443, 281, 606, 576, 571, 201,
	218, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 197, 204, 217, 227, 231,
	238, 254, 269, 271, 278, 291, 302, 310, 311, 314,
	320, 370, 376, 377, 378, 379, 398, 399, 400, 403,
	406, 407, 410, 412, 413, 416, 420, 424, 425, 426,
	428, 430, 432, 444, 449, 463, 464, 465, 466, 467,
	470, 471, 476, 477, 478, 479, 480, 488, 489, 494,
	550, 552, 565, 583, 589, 469, 293, 294, 433, 434,
	306, 307, 603, 604, 1377, 560, 590, 558, 602, 584,
	427, 368, 0, 0, 371, 274, 297, 312, 0, 575,
	490, 222, 455, 283, 246, 0, 0, 206, 241, 225,
	252, 267, 270, 316, 381, 389, 418, 423, 289, 264,
	239, 448, 236, 473, 497, 498, 499, 501, 385, 259,
	422, 386, 0, 366, 540, 541, 308, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 356, 260, 0, 0, 419, 0, 200,
	0, 475, 247, 367, 364, 547, 275, 266, 262, 245,
	309, 375, 417, 496, 411, 0, 360, 0, 0, 485,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 243, 317, 199,
	402, 486, 279, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 240, 0, 0, 0, 341, 350, 349, 330, 331,
	333, 335, 340, 347, 353, 0, 0, 0, 0, 0,
	258, 313, 265, 257, 544, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	391, 250, 0, 442, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 322, 195, 220,
	0, 0, 401, 450, 462, 0, 0, 0, 248, 0,
	460, 415, 564, 228, 277, 447, 421, 458, 429, 280,
	0, 0, 459, 362, 549, 439, 561, 587, 588, 256,
	395, 573, 500, 581, 605, 221, 253, 409, 493, 567,
	482, 387, 545, 546, 321, 481, 288, 198, 359, 593,
	219, 468, 361, 237, 226, 551, 570, 282, 445, 600,
	208, 495, 559, 234, 472, 0, 0, 607, 242, 492,
	210, 556, 491, 383, 318, 319, 209, 0, 446, 261,
	286, 0, 0, 251, 404, 553, 554, 249, 608, 223,
	580, 215, 0, 579, 397, 548, 557, 384, 373, 214,
	555, 382, 372, 326, 345, 346, 273, 299, 436, 365,
	437, 298, 300, 393, 392, 394, 202, 568, 0, 203,
	0, 487, 569, 609, 441, 207, 229, 230, 232, 0,
	272, 276, 284, 287, 295, 296, 305, 357, 408, 435,
	431, 440, 0, 543, 562, 574, 585, 591, 592, 594,
	595, 596, 597, 598, 601, 599, 396, 303, 483, 325,
	363, 0, 0, 414, 461, 235, 566, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	374, 474, 563, 327, 339, 342, 332, 351, 0, 352,
	328, 329, 334, 336, 337, 338, 343, 344, 348, 354,
	244, 205, 380, 388, 542, 304, 211, 212, 213, 502,
	503, 504, 505, 577, 578, 582, 451, 452, 453, 454,
	285, 572, 301, 457, 456, 323, 324, 369, 438, 512,
	514, 522, 525, 527, 529, 532, 535, 513, 515, 523,
	526, 528, 530, 533, 536, 507, 508, 509, 511, 519,
	518, 516, 538, 539, 520, 524, 510, 517, 521, 531,
	537, 534, 0, 194, 216, 358, 0, 443, 281, 606,
	576, 571, 201, 218, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 978, 0, 0, 0, 196, 197, 204,
	217, 227, 231, 238, 254, 269, 271, 278, 291, 302,
	310, 311, 314, 320, 370, 376, 377, 378, 379, 398,
	399, 400, 403, 406, 407, 410, 412, 413, 416, 420,
	424, 425, 426, 428, 430, 432, 444, 449, 463, 464,
	465, 466, 467, 470, 471, 476, 477, 478, 479, 480,
	488, 489, 494, 550, 552, 565, 583, 589, 469, 293,
	294, 433, 434, 306, 307, 603, 604, 292, 560, 590,
	558, 602, 584, 427, 368, 0, 0, 371, 274, 297,
	312, 0, 575, 490, 222, 455, 283, 246, 0, 0,
	206, 241, 225, 252, 267, 270, 316, 381, 389, 418,
	423, 289, 264, 239, 448, 236, 473, 497, 498, 499,
	501, 385, 259, 422, 386, 0, 366, 540, 541, 308,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 356, 260, 0, 0,
	419, 0, 200, 0, 475, 247, 367, 364, 547, 275,
	266, 262, 245, 309, 375, 417, 496, 411, 0, 360,
	0, 0, 485, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	243, 317, 199, 402, 486, 279, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 240, 0, 0, 0, 341, 350,
	349, 330, 331, 333, 335, 340, 347, 353, 0, 0,
	0, 0, 0, 258, 313, 265, 257, 544, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 391, 250, 0, 442, 0, 631, 0,
	586, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	322, 195, 220, 0, 0, 401, 450, 462, 0, 0,
	0, 248, 0, 460, 415, 564, 228, 277, 447, 421,
	458, 429, 280, 0, 0, 459, 362, 549, 439, 561,
	587, 588, 256, 395, 573, 500, 581, 605, 221, 253,
	409, 493, 567, 482, 387, 545, 546, 321, 481, 288,
	198, 359, 593, 219, 468, 361, 237, 226, 551, 570,
	282, 445, 600, 208, 495, 559, 234, 472, 0, 0,
	607, 242, 492, 210, 556, 491, 383, 318, 319, 209,
	0, 446, 261, 286, 0, 0, 251, 404, 553, 554,
	249, 608, 223, 580, 215, 0, 579, 397, 548, 557,
	384, 373, 214, 555, 382, 372, 326, 345, 346, 273,
	299, 436, 365, 437, 298, 300, 393, 392, 394, 202,
	568, 0, 203, 0, 487, 569, 609, 441, 207, 229,
	230, 232, 0, 272, 276, 284, 287, 295, 296, 305,
	357, 408, 435, 431, 440, 0, 543, 562, 574, 585,
	591, 592, 594, 595, 596, 597, 598, 601, 599, 396,
	303, 483, 325, 363, 0, 0, 414, 461, 235, 566,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 374, 474, 563, 327, 339, 342, 332,
	351, 0, 352, 328, 329, 334, 336, 337, 338, 343,
	344, 348, 354, 244, 205, 380, 388, 542, 304, 211,
	212, 213, 502, 503, 504, 505, 577, 578, 582, 451,
	452, 453, 454, 285, 572, 301, 457, 456, 323, 324,
	369, 438, 512, 514, 522, 525, 527, 529, 532, 535,
	513, 515, 523, 526, 528, 530, 533, 536, 507, 508,
	509, 511, 519, 518, 516, 538, 539, 520, 524, 510,
	517, 521, 531, 537, 534, 0, 194, 216, 358, 0,
	443, 281, 606, 576, 571, 201, 218, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 197, 204, 217, 227, 231, 238, 254, 269, 271,
	278, 291, 302, 310, 311, 314, 320, 370, 376, 377,
	378, 379, 398, 399, 400, 403, 406, 407, 410, 412,
	413, 416, 420, 424, 425, 426, 428, 430, 432, 444,
	449, 463, 464, 465, 466, 467, 470, 471, 476, 477,
	478, 479, 480, 488, 489, 494, 550, 552, 565, 583,
	589, 469, 293, 294, 433, 434, 306, 307, 603, 604,
	292, 560, 590, 558, 602, 584, 427, 368, 0, 0,
	371, 274, 297, 312, 0, 575, 490, 222, 455, 283,
	246, 0, 0, 206, 241, 225, 252, 267, 270, 316,
	381, 389, 418, 423, 289, 264, 239, 448, 236, 473,
	497, 498, 499, 501, 385, 259, 422, 386, 0, 366,
	540, 541, 308, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 356,
	260, 0, 0, 419, 0, 200, 0, 475, 247, 367,
	364, 547, 275, 266, 262, 245, 309, 375, 417, 496,
	411, 0, 360, 0, 0, 485, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 243, 317, 199, 402, 486, 279, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 240, 0, 0,
	0, 341, 350, 349, 330, 331, 333, 335, 340, 347,
	353, 0, 0, 0, 0, 0, 258, 313, 265, 257,
	544, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 391, 250, 0, 442,
	0, 0, 0, 586, 0, 0, 0, 0, 0, 0,
	0, 355, 0, 322, 195, 220, 0, 0, 401, 450,
	462, 0, 0, 0, 248, 0, 460, 415, 564, 228,
	277, 447, 421, 458, 429, 280, 0, 0, 459, 362,
	549, 439, 561, 587, 588, 256, 395, 573, 500, 581,
	605, 221, 253, 409, 493, 567, 482, 387, 545, 546,
	321, 481, 288, 198, 359, 593, 219, 468, 361, 237,
	226, 551, 570, 282, 445, 600, 208, 495, 559, 234,
	472, 0, 0, 607, 242, 492, 210, 556, 491, 383,
	318, 319, 209, 0, 446, 261, 286, 0, 0, 251,
	404, 553, 554, 249, 608, 223, 580, 215, 0, 579,
	397, 548, 557, 384, 373, 214, 555, 382, 372, 326,
	345, 346, 273, 299, 436, 365, 437, 298, 300, 393,
	392, 394, 202, 568, 0, 203, 0, 487, 569, 609,
	441, 207, 229, 230, 232, 0, 272, 276, 284, 287,
	295, 296, 305, 357, 408, 435, 431, 440, 0, 543,
	562, 574, 585, 591, 592, 594, 595, 596, 597, 598,
	601, 599, 396, 303, 483, 325, 363, 0, 0, 414,
	461, 235, 566, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 374, 474, 563, 327,
	339, 342, 332, 351, 0, 352, 328, 329, 334, 336,
	337, 338, 343, 344, 348, 354, 244, 205, 380, 388,
	542, 304, 211, 212, 213, 502, 503, 504, 505, 577,
	578, 582, 451, 452, 453, 454, 285, 572, 301, 457,
	456, 323, 324, 369, 438, 512, 514, 522, 525, 527,
	529, 532, 535, 513, 515, 523, 526, 528, 530, 533,
	536, 507, 508, 509, 511, 519, 518, 516, 538, 539,
	520, 524, 510, 517, 521, 531, 537, 534, 0, 194,
	216, 358, 0, 443, 281, 606, 576, 571, 201, 218,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 197, 204, 217, 227, 231, 238,
	254, 269, 271, 278, 291, 302, 310, 311, 314, 320,
	370, 376, 377, 378, 379, 3829, 399, 400, 403, 406,
	407, 410, 412, 413, 416, 420, 424, 425, 426, 428,
	430, 432, 444, 449, 463, 464, 465, 466, 467, 470,
	471, 476, 477, 478, 479, 480, 488, 489, 494, 550,
	552, 565, 583, 589, 469, 293, 294, 433, 434, 306,
	307, 603, 604, 292, 560, 590, 558, 602, 584, 427,
	368, 0, 0, 371, 274, 297, 312, 0, 575, 490,
	222, 455, 283, 246, 0, 0, 206, 241, 225, 252,
	267, 270, 316, 381, 389, 418, 423, 289, 264, 239,
	448, 236, 473, 497, 498, 499, 501, 385, 259, 422,
	386, 0, 366, 540, 541, 308, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 356, 260, 0, 0, 419, 0, 200, 0,
	475, 247, 367, 364, 547, 275, 266, 262, 245, 309,
	375, 417, 496, 411, 0, 360, 0, 0, 485, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 243, 317, 199, 402,
	486, 279, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	240, 0, 0, 0, 341, 350, 349, 330, 331, 333,
	335, 340, 347, 353, 0, 0, 0, 0, 0, 258,
	313, 265, 257, 544, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 391,
	250, 0, 442, 0, 0, 0, 586, 0, 0, 0,
	0, 0, 0, 0, 355, 0, 322, 195, 220, 0,
	0, 401, 450, 462, 0, 0, 0, 248, 0, 460,
	415, 564, 228, 277, 447, 421, 458, 429, 280, 0,
	0, 459, 362, 549, 439, 561, 587, 588, 256, 395,
	573, 500, 581, 605, 221, 253, 409, 493, 567, 482,
	387, 545, 546, 321, 481, 288, 198, 359, 593, 219,
	468, 361, 237, 226, 551, 570, 282, 445, 600, 208,
	495, 559, 234, 472, 0, 0, 607, 242, 492, 210,
	556, 491, 383, 318, 319, 209, 0, 446, 261, 286,
	0, 0, 251, 404, 553, 554, 249, 608, 223, 580,
	215, 0, 579, 397, 548, 557, 384, 373, 214, 555,
	382, 372, 326, 345, 346, 273, 299, 436, 365, 437,
	298, 300, 393, 392, 394, 202, 568, 0, 203, 0,
	487, 569, 609, 441, 207, 229, 230, 232, 0, 272,
	276, 284, 287, 295, 296, 305, 357, 408, 435, 431,
	440, 0, 543, 562, 574, 585, 591, 592, 594, 595,
	596, 597, 598, 601, 599, 396, 303, 483, 325, 363,
	0, 0, 414, 461, 235, 566, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 374,
	474, 563, 327, 339, 342, 332, 351, 0, 352, 328,
	329, 334, 336, 337, 338, 343, 344, 348, 354, 244,
	205, 380, 388, 542, 304, 211, 212, 213, 502, 503,
	504, 505, 577, 578, 582, 451, 452, 453, 454, 285,
	572, 301, 457, 456, 323, 324, 369, 438, 512, 514,
	522, 525, 527, 529, 532, 535, 513, 515, 523, 526,
	528, 530, 533, 536, 507, 508, 509, 511, 519, 518,
	516, 538, 539, 520, 524, 510, 517, 521, 531, 537,
	534, 0, 194, 216, 358, 0, 443, 281, 606, 576,
	571, 201, 218, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 197, 204, 217,
	227, 231, 238, 254, 269, 271, 278, 291, 302, 310,
	311, 314, 320, 370, 376, 377, 378, 379, 398, 399,
	400, 403, 406, 407, 410, 412, 413, 416, 420, 424,
	425, 426, 428, 430, 432, 444, 449, 463, 464, 465,
	466, 467, 470, 471, 476, 477, 478, 479, 480, 488,
	489, 494, 550, 552, 565, 583, 589, 469, 293, 294,
	433, 434, 306, 307, 603, 604, 292, 560, 590, 558,
	602, 584, 427, 368, 0, 0, 371, 274, 297, 312,
	0, 575, 490, 222, 455, 283, 246, 0, 0, 206,
	241, 225, 252, 267, 270, 316, 381, 389, 418, 423,
	289, 264, 239, 448, 236, 473, 497, 498, 499, 501,
	385, 259, 422, 386, 0, 366, 540, 541, 308, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 356, 260, 0, 0, 419,
	0, 200, 0, 475, 247, 367, 364, 547, 275, 266,
	262, 245, 309, 375, 417, 496, 411, 0, 360, 0,
	0, 485, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 243,
	317, 199, 402, 486, 279, 0, 0, 0, 0, 0,
	892, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 240, 0, 0, 0, 341, 350, 349,
	330, 331, 333, 335, 340, 347, 353, 0, 0, 0,
	0, 0, 258, 313, 265, 257, 544, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 391, 250, 0, 442, 0, 0, 0, 586,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 322,
	195, 220, 0, 0, 401, 450, 462, 0, 0, 0,
	248, 0, 460, 415, 564, 228, 277, 447, 421, 458,
	429, 280, 0, 0, 459, 362, 549, 439, 561, 587,
	588, 256, 395, 573, 500, 581, 605, 221, 253, 409,
	493, 567, 482, 387, 545, 546, 321, 481, 288, 198,
	359, 593, 219, 468, 361, 237, 226, 551, 570, 282,
	445, 600, 208, 495, 559, 234, 472, 0, 0, 607,
	242, 492, 210, 556, 491, 383, 318, 319, 209, 0,
	446, 261, 286, 0, 0, 251, 404, 553, 554, 249,
	608, 223, 580, 215, 0, 579, 397, 548, 557, 384,
	373, 214, 555, 382, 372, 326, 345, 346, 273, 299,
	436, 365, 437, 298, 300, 393, 392, 394, 202, 568,
	0, 203, 0, 487, 569, 609, 441, 207, 229, 230,
	232, 0, 272, 276, 284, 287, 295, 296, 305, 357,
	408, 435, 431, 440, 0, 543, 562, 574, 585, 591,
	592, 594, 595, 596, 597, 598, 601, 599, 396, 303,
	483, 325, 363, 0, 0, 414, 461, 235, 566, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 374, 474, 563, 327, 339, 342, 332, 351,
	0, 352, 328, 329, 334, 336, 337, 338, 343, 344,
	348, 354, 244, 205, 380, 388, 542, 304, 211, 212,
	213, 502, 503, 504, 505, 577, 578, 582, 451, 452,
	453, 454, 285, 572, 301, 457, 456, 323, 324, 369,
	438, 512, 514, 522, 525, 527, 529, 532, 535, 513,
	515, 523, 526, 528, 530, 533, 536, 507, 508, 509,
	511, 519, 518, 516, 538, 539, 520, 524, 510, 517,
	521, 531, 537, 534, 0, 194, 216, 358, 0, 443,
	281, 606, 576, 571, 201, 218, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	197, 204, 217, 227, 231, 238, 254, 269, 271, 278,
	291, 302, 310, 311, 314, 320, 370, 376, 377, 378,
	379, 398, 399, 400, 403, 406, 407, 410, 412, 413,
	416, 420, 424, 425, 426, 428, 430, 432, 444, 449,
	463, 464, 465, 466, 467, 470, 471, 476, 477, 478,
	479, 480, 488, 489, 494, 550, 552, 565, 583, 589,
	469, 293, 294, 433, 434, 306, 307, 603, 604, 292,
	560, 590, 558, 602, 584, 427, 368, 0, 0, 371,
	274, 297, 312, 0, 575, 490, 222, 455, 283, 246,
	0, 0, 206, 241, 225, 252, 267, 270, 316, 381,
	389, 418, 423, 289, 264, 239, 448, 236, 473, 497,
	498, 499, 501, 385, 259, 422, 386, 0, 366, 540,
	541, 308, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 356, 260,
	0, 0, 419, 0, 200, 0, 475, 247, 367, 364,
	547, 275, 266, 262, 245, 309, 375, 417, 496, 411,
	0, 360, 0, 0, 485, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 243, 317, 199, 402, 486, 279, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 240, 0, 0, 0,
	341, 350, 349, 330, 331, 333, 335, 340, 347, 353,
	0, 0, 0, 0, 0, 258, 313, 265, 257, 544,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 391, 250, 0, 442, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 322, 195, 220, 0, 0, 401, 450, 462,
	0, 0, 0, 248, 0, 460, 415, 564, 228, 277,
	447, 421, 458, 429, 280, 0, 0, 459, 362, 549,
	439, 561, 587, 588, 256, 395, 573, 500, 581, 605,
	221, 253, 409, 493, 567, 482, 387, 545, 546, 321,
	481, 288, 198, 359, 593, 219, 468, 361, 237, 226,
	551, 570, 282, 445, 600, 208, 495, 559, 234, 472,
	0, 0, 607, 242, 492, 210, 556, 491, 383, 318,
	319, 209, 0, 446, 261, 286, 0, 0, 251, 404,
	553, 554, 249, 608, 223, 580, 215, 0, 579, 397,
	548, 557, 384, 373, 214, 555, 382, 372, 326, 345,
	346, 273, 299, 436, 365, 437, 298, 300, 393, 392,
	394, 202, 568, 0, 203, 0, 487, 569, 609, 441,
	207, 229, 230, 232, 0, 272, 276, 284, 287, 295,
	296, 305, 357, 408, 435, 431, 440, 0, 543, 562,
	574, 585, 591, 592, 594, 595, 596, 597, 598, 601,
	599, 396, 303, 483, 325, 363, 0, 0, 414, 461,
	235, 566, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 374, 474, 563, 327, 339,
	342, 332, 351, 0, 352, 328, 329, 334, 336, 337,
	338, 343, 344, 348, 354, 244, 205, 380, 388, 542,
	304, 211, 212, 213, 502, 503, 504, 505, 577, 578,
	582, 451, 452, 453, 454, 285, 572, 301, 457, 456,
	323, 324, 369, 438, 512, 514, 522, 525, 527, 529,
	532, 535, 513, 515, 523, 526, 528, 530, 533, 536,
	507, 508, 509, 511, 519, 518, 516, 538, 539, 520,
	524, 510, 517, 521, 531, 537, 534, 0, 194, 216,
	358, 0, 443, 281, 606, 576, 571, 201, 218, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 197, 204, 217, 227, 231, 238, 254,
	269, 271, 278, 291, 302, 310, 311, 314, 320, 370,
	376, 377, 378, 379, 398, 399, 400, 403, 406, 407,
	410, 412, 413, 416, 420, 424, 425, 426, 428, 430,
	432, 444, 449, 463, 464, 465, 466, 467, 470, 471,
	476, 477, 478, 479, 480, 488, 489, 494, 550, 552,
	565, 583, 589, 469, 293, 294, 433, 434, 306, 307,
	603, 604, 292, 560, 590, 558, 602, 584, 427, 368,
	0, 0, 371, 274, 297, 312, 0, 575, 490, 222,
	455, 283, 246, 0, 0, 206, 241, 225, 252, 267,
	270, 316, 381, 389, 418, 423, 289, 264, 239, 448,
	236, 473, 497, 498, 499, 501, 385, 259, 422, 0,
	0, 366, 540, 541, 308,
}

var yyPact = [...]int{
	-1000, -1000, 4235, -1000, -501, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2369, 2648, -1000, -1000, -1000, -1000, 2537, -1000, 951, 1951,
	-1000, 2304, 4050, -1000, 50222, 451, -1000, 47450, 450, 820,
	248, 32204, -1000, 186, -1000, 176, 48836, 180, -1000, -1000,
	-1000, -1000, -405, 20421, 2237, 71, 70, 50222, -1000, -1000,
	-1000, -1000, 2489, 1970, -1000, 381, -1000, -1000, -1000, -1000,
	-1000, -1000, 46757, -1000, 1042, -1000, -1000, 2307, 2277, 2553,
	860, 2270, -1000, 2386, 1970, -1000, 20421, 2482, 2380, 19728,
	19728, 400, -1000, -1000, 270, -1000, -1000, 27353, 50222, 34976,
	793, -1000, 2304, -1000, -1000, -1000, 169, -1000, 329, 1886,
	-1000, 1879, -1000, 782, 980, 343, 790, 781, 342, 340,
	339, 337, 336, 335, 334, 333, 323, -1000, 895, 895,
	-165, -167, 1279, 418, 380, 380, 1033, 425, 2263, 2257,
	-1000, -1000, 895, 895, 895, 368, 895, 895, 895, 895,
	305, 304, 895, 895, 895, 895, 895, 895, 895, 895,
	895, 895, 895, 895, 895, 895, 895, 895, 895, 841,
	2304, 261, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 50222,
	184, 50222, -1000, 760, 50222, -409, 1029, 1029, 84, 1029,
	1029, 1029, 1029, 202, 946, 68, -1000, 187, 247, 164,
	258, 999, 765, -1000, -1000, 262, 999, 1726, -1000, 864,
	249, 172, -1000, 1029, 1029, -1000, 13466, 210, 13466, 13466,
	-1000, 2289, -1000, -1000, -1000, -1000, -1000, 1231, -1000, -1000,
	-1000, -1000, -18, 424, -1000, -1000, -1000, -1000, 48836, 46064,
	272, -1000, -1000, 726, -1000, -1000, 1755, 1258, 20421, 1203,
	-1000, 1136, 828, -1000, -1000, -1000, -1000, -1000, 468, -1000,
	21114, 21114, 21114, 21114, -1000, -1000, 1890, 45371, 1890, 1890,
	21114, 1890, -1000, 21114, 1890, 1890, 1890, 20421, 1890, 1890,
	1890, 1890, -1000, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, -1000, -1000, -1000, -1000, 1890, 759, 1890, 1890,
	1890, 1890, 1890, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1890, 1890, 1890, 1890, 1890, 1890, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 23193, 1505, 1479, 1466, -1000, 17649, 1890, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 50222, -1000,
	1890, 200, 48836, 48836, 347, 2386, 1970, -1000, 2489, 2445,
	381, -1000, 3140, 1430, 1714, 1413, 1970, 1830, 50222, -1000,
	1895, -1000, -1000, -1000, -1000, 2153, 1395, 1724, -1000, -1000,
	-1000, -1000, 2046, 20421, -1000, -1000, 2533, -1000, 24580, 756,
	2525, 44678, -1000, 400, 400, 1876, 409, 44, -1000, -1000,
	-1000, -1000, 907, 31511, -1000, -1000, -1000, -1000, 1783, 50222,
	-1000, -1000, 6319, 1324, -1000, 1948, -1000, 1777, -1000, 1911,
	20421, 1971, 439, 1324, 435, 434, 408, -1000, -34, -1000,
	-1000, -1000, -1000, -1000, -1000, 895, 895, 895, -1000, 322,
	2473, 4050, 4569, -1000, -1000, -1000, 43985, 1946, 1324, -1000,
	1943, -1000, 988, 780, 812, 812, 1324, -1000, -1000, 49529,
	1324, 987, 984, 1324, 1324, 48836, 48836, -1000, 43292, -1000,
	42599, 41906, 1315, 48836, 41213, 40520, 39827, 39134, 38441, -1000,
	2464, -1000, 2157, -1000, -1000, -1000, 49529, 1324, 1324, 49529,
	48836, 49529, 50222, 1324, -1000, -1000, 370, -1000, -1000, 1313,
	1305, 1302, 895, 895, 1288, 1722, 1721, 1720, 895, 895,
	1281, 1712, 33590, 1699, 263, 1280, 1277, 1252, 1278, 1696,
	226, 1693, 1256, 1239, 1230, 48836, 1938, 50222, -1000, 240,
	875, 825, 903, 2304, 2236, 1863, 423, 438, 1324, 391,
	391, 48836, -1000, 14165, -1000, 234, -1000, 1688, 20421, -1000,
	1027, 999, 999, -1000, -1000, -1000, -1000, -1000, -1000, 1029,
	50222, 1027, -1000, -1000, -1000, 999, 1029, 50222, 1029, 1029,
	1029, 1029, 999, 999, 999, 1029, 50222, 50222, 50222, 50222,
	50222, 50222, 50222, 50222, 50222, 13466, 864, 1029, -411, -1000,
	1686, -1000, -1000, 2132, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 13466, 13466, -1000, -1000, -1000, -1000, -1000, 1861,
	-1000, 170, 29, 179, -1000, 37748, 406, 902, -1000, 406,
	-1000, -1000, -1000, 1845, 37055, -1000, -415, -416, -419, -422,
	-1000, -1000, -1000, -424, -425, -1000, -1000, -1000, 20421, 20421,
	20421, 20421, -208, -1000, 1147, 21114, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 204, 921, 21114, 21114, 21114, 21114, 21114,
	21114, 21114, 21114, 21114, 21114, 21114, 21114, 21114, 21114, 21114,
	-1000, -1000, 29432, 7368, 7368, 828, 828, 828, 828, -1000,
	-136, 1843, 49529, -1000, -1000, -1000, 753, 20421, 20421, 828,
	-1000, 1324, 17649, 21807, 19728, 19728, 20421, 927, 1258, 49529,
	20421, -1000, 1413, -1000, -1000, -1000, -1000, 1120, -1000, -1000,
	994, 2281, 2281, 2281, 2281, 20421, 20421, 20421, 20421, 20421,
	20421, 20421, 20421, 20421, 20421, 2281, 48836, 48836, 259, 20421,
	20421, 20421, 20421, 20421, 20421, 16262, 20421, 20421, 21114, 20421,
	20421, 20421, 1413, 20421, 20421, 20421, 20421, 20421, 20421, 20421,
	20421, 20421, 20421, 20421, 20421, 20421, 20421, 20421, 20421, 20421,
	20421, 20421, 20421, 20421, 20421, 20421, 20421, 20421, 20421, 20421,
	20421, 20421, 20421, 20421, 20421, 20421, 20421, 20421, 20421, 20421,
	20421, 20421, 20421, 20421, 20421, 20421, 20421, 20421, 20421, 20421,
	20421, 20421, 20421, 20421, 20421, 20421, 20421, 20421, 20421, 20421,
	20421, 20421, 20421, 20421, 20421, 20421, 20421, 20421, 20421, 1413,
	20421, 1352, 20421, 20421, 19728, 15563, 19728, 19728, 19728, 19728,
	19728, -1000, -1000, -1000, -1000, -1000, -1000, 20421, 20421, 20421,
	20421, 20421, 20421, 20421, 20421, 1413, 20421, 20421, 20421, 20421,
	20421, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1412, 1521, 1472, 20421, -1000, 1832, -1000, -181, 26660,
	20421, 1679, 2523, 1987, 48836, -1000, -1000, -1000, 2386, -1000,
	2386, 1412, 2788, 2163, 19728, -1000, -1000, 2788, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1407, -1000, 50222, 1830,
	2363, 48836, 2151, 1674, 838, -1000, 20421, 20421, 1826, -1000,
	1189, 50222, -1000, -208, -1000, 36362, -1000, -1000, 12767, 50222,
	324, 50222, -1000, 25967, 35669, 274, -1000, 44, 1805, -1000,
	9, 26, 16955, 822, -1000, -1000, -1000, 1279, 22500, 1718,
	822, 108, -1000, -1000, -1000, 1911, -1000, 1911, 1911, 1911,
	1911, 838, 838, 838, 838, -1000, -1000, -1000, -1000, -1000,
	1937, 1936, -1000, 1911, 1911, 1911, 1911, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1932, 1932, 1932, 1931, 1931, 1920,
	1920, 383, -1000, 20421, 445, 34976, 2311, 1229, 1604, 240,
	394, 1984, 1324, 1324, 1324, 394, -1000, 1400, 1393, 1371,
	-1000, -489, 1823, -1000, -1000, 2463, -1000, -1000, 920, 1010,
	1008, 1011, 48836, 208, 280, -1000, 372, -1000, 34976, 1324,
	983, 812, 1324, -1000, 1324, -1000, -1000, -1000, -1000, -1000,
	1324, -1000, -1000, 1822, -1000, 1855, 1125, 1002, 1083, 1000,
	1822, -1000, -1000, -142, 1822, -1000, 1822, -1000, 1822, -1000,
	1822, -1000, 1822, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 917, 257, -293, 48836, 208, 420, -1000, 405,
	29432, -1000, -1000, -1000, 29432, 29432, -1000, -1000, -1000, -1000,
	1663, 1640, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -470, 50222, -1000, 230, 901, 308, 321, 289, 50222,
	233, 2376, 2373, 2367, 2361, 2328, 228, 301, 50222, 50222,
	391, 2094, 50222, 2323, 50222, -1000, -1000, -1000, -1000, 1632,
	1624, -1000, 1258, 50222, -1000, -1000, 1029, 1029, -1000, -1000,
	50222, 1029, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1029, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 50222, -1000, -1000, -1000,
	-1000, -18, 168, -1000, -1000, 48836, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -57, -1000, 762, 22, 369,
	-1000, -1000, -1000, -1000, -1000, 2388, -1000, 1258, 945, 950,
	-1000, 1890, -1000, -1000, 1037, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 204, 21114, 21114, 21114, 1411, 758, 1501, 1174,
	1364, 1069, 1069, 926, 926, 836, 836, 836, 836, 836,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1610, -1000,
	1890, 49529, 1673, 15563, 1254, 1325, 1413, 3729, -1000, 1671,
	-1000, 1671, 1933, 913, -1000, 20421, 1413, 3715, -1000, -1000,
	1413, 1413, 20421, -1000, -1000, 20421, 20421, 20421, 20421, 1604,
	1604, 1604, 1604, 1604, 1604, 1604, 1604, 1604, 1604, 20421,
	1820, 1819, 2518, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1227, 1604, 1604, 1604, 1604, 1604,
	20421, 2080, -1000, -1000, -1000, 1474, 3698, 1342, 3692, 1604,
	1604, -1000, 1604, 3663, 3649, 1413, 1755, 2851, 2846, 1604,
	1604, 1604, 1604, 1604, 2737, 2699, 1604, 1604, 2693, 1604,
	3353, 1604, 2677, 2616, 2574, 2545, 2535, 2487, 2470, 2466,
	2458, 2453, 2448, 2441, 2430, 2426, 2370, 2359, 2353, 2343,
	1413, 1816, -1000, 3324, 1604, 3306, 3243, 3237, 2334, 3219,
	3211, 3178, 1604, 1604, 1604, 2326, 3174, 3164, 3142, 3138,
	3119, 3115, 3097, 3083, 3078, 1604, 1472, 1472, 1472, 1472,
	1472, 3072, -213, 1604, 1413, -1000, -1000, -1000, -1000, -1000,
	3060, 2298, 1413, 1808, 1890, 750, -1000, -1000, 1671, 1413,
	1413, 1671, 1671, 3042, 3034, 3014, 3010, 3002, 2997, 1604,
	1604, -1000, 1604, 2990, 2979, 2294, 2287, 1413, -1000, 1472,
	50222, -1000, -394, -1000, 4, 942, 1890, -1000, 33590, 1413,
	-1000, 6803, -1000, 1129, -1000, -1000, -1000, -1000, -1000, 30818,
	1779, 2788, -1000, -1000, 1890, 1662, -1000, -1000, 838, 88,
	30125, 819, 819, 115, 1258, 1258, 20421, -1000, -1000, -1000,
	-1000, -1000, -1000, 744, 2490, 373, 1890, -1000, 1827, 2081,
	-1000, -1000, -1000, 2358, 23887, -1000, -1000, 1890, 1890, 50222,
	1767, 1703, -1000, 742, -1000, 1330, 1805, 44, 18, -1000,
	-1000, -1000, -1000, 1258, -1000, 1368, 331, 310, -1000, 374,
	-1000, -1000, -1000, -1000, 2243, 105, -1000, -1000, -1000, 317,
	838, -1000, -1000, -1000, -1000, -1000, -1000, 1563, 1563, -1000,
	-1000, -1000, -1000, -1000, 1197, -1000, -1000, -1000, -1000, 1190,
	-1000, -1000, 1179, -1000, -1000, 2509, 2051, 445, -1000, -1000,
	895, 1560, -1000, -1000, 2247, 895, 895, 48836, -1000, -1000,
	1609, 2311, 230, 50222, 934, 2090, -1000, 1984, 1984, 1984,
	50222, -1000, -1000, -1000, -1000, -1000, -1000, -479, 156, 517,
	-1000, -1000, -1000, 4161, 48836, 1647, -1000, 206, -1000, 1591,
	-1000, 48836, -1000, 1645, 1929, 1324, 1324, -1000, -1000, -1000,
	48836, 1890, -1000, -1000, -1000, -1000, 437, 2293, 266, -1000,
	-1000, -232, -1000, -1000, 208, 206, 49529, 1324, 822, -1000,
	-1000, -1000, -1000, -1000, -474, 1639, 432, 214, 419, 50222,
	50222, 50222, 50222, 50222, 487, -1000, -1000, 42, -1000, -1000,
	194, -1000, -1000, -1000, -1000, 194, -1000, -1000, -1000, -1000,
	269, 403, -1000, 50222, 50222, 854, -1000, -1000, -1000, -1000,
	-1000, 999, -1000, -1000, 999, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2283, 50222, 19,
	-442, -1000, -438, 20421, -1000, -1000, -1000, -1000, 1149, 745,
	1501, 21114, 21114, 21114, -1000, -1000, -1000, 776, 776, 29432,
	-1000, 20421, 19728, -1000, -1000, 20421, 20421, 876, -1000, 20421,
	1266, -1000, 20421, -1000, -1000, 1472, 1604, 1604, 1604, 1604,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1884, 20421, 20421, 20421, 1413, 318, -1000, -1000, -1000, -1000,
	-1000, 2517, -1000, 20421, -1000, 29432, 20421, 20421, 20421, -1000,
	-1000, -1000, 20421, 20421, -1000, -1000, 20421, -1000, 20421, -1000,
	-1000, -1000, -1000, -1000, -1000, 20421, -1000, 20421, -1000, -1000,
	-1000, 20421, -1000, 20421, -1000, -1000, 20421, -1000, 20421, -1000,
	20421, -1000, 20421, -1000, 20421, -1000, 20421, -1000, 20421, -1000,
	20421, -1000, 20421, -1000, 20421, -1000, 20421, -1000, 20421, -1000,
	20421, -1000, 20421, -1000, 20421, -1000, 20421, -1000, 20421, -1000,
	20421, -1000, 20421, 20421, -1000, 20421, 20421, 20421, -1000, 20421,
	20421, 20421, 20421, -1000, -1000, -1000, -1000, 20421, 20421, 20421,
	20421, 20421, 20421, 20421, 20421, 20421, 20421, -1000, -1000, -1000,
	-1000, -1000, -1000, 20421, -1000, 34976, 67, -213, 1352, 67,
	1352, -1000, 19728, 14864, -1000, -1000, -1000, -1000, -1000, 20421,
	20421, 20421, 20421, 20421, 20421, -1000, -1000, -1000, 20421, 20421,
	-1000, 20421, -1000, 20421, -1000, -1000, -1000, -1000, -1000, 942,
	-1000, 812, 812, 812, 48836, -1000, -1000, -1000, -1000, 1802,
	-1000, 2401, -1000, 2181, 2180, 2513, 2490, -1000, 25967, 2788,
	-1000, -1000, 48836, -386, -1000, 2225, 2187, 819, 819, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 12068, 2386, 20421, 2086,
	49529, 229, -1000, 25274, 48836, 49529, 25967, 25967, 25967, 25967,
	25967, -1000, 2128, 2111, -1000, 2145, 2127, 2158, 50222, -1000,
	1412, 1628, -1000, 20421, 28046, 1800, 25967, -1000, -1000, 25967,
	50222, 11369, -1000, -1000, 14, 8, -1000, -1000, -1000, -1000,
	1279, -1000, -1000, 1694, 2342, 2233, -1000, -1000, -1000, -1000,
	-1000, 1623, -1000, 1608, 1801, 1606, 1601, 257, -1000, 1969,
	2282, 895, 895, -1000, 1177, -1000, 1324, 1558, 1552, -1000,
	-1000, -1000, 429, -1000, 2318, 50222, 2065, 2059, 2034, -1000,
	-486, 1173, 1928, 1957, 20421, 1927, 2461, 1795, 48836, -1000,
	-1000, 49529, -1000, 286, -1000, 445, 48836, -1000, -1000, -1000,
	280, 50222, -1000, 7831, -1000, -1000, -1000, 206, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 50222, 222, -1000, 1921, 1193,
	-1000, -1000, 1926, -1000, -1000, -1000, -1000, 212, 276, 1550,
	188, 1525, 188, -1000, 50222, 832, 2051, 50222, -1000, -1000,
	-1000, 1029, 1029, -1000, -1000, 2276, -1000, 1324, 1604, 21114,
	21114, -1000, 828, 407, -183, 1911, 1911, -1000, 1911, 1920,
	-1000, 1911, 161, 1911, 160, 1911, -1000, -1000, 1413, 1413,
	1472, -1000, 2267, 1853, -1000, 1258, 20421, 2970, -1000, -1000,
	-1000, -1000, -1000, -42, 2965, 2938, 1604, -1000, 1909, 1906,
	20421, 1604, 1413, 2254, 1604, 1604, 1604, 1604, 1604, 1604,
	1604, 1604, 1604, 1604, 1604, 1604, 2239, 2230, 2207, 2173,
	2166, 2162, 1999, 1922, 1917, 1913, 1887, 1858, 1824, 1793,
	1786, 1738, -1000, 1258, 1472, 2933, 1472, 1604, 1604, 2868,
	320, 1604, 1597, 1597, 1597, 1597, 1597, 1472, 1472, 1472,
	1472, 1604, 48836, -1000, -213, -1000, -1000, -251, -257, -1000,
	1413, -213, 1798, 1413, -1000, 1717, 1711, 2863, 1631, 1604,
	2516, 1604, 1604, 1604, 1613, -1000, 2387, 2387, 2387, 1588,
	1129, 50222, -1000, -1000, -1000, -1000, 2490, 2500, 1796, -1000,
	-1000, 88, 509, -1000, 2201, 2187, -1000, 2460, 2203, 2457,
	-1000, -1000, -1000, -1000, -1000, 1258, -1000, 2295, 1716, -1000,
	898, 1760, -1000, -1000, 19035, 1595, 2179, 513, 1588, 1806,
	2081, 1993, 2017, 2196, -1000, -1000, -1000, -1000, 2107, -1000,
	1942, -1000, -1000, 1895, -1000, 2503, 324, 25967, 1785, 1785,
	-1000, 508, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1022,
	8473, 2551, -1000, 1514, -1000, 1327, 192, 1163, -1000, -1000,
	895, 895, -1000, 978, 976, -1000, 50222, 1904, -1000, 838,
	1507, 838, 1161, -1000, -1000, 1155, -1000, -1000, -1000, -1000,
	2121, 2197, -1000, -1000, -1000, -1000, 50222, -1000, -1000, 50222,
	50222, 50222, 1903, 2451, -1000, 20421, 1900, 897, 2499, 48836,
	48836, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 440, 895, -453, 283, 275, 895, 895, 895,
	-488, -1000, -1000, 1572, 1549, -1000, -168, -1000, 20421, -1000,
	-1000, -1000, 1186, 1186, 1505, 1479, 1466, -1000, 1895, -1000,
	-1000, -1000, 1545, -1000, -1000, -152, 48836, 48836, 48836, 48836,
	-1000, -1000, 1056, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 828, 1413, 355, -155, 1413,
	-1000, -1000, 838, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 20421, -1000, 20421, -1000, 1258, 20421, 2386,
	1456, 20421, 20421, -1000, 1153, 1148, 1604, -1000, -1000, -1000,
	20421, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 20421, -1000, 20421, -1000, 20421, -1000,
	20421, -1000, 20421, -1000, 20421, -1000, 20421, -1000, 20421, -1000,
	20421, -1000, 20421, -1000, 20421, -1000, 20421, -1000, 20421, -1000,
	20421, -1000, 20421, -1000, 20421, -1000, 20421, -1000, -1000, -1000,
	20421, 211, 776, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1413, 316, -1000, -1000, -1000, -1000,
	2501, -1000, 1413, 20421, -1000, -1000, 20421, -1000, 20421, 20421,
	-1000, 20421, -1000, 20421, -1000, -1000, -1000, -1000, 20421, 1890,
	2213, 1890, 1890, 28046, -1000, -1000, 2500, 2486, 2443, 2192,
	2199, 2199, 2201, -1000, 2440, 2424, -1000, 1448, 2423, 1426,
	964, -1000, 49529, 20421, 229, -1000, 376, 48836, 229, 48836,
	-1000, 2431, -1000, -1000, 20421, 1898, -1000, 20421, -1000, -1000,
	-1000, -1000, 7368, 2490, 1785, -1000, -1000, 845, -1000, 20421,
	-1000, -1000, -1000, 9146, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1408, 1397, -1000, -1000, 1897, 20421, -1000, -1000,
	-1000, 1518, 1500, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1895, -1000, -1000, -1000, -1000, 280, -482, 2421, 48836,
	1130, -1000, 1544, 1795, 312, 229, 1390, 895, 895, 895,
	1082, 1050, 33590, 1523, -1000, 48836, 364, -1000, 280, -1000,
	-173, -176, 1604, -1000, -1000, 2341, -1000, -1000, 14864, -1000,
	-1000, 1894, 1982, -1000, -1000, -1000, -1000, 2150, -140, -160,
	-1000, -1000, 1604, 1604, 2384, 1413, -1000, 1604, 1604, 1484,
	1454, -1000, 1604, 1604, 1604, 1604, 1604, 1604, 1604, 1604,
	1604, 1604, 1604, 1604, 1604, 1604, 1604, 1604, 1604, 1472,
	1599, -1000, 211, 1413, 2015, -1000, -1000, 7368, -1000, -1000,
	2431, 2407, 67, -1000, -1000, 216, 67, 1258, 1590, 1604,
	1517, 1513, 1604, 1604, 28739, -1000, 2400, 2397, 34283, 34283,
	942, 2486, -222, 20421, 20421, 2190, 1290, -1000, -1000, -1000,
	-1000, 1388, 1383, -1000, 1362, -1000, 2548, -1000, 1258, -1000,
	229, -1000, 501, 1760, -1000, 2386, 1258, 48836, 1258, 90,
	2431, -1000, 1604, -1000, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
	1890, 1890, 1890, -1000, -1000, 48836, 2220, -1000, -1000, 2339,
	1499, 145, -1000, 1437, 1795, -1000, -1000, 203, -1000, 20421,
	-1000, 33590, 1360, 1355, -1000, -1000, -1000, -1000, -488, -1000,
	-1000, -1000, -1000, -1000, -1000, 381, 1781, -1000, 874, 48836,
	50222, -1000, 2138, -1000, -1000, -1000, 20421, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 20421, -1000, 1413, 2012, -1000, -312, -1000, -461, 20421,
	-213, -1000, -1000, -213, -1000, 20421, -1000, -1000, 20421, -1000,
	20421, -1000, -1000, 1497, -1000, -1000, -1000, -1000, -1000, 1497,
	1497, -1000, -222, -1000, 1766, -1000, 48836, 1258, 1755, -1000,
	1098, -1000, -1000, -1000, -1000, -1000, 49529, 1760, 48836, -1000,
	1483, 1413, 1890, 2386, -1000, 1478, -1000, 381, -1000, 1893,
	1957, -1000, -1000, -1000, 18342, -1000, -1000, -1000, -1000, -1000,
	277, -150, 14864, 10670, 1476, -1000, -148, 1604, 1472, -1000,
	-429, -1000, -1000, -1000, -1000, 231, -1000, -1000, 1755, -1000,
	-1000, 1451, 1406, 1381, 32897, -1000, -1000, -1000, -1000, -222,
	-1000, -1000, 2332, -1000, -1000, 1752, -1000, -1000, 28046, 48143,
	-1000, -129, 311, -150, 20421, 1891, 1413, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -35, -1000, -1000, 457, -1000,
	-1000, -1000, 1926, -157, -1000, -1000, -1000, 223, -445, -241,
	-265, -1000, -1000, 21114, -1000, 20421, -1000, 20421, -1000, 20421,
	-1000, -1000, -1000, 48836, 1890, -1000, 1453, -1000, 5059, -261,
	2004, -1000, -82, -1000, -1000, -1000, 1007, 1351, -1000, -1000,
	-1000, -1000, -1000, -1000, 1847, 48836, -1000, 375, -1000, -1000,
	14165, -152, -162, 949, -1000, -1000, -1000, -1000, -1000, 1358,
	1347, 1604, -1000, 48836, -1000, 48143, -256, 822, 7368, -1000,
	1996, 1990, 2508, -1000, -1000, -1000, -1000, -1000, -1000, -496,
	1436, 238, -1000, -1000, -1000, 223, -1000, 20421, -1000, 20421,
	-1000, 1413, -1000, -1000, 2314, 90, -1000, 2539, -1000, 2510,
	975, 975, -1000, 1049, -496, -1000, -1000, 1604, 1604, -1000,
	-272, -1000, -1000, -1000, -1000, -1000, 378, 1260, -1000, -1000,
	-1000, -1000, -1000, 7368, -1000, -1000, -1000, 198, 198, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 3227, 3221, 41, 7, 40, 38, 3218, 39, 105,
	204, 43, 197, 96, 3212, 179, 3210, 3209, 3200, 3198,
	3197, 3196, 2593, 2574, 2570, 3195, 3194, 3193, 3189, 3188,
	3187, 3180, 3172, 3170, 3169, 177, 174, 198, 3163, 3162,
	3161, 115, 194, 77, 81, 195, 3159, 3158, 89, 3157,
	3154, 3140, 192, 190, 189, 995, 3137, 188, 114, 52,
	3135, 3126, 3125, 3124, 3110, 3108, 3103, 3100, 3093, 3092,
	3091, 3089, 3088, 3083, 3081, 3071, 3068, 3066, 289, 3065,
	3063, 24, 3061, 88, 3060, 3056, 3055, 3054, 3052, 11,
	3051, 3049, 15, 47, 3048, 3045, 169, 3043, 3042, 3041,
	3040, 3039, 18, 3034, 30, 3031, 44, 3030, 3029, 124,
	3027, 3025, 3022, 49, 3020, 3016, 3015, 3013, 3012, 3011,
	3008, 139, 3003, 3000, 2998, 171, 203, 2997, 2991, 207,
	103, 108, 2986, 2984, 101, 196, 2981, 118, 2980, 2979,
	2978, 155, 2977, 2446, 2976, 2972, 66, 64, 2970, 200,
	2967, 2964, 10, 183, 68, 3, 19, 21, 2963, 2962,
	65, 73, 2961, 104, 2959, 2958, 98, 76, 2957, 94,
	99, 2948, 2945, 16, 9, 2943, 5, 25, 6, 69,
	2938, 2936, 110, 2921, 2881, 2880, 95, 2875, 2874, 4301,
	2871, 84, 131, 102, 78, 2870, 153, 50, 2868, 2857,
	2851, 2849, 2848, 51, 2847, 2846, 2843, 149, 142, 175,
	2842, 136, 394, 53, 154, 2837, 332, 75, 201, 166,
	2836, 2833, 138, 137, 2829, 2824, 58, 147, 167, 2823,
	93, 129, 117, 127, 91, 130, 2822, 2821, 61, 72,
	2820, 2814, 2807, 2806, 176, 2801, 2792, 71, 2786, 56,
	2784, 185, 2783, 246, 48, 2780, 151, 168, 2777, 74,
	2770, 2769, 67, 113, 70, 33, 2767, 161, 165, 126,
	170, 2763, 2762, 54, 2761, 2760, 2754, 199, 325, 2753,
	2751, 295, 178, 143, 150, 82, 2750, 338, 2735, 2734,
	22, 3677, 6811, 2732, 55, 163, 2731, 2727, 5731, 23,
	59, 28, 2724, 187, 2722, 2720, 2714, 2711, 222, 186,
	109, 162, 62, 2710, 2709, 2707, 20, 2706, 2696, 2692,
	2691, 2689, 2688, 119, 37, 36, 35, 206, 63, 13,
	100, 164, 159, 83, 2682, 2680, 2675, 122, 90, 2673,
	160, 158, 132, 157, 2672, 181, 148, 112, 2671, 92,
	34, 2666, 2661, 2660, 2659, 86, 2654, 2653, 2652, 2649,
	156, 140, 120, 80, 2647, 79, 116, 146, 145, 45,
	2643, 57, 2639, 2637, 32, 193, 31, 2636, 17, 107,
	173, 2635, 5453, 184, 2632, 26, 323, 152, 2631, 2630,
	2, 12, 14, 2627, 2621, 2618, 2616, 134, 2615, 2613,
	2610, 2606, 29, 60, 27, 8, 111, 97, 2603, 2602,
	141, 2586, 2585, 1, 0, 128, 2584, 213,
}

//line sql.y:8356
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 411, 412, 412, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	259, 382, 383, 383, 257, 257, 33, 73, 35, 35,
	34, 34, 37, 37, 36, 8, 8, 8, 9, 9,
	9, 9, 9, 9, 9, 9, 10, 10, 10, 10,
	10, 11, 11, 11, 11, 13, 13, 13, 13, 13,
	20, 21, 12, 12, 22, 22, 107, 107, 23, 24,
	24, 24, 24, 415, 415, 184, 184, 182, 182, 183,
	183, 262, 262, 25, 266, 266, 268, 268, 268, 268,
	258, 258, 258, 26, 26, 267, 267, 269, 269, 269,
	272, 272, 272, 272, 311, 311, 311, 27, 27, 27,
	27, 27, 127, 127, 385, 385, 384, 378, 378, 377,
	377, 376, 381, 381, 380, 380, 379, 39, 40, 49,
	49, 49, 49, 50, 51, 386, 386, 351, 56, 56,
	55, 55, 55, 55, 55, 55, 57, 57, 53, 53,
	52, 52, 54, 54, 353, 353, 339, 339, 352, 352,
	352, 352, 352, 352, 352, 338, 338, 138, 138, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 401, 401, 401, 400,
	400, 237, 237, 237, 237, 237, 237, 237, 237, 148,
	148, 160, 160, 160, 160, 160, 160, 146, 146, 147,
	145, 145, 145, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 159, 159, 155, 155, 155, 156, 156, 156,
	157, 157, 402, 402, 402, 402, 316, 316, 316, 316,
	319, 319, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 318, 318, 318, 318, 318, 318, 318, 320, 320,
	320, 320, 320, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 322,
	322, 322, 322, 322, 322, 322, 322, 337, 337, 323,
	323, 331, 331, 332, 332, 333, 333, 333, 334, 334,
	334, 335, 335, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 330, 330, 329, 329, 329, 340, 365, 365,
	364, 364, 362, 362, 362, 362, 362, 362, 362, 362,
	349, 349, 359, 359, 359, 359, 359, 348, 348, 344,
	344, 344, 345, 345, 346, 346, 343, 343, 347, 347,
	361, 361, 360, 360, 341, 341, 342, 342, 367, 403,
	403, 403, 403, 403, 404, 404, 368, 393, 395, 395,
	395, 394, 394, 391, 392, 390, 390, 390, 390, 390,
	83, 83, 83, 285, 285, 286, 286, 357, 357, 356,
	356, 356, 358, 358, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 280, 280, 280, 389, 389,
	389, 389, 389, 389, 388, 388, 388, 354, 354, 354,
	354, 387, 387, 58, 58, 217, 217, 406, 406, 407,
	407, 407, 46, 46, 46, 46, 46, 46, 45, 45,
	45, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 47, 47, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 109, 109, 110, 110, 110, 110, 112, 112,
	112, 370, 370, 59, 59, 3, 3, 172, 174, 175,
	175, 173, 173, 173, 173, 173, 173, 61, 61, 60,
	60, 177, 176, 178, 178, 178, 1, 1, 2, 2,
	4, 4, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 336, 336, 336, 369, 369, 371,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	115, 114, 114, 113, 116, 116, 116, 116, 116, 116,
	116, 116, 373, 373, 373, 62, 62, 374, 324, 325,
	326, 5, 6, 350, 372, 123, 123, 29, 38, 38,
	30, 30, 30, 30, 31, 31, 63, 66, 66, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 279, 279, 288, 288, 278, 278, 303, 303, 303,
	281, 281, 281, 282, 282, 399, 399, 399, 275, 275,
	65, 65, 65, 304, 304, 304, 304, 68, 68, 408,
	408, 409, 409, 410, 410, 410, 69, 70, 70, 306,
	306, 307, 307, 71, 72, 84, 84, 84, 84, 84,
	84, 84, 85, 85, 85, 85, 108, 108, 108, 15,
	15, 15, 15, 80, 80, 80, 14, 14, 17, 67,
	67, 74, 396, 396, 397, 398, 398, 398, 398, 75,
	77, 32, 32, 32, 32, 32, 32, 133, 133, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 128, 128, 128, 122, 122, 416, 78, 79, 79,
	126, 126, 126, 119, 119, 119, 125, 125, 125, 16,
	16, 18, 261, 261, 19, 19, 130, 130, 132, 132,
	132, 132, 132, 134, 134, 134, 134, 134, 134, 134,
	129, 129, 131, 131, 131, 131, 296, 296, 296, 295,
	295, 166, 166, 168, 167, 167, 169, 169, 170, 170,
	170, 170, 215, 215, 192, 192, 254, 254, 255, 255,
	253, 253, 260, 260, 256, 256, 256, 256, 263, 263,
	171, 171, 171, 171, 179, 179, 180, 180, 181, 181,
	305, 305, 301, 301, 301, 300, 300, 185, 185, 185,
	187, 186, 186, 186, 186, 188, 188, 190, 190, 189,
	189, 191, 196, 196, 195, 195, 193, 193, 193, 193,
	194, 194, 194, 194, 197, 197, 143, 143, 143, 143,
	143, 143, 143, 158, 158, 158, 158, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 244, 244,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 152, 220,
	220, 219, 219, 86, 86, 86, 87, 87, 88, 88,
	88, 88, 88, 89, 89, 89, 89, 89, 144, 144,
	91, 91, 90, 90, 210, 210, 293, 293, 92, 93,
	93, 96, 96, 95, 94, 94, 100, 100, 97, 97,
	99, 99, 98, 101, 101, 102, 103, 103, 276, 276,
	198, 198, 206, 206, 206, 206, 199, 199, 199, 199,
	199, 199, 199, 207, 207, 207, 214, 208, 208, 204,
	204, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 163, 163, 163,
	163, 225, 225, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 151, 151,
	164, 164, 164, 164, 165, 165, 165, 165, 165, 165,
	165, 313, 313, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 417, 417, 327, 327, 327, 205,
	205, 205, 205, 205, 124, 124, 124, 124, 124, 310,
	310, 310, 314, 314, 314, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	315, 315, 223, 223, 120, 120, 221, 221, 222, 224,
	224, 216, 216, 216, 216, 218, 218, 201, 201, 201,
	226, 226, 227, 227, 104, 105, 105, 106, 106, 228,
	228, 230, 229, 229, 231, 232, 232, 232, 233, 233,
	234, 234, 234, 48, 48, 48, 48, 48, 43, 43,
	43, 43, 44, 44, 44, 44, 135, 135, 135, 135,
	137, 137, 136, 136, 81, 81, 82, 82, 82, 141,
	141, 142, 142, 142, 139, 139, 140, 140, 251, 251,
	235, 235, 235, 242, 242, 242, 238, 238, 240, 240,
	240, 241, 241, 241, 239, 248, 248, 250, 250, 249,
	249, 245, 245, 246, 246, 247, 247, 247, 243, 243,
	200, 200, 200, 200, 200, 252, 252, 252, 252, 264,
	264, 211, 211, 213, 213, 212, 212, 162, 265, 265,
	273, 270, 270, 271, 271, 297, 297, 297, 274, 274,
	287, 287, 283, 283, 284, 284, 277, 277, 289, 289,
	289, 76, 209, 209, 366, 366, 363, 292, 292, 294,
	294, 298, 298, 302, 302, 299, 299, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 413, 414, 308, 309, 309, 309,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 0, 1, 1, 1, 2, 3, 2, 3,
	0, 1, 3, 1, 4, 3, 3, 4, 3, 2,
	3, 4, 3, 4, 2, 7, 1, 3, 3, 3,
	3, 1, 2, 1, 1, 3, 2, 3, 3, 2,
	5, 7, 10, 9, 7, 8, 1, 1, 10, 11,
	9, 8, 8, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 1, 3, 3, 3, 3, 3,
	1, 1, 2, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 6,
	12, 2, 0, 2, 0, 2, 1, 0, 2, 1,
	3, 3, 0, 1, 1, 3, 3, 6, 4, 7,
	8, 8, 8, 6, 3, 1, 1, 5, 0, 1,
	1, 1, 1, 2, 2, 2, 0, 1, 4, 4,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 5, 10, 0, 2, 0,
	2, 3, 5, 3, 4, 2, 3, 2, 3, 3,
	3, 3, 2, 2, 4, 4, 1, 1, 1, 1,
	1, 0, 2, 2, 3, 3, 2, 2, 2, 1,
	1, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 5, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 1, 3, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 3, 3, 2, 2, 2, 1,
	2, 2, 0, 1, 0, 2, 2, 5, 0, 1,
	1, 2, 1, 3, 2, 1, 1, 3, 3, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 4, 3, 1, 3, 1, 7, 6,
	7, 7, 8, 8, 0, 1, 5, 2, 1, 1,
	1, 0, 1, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 1, 2, 0, 1, 0, 1, 1,
	3, 2, 1, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	5, 5, 4, 4, 4, 6, 5, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 3, 3, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 4, 4, 2, 11, 3,
	6, 8, 6, 6, 6, 13, 8, 6, 10, 5,
	5, 5, 7, 5, 5, 5, 5, 5, 7, 7,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 3, 5, 5, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 2, 4, 4, 4,
	4, 4, 2, 3, 3, 3, 3, 5, 2, 3,
	3, 2, 3, 4, 4, 4, 3, 4, 4, 5,
	3, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 1, 1,
	2, 1, 3, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 3, 2, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 4, 4, 4, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 1, 1, 2, 3, 7, 0, 3, 0, 1,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 6, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 2, 2, 2, 1, 1, 2, 7, 7,
	6, 6, 2, 2, 1, 6, 3, 3, 3, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	0, 1, 2, 5, 0, 3, 0, 1, 4, 4,
	2, 0, 1, 1, 2, 2, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 5, 1, 3, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	6, 4, 4, 8, 6, 8, 6, 5, 4, 10,
	2, 2, 1, 2, 2, 2, 2, 2, 4, 5,
	5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 8, 8, 8, 6, 5, 4,
	4, 4, 4, 4, 7, 4, 4, 6, 6, 6,
	8, 6, 6, 4, 4, 3, 4, 6, 6, 4,
	4, 6, 4, 6, 4, 4, 4, 4, 4, 4,
	6, 4, 6, 4, 4, 4, 6, 4, 6, 4,
	4, 6, 4, 6, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 4, 6, 8, 6, 4, 6, 6,
	8, 10, 7, 8, 8, 9, 4, 4, 4, 4,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 4, 4, 6, 4, 6, 5,
	9, 6, 9, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 6, 8, 10, 12, 14, 6, 8,
	8, 10, 12, 14, 6, 8, 10, 12, 6, 8,
	4, 4, 3, 4, 6, 6, 4, 6, 4, 6,
	8, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 0, 5, 5, 2, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 2, 1, 1,
	0, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 1, 3, 5, 1, 1, 1, 2, 2,
	0, 3, 0, 2, 2, 1, 3, 0, 1, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 4,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 4, 1, 1, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -411, -78, -416, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -66,
	-64, -65, -68, -69, -70, -71, -72, -14, -17, -67,
	-32, -33, -73, -74, -75, -76, -77, -16, -18, -19,
	-9, -8, -13, 10, 11, -107, -34, 33, -39, -49,
	225, -50, -40, 226, -51, 228, 227, 265, 229, 377,
	258, 75, 313, 314, 316, 317, 318, 319, -108, 655,
	263, 264, 231, 37, 46, 34, 35, 38, 235, 271,
	272, 234, -10, -35, 9, -413, 12, 454, 260, 259,
	29, -12, 549, 87, -79, -412, 703, -251, -235, 23,
	34, 30, -234, -230, -126, -235, 21, 19, 8, -78,
	-78, -78, 13, 14, -78, -351, -353, 87, 159, 87,
	-78, -56, -55, -53, -52, -54, -57, 32, -46, -47,
	-375, -45, -42, 230, 227, 275, 123, 124, 265, 266,
	267, 229, 249, 264, 268, 263, 284, -41, 82, 34,
	549, 552, -358, 226, 232, 233, 228, 455, 126, 125,
	76, -355, 372, 582, 673, -57, 675, 101, 104, 674,
	45, 239, 676, 677, 678, 589, 679, 248, 680, 681,
	682, 683, 689, 630, 690, 691, 692, 127, 8, -78,
	-302, -298, 91, -291, 546, 251, 580, 581, 300, 82,
	42, 555, 369, 372, 582, 484, 673, 378, 313, 329,
	323, 489, 490, 491, 352, 344, 547, 583, 556, 303,
	252, 288, 667, 342, 135, 675, 307, 584, 266, 379,
	380, 585, 381, 101, 316, 418, 688, 306, 586, 686,
	104, 674, 321, 80, 483, 52, 670, 45, 261, 340,
	234, 336, 676, 289, 587, 558, 282, 126, 123, 695,
	37, 332, 51, 31, 685, 125, 50, 677, 150, 588,
	678, 589, 383, 359, 661, 49, 384, 267, 590, 85,
	272, 551, 310, 669, 385, 503, 333, 386, 299, 684,
	231, 591, 650, 642, 643, 387, 388, 662, 364, 360,
	365, 505, 592, 410, 488, 389, 646, 647, 702, 53,
	593, 594, 663, 124, 595, 79, 679, 81, 327, 328,
	596, 297, 250, 508, 509, 412, 356, 466, 473, 474,
	111, 112, 469, 113, 475, 114, 476, 477, 478, 467,
	115, 108, 468, 479, 480, 357, 358, 116, 481, 110,
	109, 470, 472, 117, 482, 248, 36, 390, 548, 301,
	59, 305, 276, 413, 47, 362, 699, 46, 657, 510,
	597, 660, 355, 351, 463, 54, 598, 599, 600, 601,
	485, 680, 354, 326, 350, 694, 4, 294, 486, 681,
	63, 233, 367, 366, 368, 283, 409, 347, 602, 603,
	604, 255, 83, 605, 337, 22, 606, 607, 391, 290,
	608, 57, 609, 610, 416, 264, 611, 55, 682, 40,
	612, 269, 696, 683, 613, 614, 615, 656, 616, 271,
	617, 393, 618, 644, 645, 392, 361, 363, 511, 278,
	394, 377, 236, 550, 619, 311, 331, 268, 687, 620,
	256, 499, 500, 501, 502, 668, 507, 506, 270, 275,
	263, 417, 257, 621, 622, 623, 624, 625, 304, 641,
	626, 627, 317, 689, 464, 44, 628, 629, 630, 631,
	632, 298, 293, 411, 420, 62, 84, 374, 633, 634,
	666, 325, 322, 291, 635, 314, 56, 690, 691, 692,
	285, 693, 492, 493, 494, 495, 10, 528, 529, 530,
	539, 531, 512, 520, 513, 521, 534, 540, 533, 532,
	537, 541, 514, 522, 538, 515, 523, 516, 524, 517,
	525, 542, 518, 526, 544, 519, 527, 543, 535, 536,
	700, 701, 487, 396, 127, 295, 296, 48, 348, 277,
	636, 308, 637, 338, 339, 353, 324, 349, 653, 315,
	651, 279, 397, 465, 265, 638, 419, 292, 370, 375,
	309, 554, 504, 284, 398, 665, 553, 496, 497, 346,
	343, 286, 498, 639, 655, 399, 240, 280, 281, 640,
	652, 400, 401, 302, 402, 403, 404, 405, 406, 408,
	312, 407, 654, 648, 649, 287, 552, 320, 341, 376,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 462, 238,
	-78, 238, -189, -298, 238, 177, -270, 380, -288, 382,
	395, 390, 400, 388, -279, 391, 393, 278, -399, 410,
	238, 397, 225, 383, 392, 401, 402, 302, 408, 403,
	312, 407, 287, 404, 405, 406, -382, 177, 678, 693,
	135, 345, 387, 385, 411, 657, 91, -304, 91, 92,
	93, -291, 315, -306, 320, -292, -382, -291, 318, -78,
	-78, -308, -308, -128, 657, 659, -208, -143, 143, -158,
	-161, -149, -153, -202, -203, -204, -205, -159, -218, -257,
	166, 167, 174, 144, -214, -162, 27, 545, 456, 455,
	177, 32, -152, 220, 69, 70, 458, 146, 58, 12,
	430, 431, -160, 423, 424, 432, 426, 427, 483, 485,
	486, 487, 484, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 488, 460, 461, 118, 462, 108, 110,
	109, 463, 464, 465, 342, 510, 511, 505, 508, 509,
	507, 506, 357, 358, 466, 528, 529, 533, 532, 530,
	531, 534, 537, 538, 539, 540, 541, 542, 544, 543,
	535, 536, 513, 512, 514, 515, 516, 517, 518, 519,
	521, 520, 522, 523, 524, 525, 526, 527, 467, 468,
	111, 112, 113, 114, 115, 116, 117, 469, 472, 470,
	471, 473, 474, 475, 480, 481, 476, 477, 478, 479,
	482, 368, 366, 367, 363, 362, 361, -88, -100, 571,
	570, -101, -150, -151, -164, -165, -292, -298, 243, 422,
	237, 172, 454, -154, -147, -216, 107, 92, 93, -8,
	-212, 421, 428, 429, 433, 425, 434, 557, 559, 574,
	575, 577, 562, 567, 566, 569, 499, 500, 501, 502,
	503, 504, 642, 643, 644, 645, 646, 647, 648, 649,
	-382, -291, 91, -156, -155, -198, 94, 99, 102, 103,
	105, -405, 261, 338, 339, 119, -413, 671, 90, 95,
	96, 97, 98, 120, 121, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 45, 396, 396,
	-189, -78, -78, -78, -78, -228, -126, -230, -10, -8,
	-413, 9, -78, -8, -9, -13, -35, -37, 576, -36,
	-298, 100, -235, -251, 13, 162, 43, 51, -233, -234,
	-12, -8, -143, 20, 24, 25, -131, 168, -143, -298,
	-131, -277, 242, -78, -78, -266, -311, 315, -268, 411,
	657, 410, -258, -271, 91, -257, -270, 409, -352, 159,
	-338, -342, -292, 253, -368, 249, -189, -361, -360, -292,
	-413, -127, -287, 239, 247, 246, 136, -386, 139, 295,
	422, 237, -52, -53, -54, -270, 176, 677, -109, 270,
	274, 88, 88, -342, -341, -340, -387, 274, 253, -367,
	-359, 245, 254, -348, 246, 247, -343, 239, 137, -387,
	-343, 244, 254, 249, 253, 274, 274, 127, 274, 127,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 269,
	-349, 151, -349, 553, 553, -355, -387, 249, 239, -387,
	-387, 245, -289, -343, 241, 26, 241, 36, 36, -349,
	-349, -349, -270, 176, -349, -349, -349, -349, 282, 282,
	-349, -349, -349, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -349, -349, -349, -349, 238, -386, -135,
	407, 302, 82, -55, 284, -38, -189, -287, 239, 240,
	-386, 271, -189, 221, -189, 660, -281, 159, 16, -281,
	-278, 396, 394, 381, 386, -281, -281, -281, -281, 285,
	379, -344, 239, 36, 250, 396, 285, 379, 285, 286,
	285, 286, 389, 399, 285, -303, 15, 162, 422, 384,
	388, 278, 238, 279, 240, 398, 286, -303, 90, -282,
	159, 285, 396, 281, -281, -281, -309, -413, -294, -292,
	-290, 230, 24, 142, 26, 28, 145, 177, 130, 20,
	146, 38, 232, 345, 249, 176, 245, 455, 225, 73,
	557, 423, 427, 421, 426, 430, 457, 458, 422, 382,
	32, 14, 559, 29, 259, 25, 39, 170, 227, 149,
	560, 262, 27, 260, 118, 121, 562, 23, 76, 254,
	15, 247, 41, 17, 563, 564, 18, 243, 242, 162,
	239, 71, 12, 220, 30, 158, 67, 565, 137, 566,
	567, 568, 569, 131, 69, 159, 21, 697, 428, 429,
	34, 658, 545, 273, 172, 74, 60, 659, 143, 425,
	570, 571, 119, 572, 122, 77, 664, 139, 19, 72,
	43, 573, 274, 574, 244, 698, 575, 414, 576, 160,
	228, 454, 70, 161, 671, 577, 672, 237, 395, 9,
	459, 33, 258, 246, 129, 68, 434, 578, 238, 148,
	460, 461, 241, 132, 120, 8, 136, 35, 13, 75,
	78, 431, 432, 433, 58, 128, 549, 147, 16, 579,
	415, 141, -382, 660, -309, -309, 33, 92, -408, -409,
	-410, 549, 414, 241, -292, -189, -84, 650, 229, -85,
	656, 24, 236, -133, 396, -121, 177, 678, 661, 662,
	663, 660, 393, 668, 666, 664, 285, 665, 88, 139,
	141, 142, 4, -143, 158, -199, 151, 152, 153, 154,
	155, 156, 157, 162, 143, 145, 159, -244, 140, 163,
	164, 165, 166, 167, 168, 169, 171, 170, 172, 173,
	160, 161, 176, 223, 224, -153, -153, -153, -153, -214,
	-220, -219, -413, -216, -382, -291, -298, -413, -413, -153,
	-276, -413, -413, -149, -413, -413, -413, -223, -143, -413,
	-413, -417, -413, -417, -417, -417, -327, -413, -327, -327,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, 221, -413, -413, -413, -413,
	-413, -327, -327, -327, -327, -327, -327, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, 103, 99, 102, 94, -218, 105, 90, 90, 90,
	90, -8, -9, -208, -413, -308, -396, -397, -192, -189,
	-413, 302, -292, -292, 271, -233, -12, -8, -228, -234,
	-230, -8, -78, -119, -132, 64, 65, -134, 25, 39,
	68, 66, 24, -414, 89, -414, -251, -414, 88, -37,
	-254, 87, 62, 44, 90, 90, 88, 22, -229, -231,
	-143, 15, -296, 4, -295, 26, -292, 90, 221, 15,
	-190, 30, -189, -277, -277, 88, 91, 315, -267, -269,
	412, 414, 151, -297, -292, 90, 32, 89, 88, -189,
	-316, -319, -321, -320, -322, -317, -318, 342, 343, 177,
	346, 348, 349, 350, 351, 352, 353, 354, 355, 356,
	359, 33, 261, 338, 339, 340, 341, 360, 361, 362,
	363, 365, 366, 367, 368, 323, 344, 547, 324, 325,
	326, 327, 328, 329, 331, 332, 335, 333, 334, 336,
	337, -383, -382, 87, 89, 88, -323, 87, -143, -135,
	238, -382, 239, 239, 239, -78, 454, -349, -349, -349,
	269, 20, -45, -42, -375, 19, -41, -42, 230, 123,
	124, 227, 87, -338, 87, -347, -383, -382, 87, 137,
	244, 136, -346, -343, -346, -347, -382, -216, -382, 137,
	137, -382, -382, -263, -292, -263, -263, 24, -263, 24,
	-263, 24, 96, -292, -263, 24, -263, 24, -263, 24,
	-263, 24, -263, 24, 32, 79, 80, 81, 32, 83,
	84, 85, -216, -382, -382, -216, -338, -216, -189, -382,
	-270, 96, 96, 96, -349, -349, 96, 90, 90, 90,
	-349, -349, 96, 90, -300, -298, 90, 90, -388, 255,
	299, 301, 96, 96, 96, 96, 32, 90, -389, 32,
	685, 684, 686, 687, 688, 90, 96, 32, 96, 32,
	96, -292, 87, -189, -141, 289, 225, 227, 230, 77,
	90, 305, 306, 303, 308, 309, 151, 45, 88, 241,
	238, -382, -283, 243, -283, -292, -299, -298, -290, 241,
	378, 90, -143, -345, 15, 162, -303, -303, -281, -189,
	-345, -303, -281, -189, -281, -281, -281, -281, -303, -303,
	-303, -281, -298, -298, -189, -189, -189, -189, -189, -189,
	-189, -309, -282, -281, 660, 90, -275, 15, 77, -309,
	-309, 88, 321, 415, 416, -307, 318, -80, -292, 90,
	-15, -11, -23, -22, -24, 151, -15, 88, 549, -182,
	-189, 660, 660, 660, 660, 660, 660, -143, -143, -143,
	-143, 572, -206, 119, 143, 120, 121, -161, -207, -212,
	-214, 106, 162, 145, 159, -244, -149, -153, -149, -149,
	-149, -149, -149, -149, -149, -149, -149, -149, -149, -149,
	-149, -310, -292, 90, 177, -157, -156, 105, -405, -157,
	546, 88, -219, 221, -143, -143, -382, -143, -292, -129,
	-131, -129, -143, -221, -222, 147, -216, -143, -414, -414,
	96, 168, -125, 25, 39, -125, -125, -125, -125, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -125,
	-292, -292, -118, -117, 436, 437, 438, 439, 441, 442,
	443, 446, 447, 451, 452, 435, 453, 440, 445, 448,
	449, 450, 444, 341, -143, -143, -143, -143, -143, -143,
	-86, -143, 130, 131, 132, -208, -143, -149, -143, -143,
	-143, -414, -143, -143, -143, -209, -208, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-381, -380, -379, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -208, -208, -208, -208,
	-208, -143, -414, -143, -163, -147, 96, -259, 105, 92,
	-143, -143, -130, -129, -294, -299, -290, -291, -129, -130,
	-130, -129, -129, -143, -143, -143, -143, -143, -143, -143,
	-143, -414, -143, -143, -143, -143, -143, -251, -414, -208,
	88, -398, 414, 415, 658, -301, 274, -300, 26, -209,
	90, 15, -261, 78, -292, -233, -233, 64, 65, 60,
	-129, -134, -414, -36, 26, -253, -292, 63, 90, -328,
	-270, 369, 370, 177, -143, -143, 88, -232, 28, 29,
	-189, -295, 168, -299, -189, -262, 274, -189, -167, -169,
	-170, -171, -192, -215, -413, -172, -8, 568, 565, 15,
	-182, -183, -191, -298, -268, -311, -267, 88, 413, 415,
	416, 77, 122, -143, -329, 176, -357, -356, -355, -338,
	-340, -341, -342, 89, -329, -334, 375, 374, -323, -323,
	-323, -323, -323, -328, -328, -328, -328, 87, 87, -323,
	-323, -323, -323, -331, 87, -331, -331, -332, -331, 87,
	-332, -333, 87, -333, -368, -143, -365, -364, -362, -363,
	248, 101, 640, 596, 549, 589, 630, 78, -360, -232,
	96, -414, -141, -284, 243, -366, -363, -382, -382, -382,
	-284, 91, 90, 91, 90, 91, 90, -110, -59, -1,
	697, 698, 699, 88, 20, -339, -338, -58, 299, -371,
	-372, 274, -367, -361, -347, 137, -346, -347, -347, -382,
	88, 30, 127, 127, 127, 127, 549, 227, 33, -285,
	588, 143, 640, 596, -338, -58, 241, 241, -310, -310,
	-310, 90, 90, -280, 693, -182, -137, 291, 151, 280,
	280, 238, 238, 293, -189, 304, 307, 305, 306, 303,
	308, 309, 24, 24, 24, 24, 24, 292, 294, 296,
	282, -189, -189, -283, 77, -184, -189, 27, -298, 90,
	90, -189, -281, -281, -189, -281, -281, -189, -410, 322,
	-292, 356, 651, 652, 654, 653, -121, 414, 88, 549,
	23, -122, 23, -413, 119, 120, 121, -207, -149, -153,
	-149, 142, 262, -413, -216, -414, -294, 26, 88, 78,
	-414, 88, 88, -414, -414, 88, 15, -224, -222, 149,
	-143, -414, 88, -414, -414, -208, -143, -143, -143, -143,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-208, 88, 88, 15, -314, 26, -414, -414, -414, -414,
	-414, -223, -414, 15, -414, 78, 88, 162, 88, -414,
	-414, -414, 88, 88, -414, -414, 88, -414, 88, -414,
	-414, -414, -414, -414, -414, 88, -414, 88, -414, -414,
	-414, 88, -414, 88, -414, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, 88, -414, 88, 88, 88, -414, 88,
	88, 88, 88, -414, -414, -414, -414, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, -414, -414, -414,
	-414, -414, -414, 88, -93, 573, -414, -414, 88, -414,
	88, -414, -413, 221, -414, -414, -414, -414, -414, 88,
	88, 88, 88, 88, 88, -414, -414, -414, 88, 88,
	-414, 88, -414, 88, -414, -397, 657, 415, -196, -195,
	-193, 75, 242, 76, -413, -300, -414, -157, -259, -260,
	-259, -201, -292, 96, 105, -235, -166, -168, 15, -134,
	-214, 89, 88, -328, -239, -245, -278, -292, 90, 177,
	-330, 177, -330, 369, 370, -231, 221, -197, 16, -200,
	33, 58, -11, -413, -413, 33, 88, -185, -187, -186,
	-188, 67, 71, 73, 68, 69, 70, 74, -305, 26,
	-8, -167, -8, -413, -189, -182, -415, 15, 78, -415,
	88, 221, -269, -272, 417, 414, 420, -382, 90, -109,
	88, -355, -342, -236, -138, 41, -335, 376, -328, 556,
	-328, -337, 90, -337, 96, 96, 96, 89, -48, -43,
	-44, 34, 82, -362, -349, 90, 40, -349, -349, -292,
	89, -232, -137, -189, 143, 77, -366, -366, -366, -298,
	-2, 696, 702, 137, 87, 381, 19, -253, 88, 89,
	-217, 300, 89, -111, -292, 89, 87, -347, -347, -292,
	-413, 238, 32, 32, 640, 596, 588, -58, -217, -216,
	-382, -329, 695, 694, 89, 240, 298, -142, 430, -139,
	90, 91, -189, -189, -189, -189, -189, 230, 227, 404,
	-406, 310, -406, 283, 241, -182, -189, 88, -83, 257,
	252, -303, -303, 34, -189, 414, 669, 667, -143, 142,
	262, -161, -153, -149, -312, 177, 342, 261, 340, 336,
	356, 347, 374, 338, 375, 333, 332, 331, -312, -310,
	-208, -131, -143, -143, 150, -143, 148, -143, -414, -414,
	-414, -414, -414, -228, -143, -143, -143, -414, 177, 342,
	15, -143, -310, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -379, -143, -208, -143, -208, -143, -143, -143,
	-143, -143, -380, -380, -380, -380, -380, -208, -208, -208,
	-208, -143, -413, -292, -96, -95, -94, 623, 242, -93,
	-163, -96, -163, -130, -294, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -193, -343, -343, -343, -263,
	88, -274, 23, 15, 58, 58, -166, -197, -167, -134,
	-292, -242, 650, -248, 47, -246, -247, 48, -243, 49,
	57, -330, -330, 168, -233, -143, -264, 77, -265, -273,
	-216, -211, -213, -212, -413, -252, -414, -292, -263, -265,
	-169, -170, -170, -169, -170, 67, 67, 67, 72, 67,
	72, 67, -186, -298, -414, -143, -301, 78, -167, -167,
	-191, -298, 168, 414, 418, 419, -355, -404, 119, 143,
	32, 77, 372, 101, -402, 176, 585, 635, 640, 596,
	589, 630, -403, 244, 136, 137, 256, 26, 42, 89,
	88, 89, 88, 89, 89, 88, -286, -285, -44, -43,
	-349, -349, 96, -382, 90, 90, 240, 27, -189, 77,
	77, 77, -112, 700, 96, 87, -3, 82, -143, 87,
	20, -338, -216, -373, -324, -374, -325, -326, -5, -6,
	-350, -115, 58, 101, -62, 45, 239, 680, 681, 127,
	-413, 693, -365, -253, -369, -371, -189, -146, -413, -145,
	-147, -154, 166, 167, 261, 338, 339, -217, -189, -136,
	289, 297, 87, -140, 92, -385, 78, 280, 372, 280,
	90, -407, 311, 90, -407, -189, -83, -48, -189, -281,
	-281, 34, -382, -414, -161, -153, -124, 162, 549, -315,
	555, -323, -323, -323, -333, -323, 328, -323, 328, -323,
	-414, -414, -414, 88, -414, 23, -414, -143, 88, -120,
	459, 88, 88, -414, 87, 87, -143, -414, -414, -414,
	88, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, 88, -414,
	88, -414, 88, -414, 88, -414, 88, -414, -414, -414,
	88, -313, 641, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -92, -293, -292, -93, 605, 605,
	-414, -93, -225, 88, -414, -414, 88, -414, 88, 88,
	-414, 88, -414, 88, -414, -414, -414, -414, 88, -194,
	23, -194, -194, -414, -259, -189, -197, -226, 17, -239,
	52, 348, -250, -249, 56, 48, -247, 20, 50, 20,
	31, -264, 88, 151, 88, -414, -414, 88, 58, 221,
	-414, -197, -180, -179, 77, 78, -181, 77, -179, 67,
	67, -254, 88, -262, -167, -197, -197, 221, 119, -413,
	-148, -160, -146, 13, 90, 90, -382, -401, 684, 685,
	32, 96, -349, -349, 137, 137, -189, 87, -328, 90,
	-328, 96, 96, 32, 83, 84, 85, 32, 79, 80,
	81, -189, -189, -189, -189, -370, 87, 20, -143, 87,
	151, 89, -253, -253, 276, 162, -349, 678, 282, 282,
	-349, -349, -349, -114, -113, 700, 89, -414, 88, -336,
	549, 552, -143, -155, -155, -254, 89, -378, 549, -384,
	-292, -292, -292, -292, 96, 98, -414, 547, 74, 550,
	-414, -328, -143, -143, -143, -233, 90, -143, -143, 96,
	96, -414, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -208,
	-143, -414, -177, -176, -178, 661, 119, 32, -312, -414,
	-210, 274, -99, -98, -97, 15, -414, -143, -143, -143,
	-143, -143, -143, -143, -413, 67, 19, 17, -413, -413,
	-301, -226, -227, 18, 20, -240, 54, -238, 53, -238,
	-249, 20, 20, 90, 20, 90, 137, -273, -143, -213,
	58, -11, -292, -211, -292, -228, -143, 87, -143, -157,
	-197, -197, -143, -203, 483, 485, 486, 487, 484, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 488,
	462, 108, 110, 109, 463, 464, 465, 342, 510, 511,
	505, 508, 509, 507, 506, 357, 358, 466, 528, 529,
	533, 532, 530, 531, 534, 537, 538, 539, 540, 541,
	542, 544, 543, 535, 536, 513, 512, 514, 515, 516,
	517, 518, 519, 521, 520, 522, 523, 524, 525, 526,
	527, 467, 468, 111, 112, 113, 114, 115, 116, 117,
	469, 472, 470, 473, 474, 475, 480, 481, 476, 477,
	478, 479, 482, 368, 366, 367, 363, 362, 361, 499,
	500, 501, 502, 503, 504, 642, 643, 644, 645, 646,
	647, 648, 649, 90, 90, 87, -143, 89, 89, -254,
	-369, -59, 89, -255, -253, 96, 89, 277, -212, -413,
	90, -349, -349, -349, 96, 96, -300, -414, 88, -292,
	-403, -371, 553, 553, -414, 26, -377, -376, -294, 87,
	78, 63, 548, 551, -414, -414, 88, -414, -414, -414,
	89, 89, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, 88, -414, -176, -178, -414, 77, -157, -228, 20,
	-96, 299, 301, -96, -414, 88, -414, -414, 88, -414,
	88, -414, -414, -256, -414, -292, 244, 20, 20, -256,
	-256, -196, -227, -106, -105, -104, 579, -143, -208, -241,
	55, 77, 122, 90, 90, 90, 13, -211, 221, -233,
	-253, -174, 381, -228, -414, -253, 89, 26, 89, 702,
	137, 89, -212, -123, -413, 273, -300, 90, 90, -113,
	-116, -11, 88, 151, -253, -189, 63, -143, -208, -414,
	77, 560, 661, -91, -90, -87, 672, 698, -208, -93,
	-93, -143, -143, -143, 88, -414, -414, -414, -106, 88,
	-103, -102, -292, 77, 122, -265, -292, 89, -414, -413,
	-233, 89, -237, -11, 87, -3, 273, -324, -374, -325,
	-326, -5, -6, -350, -81, 549, -376, -354, -298, -294,
	90, 96, 89, 549, -414, -414, -89, 145, 670, 638,
	-144, -155, -152, 220, -414, 88, -414, 88, -414, 88,
	-292, 244, -104, 88, 26, -301, -175, -173, -292, 602,
	-394, -393, 545, -404, -400, 119, 143, 101, -402, 640,
	596, 128, 129, -81, -143, 87, -414, -82, 288, 657,
	221, -385, 550, -89, 671, 616, 591, 616, 591, -143,
	-143, -143, -102, -413, -414, 88, 23, -316, -61, 613,
	-391, -392, 77, -395, 387, 612, 633, 119, 90, 89,
	-253, 249, -299, -378, 551, 142, -414, 88, -414, 88,
	-414, -92, -173, 609, -329, -157, -392, 77, -391, 77,
	14, 13, -4, 701, 89, 290, -89, -143, -143, -414,
	-60, 27, -174, -390, 257, 252, 255, 33, -390, 96,
	-4, -414, -414, 613, 251, 32, 119, -157, -177, -176,
	-176,
}

var yyDef = [...]int{
	876, -2, -2, 878, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	71, 73, 74, 876, 876, 876, 0, 876, 0, 0,
	876, -2, -2, 876, 1563, 0, 876, 0, 0, 0,
	-2, 791, 797, 0, 806, -2, 0, 0, 876, 876,
	2155, 2155, 871, 0, 0, 0, 0, 0, 876, 876,
	876, 876, 1429, 51, 876, 0, 86, 87, 826, 827,
	828, 66, 0, 2153, 877, 1, 3, 72, 76, 0,
	0, 0, 59, 1438, 0, 79, 0, 0, 880, 0,
	0, 1546, 876, 876, 0, 127, 128, 0, 0, 0,
	-2, 131, -2, 160, 161, 162, 0, 167, 602, 525,
	577, 523, 562, -2, 511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 400, 400,
	0, 0, -2, 511, 511, 511, 1548, 0, 0, 0,
	559, 462, 400, 400, 400, 0, 400, 400, 400, 400,
	0, 0, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 1456,
	166, 1564, 1561, 1562, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 0,
	1540, 0, 715, 979, 0, 0, 780, 780, 0, 780,
	780, 780, 780, 0, 0, 0, 729, 0, 0, 0,
	0, 777, 0, 745, 746, 0, 777, 0, 752, 783,
	0, 0, 758, 780, 780, 761, 2156, 0, 2156, 2156,
	1531, 0, 774, 772, 786, 787, 41, 790, 793, 794,
	795, 796, 799, 0, 810, 813, 1557, 1558, 0, 815,
	822, 839, 840, 0, 872, 873, 46, 1127, 0, 1001,
	1006, 1017, 1032, 1033, 1034, 1035, 1036, 1038, 1039, 1040,
	0, 0, 0, 0, 1045, 1046, 0, 0, 0, 0,
	0, 1108, 1054, 0, 0, 0, 0, 1402, 0, 0,
	1364, 1364, 1142, 1364, 1364, 1366, 1366, 1366, 1768, 1904,
	1912, 2066, 1729, 1735, 1736, 1737, 2026, 2027, 2028, 2029,
	2101, 2102, 2106, 1828, 0, 0, 0, 2152, 1865, 1873,
	1874, 1898, 1998, 2087, 1747, 1893, 1962, 1825, 1847, 1848,
	1980, 1981, 1869, 1870, 1851, 2031, 2032, 2042, 2043, 2033,
	2035, 2040, 2044, 2048, 2034, 2041, 2045, 2055, 2058, 2061,
	2062, 2063, 2038, 2036, 2046, 2049, 2051, 2053, 2056, 2059,
	2039, 2037, 2047, 2050, 2052, 2054, 2057, 2060, 1863, 1866,
	1854, 1855, 1857, 1859, 1864, 1871, 1877, 1856, 1876, 1875,
	0, 1852, 1853, 1858, 1868, 1872, 1860, 1861, 1862, 1867,
	1878, 1918, 1917, 1916, 1961, 1889, 1960, 0, 0, 0,
	0, 0, 1303, 1304, 1305, 1306, 0, 0, 0, 0,
	0, 0, 0, 292, 293, 1415, 1416, 44, 45, 1126,
	1527, 1366, 1366, 1366, 1366, 1366, 1366, 1068, 1069, 1070,
	1071, 1072, 1096, 1097, 1103, 1104, 1975, 1976, 1977, 1978,
	1809, 2096, 1817, 1818, 1957, 1958, 1830, 1831, 2127, 2128,
	-2, -2, -2, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 1772, 2077, 2078, 229, 0, 0, 297, 298,
	294, 295, 296, 1110, 1111, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272, 273, 274,
	275, 276, 277, 278, 279, 280, 281, 282, 283, 284,
	285, 286, 287, 288, 289, 290, 291, 2155, 0, 849,
	0, 0, 0, 0, 0, 1438, 0, 1430, 1429, 64,
	0, 876, -2, 0, 0, 0, 0, 48, 0, 53,
	936, 879, 78, 77, 1478, 0, 0, 0, 60, 1439,
	68, 70, 1440, 0, 881, 882, 0, 912, 916, 0,
	0, 0, 1547, 1546, 1546, 103, 0, 0, 104, 124,
	125, 126, 0, 0, 110, 111, 1533, 1534, 0, 0,
	178, 179, 0, 42, 427, 0, 174, 0, 420, 359,
	0, 1456, 0, 0, 0, 0, 0, 876, 0, 1541,
	155, 156, 163, 164, 165, 400, 400, 400, 574, 0,
	0, 166, 166, 532, 533, 534, 0, 0, -2, 425,
	0, 512, 0, 0, 414, 414, 418, 416, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 551, 0, 552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 663,
	0, 401, 0, 572, 573, 463, 0, 0, 0, 0,
	0, 0, 0, 0, 1549, 1550, 0, 549, 550, 0,
	0, 0, 400, 400, 0, 0, 0, 0, 400, 400,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 1469,
	0, 0, 0, -2, 0, 707, 0, 0, 0, 1542,
	1542, 0, 714, 0, 716, 0, 719, 0, 0, 720,
	0, 777, 777, 775, 776, 722, 723, 724, 725, 780,
	0, 0, 409, 410, 411, 777, 780, 0, 780, 780,
	780, 780, 777, 777, 777, 780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2156, 783, 780, 0, 753,
	0, 754, 755, 756, 759, 760, 762, 2157, 2158, 1559,
	1560, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 2156, 2156, 766, 770, 1532, 792, 798, 800,
	801, 0, 0, 811, 814, 833, 50, 1816, 821, 50,
	823, 824, 825, 851, 852, 857, 0, 0, 0, 0,
	863, 864, 865, 0, 0, 868, 869, 870, 0, 0,
	0, 0, 0, 999, 0, 0, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1018, 1019, 0, 0, 0, 1041, 1042, 1043, 1044, 1047,
	0, 1059, 0, 1061, 1411, -2, 0, 0, 0, 1052,
	1053, 0, 0, 0, 0, 0, 0, 0, 1403, 0,
	0, 1140, 0, 1141, 1143, 1144, 1145, 0, 1146, 1147,
	886, 886, 886, 886, 886, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 886, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 896, 0, 0, 896, 896, 0,
	0, 221, 222, 223, 224, 225, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 242, 243, 244, 245, 246, 299, 247, 248,
	249, 1126, 0, 0, 0, 47, 841, 842, 0, 962,
	1552, 0, 0, 892, 0, 58, 67, 69, 1438, 62,
	1438, 0, 898, 0, 0, -2, -2, 899, 905, 906,
	907, 908, 909, 55, 2154, 56, 0, 75, 0, 49,
	0, 0, 0, 0, 373, 1481, 0, 0, 1431, 1432,
	1435, 0, 913, 1910, 917, 0, 919, 920, 0, 0,
	101, 0, 978, 0, 0, 0, 112, 0, 114, 115,
	0, 0, 0, 384, 1535, 1536, 1537, -2, 407, 0,
	384, 368, 307, 308, 309, 359, 311, 359, 359, 359,
	359, 373, 373, 373, 373, 342, 343, 344, 345, 346,
	0, 0, 328, 359, 359, 359, 359, 349, 350, 351,
	352, 353, 354, 355, 356, 312, 313, 314, 315, 316,
	317, 318, 319, 320, 361, 361, 361, 361, 361, 365,
	365, 0, 43, 0, 388, 0, 1435, 0, 0, 1469,
	1544, 1554, 0, 0, 0, 1544, 133, 0, 0, 0,
	575, 613, 526, 563, 576, 0, 529, 530, -2, 0,
	0, 511, 0, 513, 0, 408, 0, -2, 0, 418,
	0, 414, 418, 415, 418, 406, 419, 553, 554, 555,
	0, 557, 558, 643, 948, 0, 0, 0, 0, 0,
	649, 650, 651, 0, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 0, 0, 0, 513, 0, 560, 0,
	0, 464, 465, 466, 0, 0, 469, 470, 471, 472,
	0, 0, 475, 476, 477, 965, 966, 478, 479, 504,
	505, 506, 480, 481, 482, 483, 484, 485, 486, 498,
	499, 500, 501, 502, 503, 487, 488, 489, 490, 491,
	492, 495, 0, 148, 1460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1542, 0, 0, 0, 0, 895, 980, 1565, 1566, 0,
	0, 781, 782, 0, 412, 413, 780, 780, 726, 767,
	0, 780, 730, 768, 731, 733, 732, 734, 747, 748,
	780, 737, 778, 779, 738, 739, 740, 741, 742, 743,
	744, 763, 749, 750, 751, 784, 0, 788, 789, 764,
	765, 0, 0, 804, 805, 0, 812, 836, 834, 835,
	837, 829, 830, 831, 832, 0, 838, 0, 0, 854,
	97, 859, 860, 861, 862, 874, 867, 1128, 996, 997,
	998, 0, 1000, 1003, 0, 1112, 1114, 1005, 1007, 1123,
	1124, 1125, 0, 0, 0, 0, 0, 1011, 1015, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1037, 1379, 1380, 1381, 1056, 300, 301, 0, 1057,
	0, 0, 0, 0, 0, 0, 0, 1127, 1058, 0,
	910, 0, 0, 1409, 1406, 0, 0, 0, 1365, 1367,
	0, 0, 0, 887, 888, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1382, 0, 0, 0, 0, 0,
	1402, 0, 1063, 1064, 1065, 0, 0, 0, 0, 0,
	0, 1185, 0, 0, 0, 0, 1553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 144, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1307, 1308, 1309, 1310, 40,
	0, 0, 0, 897, 1413, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1332, 0, 0, 0, 0, 0, 0, 1525, 0,
	0, 844, 845, 847, 0, 982, 0, 963, 0, 0,
	850, 0, 891, 0, 894, 61, 63, 903, 904, 0,
	921, 900, 57, 52, 0, 0, 940, 1479, 373, 1501,
	0, 382, 382, 379, 1441, 1442, 0, 1434, 1436, 1437,
	80, 918, 914, 0, 994, 0, 0, 977, 0, 924,
	926, 927, 928, 960, 0, 931, 932, 0, 0, 0,
	0, 0, 99, 979, 105, 0, 113, 0, 0, 118,
	119, 106, 107, 108, 109, 0, 602, -2, 459, 180,
	182, 183, 184, 175, -2, 371, 369, 370, 310, 373,
	373, 336, 337, 338, 339, 340, 341, 0, 0, 329,
	330, 331, 332, 321, 0, 322, 323, 324, 363, 0,
	325, 326, 0, 327, 426, 0, 1443, 389, 390, 392,
	400, 0, 395, 396, 0, 400, 400, 0, 421, 422,
	0, 1435, 1460, 0, 0, 0, 1555, 1554, 1554, 1554,
	0, 168, 169, 170, 171, 172, 173, 638, 0, 0,
	614, 636, 637, 166, 0, 0, 176, 515, 514, 0,
	670, 0, 424, 0, 0, 418, 418, 403, 404, 556,
	0, 0, 645, 646, 647, 648, 0, 0, 0, 542,
	453, 0, 543, 544, 513, 515, 0, 0, 384, 467,
	468, 473, 474, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 589, 590, 591, 594, 596,
	517, 600, 593, 595, 597, 517, 601, 1457, 1458, 1459,
	0, 0, 708, 0, 0, 450, 95, 1543, 713, 717,
	718, 777, 736, 769, 777, 728, 735, 757, 802, 803,
	808, 816, 817, 818, 819, 820, 858, 0, 0, 0,
	0, 866, 0, 0, 1004, 1113, 1115, 1008, 0, 1012,
	1016, 0, 0, 0, 1062, 1060, 1413, 0, 0, 0,
	1109, 0, 0, 1131, 1132, 0, 0, 0, 1407, 0,
	0, 1138, 0, 1368, 1148, 0, 0, 0, 0, 0,
	1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163,
	1429, 0, 0, 0, 0, 0, 1169, 1170, 1171, 1172,
	1173, 0, 1175, 0, 1176, 0, 0, 0, 0, 1183,
	1184, 1186, 0, 0, 1189, 1190, 0, 1192, 0, 1194,
	1195, 1196, 1197, 1198, 1199, 0, 1201, 0, 1203, 1204,
	1205, 0, 1207, 0, 1209, 1210, 0, 1212, 0, 1214,
	0, 1217, 0, 1220, 0, 1223, 0, 1226, 0, 1229,
	0, 1232, 0, 1235, 0, 1238, 0, 1241, 0, 1244,
	0, 1247, 0, 1250, 0, 1253, 0, 1256, 0, 1259,
	0, 1262, 0, 0, 1263, 0, 0, 0, 1267, 0,
	0, 0, 0, 1276, 1277, 1278, 1279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1290, 1291, 1292,
	1293, 1294, 1295, 0, 1297, 0, 1091, 0, 0, 1091,
	0, 1129, 896, 0, 1369, 1370, 1371, 1372, 1373, 0,
	0, 0, 0, 0, 0, 1330, 1331, 1333, 0, 0,
	1336, 0, 1338, 0, 1526, 843, 846, 848, 934, 983,
	984, 0, 0, 0, 0, 964, 1551, 889, 890, 893,
	942, 0, 1417, 0, 0, 921, 994, 922, 0, 901,
	54, 937, 0, 1483, 1482, 1495, 1508, 382, 382, 376,
	377, 383, 378, 380, 381, 1433, 0, 1438, 0, 1519,
	0, 0, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 967, 0, 0, 970, 0, 0, 0, 0, 961,
	932, 0, 933, 0, -2, 0, 0, 93, 94, 0,
	0, 0, 116, 117, 0, 0, 123, 385, 386, 157,
	166, 461, 181, 434, 0, 0, 306, 372, 333, 334,
	335, 0, 357, 0, 0, 0, 0, 455, 129, 1447,
	1446, 400, 400, 391, 0, 394, 0, 0, 0, 1556,
	360, 423, 0, 147, 0, 0, 0, 0, 0, 153,
	608, 0, 0, 615, 0, 0, 0, 524, 0, 535,
	536, 0, 642, -2, 704, 388, 0, 402, 405, 949,
	0, 0, 537, 0, 540, 541, 454, 515, 546, 547,
	561, 548, 496, 497, 494, 0, 0, 1470, 1471, 1476,
	1474, 1475, 134, 582, 584, 583, 587, 0, 0, 0,
	519, 0, 519, 580, 0, 450, 1443, 0, 712, 451,
	452, 780, 780, 853, 98, 0, 856, 0, 0, 0,
	0, 1009, 1013, 1374, 1400, 359, 359, 1387, 359, 365,
	1390, 359, 1392, 359, 1395, 359, 1398, 1399, 0, 0,
	0, 911, 0, 0, 1137, 1410, 0, 0, 1149, 1150,
	1151, 1152, 1153, 1404, 0, 0, 0, 1168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 146, 0, 0, 0, 0, 0, 0,
	1341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1086, 1090, 0, 1092, 1093, 0, 0, 1299,
	0, 0, 1311, 0, 1414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 985, 990, 990, 990, 0,
	0, 0, 1538, 1539, 1418, 1419, 994, 1420, 923, 902,
	941, 1501, 0, 1494, 0, -2, 1503, 0, 0, 0,
	1509, 374, 375, 915, 81, 995, 84, 0, 1519, 1528,
	0, 1510, 1521, 1523, 0, 0, 0, 1515, 0, 994,
	925, 956, 958, 0, 953, 968, 969, 971, 0, 973,
	0, 975, 976, 936, 930, 0, 101, 0, 994, 994,
	100, 0, 981, 120, 121, 122, 460, 185, 190, 0,
	0, 0, 195, 0, 197, 0, 0, 0, 202, 203,
	400, 400, 435, 0, 303, 305, 0, 0, 188, 373,
	0, 373, 0, 364, 366, 0, 436, 456, 1444, 1445,
	0, 0, 393, 397, 398, 399, 0, 1545, 149, 0,
	0, 0, 611, 0, 639, 0, 0, 0, 0, 0,
	0, 177, 516, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 0, 400, 0, 0, 0, 400, 400, 400,
	0, 696, 387, 0, 0, 667, 664, 538, 0, 227,
	228, 230, 0, 0, 0, 0, 0, 545, 936, 1461,
	1462, 1463, 0, 1473, 1477, 137, 0, 0, 0, 0,
	592, 598, 0, 518, 599, 709, 710, 711, 96, 721,
	727, 855, 875, 1002, 1010, 1014, 0, 0, 0, 0,
	1401, 1385, 373, 1388, 1389, 1391, 1393, 1394, 1396, 1397,
	1050, 1051, 1055, 0, 1134, 0, 1136, 1408, 0, 1438,
	0, 0, 0, 1167, 0, 0, 0, 1178, 1177, 1179,
	0, 1181, 1182, 1187, 1188, 1191, 1193, 1200, 1202, 1206,
	1208, 1211, 1213, 1215, 0, 1218, 0, 1221, 0, 1224,
	0, 1227, 0, 1230, 0, 1233, 0, 1236, 0, 1239,
	0, 1242, 0, 1245, 0, 1248, 0, 1251, 0, 1254,
	0, 1257, 0, 1260, 0, 1264, 0, 1266, 1268, 1269,
	0, 0, 0, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1296, 0, 1084, 1087, 1298, 1094, 1095,
	1100, 1301, 0, 0, 1130, 1313, 0, 1318, 0, 0,
	1324, 0, 1328, 0, 1334, 1335, 1337, 1339, 0, 0,
	0, 0, 0, 962, 943, 65, 1420, 1422, 0, 1488,
	1486, 1486, 1496, 1497, 0, 0, 1504, 0, 0, 0,
	0, 85, 0, 0, 0, 1524, 0, 0, 0, 0,
	102, 1429, 950, 957, 0, 0, 951, 0, 952, 972,
	974, 929, 0, 994, 994, 91, 92, 0, 191, 0,
	193, 219, 220, 0, 196, 198, 199, 200, 206, 207,
	208, 201, 0, 0, 302, 304, 0, 0, 347, 358,
	348, 0, 0, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 936, 150, 151, 152, 603, 0, 613, 0, 938,
	0, 606, 0, 527, 0, 0, 0, 400, 400, 400,
	0, 0, 0, 0, 681, 0, 0, 644, 0, 652,
	0, 0, 0, 231, 232, 0, 1472, 581, 0, 135,
	136, 0, 0, 586, 520, 521, 1048, 0, 0, 0,
	1049, 1386, 0, 0, 0, 0, 1405, 0, 0, 0,
	0, 1174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1272, 0, 0, 0, 633, 634, 0, 1342, 1089,
	1429, 0, 1091, 1101, 1102, 0, 1091, 1312, 0, 0,
	0, 0, 0, 0, 0, 991, 0, 0, 0, 0,
	982, 1422, 1427, 0, 0, 1491, 0, 1484, 1487, 1485,
	1498, 0, 0, 1505, 0, 1507, 0, 1529, 1530, 1522,
	0, 1514, 1517, 1513, 1516, 1438, 954, 0, 959, 0,
	1429, 90, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 205, 0, 0, 362, 367, 0,
	0, 0, 604, 0, 939, 616, 607, 0, 694, 0,
	698, 0, 0, 0, 701, 702, 703, 680, 0, 684,
	428, 668, 665, 666, 539, 0, 138, 139, 0, 0,
	0, 1375, 0, 1378, 1133, 1135, 0, 1164, 1165, 1166,
	1383, 1384, 1180, 1216, 1219, 1222, 1225, 1228, 1231, 1234,
	1237, 1240, 1243, 1246, 1249, 1252, 1255, 1258, 1261, 1265,
	1270, 0, 1273, 0, 0, 1274, 0, 635, 1080, 0,
	0, 1098, 1099, 0, 1314, 0, 1319, 1320, 0, 1325,
	0, 1329, 1340, 0, 987, 944, 945, 992, 993, 0,
	0, 935, 1427, 83, 1428, 1425, 0, 1423, 1421, 1480,
	0, 1489, 1490, 1499, 1500, 1506, 0, 1512, 0, 88,
	0, 0, 0, 1438, 192, 0, 211, 0, 612, 0,
	615, 605, 692, 693, 0, 705, 697, 699, 700, 682,
	-2, 1464, 0, 0, 0, 588, 1376, 0, 0, 1275,
	0, 631, 632, 1088, 1081, 0, 1066, 1067, 1085, 1300,
	1302, 0, 0, 0, 0, 986, 988, 989, 82, 0,
	1424, 1106, 0, 1492, 1493, 1520, 1518, 955, 962, 0,
	89, 441, 434, 1464, 0, 0, 0, 685, 686, 687,
	688, 689, 690, 691, 578, 1466, 140, 141, 0, 508,
	509, 510, 134, 0, 1139, 1271, 1082, 0, 0, 0,
	0, 1078, 1079, 0, 1315, 0, 1321, 0, 1326, 0,
	946, 947, 1426, 0, 0, 617, 0, 619, 0, -2,
	429, 442, 0, 186, 212, 213, 0, 0, 216, 217,
	218, 209, 210, 130, 0, 0, 706, 0, 1467, 1468,
	0, 137, 0, 0, 1073, 1074, 1075, 1076, 1077, 0,
	0, 0, 1107, 1086, 618, 0, 0, 384, 0, 628,
	430, 431, 0, 437, 438, 439, 440, 214, 215, 640,
	0, 0, 507, 585, 1377, 0, 1316, 0, 1322, 0,
	1327, 0, 620, 621, 629, 0, 432, 0, 433, 0,
	0, 0, 609, 0, 640, 1465, 1083, 0, 0, 1105,
	0, 630, 626, 443, 445, 446, 0, 0, 444, 641,
	610, 1317, 1323, 0, 447, 448, 449, 622, 623, 624,
	625,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 703,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:608
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:621
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:622
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:626
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:664
		{
			setParseTree(yylex, nil)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:670
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:676
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:681
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:685
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:691
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:695
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:701
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:707
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:713
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:717
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:722
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:726
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:732
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:736
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:742
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:756
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:790
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:803
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:809
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:816
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:820
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:830
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:834
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:838
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:842
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:852
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:861
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:867
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:871
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:876
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:882
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:888
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:895
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:901
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:909
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:913
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:919
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:931
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:943
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:947
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:953
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:959
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:963
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:967
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:971
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:976
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:977
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:981
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:985
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:991
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:995
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1001
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1005
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1010
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1014
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1020
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1026
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1030
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1036
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1040
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1044
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1048
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1054
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1058
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1062
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1068
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1072
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1078
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1082
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1088
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1092
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1096
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1102
		{
			yyVAL.str = RepeatableReadStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1106
		{
			yyVAL.str = ReadCommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1110
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1114
		{
			yyVAL.str = SerializableStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1120
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1124
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1128
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1134
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1140
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1147
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1156
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1160
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1167
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1171
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1176
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1186
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1191
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1196
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1202
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1207
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1213
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1222
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1228
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1232
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1244
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1251
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1258
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1263
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1268
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1273
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1280
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1287
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1298
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1305
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1309
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1315
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1319
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1323
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1331
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1341
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1345
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1351
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1355
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1361
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1365
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1371
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1375
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1381
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1385
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1391
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1395
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1401
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1406
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1411
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1415
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1439
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1448
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1457
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1461
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1470
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1474
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1480
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1486
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1491
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1496
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1501
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1506
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1511
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1516
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1520
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1525
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1529
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1534
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1540
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1546
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1550
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1556
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1560
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1564
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1570
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1574
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1579
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1583
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1588
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1594
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1600
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1605
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1610
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1616
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1624
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1631
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1635
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1639
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1643
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1647
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1651
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1668
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1678
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1682
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1686
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1690
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1698
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1702
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1706
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1710
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1714
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1718
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1722
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1726
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1730
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1735
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1739
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1743
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = Armscii8Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.str = ASCIIStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.str = Big5Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.str = UBinaryStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.str = Cp1250Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = Cp1251Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = Cp1256Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = Cp1257Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = Cp850Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = Cp852Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = Cp866Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = Cp932Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = Dec8Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = EucjpmsStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = EuckrStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = Gb18030Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = Gb2312Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = GbkStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = Geostd8Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.str = GreekStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.str = HebrewStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.str = Hp8Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.str = Keybcs2Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.str = Koi8rStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.str = Koi8uStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.str = Latin1Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.str = Latin2Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = Latin5Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = Latin7Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.str = MacceStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = MacromanStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = SjisStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = Swe7Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = Tis620Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.str = Ucs2Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.str = UjisStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.str = Utf16Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.str = Utf16leStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.str = Utf32Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.str = Utf8Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.str = Utf8mb4Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.str = Utf8Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1923
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1927
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1931
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1937
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1941
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1945
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1951
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1955
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1961
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1965
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1969
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1973
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1979
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2001
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2045
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2051
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2057
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2063
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2069
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2075
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2087
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2091
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2095
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2099
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2105
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2109
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2115
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2119
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2123
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2135
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2139
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2163
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2178
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2208
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2213
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2222
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2227
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2231
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2240
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2244
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2251
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2255
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2261
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2269
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2273
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2277
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2282
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2286
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2291
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2295
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2299
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2303
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2307
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2317
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2322
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2327
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2333
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2337
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2342
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2346
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2350
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2356
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2361
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2365
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2371
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2375
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2381
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2385
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2390
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2394
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2398
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2402
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2406
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2410
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2416
		{
			yyVAL.str = ""
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2420
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2426
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2430
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2434
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2438
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2442
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2447
		{
			yyVAL.str = ""
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2451
		{
			yyVAL.str = yyDollar[2].str
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2457
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2461
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2465
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2471
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2475
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = "key"
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.str = yyDollar[1].str
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = ""
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2509
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2513
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2519
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2523
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2529
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2533
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2539
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2543
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2549
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2555
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2559
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2563
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2567
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2571
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2576
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2580
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2586
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2592
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2598
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2602
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2606
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2611
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2615
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2621
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2627
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2633
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2637
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2641
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2645
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2649
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2654
		{
			yyVAL.str = ""
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2662
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2668
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2672
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2677
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2681
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2686
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2690
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2696
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2700
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2704
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2710
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2714
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2720
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2724
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2728
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2732
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2736
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2740
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2744
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2748
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2752
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2756
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2760
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2764
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2768
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2772
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2776
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2780
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2784
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2788
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2792
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2796
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2800
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2804
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2808
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2812
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2816
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2820
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2824
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2828
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2832
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2836
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2840
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2845
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2849
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2853
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2872
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2876
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2880
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2884
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = ""
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2895
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2899
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2904
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2908
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2913
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2917
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2922
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2926
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2930
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2935
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2939
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2943
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2947
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2951
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 527:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2955
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2961
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2965
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2969
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2975
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2979
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2983
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2987
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2991
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2995
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2999
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3003
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3007
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3011
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3021
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3025
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3029
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3033
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3037
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3041
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3045
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3049
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3053
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3057
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3061
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3065
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3069
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3073
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3077
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3081
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3085
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3089
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3093
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3097
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3103
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3107
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3113
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3117
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3121
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3125
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3129
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3133
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3137
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3141
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3145
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3149
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3155
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3176
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3192
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3218
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3228
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3232
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3236
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3259
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3281
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3288
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3295
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3303
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3316
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3322
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3329
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3335
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3344
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3352
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3359
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3370
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3379
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3387
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3396
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3403
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3411
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3415
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3424
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3435
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3439
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3444
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3448
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3453
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3457
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3463
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3469
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3475
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3479
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3485
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3489
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3495
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3501
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3507
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3513
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3519
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3523
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3527
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3531
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3537
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3543
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3549
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3553
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3557
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3563
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3567
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3572
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3576
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3581
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3585
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3591
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3595
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3599
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3603
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3607
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3611
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3615
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3619
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3623
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3627
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3631
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3635
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3639
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3643
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3647
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3651
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3655
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3659
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3663
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3667
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3671
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3675
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3680
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3684
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3688
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3694
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3698
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3704
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3709
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3713
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3718
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3723
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3728
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3733
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3738
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3744
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3750
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3755
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3761
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3767
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3771
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3777
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3782
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3786
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3791
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3796
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3801
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3806
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3812
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3818
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3825
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3832
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3839
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3847
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3851
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3857
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3863
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3869
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3875
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3881
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3887
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3893
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3899
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3905
		{
			yyVAL.str = ""
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3909
		{
			yyVAL.str = ""
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3915
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3921
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3925
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 710:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3931
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3935
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3954
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3980
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3984
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3988
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4000
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4004
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4008
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4012
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4016
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4020
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4024
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4028
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4032
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4036
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4040
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4044
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4048
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4060
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4064
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4068
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4076
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4084
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4092
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4096
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4100
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4140
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4144
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4148
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4155
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4159
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4171
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4175
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4179
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4183
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4187
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4193
		{
			yyVAL.str = ""
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4197
		{
			yyVAL.str = "extended "
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4203
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4207
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4213
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4217
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4223
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4227
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4231
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4241
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4245
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4251
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4255
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4261
		{
			yyVAL.empty = struct{}{}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
			yyVAL.empty = struct{}{}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4269
		{
			yyVAL.empty = struct{}{}
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4275
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4279
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4285
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4289
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4293
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4304
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4308
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4312
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4319
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4323
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4332
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4338
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4342
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4348
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4352
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4356
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4363
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4369
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4373
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4378
		{
			yyVAL.empty = struct{}{}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4380
		{
			yyVAL.empty = struct{}{}
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4383
		{
			yyVAL.empty = struct{}{}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4385
		{
			yyVAL.empty = struct{}{}
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4389
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4395
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4400
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4404
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4408
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4412
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4416
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4420
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4424
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4429
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4433
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4437
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4441
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4447
		{
			yyVAL.str = yyDollar[1].str
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4451
		{
			yyVAL.str = yyDollar[1].str
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4455
		{
			yyVAL.str = yyDollar[1].str
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4461
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4465
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4469
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4473
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4478
		{
			yyVAL.str = ""
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4482
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4486
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4492
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4496
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4502
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4508
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4512
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4518
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4524
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4528
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4534
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4540
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4544
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4548
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4552
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4558
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4564
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4570
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4574
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4578
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4582
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4586
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4590
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4596
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4600
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4606
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4610
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4614
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4618
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4622
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4626
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4630
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4634
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4638
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4642
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4650
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4655
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4659
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4663
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4668
		{
			yyVAL.str = ""
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4672
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4677
		{
			setAllowComments(yylex, true)
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4681
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4687
		{
			yyVAL.strs = nil
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4691
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4697
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4701
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4705
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4710
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4714
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4718
		{
			yyVAL.str = SQLCacheStr
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4723
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4727
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4731
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4737
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4741
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4751
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4756
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4760
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4766
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4770
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4775
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4779
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4784
		{
			yyVAL.strs = nil
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4788
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4792
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4796
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4800
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4806
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4810
		{
			yyVAL.str = SQLCacheStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4814
		{
			yyVAL.str = DistinctStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4818
		{
			yyVAL.str = DistinctStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4822
		{
			yyVAL.str = StraightJoinHint
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4826
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4836
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4840
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4846
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4850
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4854
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4858
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4863
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4867
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4871
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4878
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4883
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4887
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4893
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4899
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4903
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4913
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4917
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4921
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4925
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4931
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4935
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4941
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4945
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4954
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4963
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4969
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4973
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4979
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4983
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4989
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4993
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4997
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5001
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5007
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5011
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5024
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5028
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5032
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5036
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5042
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5044
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5048
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5050
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5054
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5056
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5059
		{
			yyVAL.empty = struct{}{}
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5061
		{
			yyVAL.empty = struct{}{}
		}
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5064
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5068
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5072
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5079
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5085
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5089
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5093
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5099
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5105
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5109
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5113
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5117
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5123
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5127
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5137
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5141
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5147
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5151
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5157
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5162
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5166
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5172
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5176
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5182
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5186
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5190
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5194
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5199
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5203
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5207
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5211
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5221
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5228
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5232
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5236
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5240
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5244
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5248
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5252
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5258
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5262
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5266
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5270
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5276
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5280
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5292
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5322
		{
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5325
		{
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5343
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5371
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5375
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5379
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5409
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5413
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5417
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5421
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5425
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5429
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5433
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5437
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5441
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5445
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5449
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5457
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5469
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5473
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5489
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5495
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5501
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5505
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5511
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5515
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5521
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5525
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5529
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5535
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5539
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5546
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5550
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5554
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5558
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5562
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5568
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5572
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5576
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5580
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5584
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5590
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5594
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5599
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5603
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5609
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5613
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5618
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5622
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5627
		{
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5630
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5636
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5642
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5646
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5651
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5658
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5664
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5668
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5674
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5678
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5684
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5688
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5693
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5700
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5706
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5710
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5716
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5722
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5726
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5732
		{
			yyVAL.str = ""
		}
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5736
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5742
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5746
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5753
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5757
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5761
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5765
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5771
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5775
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5779
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5783
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5787
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5791
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5795
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5801
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5805
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5809
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5816
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5822
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5826
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5836
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5840
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5897
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5901
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5907
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5911
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5915
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5925
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5929
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5941
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5945
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5949
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5953
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5957
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5961
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5965
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5969
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5973
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5977
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5981
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5985
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5989
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5993
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5997
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6001
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6005
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6013
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6017
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6021
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6025
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6029
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6033
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6037
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6041
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6045
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6049
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6053
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6057
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6061
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6065
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6069
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6073
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6077
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6081
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6085
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6133
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6137
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6149
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6173
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6181
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6185
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6189
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6193
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6197
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6201
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6205
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6209
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6213
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6229
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6233
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6237
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6241
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6245
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6249
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6253
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6265
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6269
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6273
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6277
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6281
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6285
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6289
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6293
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6297
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6301
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6305
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6309
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6313
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6317
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6321
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6325
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6329
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6333
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6337
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6341
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6345
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6357
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6361
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6365
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6369
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6373
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6377
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6381
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6385
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6389
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6393
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6397
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6401
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6405
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6421
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6425
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6429
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6433
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6437
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6441
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6445
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6449
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6453
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6457
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6461
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6465
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6469
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6473
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6477
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6481
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6485
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6489
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6493
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6497
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6501
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6505
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6509
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6513
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6517
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6521
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6525
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6529
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6541
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6545
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6555
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6559
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6563
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6567
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6576
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6582
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6586
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6590
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6594
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6598
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6603
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6607
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6611
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6615
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6619
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6623
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6628
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6632
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6636
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6640
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6647
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6651
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6657
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6661
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6665
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6669
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6675
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6679
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6683
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6687
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6691
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6695
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6699
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6704
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6708
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6714
		{
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6716
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6720
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6724
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6728
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6732
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6736
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6740
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6744
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6748
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6752
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6756
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6762
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6766
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6770
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6774
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6778
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6782
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6786
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6790
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6794
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:6804
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:6808
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:6812
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6822
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6826
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6830
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6834
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6838
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6844
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6848
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6852
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6856
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6860
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6866
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6870
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6874
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6884
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6888
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6894
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6898
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6902
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6906
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6910
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6916
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6920
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6924
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6928
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6932
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6936
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6940
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6944
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6948
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6952
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6958
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6962
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6967
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6971
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6976
		{
			yyVAL.str = string("")
		}
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6980
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6986
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6990
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6996
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7001
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7005
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7011
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7015
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7019
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7023
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7029
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7033
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7039
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7048
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7052
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7057
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7061
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7066
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7070
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7076
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7082
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7086
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7091
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7095
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7100
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7104
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7110
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7116
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7120
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7126
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7131
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7135
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7139
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7144
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7148
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7154
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7158
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7162
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7167
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7171
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7175
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7179
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7183
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7190
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7194
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7198
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7202
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7208
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7212
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7216
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7220
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7225
		{
			yyVAL.str = ""
		}
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7229
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7233
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7237
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7242
		{
			yyVAL.str = ""
		}
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7246
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7252
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7256
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7261
		{
			yyVAL.str = ""
		}
	case 1465:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7265
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7270
		{
			yyVAL.str = "cascaded"
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7274
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7278
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7283
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7287
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7293
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7299
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7305
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7314
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7318
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7323
		{
			yyVAL.str = ""
		}
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7327
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7333
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7337
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7343
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7347
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7351
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7356
		{
			yyVAL.str = ""
		}
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7360
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7364
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7369
		{
			yyVAL.str = ""
		}
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7373
		{
			yyVAL.str = " header"
		}
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7378
		{
			yyVAL.str = ""
		}
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7382
		{
			yyVAL.str = " manifest on"
		}
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7386
		{
			yyVAL.str = " manifest off"
		}
	case 1491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7391
		{
			yyVAL.str = ""
		}
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7395
		{
			yyVAL.str = " overwrite on"
		}
	case 1493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7399
		{
			yyVAL.str = " overwrite off"
		}
	case 1494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7405
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7410
		{
			yyVAL.str = ""
		}
	case 1496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7414
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7420
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7424
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7430
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7434
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7439
		{
			yyVAL.str = ""
		}
	case 1502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7443
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7449
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7453
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7459
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1506:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7463
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7467
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7472
		{
			yyVAL.str = ""
		}
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7476
		{
			yyVAL.str = " optionally"
		}
	case 1510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7489
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7493
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7497
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7501
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7505
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7511
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7515
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7519
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1518:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7523
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7528
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7532
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7538
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7542
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7548
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7552
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7558
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7562
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7567
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7577
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7581
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7587
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7594
		{
			yyVAL.str = "charset"
		}
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7604
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7608
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7612
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7621
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7623
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7626
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7628
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7631
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7633
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7636
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7638
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7641
		{
			yyVAL.empty = struct{}{}
		}
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7643
		{
			yyVAL.empty = struct{}{}
		}
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7645
		{
			yyVAL.empty = struct{}{}
		}
	case 1551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7649
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7654
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7658
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7663
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7665
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7669
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7675
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7679
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7686
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7692
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7696
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7702
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7706
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7713
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8326
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8335
		{
			decNesting(yylex)
		}
	case 2155:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8340
		{
			skipToEnd(yylex)
		}
	case 2156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8345
		{
			skipToEnd(yylex)
		}
	case 2157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8349
		{
			skipToEnd(yylex)
		}
	case 2158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8353
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
