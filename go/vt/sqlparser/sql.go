// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const LEX_ERROR = 57350
const UNION = 57351
const SELECT = 57352
const STREAM = 57353
const VSTREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const ALL = 57367
const DISTINCT = 57368
const AS = 57369
const EXISTS = 57370
const ASC = 57371
const DESC = 57372
const INTO = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const DO = 57380
const CALL = 57381
const DISTINCTROW = 57382
const PARSER = 57383
const GENERATED = 57384
const ALWAYS = 57385
const OUTFILE = 57386
const S3 = 57387
const DATA = 57388
const LOAD = 57389
const LINES = 57390
const TERMINATED = 57391
const ESCAPED = 57392
const ENCLOSED = 57393
const DUMPFILE = 57394
const CSV = 57395
const HEADER = 57396
const MANIFEST = 57397
const OVERWRITE = 57398
const STARTING = 57399
const OPTIONALLY = 57400
const VALUES = 57401
const LAST_INSERT_ID = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const SQL_CALC_FOUND_ROWS = 57409
const JOIN = 57410
const STRAIGHT_JOIN = 57411
const LEFT = 57412
const RIGHT = 57413
const INNER = 57414
const OUTER = 57415
const CROSS = 57416
const NATURAL = 57417
const USE = 57418
const FORCE = 57419
const ON = 57420
const USING = 57421
const INPLACE = 57422
const COPY = 57423
const INSTANT = 57424
const ALGORITHM = 57425
const NONE = 57426
const SHARED = 57427
const EXCLUSIVE = 57428
const SUBQUERY_AS_EXPR = 57429
const STRING = 57430
const ID = 57431
const AT_ID = 57432
const AT_AT_ID = 57433
const HEX = 57434
const NCHAR_STRING = 57435
const INTEGRAL = 57436
const FLOAT = 57437
const DECIMAL = 57438
const HEXNUM = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BITNUM = 57442
const BIT_LITERAL = 57443
const COMPRESSION = 57444
const VALUE_ARG = 57445
const LIST_ARG = 57446
const OFFSET_ARG = 57447
const JSON_PRETTY = 57448
const JSON_STORAGE_SIZE = 57449
const JSON_STORAGE_FREE = 57450
const JSON_CONTAINS = 57451
const JSON_CONTAINS_PATH = 57452
const JSON_EXTRACT = 57453
const JSON_KEYS = 57454
const JSON_OVERLAPS = 57455
const JSON_SEARCH = 57456
const JSON_VALUE = 57457
const EXTRACT = 57458
const NULL = 57459
const TRUE = 57460
const FALSE = 57461
const OFF = 57462
const DISCARD = 57463
const IMPORT = 57464
const ENABLE = 57465
const DISABLE = 57466
const TABLESPACE = 57467
const VIRTUAL = 57468
const STORED = 57469
const BOTH = 57470
const LEADING = 57471
const TRAILING = 57472
const KILL = 57473
const EMPTY_FROM_CLAUSE = 57474
const LOWER_THAN_CHARSET = 57475
const CHARSET = 57476
const UNIQUE = 57477
const KEY = 57478
const EXPRESSION_PREC_SETTER = 57479
const OR = 57480
const XOR = 57481
const AND = 57482
const NOT = 57483
const BETWEEN = 57484
const CASE = 57485
const WHEN = 57486
const THEN = 57487
const ELSE = 57488
const END = 57489
const LE = 57490
const GE = 57491
const NE = 57492
const NULL_SAFE_EQUAL = 57493
const IS = 57494
const LIKE = 57495
const REGEXP = 57496
const RLIKE = 57497
const IN = 57498
const ASSIGNMENT_OPT = 57499
const SHIFT_LEFT = 57500
const SHIFT_RIGHT = 57501
const DIV = 57502
const MOD = 57503
const UNARY = 57504
const COLLATE = 57505
const BINARY = 57506
const UNDERSCORE_ARMSCII8 = 57507
const UNDERSCORE_ASCII = 57508
const UNDERSCORE_BIG5 = 57509
const UNDERSCORE_BINARY = 57510
const UNDERSCORE_CP1250 = 57511
const UNDERSCORE_CP1251 = 57512
const UNDERSCORE_CP1256 = 57513
const UNDERSCORE_CP1257 = 57514
const UNDERSCORE_CP850 = 57515
const UNDERSCORE_CP852 = 57516
const UNDERSCORE_CP866 = 57517
const UNDERSCORE_CP932 = 57518
const UNDERSCORE_DEC8 = 57519
const UNDERSCORE_EUCJPMS = 57520
const UNDERSCORE_EUCKR = 57521
const UNDERSCORE_GB18030 = 57522
const UNDERSCORE_GB2312 = 57523
const UNDERSCORE_GBK = 57524
const UNDERSCORE_GEOSTD8 = 57525
const UNDERSCORE_GREEK = 57526
const UNDERSCORE_HEBREW = 57527
const UNDERSCORE_HP8 = 57528
const UNDERSCORE_KEYBCS2 = 57529
const UNDERSCORE_KOI8R = 57530
const UNDERSCORE_KOI8U = 57531
const UNDERSCORE_LATIN1 = 57532
const UNDERSCORE_LATIN2 = 57533
const UNDERSCORE_LATIN5 = 57534
const UNDERSCORE_LATIN7 = 57535
const UNDERSCORE_MACCE = 57536
const UNDERSCORE_MACROMAN = 57537
const UNDERSCORE_SJIS = 57538
const UNDERSCORE_SWE7 = 57539
const UNDERSCORE_TIS620 = 57540
const UNDERSCORE_UCS2 = 57541
const UNDERSCORE_UJIS = 57542
const UNDERSCORE_UTF16 = 57543
const UNDERSCORE_UTF16LE = 57544
const UNDERSCORE_UTF32 = 57545
const UNDERSCORE_UTF8 = 57546
const UNDERSCORE_UTF8MB4 = 57547
const UNDERSCORE_UTF8MB3 = 57548
const INTERVAL = 57549
const WINDOW_EXPR = 57550
const JSON_EXTRACT_OP = 57551
const JSON_UNQUOTE_EXTRACT_OP = 57552
const CREATE = 57553
const ALTER = 57554
const DROP = 57555
const RENAME = 57556
const ANALYZE = 57557
const ADD = 57558
const FLUSH = 57559
const CHANGE = 57560
const MODIFY = 57561
const DEALLOCATE = 57562
const REVERT = 57563
const QUERIES = 57564
const SCHEMA = 57565
const TABLE = 57566
const INDEX = 57567
const VIEW = 57568
const TO = 57569
const IGNORE = 57570
const IF = 57571
const PRIMARY = 57572
const COLUMN = 57573
const SPATIAL = 57574
const FULLTEXT = 57575
const KEY_BLOCK_SIZE = 57576
const CHECK = 57577
const INDEXES = 57578
const ACTION = 57579
const CASCADE = 57580
const CONSTRAINT = 57581
const FOREIGN = 57582
const NO = 57583
const REFERENCES = 57584
const RESTRICT = 57585
const SHOW = 57586
const DESCRIBE = 57587
const EXPLAIN = 57588
const DATE = 57589
const ESCAPE = 57590
const REPAIR = 57591
const OPTIMIZE = 57592
const TRUNCATE = 57593
const COALESCE = 57594
const EXCHANGE = 57595
const REBUILD = 57596
const PARTITIONING = 57597
const REMOVE = 57598
const PREPARE = 57599
const EXECUTE = 57600
const MAXVALUE = 57601
const PARTITION = 57602
const REORGANIZE = 57603
const LESS = 57604
const THAN = 57605
const PROCEDURE = 57606
const TRIGGER = 57607
const VINDEX = 57608
const VINDEXES = 57609
const DIRECTORY = 57610
const NAME = 57611
const UPGRADE = 57612
const STATUS = 57613
const VARIABLES = 57614
const WARNINGS = 57615
const CASCADED = 57616
const DEFINER = 57617
const OPTION = 57618
const SQL = 57619
const UNDEFINED = 57620
const SEQUENCE = 57621
const MERGE = 57622
const TEMPORARY = 57623
const TEMPTABLE = 57624
const INVOKER = 57625
const SECURITY = 57626
const FIRST = 57627
const AFTER = 57628
const LAST = 57629
const VITESS_MIGRATION = 57630
const CANCEL = 57631
const RETRY = 57632
const LAUNCH = 57633
const COMPLETE = 57634
const CLEANUP = 57635
const THROTTLE = 57636
const UNTHROTTLE = 57637
const FORCE_CUTOVER = 57638
const EXPIRE = 57639
const RATIO = 57640
const VITESS_THROTTLER = 57641
const BEGIN = 57642
const START = 57643
const TRANSACTION = 57644
const COMMIT = 57645
const ROLLBACK = 57646
const SAVEPOINT = 57647
const RELEASE = 57648
const WORK = 57649
const CONSISTENT = 57650
const SNAPSHOT = 57651
const BIT = 57652
const TINYINT = 57653
const SMALLINT = 57654
const MEDIUMINT = 57655
const INT = 57656
const INTEGER = 57657
const BIGINT = 57658
const INTNUM = 57659
const REAL = 57660
const DOUBLE = 57661
const FLOAT_TYPE = 57662
const FLOAT4_TYPE = 57663
const FLOAT8_TYPE = 57664
const DECIMAL_TYPE = 57665
const NUMERIC = 57666
const TIME = 57667
const TIMESTAMP = 57668
const DATETIME = 57669
const YEAR = 57670
const CHAR = 57671
const VARCHAR = 57672
const BOOL = 57673
const CHARACTER = 57674
const VARBINARY = 57675
const NCHAR = 57676
const TEXT = 57677
const TINYTEXT = 57678
const MEDIUMTEXT = 57679
const LONGTEXT = 57680
const BLOB = 57681
const TINYBLOB = 57682
const MEDIUMBLOB = 57683
const LONGBLOB = 57684
const JSON = 57685
const JSON_SCHEMA_VALID = 57686
const JSON_SCHEMA_VALIDATION_REPORT = 57687
const ENUM = 57688
const GEOMETRY = 57689
const POINT = 57690
const LINESTRING = 57691
const POLYGON = 57692
const GEOMCOLLECTION = 57693
const GEOMETRYCOLLECTION = 57694
const MULTIPOINT = 57695
const MULTILINESTRING = 57696
const MULTIPOLYGON = 57697
const ASCII = 57698
const UNICODE = 57699
const NULLX = 57700
const AUTO_INCREMENT = 57701
const APPROXNUM = 57702
const SIGNED = 57703
const UNSIGNED = 57704
const ZEROFILL = 57705
const PURGE = 57706
const BEFORE = 57707
const CODE = 57708
const COLLATION = 57709
const COLUMNS = 57710
const DATABASES = 57711
const ENGINES = 57712
const EVENT = 57713
const EXTENDED = 57714
const FIELDS = 57715
const FULL = 57716
const FUNCTION = 57717
const GTID_EXECUTED = 57718
const KEYSPACES = 57719
const OPEN = 57720
const PLUGINS = 57721
const PRIVILEGES = 57722
const PROCESSLIST = 57723
const SCHEMAS = 57724
const TABLES = 57725
const TRIGGERS = 57726
const USER = 57727
const VGTID_EXECUTED = 57728
const VITESS_KEYSPACES = 57729
const VITESS_METADATA = 57730
const VITESS_MIGRATIONS = 57731
const VITESS_REPLICATION_STATUS = 57732
const VITESS_SHARDS = 57733
const VITESS_TABLETS = 57734
const VITESS_TARGET = 57735
const VSCHEMA = 57736
const VITESS_THROTTLED_APPS = 57737
const NAMES = 57738
const GLOBAL = 57739
const SESSION = 57740
const ISOLATION = 57741
const LEVEL = 57742
const READ = 57743
const WRITE = 57744
const ONLY = 57745
const REPEATABLE = 57746
const COMMITTED = 57747
const UNCOMMITTED = 57748
const SERIALIZABLE = 57749
const ADDDATE = 57750
const CURRENT_TIMESTAMP = 57751
const DATABASE = 57752
const CURRENT_DATE = 57753
const CURDATE = 57754
const DATE_ADD = 57755
const DATE_SUB = 57756
const NOW = 57757
const SUBDATE = 57758
const CURTIME = 57759
const CURRENT_TIME = 57760
const LOCALTIME = 57761
const LOCALTIMESTAMP = 57762
const CURRENT_USER = 57763
const UTC_DATE = 57764
const UTC_TIME = 57765
const UTC_TIMESTAMP = 57766
const SYSDATE = 57767
const DAY = 57768
const DAY_HOUR = 57769
const DAY_MICROSECOND = 57770
const DAY_MINUTE = 57771
const DAY_SECOND = 57772
const HOUR = 57773
const HOUR_MICROSECOND = 57774
const HOUR_MINUTE = 57775
const HOUR_SECOND = 57776
const MICROSECOND = 57777
const MINUTE = 57778
const MINUTE_MICROSECOND = 57779
const MINUTE_SECOND = 57780
const MONTH = 57781
const QUARTER = 57782
const SECOND = 57783
const SECOND_MICROSECOND = 57784
const YEAR_MONTH = 57785
const WEEK = 57786
const SQL_TSI_DAY = 57787
const SQL_TSI_WEEK = 57788
const SQL_TSI_HOUR = 57789
const SQL_TSI_MINUTE = 57790
const SQL_TSI_MONTH = 57791
const SQL_TSI_QUARTER = 57792
const SQL_TSI_SECOND = 57793
const SQL_TSI_MICROSECOND = 57794
const SQL_TSI_YEAR = 57795
const REPLACE = 57796
const CONVERT = 57797
const CAST = 57798
const SUBSTR = 57799
const SUBSTRING = 57800
const MID = 57801
const SEPARATOR = 57802
const TIMESTAMPADD = 57803
const TIMESTAMPDIFF = 57804
const WEIGHT_STRING = 57805
const LTRIM = 57806
const RTRIM = 57807
const TRIM = 57808
const JSON_ARRAY = 57809
const JSON_OBJECT = 57810
const JSON_QUOTE = 57811
const JSON_DEPTH = 57812
const JSON_TYPE = 57813
const JSON_LENGTH = 57814
const JSON_VALID = 57815
const JSON_ARRAY_APPEND = 57816
const JSON_ARRAY_INSERT = 57817
const JSON_INSERT = 57818
const JSON_MERGE = 57819
const JSON_MERGE_PATCH = 57820
const JSON_MERGE_PRESERVE = 57821
const JSON_REMOVE = 57822
const JSON_REPLACE = 57823
const JSON_SET = 57824
const JSON_UNQUOTE = 57825
const COUNT = 57826
const AVG = 57827
const MAX = 57828
const MIN = 57829
const SUM = 57830
const GROUP_CONCAT = 57831
const BIT_AND = 57832
const BIT_OR = 57833
const BIT_XOR = 57834
const STD = 57835
const STDDEV = 57836
const STDDEV_POP = 57837
const STDDEV_SAMP = 57838
const VAR_POP = 57839
const VAR_SAMP = 57840
const VARIANCE = 57841
const ANY_VALUE = 57842
const REGEXP_INSTR = 57843
const REGEXP_LIKE = 57844
const REGEXP_REPLACE = 57845
const REGEXP_SUBSTR = 57846
const ExtractValue = 57847
const UpdateXML = 57848
const GET_LOCK = 57849
const RELEASE_LOCK = 57850
const RELEASE_ALL_LOCKS = 57851
const IS_FREE_LOCK = 57852
const IS_USED_LOCK = 57853
const LOCATE = 57854
const POSITION = 57855
const ST_GeometryCollectionFromText = 57856
const ST_GeometryFromText = 57857
const ST_LineStringFromText = 57858
const ST_MultiLineStringFromText = 57859
const ST_MultiPointFromText = 57860
const ST_MultiPolygonFromText = 57861
const ST_PointFromText = 57862
const ST_PolygonFromText = 57863
const ST_GeometryCollectionFromWKB = 57864
const ST_GeometryFromWKB = 57865
const ST_LineStringFromWKB = 57866
const ST_MultiLineStringFromWKB = 57867
const ST_MultiPointFromWKB = 57868
const ST_MultiPolygonFromWKB = 57869
const ST_PointFromWKB = 57870
const ST_PolygonFromWKB = 57871
const ST_AsBinary = 57872
const ST_AsText = 57873
const ST_Dimension = 57874
const ST_Envelope = 57875
const ST_IsSimple = 57876
const ST_IsEmpty = 57877
const ST_GeometryType = 57878
const ST_X = 57879
const ST_Y = 57880
const ST_Latitude = 57881
const ST_Longitude = 57882
const ST_EndPoint = 57883
const ST_IsClosed = 57884
const ST_Length = 57885
const ST_NumPoints = 57886
const ST_StartPoint = 57887
const ST_PointN = 57888
const ST_Area = 57889
const ST_Centroid = 57890
const ST_ExteriorRing = 57891
const ST_InteriorRingN = 57892
const ST_NumInteriorRings = 57893
const ST_NumGeometries = 57894
const ST_GeometryN = 57895
const ST_LongFromGeoHash = 57896
const ST_PointFromGeoHash = 57897
const ST_LatFromGeoHash = 57898
const ST_GeoHash = 57899
const ST_AsGeoJSON = 57900
const ST_GeomFromGeoJSON = 57901
const MATCH = 57902
const AGAINST = 57903
const BOOLEAN = 57904
const LANGUAGE = 57905
const WITH = 57906
const QUERY = 57907
const EXPANSION = 57908
const WITHOUT = 57909
const VALIDATION = 57910
const UNUSED = 57911
const ARRAY = 57912
const BYTE = 57913
const CUME_DIST = 57914
const DESCRIPTION = 57915
const DENSE_RANK = 57916
const EMPTY = 57917
const EXCEPT = 57918
const FIRST_VALUE = 57919
const GROUPING = 57920
const GROUPS = 57921
const JSON_TABLE = 57922
const LAG = 57923
const LAST_VALUE = 57924
const LATERAL = 57925
const LEAD = 57926
const NTH_VALUE = 57927
const NTILE = 57928
const OF = 57929
const OVER = 57930
const PERCENT_RANK = 57931
const RANK = 57932
const RECURSIVE = 57933
const ROW_NUMBER = 57934
const SYSTEM = 57935
const WINDOW = 57936
const ACTIVE = 57937
const ADMIN = 57938
const AUTOEXTEND_SIZE = 57939
const BUCKETS = 57940
const CLONE = 57941
const COLUMN_FORMAT = 57942
const COMPONENT = 57943
const DEFINITION = 57944
const ENFORCED = 57945
const ENGINE_ATTRIBUTE = 57946
const EXCLUDE = 57947
const FOLLOWING = 57948
const GET_MASTER_PUBLIC_KEY = 57949
const HISTOGRAM = 57950
const HISTORY = 57951
const INACTIVE = 57952
const INVISIBLE = 57953
const LOCKED = 57954
const MASTER_COMPRESSION_ALGORITHMS = 57955
const MASTER_PUBLIC_KEY_PATH = 57956
const MASTER_TLS_CIPHERSUITES = 57957
const MASTER_ZSTD_COMPRESSION_LEVEL = 57958
const NESTED = 57959
const NETWORK_NAMESPACE = 57960
const NOWAIT = 57961
const NULLS = 57962
const OJ = 57963
const OLD = 57964
const OPTIONAL = 57965
const ORDINALITY = 57966
const ORGANIZATION = 57967
const OTHERS = 57968
const PARTIAL = 57969
const PATH = 57970
const PERSIST = 57971
const PERSIST_ONLY = 57972
const PRECEDING = 57973
const PRIVILEGE_CHECKS_USER = 57974
const PROCESS = 57975
const RANDOM = 57976
const REFERENCE = 57977
const REQUIRE_ROW_FORMAT = 57978
const RESOURCE = 57979
const RESPECT = 57980
const RESTART = 57981
const RETAIN = 57982
const REUSE = 57983
const ROLE = 57984
const SECONDARY = 57985
const SECONDARY_ENGINE = 57986
const SECONDARY_ENGINE_ATTRIBUTE = 57987
const SECONDARY_LOAD = 57988
const SECONDARY_UNLOAD = 57989
const SIMPLE = 57990
const SKIP = 57991
const SRID = 57992
const THREAD_PRIORITY = 57993
const TIES = 57994
const UNBOUNDED = 57995
const VCPU = 57996
const VISIBLE = 57997
const RETURNING = 57998
const FORMAT_BYTES = 57999
const FORMAT_PICO_TIME = 58000
const PS_CURRENT_THREAD_ID = 58001
const PS_THREAD_ID = 58002
const GTID_SUBSET = 58003
const GTID_SUBTRACT = 58004
const WAIT_FOR_EXECUTED_GTID_SET = 58005
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58006
const FORMAT = 58007
const TREE = 58008
const VITESS = 58009
const TRADITIONAL = 58010
const VTEXPLAIN = 58011
const VEXPLAIN = 58012
const PLAN = 58013
const LOCAL = 58014
const LOW_PRIORITY = 58015
const NO_WRITE_TO_BINLOG = 58016
const LOGS = 58017
const ERROR = 58018
const GENERAL = 58019
const HOSTS = 58020
const OPTIMIZER_COSTS = 58021
const USER_RESOURCES = 58022
const SLOW = 58023
const CHANNEL = 58024
const RELAY = 58025
const EXPORT = 58026
const CURRENT = 58027
const ROW = 58028
const ROWS = 58029
const AVG_ROW_LENGTH = 58030
const CONNECTION = 58031
const CHECKSUM = 58032
const DELAY_KEY_WRITE = 58033
const ENCRYPTION = 58034
const ENGINE = 58035
const INSERT_METHOD = 58036
const MAX_ROWS = 58037
const MIN_ROWS = 58038
const PACK_KEYS = 58039
const PASSWORD = 58040
const FIXED = 58041
const DYNAMIC = 58042
const COMPRESSED = 58043
const REDUNDANT = 58044
const COMPACT = 58045
const ROW_FORMAT = 58046
const STATS_AUTO_RECALC = 58047
const STATS_PERSISTENT = 58048
const STATS_SAMPLE_PAGES = 58049
const STORAGE = 58050
const MEMORY = 58051
const DISK = 58052
const PARTITIONS = 58053
const LINEAR = 58054
const RANGE = 58055
const LIST = 58056
const SUBPARTITION = 58057
const SUBPARTITIONS = 58058
const HASH = 58059

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	14, 51,
	15, 51,
	-2, 40,
	-1, 52,
	1, 159,
	735, 159,
	-2, 167,
	-1, 53,
	137, 167,
	179, 167,
	349, 167,
	-2, 525,
	-1, 61,
	37, 779,
	242, 779,
	253, 779,
	288, 793,
	289, 793,
	-2, 781,
	-1, 66,
	244, 817,
	-2, 815,
	-1, 122,
	241, 1595,
	-2, 133,
	-1, 124,
	1, 160,
	735, 160,
	-2, 167,
	-1, 135,
	138, 410,
	247, 410,
	-2, 514,
	-1, 154,
	137, 167,
	179, 167,
	349, 167,
	-2, 534,
	-1, 735,
	165, 41,
	-2, 45,
	-1, 942,
	88, 1612,
	-2, 1461,
	-1, 943,
	88, 1613,
	224, 1617,
	-2, 1462,
	-1, 944,
	224, 1616,
	-2, 42,
	-1, 1028,
	61, 889,
	-2, 902,
	-1, 1116,
	252, 43,
	257, 43,
	-2, 421,
	-1, 1201,
	1, 582,
	735, 582,
	-2, 167,
	-1, 1504,
	224, 1617,
	-2, 1462,
	-1, 1715,
	61, 890,
	-2, 906,
	-1, 1716,
	61, 891,
	-2, 907,
	-1, 1772,
	137, 167,
	179, 167,
	349, 167,
	-2, 460,
	-1, 1853,
	138, 410,
	247, 410,
	-2, 514,
	-1, 1862,
	252, 44,
	257, 44,
	-2, 422,
	-1, 2300,
	224, 1621,
	-2, 1615,
	-1, 2301,
	224, 1617,
	-2, 1613,
	-1, 2404,
	137, 167,
	179, 167,
	349, 167,
	-2, 461,
	-1, 2411,
	27, 188,
	-2, 190,
	-1, 2865,
	79, 98,
	89, 98,
	-2, 965,
	-1, 2934,
	710, 702,
	-2, 676,
	-1, 3144,
	51, 1563,
	-2, 1557,
	-1, 3969,
	710, 702,
	-2, 690,
	-1, 4055,
	91, 634,
	96, 634,
	106, 634,
	181, 634,
	182, 634,
	183, 634,
	184, 634,
	185, 634,
	186, 634,
	187, 634,
	188, 634,
	189, 634,
	190, 634,
	191, 634,
	192, 634,
	193, 634,
	194, 634,
	195, 634,
	196, 634,
	197, 634,
	198, 634,
	199, 634,
	200, 634,
	201, 634,
	202, 634,
	203, 634,
	204, 634,
	205, 634,
	206, 634,
	207, 634,
	208, 634,
	209, 634,
	210, 634,
	211, 634,
	212, 634,
	213, 634,
	214, 634,
	215, 634,
	216, 634,
	217, 634,
	218, 634,
	219, 634,
	220, 634,
	221, 634,
	222, 634,
	-2, 1986,
}

const yyPrivate = 57344

const yyLast = 55539

var yyAct = [...]int{
	958, 3625, 953, 87, 3626, 3950, 3624, 945, 946, 4143,
	2107, 4130, 4036, 4024, 3296, 3196, 3203, 4097, 1269, 2095,
	4098, 3934, 2401, 3245, 2329, 1982, 4053, 3857, 3254, 3426,
	3259, 3256, 911, 3255, 3253, 42, 3258, 3257, 3157, 3932,
	2038, 1267, 2761, 5, 3575, 3562, 3274, 2331, 3095, 3211,
	2475, 739, 3273, 3161, 3158, 3473, 3467, 3667, 2998, 2356,
	3155, 2825, 733, 3457, 2438, 907, 3145, 3493, 734, 1775,
	767, 2899, 1831, 2980, 906, 2931, 4001, 3303, 1078, 3276,
	2463, 2443, 2900, 2506, 1731, 2901, 1026, 163, 87, 2375,
	2389, 1046, 1023, 2850, 1148, 2376, 2372, 41, 2831, 2377,
	1053, 1878, 2253, 2817, 2801, 43, 2285, 1026, 1124, 2091,
	2252, 2972, 2484, 149, 1860, 2046, 2462, 2364, 1025, 2523,
	1029, 2445, 1088, 1111, 2892, 1106, 1764, 2867, 2129, 1744,
	2379, 1696, 1517, 100, 104, 105, 2350, 2135, 2066, 1048,
	1443, 1428, 1978, 1867, 3160, 1085, 749, 2460, 1959, 1082,
	1117, 1114, 2435, 2434, 1086, 1112, 1113, 1763, 1063, 1035,
	2838, 1065, 1749, 1718, 737, 2162, 3662, 2143, 2799, 1500,
	744, 1476, 2357, 2037, 1032, 1045, 107, 85, 1257, 1990,
	127, 3654, 1826, 1852, 132, 1030, 167, 125, 126, 1197,
	99, 133, 1033, 1031, 1021, 1058, 743, 93, 1521, 98,
	84, 4131, 908, 736, 1265, 1243, 2477, 2478, 2479, 3985,
	3563, 1526, 3242, 1057, 2477, 2954, 2953, 106, 2922, 2521,
	3555, 1020, 4080, 726, 2988, 2989, 1444, 3981, 2326, 2327,
	2053, 2052, 3980, 1038, 671, 3986, 3629, 134, 2051, 128,
	1944, 2050, 1153, 1079, 2049, 1128, 1150, 2048, 2, 2021,
	1213, 668, 4074, 669, 2797, 2571, 3141, 4153, 3099, 1167,
	1168, 1169, 4101, 1172, 1173, 1174, 1175, 1161, 4096, 1178,
	1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 1190, 1191, 1192, 1193, 1194, 1024, 1072, 1127, 1073,
	3264, 1039, 1735, 111, 112, 113, 727, 116, 3518, 1214,
	122, 1103, 1022, 191, 1047, 1102, 663, 1154, 1157, 1158,
	711, 128, 1101, 1100, 2827, 2510, 1439, 1460, 724, 725,
	1733, 4121, 1736, 3628, 2353, 1095, 3959, 2924, 1014, 1015,
	1016, 1017, 1090, 3981, 1454, 1028, 3264, 4136, 95, 3431,
	1170, 912, 3430, 4084, 95, 1019, 3262, 3629, 95, 3261,
	1734, 711, 4082, 2352, 2947, 705, 3935, 2762, 2058, 2509,
	3322, 3853, 4135, 1060, 1061, 3852, 1152, 2069, 4083, 2944,
	3568, 1151, 3268, 3569, 1071, 1075, 910, 4081, 95, 128,
	4111, 3863, 705, 4078, 3587, 961, 962, 963, 1071, 1075,
	910, 1430, 3262, 3576, 4025, 4033, 2503, 3862, 702, 86,
	2100, 190, 4058, 3343, 1725, 961, 962, 963, 1841, 2876,
	3193, 3194, 2875, 2396, 2397, 2877, 2961, 2962, 3268, 705,
	2030, 2031, 2798, 86, 1104, 129, 2508, 3192, 2987, 86,
	2578, 2395, 1444, 705, 3628, 4037, 2575, 1765, 172, 1766,
	2971, 1262, 1233, 1450, 1012, 1221, 687, 2841, 705, 1011,
	1222, 2925, 2171, 3951, 1457, 1986, 1458, 1459, 1220, 685,
	1219, 1221, 2888, 1234, 2414, 2413, 1222, 1227, 3300, 3586,
	705, 1099, 2842, 1206, 1207, 2834, 2835, 95, 3680, 705,
	3033, 2881, 3330, 1238, 1239, 3328, 3265, 2569, 3298, 2029,
	2454, 2360, 719, 2033, 169, 2576, 723, 170, 2973, 682,
	2328, 95, 717, 1700, 3304, 1209, 1761, 95, 697, 2932,
	4063, 4041, 1171, 2448, 3905, 4102, 3906, 1196, 2485, 86,
	189, 2957, 88, 692, 2524, 3291, 3964, 4133, 4061, 1097,
	1440, 4041, 3265, 3292, 695, 1960, 4103, 4067, 4068, 1259,
	1454, 1934, 1236, 1237, 2530, 1242, 3213, 3214, 2528, 1202,
	2163, 1261, 1254, 4062, 1429, 2165, 2975, 1260, 1235, 2170,
	2166, 3301, 1228, 2167, 2168, 2169, 3837, 706, 2164, 2172,
	2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2572, 3557,
	2573, 3299, 2547, 3556, 2548, 1935, 2549, 1936, 1240, 2550,
	2527, 1177, 2526, 1987, 706, 1176, 1137, 95, 1241, 2531,
	1135, 1064, 672, 2529, 674, 688, 1703, 708, 2488, 707,
	678, 3633, 676, 680, 689, 681, 2127, 675, 2373, 686,
	3553, 1108, 677, 690, 691, 694, 698, 699, 700, 696,
	693, 706, 684, 709, 173, 2537, 2533, 2535, 2536, 2534,
	2538, 2539, 2540, 179, 1107, 706, 3034, 1477, 1108, 1450,
	4075, 1146, 1442, 1145, 1144, 3212, 1143, 1142, 1098, 1141,
	706, 1140, 2447, 1139, 1134, 1845, 3215, 3215, 3098, 3319,
	1147, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1486, 1485,
	1487, 1488, 706, 1083, 2358, 2359, 1083, 4154, 1120, 4108,
	1081, 706, 1083, 1156, 3470, 1074, 1068, 1066, 1119, 1119,
	1979, 2461, 1266, 1155, 1266, 1266, 1059, 2976, 2514, 1074,
	1068, 1066, 1839, 2513, 2119, 2108, 2109, 2110, 2111, 2121,
	2112, 2113, 2114, 2126, 2122, 2115, 2116, 2123, 2124, 2125,
	2117, 2118, 2120, 1762, 1975, 3552, 1431, 1164, 1449, 1446,
	1447, 1448, 1453, 1455, 1452, 1138, 1451, 3235, 2926, 1136,
	2956, 2942, 1026, 1501, 1506, 1507, 1445, 1510, 1512, 1513,
	1514, 1515, 1516, 2959, 1519, 1520, 1522, 1522, 164, 1522,
	1522, 1527, 1527, 1527, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 3627, 1255, 1498, 2890,
	1652, 2507, 1654, 1655, 1656, 1657, 1658, 710, 1422, 1423,
	1494, 1495, 1496, 1497, 1527, 1527, 1527, 1527, 1527, 1527,
	1508, 3958, 2923, 1946, 1945, 1947, 1948, 1949, 703, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 704, 1449, 1446, 1447, 1448, 1453, 1455,
	1452, 1421, 1451, 959, 1105, 1502, 3266, 3267, 4039, 959,
	1693, 1511, 1445, 959, 2946, 1523, 3199, 1524, 1525, 3270,
	94, 1067, 1217, 3585, 1223, 1224, 1225, 1226, 4039, 1438,
	89, 3516, 3517, 1528, 1529, 1067, 3414, 2577, 1218, 1208,
	4038, 1690, 2451, 3471, 94, 1965, 1205, 1838, 1263, 1264,
	94, 1491, 3266, 3267, 1200, 1126, 165, 3627, 2945, 1491,
	4038, 3200, 1837, 177, 1699, 3270, 1126, 1250, 2576, 1252,
	2979, 1724, 1866, 1026, 1976, 1835, 1212, 1026, 662, 1126,
	1126, 4076, 2452, 1026, 1094, 3202, 4066, 1096, 705, 2450,
	2802, 2804, 2970, 3947, 1231, 2969, 2402, 1163, 3507, 1492,
	1493, 3489, 2872, 3197, 185, 1707, 1691, 1249, 1251, 1711,
	4147, 2837, 2505, 2774, 1126, 1025, 2103, 1753, 1653, 1211,
	3107, 3213, 3214, 2453, 3106, 2832, 124, 670, 3198, 1491,
	4065, 2360, 1488, 2449, 3191, 2601, 3320, 2992, 1471, 3972,
	94, 1725, 1042, 119, 1149, 2590, 1258, 166, 171, 168,
	174, 175, 176, 178, 180, 181, 182, 183, 1125, 1216,
	3548, 1244, 3204, 184, 186, 187, 188, 1709, 1710, 1125,
	3483, 104, 105, 2525, 1691, 1659, 1660, 1661, 1662, 1663,
	1664, 1865, 1125, 1125, 1991, 2042, 1099, 1964, 1091, 1119,
	1122, 1123, 1697, 1083, 1972, 1093, 1092, 1116, 1120, 3126,
	1684, 2999, 1483, 1484, 1486, 1485, 1487, 1488, 2144, 1126,
	3124, 1099, 1195, 107, 1247, 1767, 120, 1125, 1248, 3019,
	2601, 2136, 2145, 1119, 1122, 1123, 2915, 1083, 1253, 4112,
	3212, 1116, 1120, 2136, 2982, 2610, 2982, 1126, 1459, 2981,
	2071, 2981, 3215, 1858, 1097, 3676, 1460, 1705, 1842, 1843,
	1844, 1460, 1115, 1246, 2072, 1489, 1490, 2070, 3523, 2803,
	1968, 1126, 1966, 1967, 3522, 1969, 1970, 1971, 4104, 1708,
	1706, 1727, 1458, 1459, 1851, 2492, 1199, 1730, 1929, 1875,
	1984, 1868, 1868, 1024, 1694, 3001, 1880, 1911, 1881, 1870,
	1883, 1885, 1022, 1874, 1889, 1891, 1893, 1895, 1897, 1230,
	706, 1864, 2497, 1215, 1266, 2502, 1758, 1759, 2504, 1245,
	1232, 2500, 1125, 2497, 1162, 1919, 1920, 1869, 1159, 1201,
	1137, 1925, 1926, 1460, 2358, 2359, 1712, 1135, 3508, 1834,
	1460, 4145, 1992, 1037, 4146, 4149, 4144, 1961, 1954, 1962,
	1125, 2501, 1963, 1848, 1849, 1129, 1119, 1460, 4003, 1861,
	1131, 1847, 2499, 2142, 1132, 1130, 3011, 3010, 3009, 3201,
	3940, 3003, 3845, 3007, 1125, 3002, 1460, 3000, 3844, 1129,
	1119, 4155, 3005, 1098, 1131, 1133, 3835, 1725, 1132, 1130,
	1872, 3004, 1198, 1457, 2141, 1458, 1459, 1915, 1457, 2637,
	1458, 1459, 3021, 4004, 1840, 1477, 3599, 1952, 1098, 3006,
	3008, 1980, 1953, 3598, 1460, 3941, 3530, 1907, 4117, 1725,
	1910, 2290, 1912, 1941, 3529, 4115, 1725, 3519, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1486, 1485, 1487, 1488,
	3243, 711, 1102, 1725, 2582, 2583, 2584, 3295, 128, 1101,
	1100, 190, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1486,
	1485, 1487, 1488, 2290, 2060, 2062, 2063, 2287, 4156, 1997,
	1457, 1951, 1458, 1459, 3231, 129, 2289, 1457, 2897, 1458,
	1459, 1266, 1266, 2896, 2895, 1993, 1994, 1940, 172, 2061,
	957, 2457, 1955, 2019, 1457, 87, 1458, 1459, 87, 1998,
	4106, 961, 962, 963, 1939, 1425, 2005, 2006, 2007, 1477,
	3582, 2991, 3583, 1457, 1938, 1458, 1459, 1460, 2018, 1481,
	1482, 1483, 1484, 1486, 1485, 1487, 1488, 42, 1937, 2606,
	42, 1927, 1921, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1486, 1485, 1487, 1488, 169, 1918, 1917, 170, 1916, 1887,
	1477, 1457, 1704, 1458, 1459, 2098, 2098, 3513, 711, 1761,
	2096, 2096, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1462,
	189, 4105, 2649, 2099, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1486, 1485, 1487, 1488, 2879, 711, 1995, 1460, 2473,
	2472, 3967, 2064, 1738, 1999, 3966, 2001, 2002, 2003, 2004,
	110, 101, 2605, 2008, 1477, 1690, 110, 1473, 2127, 1474,
	3205, 109, 102, 108, 3209, 2020, 1477, 109, 2589, 108,
	2182, 3208, 103, 1475, 1489, 1490, 1472, 3944, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1486, 1485, 1487, 1488, 1739,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1486, 1485, 1487,
	1488, 2471, 2470, 2647, 1457, 3210, 1458, 1459, 2469, 2468,
	3206, 2823, 4132, 1456, 1725, 3207, 3943, 1725, 1460, 85,
	1691, 2043, 85, 4047, 1725, 4092, 1725, 1456, 1725, 2068,
	3942, 1725, 2823, 4032, 173, 2026, 2027, 1725, 2823, 4011,
	1460, 101, 3840, 179, 1460, 2823, 4007, 1725, 103, 3824,
	2075, 3823, 102, 2131, 3675, 2073, 2119, 2108, 2109, 2110,
	2111, 2121, 2112, 2113, 2114, 2126, 2122, 2115, 2116, 2123,
	2124, 2125, 2117, 2118, 2120, 1457, 3673, 1458, 1459, 1460,
	3595, 2102, 2300, 3925, 1725, 3566, 3957, 3960, 2074, 2299,
	2076, 2077, 2078, 2079, 2080, 2081, 2083, 2085, 2086, 2087,
	2088, 2089, 2090, 4045, 1725, 2298, 2204, 1725, 3872, 2146,
	2147, 2148, 2149, 1460, 1502, 3848, 1725, 3871, 2288, 2823,
	3836, 2286, 1689, 2160, 2181, 4043, 1725, 3482, 1688, 3918,
	1725, 3828, 2137, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1486, 1485, 1487, 1488, 1479, 1480, 1481, 1482, 1483, 1484,
	1486, 1485, 1487, 1488, 1687, 1457, 3527, 1458, 1459, 3566,
	1725, 2823, 3564, 103, 3916, 1725, 1456, 3512, 164, 2381,
	2497, 1725, 2130, 2196, 3305, 1460, 3302, 1457, 3234, 1458,
	1459, 1457, 2300, 1458, 1459, 3487, 1725, 1460, 3233, 2370,
	2906, 2297, 104, 105, 2303, 2304, 2729, 1725, 3913, 1725,
	3827, 2383, 3224, 3223, 3574, 2298, 3221, 3222, 2411, 3219,
	3220, 2933, 1460, 104, 105, 2893, 1457, 1460, 1458, 1459,
	3219, 3218, 1725, 1460, 2067, 2345, 1686, 1460, 2847, 1725,
	2576, 2955, 1460, 1830, 2936, 2929, 2930, 2911, 2333, 2645,
	1679, 1088, 2823, 2822, 2101, 1725, 2410, 729, 2560, 2820,
	1457, 1460, 1458, 1459, 2559, 2519, 2420, 2421, 2422, 2423,
	3895, 1725, 2406, 2415, 103, 2416, 2417, 2418, 2419, 2518,
	2405, 1038, 3456, 1725, 1088, 1460, 2355, 2334, 2022, 1988,
	1950, 2426, 2427, 2428, 2429, 2387, 1942, 1932, 1460, 1928,
	1924, 2346, 2321, 1460, 2339, 3337, 2340, 3449, 1725, 2348,
	2440, 1923, 3446, 1725, 2839, 1922, 1740, 2409, 3444, 1725,
	2846, 1460, 1457, 1725, 1458, 1459, 2486, 3406, 1725, 1460,
	2446, 1256, 2818, 2368, 1457, 3186, 1458, 1459, 2839, 2392,
	2393, 1460, 2391, 1830, 1829, 2576, 3404, 1725, 1460, 2408,
	2407, 1072, 3156, 1073, 1773, 1772, 2483, 3484, 3999, 1457,
	2498, 1458, 1459, 3482, 1457, 3971, 1458, 1459, 2823, 2456,
	1457, 1725, 1458, 1459, 1457, 2847, 1458, 1459, 2868, 1457,
	2847, 1458, 1459, 3400, 1725, 1128, 2847, 109, 3397, 1725,
	1460, 3435, 2430, 2432, 2433, 1868, 2441, 2437, 1457, 2491,
	1458, 1459, 2494, 2459, 2495, 2455, 3395, 1725, 2467, 2511,
	3482, 1460, 3221, 3129, 3393, 1725, 165, 2394, 2497, 2729,
	2634, 1460, 1457, 177, 1458, 1459, 3391, 1725, 1127, 2490,
	2493, 2441, 2489, 3389, 1725, 1457, 2633, 1458, 1459, 2497,
	1457, 2869, 1458, 1459, 2512, 2515, 1460, 3531, 2480, 2516,
	2517, 2871, 1460, 2363, 1729, 2324, 1456, 2101, 1457, 1460,
	1458, 1459, 2044, 2028, 185, 1974, 1457, 1460, 1458, 1459,
	2868, 1460, 1726, 1728, 1760, 3387, 1725, 1460, 1457, 2581,
	1458, 1459, 1460, 1903, 1110, 1457, 1460, 1458, 1459, 1109,
	95, 1460, 4071, 2522, 4014, 1460, 3385, 1725, 3532, 3533,
	3534, 3859, 1460, 1512, 1027, 1512, 3867, 166, 171, 168,
	174, 175, 176, 178, 180, 181, 182, 183, 1732, 3825,
	3687, 2593, 3547, 184, 186, 187, 188, 1457, 1460, 1458,
	1459, 3383, 1725, 2869, 1904, 1905, 1906, 3381, 1725, 2553,
	3544, 3525, 2300, 2576, 3379, 1725, 3348, 3347, 1457, 2299,
	1458, 1459, 3377, 1725, 1832, 3246, 3375, 1725, 1457, 1460,
	1458, 1459, 3373, 1725, 1460, 2596, 2903, 3371, 1725, 2439,
	1460, 3369, 1725, 3293, 3248, 1200, 3367, 1725, 3244, 2902,
	3353, 1725, 95, 1457, 2937, 1458, 1459, 3335, 1725, 1457,
	2568, 1458, 1459, 1460, 2436, 2431, 1457, 1460, 1458, 1459,
	2425, 1460, 2424, 2599, 1457, 2574, 1458, 1459, 1457, 1957,
	1458, 1459, 3535, 2598, 1457, 1863, 1458, 1459, 1859, 1457,
	1828, 1458, 1459, 1457, 121, 1458, 1459, 2903, 1457, 2585,
	1458, 1459, 1457, 3297, 1458, 1459, 3860, 2068, 2454, 1457,
	1460, 1458, 1459, 2337, 2794, 1725, 1460, 3494, 3495, 2792,
	1725, 4127, 1460, 2024, 4125, 2767, 1725, 2587, 1460, 3536,
	3537, 3538, 4099, 3979, 1460, 1457, 3900, 1458, 1459, 3497,
	1460, 2365, 2366, 3240, 1460, 2597, 3239, 3238, 2744, 1725,
	3156, 2916, 2736, 1725, 1460, 2554, 2727, 1725, 3178, 1460,
	3500, 667, 2609, 3179, 3499, 2586, 1457, 2588, 1458, 1459,
	3175, 1457, 1460, 1458, 1459, 1899, 2591, 1457, 2592, 1458,
	1459, 3176, 3174, 2562, 2563, 2025, 3177, 3975, 2565, 2773,
	3861, 3653, 1460, 3652, 2594, 2725, 1725, 2566, 2354, 2343,
	1457, 1460, 1458, 1459, 1457, 1040, 1458, 1459, 1457, 1737,
	1458, 1459, 2643, 2712, 1725, 1460, 3488, 3134, 3133, 2710,
	1725, 2805, 1900, 1901, 1902, 2708, 1725, 3939, 2098, 2706,
	1725, 3666, 3668, 2096, 1460, 728, 3478, 3143, 1460, 3502,
	1026, 3651, 3146, 3148, 3451, 2808, 1973, 1457, 1460, 1458,
	1459, 3149, 3475, 1457, 1041, 1458, 1459, 2704, 1725, 1457,
	3474, 1458, 1459, 2844, 2845, 1457, 1010, 1458, 1459, 3217,
	2806, 1457, 2381, 1458, 1459, 1026, 2864, 1457, 3955, 1458,
	1459, 1457, 2886, 1458, 1459, 1166, 2702, 1725, 2809, 1043,
	2811, 1457, 2907, 1458, 1459, 42, 1457, 1044, 1458, 1459,
	2700, 1725, 2067, 2843, 2861, 2824, 1165, 2863, 1460, 1457,
	3313, 1458, 1459, 1460, 3180, 101, 2856, 2857, 1460, 2698,
	1725, 2144, 1460, 2696, 1725, 2902, 102, 2985, 1460, 1457,
	1424, 1458, 1459, 2694, 1725, 2145, 101, 1460, 1457, 2943,
	1458, 1459, 3480, 103, 129, 1697, 2796, 102, 2833, 4141,
	1460, 103, 1457, 3236, 1458, 1459, 2852, 2855, 2856, 2857,
	2853, 2862, 2854, 2858, 2365, 2366, 2889, 2891, 2816, 1691,
	2557, 1457, 4050, 1458, 1459, 1457, 3956, 1458, 1459, 3855,
	3216, 2860, 2882, 2836, 1460, 1457, 2821, 1458, 1459, 2941,
	2349, 2546, 2866, 2692, 1725, 1460, 1051, 1052, 2690, 1725,
	1460, 3132, 2545, 2688, 1725, 1460, 2870, 2686, 1725, 3131,
	3458, 2873, 2544, 2684, 1725, 2446, 2580, 1460, 2543, 2880,
	2883, 1460, 2682, 1725, 2542, 1460, 108, 2541, 2952, 3924,
	1460, 110, 2905, 3923, 2139, 2680, 1725, 2908, 2909, 2140,
	2894, 1460, 109, 109, 108, 1457, 3903, 1458, 1459, 3674,
	1457, 1460, 1458, 1459, 3672, 1457, 2904, 1458, 1459, 1457,
	1742, 1458, 1459, 3671, 3664, 1457, 2912, 1458, 1459, 2913,
	3832, 2917, 2918, 2919, 1457, 2200, 1458, 1459, 2949, 3545,
	2678, 1725, 3479, 1460, 1851, 2673, 1725, 1457, 1460, 1458,
	1459, 3549, 2995, 2996, 1460, 3477, 3249, 2938, 2939, 2481,
	3663, 1460, 2669, 1725, 1846, 3468, 2667, 1725, 2928, 1460,
	2660, 1725, 1050, 2839, 2948, 2658, 1725, 110, 4129, 4128,
	4129, 1457, 1460, 1458, 1459, 3637, 1741, 1460, 109, 2820,
	3035, 1460, 1457, 2635, 1458, 1459, 3447, 1457, 2335, 1458,
	1459, 1460, 1457, 4128, 1458, 1459, 2974, 3012, 2993, 1754,
	1746, 1460, 114, 115, 1457, 2283, 1458, 1459, 1457, 2977,
	1458, 1459, 1457, 3945, 1458, 1459, 3511, 1457, 3412, 1458,
	1459, 110, 2041, 3408, 2039, 10, 3, 9, 1457, 3345,
	1458, 1459, 109, 97, 108, 2315, 3344, 1460, 1457, 1,
	1458, 1459, 1460, 103, 3341, 2040, 1018, 1460, 8, 3013,
	1427, 1426, 3515, 1726, 2322, 4060, 2950, 3339, 683, 2325,
	1695, 1692, 4100, 2898, 1460, 4056, 2790, 4057, 1943, 1933,
	1457, 3577, 1458, 1459, 2251, 1457, 2789, 1458, 1459, 3856,
	3252, 1457, 2487, 1458, 1459, 3543, 2785, 2444, 1457, 2347,
	1458, 1459, 1118, 154, 2403, 2994, 1457, 3037, 1458, 1459,
	2404, 4027, 118, 3093, 1076, 117, 1121, 2983, 1229, 1457,
	2984, 1458, 1459, 2482, 1457, 3567, 1458, 1459, 1457, 2887,
	1458, 1459, 2784, 2412, 1460, 1779, 1777, 2783, 1457, 1778,
	1458, 1459, 2782, 1460, 1776, 1781, 1780, 2997, 1457, 3321,
	1458, 1459, 2636, 3413, 2032, 3014, 718, 3100, 2859, 2781,
	712, 192, 1768, 1747, 3427, 3102, 3111, 1160, 673, 1460,
	3225, 2381, 2520, 679, 1460, 1509, 3028, 2023, 2288, 3130,
	2288, 2286, 3073, 2286, 1457, 2874, 1458, 1459, 1070, 1457,
	1460, 1458, 1459, 3163, 1457, 87, 1458, 1459, 2381, 2381,
	2381, 2381, 2381, 2383, 1460, 2458, 3083, 3084, 3085, 3086,
	3087, 1457, 1062, 1458, 1459, 2336, 2810, 1069, 2381, 2780,
	3833, 2381, 3101, 3164, 3103, 3472, 3142, 1029, 2771, 3111,
	2383, 2383, 2383, 2383, 2383, 3168, 1460, 3144, 2826, 3147,
	3185, 1984, 3140, 3938, 3665, 4012, 1460, 2884, 1743, 3434,
	2383, 2608, 3110, 2383, 2770, 3122, 2134, 3128, 1499, 2769,
	3138, 3123, 3125, 3127, 2380, 3632, 1460, 2059, 741, 3137,
	3135, 1457, 1460, 1458, 1459, 2768, 1460, 3150, 3151, 740,
	1457, 738, 1458, 1459, 2812, 3269, 2840, 1463, 947, 2765,
	2800, 1755, 1030, 3169, 1460, 3277, 3172, 3167, 3170, 3171,
	1031, 3173, 3181, 104, 105, 1460, 1457, 3187, 1458, 1459,
	3188, 1457, 3189, 1458, 1459, 2851, 2849, 2848, 2555, 3195,
	2388, 2760, 3496, 1460, 3492, 4052, 2382, 1457, 3136, 1458,
	1459, 2753, 3226, 2378, 3228, 2819, 3227, 898, 897, 750,
	742, 1457, 1460, 1458, 1459, 732, 960, 3229, 3230, 896,
	1460, 2752, 895, 3279, 1460, 3280, 2958, 2751, 3250, 3294,
	3281, 2750, 2960, 2885, 3153, 3278, 3290, 2446, 3271, 3282,
	1441, 1460, 1714, 1457, 3288, 1458, 1459, 1717, 2344, 2749,
	1460, 1089, 3318, 1457, 3962, 1458, 1459, 2579, 3342, 1713,
	2748, 3969, 3260, 3561, 3159, 3241, 2934, 2474, 69, 3159,
	3309, 3308, 3306, 1457, 46, 1458, 1459, 1460, 2747, 1457,
	3316, 1458, 1459, 1457, 1460, 1458, 1459, 3933, 3326, 4000,
	890, 887, 3323, 3324, 3272, 3325, 3634, 2746, 3327, 3635,
	3329, 1457, 3331, 1458, 1459, 2745, 3636, 3096, 3097, 2739,
	3982, 3983, 1457, 886, 1458, 1459, 3984, 2852, 2855, 2856,
	2857, 2853, 2189, 2854, 2858, 1512, 2738, 3494, 3495, 1512,
	1457, 1437, 1458, 1459, 1434, 2737, 4073, 2034, 96, 36,
	35, 34, 33, 32, 2595, 3459, 26, 3461, 2600, 1457,
	25, 1458, 1459, 24, 23, 3251, 22, 1457, 3429, 1458,
	1459, 1457, 2734, 1458, 1459, 3433, 29, 19, 21, 2733,
	20, 2603, 18, 2604, 3263, 4095, 4140, 3317, 1457, 2612,
	1458, 1459, 123, 2614, 2615, 55, 52, 1457, 50, 1458,
	1459, 131, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628,
	2629, 2630, 130, 2632, 3162, 53, 49, 2381, 1203, 3460,
	47, 3462, 3464, 31, 1457, 30, 1458, 1459, 17, 16,
	3509, 1457, 3469, 1458, 1459, 15, 2638, 2639, 2640, 2641,
	2642, 3476, 2644, 14, 13, 12, 2646, 11, 3481, 2383,
	2651, 2652, 7, 2653, 6, 39, 2656, 2657, 2659, 2661,
	2662, 2663, 2664, 2665, 2666, 2668, 2670, 2671, 2672, 2674,
	3498, 2676, 2677, 2679, 2681, 2683, 2685, 2687, 2689, 2691,
	2693, 2695, 2697, 2699, 2701, 2703, 2705, 2707, 2709, 2711,
	2713, 2714, 2715, 730, 2717, 3281, 2719, 3501, 2721, 2722,
	3278, 2724, 2726, 2728, 3282, 1692, 3504, 2731, 3526, 3510,
	3528, 2735, 3503, 3311, 3312, 2740, 2741, 2742, 2743, 38,
	37, 28, 3571, 3572, 1460, 27, 3466, 40, 2754, 2755,
	2756, 2757, 2758, 2759, 3520, 3521, 2763, 2764, 3436, 4,
	3438, 3439, 3440, 2921, 2766, 2476, 0, 0, 0, 2772,
	2194, 0, 0, 0, 2775, 2776, 2777, 2778, 2779, 3491,
	1460, 0, 0, 0, 0, 2786, 2787, 1460, 2788, 0,
	0, 2791, 2793, 2347, 1460, 2795, 0, 0, 3505, 3506,
	1723, 1719, 0, 1460, 0, 2807, 0, 3554, 1460, 0,
	0, 3558, 3559, 3560, 0, 1720, 0, 1460, 1723, 1719,
	0, 0, 1049, 0, 3573, 1055, 1055, 1460, 0, 2732,
	0, 0, 0, 1720, 3589, 3550, 3551, 0, 0, 0,
	2341, 2342, 1722, 1460, 1721, 0, 0, 0, 0, 0,
	2277, 2278, 2279, 2280, 2281, 0, 1460, 0, 1715, 1716,
	1722, 1460, 1721, 0, 0, 2730, 1460, 2302, 0, 0,
	2305, 2306, 2723, 0, 0, 0, 0, 1460, 0, 2720,
	0, 1457, 0, 1458, 1459, 1460, 0, 0, 2718, 0,
	0, 0, 0, 2716, 0, 0, 0, 3640, 0, 3641,
	3642, 3643, 2675, 0, 0, 0, 2323, 0, 3650, 0,
	0, 3657, 2655, 3659, 0, 0, 0, 1457, 0, 1458,
	1459, 0, 0, 3630, 1457, 0, 1458, 1459, 2654, 0,
	0, 1457, 0, 1458, 1459, 3163, 0, 87, 3660, 3163,
	1457, 2650, 1458, 1459, 0, 1457, 2648, 1458, 1459, 0,
	0, 2613, 0, 0, 1457, 2098, 1458, 1459, 0, 0,
	2096, 0, 2607, 0, 1457, 0, 1458, 1459, 3594, 42,
	2602, 0, 3689, 3661, 0, 0, 0, 3681, 3670, 3669,
	1457, 0, 1458, 1459, 0, 0, 0, 3677, 3679, 0,
	0, 0, 0, 1457, 0, 1458, 1459, 0, 1457, 0,
	1458, 1459, 0, 1457, 3839, 1458, 1459, 0, 0, 0,
	0, 0, 0, 3693, 1457, 0, 1458, 1459, 0, 0,
	0, 0, 1457, 0, 1458, 1459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3831, 3830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3846, 0,
	0, 0, 0, 3851, 3850, 0, 0, 0, 3858, 0,
	0, 0, 0, 0, 3829, 0, 3897, 0, 0, 3898,
	0, 0, 2098, 3683, 0, 0, 0, 2096, 3023, 3024,
	3025, 3026, 3027, 3658, 0, 0, 0, 0, 0, 3901,
	3841, 3842, 3843, 0, 0, 0, 0, 0, 3032, 0,
	0, 0, 0, 0, 3690, 3691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3163, 0, 3904, 3834, 3159, 3685, 3907, 0, 0,
	0, 0, 0, 0, 0, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1648, 1649, 1650, 1651,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 3949, 3946, 3162, 3902, 3931, 3930,
	3162, 0, 3921, 0, 0, 0, 0, 0, 3963, 3927,
	0, 3929, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 3948, 0, 0, 0, 0, 3165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3183, 3952, 0, 0, 42, 3965,
	0, 0, 0, 0, 3968, 3838, 3970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2616, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3988, 0, 0,
	3989, 0, 4009, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 3954, 0, 0, 0, 0, 0, 0, 0,
	0, 3998, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4015, 4005, 0, 0, 0, 0, 42,
	0, 0, 0, 4040, 0, 1461, 3973, 4013, 4018, 4026,
	4023, 4020, 0, 4019, 4017, 0, 4022, 4021, 0, 0,
	0, 0, 3315, 3858, 4029, 0, 0, 0, 0, 0,
	0, 4048, 3162, 0, 0, 0, 1518, 4069, 4059, 4064,
	0, 0, 0, 4051, 3332, 3333, 0, 3334, 3336, 3338,
	0, 0, 0, 0, 0, 0, 4040, 4077, 0, 0,
	4079, 4090, 0, 3346, 0, 0, 0, 0, 3350, 3351,
	3352, 3354, 3355, 3356, 3357, 3358, 3359, 3360, 3361, 3362,
	3363, 3364, 3365, 3366, 3368, 3370, 3372, 3374, 3376, 3378,
	3380, 3382, 3384, 3386, 3388, 3390, 3392, 3394, 3396, 3398,
	3399, 3401, 3402, 3403, 3405, 1984, 4113, 3407, 2098, 3409,
	3410, 3411, 4109, 2096, 3415, 3416, 3417, 3418, 3419, 3420,
	3421, 3422, 3423, 3424, 3425, 4123, 4126, 4122, 4124, 4120,
	4119, 4040, 4110, 3432, 4094, 4134, 4089, 3437, 4010, 4142,
	0, 3441, 3442, 0, 3443, 3445, 0, 3448, 3450, 4148,
	3452, 3453, 3454, 3455, 4150, 0, 0, 0, 3159, 0,
	3463, 0, 0, 0, 0, 0, 2098, 0, 0, 4159,
	4160, 2096, 0, 3898, 4158, 0, 0, 0, 0, 0,
	0, 0, 0, 4157, 0, 0, 0, 0, 0, 3961,
	0, 0, 0, 0, 0, 3485, 3486, 0, 0, 3490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4107, 0,
	0, 0, 0, 0, 4093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4085, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1008, 0, 2290, 0, 0, 1009, 0, 0,
	0, 0, 0, 0, 0, 3565, 0, 2097, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3584, 0, 0, 3588, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 943, 0, 3015, 0, 0, 0, 0,
	1784, 3600, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 0, 0, 0, 0, 0, 195,
	0, 0, 195, 0, 0, 0, 716, 0, 0, 0,
	0, 722, 0, 0, 0, 3623, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 3631, 0,
	0, 0, 0, 0, 1797, 0, 3638, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 722, 195, 722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3075, 0, 3077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3088, 3089, 3090, 3091, 1810, 1813, 1814,
	1815, 1816, 1817, 1818, 0, 1819, 1820, 1822, 1823, 1821,
	1824, 1825, 1798, 1799, 1800, 1801, 1782, 1783, 1811, 0,
	1785, 0, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 0, 0, 1795, 1802, 1803, 1804, 1805, 0, 1806,
	1807, 1808, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3847, 0, 0, 0, 0, 0, 0,
	0, 0, 3854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3864, 3865, 3866, 0, 3868, 0, 3869, 3870,
	0, 0, 0, 3873, 3874, 3875, 3876, 3877, 3878, 3879,
	3880, 3881, 3882, 3883, 3884, 3885, 3886, 3887, 3888, 3889,
	3890, 3891, 3892, 3893, 3894, 0, 3896, 3899, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3908, 3909, 3910, 3911, 3912, 3914, 3915, 3917,
	3919, 3920, 3922, 0, 0, 0, 3926, 0, 0, 0,
	3928, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3953, 0, 0, 0, 0, 0,
	2054, 2055, 2056, 2057, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2065, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	2104, 2105, 0, 0, 0, 0, 2128, 0, 0, 2132,
	2133, 0, 0, 0, 2138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2150,
	2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 0,
	2161, 0, 0, 0, 2183, 2184, 2185, 2186, 2187, 2188,
	2190, 0, 2195, 0, 2197, 2198, 2199, 0, 2201, 2202,
	2203, 0, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212,
	2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222,
	2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232,
	2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242,
	2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 0, 0, 0, 0, 0, 2282, 0, 2284, 0,
	2291, 2292, 2293, 2294, 2295, 2296, 0, 0, 0, 3978,
	0, 0, 0, 0, 0, 0, 1692, 0, 0, 2307,
	2308, 2309, 2310, 2311, 2312, 2313, 2314, 0, 2316, 2317,
	2318, 2319, 2320, 3993, 0, 0, 0, 0, 0, 3996,
	0, 3997, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4008, 0, 0, 0, 0, 0, 1055, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4034, 4035,
	0, 0, 0, 0, 0, 2361, 2362, 129, 0, 151,
	0, 0, 4042, 4044, 4046, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 195, 0, 195, 0,
	0, 2400, 0, 0, 0, 0, 0, 0, 4072, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 162, 0, 0, 0, 0, 0, 150, 0, 0,
	2927, 0, 0, 0, 0, 722, 0, 722, 722, 0,
	0, 0, 0, 129, 4091, 151, 169, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 172, 722, 195, 0,
	0, 0, 2442, 0, 0, 0, 0, 0, 138, 139,
	161, 160, 189, 0, 0, 0, 0, 0, 4114, 4116,
	4118, 0, 0, 0, 0, 0, 1504, 162, 0, 0,
	0, 0, 0, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4139, 169, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4151,
	4152, 0, 0, 0, 1854, 1855, 161, 160, 189, 0,
	0, 3621, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 136, 158, 143, 135, 0, 156,
	157, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 144, 0, 0, 0,
	86, 44, 45, 88, 0, 0, 0, 0, 0, 0,
	147, 145, 140, 141, 142, 146, 0, 0, 0, 0,
	92, 0, 137, 0, 48, 76, 77, 0, 74, 78,
	0, 148, 0, 0, 0, 0, 0, 75, 0, 155,
	1856, 158, 0, 1853, 0, 156, 157, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 95, 0,
	0, 0, 0, 0, 0, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 83, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 722,
	722, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	2611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2617, 2618, 2619, 2620, 0, 0, 164, 0, 0, 722,
	0, 0, 195, 0, 0, 0, 0, 3937, 0, 0,
	0, 0, 0, 0, 722, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 159, 0, 51, 54,
	57, 56, 59, 1518, 73, 0, 0, 82, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 61, 91, 90, 0, 0, 71, 72, 58, 0,
	0, 1504, 0, 0, 80, 81, 0, 722, 722, 0,
	722, 0, 722, 722, 0, 722, 722, 722, 722, 722,
	722, 0, 159, 0, 0, 0, 0, 0, 1504, 0,
	0, 1504, 722, 1504, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 63, 64, 0,
	65, 66, 67, 68, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 722, 153, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 195, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 195, 0, 0, 177, 0, 0, 0, 195,
	0, 60, 1692, 0, 0, 0, 0, 0, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 722, 0, 0,
	0, 152, 0, 0, 153, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 3977, 0,
	0, 177, 0, 0, 0, 0, 3987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	171, 168, 174, 175, 176, 178, 180, 181, 182, 183,
	0, 89, 0, 0, 0, 184, 186, 187, 188, 0,
	0, 0, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1692, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 171, 168, 174, 175,
	176, 178, 180, 181, 182, 183, 0, 0, 0, 0,
	0, 184, 186, 187, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 722, 722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 0, 0,
	0, 94, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2990, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 3016,
	3017, 3018, 0, 0, 3020, 0, 0, 3022, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3029, 3030, 3031,
	0, 0, 0, 0, 0, 0, 0, 70, 0, 3036,
	0, 0, 3038, 3039, 3040, 0, 0, 0, 3041, 3042,
	0, 0, 3043, 0, 3044, 0, 0, 0, 0, 0,
	0, 3045, 0, 3046, 0, 0, 0, 3047, 0, 3048,
	0, 0, 3049, 0, 3050, 0, 3051, 0, 3052, 0,
	3053, 0, 3054, 0, 3055, 0, 3056, 0, 3057, 0,
	3058, 0, 3059, 0, 3060, 0, 3061, 0, 3062, 0,
	3063, 0, 3064, 0, 3065, 0, 3066, 0, 0, 0,
	3067, 0, 3068, 0, 3069, 0, 0, 3070, 0, 3071,
	0, 3072, 1784, 2254, 3074, 0, 0, 3076, 0, 0,
	3078, 3079, 3080, 3081, 0, 0, 0, 0, 3082, 2254,
	2254, 2254, 2254, 2254, 0, 0, 0, 2301, 0, 0,
	0, 0, 0, 0, 3092, 0, 0, 0, 0, 0,
	0, 0, 3105, 0, 0, 3109, 0, 0, 0, 0,
	0, 0, 0, 0, 3112, 3113, 3114, 3115, 3116, 3117,
	0, 0, 0, 3118, 3119, 0, 3120, 0, 3121, 0,
	0, 0, 195, 0, 0, 0, 0, 722, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 1055, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 722, 0, 0, 0,
	0, 0, 0, 3154, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 722, 0, 0, 2301, 195, 0,
	195, 0, 195, 195, 0, 0, 0, 0, 3184, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 0, 1810,
	1813, 1814, 1815, 1816, 1817, 1818, 0, 1819, 1820, 1822,
	1823, 1821, 1824, 1825, 1798, 1799, 1800, 1801, 1782, 1783,
	1811, 0, 1785, 0, 1786, 1787, 1788, 1789, 1790, 1791,
	1792, 1793, 1794, 0, 0, 1795, 1802, 1803, 1804, 1805,
	0, 1806, 1807, 1808, 1809, 0, 0, 0, 0, 3247,
	0, 0, 0, 0, 722, 0, 0, 0, 0, 0,
	0, 0, 942, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 722, 1698, 0, 0, 0, 0, 722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 701, 0, 0, 0, 0, 0,
	721, 0, 0, 0, 722, 0, 0, 0, 0, 722,
	0, 665, 0, 722, 722, 3340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3349,
	0, 1013, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 721, 0, 721, 190, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 195, 195,
	0, 0, 195, 1084, 195, 0, 0, 0, 0, 129,
	0, 151, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 195, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 1812, 0, 162, 0, 0, 722, 0, 0, 150,
	0, 0, 900, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 1855, 161, 160, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 666, 0, 0, 0, 1504, 0, 2301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1036, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3546, 0,
	0, 0, 0, 0, 1056, 1056, 0, 0, 0, 0,
	0, 0, 0, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3570, 0, 0, 0, 155, 1856, 158, 0, 1853,
	0, 156, 157, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3590,
	0, 3591, 0, 3592, 0, 3593, 0, 0, 3596, 3597,
	0, 0, 0, 0, 0, 0, 0, 3601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3602, 0, 3603, 0, 3604, 0, 3605, 0, 3606,
	0, 3607, 0, 3608, 0, 3609, 0, 3610, 0, 3611,
	0, 3612, 0, 3613, 0, 3614, 0, 3615, 0, 3616,
	0, 3617, 0, 0, 3618, 0, 0, 0, 3619, 0,
	3620, 0, 0, 0, 0, 0, 3622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 164, 0, 0, 0, 195, 0, 0, 3639,
	0, 0, 0, 0, 0, 0, 0, 722, 3644, 0,
	3645, 3646, 0, 3647, 0, 3648, 0, 0, 0, 0,
	3649, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 899, 0, 0, 195, 0, 3678, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 3686, 0,
	0, 3688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3692, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 3826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 722, 0, 0, 0, 0,
	0, 0, 722, 0, 0, 0, 0, 0, 0, 0,
	0, 722, 1080, 0, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 0, 1204, 0, 1210, 0, 0,
	195, 195, 195, 195, 195, 195, 0, 152, 0, 0,
	153, 0, 0, 0, 721, 1420, 721, 721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 195, 0,
	0, 0, 0, 0, 0, 0, 721, 3936, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 1433, 0, 0,
	0, 0, 0, 0, 0, 1503, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 1008,
	0, 0, 0, 0, 1009, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2097, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 171, 168, 174, 175, 176, 178, 180, 181,
	182, 183, 0, 0, 0, 0, 0, 184, 186, 187,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 666, 0, 666, 0, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 722, 666, 0, 0,
	0, 3976, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 1503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 0, 0, 0, 0, 0, 0, 3990, 0, 0,
	3991, 0, 3992, 0, 195, 0, 0, 722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 722, 0, 0, 0, 1504, 0, 0, 722, 722,
	1504, 195, 195, 195, 195, 195, 0, 0, 721, 721,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 195,
	0, 195, 0, 0, 195, 195, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 721, 0, 0, 0, 0, 4070, 0,
	195, 1757, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 1836, 0, 1504, 0, 0, 0,
	1774, 722, 0, 0, 0, 0, 195, 4086, 0, 4087,
	0, 4088, 0, 0, 0, 0, 0, 721, 0, 1862,
	195, 0, 0, 0, 0, 0, 0, 1871, 0, 0,
	1503, 1873, 0, 0, 1876, 1877, 721, 721, 0, 721,
	195, 721, 721, 195, 721, 721, 721, 721, 721, 721,
	0, 0, 0, 0, 0, 0, 1505, 1503, 1908, 1909,
	1503, 721, 1503, 0, 1914, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4137,
	0, 4138, 0, 1913, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1977,
	0, 0, 721, 0, 666, 0, 0, 0, 1958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 1036, 0, 0,
	0, 0, 0, 0, 1268, 0, 1268, 1268, 0, 0,
	0, 1996, 0, 0, 0, 0, 721, 722, 2000, 0,
	0, 666, 0, 0, 0, 0, 1432, 0, 0, 2011,
	2012, 2013, 2014, 2015, 2016, 2017, 0, 0, 0, 0,
	666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 1505, 0, 0,
	1505, 0, 1505, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 1930, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 666, 195,
	0, 0, 195, 195, 195, 0, 0, 0, 0, 0,
	0, 0, 722, 722, 1983, 666, 0, 0, 0, 0,
	0, 0, 0, 721, 721, 0, 0, 0, 0, 0,
	0, 666, 0, 0, 0, 0, 721, 0, 666, 0,
	0, 0, 0, 0, 0, 0, 0, 2009, 2010, 666,
	666, 666, 666, 666, 666, 666, 0, 0, 0, 0,
	0, 722, 722, 722, 722, 2047, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1503, 0, 0, 0, 0, 0,
	0, 0, 0, 2106, 0, 0, 0, 0, 0, 0,
	0, 0, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1701, 1702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 722, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 666, 1504, 0, 0, 0,
	0, 722, 0, 722, 0, 0, 721, 1080, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 1879, 0, 1879,
	0, 1879, 1879, 0, 1888, 1879, 1879, 1879, 1879, 1879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1080, 0, 0, 1505, 0, 721, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1505, 0, 195, 0, 0, 722, 0, 0,
	0, 0, 0, 0, 0, 721, 1956, 0, 0, 0,
	722, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1981, 721, 0, 0, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2367,
	0, 0, 0, 0, 0, 0, 721, 2371, 0, 2374,
	0, 0, 2047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 722, 0, 0, 0, 0, 0,
	0, 722, 0, 722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 721, 0, 0, 0, 0, 0, 0,
	2464, 2465, 2466, 0, 0, 0, 0, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 1983, 0, 0, 0,
	721, 0, 0, 0, 0, 0, 721, 1871, 0, 0,
	1871, 0, 1871, 0, 0, 0, 0, 0, 2496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1930, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 721, 0, 0, 0, 1056, 721, 0,
	0, 0, 721, 721, 0, 0, 0, 0, 0, 0,
	0, 0, 1036, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 1983, 666, 0, 666,
	0, 666, 2390, 1268, 1268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2035, 0, 0, 0,
	2047, 0, 0, 0, 0, 0, 0, 2532, 0, 722,
	0, 0, 0, 0, 0, 0, 0, 2551, 2552, 0,
	0, 2556, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 2561, 0, 0, 0, 0, 0, 0,
	2564, 0, 0, 722, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2092, 721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2567, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 0, 0, 0, 1503, 0, 721, 0, 0, 1504,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 722, 2301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	666, 0, 0, 0, 0, 0, 0, 666, 0, 0,
	0, 0, 195, 722, 0, 0, 0, 666, 666, 0,
	0, 666, 0, 2558, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 666, 0, 0, 1268, 0, 0, 0,
	666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 666, 0, 0, 0,
	0, 0, 0, 0, 0, 722, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 2338, 0, 0, 0,
	0, 0, 0, 0, 722, 0, 722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 1268, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1080, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1080, 0, 0, 0, 0, 2878, 1087, 0, 0, 2865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1080, 0, 0, 0, 721, 2092, 0,
	0, 0, 2092, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2914, 721, 0, 0, 0, 0, 0,
	0, 721, 0, 0, 0, 1871, 1871, 0, 0, 0,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1503, 2951, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 666, 0, 0,
	0, 0, 0, 0, 0, 1930, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2963,
	2964, 2965, 2966, 2967, 2968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2570, 2047, 2978, 0, 0,
	0, 0, 0, 0, 666, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2986,
	0, 0, 721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1268, 0, 0, 0,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 666, 0, 0, 0, 0, 0, 0,
	2920, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	666, 666, 666, 666, 666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 666, 666, 0, 0,
	0, 0, 0, 0, 0, 721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 721, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 0, 0, 0, 1503, 0, 0, 721, 721, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 721, 0, 0, 1503, 0, 0, 0, 3237,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3314, 0, 0, 0, 0, 2910, 0, 3307,
	0, 0, 3310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1056, 0, 666, 2351, 0, 0, 0, 0, 0,
	0, 2935, 0, 0, 0, 0, 0, 0, 0, 0,
	2940, 0, 0, 0, 1505, 0, 0, 0, 0, 1505,
	666, 666, 666, 666, 666, 0, 0, 0, 0, 0,
	0, 0, 3182, 0, 0, 0, 0, 0, 1930, 0,
	666, 0, 0, 666, 3190, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 2092, 0, 0, 666, 0, 0, 0, 0,
	0, 0, 0, 3465, 0, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	0, 0, 666, 0, 0, 0, 0, 0, 0, 0,
	2092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3514, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 721, 721, 0, 0, 0, 0, 0, 3539, 0,
	0, 3540, 3541, 3542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 721, 721, 721, 0, 3094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3139, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1268, 0, 0, 0, 0, 0, 0, 3166, 1879, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 1008, 0, 0, 0, 948, 1009,
	961, 962, 963, 949, 0, 0, 950, 951, 666, 952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 957, 964, 965, 0, 0, 666, 0,
	0, 666, 666, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 721, 0, 721, 0, 0, 0, 0, 0,
	0, 0, 1080, 0, 0, 0, 0, 0, 0, 0,
	2351, 0, 3283, 3284, 0, 1503, 0, 0, 0, 0,
	721, 0, 721, 0, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3285, 0, 721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3428, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 721, 0, 3286, 3287, 0, 0, 0,
	721, 0, 721, 0, 0, 0, 1930, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 913,
	0, 0, 0, 0, 0, 917, 0, 0, 0, 914,
	915, 0, 0, 0, 916, 918, 0, 0, 0, 0,
	0, 0, 0, 1930, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2351, 2351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3578, 3579, 3580, 3581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1503, 0,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 721, 721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3655, 0, 3655, 0, 0, 0, 0, 0,
	0, 0, 721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3682, 0, 3684, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1930, 0, 0, 0, 0, 0,
	0, 0, 721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2351, 0, 0, 721, 0, 721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3655, 0, 0, 0, 0, 0, 0,
	3655, 0, 3655, 0, 0, 0, 0, 0, 0, 0,
	0, 1930, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3994, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4002, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1268, 1268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4002, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 3428, 0, 4054, 1403, 1389, 522, 0,
	1331, 1406, 1300, 1319, 1416, 1322, 1325, 1368, 1278, 1346,
	413, 1316, 1271, 1304, 1273, 1311, 1274, 1302, 1333, 269,
	1299, 1391, 1350, 1405, 363, 266, 1280, 1305, 427, 1321,
	203, 1370, 483, 251, 374, 371, 577, 281, 272, 268,
	249, 316, 382, 425, 512, 419, 1412, 367, 1356, 0,
	493, 398, 0, 0, 0, 1335, 1395, 1344, 1382, 1330,
	1369, 1288, 1355, 1407, 1317, 1365, 1408, 322, 247, 324,
	202, 410, 494, 285, 0, 0, 0, 0, 4030, 944,
	0, 0, 0, 0, 4031, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 348, 357, 356, 337,
	338, 340, 342, 347, 354, 360, 1313, 1362, 1402, 1314,
	1364, 264, 320, 271, 263, 574, 1413, 1394, 1277, 1343,
	1401, 1338, 0, 0, 228, 1404, 1337, 0, 1367, 0,
	1419, 1272, 1358, 0, 1275, 1279, 1415, 1399, 1308, 274,
	0, 0, 0, 0, 0, 0, 0, 1334, 1345, 1379,
	1383, 1328, 0, 0, 0, 0, 0, 0, 0, 0,
	1306, 0, 1354, 0, 0, 0, 1284, 1276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1332, 0, 0, 0, 0, 1287, 0, 1307, 1380, 0,
	1270, 296, 1281, 399, 256, 0, 450, 1387, 1398, 1329,
	618, 1400, 1327, 1326, 1374, 1285, 1393, 1320, 362, 1283,
	329, 197, 224, 0, 1318, 409, 458, 470, 1392, 1303,
	1312, 252, 1310, 468, 423, 596, 232, 283, 455, 429,
	466, 437, 286, 1353, 1372, 467, 369, 579, 447, 593,
	619, 620, 262, 403, 605, 516, 613, 637, 225, 259,
	417, 501, 599, 490, 394, 575, 576, 328, 489, 294,
	201, 366, 625, 223, 476, 368, 241, 230, 581, 602,
	298, 288, 453, 632, 212, 511, 591, 238, 480, 0,
	0, 640, 246, 500, 214, 588, 499, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 583,
	584, 255, 641, 227, 612, 219, 1282, 611, 405, 578,
	589, 391, 380, 218, 587, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 600, 0, 207, 0, 495, 601, 642, 449, 211,
	233, 234, 236, 1298, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 1388, 573, 594, 606,
	617, 623, 624, 626, 627, 628, 629, 630, 633, 631,
	404, 310, 491, 332, 370, 1377, 1418, 422, 469, 239,
	598, 492, 199, 1292, 1297, 1290, 0, 253, 254, 1359,
	569, 1293, 1291, 1348, 1349, 1294, 1409, 1410, 1411, 1396,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 638, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 1381, 1286,
	0, 1295, 1296, 395, 1390, 585, 586, 661, 381, 482,
	595, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 572, 311, 215, 216, 217, 518, 519, 520,
	521, 609, 610, 614, 204, 459, 460, 461, 462, 291,
	604, 308, 465, 464, 330, 331, 376, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 1352, 196, 220, 365, 1414, 451,
	287, 639, 608, 603, 205, 222, 1289, 261, 1301, 1309,
	0, 1315, 1323, 1324, 1336, 1339, 1340, 1341, 1342, 1360,
	1361, 1363, 1371, 1373, 1376, 1378, 1385, 1397, 1417, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 615, 621,
	477, 300, 301, 441, 442, 313, 314, 635, 636, 299,
	592, 622, 590, 634, 616, 435, 375, 1351, 1357, 378,
	280, 304, 319, 1366, 607, 498, 226, 463, 289, 250,
	1384, 1386, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 481, 513,
	514, 515, 517, 392, 265, 430, 1347, 1375, 373, 570,
	571, 315, 393, 0, 0, 0, 0, 1403, 1389, 522,
	0, 1331, 1406, 1300, 1319, 1416, 1322, 1325, 1368, 1278,
	1346, 413, 1316, 1271, 1304, 1273, 1311, 1274, 1302, 1333,
	269, 1299, 1391, 1350, 1405, 363, 266, 1280, 1305, 427,
	1321, 203, 1370, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 1412, 367, 1356,
	0, 493, 398, 0, 0, 0, 1335, 1395, 1344, 1382,
	1330, 1369, 1288, 1355, 1407, 1317, 1365, 1408, 322, 247,
	324, 202, 410, 494, 285, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 1313, 1362, 1402,
	1314, 1364, 264, 320, 271, 263, 574, 1413, 1394, 1277,
	1343, 1401, 1338, 0, 0, 228, 1404, 1337, 0, 1367,
	0, 1419, 1272, 1358, 0, 1275, 1279, 1415, 1399, 1308,
	274, 0, 0, 0, 0, 0, 0, 0, 1334, 1345,
	1379, 1383, 1328, 0, 0, 0, 0, 0, 0, 3191,
	0, 1306, 0, 1354, 0, 0, 0, 1284, 1276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1332, 0, 0, 0, 0, 1287, 0, 1307, 1380,
	0, 1270, 296, 1281, 399, 256, 0, 450, 1387, 1398,
	1329, 618, 1400, 1327, 1326, 1374, 1285, 1393, 1320, 362,
	1283, 329, 197, 224, 0, 1318, 409, 458, 470, 1392,
	1303, 1312, 252, 1310, 468, 423, 596, 232, 283, 455,
	429, 466, 437, 286, 1353, 1372, 467, 369, 579, 447,
	593, 619, 620, 262, 403, 605, 516, 613, 637, 225,
	259, 417, 501, 599, 490, 394, 575, 576, 328, 489,
	294, 201, 366, 625, 223, 476, 368, 241, 230, 581,
	602, 298, 288, 453, 632, 212, 511, 591, 238, 480,
	0, 0, 640, 246, 500, 214, 588, 499, 390, 325,
	326, 213, 0, 454, 267, 292, 0, 0, 257, 412,
	583, 584, 255, 641, 227, 612, 219, 1282, 611, 405,
	578, 589, 391, 380, 218, 587, 389, 379, 333, 352,
	353, 279, 306, 444, 372, 445, 305, 307, 401, 400,
	402, 206, 600, 0, 207, 0, 495, 601, 642, 449,
	211, 233, 234, 236, 1298, 278, 282, 290, 293, 302,
	303, 312, 364, 416, 443, 439, 448, 1388, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 310, 491, 332, 370, 1377, 1418, 422, 469,
	239, 598, 492, 199, 1292, 1297, 1290, 0, 253, 254,
	1359, 569, 1293, 1291, 1348, 1349, 1294, 1409, 1410, 1411,
	1396, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 1381,
	1286, 0, 1295, 1296, 395, 1390, 585, 586, 661, 381,
	482, 595, 334, 346, 349, 339, 358, 0, 359, 335,
	336, 341, 343, 344, 345, 350, 351, 355, 361, 248,
	209, 387, 396, 572, 311, 215, 216, 217, 518, 519,
	520, 521, 609, 610, 614, 204, 459, 460, 461, 462,
	291, 604, 308, 465, 464, 330, 331, 376, 446, 534,
	536, 547, 551, 553, 555, 561, 564, 535, 537, 548,
	552, 554, 556, 562, 565, 524, 526, 528, 530, 543,
	542, 539, 567, 568, 545, 550, 529, 541, 546, 559,
	566, 563, 523, 527, 531, 540, 558, 557, 538, 549,
	560, 544, 532, 525, 533, 1352, 196, 220, 365, 1414,
	451, 287, 639, 608, 603, 205, 222, 1289, 261, 1301,
	1309, 0, 1315, 1323, 1324, 1336, 1339, 1340, 1341, 1342,
	1360, 1361, 1363, 1371, 1373, 1376, 1378, 1385, 1397, 1417,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 300, 301, 441, 442, 313, 314, 635, 636,
	299, 592, 622, 590, 634, 616, 435, 375, 1351, 1357,
	378, 280, 304, 319, 1366, 607, 498, 226, 463, 289,
	250, 1384, 1386, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 481,
	513, 514, 515, 517, 392, 265, 430, 1347, 1375, 373,
	570, 571, 315, 393, 0, 0, 0, 0, 1403, 1389,
	522, 0, 1331, 1406, 1300, 1319, 1416, 1322, 1325, 1368,
	1278, 1346, 413, 1316, 1271, 1304, 1273, 1311, 1274, 1302,
	1333, 269, 1299, 1391, 1350, 1405, 363, 266, 1280, 1305,
	427, 1321, 203, 1370, 483, 251, 374, 371, 577, 281,
	272, 268, 249, 316, 382, 425, 512, 419, 1412, 367,
	1356, 0, 493, 398, 0, 0, 0, 1335, 1395, 1344,
	1382, 1330, 1369, 1288, 1355, 1407, 1317, 1365, 1408, 322,
	247, 324, 202, 410, 494, 285, 0, 0, 0, 0,
	0, 711, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 348, 357,
	356, 337, 338, 340, 342, 347, 354, 360, 1313, 1362,
	1402, 1314, 1364, 264, 320, 271, 263, 574, 1413, 1394,
	1277, 1343, 1401, 1338, 0, 0, 228, 1404, 1337, 0,
	1367, 0, 1419, 1272, 1358, 0, 1275, 1279, 1415, 1399,
	1308, 274, 0, 0, 0, 0, 0, 0, 0, 1334,
	1345, 1379, 1383, 1328, 0, 0, 0, 0, 0, 0,
	3152, 0, 1306, 0, 1354, 0, 0, 0, 1284, 1276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1332, 0, 0, 0, 0, 1287, 0, 1307,
	1380, 0, 1270, 296, 1281, 399, 256, 0, 450, 1387,
	1398, 1329, 618, 1400, 1327, 1326, 1374, 1285, 1393, 1320,
	362, 1283, 329, 197, 224, 0, 1318, 409, 458, 470,
	1392, 1303, 1312, 252, 1310, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 1353, 1372, 467, 369, 579,
	447, 593, 619, 620, 262, 403, 605, 516, 613, 637,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 625, 223, 476, 368, 241, 230,
	581, 602, 298, 288, 453, 632, 212, 511, 591, 238,
	480, 0, 0, 640, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 641, 227, 612, 219, 1282, 611,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 601, 642,
	449, 211, 233, 234, 236, 1298, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 1388, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 310, 491, 332, 370, 1377, 1418, 422,
	469, 239, 598, 492, 199, 1292, 1297, 1290, 0, 253,
	254, 1359, 569, 1293, 1291, 1348, 1349, 1294, 1409, 1410,
	1411, 1396, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	1381, 1286, 0, 1295, 1296, 395, 1390, 585, 586, 661,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 609, 610, 614, 204, 459, 460, 461,
	462, 291, 604, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 1352, 196, 220, 365,
	1414, 451, 287, 639, 608, 603, 205, 222, 1289, 261,
	1301, 1309, 0, 1315, 1323, 1324, 1336, 1339, 1340, 1341,
	1342, 1360, 1361, 1363, 1371, 1373, 1376, 1378, 1385, 1397,
	1417, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 300, 301, 441, 442, 313, 314, 635,
	636, 299, 592, 622, 590, 634, 616, 435, 375, 1351,
	1357, 378, 280, 304, 319, 1366, 607, 498, 226, 463,
	289, 250, 1384, 1386, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 1347, 1375,
	373, 570, 571, 315, 393, 0, 0, 0, 0, 1403,
	1389, 522, 0, 1331, 1406, 1300, 1319, 1416, 1322, 1325,
	1368, 1278, 1346, 413, 1316, 1271, 1304, 1273, 1311, 1274,
	1302, 1333, 269, 1299, 1391, 1350, 1405, 363, 266, 1280,
	1305, 427, 1321, 203, 1370, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 1412,
	367, 1356, 0, 493, 398, 0, 0, 0, 1335, 1395,
	1344, 1382, 1330, 1369, 1288, 1355, 1407, 1317, 1365, 1408,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 1313,
	1362, 1402, 1314, 1364, 264, 320, 271, 263, 574, 1413,
	1394, 1277, 1343, 1401, 1338, 0, 0, 228, 1404, 1337,
	0, 1367, 0, 1419, 1272, 1358, 0, 1275, 1279, 1415,
	1399, 1308, 274, 0, 0, 0, 0, 0, 0, 0,
	1334, 1345, 1379, 1383, 1328, 0, 0, 0, 0, 0,
	0, 2369, 0, 1306, 0, 1354, 0, 0, 0, 1284,
	1276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1332, 0, 0, 0, 0, 1287, 0,
	1307, 1380, 0, 1270, 296, 1281, 399, 256, 0, 450,
	1387, 1398, 1329, 618, 1400, 1327, 1326, 1374, 1285, 1393,
	1320, 362, 1283, 329, 197, 224, 0, 1318, 409, 458,
	470, 1392, 1303, 1312, 252, 1310, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 1353, 1372, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 1282,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 1298, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 1388,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 1377, 1418,
	422, 469, 239, 598, 492, 199, 1292, 1297, 1290, 0,
	253, 254, 1359, 569, 1293, 1291, 1348, 1349, 1294, 1409,
	1410, 1411, 1396, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 1381, 1286, 0, 1295, 1296, 395, 1390, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 1352, 196, 220,
	365, 1414, 451, 287, 639, 608, 603, 205, 222, 1289,
	261, 1301, 1309, 0, 1315, 1323, 1324, 1336, 1339, 1340,
	1341, 1342, 1360, 1361, 1363, 1371, 1373, 1376, 1378, 1385,
	1397, 1417, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	1351, 1357, 378, 280, 304, 319, 1366, 607, 498, 226,
	463, 289, 250, 1384, 1386, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 1347,
	1375, 373, 570, 571, 315, 393, 0, 0, 0, 0,
	1403, 1389, 522, 0, 1331, 1406, 1300, 1319, 1416, 1322,
	1325, 1368, 1278, 1346, 413, 1316, 1271, 1304, 1273, 1311,
	1274, 1302, 1333, 269, 1299, 1391, 1350, 1405, 363, 266,
	1280, 1305, 427, 1321, 203, 1370, 483, 251, 374, 371,
	577, 281, 272, 268, 249, 316, 382, 425, 512, 419,
	1412, 367, 1356, 0, 493, 398, 0, 0, 0, 1335,
	1395, 1344, 1382, 1330, 1369, 1288, 1355, 1407, 1317, 1365,
	1408, 322, 247, 324, 202, 410, 494, 285, 0, 95,
	0, 0, 0, 711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	348, 357, 356, 337, 338, 340, 342, 347, 354, 360,
	1313, 1362, 1402, 1314, 1364, 264, 320, 271, 263, 574,
	1413, 1394, 1277, 1343, 1401, 1338, 0, 0, 228, 1404,
	1337, 0, 1367, 0, 1419, 1272, 1358, 0, 1275, 1279,
	1415, 1399, 1308, 274, 0, 0, 0, 0, 0, 0,
	0, 1334, 1345, 1379, 1383, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 1306, 0, 1354, 0, 0, 0,
	1284, 1276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1332, 0, 0, 0, 0, 1287,
	0, 1307, 1380, 0, 1270, 296, 1281, 399, 256, 0,
	450, 1387, 1398, 1329, 618, 1400, 1327, 1326, 1374, 1285,
	1393, 1320, 362, 1283, 329, 197, 224, 0, 1318, 409,
	458, 470, 1392, 1303, 1312, 252, 1310, 468, 423, 596,
	232, 283, 455, 429, 466, 437, 286, 1353, 1372, 467,
	369, 579, 447, 593, 619, 620, 262, 403, 605, 516,
	613, 637, 225, 259, 417, 501, 599, 490, 394, 575,
	576, 328, 489, 294, 201, 366, 625, 223, 476, 368,
	241, 230, 581, 602, 298, 288, 453, 632, 212, 511,
	591, 238, 480, 0, 0, 640, 246, 500, 214, 588,
	499, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 583, 584, 255, 641, 227, 612, 219,
	1282, 611, 405, 578, 589, 391, 380, 218, 587, 389,
	379, 333, 352, 353, 279, 306, 444, 372, 445, 305,
	307, 401, 400, 402, 206, 600, 0, 207, 0, 495,
	601, 642, 449, 211, 233, 234, 236, 1298, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	1388, 573, 594, 606, 617, 623, 624, 626, 627, 628,
	629, 630, 633, 631, 404, 310, 491, 332, 370, 1377,
	1418, 422, 469, 239, 598, 492, 199, 1292, 1297, 1290,
	0, 253, 254, 1359, 569, 1293, 1291, 1348, 1349, 1294,
	1409, 1410, 1411, 1396, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 638, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 1381, 1286, 0, 1295, 1296, 395, 1390, 585,
	586, 661, 381, 482, 595, 334, 346, 349, 339, 358,
	0, 359, 335, 336, 341, 343, 344, 345, 350, 351,
	355, 361, 248, 209, 387, 396, 572, 311, 215, 216,
	217, 518, 519, 520, 521, 609, 610, 614, 204, 459,
	460, 461, 462, 291, 604, 308, 465, 464, 330, 331,
	376, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 1352, 196,
	220, 365, 1414, 451, 287, 639, 608, 603, 205, 222,
	1289, 261, 1301, 1309, 0, 1315, 1323, 1324, 1336, 1339,
	1340, 1341, 1342, 1360, 1361, 1363, 1371, 1373, 1376, 1378,
	1385, 1397, 1417, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 615, 621, 477, 300, 301, 441, 442, 313,
	314, 635, 636, 299, 592, 622, 590, 634, 616, 435,
	375, 1351, 1357, 378, 280, 304, 319, 1366, 607, 498,
	226, 463, 289, 250, 1384, 1386, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 481, 513, 514, 515, 517, 392, 265, 430,
	1347, 1375, 373, 570, 571, 315, 393, 0, 0, 0,
	0, 1403, 1389, 522, 0, 1331, 1406, 1300, 1319, 1416,
	1322, 1325, 1368, 1278, 1346, 413, 1316, 1271, 1304, 1273,
	1311, 1274, 1302, 1333, 269, 1299, 1391, 1350, 1405, 363,
	266, 1280, 1305, 427, 1321, 203, 1370, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 1412, 367, 1356, 0, 493, 398, 0, 0, 0,
	1335, 1395, 1344, 1382, 1330, 1369, 1288, 1355, 1407, 1317,
	1365, 1408, 322, 247, 324, 202, 410, 494, 285, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 1313, 1362, 1402, 1314, 1364, 264, 320, 271, 263,
	574, 1413, 1394, 1277, 1343, 1401, 1338, 0, 0, 228,
	1404, 1337, 0, 1367, 0, 1419, 1272, 1358, 0, 1275,
	1279, 1415, 1399, 1308, 274, 0, 0, 0, 0, 0,
	0, 0, 1334, 1345, 1379, 1383, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 1306, 0, 1354, 0, 0,
	0, 1284, 1276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1332, 0, 0, 0, 0,
	1287, 0, 1307, 1380, 0, 1270, 296, 1281, 399, 256,
	0, 450, 1387, 1398, 1329, 618, 1400, 1327, 1326, 1374,
	1285, 1393, 1320, 362, 1283, 329, 197, 224, 0, 1318,
	409, 458, 470, 1392, 1303, 1312, 252, 1310, 468, 423,
	596, 232, 283, 455, 429, 466, 437, 286, 1353, 1372,
	467, 369, 579, 447, 593, 619, 620, 262, 403, 605,
	516, 613, 637, 225, 259, 417, 501, 599, 490, 394,
	575, 576, 328, 489, 294, 201, 366, 625, 223, 476,
	368, 241, 230, 581, 602, 298, 288, 453, 632, 212,
	511, 591, 238, 480, 0, 0, 640, 246, 500, 214,
	588, 499, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 583, 584, 255, 641, 227, 612,
	219, 1282, 611, 405, 578, 589, 391, 380, 218, 587,
	389, 379, 333, 352, 353, 279, 306, 444, 372, 445,
	305, 307, 401, 400, 402, 206, 600, 0, 207, 0,
	495, 601, 642, 449, 211, 233, 234, 236, 1298, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 1388, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 310, 491, 332, 370,
	1377, 1418, 422, 469, 239, 598, 492, 199, 1292, 1297,
	1290, 0, 253, 254, 1359, 569, 1293, 1291, 1348, 1349,
	1294, 1409, 1410, 1411, 1396, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 1381, 1286, 0, 1295, 1296, 395, 1390,
	585, 586, 661, 381, 482, 595, 334, 346, 349, 339,
	358, 0, 359, 335, 336, 341, 343, 344, 345, 350,
	351, 355, 361, 248, 209, 387, 396, 572, 311, 215,
	216, 217, 518, 519, 520, 521, 609, 610, 614, 204,
	459, 460, 461, 462, 291, 604, 308, 465, 464, 330,
	331, 376, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 1352,
	196, 220, 365, 1414, 451, 287, 639, 608, 603, 205,
	222, 1289, 261, 1301, 1309, 0, 1315, 1323, 1324, 1336,
	1339, 1340, 1341, 1342, 1360, 1361, 1363, 1371, 1373, 1376,
	1378, 1385, 1397, 1417, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 309, 317, 318, 321,
	327, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 300, 301, 441, 442,
	313, 314, 635, 636, 299, 592, 622, 590, 634, 616,
	435, 375, 1351, 1357, 378, 280, 304, 319, 1366, 607,
	498, 226, 463, 289, 250, 1384, 1386, 210, 245, 229,
	258, 273, 276, 323, 388, 397, 426, 431, 295, 270,
	243, 456, 240, 481, 513, 514, 515, 517, 392, 265,
	430, 1347, 1375, 373, 570, 571, 315, 393, 0, 0,
	0, 0, 1403, 1389, 522, 0, 1331, 1406, 1300, 1319,
	1416, 1322, 1325, 1368, 1278, 1346, 413, 1316, 1271, 1304,
	1273, 1311, 1274, 1302, 1333, 269, 1299, 1391, 1350, 1405,
	363, 266, 1280, 1305, 427, 1321, 203, 1370, 483, 251,
	374, 371, 577, 281, 272, 268, 249, 316, 382, 425,
	512, 419, 1412, 367, 1356, 0, 493, 398, 0, 0,
	0, 1335, 1395, 1344, 1382, 1330, 1369, 1288, 1355, 1407,
	1317, 1365, 1408, 322, 247, 324, 202, 410, 494, 285,
	0, 0, 0, 0, 0, 711, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 348, 357, 356, 337, 338, 340, 342, 347,
	354, 360, 1313, 1362, 1402, 1314, 1364, 264, 320, 271,
	263, 574, 1413, 1394, 1277, 1343, 1401, 1338, 0, 0,
	228, 1404, 1337, 0, 1367, 0, 1419, 1272, 1358, 0,
	1275, 1279, 1415, 1399, 1308, 274, 0, 0, 0, 0,
	0, 0, 0, 1334, 1345, 1379, 1383, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 1306, 0, 1354, 0,
	0, 0, 1284, 1276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1332, 0, 0, 0,
	0, 1287, 0, 1307, 1380, 0, 1270, 296, 1281, 399,
	256, 0, 450, 1387, 1398, 1329, 618, 1400, 1327, 1326,
	1374, 1285, 1393, 1320, 362, 1283, 329, 197, 224, 0,
	1318, 409, 458, 470, 1392, 1303, 1312, 252, 1310, 468,
	423, 596, 232, 283, 455, 429, 466, 437, 286, 1353,
	1372, 467, 369, 579, 447, 593, 619, 620, 262, 403,
	605, 516, 613, 637, 225, 259, 417, 501, 599, 490,
	394, 575, 576, 328, 489, 294, 201, 366, 625, 223,
	476, 368, 241, 230, 581, 602, 298, 288, 453, 632,
	212, 511, 591, 238, 480, 0, 0, 640, 246, 500,
	214, 588, 499, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 583, 584, 255, 641, 227,
	612, 219, 1282, 611, 405, 578, 589, 391, 380, 218,
	587, 389, 379, 333, 352, 353, 279, 306, 444, 372,
	445, 305, 307, 401, 400, 402, 206, 600, 0, 207,
	0, 495, 601, 642, 449, 211, 233, 234, 236, 1298,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 1388, 573, 594, 606, 617, 623, 624, 626,
	627, 628, 629, 630, 633, 631, 404, 310, 491, 332,
	370, 1377, 1418, 422, 469, 239, 598, 492, 199, 1292,
	1297, 1290, 0, 253, 254, 1359, 569, 1293, 1291, 1348,
	1349, 1294, 1409, 1410, 1411, 1396, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 638, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 1381, 1286, 0, 1295, 1296, 395,
	1390, 585, 586, 661, 381, 482, 595, 334, 346, 349,
	339, 358, 0, 359, 335, 336, 341, 343, 344, 345,
	350, 351, 355, 361, 248, 209, 387, 396, 572, 311,
	215, 216, 217, 518, 519, 520, 521, 609, 610, 614,
	204, 459, 460, 461, 462, 291, 604, 308, 465, 464,
	330, 331, 376, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	1352, 196, 220, 365, 1414, 451, 287, 639, 608, 603,
	205, 222, 1289, 261, 1301, 1309, 0, 1315, 1323, 1324,
	1336, 1339, 1340, 1341, 1342, 1360, 1361, 1363, 1371, 1373,
	1376, 1378, 1385, 1397, 1417, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 615, 621, 477, 300, 301, 441,
	442, 313, 314, 635, 636, 299, 592, 622, 590, 634,
	616, 435, 375, 1351, 1357, 378, 280, 304, 319, 1366,
	607, 498, 226, 463, 289, 250, 1384, 1386, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 481, 513, 514, 515, 517, 392,
	265, 430, 1347, 1375, 373, 570, 571, 315, 393, 0,
	0, 0, 0, 1403, 1389, 522, 0, 1331, 1406, 1300,
	1319, 1416, 1322, 1325, 1368, 1278, 1346, 413, 1316, 1271,
	1304, 1273, 1311, 1274, 1302, 1333, 269, 1299, 1391, 1350,
	1405, 363, 266, 1280, 1305, 427, 1321, 203, 1370, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 1412, 367, 1356, 0, 493, 398, 0,
	0, 0, 1335, 1395, 1344, 1382, 1330, 1369, 1288, 1355,
	1407, 1317, 1365, 1408, 322, 247, 324, 202, 410, 494,
	285, 0, 0, 0, 0, 0, 944, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 1313, 1362, 1402, 1314, 1364, 264, 320,
	271, 263, 574, 1413, 1394, 1277, 1343, 1401, 1338, 0,
	0, 228, 1404, 1337, 0, 1367, 0, 1419, 1272, 1358,
	0, 1275, 1279, 1415, 1399, 1308, 274, 0, 0, 0,
	0, 0, 0, 0, 1334, 1345, 1379, 1383, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 1306, 0, 1354,
	0, 0, 0, 1284, 1276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1332, 0, 0,
	0, 0, 1287, 0, 1307, 1380, 0, 1270, 296, 1281,
	399, 256, 0, 450, 1387, 1398, 1329, 618, 1400, 1327,
	1326, 1374, 1285, 1393, 1320, 362, 1283, 329, 197, 224,
	0, 1318, 409, 458, 470, 1392, 1303, 1312, 252, 1310,
	468, 423, 596, 232, 283, 455, 429, 466, 437, 286,
	1353, 1372, 467, 369, 579, 447, 593, 619, 620, 262,
	403, 605, 516, 613, 637, 225, 259, 417, 501, 599,
	490, 394, 575, 576, 328, 489, 294, 201, 366, 625,
	223, 476, 368, 241, 230, 581, 602, 298, 288, 453,
	632, 212, 511, 591, 238, 480, 0, 0, 640, 246,
	500, 214, 588, 499, 390, 325, 326, 213, 0, 454,
	267, 292, 0, 0, 257, 412, 583, 584, 255, 641,
	227, 612, 219, 1282, 611, 405, 578, 589, 391, 380,
	218, 587, 389, 379, 333, 352, 353, 279, 306, 444,
	372, 445, 305, 307, 401, 400, 402, 206, 600, 0,
	207, 0, 495, 601, 642, 449, 211, 233, 234, 236,
	1298, 278, 282, 290, 293, 302, 303, 312, 364, 416,
	443, 439, 448, 1388, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 310, 491,
	332, 370, 1377, 1418, 422, 469, 239, 598, 492, 199,
	1292, 1297, 1290, 0, 253, 254, 1359, 569, 1293, 1291,
	1348, 1349, 1294, 1409, 1410, 1411, 1396, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 1381, 1286, 0, 1295, 1296,
	395, 1390, 585, 586, 661, 381, 482, 595, 334, 346,
	349, 339, 358, 0, 359, 335, 336, 341, 343, 344,
	345, 350, 351, 355, 361, 248, 209, 387, 396, 572,
	311, 215, 216, 217, 518, 519, 520, 521, 609, 610,
	614, 204, 459, 460, 461, 462, 291, 604, 308, 465,
	464, 330, 331, 376, 446, 534, 536, 547, 551, 553,
	555, 561, 564, 535, 537, 548, 552, 554, 556, 562,
	565, 524, 526, 528, 530, 543, 542, 539, 567, 568,
	545, 550, 529, 541, 546, 559, 566, 563, 523, 527,
	531, 540, 558, 557, 538, 549, 560, 544, 532, 525,
	533, 1352, 196, 220, 365, 1414, 451, 287, 639, 608,
	603, 205, 222, 1289, 261, 1301, 1309, 0, 1315, 1323,
	1324, 1336, 1339, 1340, 1341, 1342, 1360, 1361, 1363, 1371,
	1373, 1376, 1378, 1385, 1397, 1417, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 309, 317,
	318, 321, 327, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 300, 301,
	441, 442, 313, 314, 635, 636, 299, 592, 622, 590,
	634, 616, 435, 375, 1351, 1357, 378, 280, 304, 319,
	1366, 607, 498, 226, 463, 289, 250, 1384, 1386, 210,
	245, 229, 258, 273, 276, 323, 388, 397, 426, 431,
	295, 270, 243, 456, 240, 481, 513, 514, 515, 517,
	392, 265, 430, 1347, 1375, 373, 570, 571, 315, 393,
	0, 0, 0, 0, 0, 0, 522, 0, 764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 751, 0, 0, 0, 269, 756, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 763, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 758, 759, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 95, 0, 0, 1008, 944, 735, 910,
	948, 1009, 961, 962, 963, 949, 0, 237, 950, 951,
	244, 952, 0, 909, 794, 796, 795, 859, 860, 861,
	862, 863, 864, 865, 792, 957, 964, 965, 0, 264,
	320, 271, 263, 574, 0, 0, 2191, 2192, 2193, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	731, 748, 0, 762, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 746, 0, 0, 0, 0,
	904, 0, 747, 0, 0, 755, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 903, 0, 0, 618, 0,
	0, 901, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 954,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 955, 956, 255,
	641, 800, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 808, 809, 279, 306,
	885, 884, 883, 305, 307, 881, 882, 880, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	891, 913, 902, 768, 769, 892, 893, 917, 894, 771,
	772, 914, 915, 765, 766, 770, 916, 918, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 905, 754, 753, 0,
	760, 761, 0, 790, 791, 793, 797, 798, 799, 810,
	857, 858, 866, 868, 869, 867, 870, 871, 872, 875,
	876, 877, 878, 873, 874, 879, 773, 777, 774, 775,
	776, 788, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 789, 928, 929, 930, 931, 932, 933, 803,
	807, 806, 804, 805, 801, 802, 829, 828, 830, 831,
	832, 833, 834, 835, 837, 836, 838, 839, 840, 841,
	842, 843, 811, 812, 815, 816, 814, 813, 817, 826,
	827, 818, 819, 820, 821, 822, 823, 825, 824, 844,
	845, 846, 847, 848, 850, 849, 853, 854, 852, 851,
	856, 855, 752, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 919, 261, 920, 0, 0, 924,
	0, 0, 0, 926, 925, 0, 927, 889, 888, 0,
	0, 921, 922, 0, 923, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 934,
	935, 936, 937, 938, 939, 940, 941, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 959, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 751, 0,
	0, 0, 269, 756, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 763,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	758, 759, 0, 0, 0, 0, 0, 0, 2398, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 95, 0,
	0, 1008, 944, 735, 910, 948, 1009, 961, 962, 963,
	949, 0, 237, 950, 951, 244, 952, 0, 909, 794,
	796, 795, 859, 860, 861, 862, 863, 864, 865, 792,
	957, 964, 965, 2399, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 731, 748, 0, 762, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	746, 0, 0, 0, 0, 904, 0, 747, 0, 0,
	755, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	903, 0, 0, 618, 0, 0, 901, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 954, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 955, 956, 255, 641, 800, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 808, 809, 279, 306, 885, 884, 883, 305, 307,
	881, 882, 880, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 891, 913, 902, 768, 769,
	892, 893, 917, 894, 771, 772, 914, 915, 765, 766,
	770, 916, 918, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 905, 754, 753, 0, 760, 761, 0, 790, 791,
	793, 797, 798, 799, 810, 857, 858, 866, 868, 869,
	867, 870, 871, 872, 875, 876, 877, 878, 873, 874,
	879, 773, 777, 774, 775, 776, 788, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 789, 928, 929,
	930, 931, 932, 933, 803, 807, 806, 804, 805, 801,
	802, 829, 828, 830, 831, 832, 833, 834, 835, 837,
	836, 838, 839, 840, 841, 842, 843, 811, 812, 815,
	816, 814, 813, 817, 826, 827, 818, 819, 820, 821,
	822, 823, 825, 824, 844, 845, 846, 847, 848, 850,
	849, 853, 854, 852, 851, 856, 855, 752, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 919,
	261, 920, 0, 0, 924, 0, 0, 0, 926, 925,
	0, 927, 889, 888, 0, 0, 921, 922, 0, 923,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 934, 935, 936, 937, 938, 939,
	940, 941, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 959, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 86, 522, 0, 764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 751, 0, 0, 0, 269, 756, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 763, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 758, 759, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 95, 0, 0, 1008, 944, 735, 910,
	948, 1009, 961, 962, 963, 949, 0, 237, 950, 951,
	244, 952, 0, 909, 794, 796, 795, 859, 860, 861,
	862, 863, 864, 865, 792, 957, 964, 965, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	731, 748, 0, 762, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 746, 0, 0, 0, 0,
	904, 0, 747, 0, 0, 755, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 903, 0, 0, 618, 0,
	0, 901, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 954,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 955, 956, 255,
	641, 800, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 808, 809, 279, 306,
	885, 884, 883, 305, 307, 881, 882, 880, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	891, 913, 902, 768, 769, 892, 893, 917, 894, 771,
	772, 914, 915, 765, 766, 770, 916, 918, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 905, 754, 753, 0,
	760, 761, 0, 790, 791, 793, 797, 798, 799, 810,
	857, 858, 866, 868, 869, 867, 870, 871, 872, 875,
	876, 877, 878, 873, 874, 879, 773, 777, 774, 775,
	776, 788, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 789, 928, 929, 930, 931, 932, 933, 803,
	807, 806, 804, 805, 801, 802, 829, 828, 830, 831,
	832, 833, 834, 835, 837, 836, 838, 839, 840, 841,
	842, 843, 811, 812, 815, 816, 814, 813, 817, 826,
	827, 818, 819, 820, 821, 822, 823, 825, 824, 844,
	845, 846, 847, 848, 850, 849, 853, 854, 852, 851,
	856, 855, 752, 196, 220, 365, 94, 451, 287, 639,
	608, 603, 205, 222, 919, 261, 920, 0, 0, 924,
	0, 0, 0, 926, 925, 0, 927, 889, 888, 0,
	0, 921, 922, 0, 923, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 934,
	935, 936, 937, 938, 939, 940, 941, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 959, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 751, 0,
	0, 0, 269, 756, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 763,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	758, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 95, 0,
	0, 1008, 944, 735, 910, 948, 1009, 961, 962, 963,
	949, 0, 237, 950, 951, 244, 952, 0, 909, 794,
	796, 795, 859, 860, 861, 862, 863, 864, 865, 792,
	957, 964, 965, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 731, 748, 0, 762, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	746, 0, 0, 0, 0, 904, 0, 747, 0, 0,
	755, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	903, 0, 0, 618, 0, 0, 901, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 954, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 4016, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 955, 956, 255, 641, 800, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 808, 809, 279, 306, 885, 884, 883, 305, 307,
	881, 882, 880, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 891, 913, 902, 768, 769,
	892, 893, 917, 894, 771, 772, 914, 915, 765, 766,
	770, 916, 918, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 905, 754, 753, 0, 760, 761, 0, 790, 791,
	793, 797, 798, 799, 810, 857, 858, 866, 868, 869,
	867, 870, 871, 872, 875, 876, 877, 878, 873, 874,
	879, 773, 777, 774, 775, 776, 788, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 789, 928, 929,
	930, 931, 932, 933, 803, 807, 806, 804, 805, 801,
	802, 829, 828, 830, 831, 832, 833, 834, 835, 837,
	836, 838, 839, 840, 841, 842, 843, 811, 812, 815,
	816, 814, 813, 817, 826, 827, 818, 819, 820, 821,
	822, 823, 825, 824, 844, 845, 846, 847, 848, 850,
	849, 853, 854, 852, 851, 856, 855, 752, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 919,
	261, 920, 0, 0, 924, 0, 0, 0, 926, 925,
	0, 927, 889, 888, 0, 0, 921, 922, 0, 923,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 934, 935, 936, 937, 938, 939,
	940, 941, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 959, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 751, 0, 0, 0, 269, 756, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 763, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 758, 759, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 95, 0, 1725, 1008, 944, 735, 910,
	948, 1009, 961, 962, 963, 949, 0, 237, 950, 951,
	244, 952, 0, 909, 794, 796, 795, 859, 860, 861,
	862, 863, 864, 865, 792, 957, 964, 965, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	731, 748, 0, 762, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 746, 0, 0, 0, 0,
	904, 0, 747, 0, 0, 755, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 903, 0, 0, 618, 0,
	0, 901, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 954,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 955, 956, 255,
	641, 800, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 808, 809, 279, 306,
	885, 884, 883, 305, 307, 881, 882, 880, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	891, 913, 902, 768, 769, 892, 893, 917, 894, 771,
	772, 914, 915, 765, 766, 770, 916, 918, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 905, 754, 753, 0,
	760, 761, 0, 790, 791, 793, 797, 798, 799, 810,
	857, 858, 866, 868, 869, 867, 870, 871, 872, 875,
	876, 877, 878, 873, 874, 879, 773, 777, 774, 775,
	776, 788, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 789, 928, 929, 930, 931, 932, 933, 803,
	807, 806, 804, 805, 801, 802, 829, 828, 830, 831,
	832, 833, 834, 835, 837, 836, 838, 839, 840, 841,
	842, 843, 811, 812, 815, 816, 814, 813, 817, 826,
	827, 818, 819, 820, 821, 822, 823, 825, 824, 844,
	845, 846, 847, 848, 850, 849, 853, 854, 852, 851,
	856, 855, 752, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 919, 261, 920, 0, 0, 924,
	0, 0, 0, 926, 925, 0, 927, 889, 888, 0,
	0, 921, 922, 0, 923, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 934,
	935, 936, 937, 938, 939, 940, 941, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 959, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 751, 0,
	0, 0, 269, 756, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 763,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	758, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 95, 0,
	0, 1008, 944, 735, 910, 948, 1009, 961, 962, 963,
	949, 0, 237, 950, 951, 244, 952, 0, 909, 794,
	796, 795, 859, 860, 861, 862, 863, 864, 865, 792,
	957, 964, 965, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 731, 748, 0, 762, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	746, 1054, 0, 0, 0, 904, 0, 747, 0, 0,
	755, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	903, 0, 0, 618, 0, 0, 901, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 954, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 955, 956, 255, 641, 800, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 808, 809, 279, 306, 885, 884, 883, 305, 307,
	881, 882, 880, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 891, 913, 902, 768, 769,
	892, 893, 917, 894, 771, 772, 914, 915, 765, 766,
	770, 916, 918, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 905, 754, 753, 0, 760, 761, 0, 790, 791,
	793, 797, 798, 799, 810, 857, 858, 866, 868, 869,
	867, 870, 871, 872, 875, 876, 877, 878, 873, 874,
	879, 773, 777, 774, 775, 776, 788, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 789, 928, 929,
	930, 931, 932, 933, 803, 807, 806, 804, 805, 801,
	802, 829, 828, 830, 831, 832, 833, 834, 835, 837,
	836, 838, 839, 840, 841, 842, 843, 811, 812, 815,
	816, 814, 813, 817, 826, 827, 818, 819, 820, 821,
	822, 823, 825, 824, 844, 845, 846, 847, 848, 850,
	849, 853, 854, 852, 851, 856, 855, 752, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 919,
	261, 920, 0, 0, 924, 0, 0, 0, 926, 925,
	0, 927, 889, 888, 0, 0, 921, 922, 0, 923,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 934, 935, 936, 937, 938, 939,
	940, 941, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 959, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 751, 0, 0, 0, 269, 756, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 763, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 758, 759, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 95, 0, 0, 1008, 944, 735, 910,
	948, 1009, 961, 962, 963, 949, 0, 237, 950, 951,
	244, 952, 0, 909, 794, 796, 795, 859, 860, 861,
	862, 863, 864, 865, 792, 957, 964, 965, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	731, 748, 0, 762, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 746, 0, 0, 0, 0,
	904, 0, 747, 0, 0, 755, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 903, 0, 0, 618, 0,
	0, 901, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 954,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 955, 956, 255,
	641, 800, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 808, 809, 279, 306,
	885, 884, 883, 305, 307, 881, 882, 880, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	891, 913, 902, 768, 769, 892, 893, 917, 894, 771,
	772, 914, 915, 765, 766, 770, 916, 918, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 905, 754, 753, 0,
	760, 761, 0, 790, 791, 793, 797, 798, 799, 810,
	857, 858, 866, 868, 869, 867, 870, 871, 872, 875,
	876, 877, 878, 873, 874, 879, 773, 777, 774, 775,
	776, 788, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 789, 928, 929, 930, 931, 932, 933, 803,
	807, 806, 804, 805, 801, 802, 829, 828, 830, 831,
	832, 833, 834, 835, 837, 836, 838, 839, 840, 841,
	842, 843, 811, 812, 815, 816, 814, 813, 817, 826,
	827, 818, 819, 820, 821, 822, 823, 825, 824, 844,
	845, 846, 847, 848, 850, 849, 853, 854, 852, 851,
	856, 855, 752, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 919, 261, 920, 0, 0, 924,
	0, 0, 0, 926, 925, 0, 927, 889, 888, 0,
	0, 921, 922, 0, 923, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 934,
	935, 936, 937, 938, 939, 940, 941, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 959, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 751, 0,
	0, 0, 269, 756, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 763,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	758, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 95, 0,
	0, 1008, 944, 735, 910, 948, 1009, 961, 962, 963,
	949, 0, 237, 950, 951, 244, 952, 0, 909, 794,
	796, 795, 859, 860, 861, 862, 863, 864, 865, 792,
	957, 964, 965, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 731, 748, 0, 762, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	746, 0, 0, 0, 0, 904, 0, 747, 0, 0,
	755, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 3108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	903, 0, 0, 618, 0, 0, 901, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 954, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 955, 956, 255, 641, 800, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 808, 809, 279, 306, 885, 884, 883, 305, 307,
	881, 882, 880, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 891, 913, 902, 768, 769,
	892, 893, 917, 894, 771, 772, 914, 915, 765, 766,
	770, 916, 918, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 905, 754, 753, 0, 760, 761, 0, 790, 791,
	793, 797, 798, 799, 810, 857, 858, 866, 868, 869,
	867, 870, 871, 872, 875, 876, 877, 878, 873, 874,
	879, 773, 777, 774, 775, 776, 788, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 789, 928, 929,
	930, 931, 932, 933, 803, 807, 806, 804, 805, 801,
	802, 829, 828, 830, 831, 832, 833, 834, 835, 837,
	836, 838, 839, 840, 841, 842, 843, 811, 812, 815,
	816, 814, 813, 817, 826, 827, 818, 819, 820, 821,
	822, 823, 825, 824, 844, 845, 846, 847, 848, 850,
	849, 853, 854, 852, 851, 856, 855, 752, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 919,
	261, 920, 0, 0, 924, 0, 0, 0, 926, 925,
	0, 927, 889, 888, 0, 0, 921, 922, 0, 923,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 934, 935, 936, 937, 938, 939,
	940, 941, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 959, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 751, 0, 0, 0, 269, 756, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 763, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 758, 759, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 95, 0, 0, 1008, 944, 735, 910,
	948, 1009, 961, 962, 963, 949, 0, 237, 950, 951,
	244, 952, 0, 909, 794, 796, 795, 859, 860, 861,
	862, 863, 864, 865, 792, 957, 964, 965, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	731, 748, 0, 762, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 746, 0, 0, 0, 0,
	904, 0, 747, 0, 0, 755, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 3104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 903, 0, 0, 618, 0,
	0, 901, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 954,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 955, 956, 255,
	641, 800, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 808, 809, 279, 306,
	885, 884, 883, 305, 307, 881, 882, 880, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	891, 913, 902, 768, 769, 892, 893, 917, 894, 771,
	772, 914, 915, 765, 766, 770, 916, 918, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 905, 754, 753, 0,
	760, 761, 0, 790, 791, 793, 797, 798, 799, 810,
	857, 858, 866, 868, 869, 867, 870, 871, 872, 875,
	876, 877, 878, 873, 874, 879, 773, 777, 774, 775,
	776, 788, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 789, 928, 929, 930, 931, 932, 933, 803,
	807, 806, 804, 805, 801, 802, 829, 828, 830, 831,
	832, 833, 834, 835, 837, 836, 838, 839, 840, 841,
	842, 843, 811, 812, 815, 816, 814, 813, 817, 826,
	827, 818, 819, 820, 821, 822, 823, 825, 824, 844,
	845, 846, 847, 848, 850, 849, 853, 854, 852, 851,
	856, 855, 752, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 919, 261, 920, 0, 0, 924,
	0, 0, 0, 926, 925, 0, 927, 889, 888, 0,
	0, 921, 922, 0, 923, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 934,
	935, 936, 937, 938, 939, 940, 941, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 959, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 751, 0,
	0, 0, 269, 756, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 763,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	758, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 95, 0,
	0, 1008, 944, 1075, 910, 948, 1009, 961, 962, 963,
	949, 0, 237, 950, 951, 244, 952, 0, 909, 794,
	796, 795, 859, 860, 861, 862, 863, 864, 865, 792,
	957, 964, 965, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 748, 0, 762, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	746, 0, 0, 0, 0, 904, 0, 747, 0, 0,
	755, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	903, 0, 0, 618, 0, 0, 901, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 954, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 955, 956, 255, 641, 800, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 808, 809, 279, 306, 885, 884, 883, 305, 307,
	881, 882, 880, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 891, 913, 902, 768, 769,
	892, 893, 917, 894, 771, 772, 914, 915, 765, 766,
	770, 916, 918, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 905, 754, 753, 0, 760, 761, 0, 790, 791,
	793, 797, 798, 799, 810, 857, 858, 866, 868, 869,
	867, 870, 871, 872, 875, 876, 877, 878, 873, 874,
	879, 773, 777, 774, 775, 776, 788, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 789, 928, 929,
	930, 931, 932, 933, 803, 807, 806, 804, 805, 801,
	802, 829, 828, 830, 831, 832, 833, 834, 835, 837,
	836, 838, 839, 840, 841, 842, 843, 811, 812, 815,
	816, 814, 813, 817, 826, 827, 818, 819, 820, 821,
	822, 823, 825, 824, 844, 845, 846, 847, 848, 850,
	849, 853, 854, 852, 851, 856, 855, 752, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 919,
	261, 920, 0, 0, 924, 0, 0, 0, 926, 925,
	0, 927, 889, 888, 0, 0, 921, 922, 0, 923,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 934, 935, 936, 937, 938, 939,
	940, 941, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 959, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 751, 0, 0, 0, 269, 756, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 763, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 758, 759, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 95, 0, 0, 1008, 944, 1075, 910,
	948, 1009, 961, 962, 963, 949, 0, 237, 950, 951,
	244, 952, 0, 909, 794, 796, 795, 859, 860, 861,
	862, 863, 864, 865, 792, 957, 964, 965, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 748, 0, 762, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 746, 0, 0, 0, 0,
	904, 0, 747, 0, 0, 755, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 903, 0, 0, 618, 0,
	0, 901, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 954,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 955, 956, 255,
	641, 800, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 808, 809, 279, 306,
	885, 884, 883, 305, 307, 881, 882, 880, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	891, 913, 902, 768, 769, 892, 893, 917, 894, 771,
	772, 914, 915, 765, 766, 770, 916, 918, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 905, 754, 753, 0,
	760, 761, 0, 790, 791, 793, 797, 798, 799, 810,
	857, 858, 866, 868, 869, 867, 870, 871, 872, 875,
	876, 877, 878, 873, 874, 879, 773, 777, 774, 775,
	776, 788, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 789, 928, 929, 930, 931, 932, 933, 803,
	807, 806, 804, 805, 801, 802, 829, 828, 830, 831,
	832, 833, 834, 835, 837, 836, 838, 839, 840, 841,
	842, 843, 811, 812, 815, 816, 814, 813, 817, 826,
	827, 818, 819, 820, 821, 822, 823, 825, 824, 844,
	845, 846, 847, 848, 850, 849, 853, 854, 852, 851,
	856, 855, 752, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 919, 261, 920, 0, 0, 924,
	0, 0, 0, 926, 925, 0, 927, 889, 888, 0,
	0, 921, 922, 0, 923, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 934,
	935, 936, 937, 938, 939, 940, 941, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 959, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 751, 0,
	0, 0, 269, 756, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 763,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	758, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 95, 0,
	0, 1008, 944, 1075, 910, 948, 1009, 961, 962, 963,
	949, 0, 237, 950, 951, 244, 952, 0, 909, 794,
	796, 795, 859, 860, 861, 862, 863, 864, 865, 792,
	957, 964, 965, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 748, 0, 762, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	746, 0, 0, 0, 0, 904, 0, 747, 0, 0,
	755, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 2082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	903, 0, 0, 618, 0, 0, 901, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 954, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 955, 956, 255, 641, 800, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 808, 809, 279, 306, 885, 884, 883, 305, 307,
	881, 882, 880, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 891, 913, 902, 768, 769,
	892, 893, 917, 894, 771, 772, 914, 915, 765, 766,
	770, 916, 918, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 905, 754, 753, 0, 760, 761, 0, 790, 791,
	793, 797, 798, 799, 810, 857, 858, 866, 868, 869,
	867, 870, 871, 872, 875, 876, 877, 878, 873, 874,
	879, 773, 777, 774, 775, 776, 788, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 789, 928, 929,
	930, 931, 932, 933, 803, 807, 806, 804, 805, 801,
	802, 829, 828, 830, 831, 832, 833, 834, 835, 837,
	836, 838, 839, 840, 841, 842, 843, 811, 812, 815,
	816, 814, 813, 817, 826, 827, 818, 819, 820, 821,
	822, 823, 825, 824, 844, 845, 846, 847, 848, 850,
	849, 853, 854, 852, 851, 856, 855, 752, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 919,
	261, 920, 0, 0, 924, 0, 0, 0, 926, 925,
	0, 927, 889, 888, 0, 0, 921, 922, 0, 923,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 934, 935, 936, 937, 938, 939,
	940, 941, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 959, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 0, 0, 0, 0, 711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 1126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 1125, 618, 0,
	0, 0, 0, 0, 1122, 1123, 362, 1083, 329, 197,
	224, 1116, 1120, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 1686, 944, 0, 0, 1683, 0, 0, 0, 0,
	1681, 0, 237, 1682, 1680, 244, 1685, 0, 909, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 86, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 95, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 94, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 2385, 0, 0, 2384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 1748, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 1750, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 1752, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 1457, 0, 1458, 1459, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 86, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 95, 0, 1725, 0, 711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 94, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 95, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 2385, 0, 0,
	2384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 2332, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 0, 0, 0, 1931, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 2330, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 1077, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 1083, 329, 197, 224, 1081, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 2332, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 0, 0, 0, 1931, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	1725, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 3656, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 0, 0, 0, 2093, 711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 2829, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 0, 0, 0, 0, 711, 0, 0,
	0, 0, 2814, 0, 0, 0, 0, 237, 0, 0,
	244, 2815, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 1771, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 1770, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 0, 0, 0, 0, 713, 714, 715,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 3995, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 0, 0, 0, 1931, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 3656, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 95, 0, 0, 0, 711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 2386, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 0, 0, 0, 1752, 711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 2045, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 0, 0, 0, 2036, 711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 1898, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	1896, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 0, 0, 0, 0, 711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 1894, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	1892, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 0, 0, 0, 0, 711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 1890, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	1886, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 0, 0, 0, 0, 711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 1884, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	1882, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 0, 0, 0, 0, 711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 1857, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 1756, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 95, 0,
	0, 0, 944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1436, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 1435, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1034, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 664, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 4055, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 0, 0, 0, 0, 711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 0, 0, 0, 264, 320, 271, 263, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 596, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	579, 447, 593, 619, 620, 262, 403, 605, 516, 613,
	637, 225, 259, 417, 501, 599, 490, 394, 575, 576,
	328, 489, 294, 201, 366, 625, 223, 476, 368, 241,
	230, 581, 602, 298, 288, 453, 632, 212, 511, 591,
	238, 480, 0, 0, 640, 246, 500, 214, 588, 499,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 583, 584, 255, 641, 227, 612, 219, 0,
	611, 405, 578, 589, 391, 380, 218, 587, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 600, 0, 207, 0, 495, 601,
	642, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 310, 491, 332, 370, 0, 0,
	422, 469, 239, 598, 492, 199, 0, 0, 0, 0,
	253, 254, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 395, 0, 585, 586,
	661, 381, 482, 595, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 572, 311, 215, 216, 217,
	518, 519, 520, 521, 609, 610, 614, 204, 459, 460,
	461, 462, 291, 604, 308, 465, 464, 330, 331, 376,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 196, 220,
	365, 0, 451, 287, 639, 608, 603, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 300, 301, 441, 442, 313, 314,
	635, 636, 299, 592, 622, 590, 634, 616, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 607, 498, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 481, 513, 514, 515, 517, 392, 265, 430, 393,
	0, 373, 570, 571, 315, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	483, 251, 374, 371, 577, 281, 272, 268, 249, 316,
	382, 425, 512, 419, 0, 367, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	494, 285, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 619, 620,
	262, 403, 605, 516, 613, 637, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	625, 223, 476, 368, 241, 230, 581, 602, 298, 288,
	453, 632, 212, 511, 591, 238, 480, 0, 0, 640,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	641, 227, 612, 219, 0, 611, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 601, 642, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 661, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 609,
	610, 614, 204, 459, 460, 461, 462, 291, 604, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 639,
	608, 603, 205, 222, 0, 261, 3714, 3716, 3715, 3779,
	3780, 3781, 3782, 3783, 3784, 3785, 792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 300,
	301, 441, 442, 313, 314, 635, 636, 299, 592, 622,
	590, 634, 616, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 607, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 0, 0, 373, 570, 571, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3728, 3729,
	0, 0, 3804, 3803, 3802, 0, 0, 3800, 3801, 3799,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3805, 913, 0, 768, 769, 3806, 3807, 917,
	3808, 771, 772, 914, 915, 0, 766, 770, 916, 918,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3711, 3712, 3713, 3717, 3718,
	3719, 3730, 3777, 3778, 3786, 3788, 869, 3787, 3789, 3790,
	3791, 3794, 3795, 3796, 3797, 3792, 3793, 3798, 3694, 3698,
	3695, 3696, 3697, 3709, 3699, 3700, 3701, 3702, 3703, 3704,
	3705, 3706, 3707, 3708, 3710, 3809, 3810, 3811, 3812, 3813,
	3814, 3723, 3727, 3726, 3724, 3725, 3721, 3722, 3749, 3748,
	3750, 3751, 3752, 3753, 3754, 3755, 3757, 3756, 3758, 3759,
	3760, 3761, 3762, 3763, 3731, 3732, 3735, 3736, 3734, 3733,
	3737, 3746, 3747, 3738, 3739, 3740, 3741, 3742, 3743, 3745,
	3744, 3764, 3765, 3766, 3767, 3768, 3770, 3769, 3773, 3774,
	3772, 3771, 3776, 3775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 919, 0, 920, 0,
	0, 924, 0, 0, 0, 926, 925, 0, 927, 889,
	888, 0, 0, 921, 922, 0, 923, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3815, 3816, 3817, 3818, 3819, 3820, 3821, 3822,
}

var yyPact = [...]int{
	-1000, -1000, 5220, -1000, -536, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2422, 2672, -1000, -1000, -1000, -1000, 2648, -1000, 1005,
	2116, -1000, 2421, 4974, -1000, 54375, 787, -1000, 51475, -438,
	897, 218, 35525, -1000, 183, -1000, 168, 52925, 174, -1000,
	-1000, -1000, -1000, -438, 21025, 2330, 49, 44, 54375, -1000,
	-1000, -1000, -1000, -361, 2618, 2074, -1000, 389, -1000, -1000,
	-1000, -1000, -1000, -1000, 50750, -1000, 1182, -1000, -1000, 2430,
	2401, 2301, 928, 2355, -1000, 2514, 2074, -1000, 21025, 2601,
	2481, 20300, 20300, 461, -1000, -1000, 282, -1000, -1000, 30450,
	54375, 38425, 896, -1000, 2421, -1000, -1000, -1000, 245, -1000,
	371, 1980, -1000, 1975, -1000, 925, 1048, 387, 472, 468,
	386, 384, 382, 380, 379, 377, 376, 374, 398, -1000,
	941, 941, -214, -219, 1382, 451, 450, 450, 1020, 493,
	2379, 2358, -1000, -1000, 941, 941, 941, 333, 941, 941,
	941, 941, 310, 306, 941, 941, 941, 941, 941, 941,
	941, 941, 941, 941, 941, 941, 941, 941, 941, 941,
	941, 921, 2421, 262, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 54375, 231, 54375, -1000, 845, 785, -1000, -1000,
	-442, 1092, 1092, 60, 1092, 1092, 1092, 1092, 179, 1007,
	42, -1000, 175, 254, 195, 257, 1095, 776, -1000, -1000,
	263, 1095, 1820, -1000, 935, 251, 157, -1000, 1092, 1092,
	-1000, 13751, 259, 13751, 13751, -1000, 2406, -1000, -1000, -1000,
	-1000, -1000, 1352, -1000, -1000, -1000, -1000, -27, 492, -1000,
	-1000, -1000, -1000, 52925, 50025, 291, -1000, -1000, 252, 1667,
	1197, 21025, 1349, 923, -1000, -1000, 1402, 900, -1000, -1000,
	-1000, -1000, -1000, 823, -1000, 23200, 23200, 23200, 23200, -1000,
	-1000, 1982, 49300, 1982, 1982, 23200, 1982, 23200, 1982, 1982,
	1982, 1982, 21025, 1982, 1982, 1982, 1982, -1000, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, -1000, -1000, -1000, -1000, 1982,
	844, 1982, 1982, 1982, 1982, 1982, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1982, 1982, 1982, 1982, 1982, 1982, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, -1000, -1000, -1000, 1739, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 26100, 1653, 1627, 1621, -1000, 18125, 1982,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 54375, -1000, 1982, 198, 52925, 52925, 332, 1395, -1000,
	-1000, 2514, 2074, -1000, 2618, 2532, 389, -1000, 3343, 1531,
	1607, 1547, 2074, 1945, 54375, -1000, 2010, -1000, -1000, -1000,
	-316, -344, 2256, 1488, 1805, -1000, -1000, -1000, -1000, 2547,
	21025, -1000, -1000, 2644, -1000, 27550, 843, 2643, 48575, -1000,
	461, 461, 1965, 414, 21, -1000, -1000, -1000, -1000, 1012,
	34800, -1000, -1000, -1000, -1000, -1000, 1845, 54375, -1000, -1000,
	5812, 1289, -1000, 2112, -1000, 1834, -1000, 2046, 21025, 2072,
	784, 1289, 770, 755, 470, -1000, -63, -1000, -1000, -1000,
	-1000, -1000, -1000, 941, 941, 941, -1000, 393, 2593, 4974,
	6316, -1000, -1000, -1000, 47850, 2110, 1289, -1000, 2107, -1000,
	1112, 884, 890, 890, 1289, -1000, -1000, 53650, 1289, 1104,
	1090, 1289, 1289, 52925, 52925, -1000, 47125, -1000, 46400, 45675,
	1392, 52925, 44950, 44225, 43500, 42775, 42050, -1000, 2252, -1000,
	2030, -1000, -1000, -1000, 53650, 1289, 1289, 53650, 52925, 53650,
	54375, 1289, -1000, -1000, 342, -1000, -1000, 1391, 1389, 1388,
	941, 941, 1375, 1804, 1800, 1789, 941, 941, 1374, 1788,
	36975, 1786, 283, 1371, 1357, 1347, 1330, 1785, 207, 1779,
	1314, 1255, 1335, 52925, 2101, 54375, -1000, 243, 1059, 904,
	991, 2421, 2310, 1956, 490, 783, 1289, 454, 454, 52925,
	-1000, 14482, 54375, 211, -1000, 1778, 21025, -1000, 1118, 1095,
	1095, -1000, -1000, -1000, -1000, -1000, -1000, 1092, 54375, 1118,
	-1000, -1000, -1000, 1095, 1092, 54375, 1092, 1092, 1092, 1092,
	1095, 1095, 1095, 1092, 54375, 54375, 54375, 54375, 54375, 54375,
	54375, 54375, 54375, 13751, 935, 1092, -443, -1000, 1777, -1000,
	-1000, -1000, 2217, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	13751, 13751, -1000, -1000, -1000, -1000, -1000, 1954, -1000, 164,
	1, 171, -1000, 41325, 509, 982, -1000, 509, -1000, -1000,
	-1000, 1953, 40600, -1000, -445, -448, -451, -454, -1000, -1000,
	-1000, -461, -462, -1000, -1000, -1000, 21025, 21025, 21025, 21025,
	-246, -1000, 1284, 23200, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 21025, 260, 1043, 23200, 23200, 23200, 23200, 23200, 23200,
	23200, 24650, 23925, 23200, 23200, 23200, 23200, 23200, 23200, -1000,
	-1000, 32625, 6888, 6888, 900, 900, 900, 900, -1000, -178,
	1948, 53650, -1000, -1000, -1000, 842, 21025, 21025, 900, -1000,
	1289, 1203, 18125, 21025, 21025, 21025, 21025, 1022, 1197, 53650,
	21025, -1000, 1547, -1000, -1000, -1000, -1000, 1237, -1000, -1000,
	1132, 2405, 2405, 2405, 2405, 21025, 21025, 21025, 21025, 21025,
	21025, 21025, 21025, 21025, 21025, 2405, 21025, 107, 107, 271,
	21025, 21025, 21025, 21025, 21025, 21025, 16675, 21025, 21025, 23200,
	21025, 21025, 21025, 1547, 21025, 21025, 21025, 21025, 21025, 21025,
	21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025,
	21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025,
	21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025,
	21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025,
	21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025,
	21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025,
	21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025, 21025,
	21025, 21025, 21025, 1547, 21025, 1310, 21025, 21025, 21025, 21025,
	21025, 21025, 21025, 15944, 21025, 21025, 21025, 21025, 21025, -1000,
	-1000, -1000, -1000, -1000, -1000, 21025, 21025, 21025, 21025, 21025,
	21025, 21025, 21025, 1547, 21025, 21025, 21025, 21025, 21025, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1537, 1517, 1528, 21025, -1000, 1946, -1000, -190, 29725, 21025,
	1776, 2632, 2144, 52925, -1000, -1000, -1000, -1000, 2514, -1000,
	2514, 1537, 3325, 2248, 20300, -1000, -1000, 3325, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1722, -1000, 54375,
	1945, 2473, 52925, -1000, -276, -1000, -305, 2244, 1775, 901,
	-1000, 21025, 21025, 1944, -1000, 2222, 54375, -1000, -246, -1000,
	39875, -1000, -1000, 13020, 54375, 341, 54375, -1000, 29000, 39150,
	296, -1000, 21, 1908, -1000, 14, -6, 17400, 867, -1000,
	-1000, -1000, 1382, 25375, 1746, 867, 86, -1000, -1000, -1000,
	2046, -1000, 2046, 2046, 2046, 2046, 901, 901, 901, 901,
	-1000, -1000, -1000, -1000, -1000, 2094, 2092, -1000, 2046, 2046,
	2046, 2046, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2087,
	2087, 2087, 2086, 2086, 2061, 2061, 440, -1000, 21025, 411,
	38425, 2445, 1334, 1293, 243, 455, 2139, 1289, 1289, 1289,
	455, -1000, 1507, 1500, 1438, -1000, -523, 1939, -1000, -1000,
	2588, -1000, -1000, 891, 1149, 1142, 1072, 52925, 216, 331,
	-1000, 431, -1000, 38425, 1289, 1086, 890, 1289, -1000, 1289,
	-1000, -1000, -1000, -1000, -1000, 1289, -1000, -1000, 1930, -1000,
	1909, 1174, 1133, 1163, 1127, 1930, -1000, -1000, -185, 1930,
	-1000, 1930, -1000, 1930, -1000, 1930, -1000, 1930, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1028, 281, -313,
	52925, 216, 469, -1000, 464, 32625, -1000, -1000, -1000, 32625,
	32625, -1000, -1000, -1000, -1000, 1768, 1754, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -506, 54375, -1000, 230,
	970, 309, 307, 303, 54375, 329, 2512, 2509, 2503, 2497,
	2487, 2476, 287, 304, 54375, 54375, 454, 2187, 54375, 2452,
	54375, -1000, -1000, -1000, -1000, -1000, 1753, 1747, -1000, 1197,
	54375, -1000, -1000, 1092, 1092, -1000, -1000, 54375, 1092, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1092, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 54375, -1000, -1000, -1000, -1000, -27, 161,
	-1000, -1000, 52925, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -105, -1000, 46, 18, 406, -1000, -1000, -1000,
	-1000, -1000, 2502, -1000, 1197, 1079, 1044, -1000, 1982, -1000,
	-1000, 1264, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	260, 23200, 23200, 23200, 1414, 830, 1226, 1557, 1567, 1290,
	1290, 981, 23200, 981, 23200, 906, 906, 906, 906, 906,
	-1000, -1000, -1000, -1000, -1000, -1000, 1739, -1000, 1725, -1000,
	1982, 53650, 1745, 15944, 2228, 2104, 1547, 916, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3431, 1547,
	1667, 1547, 1453, 3423, 1034, -1000, 21025, 1547, 3412, -1000,
	-1000, 1547, 1547, 21025, -1000, -1000, 21025, 21025, 21025, 21025,
	1293, 1293, 1293, 1293, 1293, 1293, 1293, 1293, 1293, 1293,
	21025, 1293, 1927, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1911, 2627, 1312, 1293, 1293, 1293, 1293, 1293, 21025,
	1813, -1000, -1000, -1000, 1514, 3407, 1348, 3402, 1293, 1293,
	-1000, 1293, 3389, 3373, 1547, 2536, 2531, 1293, 1293, 1293,
	1293, 1293, 2527, 2523, 1293, 1293, 2506, 1293, 3363, 1293,
	2501, 2456, 2443, 2434, 2428, 2424, 2419, 2414, 2354, 2344,
	2340, 2321, 2307, 2278, 2250, 2246, 2240, 2234, 1293, 1293,
	1293, 3354, 1293, 3349, 1293, 3340, 1293, 1293, 3333, 2216,
	2177, 1547, 1910, -1000, 3326, 1293, 3290, 3060, 3053, 2173,
	3026, 3017, 3000, 1293, 1293, 1293, 2169, 2996, 2988, 2969,
	2951, 2940, 2922, 2918, 2912, 2892, 1293, 1528, 1528, 1528,
	1528, 1528, 2882, -248, 1293, 1547, -1000, -1000, -1000, -1000,
	-1000, 2850, 2146, 2836, 2820, 2815, 2789, 1547, 1982, 839,
	-1000, -1000, 1528, 1547, 1547, 1528, 1528, 2780, 2720, 2703,
	2698, 2693, 2657, 1293, 1293, -1000, 1293, 2647, 2637, 2140,
	2135, 1547, -1000, 1528, 54375, -1000, -435, -1000, 3, 964,
	1982, -1000, 36975, 1547, -1000, 4191, -1000, 1268, -1000, -1000,
	-1000, -1000, -1000, 34075, 1823, -1000, -1000, -1000, -1000, 1982,
	1743, -1000, -1000, -1000, -1000, 901, 76, 33350, 895, 895,
	102, 1197, 1197, 21025, -1000, -1000, -1000, -1000, -1000, -1000,
	837, 2606, 413, 1982, -1000, 1866, 2398, -1000, -1000, -1000,
	2464, 26825, -1000, -1000, 1982, 1982, 54375, 2034, 1942, -1000,
	828, -1000, 1407, 1908, 21, -9, -1000, -1000, -1000, -1000,
	1197, -1000, 1434, 344, 392, -1000, 434, -1000, -1000, -1000,
	-1000, 2350, 82, -1000, -1000, -1000, 311, 901, -1000, -1000,
	-1000, -1000, -1000, -1000, 1714, 1714, -1000, -1000, -1000, -1000,
	-1000, 1327, -1000, -1000, -1000, -1000, 1326, -1000, -1000, 1321,
	-1000, -1000, 2633, 2124, 411, -1000, -1000, 941, 1689, -1000,
	-1000, 2361, 941, 941, 52925, -1000, -1000, 1737, 2445, 230,
	54375, 1031, 2183, -1000, 2139, 2139, 2139, 54375, -1000, -1000,
	-1000, -1000, -1000, -1000, -510, 188, 363, -1000, -1000, -1000,
	5040, 52925, 1736, -1000, 206, -1000, 1711, -1000, 52925, -1000,
	1734, 2076, 1289, 1289, -1000, -1000, -1000, 52925, 1982, -1000,
	-1000, -1000, -1000, 510, 2416, 336, -1000, -1000, -266, -1000,
	-1000, 216, 206, 53650, 1289, 867, -1000, -1000, -1000, -1000,
	-1000, -511, 1731, 507, 220, 325, 54375, 54375, 54375, 54375,
	54375, 54375, 812, -1000, -1000, 32, -1000, -1000, 184, -1000,
	-1000, -1000, -1000, -1000, 184, -1000, -1000, -1000, -1000, -1000,
	270, 463, -1000, 54375, 54375, 931, -1000, -1000, -1000, -1000,
	-1000, 1095, -1000, -1000, 1095, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2402, 54375, 10, -477, -1000,
	-474, 21025, -1000, -1000, -1000, -1000, 1307, 822, 1226, 23200,
	23200, 1203, 1203, 23200, -1000, -1000, -1000, 971, 971, 32625,
	-1000, 23200, 21025, -1000, -1000, 21025, 21025, 21025, 1017, -1000,
	21025, 1192, -1000, 21025, -1000, -1000, 1528, 1293, 1293, 1293,
	1293, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1947, -1000, 21025, 21025, 21025, 1547, 300, -1000, -1000,
	-1000, -1000, -1000, 2624, -1000, 21025, -1000, 32625, 21025, 21025,
	21025, -1000, -1000, -1000, 21025, 21025, -1000, -1000, 21025, -1000,
	21025, -1000, -1000, -1000, -1000, -1000, -1000, 21025, -1000, 21025,
	-1000, -1000, -1000, 21025, -1000, 21025, -1000, -1000, 21025, -1000,
	21025, -1000, 21025, -1000, 21025, -1000, 21025, -1000, 21025, -1000,
	21025, -1000, 21025, -1000, 21025, -1000, 21025, -1000, 21025, -1000,
	21025, -1000, 21025, -1000, 21025, -1000, 21025, -1000, 21025, -1000,
	21025, -1000, 21025, -1000, -1000, -1000, 21025, -1000, 21025, -1000,
	21025, -1000, -1000, 21025, -1000, 21025, -1000, 21025, -1000, 21025,
	21025, -1000, 21025, 21025, 21025, -1000, 21025, 21025, 21025, 21025,
	-1000, -1000, -1000, -1000, 21025, 21025, 21025, 21025, 21025, 21025,
	21025, 21025, 21025, 21025, -1000, -1000, -1000, -1000, -1000, -1000,
	21025, -1000, 38425, 13, -248, 1310, 13, 1310, 22475, 851,
	847, 21750, -1000, 21025, 15213, -1000, -1000, -1000, -1000, -1000,
	21025, 21025, 21025, 21025, 21025, 21025, -1000, -1000, -1000, 21025,
	21025, -1000, 21025, -1000, 21025, -1000, -1000, -1000, -1000, -1000,
	964, -1000, 877, 866, 890, 52925, -1000, -1000, -1000, -1000,
	1904, -1000, 2495, -1000, 2269, 2268, 2623, 2606, 20300, -1000,
	29000, -1000, -1000, 52925, -426, -1000, 2299, 2303, 895, 895,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 12289, 2514, 21025,
	2182, 53650, 256, -1000, 28275, 52925, 53650, 29000, 29000, 29000,
	29000, 29000, -1000, 2224, 2212, -1000, 2223, 2200, 2356, 54375,
	-1000, 1537, 1729, -1000, 21025, 31175, 1836, 29000, -1000, -1000,
	29000, 54375, 11558, -1000, -1000, 9, -12, -1000, -1000, -1000,
	-1000, 1382, -1000, -1000, 933, 2463, 2336, -1000, -1000, -1000,
	-1000, -1000, 1721, -1000, 1710, 1903, 1707, 1703, 281, -1000,
	2063, 2400, 941, 941, -1000, 1317, -1000, 1289, 1687, 1677,
	-1000, -1000, -1000, 504, -1000, 2435, 54375, 2179, 2178, 2175,
	-1000, -520, 1283, 2070, 2052, 21025, 2066, 2585, 1859, 52925,
	-1000, -1000, 53650, -1000, 290, -1000, 411, 52925, -1000, -1000,
	-1000, 331, 54375, -1000, 9513, -1000, -1000, -1000, 206, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 54375, 233, -1000, 2065,
	1294, -1000, -1000, 2134, -1000, -1000, -1000, -1000, -1000, 205,
	185, 1675, 189, 1673, 189, -1000, 54375, 929, 2124, 54375,
	-1000, -1000, -1000, 1092, 1092, -1000, -1000, 2385, -1000, 1289,
	1293, 23200, 23200, -1000, 900, -1000, -1000, 505, -227, 2046,
	2046, -1000, 2046, 2061, -1000, 2046, 153, 2046, 150, 2046,
	-1000, -1000, 1547, 1547, -1000, 1528, 2078, 1861, 2628, -1000,
	1197, 21025, 2615, -1000, -1000, -1000, -1000, -1000, -74, 2607,
	2600, 1293, -1000, 2039, 2038, 21025, 1293, 1547, 2071, 1293,
	1293, 1293, 1293, 1293, 1293, 1293, 1293, 1293, 1293, 1293,
	1293, 2067, 2062, 2058, 2053, 2047, 2043, 2035, 2028, 2022,
	1987, 1966, 1924, 1917, 1905, 1897, 1879, 1293, 1293, 1874,
	1293, 1837, 1818, -1000, 1197, 1528, 2594, 1528, 1293, 1293,
	2589, 313, 1293, 1697, 1697, 1697, 1697, 1697, 1528, 1528,
	1528, 1528, 1293, 52925, -1000, -248, -1000, -1000, -295, -298,
	-1000, 1547, -248, 1882, 23200, 1293, 23200, 23200, 23200, 1293,
	1547, -1000, 1809, 1803, 2557, 1798, 1293, 2265, 1293, 1293,
	1293, 1773, -1000, 2496, 1982, 2496, 1982, 2496, 1671, 1268,
	54375, -1000, -1000, -1000, -1000, 2606, 2597, -1000, 1871, -1000,
	76, 641, -1000, 2313, 2303, -1000, 2584, 2295, 2571, -1000,
	-1000, -1000, -1000, -1000, 1197, -1000, 2420, 1854, -1000, 967,
	1848, -1000, -1000, 19575, 1686, 2267, 827, 1671, 1901, 2398,
	2149, 2171, 3029, -1000, -1000, -1000, -1000, 2206, -1000, 2202,
	-1000, -1000, 2010, -1000, 2260, 341, 29000, 1877, 1877, -1000,
	824, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1158, 9513,
	2662, -1000, 1666, -1000, 1406, 265, 1270, -1000, -1000, 941,
	941, -1000, 1075, 1069, -1000, 54375, 2033, -1000, 901, 1655,
	901, 1267, -1000, -1000, 1259, -1000, -1000, -1000, -1000, 1994,
	2159, -1000, -1000, -1000, -1000, 54375, -1000, -1000, 54375, 54375,
	54375, 2032, 2568, -1000, 21025, 2014, 957, 2511, 52925, 52925,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 456, 941, -490, 298, 294, 941, 941, 941, -522,
	-1000, -1000, 1662, 1660, -1000, -211, -1000, 21025, -1000, -1000,
	-1000, -1000, -1000, 1344, 1344, 1653, 1627, 1621, -1000, 2010,
	-1000, -1000, -1000, 1704, -1000, -1000, -188, 52925, 52925, 52925,
	52925, -1000, -1000, -1000, 1353, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 900, 1547, 394,
	-198, 1547, -1000, -1000, 901, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 21025, -1000, 21025, -1000, 21025,
	1197, 21025, 2514, 1579, 21025, 21025, -1000, 1256, 1249, 1293,
	-1000, -1000, -1000, 21025, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 21025, -1000, 21025,
	-1000, 21025, -1000, 21025, -1000, 21025, -1000, 21025, -1000, 21025,
	-1000, 21025, -1000, 21025, -1000, 21025, -1000, 21025, -1000, 21025,
	-1000, 21025, -1000, 21025, -1000, 21025, -1000, 21025, -1000, -1000,
	21025, -1000, -1000, -1000, 21025, -1000, 21025, -1000, 21025, -1000,
	-1000, -1000, 21025, 314, 971, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1547, 334, -1000, -1000,
	-1000, -1000, 2619, -1000, 1547, 21025, 1203, -1000, 1203, 1203,
	1203, -1000, -1000, -1000, 21025, -1000, 21025, 21025, -1000, 21025,
	-1000, 21025, -1000, -1000, -1000, -1000, 21025, 1982, 2283, 37700,
	1982, 37700, 1982, 31175, -1000, -1000, 2597, 2591, 2553, 2286,
	2288, 2288, 2313, -1000, 2552, 2543, -1000, 1575, 2538, 1553,
	1056, -1000, 53650, 21025, 256, -1000, 419, 52925, 256, 52925,
	-1000, 2533, -1000, -1000, 21025, 2012, -1000, 21025, -1000, -1000,
	-1000, -1000, 6888, 2606, 1877, -1000, -1000, 913, -1000, 21025,
	-1000, 54857, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1550, 1548, -1000, -1000, 2011, 21025, -1000, -1000, -1000, 1700,
	1631, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2010,
	-1000, -1000, -1000, -1000, 331, -515, 2490, 52925, 1229, -1000,
	1620, 1859, 286, 256, 1541, 941, 941, 941, 1221, 1215,
	36975, 1616, -1000, 52925, 407, -1000, 331, -1000, -220, -224,
	1293, -1000, -1000, 2462, -1000, -1000, 15213, -1000, -1000, 1993,
	2137, -1000, -1000, -1000, -1000, 2236, -183, -202, -1000, -1000,
	1293, 1293, 1293, 1997, 1547, -1000, 1293, 1293, 1617, 1608,
	-1000, 1293, 1293, 1293, 1293, 1293, 1293, 1293, 1293, 1293,
	1293, 1293, 1293, 1293, 1293, 1293, 1293, 1293, 1293, 1293,
	1293, 1528, 1761, -1000, 314, 1547, 2168, -1000, -1000, 6888,
	-1000, -1000, 2533, 2535, 13, -1000, -1000, 212, 13, 1197,
	1001, 1547, 1547, 1001, 1699, 1293, 1665, 1630, 1293, 1293,
	31900, -1000, 2522, 2518, 1584, -1000, -1000, 37700, 1584, 37700,
	964, 2591, -255, 21025, 21025, 2281, 1232, -1000, -1000, -1000,
	-1000, 1529, 1515, -1000, 1476, -1000, 2659, -1000, 1197, -1000,
	256, -1000, 819, 1848, -1000, 2514, 1197, 52925, 1197, 68,
	2533, -1000, 1293, -1000, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982, 1982,
	1982, 1982, 1982, -1000, -1000, 52925, 2298, -1000, -1000, 2459,
	1586, 187, -1000, 1587, 1859, -1000, -1000, 250, -1000, 21025,
	-1000, 36975, 1444, 1440, -1000, -1000, -1000, -1000, -522, -1000,
	-1000, -1000, -1000, -1000, -1000, 389, 1856, -1000, 936, 52925,
	54375, -1000, 2233, -1000, -1000, -1000, -1000, 21025, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 21025, -1000, 1547, 2165, -1000,
	-360, -1000, -495, 21025, -248, -1000, -1000, -248, -1000, -1000,
	-1000, -1000, -1000, 21025, -1000, -1000, 21025, -1000, 21025, -1000,
	-1000, 1584, -1000, -1000, -1000, 36250, -1000, 1584, -1000, 1584,
	-1000, -255, -1000, 1849, -1000, 52925, 1197, 1667, -1000, 1220,
	-1000, -1000, -1000, -1000, -1000, 53650, 1848, 52925, -1000, 1546,
	1547, 1982, 2514, -1000, 1539, -1000, 389, -1000, 1986, 2052,
	-1000, -1000, -1000, 18850, -1000, -1000, -1000, -1000, -1000, 244,
	-187, 15213, 10827, 1533, -1000, -186, 1293, 1528, -1000, -466,
	-1000, -1000, -1000, -1000, 288, -1000, -1000, 1667, -1000, -1000,
	1626, 1604, 1524, -1000, -1000, -1000, -1000, -1000, -1000, -255,
	-1000, -1000, 2455, -1000, -1000, 1628, -1000, -1000, 31175, 52200,
	-1000, -175, 408, -187, 21025, 1984, 1547, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -39, -1000, -1000, 807, -1000,
	-1000, -1000, 2134, -199, -1000, -1000, -1000, 308, -481, -271,
	-280, 23200, -1000, 21025, -1000, 21025, -1000, 21025, -1000, 52925,
	1982, -1000, 1526, -1000, 4190, -377, 2164, -1000, -129, -1000,
	-1000, -1000, 1098, 1420, -1000, -1000, -1000, -1000, -1000, -1000,
	1350, 52925, -1000, 437, -1000, -1000, 14482, -188, -203, 1035,
	-1000, -1000, -1000, -1000, -1000, 1203, 1276, 1269, 1293, -1000,
	52925, -1000, 52200, -320, 867, 6888, -1000, 2156, 2153, 2614,
	-1000, -1000, -1000, -1000, -1000, -1000, -532, 1512, 234, -1000,
	-1000, -1000, 308, -286, -1000, 21025, -1000, 21025, -1000, 1547,
	-1000, -1000, 2431, 68, -1000, 2616, -1000, 2638, 1026, 1026,
	-1000, 1188, -532, -1000, -1000, -1000, -1000, 1293, 1293, -1000,
	-388, -1000, -1000, -1000, -1000, -1000, 433, 1288, -1000, -1000,
	-1000, -1000, -1000, 6888, -1000, -1000, -1000, 203, 203, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 3315, 3313, 23, 11, 37, 36, 3309, 3297, 3295,
	173, 3291, 3290, 3289, 3225, 3224, 3222, 2705, 2684, 2682,
	3217, 3215, 3214, 3213, 3205, 3199, 3198, 3195, 3193, 40,
	105, 32, 97, 200, 197, 3190, 174, 159, 192, 3188,
	3186, 3185, 113, 183, 82, 85, 191, 3182, 3171, 71,
	3168, 3166, 3165, 188, 187, 180, 1076, 3162, 186, 112,
	50, 3156, 3155, 3154, 3152, 3150, 3148, 3147, 3146, 3136,
	3134, 3133, 3130, 3126, 3123, 3122, 3121, 3120, 3119, 248,
	3118, 3117, 13, 3116, 73, 3114, 3111, 3102, 3096, 3093,
	12, 3091, 3090, 29, 42, 3088, 3087, 48, 3086, 3079,
	3076, 3071, 3070, 76, 3069, 21, 3067, 39, 3054, 3048,
	125, 3047, 3046, 3045, 45, 3043, 3042, 3041, 10, 165,
	3039, 3038, 140, 3037, 3034, 3032, 167, 217, 3031, 2271,
	3028, 100, 3027, 3022, 3020, 163, 189, 3016, 119, 3013,
	3012, 3009, 148, 3006, 3263, 3005, 3003, 65, 79, 203,
	3002, 2999, 164, 74, 8, 2996, 7, 19, 2995, 2990,
	70, 68, 2989, 106, 2988, 2987, 103, 89, 2985, 95,
	99, 2983, 2976, 26, 5, 2975, 1, 6, 4, 67,
	2974, 2972, 115, 2970, 2968, 2967, 93, 2966, 2965, 6222,
	2941, 90, 130, 104, 63, 2940, 168, 160, 2938, 2937,
	2936, 2934, 2931, 51, 2929, 2918, 2917, 138, 1762, 128,
	2915, 144, 341, 53, 146, 2914, 202, 75, 196, 169,
	2908, 2906, 137, 132, 2901, 2899, 56, 166, 194, 2898,
	92, 129, 117, 175, 91, 133, 2897, 2895, 57, 61,
	2894, 2893, 2892, 2889, 171, 2888, 2887, 66, 2876, 55,
	2875, 190, 2873, 136, 84, 2870, 181, 170, 2867, 62,
	2866, 2865, 96, 101, 60, 38, 2862, 157, 161, 126,
	172, 2838, 2835, 54, 2829, 2827, 2825, 195, 314, 2823,
	2822, 299, 178, 142, 147, 83, 2820, 332, 2818, 2817,
	18, 4363, 6742, 2814, 41, 162, 2813, 2812, 6402, 25,
	47, 24, 2811, 205, 2810, 2808, 2806, 2804, 223, 204,
	109, 158, 58, 2803, 2802, 2799, 69, 2796, 2795, 2794,
	2789, 2786, 2785, 34, 33, 31, 72, 211, 59, 22,
	98, 152, 153, 64, 2783, 2779, 2775, 124, 78, 2773,
	156, 155, 123, 108, 2768, 179, 143, 114, 2766, 94,
	30, 2765, 2764, 2762, 2761, 87, 2760, 2754, 2753, 2752,
	154, 145, 121, 80, 2747, 81, 116, 150, 149, 52,
	2745, 46, 2742, 2740, 28, 184, 27, 2739, 44, 102,
	110, 2734, 6202, 182, 2731, 14, 325, 151, 2729, 2728,
	9, 17, 20, 2727, 2725, 2722, 2720, 131, 2719, 2718,
	2715, 2712, 16, 49, 15, 2, 111, 77, 2711, 2710,
	141, 2706, 2699, 2693, 0, 1021, 127, 2686, 198,
}

//line sql.y:8616
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 412, 413, 413, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 259, 382, 383, 383, 257, 257, 28, 74, 36,
	36, 35, 35, 38, 38, 37, 31, 31, 31, 32,
	32, 32, 32, 32, 32, 32, 32, 33, 33, 33,
	33, 33, 29, 29, 29, 29, 30, 30, 30, 30,
	30, 15, 16, 34, 34, 17, 17, 108, 108, 18,
	19, 19, 19, 19, 416, 416, 184, 184, 182, 182,
	183, 183, 262, 262, 20, 266, 266, 268, 268, 268,
	268, 258, 258, 258, 21, 21, 267, 267, 269, 269,
	269, 272, 272, 272, 272, 311, 311, 311, 22, 22,
	22, 22, 22, 128, 128, 385, 385, 384, 378, 378,
	377, 377, 376, 381, 381, 380, 380, 379, 40, 41,
	50, 50, 50, 50, 51, 52, 386, 386, 351, 57,
	57, 56, 56, 56, 56, 56, 56, 58, 58, 54,
	54, 53, 53, 55, 55, 353, 353, 339, 339, 352,
	352, 352, 352, 352, 352, 352, 338, 338, 139, 139,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 401, 401, 401,
	400, 400, 237, 237, 237, 237, 237, 237, 237, 237,
	148, 148, 160, 160, 160, 160, 160, 160, 146, 146,
	147, 145, 145, 145, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 159, 159, 154, 154, 154, 156, 156,
	155, 155, 155, 157, 157, 402, 402, 402, 402, 316,
	316, 316, 316, 319, 319, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 318, 318, 318, 318, 318, 318,
	318, 320, 320, 320, 320, 320, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 322, 322, 322, 322, 322, 322, 322, 322,
	337, 337, 326, 326, 331, 331, 332, 332, 333, 333,
	333, 334, 334, 334, 335, 335, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 330, 330, 329, 329, 329,
	340, 365, 365, 364, 364, 362, 362, 362, 362, 362,
	362, 362, 362, 349, 349, 359, 359, 359, 359, 359,
	348, 348, 344, 344, 344, 345, 345, 346, 346, 343,
	343, 347, 347, 361, 361, 360, 360, 341, 341, 342,
	342, 367, 403, 403, 403, 403, 403, 404, 404, 368,
	393, 395, 395, 395, 394, 394, 391, 392, 390, 390,
	390, 390, 390, 84, 84, 84, 285, 285, 286, 286,
	357, 357, 356, 356, 356, 358, 358, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 280, 280,
	280, 389, 389, 389, 389, 389, 389, 388, 388, 388,
	354, 354, 354, 354, 387, 387, 59, 59, 217, 217,
	406, 406, 407, 407, 407, 47, 47, 47, 47, 47,
	47, 46, 46, 46, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 48, 48, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 110,
	110, 111, 111, 111, 111, 113, 113, 113, 370, 370,
	60, 60, 3, 3, 172, 174, 175, 175, 173, 173,
	173, 173, 173, 173, 62, 62, 61, 61, 177, 176,
	178, 178, 178, 1, 1, 2, 2, 4, 4, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 336, 336, 336, 369, 369, 371, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 116, 115, 115,
	114, 117, 117, 117, 117, 117, 117, 117, 117, 373,
	373, 373, 63, 63, 374, 323, 324, 325, 5, 6,
	350, 372, 124, 124, 24, 39, 39, 25, 25, 25,
	25, 26, 26, 64, 67, 67, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 279,
	279, 288, 288, 278, 278, 303, 303, 303, 281, 281,
	281, 282, 282, 399, 399, 399, 275, 275, 66, 66,
	66, 304, 304, 304, 304, 69, 69, 408, 408, 409,
	409, 410, 410, 410, 70, 71, 71, 306, 306, 307,
	307, 72, 73, 85, 85, 85, 85, 85, 86, 86,
	86, 86, 109, 109, 109, 10, 10, 10, 10, 81,
	81, 81, 9, 9, 11, 68, 68, 75, 396, 396,
	397, 398, 398, 398, 398, 76, 78, 27, 27, 27,
	27, 27, 27, 134, 134, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 129, 129, 129,
	123, 123, 417, 79, 80, 80, 127, 127, 127, 120,
	120, 120, 126, 126, 126, 12, 12, 13, 261, 261,
	14, 14, 133, 133, 132, 132, 135, 135, 135, 135,
	135, 135, 135, 130, 130, 131, 131, 131, 131, 296,
	296, 296, 295, 295, 166, 166, 168, 167, 167, 169,
	169, 170, 170, 170, 170, 215, 215, 192, 192, 254,
	254, 255, 255, 253, 253, 260, 260, 256, 256, 256,
	256, 263, 263, 171, 171, 171, 171, 179, 179, 180,
	180, 181, 181, 305, 305, 301, 301, 301, 300, 300,
	185, 185, 185, 187, 186, 186, 186, 186, 188, 188,
	190, 190, 189, 189, 191, 196, 196, 195, 195, 193,
	193, 193, 193, 193, 193, 194, 194, 194, 194, 197,
	197, 144, 144, 144, 144, 144, 144, 144, 144, 158,
	158, 158, 158, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 244, 244, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 220, 220, 219, 219,
	87, 87, 87, 88, 88, 89, 89, 89, 89, 89,
	90, 90, 90, 90, 90, 90, 90, 92, 92, 91,
	91, 210, 210, 293, 293, 93, 94, 94, 97, 97,
	96, 95, 95, 101, 101, 98, 98, 100, 100, 99,
	102, 102, 103, 104, 104, 276, 276, 198, 198, 206,
	206, 206, 206, 199, 199, 199, 199, 199, 199, 199,
	207, 207, 207, 214, 208, 208, 204, 204, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	163, 163, 163, 163, 225, 225, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 151, 151, 164, 164, 164, 164, 165, 165, 165,
	165, 165, 165, 165, 313, 313, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 418, 418, 327, 327, 327, 205,
	205, 205, 205, 205, 125, 125, 125, 125, 125, 310,
	310, 310, 314, 314, 314, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	315, 315, 223, 223, 121, 121, 221, 221, 222, 224,
	224, 216, 216, 216, 216, 218, 218, 201, 201, 201,
	226, 226, 227, 227, 105, 106, 106, 107, 107, 228,
	228, 230, 229, 229, 231, 232, 232, 232, 233, 233,
	234, 234, 234, 49, 49, 49, 49, 49, 44, 44,
	44, 44, 45, 45, 45, 45, 136, 136, 136, 136,
	138, 138, 137, 137, 82, 82, 83, 83, 83, 142,
	142, 143, 143, 143, 140, 140, 141, 141, 251, 251,
	251, 251, 251, 251, 251, 235, 235, 235, 242, 242,
	242, 238, 238, 240, 240, 240, 241, 241, 241, 239,
	248, 248, 250, 250, 249, 249, 245, 245, 246, 246,
	247, 247, 247, 243, 243, 200, 200, 200, 200, 200,
	252, 252, 252, 252, 264, 264, 211, 211, 213, 213,
	212, 212, 162, 265, 265, 273, 270, 270, 271, 271,
	297, 297, 297, 274, 274, 287, 287, 283, 283, 284,
	284, 277, 277, 289, 289, 289, 77, 209, 209, 366,
	366, 363, 292, 292, 294, 294, 298, 298, 302, 302,
	299, 299, 8, 411, 411, 411, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 414, 415, 308, 309, 309, 309,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 0, 1, 1, 1, 2, 3, 2,
	3, 0, 1, 3, 1, 4, 3, 3, 4, 3,
	2, 3, 4, 3, 4, 2, 7, 1, 3, 3,
	3, 3, 1, 2, 1, 1, 3, 2, 3, 3,
	2, 5, 7, 10, 9, 7, 8, 1, 1, 10,
	11, 9, 8, 8, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 1, 3, 3, 3, 3,
	3, 1, 1, 2, 5, 4, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	6, 12, 2, 0, 2, 0, 2, 1, 0, 2,
	1, 3, 3, 0, 1, 1, 3, 3, 6, 4,
	7, 8, 8, 8, 6, 3, 1, 1, 5, 0,
	1, 1, 1, 1, 2, 2, 2, 0, 1, 4,
	4, 4, 4, 4, 4, 2, 4, 1, 3, 1,
	1, 3, 4, 3, 3, 3, 5, 10, 0, 2,
	0, 2, 3, 5, 3, 4, 2, 3, 2, 3,
	3, 3, 3, 2, 2, 4, 4, 1, 1, 1,
	1, 1, 0, 2, 2, 3, 3, 2, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	5, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 1, 3, 0, 3,
	5, 0, 1, 1, 0, 1, 0, 3, 3, 2,
	2, 2, 1, 2, 2, 0, 1, 0, 2, 2,
	5, 0, 1, 1, 2, 1, 3, 2, 1, 1,
	3, 3, 3, 0, 1, 4, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 4, 3, 1, 3,
	1, 7, 6, 7, 7, 8, 8, 0, 1, 5,
	2, 1, 1, 1, 0, 1, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 1, 2, 0, 1,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 0, 1, 0, 1, 0, 2,
	0, 2, 0, 2, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 8, 5, 5, 4, 4, 4, 6, 5,
	5, 5, 2, 2, 2, 2, 3, 3, 3, 4,
	3, 3, 1, 3, 5, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 6, 10, 7, 5, 5, 5, 7, 5, 5,
	5, 5, 5, 7, 7, 5, 5, 5, 5, 0,
	6, 5, 6, 4, 5, 0, 8, 9, 0, 3,
	0, 1, 0, 3, 8, 4, 1, 3, 3, 6,
	7, 7, 8, 4, 0, 1, 0, 1, 3, 3,
	1, 1, 2, 1, 1, 0, 2, 0, 2, 5,
	3, 7, 4, 4, 4, 4, 3, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 0, 2, 2, 1, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 3,
	3, 0, 2, 2, 2, 2, 2, 2, 2, 4,
	4, 3, 0, 1, 4, 3, 4, 4, 3, 3,
	3, 2, 1, 3, 3, 3, 5, 7, 7, 6,
	5, 3, 2, 4, 5, 5, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 2, 2, 4, 4, 4, 4, 4, 2,
	3, 3, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 3, 2, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 4, 4, 4, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 5, 5, 4, 0, 2,
	4, 4, 0, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 3, 1, 1, 2, 3, 7, 0,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 3,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 1, 1, 2, 6,
	5, 6, 6, 5, 5, 0, 2, 3, 3, 0,
	2, 3, 3, 3, 2, 3, 1, 3, 6, 3,
	4, 3, 1, 3, 4, 5, 6, 3, 4, 5,
	6, 3, 4, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 5, 5, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 7, 7, 6, 6,
	2, 2, 5, 6, 3, 3, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 4, 2, 4, 0, 1, 2,
	5, 0, 3, 0, 1, 4, 4, 2, 0, 1,
	1, 2, 2, 1, 1, 2, 2, 0, 1, 1,
	1, 1, 5, 1, 3, 0, 3, 1, 1, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 4,
	8, 8, 6, 8, 6, 5, 4, 10, 2, 2,
	1, 2, 2, 2, 2, 2, 4, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 8, 4, 8, 8, 6, 5, 4, 4,
	4, 4, 4, 7, 4, 4, 6, 6, 6, 8,
	6, 6, 4, 4, 3, 4, 6, 6, 4, 4,
	6, 4, 6, 4, 4, 4, 4, 4, 4, 6,
	4, 6, 4, 4, 4, 6, 4, 6, 4, 4,
	6, 4, 6, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 4, 4, 6, 4, 6, 4, 8, 6,
	4, 4, 6, 4, 6, 8, 4, 6, 8, 4,
	4, 6, 8, 6, 4, 6, 6, 8, 10, 7,
	8, 8, 9, 4, 4, 4, 4, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 4, 4, 4,
	4, 4, 4, 6, 4, 6, 5, 9, 6, 9,
	8, 6, 8, 8, 8, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 6, 8, 10, 12,
	14, 6, 8, 8, 10, 12, 14, 6, 8, 10,
	12, 6, 8, 4, 4, 3, 4, 6, 6, 4,
	6, 4, 6, 8, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 0, 5, 5, 2, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 2, 1, 1,
	0, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 1, 3, 5, 1, 1, 1, 2, 2,
	0, 3, 0, 2, 2, 1, 3, 0, 1, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 3,
	4, 2, 3, 4, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 4, 1, 1, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -412, -79, -417, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -64, -67,
	-65, -66, -69, -70, -71, -72, -73, -9, -11, -68,
	-27, -28, -74, -75, -76, -77, -78, -12, -13, -14,
	-8, -32, -31, -30, 11, 12, -108, -35, 34, -40,
	-50, 228, -51, -41, 229, -52, 231, 230, 268, 232,
	381, 261, 76, 317, 318, 320, 321, 322, 323, -109,
	687, 266, 267, 234, 38, 47, 35, 36, 39, 238,
	274, 275, 237, 134, -33, -36, 10, -414, 13, 471,
	263, 262, 30, -34, 581, 88, -80, -413, 735, -251,
	-235, 24, 35, 31, -234, -230, -127, -235, 22, 20,
	9, -79, -79, -79, 14, 15, -79, -351, -353, 88,
	161, 88, -79, -57, -56, -54, -53, -55, -58, 33,
	-47, -48, -375, -46, -43, 233, 230, 278, 124, 125,
	268, 269, 270, 232, 252, 267, 271, 266, 287, -42,
	83, 35, 581, 584, -358, 229, 235, 236, 231, 472,
	127, 126, 77, -355, 376, 614, 705, -58, 707, 102,
	105, 706, 46, 242, 708, 709, 710, 621, 711, 251,
	712, 713, 714, 715, 721, 662, 722, 723, 724, 128,
	9, -79, -302, -298, 92, -291, 578, 254, 612, 425,
	613, 303, 83, 43, 517, 587, 373, 376, 614, 502,
	705, 382, 317, 333, 327, 507, 508, 509, 356, 348,
	579, 615, 588, 306, 255, 291, 699, 346, 137, 707,
	310, 616, 269, 383, 384, 617, 385, 102, 320, 422,
	720, 309, 618, 718, 105, 706, 325, 81, 501, 53,
	702, 46, 264, 430, 431, 344, 237, 340, 708, 292,
	619, 590, 285, 127, 124, 727, 38, 336, 52, 32,
	717, 126, 51, 709, 152, 620, 710, 621, 387, 363,
	693, 50, 388, 270, 622, 86, 275, 583, 314, 701,
	389, 522, 337, 390, 302, 716, 234, 623, 313, 682,
	674, 675, 391, 392, 694, 368, 364, 369, 524, 624,
	414, 506, 393, 678, 679, 734, 54, 625, 626, 695,
	125, 627, 80, 711, 82, 331, 332, 628, 300, 253,
	527, 528, 416, 360, 484, 491, 492, 112, 113, 487,
	114, 493, 115, 494, 495, 496, 485, 116, 109, 486,
	497, 498, 361, 362, 117, 499, 111, 110, 488, 490,
	118, 500, 251, 37, 394, 580, 304, 60, 308, 279,
	417, 48, 366, 731, 47, 689, 529, 629, 692, 359,
	355, 481, 55, 630, 631, 632, 633, 503, 712, 358,
	330, 354, 726, 4, 297, 476, 504, 713, 64, 236,
	371, 370, 372, 286, 413, 351, 634, 635, 636, 258,
	84, 637, 341, 23, 638, 639, 395, 293, 640, 58,
	641, 642, 420, 267, 643, 56, 714, 41, 644, 272,
	728, 715, 645, 646, 647, 688, 648, 274, 649, 397,
	650, 676, 677, 396, 365, 367, 530, 281, 398, 381,
	239, 582, 651, 315, 335, 271, 719, 652, 259, 518,
	519, 520, 521, 700, 526, 525, 273, 278, 266, 421,
	260, 653, 654, 655, 656, 657, 307, 673, 658, 659,
	321, 721, 482, 45, 660, 661, 662, 663, 664, 301,
	296, 415, 424, 63, 85, 378, 665, 666, 698, 329,
	326, 294, 462, 464, 465, 466, 467, 468, 463, 470,
	667, 318, 57, 722, 723, 724, 288, 725, 510, 511,
	512, 513, 11, 564, 547, 575, 548, 565, 549, 558,
	550, 566, 574, 576, 531, 539, 532, 540, 570, 553,
	567, 559, 552, 551, 573, 556, 560, 533, 541, 571,
	557, 534, 542, 535, 543, 536, 544, 569, 568, 561,
	572, 537, 545, 563, 538, 546, 562, 554, 555, 433,
	732, 733, 505, 400, 128, 298, 299, 49, 352, 280,
	668, 311, 669, 342, 343, 478, 479, 357, 328, 353,
	685, 319, 683, 282, 401, 483, 268, 670, 423, 295,
	374, 379, 312, 586, 523, 287, 402, 697, 585, 514,
	515, 350, 347, 289, 516, 671, 687, 403, 243, 283,
	284, 672, 684, 404, 405, 305, 406, 407, 408, 409,
	410, 412, 316, 411, 686, 680, 681, 290, 461, 584,
	324, 345, 380, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 480, 241, -79, 241, -189, -298, -129, 689, 691,
	180, -270, 384, -288, 386, 399, 394, 404, 392, -279,
	395, 397, 281, -399, 414, 241, 401, 228, 387, 396,
	405, 406, 305, 412, 407, 316, 411, 290, 408, 409,
	410, -382, 180, 710, 725, 137, 349, 391, 389, 415,
	689, 92, -304, 92, 93, 94, -291, 319, -306, 324,
	-292, -382, -291, 322, -79, -79, -308, -308, -129, -208,
	-144, 145, -158, -259, -161, 93, -149, -152, -202, -203,
	-204, -205, -159, -218, -257, 169, 170, 177, 146, -214,
	-162, 28, 577, 473, 472, 180, 33, 223, 70, 71,
	475, 476, 148, 59, 13, 438, 439, -160, 428, 429,
	440, 434, 435, 501, 503, 504, 505, 502, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 506, 517,
	478, 479, 119, 480, 109, 111, 110, 481, 482, 483,
	346, 529, 530, 524, 527, 528, 526, 525, 361, 362,
	484, 547, 548, 552, 551, 549, 550, 553, 556, 557,
	558, 559, 560, 561, 563, 562, 554, 555, 532, 531,
	533, 534, 535, 536, 537, 538, 540, 539, 541, 542,
	543, 544, 545, 546, 564, 565, 566, 567, 568, 570,
	569, 574, 573, 571, 572, 576, 575, 485, 486, 112,
	113, 114, 115, 116, 117, 118, 487, 490, 488, 489,
	491, 492, 493, 498, 499, 494, 495, 496, 497, 500,
	372, 370, 371, 367, 366, 365, -89, -101, 603, 602,
	-102, 425, 430, 431, 433, -150, -151, -164, -165, -292,
	-298, 246, 427, 240, 175, 471, -153, -147, -216, 108,
	94, -31, -212, 426, 436, 437, 441, 432, 442, 589,
	591, 606, 607, 609, 594, 599, 598, 601, 518, 519,
	520, 521, 522, 523, 674, 675, 676, 677, 678, 679,
	680, 681, -382, -291, 92, -156, -154, -198, 95, 100,
	103, 104, 106, -405, 264, 342, 343, 120, -414, 703,
	-155, 97, 98, 99, 121, 122, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 91, 96,
	46, 400, 400, -189, -79, -79, -79, -79, -411, 706,
	582, -228, -127, -230, -33, -31, -414, 10, -79, -31,
	-32, -30, -36, -38, 608, -37, -298, 101, -235, -251,
	14, 63, 164, 44, 52, -233, -234, -34, -31, -144,
	21, 25, 26, -131, 171, -144, -298, -131, -277, 245,
	-79, -79, -266, -311, 319, -268, 415, 689, 414, -258,
	-271, 92, -257, -270, 413, 93, -352, 161, -338, -342,
	-292, 256, -368, 252, -189, -361, -360, -292, -414, -128,
	-287, 242, 250, 249, 138, -386, 141, 298, 427, 240,
	-53, -54, -55, -270, 179, 709, -110, 273, 277, 89,
	89, -342, -341, -340, -387, 277, 256, -367, -359, 248,
	257, -348, 249, 250, -343, 242, 139, -387, -343, 247,
	257, 252, 256, 277, 277, 128, 277, 128, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 272, -349, 153,
	-349, 585, 585, -355, -387, 252, 242, -387, -387, 248,
	-289, -343, 244, 27, 244, 37, 37, -349, -349, -349,
	-270, 179, -349, -349, -349, -349, 285, 285, -349, -349,
	-349, -349, -349, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -349, -349, 241, -386, -136, 411, 305,
	83, -56, 287, -39, -189, -287, 242, 243, -386, 274,
	-189, 224, 241, 692, -281, 161, 17, -281, -278, 400,
	398, 385, 390, -281, -281, -281, -281, 288, 383, -344,
	242, 37, 253, 400, 288, 383, 288, 289, 288, 289,
	393, 403, 288, -303, 16, 164, 427, 388, 392, 281,
	241, 282, 243, 402, 289, -303, 91, -282, 161, 288,
	400, 394, 284, -281, -281, -309, -414, -294, -292, -290,
	233, 25, 144, 27, 29, 147, 180, 131, 21, 148,
	39, 235, 349, 252, 179, 248, 472, 228, 74, 589,
	428, 435, 426, 434, 438, 474, 475, 427, 386, 33,
	15, 591, 30, 262, 26, 40, 173, 230, 151, 592,
	265, 28, 263, 119, 122, 594, 24, 77, 257, 16,
	250, 42, 18, 595, 596, 19, 246, 245, 164, 242,
	72, 13, 223, 31, 160, 68, 597, 139, 134, 598,
	599, 600, 601, 132, 70, 161, 22, 729, 436, 437,
	35, 690, 577, 276, 175, 75, 61, 691, 145, 432,
	602, 603, 120, 604, 123, 78, 696, 141, 20, 73,
	44, 605, 277, 606, 247, 730, 607, 418, 608, 162,
	231, 471, 71, 163, 703, 609, 704, 240, 399, 10,
	477, 34, 261, 249, 130, 69, 442, 610, 241, 150,
	244, 133, 121, 9, 138, 36, 14, 76, 79, 439,
	440, 441, 59, 129, 581, 149, 17, 611, 419, 143,
	-382, 692, -309, -309, 34, 93, -408, -409, -410, 581,
	418, 244, -292, -189, -85, 682, 232, -86, 688, 25,
	239, -134, 400, -122, 180, 710, 693, 694, 695, 692,
	397, 700, 698, 696, 288, 697, 89, 141, 143, 144,
	4, -144, 160, -199, 153, 154, 155, 156, 157, 158,
	159, 165, 164, 145, 147, 161, -244, 142, 166, 167,
	168, 169, 170, 171, 172, 174, 173, 175, 176, 162,
	163, 179, 226, 227, -152, -152, -152, -152, -214, -220,
	-219, -414, -216, -382, -291, -298, -414, -414, -152, -276,
	-414, -149, -414, -414, -414, -414, -414, -223, -144, -414,
	-414, -418, -414, -418, -418, -418, -327, -414, -327, -327,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, 224, -414, -414, -414, -414, -414, -327,
	-327, -327, -327, -327, -327, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, 91,
	104, 100, 103, 95, -218, 106, 91, 91, 91, 91,
	-31, -32, -208, -414, -308, -396, -397, -192, -189, -414,
	305, -292, -292, 274, 97, -233, -34, -31, -228, -234,
	-230, -31, -79, -120, -133, 65, 66, -132, -135, 26,
	40, 69, 67, 25, -415, 90, -415, -251, -415, 89,
	-38, -254, 88, 636, 666, 636, 666, 63, 45, 91,
	91, 89, 23, -229, -231, -144, 16, -296, 4, -295,
	27, -292, 91, 224, 16, -190, 31, -189, -277, -277,
	89, 92, 319, -267, -269, 416, 418, 153, -297, -292,
	91, 33, 90, 89, -189, -316, -319, -321, -320, -322,
	-317, -318, 346, 347, 180, 350, 352, 353, 354, 355,
	356, 357, 358, 359, 360, 363, 34, 264, 342, 343,
	344, 345, 364, 365, 366, 367, 369, 370, 371, 372,
	327, 348, 579, 328, 329, 330, 331, 332, 333, 335,
	336, 339, 337, 338, 340, 341, -383, -382, 88, 90,
	89, -326, 88, -144, -136, 241, -382, 242, 242, 242,
	-79, 471, -349, -349, -349, 272, 21, -46, -43, -375,
	20, -42, -43, 233, 124, 125, 230, 88, -338, 88,
	-347, -383, -382, 88, 139, 247, 138, -346, -343, -346,
	-347, -382, -216, -382, 139, 139, -382, -382, -263, -292,
	-263, -263, 25, -263, 25, -263, 25, 97, -292, -263,
	25, -263, 25, -263, 25, -263, 25, -263, 25, 33,
	80, 81, 82, 33, 84, 85, 86, -216, -382, -382,
	-216, -338, -216, -189, -382, -270, 97, 97, 97, -349,
	-349, 97, 91, 91, 91, -349, -349, 97, 91, -300,
	-298, 91, 91, -388, 258, 302, 304, 97, 97, 97,
	97, 33, 91, -389, 33, 717, 716, 718, 719, 720,
	91, 97, 33, 97, 33, 97, -292, 88, -189, -142,
	292, 228, 230, 233, 78, 91, 308, 309, 306, 311,
	312, 313, 153, 46, 89, 244, 241, -382, -283, 246,
	-283, -292, -299, -298, -290, -189, 244, 382, 91, -144,
	-345, 16, 164, -303, -303, -281, -189, -345, -303, -281,
	-189, -281, -281, -281, -281, -303, -303, -303, -281, -298,
	-298, -189, -189, -189, -189, -189, -189, -189, -309, -282,
	-281, 692, 91, -275, 16, 78, -309, -309, 89, 325,
	419, 420, -307, 322, -81, -292, 91, -10, -29, -18,
	-17, -19, 153, -10, 89, 581, -182, -189, 692, 692,
	692, 692, 692, 692, -144, -144, -144, -144, 604, -206,
	120, 145, 121, 122, -161, -144, -207, -212, -214, 107,
	164, 147, 161, -244, -149, -152, -149, -149, -149, -149,
	-149, -149, 223, -149, 223, -149, -149, -149, -149, -149,
	-149, -310, -292, 91, 180, -157, -156, 106, -405, -157,
	578, 89, -219, 224, -144, -144, -382, -118, 444, 445,
	446, 447, 449, 450, 451, 454, 455, 459, 460, 443,
	461, 448, 453, 456, 457, 458, 452, 345, -144, -209,
	-208, -209, -144, -144, -221, -222, 149, -216, -144, -415,
	-415, 97, 171, -126, 26, 40, -126, -126, -126, -126,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-126, -144, -119, 443, 461, 448, 453, 456, 457, 458,
	452, 345, 462, 463, 464, 465, 466, 467, 468, 469,
	470, -119, -118, -144, -144, -144, -144, -144, -144, -87,
	-144, 131, 132, 133, -208, -144, -149, -144, -144, -144,
	-415, -144, -144, -144, -209, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -381, -380, -379, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -208, -208, -208,
	-208, -208, -144, -415, -144, -163, -147, 97, -259, 106,
	93, -144, -144, -144, -144, -144, -144, -209, -294, -299,
	-290, -291, -208, -209, -209, -208, -208, -144, -144, -144,
	-144, -144, -144, -144, -144, -415, -144, -144, -144, -144,
	-144, -251, -415, -208, 89, -398, 418, 419, 690, -301,
	277, -300, 27, -209, 91, 16, -261, 79, -292, -233,
	-233, 65, 66, 61, -130, -131, -135, -415, -37, 27,
	-253, -292, 629, 629, 64, 91, -328, -270, 373, 374,
	180, -144, -144, 89, -232, 29, 30, -189, -295, 171,
	-299, -189, -262, 277, -189, -167, -169, -170, -171, -192,
	-215, -414, -172, -31, 600, 597, 16, -182, -183, -191,
	-298, -268, -311, -267, 89, 417, 419, 420, 78, 123,
	-144, -329, 179, -357, -356, -355, -338, -340, -341, -342,
	90, -329, -334, 379, 378, -326, -326, -326, -326, -326,
	-328, -328, -328, -328, 88, 88, -326, -326, -326, -326,
	-331, 88, -331, -331, -332, -331, 88, -332, -333, 88,
	-333, -368, -144, -365, -364, -362, -363, 251, 102, 672,
	628, 581, 621, 662, 79, -360, -232, 97, -415, -142,
	-284, 246, -366, -363, -382, -382, -382, -284, 92, 91,
	92, 91, 92, 91, -111, -60, -1, 729, 730, 731,
	89, 21, -339, -338, -59, 302, -371, -372, 277, -367,
	-361, -347, 139, -346, -347, -347, -382, 89, 31, 128,
	128, 128, 128, 581, 230, 34, -285, 620, 145, 672,
	628, -338, -59, 244, 244, -310, -310, -310, 91, 91,
	-280, 725, -182, -138, 294, 153, 283, 283, 241, 296,
	241, 296, -189, 307, 310, 308, 309, 306, 311, 312,
	313, 25, 25, 25, 25, 25, 25, 295, 297, 299,
	285, -189, -189, -283, 78, -184, -189, 28, -298, 91,
	91, -189, -281, -281, -189, -281, -281, -189, -410, 326,
	-292, 360, 683, 685, -122, 418, 89, 581, 24, -123,
	24, -414, 120, 121, 122, -207, -149, -152, -149, 144,
	265, -149, -149, -414, -216, -415, -294, 27, 89, 79,
	-415, 169, 89, -415, -415, 89, 16, 89, -224, -222,
	151, -144, -415, 89, -415, -415, -208, -144, -144, -144,
	-144, -415, -415, -415, -415, -415, -415, -415, -415, -415,
	-415, -208, -415, 89, 89, 16, -314, 27, -415, -415,
	-415, -415, -415, -223, -415, 16, -415, 79, 89, 164,
	89, -415, -415, -415, 89, 89, -415, -415, 89, -415,
	89, -415, -415, -415, -415, -415, -415, 89, -415, 89,
	-415, -415, -415, 89, -415, 89, -415, -415, 89, -415,
	89, -415, 89, -415, 89, -415, 89, -415, 89, -415,
	89, -415, 89, -415, 89, -415, 89, -415, 89, -415,
	89, -415, 89, -415, 89, -415, 89, -415, 89, -415,
	89, -415, 89, -415, -415, -415, 89, -415, 89, -415,
	89, -415, -415, 89, -415, 89, -415, 89, -415, 89,
	89, -415, 89, 89, 89, -415, 89, 89, 89, 89,
	-415, -415, -415, -415, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, -415, -415, -415, -415, -415, -415,
	89, -94, 605, -415, -415, 89, -415, 89, 89, 89,
	89, 89, -415, -414, 224, -415, -415, -415, -415, -415,
	89, 89, 89, 89, 89, 89, -415, -415, -415, 89,
	89, -415, 89, -415, 89, -415, -397, 689, 419, -196,
	-195, -193, 76, 245, 77, -414, -300, -415, -157, -259,
	-260, -259, -201, -292, 97, 106, -235, -166, 89, -168,
	16, -214, 90, 89, -328, -239, -245, -278, -292, 91,
	180, -330, 180, -330, 373, 374, -231, 224, -197, 17,
	-200, 34, 59, -29, -414, -414, 34, 89, -185, -187,
	-186, -188, 68, 72, 74, 69, 70, 71, 75, -305,
	27, -31, -167, -31, -414, -189, -182, -416, 16, 79,
	-416, 89, 224, -269, -272, 421, 418, 424, -382, 91,
	-110, 89, -355, -342, -236, -139, 42, -335, 380, -328,
	588, -328, -337, 91, -337, 97, 97, 97, 90, -49,
	-44, -45, 35, 83, -362, -349, 91, 41, -349, -349,
	-292, 90, -232, -138, -189, 145, 78, -366, -366, -366,
	-298, -2, 728, 734, 139, 88, 385, 20, -253, 89,
	90, -217, 303, 90, -112, -292, 90, 88, -347, -347,
	-292, -414, 241, 33, 33, 672, 628, 620, -59, -217,
	-216, -382, -329, 727, 726, 90, 243, 301, -143, 438,
	-140, 91, 92, -189, -189, -189, -189, -189, -189, 233,
	230, 408, -406, 314, -406, 286, 244, -182, -189, 89,
	-84, 260, 255, -303, -303, 35, -189, 418, 701, 699,
	-144, 144, 265, -161, -152, -118, -118, -149, -312, 180,
	346, 264, 344, 340, 360, 351, 378, 342, 379, 337,
	336, 335, -312, -310, -149, -208, -144, -144, -144, 152,
	-144, 150, -144, -415, -415, -415, -415, -415, -228, -144,
	-144, -144, -415, 180, 346, 16, -144, -310, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -379, -144, -208, -144, -208, -144, -144,
	-144, -144, -144, -380, -380, -380, -380, -380, -208, -208,
	-208, -208, -144, -414, -292, -97, -96, -95, 655, 245,
	-94, -163, -97, -163, 223, -144, 223, 223, 223, -144,
	-209, -294, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -193, -343, 283, -343, 283, -343, -263, 89,
	-274, 24, 16, 59, 59, -166, -197, -131, -167, -292,
	-242, 682, -248, 48, -246, -247, 49, -243, 50, 58,
	-330, -330, 171, -233, -144, -264, 78, -265, -273, -216,
	-211, -213, -212, -414, -252, -415, -292, -263, -265, -169,
	-170, -170, -169, -170, 68, 68, 68, 73, 68, 73,
	68, -186, -298, -415, -144, -301, 79, -167, -167, -191,
	-298, 171, 418, 422, 423, -355, -404, 120, 145, 33,
	78, 376, 102, -402, 179, 617, 667, 672, 628, 621,
	662, -403, 247, 138, 139, 259, 27, 43, 90, 89,
	90, 89, 90, 90, 89, -286, -285, -45, -44, -349,
	-349, 97, -382, 91, 91, 243, 28, -189, 78, 78,
	78, -113, 732, 97, 88, -3, 83, -144, 88, 21,
	-338, -216, -373, -323, -374, -324, -325, -5, -6, -350,
	-116, 59, 102, -63, 46, 242, 712, 713, 128, -414,
	725, -365, -253, -369, -371, -189, -148, -414, -160, -146,
	-145, -147, -153, 169, 170, 264, 342, 343, -217, -189,
	-137, 292, 300, 88, -141, 93, -385, 79, 283, 376,
	283, 376, 91, -407, 315, 91, -407, -189, -84, -49,
	-189, -281, -281, 35, -382, -415, -161, -152, -125, 164,
	581, -315, 587, -326, -326, -326, -333, -326, 332, -326,
	332, -326, -415, -415, -415, 89, -415, 24, -415, 89,
	-144, 89, -121, 477, 89, 89, -415, 88, 88, -144,
	-415, -415, -415, 89, -415, -415, -415, -415, -415, -415,
	-415, -415, -415, -415, -415, -415, -415, 89, -415, 89,
	-415, 89, -415, 89, -415, 89, -415, 89, -415, 89,
	-415, 89, -415, 89, -415, 89, -415, 89, -415, 89,
	-415, 89, -415, 89, -415, 89, -415, 89, -415, -415,
	89, -415, -415, -415, 89, -415, 89, -415, 89, -415,
	-415, -415, 89, -313, 673, -415, -415, -415, -415, -415,
	-415, -415, -415, -415, -415, -415, -93, -293, -292, -94,
	637, 637, -415, -94, -225, 89, -149, -415, -149, -149,
	-149, -415, -415, -415, 89, -415, 89, 89, -415, 89,
	-415, 89, -415, -415, -415, -415, 89, -194, 24, -414,
	-194, -414, -194, -415, -259, -189, -197, -226, 18, -239,
	53, 352, -250, -249, 57, 49, -247, 21, 51, 21,
	32, -264, 89, 153, 89, -415, -415, 89, 59, 224,
	-415, -197, -180, -179, 78, 79, -181, 78, -179, 68,
	68, -254, 89, -262, -167, -197, -197, 224, 120, -414,
	-148, 14, 91, 91, -382, -401, 716, 717, 33, 97,
	-349, -349, 139, 139, -189, 88, -328, 91, -328, 97,
	97, 33, 84, 85, 86, 33, 80, 81, 82, -189,
	-189, -189, -189, -370, 88, 21, -144, 88, 153, 90,
	-253, -253, 279, 164, -349, 710, 285, 285, -349, -349,
	-349, -115, -114, 732, 90, -415, 89, -336, 581, 584,
	-144, -154, -154, -254, 90, -378, 581, -384, -292, -292,
	-292, -292, 97, 99, -415, 579, 75, 582, -415, -328,
	-144, -144, -144, -144, -233, 91, -144, -144, 97, 97,
	-415, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -208, -144, -415, -177, -176, -178, 693, 120, 33,
	-312, -415, -210, 277, -100, -99, -98, 16, -415, -144,
	-118, -118, -118, -118, -144, -144, -144, -144, -144, -144,
	-414, 68, 20, 18, -256, -292, 247, -414, -256, -414,
	-301, -226, -227, 19, 21, -240, 55, -238, 54, -238,
	-249, 21, 21, 91, 21, 91, 139, -273, -144, -213,
	59, -29, -292, -211, -292, -228, -144, 88, -144, -157,
	-197, -197, -144, -203, 501, 503, 504, 505, 502, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 506,
	517, 478, 479, 480, 109, 111, 110, 481, 482, 483,
	346, 529, 530, 524, 527, 528, 526, 525, 361, 362,
	484, 547, 548, 552, 551, 549, 550, 553, 556, 557,
	558, 559, 560, 561, 563, 562, 554, 555, 532, 531,
	533, 534, 535, 536, 537, 538, 540, 539, 541, 542,
	543, 544, 545, 546, 564, 565, 566, 567, 568, 570,
	569, 574, 573, 571, 572, 576, 575, 485, 486, 112,
	113, 114, 115, 116, 117, 118, 487, 490, 488, 491,
	492, 493, 498, 499, 494, 495, 496, 497, 500, 372,
	370, 371, 367, 366, 365, 425, 430, 431, 433, 518,
	519, 520, 521, 522, 523, 674, 675, 676, 677, 678,
	679, 680, 681, 91, 91, 88, -144, 90, 90, -254,
	-369, -60, 90, -255, -253, 97, 90, 280, -212, -414,
	91, -349, -349, -349, 97, 97, -300, -415, 89, -292,
	-403, -371, 585, 585, -415, 27, -377, -376, -294, 88,
	79, 64, 580, 583, -415, -415, -415, 89, -415, -415,
	-415, 90, 90, -415, -415, -415, -415, -415, -415, -415,
	-415, -415, -415, -415, -415, -415, -415, -415, -415, -415,
	-415, -415, -415, -415, -415, 89, -415, -176, -178, -415,
	78, -157, -228, 21, -97, 302, 304, -97, -415, -415,
	-415, -415, -415, 89, -415, -415, 89, -415, 89, -415,
	-415, -256, -415, 21, 21, 89, -415, -256, -415, -256,
	-196, -227, -107, -106, -105, 611, -144, -208, -241, 56,
	78, 123, 91, 91, 91, 14, -211, 224, -233, -253,
	-174, 385, -228, -415, -253, 90, 27, 90, 734, 139,
	90, -212, -124, -414, 276, -300, 91, 91, -114, -117,
	-29, 89, 153, -253, -189, 64, -144, -208, -415, 78,
	592, 693, -92, -91, -88, 704, 730, -208, -94, -94,
	-144, -144, -144, -415, -292, 247, -415, -415, -107, 89,
	-104, -103, -292, 78, 123, -265, -292, 90, -415, -414,
	-233, 90, -237, -29, 88, -3, 276, -323, -374, -324,
	-325, -5, -6, -350, -82, 581, -376, -354, -298, -294,
	91, 97, 90, 581, -415, -415, -90, 147, 702, 670,
	-154, 223, -415, 89, -415, 89, -415, 89, -105, 89,
	27, -301, -175, -173, -292, 634, -394, -393, 577, -404,
	-400, 120, 145, 102, -402, 672, 628, 129, 130, -82,
	-144, 88, -415, -83, 291, 689, 224, -385, 582, -90,
	703, 648, 623, 648, 623, -149, -144, -144, -144, -103,
	-414, -415, 89, 24, -316, -62, 645, -391, -392, 78,
	-395, 391, 644, 665, 120, 91, 90, -253, 252, -299,
	-378, 583, 144, -118, -415, 89, -415, 89, -415, -93,
	-173, 641, -329, -157, -392, 78, -391, 78, 15, 14,
	-4, 733, 90, 293, -90, 648, 623, -144, -144, -415,
	-61, 28, -174, -390, 260, 255, 258, 34, -390, 97,
	-4, -415, -415, 645, 254, 33, 120, -157, -177, -176,
	-176,
}

var yyDef = [...]int{
	882, -2, -2, 884, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 72, 74, 75, 882, 882, 882, 0, 882, 0,
	0, 882, -2, -2, 882, 1618, 0, 882, 0, 877,
	0, -2, 799, 805, 0, 814, -2, 0, 0, 882,
	882, 2244, 2244, 877, 0, 0, 0, 0, 0, 882,
	882, 882, 882, 1623, 1479, 52, 882, 0, 87, 88,
	832, 833, 834, 67, 0, 2242, 883, 1, 3, 73,
	77, 0, 0, 0, 60, 1488, 0, 80, 0, 0,
	886, 0, 0, 1601, 882, 882, 0, 128, 129, 0,
	0, 0, -2, 132, -2, 161, 162, 163, 0, 168,
	609, 528, 580, 526, 565, -2, 514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	403, 403, 0, 0, -2, 514, 514, 514, 1603, 0,
	0, 0, 562, 465, 403, 403, 403, 0, 403, 403,
	403, 403, 0, 0, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 1506, 167, 1619, 1616, 1617, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
	2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169,
	2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179,
	2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189,
	2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209,
	2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229,
	2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239,
	2240, 2241, 0, 1595, 0, 722, 982, 0, 878, 879,
	0, 788, 788, 0, 788, 788, 788, 788, 0, 0,
	0, 736, 0, 0, 0, 0, 785, 0, 752, 753,
	0, 785, 0, 759, 791, 0, 0, 766, 788, 788,
	769, 2245, 0, 2245, 2245, 1586, 0, 782, 780, 794,
	795, 42, 798, 801, 802, 803, 804, 807, 0, 818,
	821, 1612, 1613, 0, 823, 828, 845, 846, 0, 47,
	1134, 0, 1006, 0, 1012, -2, 1023, 1040, 1041, 1042,
	1043, 1044, 1046, 1047, 1048, 0, 0, 0, 0, 1053,
	1054, 0, 0, 0, 0, 0, 1115, 0, 0, 0,
	0, 1975, 1452, 0, 0, 1414, 1414, 1150, 1414, 1414,
	1416, 1416, 1416, 1828, 1967, 1976, 2152, 1789, 1795, 1796,
	1797, 2098, 2099, 2100, 2101, 2189, 2190, 2194, 1891, 1784,
	2165, 2166, 0, 2241, 1928, 1936, 1937, 1961, 2062, 2175,
	1807, 1956, 2026, 1888, 1910, 1911, 2044, 2045, 1932, 1933,
	1914, 2104, 2106, 2122, 2123, 2108, 2110, 2119, 2125, 2130,
	2109, 2121, 2126, 2139, 2143, 2146, 2147, 2148, 2116, 2114,
	2127, 2131, 2133, 2135, 2141, 2144, 2117, 2115, 2128, 2132,
	2134, 2136, 2142, 2145, 2103, 2107, 2111, 2120, 2138, 2118,
	2137, 2112, 2124, 2129, 2140, 2113, 2105, 1926, 1929, 1917,
	1918, 1920, 1922, 1927, 1934, 1940, 1919, 1939, 1938, 0,
	1915, 1916, 1921, 1931, 1935, 1923, 1924, 1925, 1930, 1941,
	1982, 1981, 1980, 2025, 1952, 2024, 0, 0, 0, 0,
	0, 1779, 1833, 1834, 2149, 1336, 1337, 1338, 1339, 0,
	0, 0, 0, 0, 0, 0, 293, 294, 1465, 1466,
	46, 1133, 1582, 1416, 1416, 1416, 1416, 1416, 1416, 1075,
	1076, 1077, 1078, 1079, 1103, 1104, 1110, 1111, 2039, 2040,
	2041, 2042, 1871, 2184, 1880, 1881, 2021, 2022, 1893, 1894,
	2215, 2216, -2, -2, -2, 234, 235, 236, 237, 238,
	239, 240, 241, 0, 1832, 2163, 2164, 230, 0, 0,
	298, 295, 296, 297, 1117, 1118, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272, 273, 274,
	275, 276, 277, 278, 279, 280, 281, 282, 283, 284,
	285, 286, 287, 288, 289, 290, 291, 292, 300, 301,
	2244, 0, 855, 0, 0, 0, 0, 0, 0, 1624,
	1625, 1488, 0, 1480, 1479, 65, 0, 882, -2, 0,
	0, 0, 0, 49, 0, 54, 939, 885, 79, 78,
	1528, 1531, 0, 0, 0, 61, 1489, 69, 71, 1490,
	0, 887, 888, 0, 915, 919, 0, 0, 0, 1602,
	1601, 1601, 104, 0, 0, 105, 125, 126, 127, 0,
	0, 111, 112, 1588, 1589, 45, 0, 0, 179, 180,
	0, 43, 430, 0, 175, 0, 423, 362, 0, 1506,
	0, 0, 0, 0, 0, 882, 0, 1596, 156, 157,
	164, 165, 166, 403, 403, 403, 577, 0, 0, 167,
	167, 535, 536, 537, 0, 0, -2, 428, 0, 515,
	0, 0, 417, 417, 421, 419, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 554, 0, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 670, 0, 404,
	0, 575, 576, 466, 0, 0, 0, 0, 0, 0,
	0, 0, 1604, 1605, 0, 552, 553, 0, 0, 0,
	403, 403, 0, 0, 0, 0, 403, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 1519, 0, 0,
	0, -2, 0, 714, 0, 0, 0, 1597, 1597, 0,
	721, 0, 0, 0, 726, 0, 0, 727, 0, 785,
	785, 783, 784, 729, 730, 731, 732, 788, 0, 0,
	412, 413, 414, 785, 788, 0, 788, 788, 788, 788,
	785, 785, 785, 788, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2245, 791, 788, 0, 760, 0, 761,
	762, 763, 764, 767, 768, 770, 2246, 2247, 1614, 1615,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	2245, 2245, 774, 778, 1587, 800, 806, 808, 809, 0,
	0, 819, 822, 839, 51, 1879, 827, 51, 829, 830,
	831, 857, 858, 863, 0, 0, 0, 0, 869, 870,
	871, 0, 0, 874, 875, 876, 0, 0, 0, 0,
	0, 1004, 0, 0, 1123, 1124, 1125, 1126, 1127, 1128,
	1129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1024,
	1025, 0, 0, 0, 1049, 1050, 1051, 1052, 1055, 0,
	1066, 0, 1068, 1461, -2, 0, 0, 0, 1060, 1061,
	0, 0, 0, 1607, 1607, 0, 0, 0, 1453, 0,
	0, 1148, 0, 1149, 1151, 1152, 1153, 0, 1154, 1155,
	892, 892, 892, 892, 892, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 892, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1607, 0, 0, 1607, 1607, 0, 0, 222,
	223, 224, 225, 226, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	242, 243, 244, 245, 246, 247, 302, 248, 249, 250,
	1133, 0, 0, 0, 48, 847, 848, 0, 965, 1607,
	0, 0, 898, 0, 1622, 59, 68, 70, 1488, 63,
	1488, 0, 902, 0, 0, -2, -2, 903, 904, 908,
	909, 910, 911, 912, 56, 2243, 57, 0, 76, 0,
	50, 0, 0, 1529, 0, 1532, 0, 0, 0, 376,
	1536, 0, 0, 1481, 1482, 1485, 0, 916, 1973, 920,
	0, 922, 923, 0, 0, 102, 0, 981, 0, 0,
	0, 113, 0, 115, 116, 0, 0, 0, 387, 1590,
	1591, 1592, -2, 410, 0, 387, 371, 310, 311, 312,
	362, 314, 362, 362, 362, 362, 376, 376, 376, 376,
	345, 346, 347, 348, 349, 0, 0, 331, 362, 362,
	362, 362, 352, 353, 354, 355, 356, 357, 358, 359,
	315, 316, 317, 318, 319, 320, 321, 322, 323, 364,
	364, 364, 364, 364, 368, 368, 0, 44, 0, 391,
	0, 1485, 0, 0, 1519, 1599, 1609, 0, 0, 0,
	1599, 134, 0, 0, 0, 578, 620, 529, 566, 579,
	0, 532, 533, -2, 0, 0, 514, 0, 516, 0,
	411, 0, -2, 0, 421, 0, 417, 421, 418, 421,
	409, 422, 556, 557, 558, 0, 560, 561, 650, 951,
	0, 0, 0, 0, 0, 656, 657, 658, 0, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 567,
	568, 569, 570, 571, 572, 573, 574, 0, 0, 0,
	0, 516, 0, 563, 0, 0, 467, 468, 469, 0,
	0, 472, 473, 474, 475, 0, 0, 478, 479, 480,
	968, 969, 481, 482, 507, 508, 509, 483, 484, 485,
	486, 487, 488, 489, 501, 502, 503, 504, 505, 506,
	490, 491, 492, 493, 494, 495, 498, 0, 149, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1597, 0, 0, 0,
	0, 901, 983, 1620, 1621, 723, 0, 0, 789, 790,
	0, 415, 416, 788, 788, 733, 775, 0, 788, 737,
	776, 738, 740, 739, 741, 754, 755, 788, 744, 786,
	787, 745, 746, 747, 748, 749, 750, 751, 771, 756,
	757, 758, 792, 0, 796, 797, 772, 773, 0, 0,
	812, 813, 0, 820, 842, 840, 841, 843, 835, 836,
	837, 838, 0, 844, 0, 0, 860, 98, 865, 866,
	867, 868, 880, 873, 1135, 1001, 1002, 1003, 0, 1005,
	1009, 0, 1119, 1121, 1011, 1007, 1013, 1130, 1131, 1132,
	0, 0, 0, 0, 0, 1017, 1021, 1026, 1027, 1028,
	1029, 1030, 0, 1031, 0, 1034, 1035, 1036, 1037, 1038,
	1039, 1045, 1429, 1430, 1431, 1064, 303, 304, 0, 1065,
	0, 0, 0, 0, 0, 0, 0, 0, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1134, 0,
	1608, 0, 0, 0, 1459, 1456, 0, 0, 0, 1415,
	1417, 0, 0, 0, 893, 894, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 0, 0, 1432, 0, 0, 0, 0, 0, 1452,
	0, 1070, 1071, 1072, 0, 0, 0, 0, 0, 0,
	1194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1340, 1341, 1342, 1343,
	41, 0, 0, 0, 0, 0, 0, 0, 1463, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1365, 0, 0, 0, 0,
	0, 0, 1580, 0, 0, 850, 851, 853, 0, 985,
	0, 966, 0, 0, 856, 0, 897, 0, 900, 62,
	64, 906, 907, 0, 924, 913, 905, 58, 53, 0,
	0, 943, 1530, 1533, 1534, 376, 1556, 0, 385, 385,
	382, 1491, 1492, 0, 1484, 1486, 1487, 81, 921, 917,
	0, 999, 0, 0, 980, 0, 927, 929, 930, 931,
	963, 0, 934, 935, 0, 0, 0, 0, 0, 100,
	982, 106, 0, 114, 0, 0, 119, 120, 107, 108,
	109, 110, 0, 609, -2, 462, 181, 183, 184, 185,
	176, -2, 374, 372, 373, 313, 376, 376, 339, 340,
	341, 342, 343, 344, 0, 0, 332, 333, 334, 335,
	324, 0, 325, 326, 327, 366, 0, 328, 329, 0,
	330, 429, 0, 1493, 392, 393, 395, 403, 0, 398,
	399, 0, 403, 403, 0, 424, 425, 0, 1485, 1510,
	0, 0, 0, 1610, 1609, 1609, 1609, 0, 169, 170,
	171, 172, 173, 174, 645, 0, 0, 621, 643, 644,
	167, 0, 0, 177, 518, 517, 0, 677, 0, 427,
	0, 0, 421, 421, 406, 407, 559, 0, 0, 652,
	653, 654, 655, 0, 0, 0, 545, 456, 0, 546,
	547, 516, 518, 0, 0, 387, 470, 471, 476, 477,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 594, 595, 596, 599, 601, 520, 605,
	607, 598, 600, 602, 520, 606, 608, 1507, 1508, 1509,
	0, 0, 715, 0, 0, 453, 96, 1598, 720, 724,
	725, 785, 743, 777, 785, 735, 742, 765, 810, 811,
	816, 824, 825, 826, 864, 0, 0, 0, 0, 872,
	0, 0, 1010, 1120, 1122, 1014, 0, 1018, 1022, 0,
	0, 0, 0, 0, 1069, 1067, 1463, 0, 0, 0,
	1116, 0, 0, 1138, 1139, 0, 0, 0, 0, 1457,
	0, 0, 1146, 0, 1418, 1156, 0, 0, 0, 0,
	0, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1479, 1173, 0, 0, 0, 0, 0, 1178, 1179,
	1180, 1181, 1182, 0, 1184, 0, 1185, 0, 0, 0,
	0, 1192, 1193, 1195, 0, 0, 1198, 1199, 0, 1201,
	0, 1203, 1204, 1205, 1206, 1207, 1208, 0, 1210, 0,
	1212, 1213, 1214, 0, 1216, 0, 1218, 1219, 0, 1221,
	0, 1223, 0, 1226, 0, 1229, 0, 1232, 0, 1235,
	0, 1238, 0, 1241, 0, 1244, 0, 1247, 0, 1250,
	0, 1253, 0, 1256, 0, 1259, 0, 1262, 0, 1265,
	0, 1268, 0, 1271, 1272, 1273, 0, 1275, 0, 1277,
	0, 1280, 1281, 0, 1283, 0, 1286, 0, 1289, 0,
	0, 1290, 0, 0, 0, 1294, 0, 0, 0, 0,
	1303, 1304, 1305, 1306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1317, 1318, 1319, 1320, 1321, 1322,
	0, 1324, 0, 1098, 0, 0, 1098, 0, 0, 0,
	0, 0, 1136, 1607, 0, 1419, 1420, 1421, 1422, 1423,
	0, 0, 0, 0, 0, 0, 1363, 1364, 1366, 0,
	0, 1369, 0, 1371, 0, 1581, 849, 852, 854, 937,
	986, 987, 0, 0, 0, 0, 967, 1606, 895, 896,
	899, 945, 0, 1467, 0, 0, 924, 999, 0, 925,
	0, 55, 940, 0, 1538, 1537, 1550, 1563, 385, 385,
	379, 380, 386, 381, 383, 384, 1483, 0, 1488, 0,
	1574, 0, 0, 1566, 0, 0, 0, 0, 0, 0,
	0, 0, 970, 0, 0, 973, 0, 0, 0, 0,
	964, 935, 0, 936, 0, -2, 0, 0, 94, 95,
	0, 0, 0, 117, 118, 0, 0, 124, 388, 389,
	158, 167, 464, 182, 437, 0, 0, 309, 375, 336,
	337, 338, 0, 360, 0, 0, 0, 0, 458, 130,
	1497, 1496, 403, 403, 394, 0, 397, 0, 0, 0,
	1611, 363, 426, 0, 148, 0, 0, 0, 0, 0,
	154, 615, 0, 0, 622, 0, 0, 0, 527, 0,
	538, 539, 0, 649, -2, 711, 391, 0, 405, 408,
	952, 0, 0, 540, 0, 543, 544, 457, 518, 549,
	550, 564, 551, 499, 500, 497, 0, 0, 1520, 1521,
	1526, 1524, 1525, 135, 585, 587, 591, 586, 590, 0,
	0, 0, 522, 0, 522, 583, 0, 453, 1493, 0,
	719, 454, 455, 788, 788, 859, 99, 0, 862, 0,
	0, 0, 0, 1015, 1019, 1032, 1033, 1424, 1450, 362,
	362, 1437, 362, 368, 1440, 362, 1442, 362, 1445, 362,
	1448, 1449, 0, 0, 1062, 0, 0, 0, 0, 1145,
	1460, 0, 0, 1157, 1158, 1159, 1160, 1161, 1454, 0,
	0, 0, 1177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 146, 147, 0, 0, 0, 0, 0,
	0, 1374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1093, 1097, 0, 1099, 1100, 0, 0,
	1326, 0, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 1464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 988, 995, 0, 995, 0, 995, 0, 0,
	0, 1593, 1594, 1468, 1469, 999, 1470, 914, 926, 944,
	1556, 0, 1549, 0, -2, 1558, 0, 0, 0, 1564,
	377, 378, 918, 82, 1000, 85, 0, 1574, 1583, 0,
	1565, 1576, 1578, 0, 0, 0, 1570, 0, 999, 928,
	959, 961, 0, 956, 971, 972, 974, 0, 976, 0,
	978, 979, 939, 933, 0, 102, 0, 999, 999, 101,
	0, 984, 121, 122, 123, 463, 186, 191, 0, 0,
	0, 196, 0, 198, 0, 0, 0, 203, 204, 403,
	403, 438, 0, 306, 308, 0, 0, 189, 376, 0,
	376, 0, 367, 369, 0, 439, 459, 1494, 1495, 0,
	0, 396, 400, 401, 402, 0, 1600, 150, 0, 0,
	0, 618, 0, 646, 0, 0, 0, 0, 0, 0,
	178, 519, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 0, 403, 0, 0, 0, 403, 403, 403, 0,
	703, 390, 0, 0, 674, 671, 541, 0, 220, 221,
	228, 229, 231, 0, 0, 0, 0, 0, 548, 939,
	1511, 1512, 1513, 0, 1523, 1527, 138, 0, 0, 0,
	0, 593, 597, 603, 0, 521, 604, 716, 717, 718,
	97, 728, 734, 861, 881, 1008, 1016, 1020, 0, 0,
	0, 0, 1451, 1435, 376, 1438, 1439, 1441, 1443, 1444,
	1446, 1447, 1058, 1059, 1063, 0, 1142, 0, 1144, 0,
	1458, 0, 1488, 0, 0, 0, 1176, 0, 0, 0,
	1187, 1186, 1188, 0, 1190, 1191, 1196, 1197, 1200, 1202,
	1209, 1211, 1215, 1217, 1220, 1222, 1224, 0, 1227, 0,
	1230, 0, 1233, 0, 1236, 0, 1239, 0, 1242, 0,
	1245, 0, 1248, 0, 1251, 0, 1254, 0, 1257, 0,
	1260, 0, 1263, 0, 1266, 0, 1269, 0, 1274, 1276,
	0, 1279, 1282, 1284, 0, 1287, 0, 1291, 0, 1293,
	1295, 1296, 0, 0, 0, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1323, 0, 1091, 1094, 1325,
	1101, 1102, 1107, 1328, 0, 0, 0, 1331, 0, 0,
	0, 1335, 1137, 1346, 0, 1351, 0, 0, 1357, 0,
	1361, 0, 1367, 1368, 1370, 1372, 0, 0, 0, 0,
	0, 0, 0, 965, 946, 66, 1470, 1472, 0, 1543,
	1541, 1541, 1551, 1552, 0, 0, 1559, 0, 0, 0,
	0, 86, 0, 0, 0, 1579, 0, 0, 0, 0,
	103, 1479, 953, 960, 0, 0, 954, 0, 955, 975,
	977, 932, 0, 999, 999, 92, 93, 0, 192, 0,
	194, 0, 197, 199, 200, 201, 207, 208, 209, 202,
	0, 0, 305, 307, 0, 0, 350, 361, 351, 0,
	0, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 939,
	151, 152, 153, 610, 0, 620, 0, 941, 0, 613,
	0, 530, 0, 0, 0, 403, 403, 403, 0, 0,
	0, 0, 688, 0, 0, 651, 0, 659, 0, 0,
	0, 232, 233, 0, 1522, 584, 0, 136, 137, 0,
	0, 589, 523, 524, 1056, 0, 0, 0, 1057, 1436,
	0, 0, 0, 0, 0, 1455, 0, 0, 0, 0,
	1183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1299, 0, 0, 0, 640, 641, 0,
	1375, 1096, 1479, 0, 1098, 1108, 1109, 0, 1098, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 996, 0, 0, 0, 947, 948, 0, 0, 0,
	985, 1472, 1477, 0, 0, 1546, 0, 1539, 1542, 1540,
	1553, 0, 0, 1560, 0, 1562, 0, 1584, 1585, 1577,
	0, 1569, 1572, 1568, 1571, 1488, 957, 0, 962, 0,
	1479, 91, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 206, 0, 0, 365, 370, 0,
	0, 0, 611, 0, 942, 623, 614, 0, 701, 0,
	705, 0, 0, 0, 708, 709, 710, 687, 0, 691,
	431, 675, 672, 673, 542, 0, 139, 140, 0, 0,
	0, 1425, 0, 1428, 1140, 1143, 1141, 0, 1172, 1174,
	1175, 1433, 1434, 1189, 1225, 1228, 1231, 1234, 1237, 1240,
	1243, 1246, 1249, 1252, 1255, 1258, 1261, 1264, 1267, 1270,
	1278, 1285, 1288, 1292, 1297, 0, 1300, 0, 0, 1301,
	0, 642, 1087, 0, 0, 1105, 1106, 0, 1330, 1332,
	1333, 1334, 1347, 0, 1352, 1353, 0, 1358, 0, 1362,
	1373, 0, 990, 997, 998, 0, 993, 0, 994, 0,
	938, 1477, 84, 1478, 1475, 0, 1473, 1471, 1535, 0,
	1544, 1545, 1554, 1555, 1561, 0, 1567, 0, 89, 0,
	0, 0, 1488, 193, 0, 212, 0, 619, 0, 622,
	612, 699, 700, 0, 712, 704, 706, 707, 689, -2,
	1514, 0, 0, 0, 592, 1426, 0, 0, 1302, 0,
	638, 639, 1095, 1088, 0, 1073, 1074, 1092, 1327, 1329,
	0, 0, 0, 989, 949, 950, 991, 992, 83, 0,
	1474, 1113, 0, 1547, 1548, 1575, 1573, 958, 965, 0,
	90, 444, 437, 1514, 0, 0, 0, 692, 693, 694,
	695, 696, 697, 698, 581, 1516, 141, 142, 0, 511,
	512, 513, 135, 0, 1147, 1298, 1089, 0, 0, 0,
	0, 0, 1348, 0, 1354, 0, 1359, 0, 1476, 0,
	0, 624, 0, 626, 0, -2, 432, 445, 0, 187,
	213, 214, 0, 0, 217, 218, 219, 210, 211, 131,
	0, 0, 713, 0, 1517, 1518, 0, 138, 0, 0,
	1080, 1081, 1082, 1083, 1085, 0, 0, 0, 0, 1114,
	1093, 625, 0, 0, 387, 0, 635, 433, 434, 0,
	440, 441, 442, 443, 215, 216, 647, 0, 0, 510,
	588, 1427, 0, 0, 1349, 0, 1355, 0, 1360, 0,
	627, 628, 636, 0, 435, 0, 436, 0, 0, 0,
	616, 0, 647, 1515, 1090, 1084, 1086, 0, 0, 1112,
	0, 637, 633, 446, 448, 449, 0, 0, 447, 648,
	617, 1350, 1356, 0, 450, 451, 452, 629, 630, 631,
	632,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 146, 3, 3, 3, 174, 166, 3,
	88, 90, 171, 169, 89, 170, 224, 172, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 735,
	154, 153, 155, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 176, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 142, 3, 177,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 143, 144, 145,
	147, 148, 149, 150, 151, 152, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 167, 168, 173, 175,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:612
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:625
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:626
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:630
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:669
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:675
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:681
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:686
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:690
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:696
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:700
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:706
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:712
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:718
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:722
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:727
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:731
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:737
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:741
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:747
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:753
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:757
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:761
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:784
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:790
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:808
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:814
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:821
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:825
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:831
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:839
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:843
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:847
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:853
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:862
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:866
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:872
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:876
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:881
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:887
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:893
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:900
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:906
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:914
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:918
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:924
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:936
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:948
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:952
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:958
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:964
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:968
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:972
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:976
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:981
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:982
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:986
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:990
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:996
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1000
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1006
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1010
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1015
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1019
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1025
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1031
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1035
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1041
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1045
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1049
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1053
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1059
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1063
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1067
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1073
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1077
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1083
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1087
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1093
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1097
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1101
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yyVAL.str = RepeatableReadStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1111
		{
			yyVAL.str = ReadCommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1115
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1119
		{
			yyVAL.str = SerializableStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1125
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1129
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1133
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1139
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1145
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1152
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1161
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1165
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1172
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1176
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1181
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1185
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1191
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1196
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1201
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1207
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1212
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1218
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1223
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1227
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1233
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1237
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1243
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1249
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1256
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1263
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1268
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1273
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1278
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1285
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1292
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1303
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1310
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1314
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1320
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1324
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1328
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1332
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1336
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1340
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1346
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1350
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1356
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1360
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1366
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1370
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1376
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1380
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1386
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1390
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1396
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1400
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1406
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1411
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1416
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1420
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1425
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1429
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1433
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1444
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1453
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1462
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1466
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1475
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1479
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1484
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1489
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1494
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1500
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1505
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1510
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1515
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1520
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1524
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1529
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1533
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1538
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1543
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1548
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1552
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1558
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1562
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1566
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1572
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1576
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1581
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1585
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1590
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1595
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1600
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1605
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1610
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1615
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1622
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1629
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1633
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1637
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1641
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1645
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1649
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1659
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1666
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1670
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1676
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1684
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1688
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1692
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1696
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1708
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1712
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1716
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1720
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1724
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1728
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1733
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1737
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1741
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = Armscii8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = ASCIIStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = Big5Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = UBinaryStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = Cp1250Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = Cp1251Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = Cp1256Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = Cp1257Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Cp850Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Cp852Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Cp866Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = Cp932Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = Dec8Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = EucjpmsStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = EuckrStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = Gb18030Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = Gb2312Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = GbkStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = Geostd8Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = GreekStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = HebrewStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = Hp8Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = Keybcs2Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = Koi8rStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = Koi8uStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = Latin1Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = Latin2Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = Latin5Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = Latin7Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = MacceStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = MacromanStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.str = SjisStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.str = Swe7Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.str = Tis620Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = Ucs2Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.str = UjisStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = Utf16Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = Utf16leStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = Utf32Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = Utf8mb3Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.str = Utf8mb4Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.str = Utf8mb3Str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1921
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1925
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1929
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1935
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1939
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1945
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1949
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1953
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1959
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1963
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1969
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1973
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1977
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1981
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1987
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2047
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2065
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2071
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2077
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2083
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2091
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2095
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2099
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2103
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2107
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2117
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2123
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2135
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2139
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2143
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2216
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2221
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2226
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2230
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2235
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2239
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2248
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2252
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2259
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2263
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2269
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2277
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2281
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2285
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2290
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2294
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2299
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2303
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2307
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2311
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2315
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2320
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2325
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2330
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2335
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2341
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2345
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2350
		{
			yyVAL.str = ""
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2354
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2358
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2364
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2369
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2373
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2379
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2383
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2389
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2393
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2398
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2402
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2406
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2410
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2414
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2418
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2424
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2434
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2438
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2442
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2446
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2450
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2455
		{
			yyVAL.str = ""
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2459
		{
			yyVAL.str = yyDollar[2].str
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2465
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2469
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2473
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2479
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2488
		{
			yyVAL.str = ""
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.str = yyDollar[1].str
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2502
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2507
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2517
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2521
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2527
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2531
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2537
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2541
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2547
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2551
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2557
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2563
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2567
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2571
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2575
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2579
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2584
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2588
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2594
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2600
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2606
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2610
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2614
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2619
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2623
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2629
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2635
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2641
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2645
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2649
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2653
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2657
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2662
		{
			yyVAL.str = ""
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2666
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2676
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2680
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2685
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2689
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2694
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2698
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2704
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2708
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2712
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2718
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2722
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2728
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2732
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2736
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2740
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2744
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2748
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2752
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2756
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2760
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2764
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2768
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2772
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2776
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2780
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2784
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2788
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2792
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2796
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2800
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2804
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2808
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2812
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2816
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2820
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2824
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2828
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2832
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2836
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2840
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2844
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2848
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2853
		{
			yyVAL.str = ""
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2857
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2861
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2880
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2884
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2888
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2892
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2903
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2907
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2912
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2916
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2921
		{
			yyVAL.str = ""
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2925
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2930
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2934
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2938
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2947
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2951
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2955
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2959
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 530:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2963
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2969
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2973
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2977
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2983
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2987
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2991
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2995
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2999
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3003
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3007
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3011
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3015
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3019
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3023
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3027
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3031
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3035
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3039
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3043
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3047
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3051
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3055
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3059
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3063
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3067
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3071
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3075
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3079
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3083
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3087
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3091
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3095
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3099
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3103
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3109
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3113
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3119
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3123
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3127
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3131
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3135
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3139
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3143
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3147
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3151
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3155
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3161
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3168
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3188
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3198
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3205
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3212
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3224
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3234
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3238
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3242
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3255
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3265
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3269
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3273
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3284
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3291
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3298
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3312
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3320
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3339
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3352
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3369
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3376
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3382
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3389
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3396
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3400
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3409
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3417
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3426
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3433
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3441
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3445
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3454
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3465
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3469
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3474
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3478
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3483
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3487
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3493
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3499
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3505
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3509
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3515
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3519
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3525
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3531
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3537
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3543
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3549
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3553
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3557
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3561
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3567
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3573
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3579
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3583
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3587
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3593
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3597
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3602
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3606
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3611
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3615
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3621
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3625
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3629
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3633
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3637
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3641
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3645
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3649
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3653
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3657
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3661
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3665
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3669
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3673
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3677
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3681
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3685
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3689
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3693
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3697
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3701
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3705
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3710
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3714
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3718
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3724
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3728
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3734
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3739
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3743
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3748
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3753
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3758
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3763
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3768
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3773
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3778
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3783
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3789
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3795
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3799
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3805
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3810
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3814
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3819
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3824
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3829
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3834
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3839
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3844
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3851
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3858
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3865
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3873
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3877
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3883
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3889
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3895
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3901
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3907
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3913
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3919
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3925
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3931
		{
			yyVAL.str = ""
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3935
		{
			yyVAL.str = ""
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3941
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3947
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3951
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 717:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3957
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3961
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3980
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3984
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3990
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4000
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4006
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4010
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4014
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4018
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4022
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4026
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4030
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4034
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4038
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4042
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4046
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4050
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4054
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4058
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4062
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4066
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4070
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4074
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4078
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4082
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4086
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4090
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4094
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4098
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4102
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4106
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4110
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4114
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4118
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4122
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4126
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4130
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4134
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4138
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4142
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4146
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4150
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4154
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4158
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4162
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4166
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4170
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4174
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4178
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4185
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4189
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4193
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4197
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4201
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4205
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4209
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4213
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4217
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4223
		{
			yyVAL.str = ""
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.str = "extended "
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4233
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4237
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4243
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4247
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4253
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4257
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4261
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4271
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4275
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4281
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4285
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4291
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.empty = struct{}{}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.empty = struct{}{}
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4305
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4309
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4315
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4319
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4323
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4330
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4334
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4338
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4342
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4349
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4353
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4358
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4362
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4368
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4372
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4378
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4382
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4386
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4393
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4399
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4403
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4408
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4410
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4413
		{
			yyVAL.empty = struct{}{}
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4415
		{
			yyVAL.empty = struct{}{}
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4419
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4425
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4430
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4434
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4438
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4442
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4446
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4451
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4455
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4459
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4463
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4469
		{
			yyVAL.str = yyDollar[1].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4473
		{
			yyVAL.str = yyDollar[1].str
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4477
		{
			yyVAL.str = yyDollar[1].str
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4483
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4487
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4491
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4495
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4500
		{
			yyVAL.str = ""
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4504
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4508
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4514
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4518
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4524
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4530
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4534
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4540
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4546
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4550
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4556
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4562
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4566
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4570
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4574
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4580
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4586
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4592
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4596
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4600
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4604
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4608
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4612
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4618
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4622
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4628
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4632
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4636
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4640
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4644
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4648
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4652
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4656
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4660
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4664
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4668
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4672
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4677
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4681
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4685
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4690
		{
			yyVAL.str = ""
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4694
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4699
		{
			setAllowComments(yylex, true)
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4703
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4709
		{
			yyVAL.strs = nil
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4713
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4719
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4723
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4727
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4732
		{
			yyVAL.str = ""
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4736
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4740
		{
			yyVAL.str = SQLCacheStr
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4745
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4749
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4753
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4759
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4763
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4773
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4782
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4788
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4792
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4797
		{
			yyVAL.strs = nil
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4801
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4807
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4811
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4817
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4821
		{
			yyVAL.str = SQLCacheStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4825
		{
			yyVAL.str = DistinctStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4829
		{
			yyVAL.str = DistinctStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4833
		{
			yyVAL.str = StraightJoinHint
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4837
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4841
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4847
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4851
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4857
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4861
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4865
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4869
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4874
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4878
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4882
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4889
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4894
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4898
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4904
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4910
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4914
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4924
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4928
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4932
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4936
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4942
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4946
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4952
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4956
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4965
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4970
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4974
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4980
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4984
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4990
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4994
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5000
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5004
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5008
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5012
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5018
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5022
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5035
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5039
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5043
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5047
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5053
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5055
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5059
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5061
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5065
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5067
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5070
		{
			yyVAL.empty = struct{}{}
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5072
		{
			yyVAL.empty = struct{}{}
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5075
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5079
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5083
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5090
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5096
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5100
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5104
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5110
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5116
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5120
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5124
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5128
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5134
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5138
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5148
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5152
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5158
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5162
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5168
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5173
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5177
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5183
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5187
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5193
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5197
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5201
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5205
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5209
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5213
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5218
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5222
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5226
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5230
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5236
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5240
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5247
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5255
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5263
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5267
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5275
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5303
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5307
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5311
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5315
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5319
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5323
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5327
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5345
		{
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5348
		{
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5358
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5362
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5366
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5370
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5374
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5378
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5382
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5386
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5390
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5394
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5398
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5402
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5406
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5416
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5420
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5424
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5428
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5432
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5436
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5440
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5444
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5448
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5452
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5456
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5460
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5464
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5468
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5472
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5476
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5480
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5484
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5488
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5492
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5500
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5504
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5508
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5512
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5516
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5522
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5526
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5532
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5536
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5542
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5546
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5550
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5556
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5560
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5567
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5571
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5575
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5579
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5583
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5589
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5593
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5597
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5601
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5605
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5609
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5613
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5618
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5622
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5628
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5632
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5637
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5641
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5646
		{
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5649
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5655
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5661
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5665
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5670
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5677
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5683
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5687
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5693
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5697
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5703
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5707
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5712
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5719
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5725
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5729
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5735
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5741
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5745
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5751
		{
			yyVAL.str = ""
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5755
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5761
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5765
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5772
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5776
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5780
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5784
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5790
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5794
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5798
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5802
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5806
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5810
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5814
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5820
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5824
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5828
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5835
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5841
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5845
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5855
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5859
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5869
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5873
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5877
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5881
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5885
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5889
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5893
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5897
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5901
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5905
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5909
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5930
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5934
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5938
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5943
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5964
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5968
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5992
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5996
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6000
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6004
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6008
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6012
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6016
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6020
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6024
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6028
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6032
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6036
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6040
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6044
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6048
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6096
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6100
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6104
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6108
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6112
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6116
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6120
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6132
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6136
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6140
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6144
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6148
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6152
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6156
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6160
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6164
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6168
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6172
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6176
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6180
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6184
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6188
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6192
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6196
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6200
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6204
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6208
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6212
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6216
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6220
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6224
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6228
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6232
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6236
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6240
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6244
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6248
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6252
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6256
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6260
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6264
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6268
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6272
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6276
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6280
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6284
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6288
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6292
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6296
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6300
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6304
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6308
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6312
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6316
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6320
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6324
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6332
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6336
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6340
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6344
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6348
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6352
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6356
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6360
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6364
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6368
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6372
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6376
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6380
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6384
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6388
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6392
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6396
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6400
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6404
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6408
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6412
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6416
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6420
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6424
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6428
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6432
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6436
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6440
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6444
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6448
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6452
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6456
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6460
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6464
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6468
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6472
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6476
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6480
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6484
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6488
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6492
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6496
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6500
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6504
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6508
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6512
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6516
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6520
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6524
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6528
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6532
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6536
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6540
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6544
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6548
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6552
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6556
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6560
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6564
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6568
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6572
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6576
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6580
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6584
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6588
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6592
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6596
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6600
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6604
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6608
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6612
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6616
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6620
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6624
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6628
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6632
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6636
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6640
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6644
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6648
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6652
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6656
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6660
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6664
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6668
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6678
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6682
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6686
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6695
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6699
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6705
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6709
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6713
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6717
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6721
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6726
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6730
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6734
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6738
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6742
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6746
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6751
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6755
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6759
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6763
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6770
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6774
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6780
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6784
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6788
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6792
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6798
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6802
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6806
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6810
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6814
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6818
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6822
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6827
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6831
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6837
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6841
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6845
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6849
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6853
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6857
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6861
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6865
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6869
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6873
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6877
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6881
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6885
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6889
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6893
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6897
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6901
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6905
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6909
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6913
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6919
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6923
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6927
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6931
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6935
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6939
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6943
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6947
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6951
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6955
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6959
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6963
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6967
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6971
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6975
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6979
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6983
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6987
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:6997
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7001
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7005
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7015
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7019
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7023
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7027
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7031
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7037
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7041
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7045
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7049
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7053
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7059
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7063
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7067
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7073
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7077
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7081
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7087
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7091
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7095
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7099
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7103
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7109
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7113
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7117
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7121
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7125
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7129
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7133
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7137
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7141
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7145
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7151
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7155
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7160
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7164
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7169
		{
			yyVAL.str = string("")
		}
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7173
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7179
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7183
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7189
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7194
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7198
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7204
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7208
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7212
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7216
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7222
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7226
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7232
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7241
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7245
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7250
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7254
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7259
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7263
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7269
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7275
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7279
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7284
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7288
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7297
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7303
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7309
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7313
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7319
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7324
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7328
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7332
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7337
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7341
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7347
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7351
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7355
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7360
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7364
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7368
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7372
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7376
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7383
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7387
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7391
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7395
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7401
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7405
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7409
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7413
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7418
		{
			yyVAL.str = ""
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7422
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7426
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7430
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7435
		{
			yyVAL.str = ""
		}
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7439
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7445
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7449
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7454
		{
			yyVAL.str = ""
		}
	case 1515:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7458
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7463
		{
			yyVAL.str = "cascaded"
		}
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7467
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7471
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7476
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7480
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7486
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7492
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7498
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7507
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7511
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7516
		{
			yyVAL.str = ""
		}
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7520
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7526
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7530
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7534
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7538
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7542
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7546
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7550
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7556
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7560
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7564
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7569
		{
			yyVAL.str = ""
		}
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7573
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7577
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7582
		{
			yyVAL.str = ""
		}
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7586
		{
			yyVAL.str = " header"
		}
	case 1543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7591
		{
			yyVAL.str = ""
		}
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7595
		{
			yyVAL.str = " manifest on"
		}
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7599
		{
			yyVAL.str = " manifest off"
		}
	case 1546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7604
		{
			yyVAL.str = ""
		}
	case 1547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7608
		{
			yyVAL.str = " overwrite on"
		}
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7612
		{
			yyVAL.str = " overwrite off"
		}
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7618
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7623
		{
			yyVAL.str = ""
		}
	case 1551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7627
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7633
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7637
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7643
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7647
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7652
		{
			yyVAL.str = ""
		}
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7656
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7662
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7666
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7672
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7676
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7680
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7685
		{
			yyVAL.str = ""
		}
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7689
		{
			yyVAL.str = " optionally"
		}
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7702
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7706
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7710
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7714
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7718
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7724
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7728
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7732
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1573:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7736
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7741
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7745
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7751
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7755
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7761
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7765
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7771
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7775
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7780
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7790
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7794
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7800
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7807
		{
			yyVAL.str = "charset"
		}
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7817
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7821
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7825
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7834
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7836
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7839
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7841
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7844
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7846
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7849
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7851
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7854
		{
			yyVAL.empty = struct{}{}
		}
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7856
		{
			yyVAL.empty = struct{}{}
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7858
		{
			yyVAL.empty = struct{}{}
		}
	case 1606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7862
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7867
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7871
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7876
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7878
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7882
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7888
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7892
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7899
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7905
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7909
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7915
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7919
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7926
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7932
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7938
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7942
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7946
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8591
		{
		}
	case 2243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8596
		{
		}
	case 2244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8600
		{
			skipToEnd(yylex)
		}
	case 2245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8605
		{
			skipToEnd(yylex)
		}
	case 2246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8609
		{
			skipToEnd(yylex)
		}
	case 2247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8613
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
