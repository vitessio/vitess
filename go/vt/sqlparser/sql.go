// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const RLIKE = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const WINDOW_EXPR = 57544
const JSON_EXTRACT_OP = 57545
const JSON_UNQUOTE_EXTRACT_OP = 57546
const CREATE = 57547
const ALTER = 57548
const DROP = 57549
const RENAME = 57550
const ANALYZE = 57551
const ADD = 57552
const FLUSH = 57553
const CHANGE = 57554
const MODIFY = 57555
const DEALLOCATE = 57556
const REVERT = 57557
const SCHEMA = 57558
const TABLE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const SPATIAL = 57567
const FULLTEXT = 57568
const KEY_BLOCK_SIZE = 57569
const CHECK = 57570
const INDEXES = 57571
const ACTION = 57572
const CASCADE = 57573
const CONSTRAINT = 57574
const FOREIGN = 57575
const NO = 57576
const REFERENCES = 57577
const RESTRICT = 57578
const SHOW = 57579
const DESCRIBE = 57580
const EXPLAIN = 57581
const DATE = 57582
const ESCAPE = 57583
const REPAIR = 57584
const OPTIMIZE = 57585
const TRUNCATE = 57586
const COALESCE = 57587
const EXCHANGE = 57588
const REBUILD = 57589
const PARTITIONING = 57590
const REMOVE = 57591
const PREPARE = 57592
const EXECUTE = 57593
const MAXVALUE = 57594
const PARTITION = 57595
const REORGANIZE = 57596
const LESS = 57597
const THAN = 57598
const PROCEDURE = 57599
const TRIGGER = 57600
const VINDEX = 57601
const VINDEXES = 57602
const DIRECTORY = 57603
const NAME = 57604
const UPGRADE = 57605
const STATUS = 57606
const VARIABLES = 57607
const WARNINGS = 57608
const CASCADED = 57609
const DEFINER = 57610
const OPTION = 57611
const SQL = 57612
const UNDEFINED = 57613
const SEQUENCE = 57614
const MERGE = 57615
const TEMPORARY = 57616
const TEMPTABLE = 57617
const INVOKER = 57618
const SECURITY = 57619
const FIRST = 57620
const AFTER = 57621
const LAST = 57622
const VITESS_MIGRATION = 57623
const CANCEL = 57624
const RETRY = 57625
const COMPLETE = 57626
const CLEANUP = 57627
const THROTTLE = 57628
const UNTHROTTLE = 57629
const EXPIRE = 57630
const RATIO = 57631
const BEGIN = 57632
const START = 57633
const TRANSACTION = 57634
const COMMIT = 57635
const ROLLBACK = 57636
const SAVEPOINT = 57637
const RELEASE = 57638
const WORK = 57639
const BIT = 57640
const TINYINT = 57641
const SMALLINT = 57642
const MEDIUMINT = 57643
const INT = 57644
const INTEGER = 57645
const BIGINT = 57646
const INTNUM = 57647
const REAL = 57648
const DOUBLE = 57649
const FLOAT_TYPE = 57650
const DECIMAL_TYPE = 57651
const NUMERIC = 57652
const TIME = 57653
const TIMESTAMP = 57654
const DATETIME = 57655
const YEAR = 57656
const CHAR = 57657
const VARCHAR = 57658
const BOOL = 57659
const CHARACTER = 57660
const VARBINARY = 57661
const NCHAR = 57662
const TEXT = 57663
const TINYTEXT = 57664
const MEDIUMTEXT = 57665
const LONGTEXT = 57666
const BLOB = 57667
const TINYBLOB = 57668
const MEDIUMBLOB = 57669
const LONGBLOB = 57670
const JSON = 57671
const JSON_SCHEMA_VALID = 57672
const JSON_SCHEMA_VALIDATION_REPORT = 57673
const ENUM = 57674
const GEOMETRY = 57675
const POINT = 57676
const LINESTRING = 57677
const POLYGON = 57678
const GEOMETRYCOLLECTION = 57679
const MULTIPOINT = 57680
const MULTILINESTRING = 57681
const MULTIPOLYGON = 57682
const ASCII = 57683
const UNICODE = 57684
const NULLX = 57685
const AUTO_INCREMENT = 57686
const APPROXNUM = 57687
const SIGNED = 57688
const UNSIGNED = 57689
const ZEROFILL = 57690
const CODE = 57691
const COLLATION = 57692
const COLUMNS = 57693
const DATABASES = 57694
const ENGINES = 57695
const EVENT = 57696
const EXTENDED = 57697
const FIELDS = 57698
const FULL = 57699
const FUNCTION = 57700
const GTID_EXECUTED = 57701
const KEYSPACES = 57702
const OPEN = 57703
const PLUGINS = 57704
const PRIVILEGES = 57705
const PROCESSLIST = 57706
const SCHEMAS = 57707
const TABLES = 57708
const TRIGGERS = 57709
const USER = 57710
const VGTID_EXECUTED = 57711
const VITESS_KEYSPACES = 57712
const VITESS_METADATA = 57713
const VITESS_MIGRATIONS = 57714
const VITESS_REPLICATION_STATUS = 57715
const VITESS_SHARDS = 57716
const VITESS_TABLETS = 57717
const VITESS_TARGET = 57718
const VSCHEMA = 57719
const VITESS_THROTTLED_APPS = 57720
const NAMES = 57721
const GLOBAL = 57722
const SESSION = 57723
const ISOLATION = 57724
const LEVEL = 57725
const READ = 57726
const WRITE = 57727
const ONLY = 57728
const REPEATABLE = 57729
const COMMITTED = 57730
const UNCOMMITTED = 57731
const SERIALIZABLE = 57732
const CURRENT_TIMESTAMP = 57733
const DATABASE = 57734
const CURRENT_DATE = 57735
const NOW = 57736
const CURRENT_TIME = 57737
const LOCALTIME = 57738
const LOCALTIMESTAMP = 57739
const CURRENT_USER = 57740
const UTC_DATE = 57741
const UTC_TIME = 57742
const UTC_TIMESTAMP = 57743
const DAY = 57744
const DAY_HOUR = 57745
const DAY_MICROSECOND = 57746
const DAY_MINUTE = 57747
const DAY_SECOND = 57748
const HOUR = 57749
const HOUR_MICROSECOND = 57750
const HOUR_MINUTE = 57751
const HOUR_SECOND = 57752
const MICROSECOND = 57753
const MINUTE = 57754
const MINUTE_MICROSECOND = 57755
const MINUTE_SECOND = 57756
const MONTH = 57757
const QUARTER = 57758
const SECOND = 57759
const SECOND_MICROSECOND = 57760
const YEAR_MONTH = 57761
const WEEK = 57762
const REPLACE = 57763
const CONVERT = 57764
const CAST = 57765
const SUBSTR = 57766
const SUBSTRING = 57767
const SEPARATOR = 57768
const TIMESTAMPADD = 57769
const TIMESTAMPDIFF = 57770
const WEIGHT_STRING = 57771
const LTRIM = 57772
const RTRIM = 57773
const TRIM = 57774
const JSON_ARRAY = 57775
const JSON_OBJECT = 57776
const JSON_QUOTE = 57777
const JSON_DEPTH = 57778
const JSON_TYPE = 57779
const JSON_LENGTH = 57780
const JSON_VALID = 57781
const JSON_ARRAY_APPEND = 57782
const JSON_ARRAY_INSERT = 57783
const JSON_INSERT = 57784
const JSON_MERGE = 57785
const JSON_MERGE_PATCH = 57786
const JSON_MERGE_PRESERVE = 57787
const JSON_REMOVE = 57788
const JSON_REPLACE = 57789
const JSON_SET = 57790
const JSON_UNQUOTE = 57791
const COUNT = 57792
const AVG = 57793
const MAX = 57794
const MIN = 57795
const SUM = 57796
const GROUP_CONCAT = 57797
const BIT_AND = 57798
const BIT_OR = 57799
const BIT_XOR = 57800
const STD = 57801
const STDDEV = 57802
const STDDEV_POP = 57803
const STDDEV_SAMP = 57804
const VAR_POP = 57805
const VAR_SAMP = 57806
const VARIANCE = 57807
const REGEXP_INSTR = 57808
const REGEXP_LIKE = 57809
const REGEXP_REPLACE = 57810
const REGEXP_SUBSTR = 57811
const ExtractValue = 57812
const UpdateXML = 57813
const GET_LOCK = 57814
const RELEASE_LOCK = 57815
const RELEASE_ALL_LOCKS = 57816
const IS_FREE_LOCK = 57817
const IS_USED_LOCK = 57818
const MATCH = 57819
const AGAINST = 57820
const BOOLEAN = 57821
const LANGUAGE = 57822
const WITH = 57823
const QUERY = 57824
const EXPANSION = 57825
const WITHOUT = 57826
const VALIDATION = 57827
const UNUSED = 57828
const ARRAY = 57829
const BYTE = 57830
const CUME_DIST = 57831
const DESCRIPTION = 57832
const DENSE_RANK = 57833
const EMPTY = 57834
const EXCEPT = 57835
const FIRST_VALUE = 57836
const GROUPING = 57837
const GROUPS = 57838
const JSON_TABLE = 57839
const LAG = 57840
const LAST_VALUE = 57841
const LATERAL = 57842
const LEAD = 57843
const NTH_VALUE = 57844
const NTILE = 57845
const OF = 57846
const OVER = 57847
const PERCENT_RANK = 57848
const RANK = 57849
const RECURSIVE = 57850
const ROW_NUMBER = 57851
const SYSTEM = 57852
const WINDOW = 57853
const ACTIVE = 57854
const ADMIN = 57855
const AUTOEXTEND_SIZE = 57856
const BUCKETS = 57857
const CLONE = 57858
const COLUMN_FORMAT = 57859
const COMPONENT = 57860
const DEFINITION = 57861
const ENFORCED = 57862
const ENGINE_ATTRIBUTE = 57863
const EXCLUDE = 57864
const FOLLOWING = 57865
const GEOMCOLLECTION = 57866
const GET_MASTER_PUBLIC_KEY = 57867
const HISTOGRAM = 57868
const HISTORY = 57869
const INACTIVE = 57870
const INVISIBLE = 57871
const LOCKED = 57872
const MASTER_COMPRESSION_ALGORITHMS = 57873
const MASTER_PUBLIC_KEY_PATH = 57874
const MASTER_TLS_CIPHERSUITES = 57875
const MASTER_ZSTD_COMPRESSION_LEVEL = 57876
const NESTED = 57877
const NETWORK_NAMESPACE = 57878
const NOWAIT = 57879
const NULLS = 57880
const OJ = 57881
const OLD = 57882
const OPTIONAL = 57883
const ORDINALITY = 57884
const ORGANIZATION = 57885
const OTHERS = 57886
const PARTIAL = 57887
const PATH = 57888
const PERSIST = 57889
const PERSIST_ONLY = 57890
const PRECEDING = 57891
const PRIVILEGE_CHECKS_USER = 57892
const PROCESS = 57893
const RANDOM = 57894
const REFERENCE = 57895
const REQUIRE_ROW_FORMAT = 57896
const RESOURCE = 57897
const RESPECT = 57898
const RESTART = 57899
const RETAIN = 57900
const REUSE = 57901
const ROLE = 57902
const SECONDARY = 57903
const SECONDARY_ENGINE = 57904
const SECONDARY_ENGINE_ATTRIBUTE = 57905
const SECONDARY_LOAD = 57906
const SECONDARY_UNLOAD = 57907
const SIMPLE = 57908
const SKIP = 57909
const SRID = 57910
const THREAD_PRIORITY = 57911
const TIES = 57912
const UNBOUNDED = 57913
const VCPU = 57914
const VISIBLE = 57915
const RETURNING = 57916
const FORMAT_BYTES = 57917
const FORMAT_PICO_TIME = 57918
const PS_CURRENT_THREAD_ID = 57919
const PS_THREAD_ID = 57920
const FORMAT = 57921
const TREE = 57922
const VITESS = 57923
const TRADITIONAL = 57924
const LOCAL = 57925
const LOW_PRIORITY = 57926
const NO_WRITE_TO_BINLOG = 57927
const LOGS = 57928
const ERROR = 57929
const GENERAL = 57930
const HOSTS = 57931
const OPTIMIZER_COSTS = 57932
const USER_RESOURCES = 57933
const SLOW = 57934
const CHANNEL = 57935
const RELAY = 57936
const EXPORT = 57937
const CURRENT = 57938
const ROW = 57939
const ROWS = 57940
const AVG_ROW_LENGTH = 57941
const CONNECTION = 57942
const CHECKSUM = 57943
const DELAY_KEY_WRITE = 57944
const ENCRYPTION = 57945
const ENGINE = 57946
const INSERT_METHOD = 57947
const MAX_ROWS = 57948
const MIN_ROWS = 57949
const PACK_KEYS = 57950
const PASSWORD = 57951
const FIXED = 57952
const DYNAMIC = 57953
const COMPRESSED = 57954
const REDUNDANT = 57955
const COMPACT = 57956
const ROW_FORMAT = 57957
const STATS_AUTO_RECALC = 57958
const STATS_PERSISTENT = 57959
const STATS_SAMPLE_PAGES = 57960
const STORAGE = 57961
const MEMORY = 57962
const DISK = 57963
const PARTITIONS = 57964
const LINEAR = 57965
const RANGE = 57966
const LIST = 57967
const SUBPARTITION = 57968
const SUBPARTITIONS = 57969
const HASH = 57970

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 48,
	13, 48,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 147,
	646, 147,
	-2, 155,
	-1, 48,
	132, 155,
	173, 155,
	335, 155,
	-2, 500,
	-1, 55,
	35, 742,
	235, 742,
	246, 742,
	281, 756,
	282, 756,
	-2, 744,
	-1, 60,
	237, 773,
	-2, 771,
	-1, 114,
	234, 1406,
	-2, 121,
	-1, 116,
	1, 148,
	646, 148,
	-2, 155,
	-1, 127,
	133, 386,
	240, 386,
	-2, 489,
	-1, 146,
	132, 155,
	173, 155,
	335, 155,
	-2, 509,
	-1, 753,
	86, 1423,
	-2, 1270,
	-1, 754,
	86, 1424,
	218, 1428,
	-2, 1271,
	-1, 784,
	218, 1427,
	-2, 39,
	-1, 860,
	59, 841,
	-2, 856,
	-1, 946,
	245, 40,
	250, 40,
	-2, 397,
	-1, 1031,
	1, 557,
	646, 557,
	-2, 155,
	-1, 1432,
	218, 1428,
	-2, 1271,
	-1, 1458,
	59, 842,
	-2, 861,
	-1, 1459,
	59, 843,
	-2, 862,
	-1, 1511,
	132, 155,
	173, 155,
	335, 155,
	-2, 436,
	-1, 1590,
	133, 386,
	240, 386,
	-2, 489,
	-1, 1599,
	245, 41,
	250, 41,
	-2, 398,
	-1, 1938,
	218, 1432,
	-2, 1426,
	-1, 1939,
	218, 1428,
	-2, 1424,
	-1, 2036,
	132, 155,
	173, 155,
	335, 155,
	-2, 437,
	-1, 2043,
	25, 176,
	-2, 178,
	-1, 2385,
	77, 95,
	87, 95,
	-2, 918,
	-1, 2453,
	621, 669,
	-2, 643,
	-1, 2611,
	49, 1365,
	-2, 1359,
	-1, 2893,
	7, 54,
	18, 54,
	20, 54,
	88, 54,
	-2, 890,
	-1, 3237,
	621, 669,
	-2, 657,
	-1, 3329,
	22, 1780,
	32, 1780,
	174, 1780,
	257, 1780,
	315, 1780,
	316, 1780,
	317, 1780,
	318, 1780,
	319, 1780,
	320, 1780,
	321, 1780,
	323, 1780,
	324, 1780,
	325, 1780,
	326, 1780,
	327, 1780,
	328, 1780,
	329, 1780,
	330, 1780,
	331, 1780,
	332, 1780,
	333, 1780,
	334, 1780,
	336, 1780,
	338, 1780,
	339, 1780,
	340, 1780,
	341, 1780,
	342, 1780,
	343, 1780,
	344, 1780,
	345, 1780,
	346, 1780,
	349, 1780,
	350, 1780,
	351, 1780,
	352, 1780,
	353, 1780,
	354, 1780,
	355, 1780,
	356, 1780,
	357, 1780,
	496, 1780,
	-2, 601,
}

const yyPrivate = 57344

const yyLast = 45442

var yyAct = [...]int{
	754, 3400, 792, 2995, 3218, 3412, 2996, 786, 2997, 3370,
	3369, 3327, 785, 666, 1813, 2830, 3307, 2033, 2970, 1514,
	3271, 2760, 3294, 1965, 2666, 1985, 2673, 3202, 3152, 2723,
	2714, 3, 2728, 1094, 2725, 2624, 3200, 2724, 2722, 757,
	37, 875, 2957, 2727, 2726, 3190, 652, 2627, 2288, 2743,
	853, 187, 1967, 3024, 187, 2317, 2681, 623, 758, 1436,
	2103, 1473, 629, 648, 187, 2628, 2742, 2864, 2625, 3029,
	2858, 2514, 187, 2884, 2005, 751, 2622, 2574, 675, 752,
	2356, 645, 2745, 1929, 1043, 2612, 2418, 187, 2066, 2497,
	2379, 2343, 2450, 978, 2091, 646, 1568, 2765, 2071, 908,
	2419, 2134, 2420, 2021, 1989, 2010, 2368, 644, 2850, 1460,
	2335, 155, 629, 187, 629, 2319, 1096, 857, 2349, 861,
	876, 36, 2009, 38, 1934, 855, 1809, 640, 1819, 1072,
	1442, 1926, 1900, 2090, 2489, 1597, 2112, 878, 2412, 1615,
	1482, 1767, 1997, 141, 2151, 2073, 1503, 941, 936, 2387,
	1899, 2012, 1440, 658, 1329, 1827, 1786, 1716, 95, 1265,
	915, 2088, 944, 96, 1604, 1712, 912, 947, 916, 1696,
	942, 2062, 943, 1990, 1502, 1487, 653, 894, 954, 896,
	867, 1935, 1297, 1896, 576, 1086, 1721, 1092, 119, 117,
	1563, 1836, 159, 1589, 631, 124, 118, 1027, 91, 125,
	889, 862, 848, 863, 865, 76, 85, 97, 1333, 1957,
	3227, 635, 2443, 89, 3401, 2105, 2106, 2107, 3256, 2958,
	2711, 2105, 2441, 2733, 2473, 2472, 2149, 1681, 8, 579,
	7, 883, 1337, 888, 2913, 618, 98, 980, 2950, 6,
	120, 87, 126, 914, 3257, 87, 90, 864, 77, 1266,
	997, 998, 999, 3353, 1002, 1003, 1004, 1005, 983, 909,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 636, 612, 2733,
	2505, 2731, 904, 856, 854, 903, 612, 2506, 3251, 869,
	3252, 957, 2730, 1774, 933, 798, 799, 800, 618, 102,
	3000, 870, 1266, 2737, 877, 932, 931, 958, 87, 120,
	984, 987, 988, 930, 798, 799, 800, 902, 755, 756,
	609, 87, 1789, 3000, 1773, 1772, 1771, 934, 1770, 991,
	1769, 1962, 1963, 1000, 1752, 1761, 638, 2731, 639, 3348,
	104, 105, 3308, 108, 2315, 2608, 114, 2138, 1282, 183,
	2463, 2345, 574, 902, 755, 756, 1276, 1467, 3373, 2737,
	612, 925, 920, 2578, 3357, 3423, 3355, 3368, 595, 3391,
	2835, 2834, 849, 850, 851, 852, 2466, 120, 860, 2136,
	593, 3203, 2289, 3252, 1779, 2999, 2782, 3148, 2082, 612,
	3356, 2137, 3354, 3147, 2963, 982, 612, 2964, 78, 78,
	981, 3420, 3304, 2193, 3404, 3246, 891, 892, 2999, 1276,
	3382, 2971, 3295, 2076, 2734, 78, 2131, 759, 80, 3303,
	590, 3245, 2513, 2359, 3232, 3332, 2801, 2316, 1578, 604,
	2481, 1993, 2396, 3337, 2480, 2395, 759, 2662, 2397, 78,
	2663, 2664, 1030, 2504, 600, 2028, 2029, 3335, 2360, 1504,
	924, 1505, 2190, 926, 2027, 1272, 3341, 3342, 1264, 3219,
	1062, 2444, 847, 1089, 2683, 2684, 846, 2408, 2191, 1050,
	2734, 3336, 1298, 1063, 1051, 2546, 87, 87, 2046, 2045,
	1279, 613, 1280, 1281, 2861, 1067, 1068, 1056, 3042, 613,
	2762, 2352, 2353, 87, 3157, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1307, 1306, 1308, 1309, 1760, 2790, 1272, 612,
	2788, 626, 612, 580, 630, 582, 596, 87, 615, 624,
	614, 586, 2490, 584, 588, 597, 589, 1501, 583, 2766,
	594, 1964, 1444, 585, 598, 599, 602, 605, 606, 607,
	603, 601, 2113, 592, 616, 1026, 3374, 1877, 2451, 2476,
	929, 612, 921, 1001, 1671, 2075, 1697, 2152, 1064, 923,
	922, 3403, 929, 613, 1036, 1037, 1079, 3375, 1081, 1088,
	2755, 2682, 1057, 895, 187, 2763, 187, 1083, 2756, 187,
	1069, 1702, 3179, 2685, 3180, 1071, 1762, 1763, 1764, 1032,
	1070, 2492, 613, 1993, 929, 1025, 1039, 2764, 1672, 613,
	1673, 2169, 2157, 2170, 2952, 2171, 1078, 1080, 927, 629,
	2154, 629, 629, 3132, 1050, 1991, 1992, 1065, 1066, 1051,
	927, 2951, 967, 2172, 905, 899, 897, 1049, 1007, 1048,
	1006, 629, 629, 2547, 2156, 1869, 1858, 1859, 1860, 1861,
	1871, 1862, 1863, 1864, 1876, 1872, 1865, 1866, 1873, 1874,
	1875, 1867, 1868, 1870, 965, 3349, 2116, 2158, 3004, 1029,
	905, 899, 897, 2006, 1258, 1046, 2948, 1052, 1053, 1054,
	1055, 937, 37, 938, 956, 938, 2155, 1447, 1271, 1268,
	1269, 1270, 1275, 1277, 1274, 976, 1273, 975, 974, 2685,
	1090, 1091, 973, 972, 971, 970, 1267, 969, 2577, 964,
	1582, 977, 3424, 1076, 1034, 3380, 1040, 1077, 2191, 1042,
	1312, 1312, 613, 913, 1060, 613, 913, 1082, 950, 913,
	911, 3226, 3416, 2442, 949, 1713, 928, 890, 1603, 1084,
	2089, 1271, 1268, 1269, 1270, 1275, 1277, 1274, 928, 1273,
	2493, 1075, 2142, 2445, 1576, 2141, 617, 1500, 1709, 1267,
	1315, 1316, 1317, 1318, 613, 1028, 2478, 1252, 994, 2704,
	1323, 956, 2410, 2475, 1575, 3215, 1574, 610, 968, 795,
	928, 2862, 2900, 795, 935, 955, 2135, 1991, 1992, 2947,
	959, 949, 611, 2461, 1710, 961, 1572, 1703, 3310, 962,
	960, 1704, 1705, 1432, 578, 2509, 2205, 2669, 1248, 1249,
	966, 573, 2735, 2736, 2880, 2496, 2392, 3310, 2355, 2079,
	963, 956, 1247, 3309, 1319, 2739, 2163, 2160, 2162, 2161,
	2164, 2165, 2133, 1683, 1682, 1684, 1685, 1686, 898, 2297,
	2911, 2912, 3309, 3158, 1434, 1602, 795, 2320, 2322, 1428,
	986, 956, 2670, 1466, 3244, 81, 949, 187, 1956, 2080,
	985, 629, 629, 2488, 1701, 1409, 2487, 2078, 2735, 2736,
	1491, 1261, 955, 1259, 898, 2465, 1403, 187, 2672, 2499,
	1041, 2739, 1260, 2998, 2498, 993, 2350, 3340, 2034, 2192,
	77, 116, 2667, 1335, 1312, 1336, 629, 1309, 86, 86,
	187, 2081, 1313, 1314, 1450, 1448, 2998, 2661, 1454, 2683,
	2684, 2077, 629, 1073, 857, 86, 2668, 1451, 187, 2464,
	872, 1339, 955, 1045, 1059, 1087, 1435, 1722, 949, 952,
	953, 3339, 913, 3240, 979, 1061, 946, 950, 2943, 86,
	2874, 2153, 1837, 1047, 1706, 2819, 1038, 1035, 3414, 2674,
	956, 3415, 955, 3413, 1506, 629, 1838, 945, 949, 952,
	953, 111, 913, 1262, 2532, 1828, 946, 950, 1432, 1828,
	2434, 2218, 1280, 1281, 629, 629, 2499, 629, 3383, 629,
	629, 2498, 629, 629, 629, 629, 629, 629, 1452, 1281,
	1435, 3038, 95, 1453, 956, 1432, 2918, 96, 1432, 629,
	1432, 187, 2917, 1410, 1411, 1412, 1413, 1414, 1441, 2130,
	1698, 2321, 1699, 2120, 1609, 1700, 2682, 1612, 1781, 1783,
	1784, 187, 1611, 1601, 2132, 2125, 3376, 2128, 2685, 967,
	1496, 112, 3425, 965, 629, 3273, 187, 1579, 1580, 1581,
	2125, 1644, 1782, 2901, 1647, 1492, 1649, 2977, 1513, 2978,
	629, 955, 187, 3208, 1595, 3418, 959, 949, 1074, 1282,
	3140, 961, 2129, 3139, 1044, 962, 960, 1438, 187, 1282,
	98, 1449, 1723, 1666, 854, 187, 1031, 2127, 3274, 3130,
	856, 1472, 1469, 1835, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 629, 1588, 955, 3209, 992, 1648, 2990,
	1607, 989, 1497, 1498, 1656, 1657, 2197, 2198, 2199, 2989,
	1662, 1663, 2925, 2515, 1617, 2924, 1618, 3426, 1620, 1622,
	2914, 2712, 1626, 1628, 1630, 1632, 1634, 1571, 1606, 1467,
	2700, 1650, 798, 799, 800, 2416, 1833, 2671, 1282, 1931,
	1834, 1605, 1605, 1585, 1928, 1586, 2415, 1598, 1930, 1584,
	3377, 1726, 1304, 1305, 1307, 1306, 1308, 1309, 1730, 2245,
	1732, 1733, 1734, 1735, 2085, 793, 1695, 1739, 1718, 1455,
	1302, 1303, 1304, 1305, 1307, 1306, 1308, 1309, 1652, 1751,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1284, 1724, 1725,
	1691, 1279, 1689, 1280, 1281, 1678, 2517, 1692, 1727, 1282,
	2534, 1279, 1729, 1280, 1281, 1731, 1676, 1675, 1674, 1736,
	1737, 1738, 1791, 1282, 1714, 1664, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1658, 3235, 1282, 1792, 1310, 1311, 1790,
	932, 931, 1655, 1654, 120, 1577, 1998, 1999, 930, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1307, 1306, 1308, 1309,
	1653, 1624, 1931, 3234, 1690, 1728, 1688, 629, 629, 1677,
	3212, 3211, 2527, 2526, 2525, 2519, 1298, 2523, 2508, 2518,
	1279, 2516, 1280, 1281, 618, 187, 2521, 3210, 2908, 1750,
	1749, 1282, 3387, 1467, 3135, 2520, 3120, 3119, 1476, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1307, 1306, 1308, 1309,
	618, 2100, 2522, 2524, 2399, 2101, 2759, 2098, 3385, 1467,
	2675, 2099, 2096, 3037, 2679, 3035, 2097, 2986, 2922, 2907,
	2767, 2703, 2678, 629, 2702, 2425, 1816, 1816, 2413, 1430,
	2147, 1279, 2146, 1280, 1281, 1988, 1814, 1814, 1477, 1817,
	1970, 1753, 1432, 1719, 1687, 1279, 1679, 1280, 1281, 1669,
	1298, 1665, 1661, 1294, 1660, 1295, 2680, 1279, 1282, 1280,
	1281, 2676, 1787, 1659, 3319, 1467, 2677, 629, 629, 1296,
	1310, 1311, 1293, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1307, 1306, 1308, 1309, 1478, 1085, 1251, 1794, 1829, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
	1807, 1808, 1795, 1785, 1298, 1768, 2204, 2341, 3402, 1467,
	101, 3364, 1467, 1279, 1939, 1280, 1281, 1282, 1278, 1467,
	629, 100, 618, 99, 2341, 3301, 1282, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1307, 1306, 1308, 1309, 1298, 1501,
	1282, 3317, 1467, 1897, 1757, 1758, 3166, 1936, 3165, 1282,
	2253, 2341, 3281, 187, 1282, 2341, 3277, 1788, 629, 3264,
	1467, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1306,
	1308, 1309, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1306,
	1308, 1309, 187, 2341, 3228, 629, 3124, 1793, 3123, 1927,
	1279, 1467, 1280, 1281, 2969, 187, 2961, 3225, 2452, 629,
	3315, 1467, 1939, 1975, 187, 1976, 187, 1959, 187, 187,
	1467, 92, 1818, 1897, 101, 3143, 1467, 94, 1823, 1824,
	1282, 2656, 93, 629, 1467, 100, 2430, 99, 2341, 3131,
	1938, 2191, 3188, 1467, 2042, 1936, 94, 3186, 1467, 2623,
	1941, 1942, 2043, 1839, 1840, 1841, 1842, 1282, 92, 1279,
	2873, 1280, 1281, 2961, 1467, 94, 2873, 1853, 1279, 93,
	1280, 1281, 2341, 2959, 1282, 95, 2125, 1467, 2208, 2126,
	96, 1937, 1279, 1278, 1280, 1281, 1467, 1467, 629, 2875,
	1981, 1279, 2796, 1280, 1281, 95, 1279, 3269, 1280, 1281,
	96, 100, 1282, 2878, 1467, 1467, 1940, 3239, 2008, 1943,
	1944, 2262, 1467, 3183, 1467, 629, 2693, 2692, 2689, 2690,
	2341, 629, 2689, 2688, 1467, 2365, 1467, 2388, 1938, 2191,
	2474, 2388, 2038, 2365, 1282, 2000, 2047, 2125, 2048, 2049,
	2050, 2051, 2839, 2037, 2004, 2691, 2007, 1969, 2337, 1768,
	2052, 2053, 2054, 2055, 2058, 2059, 2060, 2061, 1467, 1980,
	2019, 1282, 1279, 94, 1280, 1281, 2114, 2596, 629, 2003,
	1278, 2068, 1983, 629, 1567, 2455, 2026, 629, 629, 1282,
	2041, 2074, 2448, 2449, 2001, 3169, 1467, 1282, 869, 1279,
	2389, 1280, 1281, 904, 2389, 2025, 903, 2024, 2364, 2023,
	2391, 1282, 2357, 2040, 2191, 2039, 1279, 1282, 1280, 1281,
	2357, 2215, 2341, 2340, 2111, 187, 1282, 2847, 1467, 2206,
	1467, 2206, 187, 1282, 1567, 1566, 1468, 1470, 2206, 187,
	187, 2084, 1282, 187, 1279, 187, 1280, 1281, 1512, 1511,
	2262, 1282, 187, 2242, 2844, 1467, 2241, 2125, 1282, 187,
	2069, 2064, 2065, 2365, 1282, 2108, 2083, 2119, 1996, 2095,
	2122, 2087, 2123, 3378, 1471, 1480, 1279, 2139, 1280, 1281,
	2842, 1467, 1960, 1765, 2365, 187, 957, 1708, 1282, 1499,
	629, 2118, 2873, 940, 2214, 2069, 2117, 1282, 2121, 939,
	2794, 1467, 958, 1279, 1282, 1280, 1281, 87, 2715, 2143,
	3223, 3345, 1605, 2144, 2145, 2140, 2294, 1467, 1282, 859,
	3284, 1279, 3154, 1280, 1281, 2277, 1467, 1282, 1474, 1279,
	3121, 1280, 1281, 1282, 2269, 1467, 3049, 2210, 1282, 2182,
	2183, 1479, 2942, 1279, 2185, 1280, 1281, 2209, 2939, 1279,
	1282, 1280, 1281, 2186, 1282, 1768, 2920, 2806, 1279, 2805,
	1280, 1281, 2159, 1282, 1569, 1279, 2150, 1280, 1281, 2173,
	2174, 3161, 2067, 2178, 1279, 2757, 1280, 1281, 2717, 1787,
	2713, 3128, 2181, 1279, 2456, 1280, 1281, 2063, 2944, 2184,
	1279, 1282, 1280, 1281, 2057, 1282, 1279, 87, 1280, 1281,
	1282, 2895, 2056, 2201, 1694, 2203, 2175, 1282, 1600, 2930,
	2849, 1596, 1565, 113, 2422, 2187, 2845, 1030, 2202, 2761,
	1279, 2817, 1280, 1281, 1282, 3155, 2225, 3397, 1282, 1279,
	2082, 1280, 1281, 2813, 2885, 2886, 1279, 2803, 1280, 1281,
	1973, 1755, 3395, 2240, 2421, 1282, 2802, 3371, 3250, 3174,
	1279, 2888, 1280, 1281, 1282, 2189, 2931, 2932, 2933, 1279,
	2709, 1280, 1281, 1282, 2708, 1279, 2926, 1280, 1281, 2707,
	1279, 2623, 1280, 1281, 1788, 2417, 2435, 2200, 2799, 2891,
	2176, 2890, 1279, 2308, 1280, 1281, 1279, 1939, 1280, 1281,
	2307, 187, 2422, 1282, 3019, 1279, 3018, 1280, 1281, 187,
	1282, 1640, 2642, 1756, 1816, 2641, 3351, 2306, 2645, 3302,
	629, 2305, 2217, 2646, 1814, 1987, 2326, 2927, 2928, 2929,
	2312, 629, 1475, 1279, 1636, 1280, 1281, 1279, 2304, 1280,
	1281, 2643, 1279, 1979, 1280, 1281, 2644, 2303, 2879, 1279,
	2601, 1280, 1281, 2600, 3017, 187, 2292, 2866, 3207, 187,
	3028, 2324, 1641, 1642, 1643, 2865, 1279, 182, 1280, 1281,
	1279, 3030, 1280, 1281, 2869, 2613, 2615, 2361, 2610, 2251,
	873, 1637, 1638, 1639, 2616, 37, 2286, 1279, 874, 1280,
	1281, 121, 1707, 2285, 2381, 2327, 1279, 2329, 1280, 1281,
	845, 2426, 2687, 1282, 164, 1279, 2406, 1280, 1281, 1282,
	1837, 996, 995, 1938, 2775, 2370, 2373, 2374, 2375, 2371,
	1282, 2372, 2376, 629, 1838, 2885, 2886, 2421, 1282, 187,
	92, 2338, 92, 2342, 2502, 1279, 187, 1280, 1281, 94,
	2462, 93, 1279, 93, 1280, 1281, 2647, 2401, 2374, 2375,
	629, 2351, 1441, 2314, 1937, 1250, 1282, 629, 101, 121,
	2871, 94, 161, 3410, 162, 2705, 629, 1282, 2179, 100,
	2168, 99, 1998, 1999, 1282, 2447, 2380, 2354, 2339, 641,
	94, 3324, 1432, 3224, 181, 3150, 2284, 2686, 2402, 2385,
	2378, 1984, 2283, 2409, 2411, 187, 187, 187, 187, 187,
	2386, 2471, 1282, 2282, 2599, 1465, 1461, 2074, 2167, 2424,
	2390, 2281, 2598, 2393, 2427, 2428, 187, 187, 1831, 2334,
	1462, 2851, 1832, 2166, 2400, 2195, 2403, 99, 2469, 881,
	882, 3195, 187, 3194, 1282, 1279, 2414, 1280, 1281, 2280,
	3177, 1279, 3036, 1280, 1281, 1977, 1978, 1464, 3034, 1463,
	2279, 629, 1279, 1892, 1280, 1281, 1282, 2278, 2423, 2433,
	1279, 3033, 1280, 1281, 101, 3026, 2436, 2437, 2438, 2431,
	2940, 100, 2432, 2468, 2870, 100, 101, 99, 2868, 879,
	2718, 1924, 885, 2109, 885, 2272, 1583, 100, 1279, 880,
	1280, 1281, 1588, 3025, 2859, 165, 2457, 2458, 2357, 1279,
	3008, 1280, 1281, 2337, 171, 2548, 1279, 1954, 1280, 1281,
	3399, 3398, 103, 2243, 1971, 1493, 2467, 2271, 1282, 1468,
	1958, 2528, 1484, 106, 107, 2482, 2483, 2484, 2485, 2486,
	629, 2541, 3398, 3399, 1279, 3213, 1280, 1281, 629, 2270,
	2906, 2511, 2491, 871, 88, 1, 1768, 2495, 2910, 3334,
	591, 2500, 2510, 1982, 2501, 1961, 1439, 2494, 3372, 3330,
	3331, 1282, 2503, 1680, 629, 2555, 1279, 2557, 1280, 1281,
	1670, 2584, 2972, 1898, 3151, 2512, 2721, 2529, 187, 2115,
	2579, 2938, 629, 2568, 2569, 2570, 2571, 2072, 1279, 948,
	1280, 1281, 146, 2035, 2036, 1282, 629, 3297, 110, 906,
	1432, 2267, 109, 629, 629, 1432, 187, 187, 187, 187,
	187, 2581, 1927, 951, 1927, 1058, 1282, 2110, 187, 2962,
	2407, 156, 2044, 187, 1518, 1516, 187, 1517, 187, 2584,
	1515, 187, 187, 187, 1282, 2553, 1520, 1519, 2620, 2781,
	2635, 2244, 861, 2818, 2266, 1759, 2626, 625, 2377, 2655,
	1279, 2626, 1280, 1281, 2086, 619, 2603, 184, 1507, 2629,
	1485, 2583, 1454, 2381, 2580, 2831, 2582, 990, 2604, 2563,
	2564, 2565, 2566, 2567, 2591, 1282, 187, 581, 2265, 2694,
	1282, 2148, 587, 1324, 1282, 2602, 1754, 2597, 2605, 629,
	2394, 901, 1432, 1279, 893, 1280, 1281, 629, 1972, 2263,
	2328, 900, 187, 2595, 2631, 2617, 2618, 2863, 2609, 2611,
	2344, 2614, 2637, 2638, 2607, 2640, 187, 2259, 2657, 3206,
	3027, 2658, 2741, 2648, 862, 3282, 863, 1279, 2636, 1280,
	1281, 2639, 2404, 1481, 187, 2659, 2838, 187, 2720, 2592,
	2593, 2594, 95, 2634, 2652, 2653, 2216, 96, 1279, 1718,
	1280, 1281, 1826, 2665, 2013, 2698, 2699, 3003, 2258, 2695,
	1780, 2697, 2696, 2254, 650, 649, 1279, 2221, 1280, 1281,
	2370, 2373, 2374, 2375, 2371, 647, 2372, 2376, 2330, 2749,
	2358, 1285, 787, 2748, 2318, 1494, 2369, 2367, 2719, 2366,
	2074, 157, 2177, 2020, 2740, 2887, 2883, 3326, 169, 2015,
	2752, 2011, 2336, 743, 659, 651, 2706, 1279, 643, 1280,
	1281, 742, 1279, 629, 1280, 1281, 1279, 741, 1280, 1281,
	2903, 2747, 2771, 3311, 2770, 2773, 2774, 2477, 2758, 2768,
	2479, 2405, 2744, 2754, 1263, 1457, 637, 919, 187, 3156,
	177, 3230, 2194, 2800, 1456, 2779, 2753, 1856, 2786, 1857,
	3237, 2729, 2783, 2784, 2956, 2785, 2778, 2710, 2787, 2453,
	2789, 2102, 2791, 2833, 2769, 63, 41, 2772, 3201, 3270,
	2837, 740, 737, 3005, 3006, 3007, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 2575, 2576, 3253,
	3254, 736, 176, 178, 179, 180, 3255, 187, 1884, 632,
	3347, 1254, 2207, 887, 32, 31, 2211, 2212, 2213, 30,
	29, 28, 23, 2220, 22, 21, 20, 2222, 2223, 2224,
	2855, 19, 25, 2857, 18, 17, 187, 2230, 2231, 2232,
	2233, 2234, 2235, 2236, 2237, 2238, 2239, 2867, 16, 2860,
	2732, 2872, 2852, 2853, 3367, 187, 3409, 115, 187, 187,
	187, 2892, 50, 2889, 47, 45, 2882, 123, 629, 629,
	122, 48, 44, 2246, 2247, 2248, 2249, 2250, 2856, 2252,
	2896, 1033, 42, 27, 2255, 2256, 26, 2257, 2898, 2899,
	2260, 15, 2261, 2945, 2946, 2749, 2264, 2897, 2904, 2748,
	2268, 14, 2905, 13, 2273, 2274, 2275, 2276, 2966, 2967,
	12, 11, 629, 629, 629, 629, 10, 2287, 9, 2290,
	2291, 5, 4, 2915, 2916, 35, 34, 2293, 2295, 1465,
	1461, 33, 1283, 1257, 2298, 2299, 2300, 2301, 2302, 24,
	2, 2440, 2104, 2921, 1462, 2923, 2309, 2310, 0, 2311,
	0, 1982, 0, 2313, 0, 0, 0, 0, 0, 0,
	1330, 0, 0, 2325, 0, 2968, 2919, 0, 0, 1458,
	1459, 1464, 0, 1463, 0, 2949, 0, 0, 0, 2953,
	2954, 2955, 0, 0, 0, 2934, 0, 0, 2935, 2936,
	2937, 0, 2985, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 2979, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2992, 1432, 0, 0, 0, 3022, 629,
	0, 629, 0, 0, 0, 0, 0, 0, 0, 2981,
	0, 3001, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 3043,
	3051, 0, 0, 0, 0, 0, 0, 37, 0, 0,
	2626, 0, 0, 0, 0, 0, 0, 3045, 3023, 0,
	0, 3032, 3031, 3047, 2629, 0, 0, 0, 2629, 0,
	0, 3041, 3039, 629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 629,
	0, 0, 0, 0, 0, 0, 0, 0, 3129, 0,
	3055, 0, 629, 0, 0, 0, 0, 3052, 3053, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3125, 0, 0, 0,
	0, 3127, 3171, 1816, 3172, 3153, 3126, 3133, 3141, 0,
	0, 3146, 0, 1814, 0, 3175, 3145, 629, 0, 0,
	1483, 629, 629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3136, 3137, 3138, 0, 0, 0,
	629, 0, 0, 0, 3176, 0, 0, 0, 1570, 0,
	0, 0, 0, 0, 0, 0, 3196, 3197, 0, 2536,
	2537, 2538, 2539, 2540, 0, 3217, 0, 3199, 3198, 0,
	0, 0, 0, 3178, 0, 0, 3205, 3181, 2545, 3216,
	3214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2629, 0, 3220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3222, 0, 0,
	0, 0, 0, 0, 0, 629, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3241, 0, 3238, 0, 0, 1720, 3236, 0, 0, 3233,
	37, 3229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 629, 0, 2632, 0, 0, 0,
	0, 0, 0, 0, 1432, 0, 629, 0, 0, 0,
	0, 0, 0, 2650, 2651, 0, 0, 3259, 0, 3248,
	3260, 0, 0, 0, 0, 0, 3268, 3258, 0, 0,
	629, 629, 0, 0, 0, 0, 0, 0, 0, 3275,
	0, 0, 0, 0, 0, 0, 3283, 0, 3285, 0,
	2626, 0, 3280, 3312, 37, 629, 0, 3288, 3296, 3313,
	3293, 0, 3290, 3153, 3298, 3289, 3287, 0, 0, 187,
	629, 3292, 3291, 0, 0, 0, 3242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3322, 0, 0,
	0, 0, 3325, 0, 0, 0, 3343, 3333, 0, 3338,
	0, 0, 0, 0, 0, 0, 3312, 0, 0, 0,
	0, 0, 3313, 3350, 629, 3352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3361, 0, 629, 0, 3366, 0,
	0, 2777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 629, 0, 629, 0, 0, 0, 3381,
	1816, 3379, 2792, 2793, 2795, 2797, 3390, 0, 3389, 3394,
	1814, 3396, 3393, 0, 3392, 0, 0, 0, 2804, 0,
	0, 3312, 0, 2808, 2809, 2810, 2811, 3313, 3411, 2812,
	3405, 2814, 2815, 2816, 3419, 3417, 2820, 2821, 2822, 2823,
	2824, 2825, 2826, 2827, 2828, 2829, 0, 0, 1775, 1776,
	1777, 1778, 0, 0, 2836, 0, 1816, 2840, 0, 2841,
	2843, 3428, 2846, 2848, 3429, 3430, 1814, 3172, 3427, 2854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	885, 1820, 1821, 0, 0, 0, 885, 885, 1825, 0,
	0, 0, 1830, 0, 2876, 2877, 0, 0, 2881, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 0, 2893, 2894, 0, 1878,
	1879, 1880, 1881, 1882, 1883, 1885, 1889, 1890, 1891, 0,
	1893, 1894, 1895, 0, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, 1919, 1920, 1921, 1922, 1923, 0, 1925, 182,
	1932, 1933, 885, 0, 885, 885, 885, 885, 885, 0,
	0, 0, 0, 0, 0, 1946, 1947, 1948, 1949, 1950,
	1951, 1952, 1953, 121, 1955, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1994,
	1995, 0, 0, 0, 0, 2980, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 0, 162, 0, 0, 0,
	0, 0, 0, 3365, 0, 0, 2032, 0, 0, 182,
	0, 2991, 0, 1535, 0, 0, 181, 0, 0, 0,
	0, 0, 2994, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 3002, 143, 0, 0, 0, 0,
	0, 0, 3009, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 0,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 130, 131, 153, 152, 181, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1523, 78, 39, 40, 80,
	3142, 0, 0, 0, 0, 0, 0, 0, 0, 3149,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	43, 69, 70, 0, 67, 71, 3159, 3160, 0, 3162,
	0, 3163, 3164, 68, 0, 0, 3167, 3168, 0, 3170,
	3173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3182, 3184, 3185, 3187, 3189,
	3191, 0, 56, 0, 0, 147, 128, 150, 135, 127,
	0, 148, 149, 0, 87, 0, 0, 165, 1536, 0,
	0, 0, 0, 0, 0, 0, 171, 136, 0, 0,
	0, 0, 0, 156, 0, 0, 0, 0, 3221, 0,
	0, 139, 137, 132, 133, 134, 138, 0, 0, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 794,
	79, 0, 140, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 1552, 1553, 1554,
	1555, 1556, 1557, 0, 1558, 1559, 1560, 1561, 1562, 1537,
	1538, 1539, 1540, 1521, 1522, 1550, 0, 1524, 0, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 2219, 0,
	1534, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 2226,
	2227, 2228, 2229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 858, 0, 79,
	3243, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	46, 49, 52, 51, 54, 3249, 66, 858, 0, 75,
	72, 0, 0, 0, 1330, 0, 0, 0, 0, 0,
	0, 0, 0, 918, 3265, 0, 0, 0, 0, 0,
	3266, 3267, 55, 83, 82, 0, 0, 64, 65, 53,
	0, 0, 0, 0, 0, 73, 74, 0, 0, 0,
	0, 0, 3278, 157, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3305, 3306, 0, 0, 57, 58, 0, 59, 60,
	61, 62, 0, 0, 0, 3314, 3316, 3318, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 1551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3346, 0, 0, 0, 0, 0, 1483, 0, 0, 0,
	144, 0, 0, 145, 0, 0, 0, 0, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 0,
	0, 0, 0, 0, 176, 178, 179, 180, 0, 0,
	3363, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 753, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3384, 3386, 3388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 81, 0, 0, 0,
	0, 0, 0, 3408, 0, 0, 0, 0, 0, 608,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 1535,
	3421, 3422, 0, 0, 0, 0, 0, 0, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 0,
	0, 0, 0, 0, 176, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 86, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 0, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 885, 0, 0, 0,
	0, 0, 0, 0, 2530, 2531, 0, 0, 2533, 0,
	0, 2535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2542, 2543, 2544, 0, 0, 0, 744, 0, 0,
	0, 1523, 0, 2549, 2550, 0, 0, 0, 2551, 2552,
	0, 0, 1901, 2554, 0, 0, 2556, 0, 0, 2558,
	2559, 2560, 2561, 0, 0, 0, 0, 2562, 1901, 1901,
	1901, 1901, 1901, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 885, 0, 0, 0,
	0, 0, 0, 2585, 2586, 2587, 2588, 2589, 2590, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2621, 0, 910,
	0, 917, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2654, 0, 0, 0, 1093, 0,
	1093, 1093, 1549, 1552, 1553, 1554, 1555, 1556, 1557, 0,
	1558, 1559, 1560, 1561, 1562, 1537, 1538, 1539, 1540, 1521,
	1522, 1550, 79, 1524, 0, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 0, 0, 1534, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 0, 0, 0, 0, 0,
	858, 1320, 1321, 1322, 2716, 1325, 0, 1326, 1327, 1328,
	0, 1331, 1332, 1334, 1334, 0, 1334, 1338, 1338, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 0, 0, 0, 1402, 0, 1404, 1405, 1406, 1407,
	1408, 0, 0, 0, 2798, 0, 0, 0, 0, 0,
	1338, 1338, 1338, 1338, 1338, 0, 0, 0, 2807, 0,
	0, 0, 0, 0, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1551, 0, 1437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1443, 0,
	0, 0, 0, 0, 858, 0, 0, 0, 858, 0,
	0, 0, 0, 0, 858, 0, 0, 0, 0, 0,
	0, 0, 628, 1246, 628, 628, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 788, 796, 797, 798, 799,
	800, 789, 791, 0, 628, 628, 790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 793,
	801, 802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2941, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2750, 2751, 0, 0,
	0, 0, 0, 0, 0, 0, 2965, 0, 803, 804,
	805, 806, 807, 808, 809, 810, 811, 812, 813, 814,
	815, 816, 817, 818, 819, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	0, 0, 0, 0, 2982, 0, 2983, 0, 0, 2984,
	0, 0, 2987, 2988, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2993, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1431, 0, 0, 3010,
	0, 0, 3011, 0, 3012, 3013, 0, 3014, 0, 3015,
	0, 0, 0, 0, 0, 0, 1095, 0, 1095, 1095,
	0, 0, 1093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3040, 0, 0, 0, 1253, 1255,
	0, 0, 0, 0, 0, 3048, 0, 0, 3050, 0,
	0, 0, 0, 0, 628, 628, 0, 0, 0, 0,
	0, 0, 3054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3122, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1564, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1573, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 760, 0, 0, 764, 0, 761, 762, 628, 0,
	1599, 763, 0, 0, 0, 0, 0, 0, 1608, 0,
	0, 1431, 1610, 0, 0, 1613, 1614, 628, 628, 0,
	628, 0, 628, 628, 0, 628, 628, 628, 628, 628,
	628, 0, 0, 0, 0, 3204, 1093, 1093, 1431, 1645,
	1646, 1431, 628, 1431, 0, 1651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1711, 0, 0, 628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1445, 1446,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3261, 0, 0, 3262, 0, 3263, 0,
	0, 0, 910, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1616, 1616, 0, 1616, 0, 1616, 1616, 0, 1625,
	1616, 1616, 1616, 1616, 1616, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 910, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1693, 0, 0, 0, 0, 0, 2014, 0, 0,
	0, 0, 0, 0, 3344, 0, 0, 1715, 0, 0,
	628, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 3358, 0, 3359, 0, 3360,
	788, 796, 797, 798, 799, 800, 789, 791, 0, 0,
	1095, 790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 793, 801, 802, 918, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 0, 0, 1431, 0, 0, 0, 0,
	918, 0, 0, 0, 0, 3406, 0, 3407, 0, 0,
	0, 2750, 2751, 0, 0, 0, 0, 0, 0, 0,
	628, 628, 0, 803, 804, 805, 806, 807, 808, 809,
	810, 811, 812, 813, 814, 815, 816, 817, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 0, 0, 628, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 0, 0, 1095, 1095, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 0, 0, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 0, 0, 2196,
	1810, 0, 0, 0, 0, 0, 0, 0, 3073, 3075,
	3074, 3089, 3090, 3091, 3092, 3093, 3094, 3095, 697, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 1855, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 0, 0, 2092, 2093,
	2094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 0, 0, 628, 1608, 0, 0, 1608, 0,
	1608, 1095, 0, 0, 0, 0, 2124, 1945, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 1974, 628, 0, 0, 0,
	628, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 745, 2296, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1489, 0, 0, 1095,
	0, 0, 0, 0, 0, 0, 2323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	910, 0, 0, 0, 858, 0, 185, 0, 0, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	0, 0, 0, 0, 0, 2362, 2363, 577, 0, 0,
	0, 0, 0, 0, 2382, 0, 2383, 2384, 0, 0,
	0, 0, 868, 628, 0, 0, 0, 0, 0, 0,
	3084, 3085, 0, 0, 0, 917, 0, 0, 886, 0,
	886, 0, 0, 0, 0, 0, 0, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 910, 0, 0, 0, 0, 0, 917, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 760, 0, 676, 764, 678, 761, 762, 0, 674,
	677, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 910, 0, 0, 0, 0,
	1810, 0, 0, 0, 1810, 1810, 2460, 695, 696, 3072,
	3076, 3077, 3078, 3086, 3087, 3088, 3096, 3098, 725, 3097,
	3099, 3100, 3101, 3104, 3105, 3106, 3107, 3102, 3103, 3108,
	3056, 3060, 3057, 3058, 3059, 3071, 3061, 3062, 3063, 3064,
	3065, 3066, 3067, 3068, 3069, 3070, 3109, 3110, 3111, 3112,
	3113, 3114, 3079, 3083, 3082, 3080, 3081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 765,
	0, 766, 0, 0, 770, 0, 0, 0, 772, 771,
	0, 773, 739, 738, 0, 0, 767, 768, 0, 769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 0, 0, 2188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3115, 3116, 3117, 3118, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2572,
	0, 0, 0, 0, 0, 0, 0, 0, 2398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2014, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2630, 0, 79, 0, 0, 2014, 2014, 2014, 2014, 2014,
	0, 0, 0, 628, 0, 0, 0, 0, 0, 0,
	628, 0, 2382, 858, 1608, 1608, 0, 2014, 0, 628,
	2014, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1431, 2470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1095, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2331, 0, 0,
	0, 0, 0, 2738, 0, 0, 0, 0, 2346, 0,
	0, 0, 0, 2746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	0, 577, 0, 2780, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2429, 0, 0, 628, 0, 0, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 2454, 0, 0, 628, 0, 0,
	0, 0, 0, 2459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 1431, 0, 0, 628, 628, 1431, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2014, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2902,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 0, 0, 1431, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 0, 0, 0, 1433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2573, 0, 0,
	0, 0, 0, 0, 0, 1095, 0, 0, 0, 0,
	2776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 1616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 868, 0, 0, 0, 0, 0, 0, 2606,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1095, 0, 577, 0, 0, 0, 0,
	2633, 1616, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 0, 0, 577, 0, 0, 0, 0, 0, 0,
	3016, 0, 3020, 3021, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2630, 0, 79, 0, 2630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 910, 0, 0, 0,
	1433, 0, 0, 1433, 1986, 1433, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2909, 0,
	0, 0, 0, 0, 0, 0, 1667, 0, 3134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1717, 0, 0,
	0, 628, 628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 577, 0, 0, 0, 0, 0, 0,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 1740,
	1741, 577, 577, 577, 577, 577, 577, 577, 0, 0,
	0, 0, 0, 0, 0, 628, 628, 628, 628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2832, 0, 2630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3231, 0, 0, 0, 0, 1431, 0, 0,
	0, 0, 628, 0, 628, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3279,
	0, 0, 628, 0, 79, 0, 0, 0, 0, 2973,
	2974, 2975, 2976, 0, 0, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 886, 0, 0, 0,
	0, 0, 886, 886, 0, 0, 0, 1433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 628, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 886, 1717,
	886, 886, 886, 886, 886, 0, 3044, 182, 3046, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 0, 143, 0, 0, 0, 0, 1667, 182,
	0, 0, 0, 0, 164, 628, 0, 0, 0, 0,
	1587, 0, 0, 886, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 0, 143, 0, 868, 0, 0,
	1986, 0, 0, 0, 0, 154, 164, 0, 628, 0,
	577, 142, 0, 0, 0, 0, 3144, 1717, 0, 577,
	0, 577, 0, 577, 2022, 0, 0, 0, 0, 1095,
	0, 0, 161, 0, 162, 0, 0, 154, 0, 0,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	1591, 1592, 153, 152, 181, 0, 0, 628, 0, 0,
	0, 0, 0, 0, 161, 0, 162, 1431, 0, 628,
	0, 0, 0, 0, 3192, 0, 0, 0, 3192, 3192,
	0, 0, 1591, 1592, 153, 152, 181, 0, 0, 0,
	0, 0, 0, 628, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 1593, 150, 0, 1590, 0, 148,
	149, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 628, 0, 1986,
	0, 0, 0, 0, 0, 147, 1593, 150, 0, 1590,
	0, 148, 149, 0, 0, 0, 0, 165, 0, 628,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 628, 0, 628, 0,
	577, 0, 0, 0, 0, 0, 0, 577, 0, 0,
	0, 0, 0, 0, 577, 577, 0, 0, 577, 0,
	2180, 0, 0, 0, 0, 0, 0, 577, 0, 0,
	0, 0, 0, 0, 577, 0, 0, 0, 0, 0,
	0, 3272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3276, 0, 0, 0, 0, 0, 0,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 0, 0, 0, 0, 1095, 1095, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3320, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2832, 0, 3328, 0, 0, 0, 0, 0, 144, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 157, 0, 145, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1717, 0, 0, 0, 577, 0, 0, 0,
	0, 0, 0, 157, 1667, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 0, 177, 0, 577, 0, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 0, 0, 0,
	0, 0, 176, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 0,
	0, 0, 0, 0, 176, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 577, 0, 0, 0, 0, 0,
	0, 2439, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1931, 0,
	0, 796, 797, 0, 0, 0, 0, 1815, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 577, 577, 577, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 796, 797, 0, 0, 0, 0, 1815,
	0, 577, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 886, 803, 804, 805, 806, 807, 808, 809,
	810, 811, 812, 813, 814, 815, 816, 817, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 0, 0, 0,
	0, 0, 886, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1433, 0, 0, 0, 0,
	1433, 577, 577, 577, 577, 577, 0, 0, 0, 0,
	0, 0, 0, 2649, 0, 0, 0, 0, 577, 0,
	0, 1667, 0, 577, 0, 0, 577, 2660, 1717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	0, 0, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 0, 0, 577, 577, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1667, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1433,
	0, 0, 0, 374, 0, 0, 1229, 1214, 489, 0,
	1157, 1232, 1126, 1145, 1242, 1148, 1151, 1193, 1105, 1171,
	393, 1142, 1098, 1130, 1100, 1137, 1101, 1128, 1159, 255,
	1125, 1216, 1175, 1231, 346, 252, 1107, 1131, 407, 1147,
	194, 1195, 459, 239, 356, 353, 497, 267, 258, 254,
	237, 299, 363, 405, 479, 399, 1238, 350, 1181, 0,
	469, 378, 0, 0, 1667, 1161, 1220, 1169, 1207, 1156,
	1194, 1115, 1180, 1233, 1143, 1190, 1234, 305, 235, 307,
	193, 390, 470, 271, 0, 0, 0, 0, 618, 0,
	0, 0, 3299, 0, 3300, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 331, 340, 339, 320, 321, 323,
	325, 330, 337, 343, 1139, 1187, 1228, 1140, 1189, 250,
	303, 257, 249, 494, 1239, 1219, 1104, 1168, 1227, 0,
	0, 217, 1230, 1163, 0, 1192, 0, 1245, 1099, 1183,
	0, 1102, 1106, 1241, 1223, 1134, 260, 0, 0, 0,
	0, 0, 0, 0, 1160, 1170, 1204, 1208, 1154, 0,
	0, 0, 0, 0, 0, 0, 1132, 0, 1179, 0,
	0, 0, 1111, 1103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 1114, 0, 1133, 1205, 0, 1097, 282, 1108, 379,
	242, 0, 1212, 1222, 1155, 534, 1226, 1153, 1152, 1199,
	1112, 1218, 1146, 345, 1110, 312, 189, 213, 0, 1144,
	389, 434, 446, 1217, 1129, 1138, 240, 1136, 444, 403,
	513, 221, 269, 431, 409, 442, 416, 272, 1178, 1197,
	443, 351, 499, 425, 510, 535, 536, 248, 383, 522,
	483, 530, 549, 214, 245, 397, 476, 516, 466, 375,
	495, 496, 311, 465, 280, 192, 349, 541, 212, 452,
	230, 219, 501, 519, 274, 429, 201, 478, 508, 227,
	456, 0, 0, 551, 203, 506, 475, 371, 308, 309,
	202, 0, 430, 253, 278, 243, 392, 503, 504, 241,
	552, 216, 529, 208, 1109, 528, 385, 498, 507, 372,
	361, 207, 505, 370, 360, 316, 335, 336, 265, 291,
	423, 354, 424, 292, 381, 380, 382, 196, 517, 0,
	197, 0, 471, 518, 553, 222, 223, 225, 1124, 264,
	268, 276, 279, 287, 288, 297, 347, 396, 422, 418,
	426, 1213, 493, 511, 523, 533, 539, 540, 542, 543,
	544, 545, 546, 548, 547, 384, 295, 467, 315, 352,
	1202, 1244, 402, 445, 228, 515, 468, 1119, 1123, 1117,
	1184, 1118, 1173, 1174, 1120, 1235, 1236, 1237, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 1206, 1113, 0,
	1121, 1122, 1215, 1224, 1225, 572, 362, 458, 512, 317,
	329, 332, 322, 341, 0, 342, 318, 319, 324, 326,
	327, 328, 333, 334, 338, 344, 236, 199, 368, 376,
	492, 296, 204, 205, 206, 485, 486, 487, 488, 526,
	527, 531, 435, 436, 437, 438, 277, 521, 293, 441,
	440, 313, 314, 1177, 188, 209, 348, 1240, 427, 273,
	550, 525, 520, 195, 211, 1116, 247, 1127, 1135, 0,
	1141, 1149, 1150, 1162, 1164, 1165, 1166, 1167, 1185, 1186,
	1188, 1196, 1198, 1201, 1203, 1210, 1221, 1243, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 358, 364, 365, 366,
	367, 386, 387, 388, 391, 394, 395, 398, 400, 401,
	404, 408, 412, 413, 414, 415, 417, 419, 428, 433,
	447, 448, 449, 450, 451, 454, 455, 460, 461, 462,
	463, 464, 472, 473, 477, 500, 502, 514, 532, 537,
	453, 285, 286, 420, 421, 284, 509, 538, 0, 357,
	1176, 1182, 359, 266, 289, 302, 1191, 524, 474, 215,
	439, 275, 238, 1209, 1211, 200, 234, 218, 244, 259,
	262, 306, 369, 377, 406, 411, 281, 256, 232, 432,
	229, 457, 480, 481, 482, 484, 373, 251, 410, 1172,
	1200, 355, 490, 491, 298, 374, 0, 0, 1229, 1214,
	489, 0, 1157, 1232, 1126, 1145, 1242, 1148, 1151, 1193,
	1105, 1171, 393, 1142, 1098, 1130, 1100, 1137, 1101, 1128,
	1159, 255, 1125, 1216, 1175, 1231, 346, 252, 1107, 1131,
	407, 1147, 194, 1195, 459, 239, 356, 353, 497, 267,
	258, 254, 237, 299, 363, 405, 479, 399, 1238, 350,
	1181, 0, 469, 378, 0, 0, 0, 1161, 1220, 1169,
	1207, 1156, 1194, 1115, 1180, 1233, 1143, 1190, 1234, 305,
	235, 307, 193, 390, 470, 271, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 331, 340, 339, 320,
	321, 323, 325, 330, 337, 343, 1139, 1187, 1228, 1140,
	1189, 250, 303, 257, 249, 494, 1239, 1219, 1104, 1168,
	1227, 0, 0, 217, 1230, 1163, 0, 1192, 0, 1245,
	1099, 1183, 0, 1102, 1106, 1241, 1223, 1134, 260, 0,
	0, 0, 0, 0, 0, 0, 1160, 1170, 1204, 1208,
	1154, 0, 0, 0, 0, 0, 2661, 0, 1132, 0,
	1179, 0, 0, 0, 1111, 1103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1158, 0,
	0, 0, 0, 1114, 0, 1133, 1205, 0, 1097, 282,
	1108, 379, 242, 0, 1212, 1222, 1155, 534, 1226, 1153,
	1152, 1199, 1112, 1218, 1146, 345, 1110, 312, 189, 213,
	0, 1144, 389, 434, 446, 1217, 1129, 1138, 240, 1136,
	444, 403, 513, 221, 269, 431, 409, 442, 416, 272,
	1178, 1197, 443, 351, 499, 425, 510, 535, 536, 248,
	383, 522, 483, 530, 549, 214, 245, 397, 476, 516,
	466, 375, 495, 496, 311, 465, 280, 192, 349, 541,
	212, 452, 230, 219, 501, 519, 274, 429, 201, 478,
	508, 227, 456, 0, 0, 551, 203, 506, 475, 371,
	308, 309, 202, 0, 430, 253, 278, 243, 392, 503,
	504, 241, 552, 216, 529, 208, 1109, 528, 385, 498,
	507, 372, 361, 207, 505, 370, 360, 316, 335, 336,
	265, 291, 423, 354, 424, 292, 381, 380, 382, 196,
	517, 0, 197, 0, 471, 518, 553, 222, 223, 225,
	1124, 264, 268, 276, 279, 287, 288, 297, 347, 396,
	422, 418, 426, 1213, 493, 511, 523, 533, 539, 540,
	542, 543, 544, 545, 546, 548, 547, 384, 295, 467,
	315, 352, 1202, 1244, 402, 445, 228, 515, 468, 1119,
	1123, 1117, 1184, 1118, 1173, 1174, 1120, 1235, 1236, 1237,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 1206,
	1113, 0, 1121, 1122, 1215, 1224, 1225, 572, 362, 458,
	512, 317, 329, 332, 322, 341, 0, 342, 318, 319,
	324, 326, 327, 328, 333, 334, 338, 344, 236, 199,
	368, 376, 492, 296, 204, 205, 206, 485, 486, 487,
	488, 526, 527, 531, 435, 436, 437, 438, 277, 521,
	293, 441, 440, 313, 314, 1177, 188, 209, 348, 1240,
	427, 273, 550, 525, 520, 195, 211, 1116, 247, 1127,
	1135, 0, 1141, 1149, 1150, 1162, 1164, 1165, 1166, 1167,
	1185, 1186, 1188, 1196, 1198, 1201, 1203, 1210, 1221, 1243,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 300, 301, 304, 310, 358, 364,
	365, 366, 367, 386, 387, 388, 391, 394, 395, 398,
	400, 401, 404, 408, 412, 413, 414, 415, 417, 419,
	428, 433, 447, 448, 449, 450, 451, 454, 455, 460,
	461, 462, 463, 464, 472, 473, 477, 500, 502, 514,
	532, 537, 453, 285, 286, 420, 421, 284, 509, 538,
	0, 357, 1176, 1182, 359, 266, 289, 302, 1191, 524,
	474, 215, 439, 275, 238, 1209, 1211, 200, 234, 218,
	244, 259, 262, 306, 369, 377, 406, 411, 281, 256,
	232, 432, 229, 457, 480, 481, 482, 484, 373, 251,
	410, 1172, 1200, 355, 490, 491, 298, 374, 0, 0,
	1229, 1214, 489, 0, 1157, 1232, 1126, 1145, 1242, 1148,
	1151, 1193, 1105, 1171, 393, 1142, 1098, 1130, 1100, 1137,
	1101, 1128, 1159, 255, 1125, 1216, 1175, 1231, 346, 252,
	1107, 1131, 407, 1147, 194, 1195, 459, 239, 356, 353,
	497, 267, 258, 254, 237, 299, 363, 405, 479, 399,
	1238, 350, 1181, 0, 469, 378, 0, 0, 0, 1161,
	1220, 1169, 1207, 1156, 1194, 1115, 1180, 1233, 1143, 1190,
	1234, 305, 235, 307, 193, 390, 470, 271, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 331, 340,
	339, 320, 321, 323, 325, 330, 337, 343, 1139, 1187,
	1228, 1140, 1189, 250, 303, 257, 249, 494, 1239, 1219,
	1104, 1168, 1227, 0, 0, 217, 1230, 1163, 0, 1192,
	0, 1245, 1099, 1183, 0, 1102, 1106, 1241, 1223, 1134,
	260, 0, 0, 0, 0, 0, 0, 0, 1160, 1170,
	1204, 1208, 1154, 0, 0, 0, 0, 0, 2619, 0,
	1132, 0, 1179, 0, 0, 0, 1111, 1103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1158, 0, 0, 0, 0, 1114, 0, 1133, 1205, 0,
	1097, 282, 1108, 379, 242, 0, 1212, 1222, 1155, 534,
	1226, 1153, 1152, 1199, 1112, 1218, 1146, 345, 1110, 312,
	189, 213, 0, 1144, 389, 434, 446, 1217, 1129, 1138,
	240, 1136, 444, 403, 513, 221, 269, 431, 409, 442,
	416, 272, 1178, 1197, 443, 351, 499, 425, 510, 535,
	536, 248, 383, 522, 483, 530, 549, 214, 245, 397,
	476, 516, 466, 375, 495, 496, 311, 465, 280, 192,
	349, 541, 212, 452, 230, 219, 501, 519, 274, 429,
	201, 478, 508, 227, 456, 0, 0, 551, 203, 506,
	475, 371, 308, 309, 202, 0, 430, 253, 278, 243,
	392, 503, 504, 241, 552, 216, 529, 208, 1109, 528,
	385, 498, 507, 372, 361, 207, 505, 370, 360, 316,
	335, 336, 265, 291, 423, 354, 424, 292, 381, 380,
	382, 196, 517, 0, 197, 0, 471, 518, 553, 222,
	223, 225, 1124, 264, 268, 276, 279, 287, 288, 297,
	347, 396, 422, 418, 426, 1213, 493, 511, 523, 533,
	539, 540, 542, 543, 544, 545, 546, 548, 547, 384,
	295, 467, 315, 352, 1202, 1244, 402, 445, 228, 515,
	468, 1119, 1123, 1117, 1184, 1118, 1173, 1174, 1120, 1235,
	1236, 1237, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 1206, 1113, 0, 1121, 1122, 1215, 1224, 1225, 572,
	362, 458, 512, 317, 329, 332, 322, 341, 0, 342,
	318, 319, 324, 326, 327, 328, 333, 334, 338, 344,
	236, 199, 368, 376, 492, 296, 204, 205, 206, 485,
	486, 487, 488, 526, 527, 531, 435, 436, 437, 438,
	277, 521, 293, 441, 440, 313, 314, 1177, 188, 209,
	348, 1240, 427, 273, 550, 525, 520, 195, 211, 1116,
	247, 1127, 1135, 0, 1141, 1149, 1150, 1162, 1164, 1165,
	1166, 1167, 1185, 1186, 1188, 1196, 1198, 1201, 1203, 1210,
	1221, 1243, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 300, 301, 304, 310,
	358, 364, 365, 366, 367, 386, 387, 388, 391, 394,
	395, 398, 400, 401, 404, 408, 412, 413, 414, 415,
	417, 419, 428, 433, 447, 448, 449, 450, 451, 454,
	455, 460, 461, 462, 463, 464, 472, 473, 477, 500,
	502, 514, 532, 537, 453, 285, 286, 420, 421, 284,
	509, 538, 0, 357, 1176, 1182, 359, 266, 289, 302,
	1191, 524, 474, 215, 439, 275, 238, 1209, 1211, 200,
	234, 218, 244, 259, 262, 306, 369, 377, 406, 411,
	281, 256, 232, 432, 229, 457, 480, 481, 482, 484,
	373, 251, 410, 1172, 1200, 355, 490, 491, 298, 374,
	0, 0, 1229, 1214, 489, 0, 1157, 1232, 1126, 1145,
	1242, 1148, 1151, 1193, 1105, 1171, 393, 1142, 1098, 1130,
	1100, 1137, 1101, 1128, 1159, 255, 1125, 1216, 1175, 1231,
	346, 252, 1107, 1131, 407, 1147, 194, 1195, 459, 239,
	356, 353, 497, 267, 258, 254, 237, 299, 363, 405,
	479, 399, 1238, 350, 1181, 0, 469, 378, 0, 0,
	0, 1161, 1220, 1169, 1207, 1156, 1194, 1115, 1180, 1233,
	1143, 1190, 1234, 305, 235, 307, 193, 390, 470, 271,
	0, 0, 0, 0, 784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	331, 340, 339, 320, 321, 323, 325, 330, 337, 343,
	1139, 1187, 1228, 1140, 1189, 250, 303, 257, 249, 494,
	1239, 1219, 1104, 1168, 1227, 0, 0, 217, 1230, 1163,
	0, 1192, 0, 1245, 1099, 1183, 0, 1102, 1106, 1241,
	1223, 1134, 260, 0, 0, 0, 0, 0, 0, 0,
	1160, 1170, 1204, 1208, 1154, 0, 0, 0, 0, 0,
	2002, 0, 1132, 0, 1179, 0, 0, 0, 1111, 1103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1158, 0, 0, 0, 0, 1114, 0, 1133,
	1205, 0, 1097, 282, 1108, 379, 242, 0, 1212, 1222,
	1155, 534, 1226, 1153, 1152, 1199, 1112, 1218, 1146, 345,
	1110, 312, 189, 213, 0, 1144, 389, 434, 446, 1217,
	1129, 1138, 240, 1136, 444, 403, 513, 221, 269, 431,
	409, 442, 416, 272, 1178, 1197, 443, 351, 499, 425,
	510, 535, 536, 248, 383, 522, 483, 530, 549, 214,
	245, 397, 476, 516, 466, 375, 495, 496, 311, 465,
	280, 192, 349, 541, 212, 452, 230, 219, 501, 519,
	274, 429, 201, 478, 508, 227, 456, 0, 0, 551,
	203, 506, 475, 371, 308, 309, 202, 0, 430, 253,
	278, 243, 392, 503, 504, 241, 552, 216, 529, 208,
	1109, 528, 385, 498, 507, 372, 361, 207, 505, 370,
	360, 316, 335, 336, 265, 291, 423, 354, 424, 292,
	381, 380, 382, 196, 517, 0, 197, 0, 471, 518,
	553, 222, 223, 225, 1124, 264, 268, 276, 279, 287,
	288, 297, 347, 396, 422, 418, 426, 1213, 493, 511,
	523, 533, 539, 540, 542, 543, 544, 545, 546, 548,
	547, 384, 295, 467, 315, 352, 1202, 1244, 402, 445,
	228, 515, 468, 1119, 1123, 1117, 1184, 1118, 1173, 1174,
	1120, 1235, 1236, 1237, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 1206, 1113, 0, 1121, 1122, 1215, 1224,
	1225, 572, 362, 458, 512, 317, 329, 332, 322, 341,
	0, 342, 318, 319, 324, 326, 327, 328, 333, 334,
	338, 344, 236, 199, 368, 376, 492, 296, 204, 205,
	206, 485, 486, 487, 488, 526, 527, 531, 435, 436,
	437, 438, 277, 521, 293, 441, 440, 313, 314, 1177,
	188, 209, 348, 1240, 427, 273, 550, 525, 520, 195,
	211, 1116, 247, 1127, 1135, 0, 1141, 1149, 1150, 1162,
	1164, 1165, 1166, 1167, 1185, 1186, 1188, 1196, 1198, 1201,
	1203, 1210, 1221, 1243, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 358, 364, 365, 366, 367, 386, 387, 388,
	391, 394, 395, 398, 400, 401, 404, 408, 412, 413,
	414, 415, 417, 419, 428, 433, 447, 448, 449, 450,
	451, 454, 455, 460, 461, 462, 463, 464, 472, 473,
	477, 500, 502, 514, 532, 537, 453, 285, 286, 420,
	421, 284, 509, 538, 0, 357, 1176, 1182, 359, 266,
	289, 302, 1191, 524, 474, 215, 439, 275, 238, 1209,
	1211, 200, 234, 218, 244, 259, 262, 306, 369, 377,
	406, 411, 281, 256, 232, 432, 229, 457, 480, 481,
	482, 484, 373, 251, 410, 1172, 1200, 355, 490, 491,
	298, 374, 0, 0, 1229, 1214, 489, 0, 1157, 1232,
	1126, 1145, 1242, 1148, 1151, 1193, 1105, 1171, 393, 1142,
	1098, 1130, 1100, 1137, 1101, 1128, 1159, 255, 1125, 1216,
	1175, 1231, 346, 252, 1107, 1131, 407, 1147, 194, 1195,
	459, 239, 356, 353, 497, 267, 258, 254, 237, 299,
	363, 405, 479, 399, 1238, 350, 1181, 0, 469, 378,
	0, 0, 0, 1161, 1220, 1169, 1207, 1156, 1194, 1115,
	1180, 1233, 1143, 1190, 1234, 305, 235, 307, 193, 390,
	470, 271, 0, 87, 0, 0, 618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 331, 340, 339, 320, 321, 323, 325, 330,
	337, 343, 1139, 1187, 1228, 1140, 1189, 250, 303, 257,
	249, 494, 1239, 1219, 1104, 1168, 1227, 0, 0, 217,
	1230, 1163, 0, 1192, 0, 1245, 1099, 1183, 0, 1102,
	1106, 1241, 1223, 1134, 260, 0, 0, 0, 0, 0,
	0, 0, 1160, 1170, 1204, 1208, 1154, 0, 0, 0,
	0, 0, 0, 0, 1132, 0, 1179, 0, 0, 0,
	1111, 1103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1158, 0, 0, 0, 0, 1114,
	0, 1133, 1205, 0, 1097, 282, 1108, 379, 242, 0,
	1212, 1222, 1155, 534, 1226, 1153, 1152, 1199, 1112, 1218,
	1146, 345, 1110, 312, 189, 213, 0, 1144, 389, 434,
	446, 1217, 1129, 1138, 240, 1136, 444, 403, 513, 221,
	269, 431, 409, 442, 416, 272, 1178, 1197, 443, 351,
	499, 425, 510, 535, 536, 248, 383, 522, 483, 530,
	549, 214, 245, 397, 476, 516, 466, 375, 495, 496,
	311, 465, 280, 192, 349, 541, 212, 452, 230, 219,
	501, 519, 274, 429, 201, 478, 508, 227, 456, 0,
	0, 551, 203, 506, 475, 371, 308, 309, 202, 0,
	430, 253, 278, 243, 392, 503, 504, 241, 552, 216,
	529, 208, 1109, 528, 385, 498, 507, 372, 361, 207,
	505, 370, 360, 316, 335, 336, 265, 291, 423, 354,
	424, 292, 381, 380, 382, 196, 517, 0, 197, 0,
	471, 518, 553, 222, 223, 225, 1124, 264, 268, 276,
	279, 287, 288, 297, 347, 396, 422, 418, 426, 1213,
	493, 511, 523, 533, 539, 540, 542, 543, 544, 545,
	546, 548, 547, 384, 295, 467, 315, 352, 1202, 1244,
	402, 445, 228, 515, 468, 1119, 1123, 1117, 1184, 1118,
	1173, 1174, 1120, 1235, 1236, 1237, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 1206, 1113, 0, 1121, 1122,
	1215, 1224, 1225, 572, 362, 458, 512, 317, 329, 332,
	322, 341, 0, 342, 318, 319, 324, 326, 327, 328,
	333, 334, 338, 344, 236, 199, 368, 376, 492, 296,
	204, 205, 206, 485, 486, 487, 488, 526, 527, 531,
	435, 436, 437, 438, 277, 521, 293, 441, 440, 313,
	314, 1177, 188, 209, 348, 1240, 427, 273, 550, 525,
	520, 195, 211, 1116, 247, 1127, 1135, 0, 1141, 1149,
	1150, 1162, 1164, 1165, 1166, 1167, 1185, 1186, 1188, 1196,
	1198, 1201, 1203, 1210, 1221, 1243, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	300, 301, 304, 310, 358, 364, 365, 366, 367, 386,
	387, 388, 391, 394, 395, 398, 400, 401, 404, 408,
	412, 413, 414, 415, 417, 419, 428, 433, 447, 448,
	449, 450, 451, 454, 455, 460, 461, 462, 463, 464,
	472, 473, 477, 500, 502, 514, 532, 537, 453, 285,
	286, 420, 421, 284, 509, 538, 0, 357, 1176, 1182,
	359, 266, 289, 302, 1191, 524, 474, 215, 439, 275,
	238, 1209, 1211, 200, 234, 218, 244, 259, 262, 306,
	369, 377, 406, 411, 281, 256, 232, 432, 229, 457,
	480, 481, 482, 484, 373, 251, 410, 1172, 1200, 355,
	490, 491, 298, 374, 0, 0, 1229, 1214, 489, 0,
	1157, 1232, 1126, 1145, 1242, 1148, 1151, 1193, 1105, 1171,
	393, 1142, 1098, 1130, 1100, 1137, 1101, 1128, 1159, 255,
	1125, 1216, 1175, 1231, 346, 252, 1107, 1131, 407, 1147,
	194, 1195, 459, 239, 356, 353, 497, 267, 258, 254,
	237, 299, 363, 405, 479, 399, 1238, 350, 1181, 0,
	469, 378, 0, 0, 0, 1161, 1220, 1169, 1207, 1156,
	1194, 1115, 1180, 1233, 1143, 1190, 1234, 305, 235, 307,
	193, 390, 470, 271, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 331, 340, 339, 320, 321, 323,
	325, 330, 337, 343, 1139, 1187, 1228, 1140, 1189, 250,
	303, 257, 249, 494, 1239, 1219, 1104, 1168, 1227, 0,
	0, 217, 1230, 1163, 0, 1192, 0, 1245, 1099, 1183,
	0, 1102, 1106, 1241, 1223, 1134, 260, 0, 0, 0,
	0, 0, 0, 0, 1160, 1170, 1204, 1208, 1154, 0,
	0, 0, 0, 0, 0, 0, 1132, 0, 1179, 0,
	0, 0, 1111, 1103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 1114, 0, 1133, 1205, 0, 1097, 282, 1108, 379,
	242, 0, 1212, 1222, 1155, 534, 1226, 1153, 1152, 1199,
	1112, 1218, 1146, 345, 1110, 312, 189, 213, 0, 1144,
	389, 434, 446, 1217, 1129, 1138, 240, 1136, 444, 403,
	513, 221, 269, 431, 409, 442, 416, 272, 1178, 1197,
	443, 351, 499, 425, 510, 535, 536, 248, 383, 522,
	483, 530, 549, 214, 245, 397, 476, 516, 466, 375,
	495, 496, 311, 465, 280, 192, 349, 541, 212, 452,
	230, 219, 501, 519, 274, 429, 201, 478, 508, 227,
	456, 0, 0, 551, 203, 506, 475, 371, 308, 309,
	202, 0, 430, 253, 278, 243, 392, 503, 504, 241,
	552, 216, 529, 208, 1109, 528, 385, 498, 507, 372,
	361, 207, 505, 370, 360, 316, 335, 336, 265, 291,
	423, 354, 424, 292, 381, 380, 382, 196, 517, 0,
	197, 0, 471, 518, 553, 222, 223, 225, 1124, 264,
	268, 276, 279, 287, 288, 297, 347, 396, 422, 418,
	426, 1213, 493, 511, 523, 533, 539, 540, 542, 543,
	544, 545, 546, 548, 547, 384, 295, 467, 315, 352,
	1202, 1244, 402, 445, 228, 515, 468, 1119, 1123, 1117,
	1184, 1118, 1173, 1174, 1120, 1235, 1236, 1237, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 1206, 1113, 0,
	1121, 1122, 1215, 1224, 1225, 572, 362, 458, 512, 317,
	329, 332, 322, 341, 0, 342, 318, 319, 324, 326,
	327, 328, 333, 334, 338, 344, 236, 199, 368, 376,
	492, 296, 204, 205, 206, 485, 486, 487, 488, 526,
	527, 531, 435, 436, 437, 438, 277, 521, 293, 441,
	440, 313, 314, 1177, 188, 209, 348, 1240, 427, 273,
	550, 525, 520, 195, 211, 1116, 247, 1127, 1135, 0,
	1141, 1149, 1150, 1162, 1164, 1165, 1166, 1167, 1185, 1186,
	1188, 1196, 1198, 1201, 1203, 1210, 1221, 1243, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 358, 364, 365, 366,
	367, 386, 387, 388, 391, 394, 395, 398, 400, 401,
	404, 408, 412, 413, 414, 415, 417, 419, 428, 433,
	447, 448, 449, 450, 451, 454, 455, 460, 461, 462,
	463, 464, 472, 473, 477, 500, 502, 514, 532, 537,
	453, 285, 286, 420, 421, 284, 509, 538, 0, 357,
	1176, 1182, 359, 266, 289, 302, 1191, 524, 474, 215,
	439, 275, 238, 1209, 1211, 200, 234, 218, 244, 259,
	262, 306, 369, 377, 406, 411, 281, 256, 232, 432,
	229, 457, 480, 481, 482, 484, 373, 251, 410, 1172,
	1200, 355, 490, 491, 298, 374, 0, 0, 1229, 1214,
	489, 0, 1157, 1232, 1126, 1145, 1242, 1148, 1151, 1193,
	1105, 1171, 393, 1142, 1098, 1130, 1100, 1137, 1101, 1128,
	1159, 255, 1125, 1216, 1175, 1231, 346, 252, 1107, 1131,
	407, 1147, 194, 1195, 459, 239, 356, 353, 497, 267,
	258, 254, 237, 299, 363, 405, 479, 399, 1238, 350,
	1181, 0, 469, 378, 0, 0, 0, 1161, 1220, 1169,
	1207, 1156, 1194, 1115, 1180, 1233, 1143, 1190, 1234, 305,
	235, 307, 193, 390, 470, 271, 0, 0, 0, 0,
	784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 331, 340, 339, 320,
	321, 323, 325, 330, 337, 343, 1139, 1187, 1228, 1140,
	1189, 250, 303, 257, 249, 494, 1239, 1219, 1104, 1168,
	1227, 0, 0, 217, 1230, 1163, 0, 1192, 0, 1245,
	1099, 1183, 0, 1102, 1106, 1241, 1223, 1134, 260, 0,
	0, 0, 0, 0, 0, 0, 1160, 1170, 1204, 1208,
	1154, 0, 0, 0, 0, 0, 0, 0, 1132, 0,
	1179, 0, 0, 0, 1111, 1103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1158, 0,
	0, 0, 0, 1114, 0, 1133, 1205, 0, 1097, 282,
	1108, 379, 242, 0, 1212, 1222, 1155, 534, 1226, 1153,
	1152, 1199, 1112, 1218, 1146, 345, 1110, 312, 189, 213,
	0, 1144, 389, 434, 446, 1217, 1129, 1138, 240, 1136,
	444, 403, 513, 221, 269, 431, 409, 442, 416, 272,
	1178, 1197, 443, 351, 499, 425, 510, 535, 536, 248,
	383, 522, 483, 530, 549, 214, 245, 397, 476, 516,
	466, 375, 495, 496, 311, 465, 280, 192, 349, 541,
	212, 452, 230, 219, 501, 519, 274, 429, 201, 478,
	508, 227, 456, 0, 0, 551, 203, 506, 475, 371,
	308, 309, 202, 0, 430, 253, 278, 243, 392, 503,
	504, 241, 552, 216, 529, 208, 1109, 528, 385, 498,
	507, 372, 361, 207, 505, 370, 360, 316, 335, 336,
	265, 291, 423, 354, 424, 292, 381, 380, 382, 196,
	517, 0, 197, 0, 471, 518, 553, 222, 223, 225,
	1124, 264, 268, 276, 279, 287, 288, 297, 347, 396,
	422, 418, 426, 1213, 493, 511, 523, 533, 539, 540,
	542, 543, 544, 545, 546, 548, 547, 384, 295, 467,
	315, 352, 1202, 1244, 402, 445, 228, 515, 468, 1119,
	1123, 1117, 1184, 1118, 1173, 1174, 1120, 1235, 1236, 1237,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 1206,
	1113, 0, 1121, 1122, 1215, 1224, 1225, 572, 362, 458,
	512, 317, 329, 332, 322, 341, 0, 342, 318, 319,
	324, 326, 327, 328, 333, 334, 338, 344, 236, 199,
	368, 376, 492, 296, 204, 205, 206, 485, 486, 487,
	488, 526, 527, 531, 435, 436, 437, 438, 277, 521,
	293, 441, 440, 313, 314, 1177, 188, 209, 348, 1240,
	427, 273, 550, 525, 520, 195, 211, 1116, 247, 1127,
	1135, 0, 1141, 1149, 1150, 1162, 1164, 1165, 1166, 1167,
	1185, 1186, 1188, 1196, 1198, 1201, 1203, 1210, 1221, 1243,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 300, 301, 304, 310, 358, 364,
	365, 366, 367, 386, 387, 388, 391, 394, 395, 398,
	400, 401, 404, 408, 412, 413, 414, 415, 417, 419,
	428, 433, 447, 448, 449, 450, 451, 454, 455, 460,
	461, 462, 463, 464, 472, 473, 477, 500, 502, 514,
	532, 537, 453, 285, 286, 420, 421, 284, 509, 538,
	0, 357, 1176, 1182, 359, 266, 289, 302, 1191, 524,
	474, 215, 439, 275, 238, 1209, 1211, 200, 234, 218,
	244, 259, 262, 306, 369, 377, 406, 411, 281, 256,
	232, 432, 229, 457, 480, 481, 482, 484, 373, 251,
	410, 1172, 1200, 355, 490, 491, 298, 374, 0, 0,
	1229, 1214, 489, 0, 1157, 1232, 1126, 1145, 1242, 1148,
	1151, 1193, 1105, 1171, 393, 1142, 1098, 1130, 1100, 1137,
	1101, 1128, 1159, 255, 1125, 1216, 1175, 1231, 346, 252,
	1107, 1131, 407, 1147, 194, 1195, 459, 239, 356, 353,
	497, 267, 258, 254, 237, 299, 363, 405, 479, 399,
	1238, 350, 1181, 0, 469, 378, 0, 0, 0, 1161,
	1220, 1169, 1207, 1156, 1194, 1115, 1180, 1233, 1143, 1190,
	1234, 305, 235, 307, 193, 390, 470, 271, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 331, 340,
	339, 320, 321, 323, 325, 330, 337, 343, 1139, 1187,
	1228, 1140, 1189, 250, 303, 257, 249, 494, 1239, 1219,
	1104, 1168, 1227, 0, 0, 217, 1230, 1163, 0, 1192,
	0, 1245, 1099, 1183, 0, 1102, 1106, 1241, 1223, 1134,
	260, 0, 0, 0, 0, 0, 0, 0, 1160, 1170,
	1204, 1208, 1154, 0, 0, 0, 0, 0, 0, 0,
	1132, 0, 1179, 0, 0, 0, 1111, 1103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1158, 0, 0, 0, 0, 1114, 0, 1133, 1205, 0,
	1097, 282, 1108, 379, 242, 0, 1212, 1222, 1155, 534,
	1226, 1153, 1152, 1199, 1112, 1218, 1146, 345, 1110, 312,
	189, 213, 0, 1144, 389, 434, 446, 1217, 1129, 1138,
	240, 1136, 444, 403, 513, 221, 269, 431, 409, 442,
	416, 272, 1178, 1197, 443, 351, 499, 425, 510, 535,
	536, 248, 383, 522, 483, 530, 549, 214, 245, 397,
	476, 516, 466, 375, 495, 496, 311, 465, 280, 192,
	349, 541, 212, 452, 230, 219, 501, 519, 274, 429,
	201, 478, 508, 227, 456, 0, 0, 551, 203, 506,
	475, 371, 308, 309, 202, 0, 430, 253, 278, 243,
	392, 503, 504, 241, 552, 216, 529, 208, 1109, 528,
	385, 498, 507, 372, 361, 207, 505, 370, 360, 316,
	335, 336, 265, 291, 423, 354, 424, 292, 381, 380,
	382, 196, 517, 0, 197, 0, 471, 518, 553, 222,
	223, 225, 1124, 264, 268, 276, 279, 287, 288, 297,
	347, 396, 422, 418, 426, 1213, 493, 511, 523, 533,
	539, 540, 542, 543, 544, 545, 546, 548, 547, 384,
	295, 467, 315, 352, 1202, 1244, 402, 445, 228, 515,
	468, 1119, 1123, 1117, 1184, 1118, 1173, 1174, 1120, 1235,
	1236, 1237, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 1206, 1113, 0, 1121, 1122, 1215, 1224, 1225, 572,
	362, 458, 512, 317, 329, 332, 322, 341, 0, 342,
	318, 319, 324, 326, 327, 328, 333, 334, 338, 344,
	236, 199, 368, 376, 492, 296, 204, 205, 206, 485,
	486, 487, 488, 526, 527, 531, 435, 436, 437, 438,
	277, 521, 293, 441, 440, 313, 314, 1177, 188, 209,
	348, 1240, 427, 273, 550, 525, 520, 195, 211, 1116,
	247, 1127, 1135, 0, 1141, 1149, 1150, 1162, 1164, 1165,
	1166, 1167, 1185, 1186, 1188, 1196, 1198, 1201, 1203, 1210,
	1221, 1243, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 300, 301, 304, 310,
	358, 364, 365, 366, 367, 386, 387, 388, 391, 394,
	395, 398, 400, 401, 404, 408, 412, 413, 414, 415,
	417, 419, 428, 433, 447, 448, 449, 450, 451, 454,
	455, 460, 461, 462, 463, 464, 472, 473, 477, 500,
	502, 514, 532, 537, 453, 285, 286, 420, 421, 284,
	509, 538, 0, 357, 1176, 1182, 359, 266, 289, 302,
	1191, 524, 474, 215, 439, 275, 238, 1209, 1211, 200,
	234, 218, 244, 259, 262, 306, 369, 377, 406, 411,
	281, 256, 232, 432, 229, 457, 480, 481, 482, 484,
	373, 251, 410, 1172, 1200, 355, 490, 491, 298, 374,
	0, 0, 0, 0, 489, 0, 672, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 660, 0, 0, 0, 255, 665, 0, 0, 0,
	346, 252, 0, 0, 407, 0, 194, 0, 459, 239,
	356, 353, 497, 267, 258, 254, 237, 299, 363, 405,
	479, 399, 671, 350, 0, 0, 469, 378, 0, 0,
	0, 0, 0, 667, 668, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 235, 307, 193, 390, 470, 271,
	0, 87, 0, 0, 784, 755, 756, 788, 796, 797,
	798, 799, 800, 789, 791, 0, 0, 226, 790, 233,
	699, 701, 700, 715, 716, 717, 718, 719, 720, 721,
	697, 793, 801, 802, 0, 250, 303, 257, 249, 494,
	0, 0, 1886, 1887, 1888, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 642, 657, 0, 670, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 655,
	0, 0, 0, 0, 749, 0, 656, 0, 0, 664,
	803, 804, 805, 806, 807, 808, 809, 810, 811, 812,
	813, 814, 815, 816, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 379, 242, 0, 748, 0,
	0, 534, 0, 0, 746, 0, 0, 0, 0, 345,
	0, 312, 189, 213, 0, 0, 389, 434, 446, 0,
	0, 0, 240, 0, 444, 403, 513, 221, 269, 431,
	409, 442, 416, 272, 0, 0, 443, 351, 499, 425,
	510, 535, 536, 248, 383, 522, 483, 530, 549, 214,
	245, 397, 476, 516, 466, 375, 495, 496, 311, 465,
	280, 192, 349, 541, 212, 452, 230, 219, 501, 519,
	274, 429, 201, 478, 508, 227, 456, 0, 0, 551,
	203, 506, 475, 371, 308, 309, 202, 0, 430, 253,
	278, 243, 392, 503, 504, 241, 552, 216, 529, 208,
	0, 528, 385, 498, 507, 372, 361, 207, 505, 370,
	360, 316, 710, 711, 265, 291, 423, 354, 424, 292,
	381, 380, 382, 196, 517, 0, 197, 0, 471, 518,
	553, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 347, 396, 422, 418, 426, 0, 493, 511,
	523, 533, 539, 540, 542, 543, 544, 545, 546, 548,
	547, 384, 295, 467, 315, 352, 0, 0, 402, 445,
	228, 515, 468, 760, 747, 676, 764, 678, 761, 762,
	673, 674, 677, 763, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 750, 663, 662, 0, 669, 0, 695,
	696, 698, 702, 703, 704, 712, 713, 714, 722, 724,
	725, 723, 726, 727, 728, 731, 732, 733, 734, 729,
	730, 735, 679, 683, 680, 681, 682, 694, 684, 685,
	686, 687, 688, 689, 690, 691, 692, 693, 774, 775,
	776, 777, 778, 779, 705, 709, 708, 706, 707, 661,
	188, 209, 348, 0, 427, 273, 550, 525, 520, 195,
	211, 765, 247, 766, 0, 0, 770, 0, 0, 0,
	772, 771, 0, 773, 739, 738, 0, 0, 767, 768,
	0, 769, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 358, 364, 365, 366, 367, 386, 387, 388,
	391, 394, 395, 398, 400, 401, 404, 408, 412, 413,
	414, 415, 417, 419, 428, 433, 447, 448, 449, 450,
	451, 454, 455, 460, 461, 462, 463, 464, 472, 473,
	477, 500, 502, 514, 532, 537, 453, 780, 781, 782,
	783, 284, 509, 538, 0, 357, 0, 0, 359, 266,
	289, 302, 0, 524, 474, 215, 439, 275, 238, 795,
	0, 200, 234, 218, 244, 259, 262, 306, 369, 377,
	406, 411, 281, 256, 232, 432, 229, 457, 480, 481,
	482, 484, 373, 251, 410, 0, 374, 355, 490, 491,
	298, 489, 0, 672, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 660, 0,
	0, 0, 255, 665, 0, 0, 0, 346, 252, 0,
	0, 407, 0, 194, 0, 459, 239, 356, 353, 497,
	267, 258, 254, 237, 299, 363, 405, 479, 399, 671,
	350, 0, 0, 469, 378, 0, 0, 0, 0, 0,
	667, 668, 0, 0, 0, 0, 0, 0, 2030, 0,
	305, 235, 307, 193, 390, 470, 271, 0, 87, 0,
	0, 784, 755, 756, 788, 796, 797, 798, 799, 800,
	789, 791, 0, 0, 226, 790, 233, 699, 701, 700,
	715, 716, 717, 718, 719, 720, 721, 697, 793, 801,
	802, 2031, 250, 303, 257, 249, 494, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 642, 657, 0, 670, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 654, 655, 0, 0, 0,
	0, 749, 0, 656, 0, 0, 664, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 812, 813, 814, 815,
	816, 817, 818, 819, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 379, 242, 0, 748, 0, 0, 534, 0,
	0, 746, 0, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 389, 434, 446, 0, 0, 0, 240,
	0, 444, 403, 513, 221, 269, 431, 409, 442, 416,
	272, 0, 0, 443, 351, 499, 425, 510, 535, 536,
	248, 383, 522, 483, 530, 549, 214, 245, 397, 476,
	516, 466, 375, 495, 496, 311, 465, 280, 192, 349,
	541, 212, 452, 230, 219, 501, 519, 274, 429, 201,
	478, 508, 227, 456, 0, 0, 551, 203, 506, 475,
	371, 308, 309, 202, 0, 430, 253, 278, 243, 392,
	503, 504, 241, 552, 216, 529, 208, 0, 528, 385,
	498, 507, 372, 361, 207, 505, 370, 360, 316, 710,
	711, 265, 291, 423, 354, 424, 292, 381, 380, 382,
	196, 517, 0, 197, 0, 471, 518, 553, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	396, 422, 418, 426, 0, 493, 511, 523, 533, 539,
	540, 542, 543, 544, 545, 546, 548, 547, 384, 295,
	467, 315, 352, 0, 0, 402, 445, 228, 515, 468,
	760, 747, 676, 764, 678, 761, 762, 673, 674, 677,
	763, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	750, 663, 662, 0, 669, 0, 695, 696, 698, 702,
	703, 704, 712, 713, 714, 722, 724, 725, 723, 726,
	727, 728, 731, 732, 733, 734, 729, 730, 735, 679,
	683, 680, 681, 682, 694, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 774, 775, 776, 777, 778,
	779, 705, 709, 708, 706, 707, 661, 188, 209, 348,
	0, 427, 273, 550, 525, 520, 195, 211, 765, 247,
	766, 0, 0, 770, 0, 0, 0, 772, 771, 0,
	773, 739, 738, 0, 0, 767, 768, 0, 769, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 358,
	364, 365, 366, 367, 386, 387, 388, 391, 394, 395,
	398, 400, 401, 404, 408, 412, 413, 414, 415, 417,
	419, 428, 433, 447, 448, 449, 450, 451, 454, 455,
	460, 461, 462, 463, 464, 472, 473, 477, 500, 502,
	514, 532, 537, 453, 780, 781, 782, 783, 284, 509,
	538, 0, 357, 0, 0, 359, 266, 289, 302, 0,
	524, 474, 215, 439, 275, 238, 795, 0, 200, 234,
	218, 244, 259, 262, 306, 369, 377, 406, 411, 281,
	256, 232, 432, 229, 457, 480, 481, 482, 484, 373,
	251, 410, 0, 0, 355, 490, 491, 298, 374, 0,
	0, 0, 78, 489, 0, 672, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	660, 0, 0, 0, 255, 665, 0, 0, 0, 346,
	252, 0, 0, 407, 0, 194, 0, 459, 239, 356,
	353, 497, 267, 258, 254, 237, 299, 363, 405, 479,
	399, 671, 350, 0, 0, 469, 378, 0, 0, 0,
	0, 0, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 235, 307, 193, 390, 470, 271, 0,
	87, 0, 0, 784, 755, 756, 788, 796, 797, 798,
	799, 800, 789, 791, 0, 0, 226, 790, 233, 699,
	701, 700, 715, 716, 717, 718, 719, 720, 721, 697,
	793, 801, 802, 0, 250, 303, 257, 249, 494, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 642, 657, 0, 670, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 654, 655, 0,
	0, 0, 0, 749, 0, 656, 0, 0, 664, 803,
	804, 805, 806, 807, 808, 809, 810, 811, 812, 813,
	814, 815, 816, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 379, 242, 0, 748, 0, 0,
	534, 0, 0, 746, 0, 0, 0, 0, 345, 0,
	312, 189, 213, 0, 0, 389, 434, 446, 0, 0,
	0, 240, 0, 444, 403, 513, 221, 269, 431, 409,
	442, 416, 272, 0, 0, 443, 351, 499, 425, 510,
	535, 536, 248, 383, 522, 483, 530, 549, 214, 245,
	397, 476, 516, 466, 375, 495, 496, 311, 465, 280,
	192, 349, 541, 212, 452, 230, 219, 501, 519, 274,
	429, 201, 478, 508, 227, 456, 0, 0, 551, 203,
	506, 475, 371, 308, 309, 202, 0, 430, 253, 278,
	243, 392, 503, 504, 241, 552, 216, 529, 208, 0,
	528, 385, 498, 507, 372, 361, 207, 505, 370, 360,
	316, 710, 711, 265, 291, 423, 354, 424, 292, 381,
	380, 382, 196, 517, 0, 197, 0, 471, 518, 553,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 347, 396, 422, 418, 426, 0, 493, 511, 523,
	533, 539, 540, 542, 543, 544, 545, 546, 548, 547,
	384, 295, 467, 315, 352, 0, 0, 402, 445, 228,
	515, 468, 760, 747, 676, 764, 678, 761, 762, 673,
	674, 677, 763, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 750, 663, 662, 0, 669, 0, 695, 696,
	698, 702, 703, 704, 712, 713, 714, 722, 724, 725,
	723, 726, 727, 728, 731, 732, 733, 734, 729, 730,
	735, 679, 683, 680, 681, 682, 694, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 774, 775, 776,
	777, 778, 779, 705, 709, 708, 706, 707, 661, 188,
	209, 348, 86, 427, 273, 550, 525, 520, 195, 211,
	765, 247, 766, 0, 0, 770, 0, 0, 0, 772,
	771, 0, 773, 739, 738, 0, 0, 767, 768, 0,
	769, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 300, 301, 304,
	310, 358, 364, 365, 366, 367, 386, 387, 388, 391,
	394, 395, 398, 400, 401, 404, 408, 412, 413, 414,
	415, 417, 419, 428, 433, 447, 448, 449, 450, 451,
	454, 455, 460, 461, 462, 463, 464, 472, 473, 477,
	500, 502, 514, 532, 537, 453, 780, 781, 782, 783,
	284, 509, 538, 0, 357, 0, 0, 359, 266, 289,
	302, 0, 524, 474, 215, 439, 275, 238, 795, 0,
	200, 234, 218, 244, 259, 262, 306, 369, 377, 406,
	411, 281, 256, 232, 432, 229, 457, 480, 481, 482,
	484, 373, 251, 410, 0, 374, 355, 490, 491, 298,
	489, 0, 672, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 660, 0, 0,
	0, 255, 665, 0, 0, 0, 346, 252, 0, 0,
	407, 0, 194, 0, 459, 239, 356, 353, 497, 267,
	258, 254, 237, 299, 363, 405, 479, 399, 671, 350,
	0, 0, 469, 378, 0, 0, 0, 0, 0, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	235, 307, 193, 390, 470, 271, 0, 87, 0, 0,
	784, 755, 756, 788, 796, 797, 798, 799, 800, 789,
	791, 0, 0, 226, 790, 233, 699, 701, 700, 715,
	716, 717, 718, 719, 720, 721, 697, 793, 801, 802,
	0, 250, 303, 257, 249, 494, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 642, 657, 0, 670, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 654, 655, 0, 0, 0, 0,
	749, 0, 656, 0, 0, 664, 803, 804, 805, 806,
	807, 808, 809, 810, 811, 812, 813, 814, 815, 816,
	817, 818, 819, 820, 821, 822, 823, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 379, 242, 0, 748, 0, 0, 534, 0, 0,
	746, 0, 0, 0, 0, 345, 0, 312, 189, 213,
	0, 0, 389, 434, 446, 0, 0, 0, 240, 0,
	444, 403, 513, 221, 269, 431, 409, 442, 416, 272,
	3286, 0, 443, 351, 499, 425, 510, 535, 536, 248,
	383, 522, 483, 530, 549, 214, 245, 397, 476, 516,
	466, 375, 495, 496, 311, 465, 280, 192, 349, 541,
	212, 452, 230, 219, 501, 519, 274, 429, 201, 478,
	508, 227, 456, 0, 0, 551, 203, 506, 475, 371,
	308, 309, 202, 0, 430, 253, 278, 243, 392, 503,
	504, 241, 552, 216, 529, 208, 0, 528, 385, 498,
	507, 372, 361, 207, 505, 370, 360, 316, 710, 711,
	265, 291, 423, 354, 424, 292, 381, 380, 382, 196,
	517, 0, 197, 0, 471, 518, 553, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 347, 396,
	422, 418, 426, 0, 493, 511, 523, 533, 539, 540,
	542, 543, 544, 545, 546, 548, 547, 384, 295, 467,
	315, 352, 0, 0, 402, 445, 228, 515, 468, 760,
	747, 676, 764, 678, 761, 762, 673, 674, 677, 763,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 750,
	663, 662, 0, 669, 0, 695, 696, 698, 702, 703,
	704, 712, 713, 714, 722, 724, 725, 723, 726, 727,
	728, 731, 732, 733, 734, 729, 730, 735, 679, 683,
	680, 681, 682, 694, 684, 685, 686, 687, 688, 689,
	690, 691, 692, 693, 774, 775, 776, 777, 778, 779,
	705, 709, 708, 706, 707, 661, 188, 209, 348, 0,
	427, 273, 550, 525, 520, 195, 211, 765, 247, 766,
	0, 0, 770, 0, 0, 0, 772, 771, 0, 773,
	739, 738, 0, 0, 767, 768, 0, 769, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 300, 301, 304, 310, 358, 364,
	365, 366, 367, 386, 387, 388, 391, 394, 395, 398,
	400, 401, 404, 408, 412, 413, 414, 415, 417, 419,
	428, 433, 447, 448, 449, 450, 451, 454, 455, 460,
	461, 462, 463, 464, 472, 473, 477, 500, 502, 514,
	532, 537, 453, 780, 781, 782, 783, 284, 509, 538,
	0, 357, 0, 0, 359, 266, 289, 302, 0, 524,
	474, 215, 439, 275, 238, 795, 0, 200, 234, 218,
	244, 259, 262, 306, 369, 377, 406, 411, 281, 256,
	232, 432, 229, 457, 480, 481, 482, 484, 373, 251,
	410, 0, 374, 355, 490, 491, 298, 489, 0, 672,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 660, 0, 0, 0, 255, 665,
	0, 0, 0, 346, 252, 0, 0, 407, 0, 194,
	0, 459, 239, 356, 353, 497, 267, 258, 254, 237,
	299, 363, 405, 479, 399, 671, 350, 0, 0, 469,
	378, 0, 0, 0, 0, 0, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 235, 307, 193,
	390, 470, 271, 0, 87, 0, 1467, 784, 755, 756,
	788, 796, 797, 798, 799, 800, 789, 791, 0, 0,
	226, 790, 233, 699, 701, 700, 715, 716, 717, 718,
	719, 720, 721, 697, 793, 801, 802, 0, 250, 303,
	257, 249, 494, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 642, 657,
	0, 670, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 654, 655, 0, 0, 0, 0, 749, 0, 656,
	0, 0, 664, 803, 804, 805, 806, 807, 808, 809,
	810, 811, 812, 813, 814, 815, 816, 817, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 379, 242,
	0, 748, 0, 0, 534, 0, 0, 746, 0, 0,
	0, 0, 345, 0, 312, 189, 213, 0, 0, 389,
	434, 446, 0, 0, 0, 240, 0, 444, 403, 513,
	221, 269, 431, 409, 442, 416, 272, 0, 0, 443,
	351, 499, 425, 510, 535, 536, 248, 383, 522, 483,
	530, 549, 214, 245, 397, 476, 516, 466, 375, 495,
	496, 311, 465, 280, 192, 349, 541, 212, 452, 230,
	219, 501, 519, 274, 429, 201, 478, 508, 227, 456,
	0, 0, 551, 203, 506, 475, 371, 308, 309, 202,
	0, 430, 253, 278, 243, 392, 503, 504, 241, 552,
	216, 529, 208, 0, 528, 385, 498, 507, 372, 361,
	207, 505, 370, 360, 316, 710, 711, 265, 291, 423,
	354, 424, 292, 381, 380, 382, 196, 517, 0, 197,
	0, 471, 518, 553, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 347, 396, 422, 418, 426,
	0, 493, 511, 523, 533, 539, 540, 542, 543, 544,
	545, 546, 548, 547, 384, 295, 467, 315, 352, 0,
	0, 402, 445, 228, 515, 468, 760, 747, 676, 764,
	678, 761, 762, 673, 674, 677, 763, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 750, 663, 662, 0,
	669, 0, 695, 696, 698, 702, 703, 704, 712, 713,
	714, 722, 724, 725, 723, 726, 727, 728, 731, 732,
	733, 734, 729, 730, 735, 679, 683, 680, 681, 682,
	694, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 774, 775, 776, 777, 778, 779, 705, 709, 708,
	706, 707, 661, 188, 209, 348, 0, 427, 273, 550,
	525, 520, 195, 211, 765, 247, 766, 0, 0, 770,
	0, 0, 0, 772, 771, 0, 773, 739, 738, 0,
	0, 767, 768, 0, 769, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 300, 301, 304, 310, 358, 364, 365, 366, 367,
	386, 387, 388, 391, 394, 395, 398, 400, 401, 404,
	408, 412, 413, 414, 415, 417, 419, 428, 433, 447,
	448, 449, 450, 451, 454, 455, 460, 461, 462, 463,
	464, 472, 473, 477, 500, 502, 514, 532, 537, 453,
	780, 781, 782, 783, 284, 509, 538, 0, 357, 0,
	0, 359, 266, 289, 302, 0, 524, 474, 215, 439,
	275, 238, 795, 0, 200, 234, 218, 244, 259, 262,
	306, 369, 377, 406, 411, 281, 256, 232, 432, 229,
	457, 480, 481, 482, 484, 373, 251, 410, 0, 374,
	355, 490, 491, 298, 489, 0, 672, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 660, 0, 0, 0, 255, 665, 0, 0, 0,
	346, 252, 0, 0, 407, 0, 194, 0, 459, 239,
	356, 353, 497, 267, 258, 254, 237, 299, 363, 405,
	479, 399, 671, 350, 0, 0, 469, 378, 0, 0,
	0, 0, 0, 667, 668, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 235, 307, 193, 390, 470, 271,
	0, 87, 0, 0, 784, 755, 756, 788, 796, 797,
	798, 799, 800, 789, 791, 0, 0, 226, 790, 233,
	699, 701, 700, 715, 716, 717, 718, 719, 720, 721,
	697, 793, 801, 802, 0, 250, 303, 257, 249, 494,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 642, 657, 0, 670, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 655,
	884, 0, 0, 0, 749, 0, 656, 0, 0, 664,
	803, 804, 805, 806, 807, 808, 809, 810, 811, 812,
	813, 814, 815, 816, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 379, 242, 0, 748, 0,
	0, 534, 0, 0, 746, 0, 0, 0, 0, 345,
	0, 312, 189, 213, 0, 0, 389, 434, 446, 0,
	0, 0, 240, 0, 444, 403, 513, 221, 269, 431,
	409, 442, 416, 272, 0, 0, 443, 351, 499, 425,
	510, 535, 536, 248, 383, 522, 483, 530, 549, 214,
	245, 397, 476, 516, 466, 375, 495, 496, 311, 465,
	280, 192, 349, 541, 212, 452, 230, 219, 501, 519,
	274, 429, 201, 478, 508, 227, 456, 0, 0, 551,
	203, 506, 475, 371, 308, 309, 202, 0, 430, 253,
	278, 243, 392, 503, 504, 241, 552, 216, 529, 208,
	0, 528, 385, 498, 507, 372, 361, 207, 505, 370,
	360, 316, 710, 711, 265, 291, 423, 354, 424, 292,
	381, 380, 382, 196, 517, 0, 197, 0, 471, 518,
	553, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 347, 396, 422, 418, 426, 0, 493, 511,
	523, 533, 539, 540, 542, 543, 544, 545, 546, 548,
	547, 384, 295, 467, 315, 352, 0, 0, 402, 445,
	228, 515, 468, 760, 747, 676, 764, 678, 761, 762,
	673, 674, 677, 763, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 750, 663, 662, 0, 669, 0, 695,
	696, 698, 702, 703, 704, 712, 713, 714, 722, 724,
	725, 723, 726, 727, 728, 731, 732, 733, 734, 729,
	730, 735, 679, 683, 680, 681, 682, 694, 684, 685,
	686, 687, 688, 689, 690, 691, 692, 693, 774, 775,
	776, 777, 778, 779, 705, 709, 708, 706, 707, 661,
	188, 209, 348, 0, 427, 273, 550, 525, 520, 195,
	211, 765, 247, 766, 0, 0, 770, 0, 0, 0,
	772, 771, 0, 773, 739, 738, 0, 0, 767, 768,
	0, 769, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 358, 364, 365, 366, 367, 386, 387, 388,
	391, 394, 395, 398, 400, 401, 404, 408, 412, 413,
	414, 415, 417, 419, 428, 433, 447, 448, 449, 450,
	451, 454, 455, 460, 461, 462, 463, 464, 472, 473,
	477, 500, 502, 514, 532, 537, 453, 780, 781, 782,
	783, 284, 509, 538, 0, 357, 0, 0, 359, 266,
	289, 302, 0, 524, 474, 215, 439, 275, 238, 795,
	0, 200, 234, 218, 244, 259, 262, 306, 369, 377,
	406, 411, 281, 256, 232, 432, 229, 457, 480, 481,
	482, 484, 373, 251, 410, 0, 374, 355, 490, 491,
	298, 489, 0, 672, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 660, 0,
	0, 0, 255, 665, 0, 0, 0, 346, 252, 0,
	0, 407, 0, 194, 0, 459, 239, 356, 353, 497,
	267, 258, 254, 237, 299, 363, 405, 479, 399, 671,
	350, 0, 0, 469, 378, 0, 0, 0, 0, 0,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 235, 307, 193, 390, 470, 271, 0, 87, 0,
	0, 784, 755, 756, 788, 796, 797, 798, 799, 800,
	789, 791, 0, 0, 226, 790, 233, 699, 701, 700,
	715, 716, 717, 718, 719, 720, 721, 697, 793, 801,
	802, 0, 250, 303, 257, 249, 494, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 642, 657, 0, 670, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 654, 655, 0, 0, 0,
	0, 749, 0, 656, 0, 0, 664, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 812, 813, 814, 815,
	816, 817, 818, 819, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 379, 242, 0, 748, 0, 0, 534, 0,
	0, 746, 0, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 389, 434, 446, 0, 0, 0, 240,
	0, 444, 403, 513, 221, 269, 431, 409, 442, 416,
	272, 0, 0, 443, 351, 499, 425, 510, 535, 536,
	248, 383, 522, 483, 530, 549, 214, 245, 397, 476,
	516, 466, 375, 495, 496, 311, 465, 280, 192, 349,
	541, 212, 452, 230, 219, 501, 519, 274, 429, 201,
	478, 508, 227, 456, 0, 0, 551, 203, 506, 475,
	371, 308, 309, 202, 0, 430, 253, 278, 243, 392,
	503, 504, 241, 552, 216, 529, 208, 0, 528, 385,
	498, 507, 372, 361, 207, 505, 370, 360, 316, 710,
	711, 265, 291, 423, 354, 424, 292, 381, 380, 382,
	196, 517, 0, 197, 0, 471, 518, 553, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	396, 422, 418, 426, 0, 493, 511, 523, 533, 539,
	540, 542, 543, 544, 545, 546, 548, 547, 384, 295,
	467, 315, 352, 0, 0, 402, 445, 228, 515, 468,
	760, 747, 676, 764, 678, 761, 762, 673, 674, 677,
	763, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	750, 663, 662, 0, 669, 0, 695, 696, 698, 702,
	703, 704, 712, 713, 714, 722, 724, 725, 723, 726,
	727, 728, 731, 732, 733, 734, 729, 730, 735, 679,
	683, 680, 681, 682, 694, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 774, 775, 776, 777, 778,
	779, 705, 709, 708, 706, 707, 661, 188, 209, 348,
	0, 427, 273, 550, 525, 520, 195, 211, 765, 247,
	766, 0, 0, 770, 0, 0, 0, 772, 771, 0,
	773, 739, 738, 0, 0, 767, 768, 0, 769, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 358,
	364, 365, 366, 367, 386, 387, 388, 391, 394, 395,
	398, 400, 401, 404, 408, 412, 413, 414, 415, 417,
	419, 428, 433, 447, 448, 449, 450, 451, 454, 455,
	460, 461, 462, 463, 464, 472, 473, 477, 500, 502,
	514, 532, 537, 453, 780, 781, 782, 783, 284, 509,
	538, 0, 357, 0, 0, 359, 266, 289, 302, 0,
	524, 474, 215, 439, 275, 238, 795, 0, 200, 234,
	218, 244, 259, 262, 306, 369, 377, 406, 411, 281,
	256, 232, 432, 229, 457, 480, 481, 482, 484, 373,
	251, 410, 0, 374, 355, 490, 491, 298, 489, 0,
	672, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 660, 0, 0, 0, 255,
	665, 0, 0, 0, 346, 252, 0, 0, 407, 0,
	194, 0, 459, 239, 356, 353, 497, 267, 258, 254,
	237, 299, 363, 405, 479, 399, 671, 350, 0, 0,
	469, 378, 0, 0, 0, 0, 0, 667, 668, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 235, 307,
	193, 390, 470, 271, 0, 87, 0, 0, 784, 755,
	756, 788, 796, 797, 798, 799, 800, 789, 791, 0,
	0, 226, 790, 233, 699, 701, 700, 715, 716, 717,
	718, 719, 720, 721, 697, 793, 801, 802, 0, 250,
	303, 257, 249, 494, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	657, 0, 670, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 655, 0, 0, 0, 0, 749, 0,
	656, 0, 0, 664, 803, 804, 805, 806, 807, 808,
	809, 810, 811, 812, 813, 814, 815, 816, 817, 818,
	819, 820, 821, 822, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 379,
	242, 0, 748, 0, 0, 534, 0, 0, 746, 0,
	0, 0, 0, 345, 0, 312, 189, 213, 0, 0,
	389, 434, 446, 0, 0, 0, 240, 0, 444, 403,
	513, 221, 269, 431, 409, 442, 416, 272, 0, 0,
	443, 351, 499, 425, 510, 535, 536, 248, 383, 522,
	483, 530, 549, 214, 245, 397, 476, 516, 466, 375,
	495, 496, 311, 465, 280, 192, 349, 541, 212, 452,
	230, 219, 501, 519, 274, 429, 201, 478, 508, 227,
	456, 0, 0, 551, 203, 506, 475, 371, 308, 309,
	202, 0, 430, 253, 278, 243, 392, 503, 504, 241,
	552, 216, 529, 208, 0, 528, 385, 498, 507, 372,
	361, 207, 505, 370, 360, 316, 710, 711, 265, 291,
	423, 354, 424, 292, 381, 380, 382, 196, 517, 0,
	197, 0, 471, 518, 553, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 347, 396, 422, 418,
	426, 0, 493, 511, 523, 533, 539, 540, 542, 543,
	544, 545, 546, 548, 547, 384, 295, 467, 315, 352,
	0, 0, 402, 445, 228, 515, 468, 760, 747, 676,
	764, 678, 761, 762, 673, 674, 677, 763, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 750, 663, 662,
	0, 669, 0, 695, 696, 698, 702, 703, 704, 712,
	713, 714, 722, 724, 725, 723, 726, 727, 728, 731,
	732, 733, 734, 729, 730, 735, 679, 683, 680, 681,
	682, 694, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 774, 775, 776, 777, 778, 779, 705, 709,
	708, 706, 707, 661, 188, 209, 348, 0, 427, 273,
	550, 525, 520, 195, 211, 765, 247, 766, 0, 0,
	770, 0, 0, 0, 772, 771, 0, 773, 739, 738,
	0, 0, 767, 768, 0, 769, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 358, 364, 365, 366,
	367, 386, 387, 388, 391, 394, 395, 398, 400, 401,
	404, 408, 412, 413, 414, 415, 417, 419, 428, 433,
	447, 448, 449, 450, 451, 454, 455, 460, 461, 462,
	463, 464, 472, 473, 477, 500, 502, 514, 532, 537,
	453, 780, 781, 782, 783, 284, 509, 538, 0, 357,
	0, 0, 359, 266, 289, 302, 0, 524, 474, 215,
	439, 275, 238, 795, 0, 200, 234, 218, 244, 259,
	262, 306, 369, 377, 406, 411, 281, 256, 232, 432,
	229, 457, 480, 481, 482, 484, 373, 251, 410, 0,
	374, 355, 490, 491, 298, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 346, 252, 0, 0, 407, 0, 194, 0, 459,
	239, 356, 353, 497, 267, 258, 254, 237, 299, 363,
	405, 479, 399, 0, 350, 0, 0, 469, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 235, 307, 193, 390, 470,
	271, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 331, 340, 339, 320, 321, 323, 325, 330, 337,
	343, 0, 0, 0, 0, 0, 250, 303, 257, 249,
	494, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 379, 242, 0, 0,
	0, 955, 534, 0, 0, 0, 0, 0, 952, 953,
	345, 913, 312, 189, 213, 946, 950, 389, 434, 446,
	0, 0, 0, 240, 0, 444, 403, 513, 221, 269,
	431, 409, 442, 416, 272, 0, 0, 443, 351, 499,
	425, 510, 535, 536, 248, 383, 522, 483, 530, 549,
	214, 245, 397, 476, 516, 466, 375, 495, 496, 311,
	465, 280, 192, 349, 541, 212, 452, 230, 219, 501,
	519, 274, 429, 201, 478, 508, 227, 456, 0, 0,
	551, 203, 506, 475, 371, 308, 309, 202, 0, 430,
	253, 278, 243, 392, 503, 504, 241, 552, 216, 529,
	208, 0, 528, 385, 498, 507, 372, 361, 207, 505,
	370, 360, 316, 335, 336, 265, 291, 423, 354, 424,
	292, 381, 380, 382, 196, 517, 0, 197, 0, 471,
	518, 553, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 347, 396, 422, 418, 426, 0, 493,
	511, 523, 533, 539, 540, 542, 543, 544, 545, 546,
	548, 547, 384, 295, 467, 315, 352, 0, 0, 402,
	445, 228, 515, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 362, 458, 512, 317, 329, 332, 322,
	341, 0, 342, 318, 319, 324, 326, 327, 328, 333,
	334, 338, 344, 236, 199, 368, 376, 492, 296, 204,
	205, 206, 485, 486, 487, 488, 526, 527, 531, 435,
	436, 437, 438, 277, 521, 293, 441, 440, 313, 314,
	0, 188, 209, 348, 0, 427, 273, 550, 525, 520,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 300,
	301, 304, 310, 358, 364, 365, 366, 367, 386, 387,
	388, 391, 394, 395, 398, 400, 401, 404, 408, 412,
	413, 414, 415, 417, 419, 428, 433, 447, 448, 449,
	450, 451, 454, 455, 460, 461, 462, 463, 464, 472,
	473, 477, 500, 502, 514, 532, 537, 453, 285, 286,
	420, 421, 284, 509, 538, 0, 357, 0, 0, 359,
	266, 289, 302, 0, 524, 474, 215, 439, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 306, 369,
	377, 406, 411, 281, 256, 232, 432, 229, 457, 480,
	481, 482, 484, 373, 251, 410, 0, 0, 355, 490,
	491, 298, 374, 0, 0, 0, 78, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 346, 252, 0, 0, 407, 0, 194,
	0, 459, 239, 356, 353, 497, 267, 258, 254, 237,
	299, 363, 405, 479, 399, 0, 350, 0, 0, 469,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 235, 307, 193,
	390, 470, 271, 0, 87, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 331, 340, 339, 320, 321, 323, 325,
	330, 337, 343, 0, 0, 0, 0, 0, 250, 303,
	257, 249, 494, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 379, 242,
	0, 0, 0, 0, 534, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 312, 189, 213, 0, 0, 389,
	434, 446, 0, 0, 0, 240, 0, 444, 403, 513,
	221, 269, 431, 409, 442, 416, 272, 0, 0, 443,
	351, 499, 425, 510, 535, 536, 248, 383, 522, 483,
	530, 549, 214, 245, 397, 476, 516, 466, 375, 495,
	496, 311, 465, 280, 192, 349, 541, 212, 452, 230,
	219, 501, 519, 274, 429, 201, 478, 508, 227, 456,
	0, 0, 551, 203, 506, 475, 371, 308, 309, 202,
	0, 430, 253, 278, 243, 392, 503, 504, 241, 552,
	216, 529, 208, 0, 528, 385, 498, 507, 372, 361,
	207, 505, 370, 360, 316, 335, 336, 265, 291, 423,
	354, 424, 292, 381, 380, 382, 196, 517, 0, 197,
	0, 471, 518, 553, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 347, 396, 422, 418, 426,
	0, 493, 511, 523, 533, 539, 540, 542, 543, 544,
	545, 546, 548, 547, 384, 295, 467, 315, 352, 0,
	0, 402, 445, 228, 515, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 362, 458, 512, 317, 329,
	332, 322, 341, 0, 342, 318, 319, 324, 326, 327,
	328, 333, 334, 338, 344, 236, 199, 368, 376, 492,
	296, 204, 205, 206, 485, 486, 487, 488, 526, 527,
	531, 435, 436, 437, 438, 277, 521, 293, 441, 440,
	313, 314, 0, 188, 209, 348, 86, 427, 273, 550,
	525, 520, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 2017, 0, 0, 2016, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 300, 301, 304, 310, 358, 364, 365, 366, 367,
	386, 387, 388, 391, 394, 395, 398, 400, 401, 404,
	408, 412, 413, 414, 415, 417, 419, 428, 433, 447,
	448, 449, 450, 451, 454, 455, 460, 461, 462, 463,
	464, 472, 473, 477, 500, 502, 514, 532, 537, 453,
	285, 286, 420, 421, 284, 509, 538, 0, 357, 0,
	0, 359, 266, 289, 302, 0, 524, 474, 215, 439,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	306, 369, 377, 406, 411, 281, 256, 232, 432, 229,
	457, 480, 481, 482, 484, 373, 251, 410, 0, 1486,
	355, 490, 491, 298, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	1488, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	346, 252, 0, 0, 407, 0, 194, 0, 459, 239,
	356, 353, 497, 267, 258, 254, 237, 299, 363, 405,
	479, 399, 0, 350, 0, 0, 469, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 235, 307, 193, 390, 470, 271,
	0, 0, 0, 0, 618, 0, 0, 0, 1490, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	331, 340, 339, 320, 321, 323, 325, 330, 337, 343,
	0, 0, 0, 0, 0, 250, 303, 257, 249, 494,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 1279, 0, 1280, 1281, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 379, 242, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 312, 189, 213, 0, 0, 389, 434, 446, 0,
	0, 0, 240, 0, 444, 403, 513, 221, 269, 431,
	409, 442, 416, 272, 0, 0, 443, 351, 499, 425,
	510, 535, 536, 248, 383, 522, 483, 530, 549, 214,
	245, 397, 476, 516, 466, 375, 495, 496, 311, 465,
	280, 192, 349, 541, 212, 452, 230, 219, 501, 519,
	274, 429, 201, 478, 508, 227, 456, 0, 0, 551,
	203, 506, 475, 371, 308, 309, 202, 0, 430, 253,
	278, 243, 392, 503, 504, 241, 552, 216, 529, 208,
	0, 528, 385, 498, 507, 372, 361, 207, 505, 370,
	360, 316, 335, 336, 265, 291, 423, 354, 424, 292,
	381, 380, 382, 196, 517, 0, 197, 0, 471, 518,
	553, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 347, 396, 422, 418, 426, 0, 493, 511,
	523, 533, 539, 540, 542, 543, 544, 545, 546, 548,
	547, 384, 295, 467, 315, 352, 0, 0, 402, 445,
	228, 515, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 362, 458, 512, 317, 329, 332, 322, 341,
	0, 342, 318, 319, 324, 326, 327, 328, 333, 334,
	338, 344, 236, 199, 368, 376, 492, 296, 204, 205,
	206, 485, 486, 487, 488, 526, 527, 531, 435, 436,
	437, 438, 277, 521, 293, 441, 440, 313, 314, 0,
	188, 209, 348, 0, 427, 273, 550, 525, 520, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 358, 364, 365, 366, 367, 386, 387, 388,
	391, 394, 395, 398, 400, 401, 404, 408, 412, 413,
	414, 415, 417, 419, 428, 433, 447, 448, 449, 450,
	451, 454, 455, 460, 461, 462, 463, 464, 472, 473,
	477, 500, 502, 514, 532, 537, 453, 285, 286, 420,
	421, 284, 509, 538, 0, 357, 0, 0, 359, 266,
	289, 302, 0, 524, 474, 215, 439, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 306, 369, 377,
	406, 411, 281, 256, 232, 432, 229, 457, 480, 481,
	482, 484, 373, 251, 410, 0, 374, 355, 490, 491,
	298, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 346, 252, 0,
	0, 407, 0, 194, 0, 459, 239, 356, 353, 497,
	267, 258, 254, 237, 299, 363, 405, 479, 399, 0,
	350, 0, 0, 469, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 235, 307, 193, 390, 470, 271, 0, 0, 0,
	0, 784, 0, 0, 1427, 1430, 0, 0, 0, 0,
	1426, 1429, 0, 0, 226, 1425, 233, 331, 340, 339,
	320, 321, 323, 325, 330, 337, 343, 0, 0, 0,
	0, 0, 250, 303, 257, 249, 494, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 379, 242, 0, 0, 0, 0, 534, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 389, 434, 446, 0, 0, 0, 240,
	0, 444, 403, 513, 221, 269, 431, 409, 442, 416,
	272, 0, 0, 443, 351, 499, 425, 510, 535, 536,
	248, 383, 522, 483, 530, 549, 214, 245, 397, 476,
	516, 466, 375, 495, 496, 311, 465, 280, 192, 349,
	541, 212, 452, 230, 219, 501, 519, 274, 429, 201,
	478, 508, 227, 456, 0, 0, 551, 203, 506, 475,
	371, 308, 309, 202, 0, 430, 253, 278, 243, 392,
	503, 504, 241, 552, 216, 529, 208, 0, 528, 385,
	498, 507, 372, 361, 207, 505, 370, 360, 316, 335,
	336, 265, 291, 423, 354, 424, 292, 381, 380, 382,
	196, 517, 0, 197, 0, 471, 518, 553, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	396, 422, 418, 426, 0, 493, 511, 523, 533, 539,
	540, 542, 543, 544, 545, 546, 548, 547, 384, 295,
	467, 315, 352, 0, 0, 402, 445, 228, 515, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 572, 362,
	458, 512, 317, 329, 332, 322, 341, 0, 342, 318,
	319, 324, 326, 327, 328, 333, 334, 338, 344, 236,
	199, 368, 376, 492, 296, 204, 205, 206, 485, 486,
	487, 488, 526, 527, 531, 435, 436, 437, 438, 277,
	521, 293, 441, 440, 313, 314, 0, 188, 209, 348,
	0, 427, 273, 550, 525, 520, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 358,
	364, 365, 366, 367, 386, 387, 388, 391, 394, 395,
	398, 400, 401, 404, 408, 412, 413, 414, 415, 417,
	419, 428, 433, 447, 448, 449, 450, 451, 454, 455,
	460, 461, 462, 463, 464, 472, 473, 477, 500, 502,
	514, 532, 537, 453, 285, 286, 420, 421, 284, 509,
	538, 0, 357, 0, 0, 359, 266, 289, 302, 0,
	524, 474, 215, 439, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 306, 369, 377, 406, 411, 281,
	256, 232, 432, 229, 457, 480, 481, 482, 484, 373,
	251, 410, 0, 0, 355, 490, 491, 298, 374, 0,
	0, 0, 78, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 346,
	252, 0, 0, 407, 0, 194, 0, 459, 239, 356,
	353, 497, 267, 258, 254, 237, 299, 363, 405, 479,
	399, 0, 350, 0, 0, 469, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 235, 307, 193, 390, 470, 271, 0,
	87, 0, 1467, 618, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 331,
	340, 339, 320, 321, 323, 325, 330, 337, 343, 0,
	0, 0, 0, 0, 250, 303, 257, 249, 494, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 379, 242, 0, 0, 0, 0,
	534, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	312, 189, 213, 0, 0, 389, 434, 446, 0, 0,
	0, 240, 0, 444, 403, 513, 221, 269, 431, 409,
	442, 416, 272, 0, 0, 443, 351, 499, 425, 510,
	535, 536, 248, 383, 522, 483, 530, 549, 214, 245,
	397, 476, 516, 466, 375, 495, 496, 311, 465, 280,
	192, 349, 541, 212, 452, 230, 219, 501, 519, 274,
	429, 201, 478, 508, 227, 456, 0, 0, 551, 203,
	506, 475, 371, 308, 309, 202, 0, 430, 253, 278,
	243, 392, 503, 504, 241, 552, 216, 529, 208, 0,
	528, 385, 498, 507, 372, 361, 207, 505, 370, 360,
	316, 335, 336, 265, 291, 423, 354, 424, 292, 381,
	380, 382, 196, 517, 0, 197, 0, 471, 518, 553,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 347, 396, 422, 418, 426, 0, 493, 511, 523,
	533, 539, 540, 542, 543, 544, 545, 546, 548, 547,
	384, 295, 467, 315, 352, 0, 0, 402, 445, 228,
	515, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	572, 362, 458, 512, 317, 329, 332, 322, 341, 0,
	342, 318, 319, 324, 326, 327, 328, 333, 334, 338,
	344, 236, 199, 368, 376, 492, 296, 204, 205, 206,
	485, 486, 487, 488, 526, 527, 531, 435, 436, 437,
	438, 277, 521, 293, 441, 440, 313, 314, 0, 188,
	209, 348, 86, 427, 273, 550, 525, 520, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 300, 301, 304,
	310, 358, 364, 365, 366, 367, 386, 387, 388, 391,
	394, 395, 398, 400, 401, 404, 408, 412, 413, 414,
	415, 417, 419, 428, 433, 447, 448, 449, 450, 451,
	454, 455, 460, 461, 462, 463, 464, 472, 473, 477,
	500, 502, 514, 532, 537, 453, 285, 286, 420, 421,
	284, 509, 538, 0, 357, 0, 0, 359, 266, 289,
	302, 0, 524, 474, 215, 439, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 306, 369, 377, 406,
	411, 281, 256, 232, 432, 229, 457, 480, 481, 482,
	484, 373, 251, 410, 0, 374, 355, 490, 491, 298,
	489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 346, 252, 0, 0,
	407, 0, 194, 0, 459, 239, 356, 353, 497, 267,
	258, 254, 237, 299, 363, 405, 479, 399, 0, 350,
	0, 0, 469, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	235, 307, 193, 390, 470, 271, 0, 87, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 331, 340, 339, 320,
	321, 323, 325, 330, 337, 343, 0, 0, 0, 0,
	0, 250, 303, 257, 249, 494, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 379, 242, 0, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 312, 189, 213,
	0, 0, 389, 434, 446, 0, 0, 0, 240, 0,
	444, 403, 513, 221, 269, 431, 409, 442, 416, 272,
	0, 0, 443, 351, 499, 425, 510, 535, 536, 248,
	383, 522, 483, 530, 549, 214, 245, 397, 476, 516,
	466, 375, 495, 496, 311, 465, 280, 192, 349, 541,
	212, 452, 230, 219, 501, 519, 274, 429, 201, 478,
	508, 227, 456, 0, 0, 551, 203, 506, 475, 371,
	308, 309, 202, 0, 430, 253, 278, 243, 392, 503,
	504, 241, 552, 216, 529, 208, 0, 528, 385, 498,
	507, 372, 361, 207, 505, 370, 360, 316, 335, 336,
	265, 291, 423, 354, 424, 292, 381, 380, 382, 196,
	517, 0, 197, 0, 471, 518, 553, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 347, 396,
	422, 418, 426, 0, 493, 511, 523, 533, 539, 540,
	542, 543, 544, 545, 546, 548, 547, 384, 295, 467,
	315, 352, 0, 0, 402, 445, 228, 515, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 362, 458,
	512, 317, 329, 332, 322, 341, 0, 342, 318, 319,
	324, 326, 327, 328, 333, 334, 338, 344, 236, 199,
	368, 376, 492, 296, 204, 205, 206, 485, 486, 487,
	488, 526, 527, 531, 435, 436, 437, 438, 277, 521,
	293, 441, 440, 313, 314, 0, 188, 209, 348, 0,
	427, 273, 550, 525, 520, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 2017, 0, 0, 2016, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 300, 301, 304, 310, 358, 364,
	365, 366, 367, 386, 387, 388, 391, 394, 395, 398,
	400, 401, 404, 408, 412, 413, 414, 415, 417, 419,
	428, 433, 447, 448, 449, 450, 451, 454, 455, 460,
	461, 462, 463, 464, 472, 473, 477, 500, 502, 514,
	532, 537, 453, 285, 286, 420, 421, 284, 509, 538,
	0, 357, 0, 0, 359, 266, 289, 302, 0, 524,
	474, 215, 439, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 306, 369, 377, 406, 411, 281, 256,
	232, 432, 229, 457, 480, 481, 482, 484, 373, 251,
	410, 0, 374, 355, 490, 491, 298, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 1968, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 346, 252, 0, 0, 407, 0, 194,
	0, 459, 239, 356, 353, 497, 267, 258, 254, 237,
	299, 363, 405, 479, 399, 0, 350, 0, 0, 469,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 235, 307, 193,
	390, 470, 271, 0, 0, 0, 0, 186, 0, 0,
	0, 1668, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 331, 340, 339, 320, 321, 323, 325,
	330, 337, 343, 0, 0, 0, 0, 0, 250, 303,
	257, 249, 494, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 379, 242,
	0, 0, 0, 0, 534, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 312, 189, 213, 0, 0, 389,
	434, 446, 0, 0, 0, 240, 0, 444, 403, 513,
	221, 269, 431, 409, 442, 416, 272, 0, 1966, 443,
	351, 499, 425, 510, 535, 536, 248, 383, 522, 483,
	530, 549, 214, 245, 397, 476, 516, 466, 375, 495,
	496, 311, 465, 280, 192, 349, 541, 212, 452, 230,
	219, 501, 519, 274, 429, 201, 478, 508, 227, 456,
	0, 0, 551, 203, 506, 475, 371, 308, 309, 202,
	0, 430, 253, 278, 243, 392, 503, 504, 241, 552,
	216, 529, 208, 0, 528, 385, 498, 507, 372, 361,
	207, 505, 370, 360, 316, 335, 336, 265, 291, 423,
	354, 424, 292, 381, 380, 382, 196, 517, 0, 197,
	0, 471, 518, 553, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 347, 396, 422, 418, 426,
	0, 493, 511, 523, 533, 539, 540, 542, 543, 544,
	545, 546, 548, 547, 384, 295, 467, 315, 352, 0,
	0, 402, 445, 228, 515, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 362, 458, 512, 317, 329,
	332, 322, 341, 0, 342, 318, 319, 324, 326, 327,
	328, 333, 334, 338, 344, 236, 199, 368, 376, 492,
	296, 204, 205, 206, 485, 486, 487, 488, 526, 527,
	531, 435, 436, 437, 438, 277, 521, 293, 441, 440,
	313, 314, 0, 188, 209, 348, 0, 427, 273, 550,
	525, 520, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 300, 301, 304, 310, 358, 364, 365, 366, 367,
	386, 387, 388, 391, 394, 395, 398, 400, 401, 404,
	408, 412, 413, 414, 415, 417, 419, 428, 433, 447,
	448, 449, 450, 451, 454, 455, 460, 461, 462, 463,
	464, 472, 473, 477, 500, 502, 514, 532, 537, 453,
	285, 286, 420, 421, 284, 509, 538, 0, 357, 0,
	0, 359, 266, 289, 302, 0, 524, 474, 215, 439,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	306, 369, 377, 406, 411, 281, 256, 232, 432, 229,
	457, 480, 481, 482, 484, 373, 251, 410, 0, 374,
	355, 490, 491, 298, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	346, 252, 0, 0, 407, 0, 194, 0, 459, 239,
	356, 353, 497, 267, 258, 254, 237, 299, 363, 405,
	479, 399, 0, 350, 0, 0, 469, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 235, 307, 193, 390, 470, 271,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	331, 340, 339, 320, 321, 323, 325, 330, 337, 343,
	0, 0, 0, 0, 0, 250, 303, 257, 249, 494,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 907, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 379, 242, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 345,
	913, 312, 189, 213, 911, 0, 389, 434, 446, 0,
	0, 0, 240, 0, 444, 403, 513, 221, 269, 431,
	409, 442, 416, 272, 0, 0, 443, 351, 499, 425,
	510, 535, 536, 248, 383, 522, 483, 530, 549, 214,
	245, 397, 476, 516, 466, 375, 495, 496, 311, 465,
	280, 192, 349, 541, 212, 452, 230, 219, 501, 519,
	274, 429, 201, 478, 508, 227, 456, 0, 0, 551,
	203, 506, 475, 371, 308, 309, 202, 0, 430, 253,
	278, 243, 392, 503, 504, 241, 552, 216, 529, 208,
	0, 528, 385, 498, 507, 372, 361, 207, 505, 370,
	360, 316, 335, 336, 265, 291, 423, 354, 424, 292,
	381, 380, 382, 196, 517, 0, 197, 0, 471, 518,
	553, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 347, 396, 422, 418, 426, 0, 493, 511,
	523, 533, 539, 540, 542, 543, 544, 545, 546, 548,
	547, 384, 295, 467, 315, 352, 0, 0, 402, 445,
	228, 515, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 362, 458, 512, 317, 329, 332, 322, 341,
	0, 342, 318, 319, 324, 326, 327, 328, 333, 334,
	338, 344, 236, 199, 368, 376, 492, 296, 204, 205,
	206, 485, 486, 487, 488, 526, 527, 531, 435, 436,
	437, 438, 277, 521, 293, 441, 440, 313, 314, 0,
	188, 209, 348, 0, 427, 273, 550, 525, 520, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 358, 364, 365, 366, 367, 386, 387, 388,
	391, 394, 395, 398, 400, 401, 404, 408, 412, 413,
	414, 415, 417, 419, 428, 433, 447, 448, 449, 450,
	451, 454, 455, 460, 461, 462, 463, 464, 472, 473,
	477, 500, 502, 514, 532, 537, 453, 285, 286, 420,
	421, 284, 509, 538, 0, 357, 0, 0, 359, 266,
	289, 302, 0, 524, 474, 215, 439, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 306, 369, 377,
	406, 411, 281, 256, 232, 432, 229, 457, 480, 481,
	482, 484, 373, 251, 410, 0, 374, 355, 490, 491,
	298, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 1968, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 346, 252, 0,
	0, 407, 0, 194, 0, 459, 239, 356, 353, 497,
	267, 258, 254, 237, 299, 363, 405, 479, 399, 0,
	350, 0, 0, 469, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 235, 307, 193, 390, 470, 271, 0, 0, 0,
	0, 186, 0, 0, 0, 1668, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 331, 340, 339,
	320, 321, 323, 325, 330, 337, 343, 0, 0, 0,
	0, 0, 250, 303, 257, 249, 494, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 379, 242, 0, 0, 0, 0, 534, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 389, 434, 446, 0, 0, 0, 240,
	0, 444, 403, 513, 221, 269, 431, 409, 442, 416,
	272, 0, 0, 443, 351, 499, 425, 510, 535, 536,
	248, 383, 522, 483, 530, 549, 214, 245, 397, 476,
	516, 466, 375, 495, 496, 311, 465, 280, 192, 349,
	541, 212, 452, 230, 219, 501, 519, 274, 429, 201,
	478, 508, 227, 456, 0, 0, 551, 203, 506, 475,
	371, 308, 309, 202, 0, 430, 253, 278, 243, 392,
	503, 504, 241, 552, 216, 529, 208, 0, 528, 385,
	498, 507, 372, 361, 207, 505, 370, 360, 316, 335,
	336, 265, 291, 423, 354, 424, 292, 381, 380, 382,
	196, 517, 0, 197, 0, 471, 518, 553, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	396, 422, 418, 426, 0, 493, 511, 523, 533, 539,
	540, 542, 543, 544, 545, 546, 548, 547, 384, 295,
	467, 315, 352, 0, 0, 402, 445, 228, 515, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 572, 362,
	458, 512, 317, 329, 332, 322, 341, 0, 342, 318,
	319, 324, 326, 327, 328, 333, 334, 338, 344, 236,
	199, 368, 376, 492, 296, 204, 205, 206, 485, 486,
	487, 488, 526, 527, 531, 435, 436, 437, 438, 277,
	521, 293, 441, 440, 313, 314, 0, 188, 209, 348,
	0, 427, 273, 550, 525, 520, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 358,
	364, 365, 366, 367, 386, 387, 388, 391, 394, 395,
	398, 400, 401, 404, 408, 412, 413, 414, 415, 417,
	419, 428, 433, 447, 448, 449, 450, 451, 454, 455,
	460, 461, 462, 463, 464, 472, 473, 477, 500, 502,
	514, 532, 537, 453, 285, 286, 420, 421, 284, 509,
	538, 0, 357, 0, 0, 359, 266, 289, 302, 0,
	524, 474, 215, 439, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 306, 369, 377, 406, 411, 281,
	256, 232, 432, 229, 457, 480, 481, 482, 484, 373,
	251, 410, 0, 374, 355, 490, 491, 298, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 346, 252, 0, 0, 407, 0,
	194, 0, 459, 239, 356, 353, 497, 267, 258, 254,
	237, 299, 363, 405, 479, 399, 0, 350, 0, 0,
	469, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 235, 307,
	193, 390, 470, 271, 0, 0, 0, 1467, 618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 331, 340, 339, 320, 321, 323,
	325, 330, 337, 343, 0, 0, 0, 0, 0, 250,
	303, 257, 249, 494, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 379,
	242, 0, 0, 0, 0, 534, 0, 0, 0, 3193,
	0, 0, 0, 345, 0, 312, 189, 213, 0, 0,
	389, 434, 446, 0, 0, 0, 240, 0, 444, 403,
	513, 221, 269, 431, 409, 442, 416, 272, 0, 0,
	443, 351, 499, 425, 510, 535, 536, 248, 383, 522,
	483, 530, 549, 214, 245, 397, 476, 516, 466, 375,
	495, 496, 311, 465, 280, 192, 349, 541, 212, 452,
	230, 219, 501, 519, 274, 429, 201, 478, 508, 227,
	456, 0, 0, 551, 203, 506, 475, 371, 308, 309,
	202, 0, 430, 253, 278, 243, 392, 503, 504, 241,
	552, 216, 529, 208, 0, 528, 385, 498, 507, 372,
	361, 207, 505, 370, 360, 316, 335, 336, 265, 291,
	423, 354, 424, 292, 381, 380, 382, 196, 517, 0,
	197, 0, 471, 518, 553, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 347, 396, 422, 418,
	426, 0, 493, 511, 523, 533, 539, 540, 542, 543,
	544, 545, 546, 548, 547, 384, 295, 467, 315, 352,
	0, 0, 402, 445, 228, 515, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 362, 458, 512, 317,
	329, 332, 322, 341, 0, 342, 318, 319, 324, 326,
	327, 328, 333, 334, 338, 344, 236, 199, 368, 376,
	492, 296, 204, 205, 206, 485, 486, 487, 488, 526,
	527, 531, 435, 436, 437, 438, 277, 521, 293, 441,
	440, 313, 314, 0, 188, 209, 348, 0, 427, 273,
	550, 525, 520, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 358, 364, 365, 366,
	367, 386, 387, 388, 391, 394, 395, 398, 400, 401,
	404, 408, 412, 413, 414, 415, 417, 419, 428, 433,
	447, 448, 449, 450, 451, 454, 455, 460, 461, 462,
	463, 464, 472, 473, 477, 500, 502, 514, 532, 537,
	453, 285, 286, 420, 421, 284, 509, 538, 0, 357,
	0, 0, 359, 266, 289, 302, 0, 524, 474, 215,
	439, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 306, 369, 377, 406, 411, 281, 256, 232, 432,
	229, 457, 480, 481, 482, 484, 373, 251, 410, 0,
	374, 355, 490, 491, 298, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 346, 252, 0, 0, 407, 0, 194, 0, 459,
	239, 356, 353, 497, 267, 258, 254, 237, 299, 363,
	405, 479, 399, 0, 350, 0, 0, 469, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 235, 307, 193, 390, 470,
	271, 0, 0, 0, 0, 618, 0, 0, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 331, 340, 339, 320, 321, 323, 325, 330, 337,
	343, 0, 0, 0, 0, 0, 250, 303, 257, 249,
	494, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 379, 242, 0, 0,
	0, 0, 534, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 312, 189, 213, 0, 0, 389, 434, 446,
	0, 0, 0, 240, 0, 444, 403, 513, 221, 269,
	431, 409, 442, 416, 272, 0, 0, 443, 351, 499,
	425, 510, 535, 536, 248, 383, 522, 483, 530, 549,
	214, 245, 397, 476, 516, 466, 375, 495, 496, 311,
	465, 280, 192, 349, 541, 212, 452, 230, 219, 501,
	519, 274, 429, 201, 478, 508, 227, 456, 0, 0,
	551, 203, 506, 475, 371, 308, 309, 202, 0, 430,
	253, 278, 243, 392, 503, 504, 241, 552, 216, 529,
	208, 0, 528, 385, 498, 507, 372, 361, 207, 505,
	370, 360, 316, 335, 336, 265, 291, 423, 354, 424,
	292, 381, 380, 382, 196, 517, 0, 197, 0, 471,
	518, 553, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 347, 396, 422, 418, 426, 0, 493,
	511, 523, 533, 539, 540, 542, 543, 544, 545, 546,
	548, 547, 384, 295, 467, 315, 352, 0, 0, 402,
	445, 228, 515, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 362, 458, 512, 317, 329, 332, 322,
	341, 0, 342, 318, 319, 324, 326, 327, 328, 333,
	334, 338, 344, 236, 199, 368, 376, 492, 296, 204,
	205, 206, 485, 486, 487, 488, 526, 527, 531, 435,
	436, 437, 438, 277, 521, 293, 441, 440, 313, 314,
	0, 188, 209, 348, 0, 427, 273, 550, 525, 520,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 300,
	301, 304, 310, 358, 364, 365, 366, 367, 386, 387,
	388, 391, 394, 395, 398, 400, 401, 404, 408, 412,
	413, 414, 415, 417, 419, 428, 433, 447, 448, 449,
	450, 451, 454, 455, 460, 461, 462, 463, 464, 472,
	473, 477, 500, 502, 514, 532, 537, 453, 285, 286,
	420, 421, 284, 509, 538, 0, 357, 0, 0, 359,
	266, 289, 302, 0, 524, 474, 215, 439, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 306, 369,
	377, 406, 411, 281, 256, 232, 432, 229, 457, 480,
	481, 482, 484, 373, 251, 410, 0, 374, 355, 490,
	491, 298, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 346, 252,
	0, 0, 407, 0, 194, 0, 459, 239, 356, 353,
	497, 267, 258, 254, 237, 299, 363, 405, 479, 399,
	0, 350, 0, 0, 469, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 235, 307, 193, 390, 470, 271, 0, 0,
	0, 0, 618, 0, 0, 0, 2347, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 331, 340,
	339, 320, 321, 323, 325, 330, 337, 343, 0, 0,
	0, 0, 0, 250, 303, 257, 249, 494, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 379, 242, 0, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 312,
	189, 213, 0, 0, 389, 434, 446, 0, 0, 0,
	240, 0, 444, 403, 513, 221, 269, 431, 409, 442,
	416, 272, 0, 0, 443, 351, 499, 425, 510, 535,
	536, 248, 383, 522, 483, 530, 549, 214, 245, 397,
	476, 516, 466, 375, 495, 496, 311, 465, 280, 192,
	349, 541, 212, 452, 230, 219, 501, 519, 274, 429,
	201, 478, 508, 227, 456, 0, 0, 551, 203, 506,
	475, 371, 308, 309, 202, 0, 430, 253, 278, 243,
	392, 503, 504, 241, 552, 216, 529, 208, 0, 528,
	385, 498, 507, 372, 361, 207, 505, 370, 360, 316,
	335, 336, 265, 291, 423, 354, 424, 292, 381, 380,
	382, 196, 517, 0, 197, 0, 471, 518, 553, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	347, 396, 422, 418, 426, 0, 493, 511, 523, 533,
	539, 540, 542, 543, 544, 545, 546, 548, 547, 384,
	295, 467, 315, 352, 0, 0, 402, 445, 228, 515,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	362, 458, 512, 317, 329, 332, 322, 341, 0, 342,
	318, 319, 324, 326, 327, 328, 333, 334, 338, 344,
	236, 199, 368, 376, 492, 296, 204, 205, 206, 485,
	486, 487, 488, 526, 527, 531, 435, 436, 437, 438,
	277, 521, 293, 441, 440, 313, 314, 0, 188, 209,
	348, 0, 427, 273, 550, 525, 520, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 300, 301, 304, 310,
	358, 364, 365, 366, 367, 386, 387, 388, 391, 394,
	395, 398, 400, 401, 404, 408, 412, 413, 414, 415,
	417, 419, 428, 433, 447, 448, 449, 450, 451, 454,
	455, 460, 461, 462, 463, 464, 472, 473, 477, 500,
	502, 514, 532, 537, 453, 285, 286, 420, 421, 284,
	509, 538, 0, 357, 0, 0, 359, 266, 289, 302,
	0, 524, 474, 215, 439, 275, 238, 0, 0, 200,
	234, 218, 244, 259, 262, 306, 369, 377, 406, 411,
	281, 256, 232, 432, 229, 457, 480, 481, 482, 484,
	373, 251, 410, 0, 374, 355, 490, 491, 298, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 346, 252, 0, 0, 407,
	0, 194, 0, 459, 239, 356, 353, 497, 267, 258,
	254, 237, 299, 363, 405, 479, 399, 0, 350, 0,
	0, 469, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 235,
	307, 193, 390, 470, 271, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 2332, 0, 0, 0, 2333,
	0, 0, 226, 0, 233, 331, 340, 339, 320, 321,
	323, 325, 330, 337, 343, 0, 0, 0, 0, 0,
	250, 303, 257, 249, 494, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	379, 242, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 312, 189, 213, 0,
	0, 389, 434, 446, 0, 0, 0, 240, 0, 444,
	403, 513, 221, 269, 431, 409, 442, 416, 272, 0,
	0, 443, 351, 499, 425, 510, 535, 536, 248, 383,
	522, 483, 530, 549, 214, 245, 397, 476, 516, 466,
	375, 495, 496, 311, 465, 280, 192, 349, 541, 212,
	452, 230, 219, 501, 519, 274, 429, 201, 478, 508,
	227, 456, 0, 0, 551, 203, 506, 475, 371, 308,
	309, 202, 0, 430, 253, 278, 243, 392, 503, 504,
	241, 552, 216, 529, 208, 0, 528, 385, 498, 507,
	372, 361, 207, 505, 370, 360, 316, 335, 336, 265,
	291, 423, 354, 424, 292, 381, 380, 382, 196, 517,
	0, 197, 0, 471, 518, 553, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 347, 396, 422,
	418, 426, 0, 493, 511, 523, 533, 539, 540, 542,
	543, 544, 545, 546, 548, 547, 384, 295, 467, 315,
	352, 0, 0, 402, 445, 228, 515, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 572, 362, 458, 512,
	317, 329, 332, 322, 341, 0, 342, 318, 319, 324,
	326, 327, 328, 333, 334, 338, 344, 236, 199, 368,
	376, 492, 296, 204, 205, 206, 485, 486, 487, 488,
	526, 527, 531, 435, 436, 437, 438, 277, 521, 293,
	441, 440, 313, 314, 0, 188, 209, 348, 0, 427,
	273, 550, 525, 520, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 300, 301, 304, 310, 358, 364, 365,
	366, 367, 386, 387, 388, 391, 394, 395, 398, 400,
	401, 404, 408, 412, 413, 414, 415, 417, 419, 428,
	433, 447, 448, 449, 450, 451, 454, 455, 460, 461,
	462, 463, 464, 472, 473, 477, 500, 502, 514, 532,
	537, 453, 285, 286, 420, 421, 284, 509, 538, 0,
	357, 0, 0, 359, 266, 289, 302, 0, 524, 474,
	215, 439, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 306, 369, 377, 406, 411, 281, 256, 232,
	432, 229, 457, 480, 481, 482, 484, 373, 251, 410,
	0, 374, 355, 490, 491, 298, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 1510, 0,
	0, 0, 346, 252, 0, 0, 407, 0, 194, 0,
	459, 239, 356, 353, 497, 267, 258, 254, 237, 299,
	363, 405, 479, 399, 0, 350, 0, 0, 469, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 235, 307, 193, 390,
	470, 271, 0, 0, 0, 0, 618, 0, 0, 0,
	1509, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 331, 340, 339, 320, 321, 323, 325, 330,
	337, 343, 0, 0, 0, 0, 0, 250, 303, 257,
	249, 494, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 379, 242, 0,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 312, 189, 213, 0, 0, 389, 434,
	446, 0, 0, 0, 240, 0, 444, 403, 513, 221,
	269, 431, 409, 442, 416, 272, 0, 0, 443, 351,
	499, 425, 510, 535, 536, 248, 383, 522, 483, 530,
	549, 214, 245, 397, 476, 516, 466, 375, 495, 496,
	311, 465, 280, 192, 349, 541, 212, 452, 230, 219,
	501, 519, 274, 429, 201, 478, 508, 227, 456, 0,
	0, 551, 203, 506, 475, 371, 308, 309, 202, 0,
	430, 253, 278, 243, 392, 503, 504, 241, 552, 216,
	529, 208, 0, 528, 385, 498, 507, 372, 361, 207,
	505, 370, 360, 316, 335, 336, 265, 291, 423, 354,
	424, 292, 381, 380, 382, 196, 517, 0, 197, 0,
	471, 518, 553, 222, 223, 225, 0, 264, 268, 276,
	279, 287, 288, 297, 347, 396, 422, 418, 426, 0,
	493, 511, 523, 533, 539, 540, 542, 543, 544, 545,
	546, 548, 547, 384, 295, 467, 315, 352, 0, 0,
	402, 445, 228, 515, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 362, 458, 512, 317, 329, 332,
	322, 341, 0, 342, 318, 319, 324, 326, 327, 328,
	333, 334, 338, 344, 236, 199, 368, 376, 492, 296,
	204, 205, 206, 485, 486, 487, 488, 526, 527, 531,
	435, 436, 437, 438, 277, 521, 293, 441, 440, 313,
	314, 0, 188, 209, 348, 0, 427, 273, 550, 525,
	520, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	300, 301, 304, 310, 358, 364, 365, 366, 367, 386,
	387, 388, 391, 394, 395, 398, 400, 401, 404, 408,
	412, 413, 414, 415, 417, 419, 428, 433, 447, 448,
	449, 450, 451, 454, 455, 460, 461, 462, 463, 464,
	472, 473, 477, 500, 502, 514, 532, 537, 453, 285,
	286, 420, 421, 284, 509, 538, 0, 357, 0, 0,
	359, 266, 289, 302, 0, 524, 474, 215, 439, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 306,
	369, 377, 406, 411, 281, 256, 232, 432, 229, 457,
	480, 481, 482, 484, 373, 251, 410, 0, 374, 355,
	490, 491, 298, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 346,
	252, 0, 0, 407, 0, 194, 0, 459, 239, 356,
	353, 497, 267, 258, 254, 237, 299, 363, 405, 479,
	399, 0, 350, 0, 0, 469, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 235, 307, 193, 390, 470, 271, 0,
	0, 0, 0, 620, 621, 622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 331,
	340, 339, 320, 321, 323, 325, 330, 337, 343, 0,
	0, 0, 0, 0, 250, 303, 257, 249, 494, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 379, 242, 0, 0, 0, 0,
	534, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	312, 189, 213, 0, 0, 389, 434, 446, 0, 0,
	0, 240, 0, 444, 403, 513, 221, 269, 431, 409,
	442, 416, 272, 0, 0, 443, 351, 499, 425, 510,
	535, 536, 248, 383, 522, 483, 530, 549, 214, 245,
	397, 476, 516, 466, 375, 495, 496, 311, 465, 280,
	192, 349, 541, 212, 452, 230, 219, 501, 519, 274,
	429, 201, 478, 508, 227, 456, 0, 0, 551, 203,
	506, 475, 371, 308, 309, 202, 0, 430, 253, 278,
	243, 392, 503, 504, 241, 552, 216, 529, 208, 0,
	528, 385, 498, 507, 372, 361, 207, 505, 370, 360,
	316, 335, 336, 265, 291, 423, 354, 424, 292, 381,
	380, 382, 196, 517, 0, 197, 0, 471, 518, 553,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 347, 396, 422, 418, 426, 0, 493, 511, 523,
	533, 539, 540, 542, 543, 544, 545, 546, 548, 547,
	384, 295, 467, 315, 352, 0, 0, 402, 445, 228,
	515, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	572, 362, 458, 512, 317, 329, 332, 322, 341, 0,
	342, 318, 319, 324, 326, 327, 328, 333, 334, 338,
	344, 236, 199, 368, 376, 492, 296, 204, 205, 206,
	485, 486, 487, 488, 526, 527, 531, 435, 436, 437,
	438, 277, 521, 293, 441, 440, 313, 314, 0, 188,
	209, 348, 0, 427, 273, 550, 525, 520, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 300, 301, 304,
	310, 358, 364, 365, 366, 367, 386, 387, 388, 391,
	394, 395, 398, 400, 401, 404, 408, 412, 413, 414,
	415, 417, 419, 428, 433, 447, 448, 449, 450, 451,
	454, 455, 460, 461, 462, 463, 464, 472, 473, 477,
	500, 502, 514, 532, 537, 453, 285, 286, 420, 421,
	284, 509, 538, 0, 357, 0, 0, 359, 266, 289,
	302, 0, 524, 474, 215, 439, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 306, 369, 377, 406,
	411, 281, 256, 232, 432, 229, 457, 480, 481, 482,
	484, 373, 251, 410, 0, 374, 355, 490, 491, 298,
	489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 346, 252, 0, 0,
	407, 0, 194, 0, 459, 239, 356, 353, 497, 267,
	258, 254, 237, 299, 363, 405, 479, 399, 0, 350,
	0, 0, 469, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	235, 307, 193, 390, 470, 271, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 331, 340, 339, 320,
	321, 323, 325, 330, 337, 343, 0, 0, 0, 0,
	0, 250, 303, 257, 249, 494, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 379, 242, 0, 0, 0, 0, 534, 0, 0,
	0, 3321, 0, 0, 0, 345, 0, 312, 189, 213,
	0, 0, 389, 434, 446, 0, 0, 0, 240, 0,
	444, 403, 513, 221, 269, 431, 409, 442, 416, 272,
	0, 0, 443, 351, 499, 425, 510, 535, 536, 248,
	383, 522, 483, 530, 549, 214, 245, 397, 476, 516,
	466, 375, 495, 496, 311, 465, 280, 192, 349, 541,
	212, 452, 230, 219, 501, 519, 274, 429, 201, 478,
	508, 227, 456, 0, 0, 551, 203, 506, 475, 371,
	308, 309, 202, 0, 430, 253, 278, 243, 392, 503,
	504, 241, 552, 216, 529, 208, 0, 528, 385, 498,
	507, 372, 361, 207, 505, 370, 360, 316, 335, 336,
	265, 291, 423, 354, 424, 292, 381, 380, 382, 196,
	517, 0, 197, 0, 471, 518, 553, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 347, 396,
	422, 418, 426, 0, 493, 511, 523, 533, 539, 540,
	542, 543, 544, 545, 546, 548, 547, 384, 295, 467,
	315, 352, 0, 0, 402, 445, 228, 515, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 362, 458,
	512, 317, 329, 332, 322, 341, 0, 342, 318, 319,
	324, 326, 327, 328, 333, 334, 338, 344, 236, 199,
	368, 376, 492, 296, 204, 205, 206, 485, 486, 487,
	488, 526, 527, 531, 435, 436, 437, 438, 277, 521,
	293, 441, 440, 313, 314, 0, 188, 209, 348, 0,
	427, 273, 550, 525, 520, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 300, 301, 304, 310, 358, 364,
	365, 366, 367, 386, 387, 388, 391, 394, 395, 398,
	400, 401, 404, 408, 412, 413, 414, 415, 417, 419,
	428, 433, 447, 448, 449, 450, 451, 454, 455, 460,
	461, 462, 463, 464, 472, 473, 477, 500, 502, 514,
	532, 537, 453, 285, 286, 420, 421, 284, 509, 538,
	0, 357, 0, 0, 359, 266, 289, 302, 0, 524,
	474, 215, 439, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 306, 369, 377, 406, 411, 281, 256,
	232, 432, 229, 457, 480, 481, 482, 484, 373, 251,
	410, 0, 374, 355, 490, 491, 298, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 346, 252, 0, 0, 407, 0, 194,
	0, 459, 239, 356, 353, 497, 267, 258, 254, 237,
	299, 363, 405, 479, 399, 0, 350, 0, 0, 469,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 235, 307, 193,
	390, 470, 271, 0, 0, 0, 0, 186, 0, 0,
	0, 1668, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 331, 340, 339, 320, 321, 323, 325,
	330, 337, 343, 0, 0, 0, 0, 0, 250, 303,
	257, 249, 494, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 379, 242,
	0, 0, 0, 0, 534, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 312, 189, 213, 0, 0, 389,
	434, 446, 0, 0, 0, 240, 0, 444, 403, 513,
	221, 269, 431, 409, 442, 416, 272, 0, 0, 443,
	351, 499, 425, 510, 535, 536, 248, 383, 522, 483,
	530, 549, 214, 245, 397, 476, 516, 466, 375, 495,
	496, 311, 465, 280, 192, 349, 541, 212, 452, 230,
	219, 501, 519, 274, 429, 201, 478, 508, 227, 456,
	0, 0, 551, 203, 506, 475, 371, 308, 309, 202,
	0, 430, 253, 278, 243, 392, 503, 504, 241, 552,
	216, 529, 208, 0, 528, 385, 498, 507, 372, 361,
	207, 505, 370, 360, 316, 335, 336, 265, 291, 423,
	354, 424, 292, 381, 380, 382, 196, 517, 0, 197,
	0, 471, 518, 553, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 347, 396, 422, 418, 426,
	0, 493, 511, 523, 533, 539, 540, 542, 543, 544,
	545, 546, 548, 547, 384, 295, 467, 315, 352, 0,
	0, 402, 445, 228, 515, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 362, 458, 512, 317, 329,
	332, 322, 341, 0, 342, 318, 319, 324, 326, 327,
	328, 333, 334, 338, 344, 236, 199, 368, 376, 492,
	296, 204, 205, 206, 485, 486, 487, 488, 526, 527,
	531, 435, 436, 437, 438, 277, 521, 293, 441, 440,
	313, 314, 0, 188, 209, 348, 0, 427, 273, 550,
	525, 520, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 300, 301, 304, 310, 358, 364, 365, 366, 367,
	386, 387, 388, 391, 394, 395, 398, 400, 401, 404,
	408, 412, 413, 414, 415, 417, 419, 428, 433, 447,
	448, 449, 450, 451, 454, 455, 460, 461, 462, 463,
	464, 472, 473, 477, 500, 502, 514, 532, 537, 453,
	285, 286, 420, 421, 284, 509, 538, 0, 357, 0,
	0, 359, 266, 289, 302, 0, 524, 474, 215, 439,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	306, 369, 377, 406, 411, 281, 256, 232, 432, 229,
	457, 480, 481, 482, 484, 373, 251, 410, 0, 374,
	355, 490, 491, 298, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	346, 252, 0, 0, 407, 0, 194, 0, 459, 239,
	356, 353, 497, 267, 258, 254, 237, 299, 363, 405,
	479, 399, 0, 350, 0, 0, 469, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 235, 307, 193, 390, 470, 271,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	331, 340, 339, 320, 321, 323, 325, 330, 337, 343,
	0, 0, 0, 0, 0, 250, 303, 257, 249, 494,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 379, 242, 0, 0, 0,
	0, 534, 0, 0, 0, 3193, 0, 0, 0, 345,
	0, 312, 189, 213, 0, 0, 389, 434, 446, 0,
	0, 0, 240, 0, 444, 403, 513, 221, 269, 431,
	409, 442, 416, 272, 0, 0, 443, 351, 499, 425,
	510, 535, 536, 248, 383, 522, 483, 530, 549, 214,
	245, 397, 476, 516, 466, 375, 495, 496, 311, 465,
	280, 192, 349, 541, 212, 452, 230, 219, 501, 519,
	274, 429, 201, 478, 508, 227, 456, 0, 0, 551,
	203, 506, 475, 371, 308, 309, 202, 0, 430, 253,
	278, 243, 392, 503, 504, 241, 552, 216, 529, 208,
	0, 528, 385, 498, 507, 372, 361, 207, 505, 370,
	360, 316, 335, 336, 265, 291, 423, 354, 424, 292,
	381, 380, 382, 196, 517, 0, 197, 0, 471, 518,
	553, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 347, 396, 422, 418, 426, 0, 493, 511,
	523, 533, 539, 540, 542, 543, 544, 545, 546, 548,
	547, 384, 295, 467, 315, 352, 0, 0, 402, 445,
	228, 515, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 362, 458, 512, 317, 329, 332, 322, 341,
	0, 342, 318, 319, 324, 326, 327, 328, 333, 334,
	338, 344, 236, 199, 368, 376, 492, 296, 204, 205,
	206, 485, 486, 487, 488, 526, 527, 531, 435, 436,
	437, 438, 277, 521, 293, 441, 440, 313, 314, 0,
	188, 209, 348, 0, 427, 273, 550, 525, 520, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 358, 364, 365, 366, 367, 386, 387, 388,
	391, 394, 395, 398, 400, 401, 404, 408, 412, 413,
	414, 415, 417, 419, 428, 433, 447, 448, 449, 450,
	451, 454, 455, 460, 461, 462, 463, 464, 472, 473,
	477, 500, 502, 514, 532, 537, 453, 285, 286, 420,
	421, 284, 509, 538, 0, 357, 0, 0, 359, 266,
	289, 302, 0, 524, 474, 215, 439, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 306, 369, 377,
	406, 411, 281, 256, 232, 432, 229, 457, 480, 481,
	482, 484, 373, 251, 410, 0, 374, 355, 490, 491,
	298, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 346, 252, 0,
	0, 407, 0, 194, 0, 459, 239, 356, 353, 497,
	267, 258, 254, 237, 299, 363, 405, 479, 399, 0,
	350, 0, 0, 469, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 235, 307, 193, 390, 470, 271, 0, 87, 0,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 331, 340, 339,
	320, 321, 323, 325, 330, 337, 343, 0, 0, 0,
	0, 0, 250, 303, 257, 249, 494, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 379, 242, 0, 0, 0, 0, 534, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 389, 434, 446, 0, 0, 0, 240,
	0, 444, 403, 513, 221, 269, 431, 409, 442, 416,
	272, 0, 0, 443, 351, 499, 425, 510, 535, 536,
	248, 383, 522, 483, 530, 549, 214, 245, 397, 476,
	516, 466, 375, 495, 496, 311, 465, 280, 192, 349,
	541, 212, 452, 230, 219, 501, 519, 274, 429, 201,
	478, 508, 227, 456, 0, 0, 551, 203, 506, 475,
	371, 308, 309, 202, 0, 430, 253, 278, 243, 392,
	503, 504, 241, 552, 216, 529, 208, 0, 528, 385,
	498, 507, 372, 361, 207, 505, 370, 360, 316, 335,
	336, 265, 291, 423, 354, 424, 292, 381, 380, 382,
	196, 517, 0, 197, 0, 471, 518, 553, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	396, 422, 418, 426, 0, 493, 511, 523, 533, 539,
	540, 542, 543, 544, 545, 546, 548, 547, 384, 295,
	467, 315, 352, 0, 0, 402, 445, 228, 515, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 572, 362,
	458, 512, 317, 329, 332, 322, 341, 0, 342, 318,
	319, 324, 326, 327, 328, 333, 334, 338, 344, 236,
	199, 368, 376, 492, 296, 204, 205, 206, 485, 486,
	487, 488, 526, 527, 531, 435, 436, 437, 438, 277,
	521, 293, 441, 440, 313, 314, 0, 188, 209, 348,
	0, 427, 273, 550, 525, 520, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 358,
	364, 365, 366, 367, 386, 387, 388, 391, 394, 395,
	398, 400, 401, 404, 408, 412, 413, 414, 415, 417,
	419, 428, 433, 447, 448, 449, 450, 451, 454, 455,
	460, 461, 462, 463, 464, 472, 473, 477, 500, 502,
	514, 532, 537, 453, 285, 286, 420, 421, 284, 509,
	538, 0, 357, 0, 0, 359, 266, 289, 302, 0,
	524, 474, 215, 439, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 306, 369, 377, 406, 411, 281,
	256, 232, 432, 229, 457, 480, 481, 482, 484, 373,
	251, 410, 0, 374, 355, 490, 491, 298, 489, 0,
	0, 0, 0, 2018, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 346, 252, 0, 0, 407, 0,
	194, 0, 459, 239, 356, 353, 497, 267, 258, 254,
	237, 299, 363, 405, 479, 399, 0, 350, 0, 0,
	469, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 235, 307,
	193, 390, 470, 271, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 331, 340, 339, 320, 321, 323,
	325, 330, 337, 343, 0, 0, 0, 0, 0, 250,
	303, 257, 249, 494, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 379,
	242, 0, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 312, 189, 213, 0, 0,
	389, 434, 446, 0, 0, 0, 240, 0, 444, 403,
	513, 221, 269, 431, 409, 442, 416, 272, 0, 0,
	443, 351, 499, 425, 510, 535, 536, 248, 383, 522,
	483, 530, 549, 214, 245, 397, 476, 516, 466, 375,
	495, 496, 311, 465, 280, 192, 349, 541, 212, 452,
	230, 219, 501, 519, 274, 429, 201, 478, 508, 227,
	456, 0, 0, 551, 203, 506, 475, 371, 308, 309,
	202, 0, 430, 253, 278, 243, 392, 503, 504, 241,
	552, 216, 529, 208, 0, 528, 385, 498, 507, 372,
	361, 207, 505, 370, 360, 316, 335, 336, 265, 291,
	423, 354, 424, 292, 381, 380, 382, 196, 517, 0,
	197, 0, 471, 518, 553, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 347, 396, 422, 418,
	426, 0, 493, 511, 523, 533, 539, 540, 542, 543,
	544, 545, 546, 548, 547, 384, 295, 467, 315, 352,
	0, 0, 402, 445, 228, 515, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 362, 458, 512, 317,
	329, 332, 322, 341, 0, 342, 318, 319, 324, 326,
	327, 328, 333, 334, 338, 344, 236, 199, 368, 376,
	492, 296, 204, 205, 206, 485, 486, 487, 488, 526,
	527, 531, 435, 436, 437, 438, 277, 521, 293, 441,
	440, 313, 314, 0, 188, 209, 348, 0, 427, 273,
	550, 525, 520, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 358, 364, 365, 366,
	367, 386, 387, 388, 391, 394, 395, 398, 400, 401,
	404, 408, 412, 413, 414, 415, 417, 419, 428, 433,
	447, 448, 449, 450, 451, 454, 455, 460, 461, 462,
	463, 464, 472, 473, 477, 500, 502, 514, 532, 537,
	453, 285, 286, 420, 421, 284, 509, 538, 0, 357,
	0, 0, 359, 266, 289, 302, 0, 524, 474, 215,
	439, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 306, 369, 377, 406, 411, 281, 256, 232, 432,
	229, 457, 480, 481, 482, 484, 373, 251, 410, 0,
	374, 355, 490, 491, 298, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 346, 252, 0, 0, 407, 0, 194, 0, 459,
	239, 356, 353, 497, 267, 258, 254, 237, 299, 363,
	405, 479, 399, 0, 350, 0, 0, 469, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 235, 307, 193, 390, 470,
	271, 0, 0, 0, 0, 618, 0, 0, 0, 1490,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 331, 340, 339, 320, 321, 323, 325, 330, 337,
	343, 0, 0, 0, 0, 0, 250, 303, 257, 249,
	494, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 379, 242, 0, 0,
	0, 0, 534, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 312, 189, 213, 0, 0, 389, 434, 446,
	0, 0, 0, 240, 0, 444, 403, 513, 221, 269,
	431, 409, 442, 416, 272, 0, 0, 443, 351, 499,
	425, 510, 535, 536, 248, 383, 522, 483, 530, 549,
	214, 245, 397, 476, 516, 466, 375, 495, 496, 311,
	465, 280, 192, 349, 541, 212, 452, 230, 219, 501,
	519, 274, 429, 201, 478, 508, 227, 456, 0, 0,
	551, 203, 506, 475, 371, 308, 309, 202, 0, 430,
	253, 278, 243, 392, 503, 504, 241, 552, 216, 529,
	208, 0, 528, 385, 498, 507, 372, 361, 207, 505,
	370, 360, 316, 335, 336, 265, 291, 423, 354, 424,
	292, 381, 380, 382, 196, 517, 0, 197, 0, 471,
	518, 553, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 347, 396, 422, 418, 426, 0, 493,
	511, 523, 533, 539, 540, 542, 543, 544, 545, 546,
	548, 547, 384, 295, 467, 315, 352, 0, 0, 402,
	445, 228, 515, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 362, 458, 512, 317, 329, 332, 322,
	341, 0, 342, 318, 319, 324, 326, 327, 328, 333,
	334, 338, 344, 236, 199, 368, 376, 492, 296, 204,
	205, 206, 485, 486, 487, 488, 526, 527, 531, 435,
	436, 437, 438, 277, 521, 293, 441, 440, 313, 314,
	0, 188, 209, 348, 0, 427, 273, 550, 525, 520,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 300,
	301, 304, 310, 358, 364, 365, 366, 367, 386, 387,
	388, 391, 394, 395, 398, 400, 401, 404, 408, 412,
	413, 414, 415, 417, 419, 428, 433, 447, 448, 449,
	450, 451, 454, 455, 460, 461, 462, 463, 464, 472,
	473, 477, 500, 502, 514, 532, 537, 453, 285, 286,
	420, 421, 284, 509, 538, 0, 357, 0, 0, 359,
	266, 289, 302, 0, 524, 474, 215, 439, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 306, 369,
	377, 406, 411, 281, 256, 232, 432, 229, 457, 480,
	481, 482, 484, 373, 251, 410, 0, 374, 355, 490,
	491, 298, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 346, 252,
	0, 0, 407, 0, 194, 0, 459, 239, 356, 353,
	497, 267, 258, 254, 237, 299, 363, 405, 479, 399,
	0, 350, 0, 0, 469, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 235, 307, 193, 390, 470, 271, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 331, 340,
	339, 320, 321, 323, 325, 330, 337, 343, 0, 0,
	0, 0, 0, 250, 303, 257, 249, 494, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 379, 242, 0, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 312,
	189, 213, 0, 0, 389, 434, 446, 0, 0, 0,
	240, 0, 444, 403, 513, 221, 269, 431, 409, 442,
	416, 272, 0, 0, 443, 351, 499, 425, 510, 535,
	536, 248, 383, 522, 483, 530, 549, 214, 245, 397,
	476, 516, 466, 375, 495, 496, 311, 465, 280, 192,
	349, 541, 212, 452, 230, 219, 501, 519, 274, 429,
	201, 478, 508, 227, 456, 0, 0, 551, 203, 506,
	475, 371, 308, 309, 202, 0, 430, 253, 278, 243,
	392, 503, 504, 241, 552, 216, 529, 208, 0, 528,
	385, 498, 507, 372, 361, 207, 505, 370, 360, 316,
	335, 336, 265, 291, 423, 354, 424, 292, 381, 380,
	382, 196, 517, 0, 197, 0, 471, 518, 553, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	347, 396, 422, 418, 426, 0, 493, 511, 523, 533,
	539, 540, 542, 543, 544, 545, 546, 548, 547, 384,
	295, 467, 315, 352, 0, 0, 402, 445, 228, 515,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	362, 458, 512, 317, 329, 332, 322, 341, 0, 342,
	318, 319, 324, 326, 327, 328, 333, 334, 338, 344,
	236, 199, 368, 376, 492, 296, 204, 205, 206, 485,
	486, 487, 488, 526, 527, 531, 435, 436, 437, 438,
	277, 521, 293, 441, 440, 313, 314, 0, 188, 209,
	348, 0, 427, 273, 550, 525, 520, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 300, 301, 304, 310,
	358, 364, 365, 366, 367, 386, 387, 388, 391, 394,
	395, 398, 400, 401, 404, 408, 412, 413, 414, 415,
	417, 419, 428, 433, 447, 448, 449, 450, 451, 454,
	455, 460, 461, 462, 463, 464, 472, 473, 477, 500,
	502, 514, 532, 537, 453, 285, 286, 420, 421, 284,
	509, 538, 0, 357, 0, 0, 359, 266, 289, 302,
	0, 524, 474, 215, 439, 275, 238, 0, 0, 200,
	234, 218, 244, 259, 262, 306, 369, 377, 406, 411,
	281, 256, 232, 432, 229, 457, 480, 481, 482, 484,
	373, 251, 410, 0, 374, 355, 490, 491, 298, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 346, 252, 0, 0, 407,
	0, 194, 0, 459, 239, 356, 353, 497, 267, 258,
	254, 237, 299, 363, 405, 479, 399, 0, 350, 0,
	0, 469, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 235,
	307, 193, 390, 470, 271, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 331, 340, 339, 320, 321,
	323, 325, 330, 337, 343, 0, 0, 0, 0, 0,
	250, 303, 257, 249, 494, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	379, 242, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 312, 189, 213, 0,
	0, 389, 434, 446, 0, 0, 0, 240, 0, 444,
	403, 513, 221, 269, 431, 409, 442, 416, 272, 0,
	0, 443, 351, 499, 425, 510, 535, 536, 248, 383,
	522, 483, 530, 549, 214, 245, 397, 476, 516, 466,
	375, 495, 496, 311, 465, 280, 192, 349, 541, 212,
	452, 230, 219, 501, 519, 274, 429, 201, 478, 508,
	227, 456, 0, 0, 551, 203, 506, 475, 371, 308,
	309, 202, 0, 430, 253, 278, 243, 392, 503, 504,
	241, 552, 216, 529, 208, 0, 528, 385, 498, 507,
	372, 361, 207, 505, 370, 360, 316, 335, 336, 265,
	291, 423, 354, 424, 292, 381, 380, 382, 196, 517,
	0, 197, 0, 471, 518, 553, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 347, 396, 422,
	418, 426, 0, 493, 511, 523, 533, 539, 540, 542,
	543, 544, 545, 546, 548, 547, 384, 295, 467, 315,
	352, 0, 0, 402, 445, 228, 515, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 572, 362, 458, 512,
	317, 329, 332, 322, 341, 0, 342, 318, 319, 324,
	326, 327, 328, 333, 334, 338, 344, 236, 199, 368,
	376, 492, 296, 204, 205, 206, 485, 486, 487, 488,
	526, 527, 531, 435, 436, 437, 438, 277, 521, 293,
	441, 440, 313, 314, 0, 188, 209, 348, 1766, 427,
	273, 550, 525, 520, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 300, 301, 304, 310, 358, 364, 365,
	366, 367, 386, 387, 388, 391, 394, 395, 398, 400,
	401, 404, 408, 412, 413, 414, 415, 417, 419, 428,
	433, 447, 448, 449, 450, 451, 454, 455, 460, 461,
	462, 463, 464, 472, 473, 477, 500, 502, 514, 532,
	537, 453, 285, 286, 420, 421, 284, 509, 538, 0,
	357, 0, 0, 359, 266, 289, 302, 0, 524, 474,
	215, 439, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 306, 369, 377, 406, 411, 281, 256, 232,
	432, 229, 457, 480, 481, 482, 484, 373, 251, 410,
	0, 374, 355, 490, 491, 298, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	1635, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 346, 252, 0, 0, 407, 0, 194, 0,
	459, 239, 356, 353, 497, 267, 258, 254, 237, 299,
	363, 405, 479, 399, 0, 350, 0, 0, 469, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 235, 307, 193, 390,
	470, 271, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 331, 340, 339, 320, 321, 323, 325, 330,
	337, 343, 0, 0, 0, 0, 0, 250, 303, 257,
	249, 494, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 379, 242, 0,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 312, 189, 213, 0, 0, 389, 434,
	446, 0, 0, 0, 240, 0, 444, 403, 513, 221,
	269, 431, 409, 442, 416, 272, 0, 0, 443, 351,
	499, 425, 510, 535, 536, 248, 383, 522, 483, 530,
	549, 214, 245, 397, 476, 516, 466, 375, 495, 496,
	311, 465, 280, 192, 349, 541, 212, 452, 230, 219,
	501, 519, 274, 429, 201, 478, 508, 227, 456, 0,
	0, 551, 203, 506, 475, 371, 308, 309, 202, 0,
	430, 253, 278, 243, 392, 503, 504, 241, 552, 216,
	529, 208, 0, 528, 385, 498, 507, 372, 361, 207,
	505, 370, 360, 316, 335, 336, 265, 291, 423, 354,
	424, 292, 381, 380, 382, 196, 517, 0, 197, 0,
	471, 518, 553, 222, 223, 225, 0, 264, 268, 276,
	279, 287, 288, 297, 347, 396, 422, 418, 426, 0,
	493, 511, 523, 533, 539, 540, 542, 543, 544, 545,
	546, 548, 547, 384, 295, 467, 315, 352, 0, 0,
	402, 445, 228, 515, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 362, 458, 512, 317, 329, 332,
	322, 341, 0, 342, 318, 319, 324, 326, 327, 328,
	333, 334, 338, 344, 236, 199, 368, 376, 492, 296,
	204, 205, 206, 485, 486, 487, 488, 526, 527, 531,
	435, 436, 437, 438, 277, 521, 293, 441, 440, 313,
	314, 0, 188, 209, 348, 0, 427, 273, 550, 525,
	520, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	300, 301, 304, 310, 358, 364, 365, 366, 367, 386,
	387, 388, 391, 394, 395, 398, 400, 401, 404, 408,
	412, 413, 414, 415, 417, 419, 428, 433, 447, 448,
	449, 450, 451, 454, 455, 460, 461, 462, 463, 464,
	472, 473, 477, 500, 502, 514, 532, 537, 453, 285,
	286, 420, 421, 284, 509, 538, 0, 357, 0, 0,
	359, 266, 289, 302, 0, 524, 474, 215, 439, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 306,
	369, 377, 406, 411, 281, 256, 232, 432, 229, 457,
	480, 481, 482, 484, 373, 251, 410, 0, 374, 355,
	490, 491, 298, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 1633, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 346,
	252, 0, 0, 407, 0, 194, 0, 459, 239, 356,
	353, 497, 267, 258, 254, 237, 299, 363, 405, 479,
	399, 0, 350, 0, 0, 469, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 235, 307, 193, 390, 470, 271, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 331,
	340, 339, 320, 321, 323, 325, 330, 337, 343, 0,
	0, 0, 0, 0, 250, 303, 257, 249, 494, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 379, 242, 0, 0, 0, 0,
	534, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	312, 189, 213, 0, 0, 389, 434, 446, 0, 0,
	0, 240, 0, 444, 403, 513, 221, 269, 431, 409,
	442, 416, 272, 0, 0, 443, 351, 499, 425, 510,
	535, 536, 248, 383, 522, 483, 530, 549, 214, 245,
	397, 476, 516, 466, 375, 495, 496, 311, 465, 280,
	192, 349, 541, 212, 452, 230, 219, 501, 519, 274,
	429, 201, 478, 508, 227, 456, 0, 0, 551, 203,
	506, 475, 371, 308, 309, 202, 0, 430, 253, 278,
	243, 392, 503, 504, 241, 552, 216, 529, 208, 0,
	528, 385, 498, 507, 372, 361, 207, 505, 370, 360,
	316, 335, 336, 265, 291, 423, 354, 424, 292, 381,
	380, 382, 196, 517, 0, 197, 0, 471, 518, 553,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 347, 396, 422, 418, 426, 0, 493, 511, 523,
	533, 539, 540, 542, 543, 544, 545, 546, 548, 547,
	384, 295, 467, 315, 352, 0, 0, 402, 445, 228,
	515, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	572, 362, 458, 512, 317, 329, 332, 322, 341, 0,
	342, 318, 319, 324, 326, 327, 328, 333, 334, 338,
	344, 236, 199, 368, 376, 492, 296, 204, 205, 206,
	485, 486, 487, 488, 526, 527, 531, 435, 436, 437,
	438, 277, 521, 293, 441, 440, 313, 314, 0, 188,
	209, 348, 0, 427, 273, 550, 525, 520, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 300, 301, 304,
	310, 358, 364, 365, 366, 367, 386, 387, 388, 391,
	394, 395, 398, 400, 401, 404, 408, 412, 413, 414,
	415, 417, 419, 428, 433, 447, 448, 449, 450, 451,
	454, 455, 460, 461, 462, 463, 464, 472, 473, 477,
	500, 502, 514, 532, 537, 453, 285, 286, 420, 421,
	284, 509, 538, 0, 357, 0, 0, 359, 266, 289,
	302, 0, 524, 474, 215, 439, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 306, 369, 377, 406,
	411, 281, 256, 232, 432, 229, 457, 480, 481, 482,
	484, 373, 251, 410, 0, 374, 355, 490, 491, 298,
	489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 1631, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 346, 252, 0, 0,
	407, 0, 194, 0, 459, 239, 356, 353, 497, 267,
	258, 254, 237, 299, 363, 405, 479, 399, 0, 350,
	0, 0, 469, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	235, 307, 193, 390, 470, 271, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 331, 340, 339, 320,
	321, 323, 325, 330, 337, 343, 0, 0, 0, 0,
	0, 250, 303, 257, 249, 494, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 379, 242, 0, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 312, 189, 213,
	0, 0, 389, 434, 446, 0, 0, 0, 240, 0,
	444, 403, 513, 221, 269, 431, 409, 442, 416, 272,
	0, 0, 443, 351, 499, 425, 510, 535, 536, 248,
	383, 522, 483, 530, 549, 214, 245, 397, 476, 516,
	466, 375, 495, 496, 311, 465, 280, 192, 349, 541,
	212, 452, 230, 219, 501, 519, 274, 429, 201, 478,
	508, 227, 456, 0, 0, 551, 203, 506, 475, 371,
	308, 309, 202, 0, 430, 253, 278, 243, 392, 503,
	504, 241, 552, 216, 529, 208, 0, 528, 385, 498,
	507, 372, 361, 207, 505, 370, 360, 316, 335, 336,
	265, 291, 423, 354, 424, 292, 381, 380, 382, 196,
	517, 0, 197, 0, 471, 518, 553, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 347, 396,
	422, 418, 426, 0, 493, 511, 523, 533, 539, 540,
	542, 543, 544, 545, 546, 548, 547, 384, 295, 467,
	315, 352, 0, 0, 402, 445, 228, 515, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 362, 458,
	512, 317, 329, 332, 322, 341, 0, 342, 318, 319,
	324, 326, 327, 328, 333, 334, 338, 344, 236, 199,
	368, 376, 492, 296, 204, 205, 206, 485, 486, 487,
	488, 526, 527, 531, 435, 436, 437, 438, 277, 521,
	293, 441, 440, 313, 314, 0, 188, 209, 348, 0,
	427, 273, 550, 525, 520, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 300, 301, 304, 310, 358, 364,
	365, 366, 367, 386, 387, 388, 391, 394, 395, 398,
	400, 401, 404, 408, 412, 413, 414, 415, 417, 419,
	428, 433, 447, 448, 449, 450, 451, 454, 455, 460,
	461, 462, 463, 464, 472, 473, 477, 500, 502, 514,
	532, 537, 453, 285, 286, 420, 421, 284, 509, 538,
	0, 357, 0, 0, 359, 266, 289, 302, 0, 524,
	474, 215, 439, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 306, 369, 377, 406, 411, 281, 256,
	232, 432, 229, 457, 480, 481, 482, 484, 373, 251,
	410, 0, 374, 355, 490, 491, 298, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 1629, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 346, 252, 0, 0, 407, 0, 194,
	0, 459, 239, 356, 353, 497, 267, 258, 254, 237,
	299, 363, 405, 479, 399, 0, 350, 0, 0, 469,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 235, 307, 193,
	390, 470, 271, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 331, 340, 339, 320, 321, 323, 325,
	330, 337, 343, 0, 0, 0, 0, 0, 250, 303,
	257, 249, 494, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 379, 242,
	0, 0, 0, 0, 534, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 312, 189, 213, 0, 0, 389,
	434, 446, 0, 0, 0, 240, 0, 444, 403, 513,
	221, 269, 431, 409, 442, 416, 272, 0, 0, 443,
	351, 499, 425, 510, 535, 536, 248, 383, 522, 483,
	530, 549, 214, 245, 397, 476, 516, 466, 375, 495,
	496, 311, 465, 280, 192, 349, 541, 212, 452, 230,
	219, 501, 519, 274, 429, 201, 478, 508, 227, 456,
	0, 0, 551, 203, 506, 475, 371, 308, 309, 202,
	0, 430, 253, 278, 243, 392, 503, 504, 241, 552,
	216, 529, 208, 0, 528, 385, 498, 507, 372, 361,
	207, 505, 370, 360, 316, 335, 336, 265, 291, 423,
	354, 424, 292, 381, 380, 382, 196, 517, 0, 197,
	0, 471, 518, 553, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 347, 396, 422, 418, 426,
	0, 493, 511, 523, 533, 539, 540, 542, 543, 544,
	545, 546, 548, 547, 384, 295, 467, 315, 352, 0,
	0, 402, 445, 228, 515, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 362, 458, 512, 317, 329,
	332, 322, 341, 0, 342, 318, 319, 324, 326, 327,
	328, 333, 334, 338, 344, 236, 199, 368, 376, 492,
	296, 204, 205, 206, 485, 486, 487, 488, 526, 527,
	531, 435, 436, 437, 438, 277, 521, 293, 441, 440,
	313, 314, 0, 188, 209, 348, 0, 427, 273, 550,
	525, 520, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 300, 301, 304, 310, 358, 364, 365, 366, 367,
	386, 387, 388, 391, 394, 395, 398, 400, 401, 404,
	408, 412, 413, 414, 415, 417, 419, 428, 433, 447,
	448, 449, 450, 451, 454, 455, 460, 461, 462, 463,
	464, 472, 473, 477, 500, 502, 514, 532, 537, 453,
	285, 286, 420, 421, 284, 509, 538, 0, 357, 0,
	0, 359, 266, 289, 302, 0, 524, 474, 215, 439,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	306, 369, 377, 406, 411, 281, 256, 232, 432, 229,
	457, 480, 481, 482, 484, 373, 251, 410, 0, 374,
	355, 490, 491, 298, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 1627, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	346, 252, 0, 0, 407, 0, 194, 0, 459, 239,
	356, 353, 497, 267, 258, 254, 237, 299, 363, 405,
	479, 399, 0, 350, 0, 0, 469, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 235, 307, 193, 390, 470, 271,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	331, 340, 339, 320, 321, 323, 325, 330, 337, 343,
	0, 0, 0, 0, 0, 250, 303, 257, 249, 494,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 379, 242, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 312, 189, 213, 0, 0, 389, 434, 446, 0,
	0, 0, 240, 0, 444, 403, 513, 221, 269, 431,
	409, 442, 416, 272, 0, 0, 443, 351, 499, 425,
	510, 535, 536, 248, 383, 522, 483, 530, 549, 214,
	245, 397, 476, 516, 466, 375, 495, 496, 311, 465,
	280, 192, 349, 541, 212, 452, 230, 219, 501, 519,
	274, 429, 201, 478, 508, 227, 456, 0, 0, 551,
	203, 506, 475, 371, 308, 309, 202, 0, 430, 253,
	278, 243, 392, 503, 504, 241, 552, 216, 529, 208,
	0, 528, 385, 498, 507, 372, 361, 207, 505, 370,
	360, 316, 335, 336, 265, 291, 423, 354, 424, 292,
	381, 380, 382, 196, 517, 0, 197, 0, 471, 518,
	553, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 347, 396, 422, 418, 426, 0, 493, 511,
	523, 533, 539, 540, 542, 543, 544, 545, 546, 548,
	547, 384, 295, 467, 315, 352, 0, 0, 402, 445,
	228, 515, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 362, 458, 512, 317, 329, 332, 322, 341,
	0, 342, 318, 319, 324, 326, 327, 328, 333, 334,
	338, 344, 236, 199, 368, 376, 492, 296, 204, 205,
	206, 485, 486, 487, 488, 526, 527, 531, 435, 436,
	437, 438, 277, 521, 293, 441, 440, 313, 314, 0,
	188, 209, 348, 0, 427, 273, 550, 525, 520, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 358, 364, 365, 366, 367, 386, 387, 388,
	391, 394, 395, 398, 400, 401, 404, 408, 412, 413,
	414, 415, 417, 419, 428, 433, 447, 448, 449, 450,
	451, 454, 455, 460, 461, 462, 463, 464, 472, 473,
	477, 500, 502, 514, 532, 537, 453, 285, 286, 420,
	421, 284, 509, 538, 0, 357, 0, 0, 359, 266,
	289, 302, 0, 524, 474, 215, 439, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 306, 369, 377,
	406, 411, 281, 256, 232, 432, 229, 457, 480, 481,
	482, 484, 373, 251, 410, 0, 374, 355, 490, 491,
	298, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 1623, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 346, 252, 0,
	0, 407, 0, 194, 0, 459, 239, 356, 353, 497,
	267, 258, 254, 237, 299, 363, 405, 479, 399, 0,
	350, 0, 0, 469, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 235, 307, 193, 390, 470, 271, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 331, 340, 339,
	320, 321, 323, 325, 330, 337, 343, 0, 0, 0,
	0, 0, 250, 303, 257, 249, 494, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 379, 242, 0, 0, 0, 0, 534, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 389, 434, 446, 0, 0, 0, 240,
	0, 444, 403, 513, 221, 269, 431, 409, 442, 416,
	272, 0, 0, 443, 351, 499, 425, 510, 535, 536,
	248, 383, 522, 483, 530, 549, 214, 245, 397, 476,
	516, 466, 375, 495, 496, 311, 465, 280, 192, 349,
	541, 212, 452, 230, 219, 501, 519, 274, 429, 201,
	478, 508, 227, 456, 0, 0, 551, 203, 506, 475,
	371, 308, 309, 202, 0, 430, 253, 278, 243, 392,
	503, 504, 241, 552, 216, 529, 208, 0, 528, 385,
	498, 507, 372, 361, 207, 505, 370, 360, 316, 335,
	336, 265, 291, 423, 354, 424, 292, 381, 380, 382,
	196, 517, 0, 197, 0, 471, 518, 553, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	396, 422, 418, 426, 0, 493, 511, 523, 533, 539,
	540, 542, 543, 544, 545, 546, 548, 547, 384, 295,
	467, 315, 352, 0, 0, 402, 445, 228, 515, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 572, 362,
	458, 512, 317, 329, 332, 322, 341, 0, 342, 318,
	319, 324, 326, 327, 328, 333, 334, 338, 344, 236,
	199, 368, 376, 492, 296, 204, 205, 206, 485, 486,
	487, 488, 526, 527, 531, 435, 436, 437, 438, 277,
	521, 293, 441, 440, 313, 314, 0, 188, 209, 348,
	0, 427, 273, 550, 525, 520, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 358,
	364, 365, 366, 367, 386, 387, 388, 391, 394, 395,
	398, 400, 401, 404, 408, 412, 413, 414, 415, 417,
	419, 428, 433, 447, 448, 449, 450, 451, 454, 455,
	460, 461, 462, 463, 464, 472, 473, 477, 500, 502,
	514, 532, 537, 453, 285, 286, 420, 421, 284, 509,
	538, 0, 357, 0, 0, 359, 266, 289, 302, 0,
	524, 474, 215, 439, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 306, 369, 377, 406, 411, 281,
	256, 232, 432, 229, 457, 480, 481, 482, 484, 373,
	251, 410, 0, 374, 355, 490, 491, 298, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 1621, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 346, 252, 0, 0, 407, 0,
	194, 0, 459, 239, 356, 353, 497, 267, 258, 254,
	237, 299, 363, 405, 479, 399, 0, 350, 0, 0,
	469, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 235, 307,
	193, 390, 470, 271, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 331, 340, 339, 320, 321, 323,
	325, 330, 337, 343, 0, 0, 0, 0, 0, 250,
	303, 257, 249, 494, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 379,
	242, 0, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 312, 189, 213, 0, 0,
	389, 434, 446, 0, 0, 0, 240, 0, 444, 403,
	513, 221, 269, 431, 409, 442, 416, 272, 0, 0,
	443, 351, 499, 425, 510, 535, 536, 248, 383, 522,
	483, 530, 549, 214, 245, 397, 476, 516, 466, 375,
	495, 496, 311, 465, 280, 192, 349, 541, 212, 452,
	230, 219, 501, 519, 274, 429, 201, 478, 508, 227,
	456, 0, 0, 551, 203, 506, 475, 371, 308, 309,
	202, 0, 430, 253, 278, 243, 392, 503, 504, 241,
	552, 216, 529, 208, 0, 528, 385, 498, 507, 372,
	361, 207, 505, 370, 360, 316, 335, 336, 265, 291,
	423, 354, 424, 292, 381, 380, 382, 196, 517, 0,
	197, 0, 471, 518, 553, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 347, 396, 422, 418,
	426, 0, 493, 511, 523, 533, 539, 540, 542, 543,
	544, 545, 546, 548, 547, 384, 295, 467, 315, 352,
	0, 0, 402, 445, 228, 515, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 362, 458, 512, 317,
	329, 332, 322, 341, 0, 342, 318, 319, 324, 326,
	327, 328, 333, 334, 338, 344, 236, 199, 368, 376,
	492, 296, 204, 205, 206, 485, 486, 487, 488, 526,
	527, 531, 435, 436, 437, 438, 277, 521, 293, 441,
	440, 313, 314, 0, 188, 209, 348, 0, 427, 273,
	550, 525, 520, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 358, 364, 365, 366,
	367, 386, 387, 388, 391, 394, 395, 398, 400, 401,
	404, 408, 412, 413, 414, 415, 417, 419, 428, 433,
	447, 448, 449, 450, 451, 454, 455, 460, 461, 462,
	463, 464, 472, 473, 477, 500, 502, 514, 532, 537,
	453, 285, 286, 420, 421, 284, 509, 538, 0, 357,
	0, 0, 359, 266, 289, 302, 0, 524, 474, 215,
	439, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 306, 369, 377, 406, 411, 281, 256, 232, 432,
	229, 457, 480, 481, 482, 484, 373, 251, 410, 0,
	374, 355, 490, 491, 298, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 1619,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 346, 252, 0, 0, 407, 0, 194, 0, 459,
	239, 356, 353, 497, 267, 258, 254, 237, 299, 363,
	405, 479, 399, 0, 350, 0, 0, 469, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 235, 307, 193, 390, 470,
	271, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 331, 340, 339, 320, 321, 323, 325, 330, 337,
	343, 0, 0, 0, 0, 0, 250, 303, 257, 249,
	494, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 379, 242, 0, 0,
	0, 0, 534, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 312, 189, 213, 0, 0, 389, 434, 446,
	0, 0, 0, 240, 0, 444, 403, 513, 221, 269,
	431, 409, 442, 416, 272, 0, 0, 443, 351, 499,
	425, 510, 535, 536, 248, 383, 522, 483, 530, 549,
	214, 245, 397, 476, 516, 466, 375, 495, 496, 311,
	465, 280, 192, 349, 541, 212, 452, 230, 219, 501,
	519, 274, 429, 201, 478, 508, 227, 456, 0, 0,
	551, 203, 506, 475, 371, 308, 309, 202, 0, 430,
	253, 278, 243, 392, 503, 504, 241, 552, 216, 529,
	208, 0, 528, 385, 498, 507, 372, 361, 207, 505,
	370, 360, 316, 335, 336, 265, 291, 423, 354, 424,
	292, 381, 380, 382, 196, 517, 0, 197, 0, 471,
	518, 553, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 347, 396, 422, 418, 426, 0, 493,
	511, 523, 533, 539, 540, 542, 543, 544, 545, 546,
	548, 547, 384, 295, 467, 315, 352, 0, 0, 402,
	445, 228, 515, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 362, 458, 512, 317, 329, 332, 322,
	341, 0, 342, 318, 319, 324, 326, 327, 328, 333,
	334, 338, 344, 236, 199, 368, 376, 492, 296, 204,
	205, 206, 485, 486, 487, 488, 526, 527, 531, 435,
	436, 437, 438, 277, 521, 293, 441, 440, 313, 314,
	0, 188, 209, 348, 0, 427, 273, 550, 525, 520,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 300,
	301, 304, 310, 358, 364, 365, 366, 367, 386, 387,
	388, 391, 394, 395, 398, 400, 401, 404, 408, 412,
	413, 414, 415, 417, 419, 428, 433, 447, 448, 449,
	450, 451, 454, 455, 460, 461, 462, 463, 464, 472,
	473, 477, 500, 502, 514, 532, 537, 453, 285, 286,
	420, 421, 284, 509, 538, 0, 357, 0, 0, 359,
	266, 289, 302, 0, 524, 474, 215, 439, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 306, 369,
	377, 406, 411, 281, 256, 232, 432, 229, 457, 480,
	481, 482, 484, 373, 251, 410, 0, 374, 355, 490,
	491, 298, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 346, 252,
	0, 0, 407, 0, 194, 0, 459, 239, 356, 353,
	497, 267, 258, 254, 237, 299, 363, 405, 479, 399,
	0, 350, 0, 0, 469, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 235, 307, 193, 390, 470, 271, 0, 1594,
	0, 0, 618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 331, 340,
	339, 320, 321, 323, 325, 330, 337, 343, 0, 0,
	0, 0, 0, 250, 303, 257, 249, 494, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 379, 242, 0, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 312,
	189, 213, 0, 0, 389, 434, 446, 0, 0, 0,
	240, 0, 444, 403, 513, 221, 269, 431, 409, 442,
	416, 272, 0, 0, 443, 351, 499, 425, 510, 535,
	536, 248, 383, 522, 483, 530, 549, 214, 245, 397,
	476, 516, 466, 375, 495, 496, 311, 465, 280, 192,
	349, 541, 212, 452, 230, 219, 501, 519, 274, 429,
	201, 478, 508, 227, 456, 0, 0, 551, 203, 506,
	475, 371, 308, 309, 202, 0, 430, 253, 278, 243,
	392, 503, 504, 241, 552, 216, 529, 208, 0, 528,
	385, 498, 507, 372, 361, 207, 505, 370, 360, 316,
	335, 336, 265, 291, 423, 354, 424, 292, 381, 380,
	382, 196, 517, 0, 197, 0, 471, 518, 553, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	347, 396, 422, 418, 426, 0, 493, 511, 523, 533,
	539, 540, 542, 543, 544, 545, 546, 548, 547, 384,
	295, 467, 315, 352, 0, 0, 402, 445, 228, 515,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	362, 458, 512, 317, 329, 332, 322, 341, 0, 342,
	318, 319, 324, 326, 327, 328, 333, 334, 338, 344,
	236, 199, 368, 376, 492, 296, 204, 205, 206, 485,
	486, 487, 488, 526, 527, 531, 435, 436, 437, 438,
	277, 521, 293, 441, 440, 313, 314, 0, 188, 209,
	348, 0, 427, 273, 550, 525, 520, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 300, 301, 304, 310,
	358, 364, 365, 366, 367, 386, 387, 388, 391, 394,
	395, 398, 400, 401, 404, 408, 412, 413, 414, 415,
	417, 419, 428, 433, 447, 448, 449, 450, 451, 454,
	455, 460, 461, 462, 463, 464, 472, 473, 477, 500,
	502, 514, 532, 537, 453, 285, 286, 420, 421, 284,
	509, 538, 0, 357, 0, 0, 359, 266, 289, 302,
	0, 524, 474, 215, 439, 275, 238, 0, 0, 200,
	234, 218, 244, 259, 262, 306, 369, 377, 406, 411,
	281, 256, 232, 432, 229, 457, 480, 481, 482, 484,
	373, 251, 410, 0, 374, 355, 490, 491, 298, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 0, 0, 1495,
	255, 0, 0, 0, 0, 346, 252, 0, 0, 407,
	0, 194, 0, 459, 239, 356, 353, 497, 267, 258,
	254, 237, 299, 363, 405, 479, 399, 0, 350, 0,
	0, 469, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 235,
	307, 193, 390, 470, 271, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 331, 340, 339, 320, 321,
	323, 325, 330, 337, 343, 0, 0, 0, 0, 0,
	250, 303, 257, 249, 494, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	379, 242, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 312, 189, 213, 0,
	0, 389, 434, 446, 0, 0, 0, 240, 0, 444,
	403, 513, 221, 269, 431, 409, 442, 416, 272, 0,
	0, 443, 351, 499, 425, 510, 535, 536, 248, 383,
	522, 483, 530, 549, 214, 245, 397, 476, 516, 466,
	375, 495, 496, 311, 465, 280, 192, 349, 541, 212,
	452, 230, 219, 501, 519, 274, 429, 201, 478, 508,
	227, 456, 0, 0, 551, 203, 506, 475, 371, 308,
	309, 202, 0, 430, 253, 278, 243, 392, 503, 504,
	241, 552, 216, 529, 208, 0, 528, 385, 498, 507,
	372, 361, 207, 505, 370, 360, 316, 335, 336, 265,
	291, 423, 354, 424, 292, 381, 380, 382, 196, 517,
	0, 197, 0, 471, 518, 553, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 347, 396, 422,
	418, 426, 0, 493, 511, 523, 533, 539, 540, 542,
	543, 544, 545, 546, 548, 547, 384, 295, 467, 315,
	352, 0, 0, 402, 445, 228, 515, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 572, 362, 458, 512,
	317, 329, 332, 322, 341, 0, 342, 318, 319, 324,
	326, 327, 328, 333, 334, 338, 344, 236, 199, 368,
	376, 492, 296, 204, 205, 206, 485, 486, 487, 488,
	526, 527, 531, 435, 436, 437, 438, 277, 521, 293,
	441, 440, 313, 314, 0, 188, 209, 348, 0, 427,
	273, 550, 525, 520, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 300, 301, 304, 310, 358, 364, 365,
	366, 367, 386, 387, 388, 391, 394, 395, 398, 400,
	401, 404, 408, 412, 413, 414, 415, 417, 419, 428,
	433, 447, 448, 449, 450, 451, 454, 455, 460, 461,
	462, 463, 464, 472, 473, 477, 500, 502, 514, 532,
	537, 453, 285, 286, 420, 421, 284, 509, 538, 0,
	357, 0, 0, 359, 266, 289, 302, 0, 524, 474,
	215, 439, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 306, 369, 377, 406, 411, 281, 256, 232,
	432, 229, 457, 480, 481, 482, 484, 373, 251, 410,
	0, 374, 355, 490, 491, 298, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 346, 252, 0, 0, 407, 0, 194, 0,
	459, 239, 356, 353, 497, 267, 258, 254, 237, 299,
	363, 405, 479, 399, 0, 350, 0, 0, 469, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 235, 307, 193, 390,
	470, 271, 0, 0, 0, 0, 618, 0, 0, 0,
	1256, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 331, 340, 339, 320, 321, 323, 325, 330,
	337, 343, 0, 0, 0, 0, 0, 250, 303, 257,
	249, 494, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 379, 242, 0,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 312, 189, 213, 0, 0, 389, 434,
	446, 0, 0, 0, 240, 0, 444, 403, 513, 221,
	269, 431, 409, 442, 416, 272, 0, 0, 443, 351,
	499, 425, 510, 535, 536, 248, 383, 522, 483, 530,
	549, 214, 245, 397, 476, 516, 466, 375, 495, 496,
	311, 465, 280, 192, 349, 541, 212, 452, 230, 219,
	501, 519, 274, 429, 201, 478, 508, 227, 456, 0,
	0, 551, 203, 506, 475, 371, 308, 309, 202, 0,
	430, 253, 278, 243, 392, 503, 504, 241, 552, 216,
	529, 208, 0, 528, 385, 498, 507, 372, 361, 207,
	505, 370, 360, 316, 335, 336, 265, 291, 423, 354,
	424, 292, 381, 380, 382, 196, 517, 0, 197, 0,
	471, 518, 553, 222, 223, 225, 0, 264, 268, 276,
	279, 287, 288, 297, 347, 396, 422, 418, 426, 0,
	493, 511, 523, 533, 539, 540, 542, 543, 544, 545,
	546, 548, 547, 384, 295, 467, 315, 352, 0, 0,
	402, 445, 228, 515, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 362, 458, 512, 317, 329, 332,
	322, 341, 0, 342, 318, 319, 324, 326, 327, 328,
	333, 334, 338, 344, 236, 199, 368, 376, 492, 296,
	204, 205, 206, 485, 486, 487, 488, 526, 527, 531,
	435, 436, 437, 438, 277, 521, 293, 441, 440, 313,
	314, 0, 188, 209, 348, 0, 427, 273, 550, 525,
	520, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	300, 301, 304, 310, 358, 364, 365, 366, 367, 386,
	387, 388, 391, 394, 395, 398, 400, 401, 404, 408,
	412, 413, 414, 415, 417, 419, 428, 433, 447, 448,
	449, 450, 451, 454, 455, 460, 461, 462, 463, 464,
	472, 473, 477, 500, 502, 514, 532, 537, 453, 285,
	286, 420, 421, 284, 509, 538, 0, 357, 0, 0,
	359, 266, 289, 302, 0, 524, 474, 215, 439, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 306,
	369, 377, 406, 411, 281, 256, 232, 432, 229, 457,
	480, 481, 482, 484, 373, 251, 410, 0, 374, 355,
	490, 491, 298, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 346,
	252, 0, 0, 407, 0, 194, 0, 459, 239, 356,
	353, 497, 267, 258, 254, 237, 299, 363, 405, 479,
	399, 0, 350, 0, 0, 469, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 235, 307, 193, 390, 470, 271, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 331,
	340, 339, 320, 321, 323, 325, 330, 337, 343, 0,
	0, 0, 0, 0, 250, 303, 257, 249, 494, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 379, 242, 0, 0, 0, 0,
	534, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	312, 189, 213, 0, 0, 389, 434, 446, 0, 0,
	0, 240, 0, 444, 403, 513, 221, 269, 431, 409,
	442, 416, 272, 0, 0, 443, 351, 499, 425, 510,
	535, 536, 248, 383, 522, 483, 530, 549, 214, 245,
	397, 476, 516, 466, 375, 495, 496, 311, 465, 280,
	192, 349, 541, 212, 452, 230, 219, 501, 519, 274,
	429, 201, 478, 508, 227, 456, 0, 0, 551, 203,
	506, 475, 371, 308, 309, 202, 0, 430, 253, 278,
	243, 392, 503, 504, 241, 552, 216, 529, 208, 0,
	528, 385, 498, 507, 372, 361, 207, 505, 370, 360,
	316, 335, 336, 265, 291, 423, 354, 424, 292, 381,
	380, 382, 196, 517, 0, 197, 0, 471, 518, 553,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 347, 396, 422, 418, 426, 0, 493, 511, 523,
	533, 539, 540, 542, 543, 544, 545, 546, 548, 547,
	384, 295, 467, 315, 352, 0, 0, 402, 445, 228,
	515, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	572, 362, 458, 512, 317, 329, 332, 322, 341, 0,
	342, 318, 319, 324, 326, 327, 328, 333, 334, 338,
	344, 236, 199, 368, 376, 492, 296, 204, 205, 206,
	485, 486, 487, 488, 526, 527, 531, 435, 436, 437,
	438, 277, 521, 293, 441, 440, 313, 314, 0, 188,
	209, 348, 0, 427, 273, 550, 525, 520, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 866,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 300, 301, 304,
	310, 358, 364, 365, 366, 367, 386, 387, 388, 391,
	394, 395, 398, 400, 401, 404, 408, 412, 413, 414,
	415, 417, 419, 428, 433, 447, 448, 449, 450, 451,
	454, 455, 460, 461, 462, 463, 464, 472, 473, 477,
	500, 502, 514, 532, 537, 453, 285, 286, 420, 421,
	284, 509, 538, 0, 357, 0, 0, 359, 266, 289,
	302, 0, 524, 474, 215, 439, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 306, 369, 377, 406,
	411, 281, 256, 232, 432, 229, 457, 480, 481, 482,
	484, 373, 251, 410, 0, 374, 355, 490, 491, 298,
	489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 346, 252, 0, 0,
	407, 0, 194, 0, 459, 239, 356, 353, 497, 267,
	258, 254, 237, 299, 363, 405, 479, 399, 0, 350,
	0, 0, 469, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	235, 307, 193, 390, 470, 271, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 331, 340, 339, 320,
	321, 323, 325, 330, 337, 343, 0, 0, 0, 0,
	0, 250, 303, 257, 249, 494, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 634, 0, 282,
	0, 379, 242, 0, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 312, 189, 213,
	0, 0, 389, 434, 446, 0, 0, 0, 240, 0,
	444, 403, 513, 221, 269, 431, 409, 442, 416, 272,
	0, 0, 443, 351, 499, 425, 510, 535, 536, 248,
	383, 522, 483, 530, 549, 214, 245, 397, 476, 516,
	466, 375, 495, 496, 311, 465, 280, 192, 349, 541,
	212, 452, 230, 219, 501, 519, 274, 429, 201, 478,
	508, 227, 456, 0, 0, 551, 203, 506, 475, 371,
	308, 309, 202, 0, 430, 253, 278, 243, 392, 503,
	504, 241, 552, 216, 529, 208, 0, 528, 385, 498,
	507, 372, 361, 207, 505, 370, 360, 316, 335, 336,
	265, 291, 423, 354, 424, 292, 381, 380, 382, 196,
	517, 0, 197, 0, 471, 518, 553, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 347, 396,
	422, 418, 426, 0, 493, 511, 523, 533, 539, 540,
	542, 543, 544, 545, 546, 548, 547, 384, 295, 467,
	315, 352, 0, 0, 402, 445, 228, 515, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 362, 458,
	512, 317, 329, 332, 322, 341, 0, 342, 318, 319,
	324, 326, 327, 328, 333, 334, 338, 344, 236, 199,
	368, 376, 492, 296, 204, 205, 206, 485, 486, 487,
	488, 526, 527, 531, 435, 436, 437, 438, 277, 521,
	293, 441, 440, 313, 314, 0, 188, 209, 348, 0,
	427, 273, 550, 525, 520, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 300, 301, 304, 310, 358, 364,
	365, 366, 367, 386, 387, 388, 391, 394, 395, 398,
	400, 401, 404, 408, 412, 413, 414, 415, 417, 419,
	428, 433, 447, 448, 449, 450, 451, 454, 455, 460,
	461, 462, 463, 464, 472, 473, 477, 500, 502, 514,
	532, 537, 453, 285, 286, 420, 421, 633, 509, 538,
	0, 357, 0, 0, 359, 266, 289, 302, 0, 524,
	474, 215, 439, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 306, 369, 377, 406, 411, 281, 256,
	232, 432, 229, 457, 480, 481, 482, 484, 373, 251,
	410, 0, 374, 355, 490, 491, 298, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 346, 252, 0, 0, 407, 0, 194,
	0, 459, 239, 356, 353, 497, 267, 258, 254, 237,
	299, 363, 405, 479, 399, 0, 350, 0, 0, 469,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 235, 307, 193,
	390, 470, 271, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 331, 340, 339, 320, 321, 323, 325,
	330, 337, 343, 0, 0, 0, 0, 0, 250, 303,
	257, 249, 494, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 379, 242,
	0, 0, 575, 0, 534, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 312, 189, 213, 0, 0, 389,
	434, 446, 0, 0, 0, 240, 0, 444, 403, 513,
	221, 269, 431, 409, 442, 416, 272, 0, 0, 443,
	351, 499, 425, 510, 535, 536, 248, 383, 522, 483,
	530, 549, 214, 245, 397, 476, 516, 466, 375, 495,
	496, 311, 465, 280, 192, 349, 541, 212, 452, 230,
	219, 501, 519, 274, 429, 201, 478, 508, 227, 456,
	0, 0, 551, 203, 506, 475, 371, 308, 309, 202,
	0, 430, 253, 278, 243, 392, 503, 504, 241, 552,
	216, 529, 208, 0, 528, 385, 498, 507, 372, 361,
	207, 505, 370, 360, 316, 335, 336, 265, 291, 423,
	354, 424, 292, 381, 380, 382, 196, 517, 0, 197,
	0, 471, 518, 553, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 347, 396, 422, 418, 426,
	0, 493, 511, 523, 533, 539, 540, 542, 543, 544,
	545, 546, 548, 547, 384, 295, 467, 315, 352, 0,
	0, 402, 445, 228, 515, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 362, 458, 512, 317, 329,
	332, 322, 341, 0, 342, 318, 319, 324, 326, 327,
	328, 333, 334, 338, 344, 236, 199, 368, 376, 492,
	296, 204, 205, 206, 485, 486, 487, 488, 526, 527,
	531, 435, 436, 437, 438, 277, 521, 293, 441, 440,
	313, 314, 0, 188, 209, 348, 0, 427, 273, 550,
	525, 520, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 300, 301, 304, 310, 358, 364, 365, 366, 367,
	386, 387, 388, 391, 394, 395, 398, 400, 401, 404,
	408, 412, 413, 414, 415, 417, 419, 428, 433, 447,
	448, 449, 450, 451, 454, 455, 460, 461, 462, 463,
	464, 472, 473, 477, 500, 502, 514, 532, 537, 453,
	285, 286, 420, 421, 284, 509, 538, 0, 357, 0,
	0, 359, 266, 289, 302, 0, 524, 474, 215, 439,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	306, 369, 377, 406, 411, 281, 256, 232, 432, 229,
	457, 480, 481, 482, 484, 373, 251, 410, 0, 374,
	355, 490, 491, 298, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	346, 252, 0, 0, 407, 0, 194, 0, 459, 239,
	356, 353, 497, 267, 258, 254, 237, 299, 363, 405,
	479, 399, 0, 350, 0, 0, 469, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 235, 307, 193, 390, 470, 271,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	331, 340, 339, 320, 321, 323, 325, 330, 337, 343,
	0, 0, 0, 0, 0, 250, 303, 257, 249, 494,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 379, 242, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 312, 189, 213, 0, 0, 389, 434, 446, 0,
	0, 0, 240, 0, 444, 403, 513, 221, 269, 431,
	409, 442, 416, 272, 0, 0, 443, 351, 499, 425,
	510, 535, 536, 248, 383, 522, 483, 530, 549, 214,
	245, 397, 476, 516, 466, 375, 495, 496, 311, 465,
	280, 192, 349, 541, 212, 452, 230, 219, 501, 519,
	274, 429, 201, 478, 508, 227, 456, 0, 0, 551,
	203, 506, 475, 371, 308, 309, 202, 0, 430, 253,
	278, 243, 392, 503, 504, 241, 552, 216, 529, 208,
	0, 528, 385, 498, 507, 372, 361, 207, 505, 370,
	360, 316, 335, 336, 265, 291, 423, 354, 424, 292,
	381, 380, 382, 196, 517, 0, 197, 0, 471, 518,
	553, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 347, 396, 422, 418, 426, 0, 493, 511,
	523, 533, 539, 540, 542, 543, 544, 545, 546, 548,
	547, 384, 295, 467, 315, 352, 0, 0, 402, 445,
	228, 515, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 362, 458, 512, 317, 329, 332, 322, 341,
	0, 342, 318, 319, 324, 326, 327, 328, 333, 334,
	338, 344, 236, 199, 368, 376, 492, 296, 204, 205,
	206, 485, 486, 487, 488, 526, 527, 531, 435, 436,
	437, 438, 277, 521, 293, 441, 440, 313, 314, 0,
	188, 209, 348, 0, 427, 273, 550, 525, 520, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 358, 364, 365, 366, 367, 3329, 387, 388,
	391, 394, 395, 398, 400, 401, 404, 408, 412, 413,
	414, 415, 417, 419, 428, 433, 447, 448, 449, 450,
	451, 454, 455, 460, 461, 462, 463, 464, 472, 473,
	477, 500, 502, 514, 532, 537, 453, 285, 286, 420,
	421, 284, 509, 538, 0, 357, 0, 0, 359, 266,
	289, 302, 0, 524, 474, 215, 439, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 306, 369, 377,
	406, 411, 281, 256, 232, 432, 229, 457, 480, 481,
	482, 484, 373, 251, 410, 0, 374, 355, 490, 491,
	298, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 346, 252, 0,
	0, 407, 0, 194, 0, 459, 239, 356, 353, 497,
	267, 258, 254, 237, 299, 363, 405, 479, 399, 0,
	350, 0, 0, 469, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 235, 307, 193, 390, 470, 271, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 331, 340, 339,
	320, 321, 323, 325, 330, 337, 343, 0, 0, 0,
	0, 0, 250, 303, 257, 249, 494, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 379, 242, 0, 0, 0, 0, 534, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 389, 434, 446, 0, 0, 0, 240,
	0, 444, 403, 513, 221, 269, 431, 409, 442, 416,
	272, 0, 0, 443, 351, 499, 425, 510, 535, 536,
	248, 383, 522, 483, 530, 549, 214, 245, 397, 476,
	516, 466, 375, 495, 496, 311, 465, 280, 192, 349,
	541, 212, 452, 230, 219, 501, 519, 274, 429, 201,
	478, 508, 227, 456, 0, 0, 551, 203, 506, 475,
	371, 308, 309, 202, 0, 430, 253, 278, 243, 392,
	503, 504, 241, 552, 216, 529, 208, 0, 528, 385,
	498, 507, 372, 361, 207, 505, 370, 360, 316, 335,
	336, 265, 291, 423, 354, 424, 292, 381, 380, 382,
	196, 517, 0, 197, 0, 471, 518, 553, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	396, 422, 418, 426, 0, 493, 511, 523, 533, 539,
	540, 542, 543, 544, 545, 546, 548, 547, 384, 295,
	467, 315, 352, 0, 0, 402, 445, 228, 515, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 572, 362,
	458, 512, 317, 329, 332, 322, 341, 0, 342, 318,
	319, 324, 326, 327, 328, 333, 334, 338, 344, 236,
	199, 368, 376, 492, 296, 204, 205, 206, 485, 486,
	487, 488, 526, 527, 531, 435, 436, 437, 438, 277,
	521, 293, 441, 440, 313, 314, 0, 188, 209, 348,
	0, 427, 273, 550, 525, 520, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 358,
	364, 365, 366, 367, 386, 387, 388, 391, 394, 395,
	398, 400, 401, 404, 408, 412, 413, 414, 415, 417,
	419, 428, 433, 447, 448, 449, 450, 451, 454, 455,
	460, 461, 462, 463, 464, 472, 473, 477, 500, 502,
	514, 532, 537, 453, 285, 286, 420, 421, 284, 509,
	538, 0, 357, 0, 0, 359, 266, 289, 302, 0,
	524, 474, 215, 439, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 306, 369, 377, 406, 411, 281,
	256, 232, 432, 229, 457, 480, 481, 482, 484, 373,
	251, 410, 0, 374, 355, 490, 491, 298, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 346, 252, 0, 0, 407, 0,
	194, 0, 459, 239, 356, 353, 497, 267, 258, 254,
	237, 299, 363, 405, 479, 399, 0, 350, 0, 0,
	469, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 235, 307,
	193, 390, 470, 271, 0, 0, 0, 0, 784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 331, 340, 339, 320, 321, 323,
	325, 330, 337, 343, 0, 0, 0, 0, 0, 250,
	303, 257, 249, 494, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 379,
	242, 0, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 312, 189, 213, 0, 0,
	389, 434, 446, 0, 0, 0, 240, 0, 444, 403,
	513, 221, 269, 431, 409, 442, 416, 272, 0, 0,
	443, 351, 499, 425, 510, 535, 536, 248, 383, 522,
	483, 530, 549, 214, 245, 397, 476, 516, 466, 375,
	495, 496, 311, 465, 280, 192, 349, 541, 212, 452,
	230, 219, 501, 519, 274, 429, 201, 478, 508, 227,
	456, 0, 0, 551, 203, 506, 475, 371, 308, 309,
	202, 0, 430, 253, 278, 243, 392, 503, 504, 241,
	552, 216, 529, 208, 0, 528, 385, 498, 507, 372,
	361, 207, 505, 370, 360, 316, 335, 336, 265, 291,
	423, 354, 424, 292, 381, 380, 382, 196, 517, 0,
	197, 0, 471, 518, 553, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 347, 396, 422, 418,
	426, 0, 493, 511, 523, 533, 539, 540, 542, 543,
	544, 545, 546, 548, 547, 384, 295, 467, 315, 352,
	0, 0, 402, 445, 228, 515, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 362, 458, 512, 317,
	329, 332, 322, 341, 0, 342, 318, 319, 324, 326,
	327, 328, 333, 334, 338, 344, 236, 199, 368, 376,
	492, 296, 204, 205, 206, 485, 486, 487, 488, 526,
	527, 531, 435, 436, 437, 438, 277, 521, 293, 441,
	440, 313, 314, 0, 188, 209, 348, 0, 427, 273,
	550, 525, 520, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 358, 364, 365, 366,
	367, 386, 387, 388, 391, 394, 395, 398, 400, 401,
	404, 408, 412, 413, 414, 415, 417, 419, 428, 433,
	447, 448, 449, 450, 451, 454, 455, 460, 461, 462,
	463, 464, 472, 473, 477, 500, 502, 514, 532, 537,
	453, 285, 286, 420, 421, 284, 509, 538, 0, 357,
	0, 0, 359, 266, 289, 302, 0, 524, 474, 215,
	439, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 306, 369, 377, 406, 411, 281, 256, 232, 432,
	229, 457, 480, 481, 482, 484, 373, 251, 410, 0,
	374, 355, 490, 491, 298, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 346, 252, 0, 0, 407, 0, 194, 0, 459,
	239, 356, 353, 497, 267, 258, 254, 237, 299, 363,
	405, 479, 399, 0, 350, 0, 0, 469, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 235, 307, 193, 390, 470,
	271, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 331, 340, 339, 320, 321, 323, 325, 330, 337,
	343, 0, 0, 0, 0, 0, 250, 303, 257, 249,
	494, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 379, 242, 0, 0,
	0, 0, 534, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 312, 189, 213, 0, 0, 389, 434, 446,
	0, 0, 0, 240, 0, 444, 403, 513, 221, 269,
	431, 409, 442, 416, 272, 0, 0, 443, 351, 499,
	425, 510, 535, 536, 248, 383, 522, 483, 530, 549,
	214, 245, 397, 476, 516, 466, 375, 495, 496, 311,
	465, 280, 192, 349, 541, 212, 452, 230, 219, 501,
	519, 274, 429, 201, 478, 508, 227, 456, 0, 0,
	551, 203, 506, 475, 371, 308, 309, 202, 0, 430,
	253, 278, 243, 392, 503, 504, 241, 552, 216, 529,
	208, 0, 528, 385, 498, 507, 372, 361, 207, 505,
	370, 360, 316, 335, 336, 265, 291, 423, 354, 424,
	292, 381, 380, 382, 196, 517, 0, 197, 0, 471,
	518, 553, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 347, 396, 422, 418, 426, 0, 493,
	511, 523, 533, 539, 540, 542, 543, 544, 545, 546,
	548, 547, 384, 295, 467, 315, 352, 0, 0, 402,
	445, 228, 515, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 362, 458, 512, 317, 329, 332, 322,
	341, 0, 342, 318, 319, 324, 326, 327, 328, 333,
	334, 338, 344, 236, 199, 368, 376, 492, 296, 204,
	205, 206, 485, 486, 487, 488, 526, 527, 531, 435,
	436, 437, 438, 277, 521, 293, 441, 440, 313, 314,
	0, 188, 209, 348, 0, 427, 273, 550, 525, 520,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 300,
	301, 304, 310, 358, 364, 365, 366, 367, 386, 387,
	388, 391, 394, 395, 398, 400, 401, 404, 408, 412,
	413, 414, 415, 417, 419, 428, 433, 447, 448, 449,
	450, 451, 454, 455, 460, 461, 462, 463, 464, 472,
	473, 477, 500, 502, 514, 532, 537, 453, 285, 286,
	420, 421, 284, 509, 538, 0, 357, 0, 0, 359,
	266, 289, 302, 0, 524, 474, 215, 439, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 306, 369,
	377, 406, 411, 281, 256, 232, 432, 229, 457, 480,
	481, 482, 484, 373, 251, 410, 0, 0, 355, 490,
	491, 298,
}

var yyPact = [...]int{
	3788, -1000, -433, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2070, 2111, -1000, -1000,
	-1000, -1000, 2271, -1000, 865, 1797, -1000, 2088, 3642, -1000,
	44796, 567, -1000, 42248, 560, 146, 28234, -1000, 210, -1000,
	197, 43522, 202, 41611, -1000, -1000, -264, 18032, 2016, 83,
	79, 44796, -1000, -1000, -1000, -1000, 2229, 1781, -1000, 390,
	-1000, -1000, -1000, -1000, -1000, -1000, 40974, -1000, -1000, -1000,
	2092, 2068, 2291, 751, 1998, -1000, 2167, 1781, -1000, 18032,
	2230, 2166, 17395, -1000, 17395, 489, -1000, -1000, 264, -1000,
	-1000, 23775, 44796, 30782, 317, -1000, 2088, -1000, -1000, -1000,
	154, -1000, 405, 1682, -1000, 1676, -1000, 677, 540, 429,
	530, 498, 427, 425, 424, 423, 422, 418, 417, 415,
	436, -1000, 776, 776, -102, -107, 3532, 605, 483, 483,
	850, 521, 2037, 2036, -1000, -1000, 776, 776, 776, 380,
	776, 776, 776, 776, 352, 350, 776, 776, 776, 776,
	776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
	776, 776, 776, 361, 2088, 309, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 44796, 329, 44796, -1000, 652, 44796, 898,
	898, 246, 898, 898, 898, 898, 206, 679, 77, -1000,
	192, 336, 204, 304, 889, 332, -1000, -1000, 295, 889,
	1282, -1000, 759, 186, -1000, 898, 898, -1000, 11637, 209,
	11637, 11637, -1000, 2083, -1000, -1000, -1000, -1000, -1000, 1286,
	-1000, -1000, -1000, -1000, -1000, 520, -1000, -1000, -1000, -1000,
	43522, 40337, 407, 805, -1000, -1000, -1000, 75, -1000, -1000,
	1476, 1055, 18032, 1022, -1000, 1203, 711, -1000, -1000, -1000,
	-1000, -1000, 672, -1000, 18669, 18669, 18669, 18669, -1000, -1000,
	1691, 1691, 1691, 1691, 18669, 1691, -1000, 1691, 1691, 1691,
	18032, 1691, 1691, 1691, 1691, -1000, 1691, 1691, 1691, 1691,
	1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691,
	1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691,
	1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691,
	1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691,
	1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691,
	1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691,
	1691, -1000, -1000, -1000, 1691, 648, 1691, 1691, 1691, 1691,
	1691, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18669,
	1691, 1691, 1691, 1691, 1691, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1691, 1691, 1691, 1691, 1691, 1691,
	1691, 1691, 1691, 1691, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 21222, -1000, 15484, 1691, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 44796, -1000, 1691, 234,
	43522, 43522, 410, 2167, 1781, -1000, 2229, 2217, 390, -1000,
	2756, 1497, 1516, 1311, 1781, 1657, 44796, -1000, 1712, -1000,
	-1000, -1000, 1931, 1235, 1281, -1000, -1000, -1000, -1000, 1724,
	18032, -1000, -1000, 2268, -1000, 20585, 642, 934, 2261, 39700,
	-1000, 489, 489, 1672, 438, 50, -1000, -1000, -1000, -1000,
	796, 27597, -1000, -1000, -1000, -1000, 1631, 44796, -1000, -1000,
	4217, 1323, -1000, 1796, -1000, 1617, -1000, 1748, 18032, 1806,
	552, 1323, 531, 529, 509, -1000, -10, -1000, -1000, -1000,
	-1000, -1000, -1000, 776, 776, 776, -1000, 435, 2227, 3642,
	7292, -1000, -1000, -1000, 39063, 1795, 1323, -1000, 1792, -1000,
	879, 595, 627, 627, 1323, -1000, -1000, 44159, 1323, 878,
	873, 1323, 1323, 43522, 43522, -1000, 38426, -1000, 37789, 37152,
	1146, 43522, 36515, 35878, 35241, 34604, 33967, -1000, 1963, -1000,
	1940, -1000, -1000, -1000, 44159, 1323, 1323, 44159, 43522, 44159,
	44796, 1323, -1000, -1000, 377, -1000, -1000, 1145, 1128, 1127,
	776, 776, 1118, 1260, 1251, 1249, 776, 776, 1110, 1248,
	29508, 1246, 303, 1103, 1102, 1101, 1154, 1243, 196, 1241,
	1151, 1149, 1092, 43522, 1788, 44796, -1000, 271, 778, 488,
	786, 2088, 2008, 1670, 511, 550, 1323, 486, 486, 43522,
	-1000, 13563, -1000, -1000, 1240, 18032, -1000, 903, 889, 889,
	-1000, -1000, -1000, -1000, -1000, -1000, 898, 44796, 903, -1000,
	-1000, -1000, 889, 898, 44796, 898, 898, 898, 898, 889,
	889, 889, 898, 44796, 44796, 44796, 44796, 44796, 44796, 44796,
	44796, 44796, 11637, 759, 898, -269, -1000, 1238, -1000, 1897,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 11637, 11637, -1000, -1000,
	-1000, -1000, 194, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -11, 1666, 33330, -1000, -273, -275, -277, -278,
	-1000, -1000, -1000, -279, -310, -1000, -1000, -1000, 18032, 18032,
	18032, 18032, -137, -1000, 892, 18669, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 222, 1060, 18669, 18669, 18669, 18669, 18669,
	18669, 18669, 18669, 18669, 18669, 18669, 18669, 18669, 18669, 18669,
	-1000, -1000, 25686, 7930, 7930, 711, 711, 711, 711, -1000,
	17395, 18032, 18032, 711, -1000, 1323, 17395, 17395, 18032, 811,
	1055, 44159, 18032, -1000, 1311, -1000, -1000, -1000, 1031, -1000,
	908, 2046, 2046, 2046, 2046, 18032, 18032, 18032, 18032, 18032,
	18032, 18032, 18032, 18032, 18032, 2046, 43522, 43522, 216, 18032,
	18032, 18032, 18032, 18032, 18032, 14205, 18032, 18032, 18032, 1311,
	18032, 18032, 18032, 18032, 18032, 18032, 18032, 18032, 18032, 18032,
	18032, 18032, 18032, 18032, 18032, 18032, 18032, 18032, 18032, 18032,
	18032, 18032, 18032, 18032, 18032, 18032, 18032, 1311, 18032, 1039,
	18032, 18032, 17395, 12921, 17395, 17395, 17395, 17395, 17395, 32693,
	-1000, -1000, -1000, -1000, -1000, 18032, 18032, 18032, 18032, 18032,
	18032, 18032, 18032, 1311, 18032, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 630, 1393, 1479, 1321, 18032, -1000, 1665,
	-1000, -70, 23138, 18032, 1237, 2260, 1833, 43522, -1000, -1000,
	-1000, 2167, -1000, 2167, 1393, 2142, 1944, 17395, -1000, -1000,
	2142, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1478,
	-1000, 44796, 1657, 2126, 43522, 1923, 1232, 419, -1000, 18032,
	18032, 1651, -1000, 1199, 44796, -1000, -137, -1000, 32056, -1000,
	-1000, 10995, -1000, 44796, 393, 44796, -1000, 22501, 31419, 228,
	50, -1000, 1569, -1000, 54, 43, 14842, 705, -1000, -1000,
	-1000, 3532, 19306, 1436, 705, 115, -1000, -1000, -1000, 1748,
	-1000, 1748, 1748, 1748, 1748, 419, 419, 419, 419, -1000,
	-1000, -1000, -1000, -1000, 1786, 1778, -1000, 1748, 1748, 1748,
	1748, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1771, 1771,
	1771, 1756, 1756, 474, -1000, 18032, 311, 30782, 2105, 1059,
	1412, 271, 491, 1823, 1323, 1323, 1323, 491, -1000, 1213,
	1208, 1202, -1000, -425, 1648, -1000, -1000, 2224, -1000, -1000,
	707, 899, 895, 806, 43522, 247, 386, -1000, 468, -1000,
	30782, 1323, 869, 627, 1323, -1000, 1323, -1000, -1000, -1000,
	-1000, -1000, 1323, -1000, -1000, 1640, -1000, 1530, 943, 893,
	928, 875, 1640, -1000, -1000, -82, 1640, -1000, 1640, -1000,
	1640, -1000, 1640, -1000, 1640, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 790, 239, -199, 43522, 247, 508,
	-1000, 505, 25686, -1000, -1000, -1000, 25686, 25686, -1000, -1000,
	-1000, -1000, 1229, 1227, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -410, 44796, -1000, 270, 783, 334, 400,
	368, 44796, 517, 2160, 2145, 2107, 313, 345, 44796, 44796,
	486, 1874, 44796, 2102, 44796, -1000, -1000, -1000, -1000, -1000,
	1055, 44796, -1000, -1000, 898, 898, -1000, -1000, 44796, 898,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 898, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 44796, -1000, -1000, -1000, -1000, 43522,
	-1000, -1000, -1000, -1000, -1000, 128, 51, 381, -1000, -1000,
	-1000, -1000, -1000, 2163, -1000, 1055, 824, 840, -1000, 1691,
	-1000, -1000, 980, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	222, 18669, 18669, 18669, 1257, 538, 1291, 1069, 1301, 997,
	997, 977, 977, 717, 717, 717, 717, 717, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1226, -1000, 1612, -1000,
	1533, 1730, 1311, 1612, 1612, 1677, 815, -1000, 18032, 1311,
	2440, -1000, -1000, 1311, 1311, 1311, 18032, -1000, -1000, 18032,
	18032, 18032, 18032, 1412, 1412, 1412, 1412, 1412, 1412, 1412,
	1412, 1412, 1412, 18032, 1639, 1636, 2259, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1124, 1412,
	1412, 1412, 1412, 1412, 18032, 1426, -1000, -1000, -1000, 2436,
	1412, 1412, -1000, 1412, 2431, 2390, 1311, 1476, 1311, 1633,
	-1000, 2372, 1412, 2351, 2317, 2274, 1717, 2212, 2190, 2158,
	1412, 1412, 1412, 1708, 2130, 2123, 2112, 2084, 2076, 2065,
	2059, 1966, 1959, 1412, -140, 1412, 1311, -1000, -1000, -1000,
	-1000, -1000, 1929, 1699, 1311, 1621, 1691, 611, -1000, -1000,
	1612, 1311, 1311, 1612, 1612, -1000, 1920, 1911, 1894, 1890,
	1873, 1866, 1412, 1412, -1000, 1412, 12921, 1311, -1000, 1321,
	44796, -1000, -256, -1000, 25, 763, 1691, -1000, 29508, 1311,
	-1000, 7888, -1000, 1152, -1000, -1000, -1000, -1000, -1000, 26960,
	1614, 2142, -1000, -1000, 1691, 1605, -1000, -1000, 419, 101,
	26323, 702, 702, 133, 1055, 1055, 18032, -1000, -1000, -1000,
	-1000, -1000, -1000, 590, 2243, 391, 1691, -1000, 1646, 2464,
	-1000, -1000, -1000, 2125, 19948, -1000, 1691, 1691, 44796, 1597,
	1593, -1000, 588, -1000, 1340, 1569, 50, 31, -1000, -1000,
	-1000, -1000, 1055, -1000, 1201, 403, 2020, -1000, 471, -1000,
	-1000, -1000, -1000, 2026, 102, -1000, -1000, -1000, 257, 419,
	-1000, -1000, -1000, -1000, -1000, -1000, 1225, 1225, -1000, -1000,
	-1000, -1000, -1000, 1041, -1000, -1000, -1000, 1030, -1000, -1000,
	1857, 1881, 311, -1000, -1000, 776, 1222, -1000, -1000, 2022,
	776, 776, 43522, -1000, -1000, 1428, 2105, 270, 44796, 820,
	1870, -1000, 1823, 1823, 1823, 44796, -1000, -1000, -1000, -1000,
	-1000, -1000, -417, 78, 375, -1000, -1000, -1000, 7260, 43522,
	1575, -1000, 252, -1000, 1400, -1000, 43522, -1000, 1567, 1768,
	1323, 1323, -1000, -1000, -1000, 43522, 1691, -1000, -1000, -1000,
	-1000, 549, 2069, 319, -1000, -1000, -161, -1000, -1000, 247,
	252, 44159, 1323, 705, -1000, -1000, -1000, -1000, -1000, -413,
	1522, 527, 255, 341, 44796, 44796, 44796, 44796, 44796, 629,
	-1000, -1000, -1000, -1000, 217, -1000, -1000, 217, -1000, -1000,
	-1000, -1000, 312, 503, -1000, 44796, 44796, 718, -1000, -1000,
	-1000, 889, -1000, -1000, 889, -1000, -1000, -1000, -1000, -1000,
	2061, 44796, 42, -332, -1000, -323, 18032, -1000, -1000, -1000,
	-1000, 1119, 537, 1291, 18669, 18669, 17395, -73, 929, 929,
	25686, -1000, -1000, -1000, 18032, 18032, 807, -1000, 18032, 1045,
	-1000, 18032, -1000, -1000, -1000, 1321, 1412, 1412, 1412, 1412,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1563, 18032, 18032, 18032, 1311, 301, -1000, -1000, -1000, -1000,
	-1000, 2251, -1000, 18032, 18032, -1000, -1000, -1000, 18032, 18032,
	-1000, -1000, 18032, 18032, -1000, 18032, 18032, 18032, -1000, 18032,
	18032, 18032, 18032, -1000, -1000, -1000, -1000, 18032, 18032, 18032,
	18032, 18032, 18032, 18032, 18032, 18032, 18032, -1000, -1000, 30782,
	125, -140, 1039, 125, 1039, -1000, 17395, 12279, -1000, -1000,
	-1000, -1000, -1000, 18032, 18032, 18032, 18032, 18032, 18032, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 763, -1000,
	627, 627, 627, 43522, -1000, -1000, -1000, -1000, 1560, -1000,
	2150, -1000, 1956, 1953, 2249, 2243, -1000, 22501, 2142, -1000,
	-1000, 43522, -251, -1000, 1992, 1988, 702, 702, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 10353, 2167, 18032, 1865, 44159,
	159, -1000, 21864, 43522, 44159, 22501, 22501, 22501, 22501, 22501,
	-1000, 1909, 1906, -1000, 1935, 1912, 2040, 44796, -1000, 1518,
	1311, 2217, 19948, 390, 18032, 24412, 1434, 22501, -1000, -1000,
	22501, 44796, 9711, -1000, -1000, 36, 35, -1000, -1000, -1000,
	-1000, 3532, -1000, -1000, 766, 2122, 2021, -1000, -1000, -1000,
	-1000, -1000, 1515, -1000, 1511, 1538, 1509, 239, -1000, 1803,
	2054, 776, 776, -1000, 1025, -1000, 1323, 1221, 1218, -1000,
	-1000, -1000, 523, -1000, 2099, 44796, 1863, 1858, 1854, -1000,
	-423, 1016, 1764, 1697, 18032, 1762, 2221, 1513, 43522, -1000,
	-1000, 44159, -1000, 235, -1000, 311, 43522, -1000, -1000, -1000,
	386, 44796, -1000, 5368, -1000, -1000, -1000, 252, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 44796, 285, -1000, 1759, 1206,
	-1000, -1000, 1812, -1000, -1000, -1000, -1000, 214, 321, 223,
	1217, 223, -1000, 44796, 621, 1881, 44796, -1000, -1000, -1000,
	898, 898, -1000, -1000, 2041, -1000, 1323, 1412, 18669, 18669,
	-1000, 711, -1000, 1691, -118, 1748, 1748, -1000, 1748, 1756,
	-1000, 1748, 190, 1748, 187, 1748, -1000, -1000, 1311, 1311,
	1683, 1550, -1000, 1055, 18032, 1861, -1000, -1000, -1000, -1000,
	-1000, -17, 1829, 1820, 1412, -1000, 1743, 1741, 18032, 1412,
	1412, 1412, 1412, -1000, 1055, 1321, 1816, 1321, 1412, 1412,
	1804, 344, 1412, 1504, 1504, 1504, 1504, 1504, 1321, 1321,
	1321, 1321, 43522, -1000, -140, -1000, -1000, -184, -185, -1000,
	1311, -140, 1535, 1311, -1000, 1663, 1637, 1799, 1610, 1412,
	1793, -1000, 2159, 2159, 2159, 1469, 1152, 44796, -1000, -1000,
	-1000, -1000, 2243, 2238, 1526, -1000, -1000, 101, 433, -1000,
	1970, 1988, -1000, 2219, 1985, 2215, -1000, -1000, -1000, -1000,
	-1000, 1055, -1000, 2090, 1453, -1000, 782, 1482, -1000, -1000,
	16758, 1496, 1951, 586, 1469, 1675, 2464, 1828, 1845, 2009,
	-1000, -1000, -1000, -1000, 1885, -1000, 1883, -1000, -1000, 1712,
	-1000, -1000, 1479, 1311, 1784, 393, 22501, 1667, 1667, -1000,
	554, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 917, 4713,
	2288, -1000, 1216, -1000, 1175, 203, 1015, -1000, -1000, 776,
	776, -1000, 858, 852, -1000, 44796, 1740, -1000, 419, 1215,
	419, 1010, -1000, 1007, -1000, -1000, -1000, -1000, 1905, 1848,
	-1000, -1000, -1000, -1000, 44796, -1000, -1000, 44796, 44796, 44796,
	1732, 2211, -1000, 18032, 1726, 780, 1770, 43522, 43522, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	507, 776, -383, 343, 326, 776, 776, 776, -424, -1000,
	-1000, 1465, 1456, -1000, -104, -1000, 18032, -1000, -1000, -1000,
	1027, 1027, -1000, 1712, -1000, -1000, -1000, 1396, -1000, -1000,
	-87, 43522, 43522, 43522, 43522, -1000, 942, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 711,
	18669, 1311, -1000, -1000, 419, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 18032, -1000, 18032, -1000, 1055, 18032,
	2167, 1214, 18032, 18032, -1000, 1004, 994, 1412, -1000, -1000,
	-1000, -1000, -1000, 18032, -1000, -1000, -1000, 18032, 269, 929,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1311, 388, -1000, -1000, -1000, -1000, 2246, -1000, 1311, 18032,
	-1000, -1000, 18032, -1000, 18032, 18032, -1000, 18032, -1000, 18032,
	1691, 1948, 1691, 1691, 24412, -1000, -1000, 2238, 2236, 2206,
	1967, 1979, 1979, 1970, -1000, 2202, 2189, -1000, 1212, 2183,
	1210, 847, -1000, 44159, 18032, 159, -1000, 431, 43522, 159,
	43522, -1000, 2213, -1000, -1000, 18032, 1720, -1000, 18032, -1000,
	-1000, -1000, -1000, -1000, -1000, 7930, 2243, 1667, -1000, -1000,
	732, -1000, 18032, -1000, -1000, -1000, 5603, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1184, 1183, -1000, -1000, 1714,
	18032, -1000, -1000, -1000, 1390, 1388, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1712, -1000, -1000, -1000, -1000, 386,
	-419, 1763, 43522, 974, -1000, 1431, 1513, 340, 159, 1181,
	776, 776, 776, 958, 955, 29508, 1418, -1000, 43522, 437,
	-1000, 386, -1000, -109, -115, 1412, -1000, -1000, 2120, -1000,
	-1000, 12279, -1000, -1000, 1706, 1818, -1000, -1000, -1000, 335,
	-1000, -1000, 1412, 1412, 1754, 1311, -1000, 1412, 1412, 1350,
	1348, -1000, 1321, 1578, -1000, 269, 1311, 1843, -1000, -1000,
	7930, -1000, -1000, 2213, 2181, 125, -1000, -1000, 287, 125,
	1055, 1506, 1412, 1440, 1435, 1412, 25049, -1000, 2174, 2172,
	30145, 30145, 763, 2236, -147, 18032, 18032, 1964, 967, -1000,
	-1000, -1000, -1000, 1174, 1158, -1000, 1157, -1000, 2283, -1000,
	1055, -1000, 159, -1000, 547, 1482, -1000, 2167, 1055, 43522,
	1055, 91, 2213, -1000, 1412, -1000, 1691, 1691, 1691, 1691,
	1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691,
	1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691,
	1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691,
	1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691,
	1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691,
	1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, -1000,
	-1000, 43522, 1692, -1000, -1000, 2118, 1399, 76, -1000, 1386,
	-1000, -1000, 155, -1000, 18032, -1000, 29508, 1150, 1121, -1000,
	-1000, -1000, -1000, -424, -1000, -1000, -1000, -1000, -1000, -1000,
	390, 1500, -1000, 775, 43522, 44796, 1311, 348, -94, -1000,
	-1000, 18032, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18032,
	-1000, 1311, 1842, -1000, -221, -1000, -397, 18032, -140, -1000,
	-1000, -140, -1000, 18032, -1000, -1000, 18032, -1000, 18032, -1000,
	1362, -1000, -1000, -1000, -1000, -1000, 1362, 1362, -1000, -147,
	-1000, 1490, -1000, 43522, 1055, 1476, -1000, 949, -1000, -1000,
	-1000, -1000, -1000, 44159, 1482, 43522, -1000, 1358, 1311, 1691,
	2167, -1000, 1354, -1000, 390, -1000, 1704, 1697, -1000, -1000,
	-1000, 16121, -1000, -1000, -1000, -1000, -1000, 179, -86, 12279,
	9069, 1327, -1000, -1000, 1917, -78, -98, 1412, 1321, -1000,
	-314, -1000, -1000, -1000, -1000, 200, -1000, -1000, 1476, -1000,
	-1000, 1403, 1344, 1267, 28871, -1000, -1000, -1000, -1000, -147,
	-1000, -1000, 2116, -1000, -1000, 1459, -1000, -1000, 24412, 42885,
	-1000, -69, 331, -86, 18032, 1695, 1311, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 55, -1000, -1000, -1000, -1000,
	-1000, 1812, -1000, 1914, -1000, -1000, -1000, -1000, 219, -361,
	-174, -176, -1000, -1000, -1000, 18032, -1000, 18032, -1000, 18032,
	-1000, -1000, -1000, 43522, 1691, -1000, 1314, -1000, 3621, -196,
	1841, -1000, -16, -1000, -1000, -1000, 900, 1047, -1000, -1000,
	-1000, -1000, -1000, -1000, 1655, 43522, -1000, 460, -1000, -1000,
	-87, -88, 829, -1000, -1000, -1000, -1000, -1000, 1211, 1185,
	1412, -1000, 43522, -1000, 42885, -190, 705, 7930, -1000, 1836,
	1821, 2258, -1000, -1000, -1000, -1000, -1000, -1000, -430, 1310,
	275, -1000, -95, 219, -1000, 18032, -1000, 18032, -1000, 1311,
	-1000, -1000, 2097, 91, -1000, 2281, -1000, 2279, 690, 690,
	-1000, 950, -430, -1000, -99, -1000, 1412, 1412, -1000, -198,
	-1000, -1000, -1000, -1000, -1000, 455, 991, -1000, -1000, -1000,
	-1000, -1000, -1000, 7930, -1000, -1000, -1000, 292, 292, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 2792, 2791, 30, 1, 44, 43, 2790, 39, 121,
	205, 31, 206, 123, 2789, 2783, 2781, 2776, 2775, 2772,
	2771, 239, 230, 228, 2768, 2766, 2761, 2760, 2753, 2751,
	2741, 2736, 2733, 2732, 247, 180, 204, 2731, 2722, 2721,
	143, 193, 100, 102, 199, 2720, 2717, 86, 2715, 2714,
	2712, 196, 189, 188, 881, 2707, 192, 136, 60, 2706,
	2704, 2700, 2698, 2685, 2684, 2682, 2681, 2676, 2675, 2674,
	2672, 2671, 2670, 2669, 2665, 2664, 299, 2663, 2661, 22,
	2660, 89, 2659, 2658, 2656, 2651, 16, 2650, 2649, 15,
	48, 2648, 2647, 77, 2635, 2634, 2633, 2632, 2631, 20,
	2629, 27, 2628, 36, 2626, 2625, 148, 2621, 2619, 2617,
	42, 2614, 2611, 2610, 2609, 2607, 2604, 2603, 159, 2602,
	2601, 2599, 191, 207, 2597, 2596, 181, 124, 128, 2595,
	2594, 109, 197, 2593, 144, 2591, 2590, 2588, 169, 2587,
	2139, 2583, 2581, 82, 79, 2580, 81, 2577, 2571, 13,
	95, 75, 7, 12, 14, 2568, 2565, 78, 107, 2564,
	131, 2563, 110, 90, 2562, 122, 105, 2561, 2559, 11,
	4, 2557, 6, 3, 8, 73, 2556, 2555, 141, 2553,
	2552, 2549, 106, 2547, 2546, 130, 2545, 103, 151, 115,
	108, 2544, 55, 80, 2542, 2541, 2540, 2538, 2535, 63,
	2525, 2524, 2520, 156, 59, 183, 2517, 47, 58, 65,
	153, 2514, 46, 92, 2512, 155, 154, 2506, 2496, 70,
	53, 50, 2493, 125, 140, 142, 41, 120, 198, 2492,
	2485, 69, 91, 2480, 2479, 2474, 2471, 182, 2470, 2469,
	85, 2468, 67, 2467, 209, 2464, 25, 61, 45, 176,
	2461, 83, 2460, 2458, 74, 139, 76, 35, 2454, 173,
	2451, 68, 179, 146, 174, 2450, 2447, 2446, 2443, 200,
	351, 2442, 2441, 84, 185, 165, 161, 101, 2439, 362,
	2437, 2427, 116, 0, 4387, 2425, 33, 175, 2420, 2418,
	5855, 157, 52, 23, 2417, 129, 2415, 2408, 2407, 2405,
	211, 187, 126, 177, 71, 2403, 2401, 2399, 19, 2397,
	2396, 2390, 2387, 2385, 2384, 96, 38, 37, 34, 232,
	104, 17, 118, 171, 88, 2382, 2380, 2379, 138, 99,
	2377, 172, 170, 147, 178, 2375, 186, 164, 135, 2373,
	93, 32, 2362, 2359, 2358, 2357, 111, 2354, 2353, 2352,
	2349, 168, 160, 145, 94, 2347, 98, 133, 167, 166,
	66, 2341, 49, 2339, 2336, 29, 195, 28, 2334, 18,
	132, 150, 2333, 4183, 190, 2332, 21, 361, 162, 2330,
	2323, 5, 10, 9, 2320, 2319, 2318, 2316, 152, 2315,
	2310, 2309, 2308, 26, 56, 24, 2, 134, 97, 2305,
	2304, 3919, 843, 149, 2272, 208,
}

//line sql.y:7705
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 399, 400, 400, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 251, 373,
	374, 374, 249, 249, 32, 71, 34, 34, 33, 33,
	36, 36, 35, 8, 8, 8, 9, 9, 9, 9,
	9, 9, 9, 9, 10, 10, 10, 10, 10, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 19, 20,
	12, 12, 21, 21, 104, 104, 22, 23, 23, 23,
	23, 403, 403, 180, 180, 178, 178, 179, 179, 254,
	254, 24, 25, 25, 264, 264, 263, 263, 263, 265,
	265, 265, 265, 303, 303, 303, 26, 26, 26, 26,
	26, 124, 124, 376, 376, 375, 369, 369, 368, 368,
	367, 372, 372, 371, 371, 370, 38, 39, 48, 48,
	48, 48, 49, 50, 377, 377, 342, 55, 55, 54,
	54, 54, 54, 54, 54, 56, 56, 52, 52, 51,
	51, 53, 53, 344, 344, 330, 330, 343, 343, 343,
	343, 343, 343, 343, 329, 329, 135, 135, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 392, 392, 392, 391, 391,
	230, 230, 230, 230, 230, 230, 230, 230, 145, 145,
	157, 157, 157, 157, 157, 143, 143, 144, 142, 142,
	142, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 156, 156, 152, 152, 152,
	153, 153, 153, 154, 154, 393, 393, 393, 393, 308,
	308, 308, 308, 311, 311, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 310, 310, 310, 310, 310, 312,
	312, 312, 312, 312, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	314, 314, 314, 314, 314, 314, 314, 314, 328, 328,
	315, 315, 323, 323, 324, 324, 324, 325, 325, 325,
	326, 326, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 322, 322, 321, 321, 321, 331, 356, 356, 355,
	355, 353, 353, 353, 353, 353, 353, 353, 353, 340,
	340, 350, 350, 350, 350, 350, 339, 339, 335, 335,
	335, 336, 336, 337, 337, 334, 334, 338, 338, 352,
	352, 351, 351, 332, 332, 333, 333, 358, 394, 394,
	394, 394, 394, 395, 395, 359, 384, 386, 386, 386,
	385, 385, 382, 383, 381, 381, 381, 381, 381, 81,
	81, 81, 277, 277, 278, 278, 348, 348, 347, 347,
	347, 349, 349, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 272, 272, 272, 380, 380, 380,
	380, 380, 380, 379, 379, 379, 345, 345, 345, 378,
	378, 57, 57, 213, 213, 397, 397, 398, 398, 398,
	45, 45, 45, 45, 45, 45, 44, 44, 44, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	46, 46, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 106, 106, 107, 107,
	107, 107, 109, 109, 109, 361, 361, 58, 58, 3,
	3, 168, 170, 171, 171, 169, 169, 169, 169, 169,
	169, 60, 60, 59, 59, 173, 172, 174, 174, 174,
	1, 1, 2, 2, 4, 4, 366, 366, 366, 366,
	366, 366, 366, 366, 366, 366, 366, 366, 366, 366,
	366, 366, 366, 366, 366, 366, 366, 366, 327, 327,
	327, 360, 360, 362, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 112, 111, 111, 110, 113, 113,
	113, 113, 113, 113, 113, 113, 364, 364, 364, 61,
	61, 365, 316, 317, 318, 5, 6, 341, 363, 120,
	120, 28, 37, 37, 29, 29, 29, 29, 30, 30,
	62, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 271, 271, 280, 280, 270, 270, 295, 295,
	295, 273, 273, 273, 274, 274, 390, 390, 390, 267,
	267, 64, 64, 64, 296, 296, 296, 296, 66, 66,
	67, 68, 68, 298, 298, 299, 299, 69, 70, 82,
	82, 82, 82, 82, 82, 105, 105, 105, 15, 15,
	15, 15, 78, 78, 78, 14, 14, 65, 65, 72,
	387, 387, 388, 389, 389, 389, 389, 73, 75, 31,
	31, 31, 31, 31, 31, 130, 130, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 125,
	125, 125, 119, 119, 404, 76, 77, 77, 123, 123,
	123, 116, 116, 116, 122, 122, 122, 16, 16, 17,
	253, 253, 18, 18, 127, 127, 129, 129, 129, 129,
	129, 131, 131, 131, 131, 131, 131, 131, 126, 126,
	128, 128, 128, 128, 288, 288, 288, 287, 287, 162,
	162, 164, 163, 163, 165, 165, 166, 166, 166, 166,
	211, 211, 188, 188, 247, 247, 246, 246, 252, 252,
	248, 248, 248, 248, 255, 255, 167, 167, 167, 167,
	175, 175, 176, 176, 177, 177, 297, 297, 293, 293,
	293, 292, 292, 181, 181, 181, 183, 182, 182, 182,
	182, 184, 184, 186, 186, 185, 185, 187, 192, 192,
	191, 191, 189, 189, 189, 189, 190, 190, 190, 190,
	193, 193, 140, 140, 140, 140, 140, 140, 140, 155,
	155, 155, 155, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 237, 237, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 149, 83, 83, 83, 84, 84, 85,
	85, 85, 85, 85, 86, 86, 86, 86, 86, 141,
	141, 88, 88, 87, 87, 206, 206, 285, 285, 89,
	90, 90, 93, 93, 92, 91, 91, 97, 97, 94,
	94, 96, 96, 95, 98, 98, 99, 100, 100, 268,
	268, 194, 194, 202, 202, 202, 202, 195, 195, 195,
	195, 195, 195, 195, 203, 203, 203, 210, 204, 204,
	200, 200, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 160, 160, 160, 160, 218, 218, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 148, 148, 161, 161, 161, 161, 305,
	305, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 405, 405, 319, 319, 319, 319, 201, 201,
	201, 201, 201, 121, 121, 121, 121, 121, 302, 302,
	302, 306, 306, 306, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 307,
	307, 216, 216, 117, 117, 214, 214, 215, 217, 217,
	212, 212, 212, 212, 197, 197, 197, 219, 219, 220,
	220, 101, 102, 102, 103, 103, 221, 221, 223, 222,
	222, 224, 225, 225, 225, 226, 226, 227, 227, 227,
	47, 47, 47, 47, 47, 42, 42, 42, 42, 43,
	43, 43, 43, 132, 132, 132, 132, 134, 134, 133,
	133, 79, 79, 80, 80, 80, 138, 138, 139, 139,
	139, 136, 136, 137, 137, 244, 244, 228, 228, 228,
	235, 235, 235, 231, 231, 233, 233, 233, 234, 234,
	234, 232, 241, 241, 243, 243, 242, 242, 238, 238,
	239, 239, 240, 240, 240, 236, 236, 196, 196, 196,
	196, 196, 245, 245, 245, 245, 256, 256, 207, 207,
	209, 209, 208, 208, 159, 257, 257, 261, 258, 258,
	262, 262, 262, 262, 250, 250, 250, 259, 259, 260,
	260, 289, 289, 289, 266, 266, 279, 279, 275, 275,
	276, 276, 269, 269, 281, 281, 281, 74, 205, 205,
	357, 357, 354, 284, 284, 286, 286, 290, 290, 294,
	294, 291, 291, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 401, 402, 300,
	301, 301, 301,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	0, 1, 1, 1, 2, 3, 2, 3, 0, 1,
	3, 1, 4, 3, 3, 4, 3, 2, 3, 4,
	3, 4, 2, 7, 1, 3, 3, 3, 3, 1,
	2, 1, 1, 3, 2, 3, 3, 2, 5, 7,
	10, 9, 7, 8, 1, 1, 10, 11, 9, 8,
	8, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 3, 3, 2, 2, 2, 1, 2,
	2, 0, 1, 0, 2, 2, 5, 0, 1, 1,
	2, 1, 3, 2, 1, 1, 3, 3, 3, 0,
	1, 4, 3, 3, 4, 2, 0, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 4, 3, 1, 3, 1, 7, 6, 7,
	7, 8, 8, 0, 1, 5, 2, 1, 1, 1,
	0, 1, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 1, 2, 0, 1, 0, 1, 1, 3,
	2, 1, 2, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 2, 0, 2, 2,
	0, 1, 5, 1, 3, 7, 1, 3, 3, 1,
	2, 2, 2, 5, 5, 5, 6, 8, 5, 5,
	4, 4, 4, 6, 5, 5, 5, 2, 2, 2,
	2, 3, 3, 3, 4, 3, 3, 1, 3, 5,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 4, 4, 2, 11, 3, 6, 8,
	6, 6, 6, 13, 8, 6, 10, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 0, 6, 5, 6,
	4, 5, 0, 8, 9, 0, 3, 0, 1, 0,
	3, 8, 4, 1, 3, 3, 6, 7, 7, 8,
	4, 0, 1, 0, 1, 3, 3, 1, 1, 2,
	1, 1, 0, 2, 0, 2, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 3, 3, 0, 2,
	2, 2, 2, 2, 2, 2, 4, 4, 3, 0,
	1, 4, 3, 4, 4, 3, 3, 3, 2, 1,
	3, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	3, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 2, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 3, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 6, 4, 7, 6, 1, 3, 2, 2, 2,
	2, 1, 1, 1, 3, 2, 1, 1, 1, 0,
	1, 1, 0, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 5, 5, 4,
	0, 2, 4, 4, 0, 1, 0, 1, 2, 3,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 3, 1,
	3, 4, 3, 7, 0, 3, 1, 3, 1, 3,
	1, 1, 3, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 3, 0, 1,
	1, 2, 6, 5, 6, 6, 0, 2, 3, 3,
	0, 2, 3, 3, 3, 2, 3, 1, 6, 3,
	4, 3, 1, 3, 4, 5, 6, 3, 4, 5,
	6, 3, 4, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 9, 7, 6, 6, 2, 2,
	1, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 0, 1, 2, 5, 0, 3, 0, 1, 4,
	4, 2, 0, 1, 1, 2, 2, 1, 1, 2,
	2, 0, 1, 1, 1, 1, 5, 1, 3, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 4, 8, 6, 8, 6, 5, 4,
	10, 2, 2, 1, 2, 2, 2, 4, 5, 5,
	5, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 8, 8, 8, 6, 5, 4, 4,
	4, 4, 4, 7, 4, 6, 6, 4, 4, 3,
	4, 6, 6, 4, 4, 4, 6, 8, 6, 4,
	6, 6, 8, 10, 7, 8, 8, 9, 4, 4,
	4, 4, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 4, 4, 6, 5, 9, 6, 9, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 6, 8,
	10, 12, 14, 6, 8, 8, 10, 12, 14, 6,
	8, 10, 12, 6, 8, 4, 4, 3, 4, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 3, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 0, 5, 5, 2, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 2, 1, 1, 0,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 1, 3, 5, 1, 2, 2, 0, 3, 0,
	2, 2, 1, 3, 0, 1, 0, 1, 3, 1,
	3, 2, 0, 1, 1, 0, 1, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 1, 0, 1, 2, 4, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 4, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 3, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -399, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -104, -33, 32, -38, -48, 222, -49, -39, 223,
	-50, 225, 224, 261, 226, 254, 74, 307, 308, 310,
	311, 312, 313, -105, 259, 260, 228, 36, 45, 33,
	34, 37, 232, 267, 268, 231, -10, -34, 8, -401,
	11, 438, 256, 255, 28, -12, 498, 86, -400, 646,
	-244, -228, 22, 33, 29, -227, -223, -123, -228, 20,
	18, 7, -76, -404, -76, -76, 12, 13, -76, -342,
	-344, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -366, -44, -41, 227, 224, 271,
	120, 121, 261, 262, 263, 226, 245, 260, 264, 259,
	280, -40, 81, 33, 498, 501, -349, 223, 229, 230,
	225, 439, 123, 122, 75, -346, 361, 531, 616, -56,
	618, 102, 104, 617, 44, 235, 619, 620, 621, 538,
	622, 244, 623, 624, 625, 626, 632, 580, 633, 634,
	635, 124, 7, -76, -294, -290, 89, -283, 495, 247,
	529, 530, 296, 81, 41, 504, 358, 361, 531, 468,
	616, 307, 321, 315, 473, 474, 475, 342, 334, 496,
	532, 505, 299, 248, 284, 610, 332, 132, 618, 302,
	533, 262, 366, 367, 534, 368, 102, 310, 405, 631,
	301, 535, 629, 104, 617, 79, 467, 51, 613, 44,
	257, 330, 231, 326, 619, 285, 536, 507, 278, 123,
	120, 638, 36, 324, 50, 30, 628, 122, 49, 620,
	147, 537, 621, 538, 370, 349, 604, 48, 371, 263,
	539, 84, 268, 500, 305, 612, 372, 487, 325, 373,
	295, 627, 228, 540, 596, 592, 593, 374, 375, 605,
	541, 350, 354, 489, 542, 397, 472, 376, 645, 52,
	543, 544, 606, 121, 545, 78, 622, 80, 319, 320,
	546, 293, 246, 492, 493, 399, 346, 450, 457, 458,
	108, 109, 453, 110, 459, 111, 460, 461, 462, 451,
	112, 105, 452, 463, 464, 347, 348, 113, 465, 107,
	106, 454, 456, 114, 466, 244, 35, 377, 497, 297,
	58, 272, 400, 46, 352, 642, 45, 600, 547, 603,
	345, 341, 447, 53, 548, 549, 550, 551, 469, 623,
	344, 318, 340, 637, 4, 290, 470, 624, 62, 230,
	356, 355, 357, 279, 396, 337, 552, 553, 554, 251,
	82, 555, 327, 21, 556, 557, 378, 286, 558, 56,
	559, 560, 403, 260, 561, 54, 625, 39, 562, 265,
	639, 626, 563, 564, 565, 566, 267, 567, 380, 568,
	594, 595, 379, 351, 353, 274, 381, 499, 569, 306,
	323, 264, 630, 570, 252, 483, 484, 485, 486, 611,
	491, 490, 266, 271, 259, 404, 253, 571, 572, 573,
	574, 575, 300, 591, 576, 577, 311, 632, 448, 43,
	578, 579, 580, 581, 582, 294, 289, 398, 407, 61,
	83, 363, 583, 584, 609, 317, 287, 585, 308, 55,
	633, 634, 635, 281, 636, 476, 477, 478, 479, 9,
	643, 644, 471, 383, 124, 291, 292, 47, 338, 273,
	586, 303, 587, 328, 329, 343, 316, 339, 309, 597,
	275, 384, 449, 261, 588, 406, 288, 359, 364, 304,
	503, 488, 280, 385, 608, 502, 480, 481, 336, 333,
	282, 482, 589, 386, 236, 276, 277, 590, 598, 387,
	388, 298, 389, 390, 391, 392, 393, 395, 394, 283,
	501, 314, 331, 365, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 446, 234, -76, 234, -185, -290, 234, -259,
	367, -280, 369, 382, 377, 387, 375, -271, 378, 380,
	274, -390, 397, 234, 384, 222, 370, 379, 388, 389,
	298, 395, 390, 394, 283, 391, 392, 393, -373, 174,
	621, 636, 132, 335, 374, 372, 398, 600, 89, -296,
	89, 90, 91, -283, 309, -298, 314, -284, -373, -283,
	312, -185, -82, 596, 226, -300, -300, -125, 600, 602,
	-204, -140, 140, -155, -158, -146, -150, -198, -199, -200,
	-201, -156, -212, -249, 163, 164, 171, 141, -210, -159,
	26, 494, 440, 439, 174, 31, -149, 68, 69, 442,
	143, 57, 11, 415, 416, -157, 410, 417, 412, 467,
	469, 470, 471, 468, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 472, 444, 445, 115, 446, 105,
	107, 106, 447, 448, 449, 489, 492, 493, 491, 490,
	347, 348, 450, 451, 452, 108, 109, 110, 111, 112,
	113, 114, 453, 456, 454, 455, 457, 458, 459, 464,
	465, 460, 461, 462, 463, 466, -85, -97, 520, 519,
	-98, -147, -148, -161, -284, -290, 239, 409, 233, 169,
	438, -151, -144, -373, -283, 90, 91, -8, -208, 217,
	408, 413, 414, 418, 411, 506, 508, 523, 524, 526,
	511, 516, 515, 518, 483, 484, 485, 486, 487, 488,
	592, 593, 594, 595, 89, -153, -152, -194, 92, 98,
	103, 99, -396, 116, -401, 614, 93, 94, 95, 96,
	97, 117, 118, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 44, 383, 383, -185, -76,
	-76, -76, -76, -221, -123, -223, -10, -8, -401, 8,
	-76, -8, -9, -13, -34, -36, 525, -35, -290, -228,
	-244, 12, 159, 42, 50, -226, -227, -12, -8, -140,
	19, 23, 24, -128, 165, -140, -290, -77, -128, -269,
	238, -76, -76, -258, -303, 309, -262, 398, 600, 397,
	-250, -260, 89, -249, -259, 396, -343, 156, -329, -333,
	-284, 249, -359, 245, -185, -352, -351, -284, -401, -124,
	-279, 235, 243, 242, 133, -377, 136, 291, 409, 233,
	-51, -52, -53, -259, 173, 620, -106, 266, 270, 87,
	87, -333, -332, -331, -378, 270, 249, -358, -350, 241,
	250, -339, 242, 243, -334, 235, 134, -378, -334, 240,
	250, 245, 249, 270, 270, 124, 270, 124, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 265, -340, 148,
	-340, 502, 502, -346, -378, 245, 235, -378, -378, 241,
	-281, -334, 237, 25, 237, 35, 35, -340, -340, -340,
	-259, 173, -340, -340, -340, -340, 278, 278, -340, -340,
	-340, -340, -340, -340, -340, -340, -340, -340, -340, -340,
	-340, -340, -340, -340, -340, 234, -377, -132, 394, 298,
	81, -54, 280, -37, -185, -279, 235, 236, -377, 267,
	-185, 218, -185, -273, 156, 15, -273, -270, 383, 381,
	368, 373, -273, -273, -273, -273, 281, 366, -335, 235,
	35, 246, 383, 281, 366, 281, 282, 281, 282, 376,
	386, 281, -295, 14, 159, 409, 371, 375, 274, 234,
	275, 236, 385, 282, -295, 93, -274, 156, 383, 277,
	-273, -273, -301, -401, -286, -284, -282, 227, 23, 139,
	25, 27, 142, 174, 127, 19, 143, 37, 229, 335,
	245, 173, 241, 439, 222, 72, 506, 410, 412, 408,
	415, 441, 442, 409, 369, 31, 13, 508, 28, 255,
	24, 38, 167, 224, 146, 509, 258, 26, 256, 115,
	118, 511, 22, 75, 250, 14, 243, 40, 16, 512,
	513, 17, 239, 238, 159, 235, 70, 11, 217, 29,
	155, 66, 514, 134, 515, 516, 517, 518, 128, 68,
	156, 20, 640, 413, 414, 33, 601, 494, 269, 169,
	73, 59, 602, 140, 411, 519, 520, 116, 521, 119,
	76, 607, 136, 18, 71, 42, 522, 270, 523, 240,
	641, 524, 401, 525, 157, 225, 438, 69, 158, 614,
	526, 615, 233, 382, 8, 443, 32, 254, 242, 126,
	67, 527, 234, 145, 444, 445, 237, 129, 117, 7,
	133, 34, 12, 74, 77, 416, 417, 418, 57, 125,
	498, 144, 15, 528, 402, 138, -373, 603, -301, -301,
	32, 90, 237, -284, -78, -284, 93, -15, -11, -22,
	-21, -23, 148, -130, 383, -118, 174, 621, 604, 605,
	606, 603, 380, 611, 609, 607, 281, 608, 87, 136,
	138, 139, 4, -140, 155, -195, 148, 149, 150, 151,
	152, 153, 154, 159, 140, 142, 156, -237, 137, 160,
	161, 162, 163, 164, 165, 166, 168, 167, 169, 170,
	157, 158, 173, 220, 221, -150, -150, -150, -150, -210,
	-401, -401, -401, -150, -268, -401, -401, -401, -401, -216,
	-140, -401, -401, -405, -401, -405, -405, -319, -401, -319,
	-401, -401, -401, -401, -401, -401, -401, -401, -401, -401,
	-401, -401, -401, -401, -401, -401, -401, -401, -401, -401,
	-401, -401, -401, -401, -401, -401, -401, -401, -401, -401,
	-401, -401, -401, -401, -401, -401, -401, -401, -401, -401,
	-401, -401, -401, -401, -401, -401, -401, -401, -401, -401,
	-401, -401, -401, -401, -401, -401, -401, -401, -401, -401,
	-401, -401, -401, 218, -401, -401, -401, -401, -401, -150,
	-319, -319, -319, -319, -319, -401, -401, -401, -401, -401,
	-401, -401, -401, -401, -401, 103, 98, 92, -212, 99,
	93, -373, -283, -290, -8, -9, -204, -401, -300, -387,
	-388, -188, -185, -401, 298, -284, -284, 267, -226, -12,
	-8, -221, -227, -223, -8, -76, -116, -129, 63, 64,
	-131, 24, 38, 67, 65, 23, -402, 88, -402, -244,
	-402, 87, -36, -247, 86, 61, 43, 93, 93, 87,
	21, -222, -224, -140, 14, -288, 4, -287, 25, -284,
	93, 218, 101, 14, -186, 29, -185, -269, -269, 87,
	309, 89, -264, -263, 399, 401, 148, -289, -284, 93,
	31, 88, 87, -185, -308, -311, -313, -312, -314, -309,
	-310, 332, 333, 174, 336, 338, 339, 340, 341, 342,
	343, 344, 345, 346, 349, 32, 257, 328, 329, 330,
	331, 350, 351, 352, 353, 354, 355, 356, 357, 315,
	334, 496, 316, 317, 318, 319, 320, 321, 323, 324,
	325, 326, 327, -374, -373, 86, 88, 87, -315, 86,
	-140, -132, 234, -373, 235, 235, 235, -76, 438, -340,
	-340, -340, 265, 19, -44, -41, -366, 18, -40, -41,
	227, 120, 121, 224, 86, -329, 86, -338, -374, -373,
	86, 134, 240, 133, -337, -334, -337, -338, -373, -212,
	-373, 134, 134, -373, -373, -255, -284, -255, -255, 23,
	-255, 23, -255, 23, 95, -284, -255, 23, -255, 23,
	-255, 23, -255, 23, -255, 23, 31, 78, 79, 80,
	31, 82, 83, 84, -212, -373, -373, -212, -329, -212,
	-185, -373, -259, 95, 95, 95, -340, -340, 95, 93,
	93, 93, -340, -340, 95, 93, -292, -290, 93, 93,
	-379, 251, 295, 297, 95, 95, 95, 95, 31, 93,
	-380, 31, 628, 627, 629, 630, 631, 93, 95, 31,
	95, 31, 95, -284, 86, -185, -138, 285, 222, 224,
	227, 76, 93, 299, 303, 304, 148, 44, 87, 237,
	234, -373, -275, 239, -275, -284, -291, -290, -282, 93,
	-140, -336, 14, 159, -295, -295, -273, -185, -336, -295,
	-273, -185, -273, -273, -273, -273, -295, -295, -295, -273,
	-290, -290, -185, -185, -185, -185, -185, -185, -185, -301,
	-274, -273, 603, 93, -267, 14, 76, -301, -301, -299,
	312, 346, 597, 598, 599, 87, 498, -178, -185, 603,
	603, 603, 603, 603, 603, -140, -140, -140, -140, 521,
	-202, 116, 140, 117, 118, -158, -203, -208, -210, 100,
	159, 142, 156, -237, -146, -150, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -302,
	-284, 93, 174, -154, -153, 99, -396, -154, -126, -128,
	-140, -140, -373, -126, -126, -140, -214, -215, 144, -212,
	-140, -402, -402, 95, 99, 165, -122, 24, 38, -122,
	-122, -122, -122, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -122, -284, -284, -115, -114, 420, 421,
	422, 423, 425, 426, 427, 430, 431, 435, 436, 419,
	437, 424, 429, 432, 433, 434, 428, 331, -140, -140,
	-140, -140, -140, -140, -83, -140, 127, 128, 129, -140,
	-140, -140, -402, -140, -140, -140, -205, -204, -372, -371,
	-370, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -402, -140, -160, -144, 95, -251,
	99, 90, -140, -140, -127, -126, -286, -291, -282, -283,
	-126, -127, -127, -126, -126, -284, -140, -140, -140, -140,
	-140, -140, -140, -140, -402, -140, 218, -244, -402, -204,
	87, -389, 401, 402, 601, -293, 270, -292, 25, -205,
	93, 14, -253, 77, -284, -226, -226, 63, 64, 59,
	-126, -131, -402, -35, 25, -246, -284, 62, 93, -320,
	-259, 358, 359, 174, -140, -140, 87, -225, 27, 28,
	-185, -287, 165, -291, -185, -254, 270, -185, -163, -165,
	-166, -167, -188, -211, -401, -168, 517, 514, 14, -178,
	-179, -187, -290, -262, -303, -264, 87, 400, 402, 403,
	76, 119, -140, -321, 173, -348, -347, -346, -329, -331,
	-332, -333, 88, -321, -325, 364, 363, -315, -315, -315,
	-315, -315, -320, -320, -320, -320, 86, 86, -315, -315,
	-315, -315, -323, 86, -323, -323, -324, 86, -324, -359,
	-140, -356, -355, -353, -354, 244, 102, 590, 546, 498,
	538, 580, 77, -351, -225, 95, -402, -138, -276, 239,
	-357, -354, -373, -373, -373, -276, 89, 93, 89, 93,
	89, 93, -107, -58, -1, 640, 641, 642, 87, 19,
	-330, -329, -57, 295, -362, -363, 270, -358, -352, -338,
	134, -337, -338, -338, -373, 87, 29, 124, 124, 124,
	124, 498, 224, 32, -277, 537, 140, 590, 546, -329,
	-57, 237, 237, -302, -302, -302, 93, 93, -272, 636,
	-178, -134, 287, 148, 276, 276, 234, 234, 289, -185,
	300, 302, 301, 299, 303, 304, 23, 23, 23, 288,
	290, 292, 278, -185, -185, -275, 76, -180, -185, 26,
	-290, -185, -273, -273, -185, -273, -273, -185, -284, -118,
	401, 87, 498, 22, -119, 22, -401, 116, 117, 118,
	-203, -146, -150, -146, 139, 258, 87, -402, 25, 87,
	77, -402, -402, -402, 87, 14, -217, -215, 146, -140,
	-402, 87, -402, -402, -402, -204, -140, -140, -140, -140,
	-402, -402, -402, -402, -402, -402, -402, -402, -402, -402,
	-204, 87, 87, 14, -306, 25, -402, -402, -402, -402,
	-402, -216, -402, 14, 87, -402, -402, -402, 87, 87,
	-402, -402, 87, 87, -402, 87, 87, 87, -402, 87,
	87, 87, 87, -402, -402, -402, -402, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 87, -402, -90, 522,
	-402, -402, 87, -402, 87, -402, -401, 218, -402, -402,
	-402, -402, -402, 87, 87, 87, 87, 87, 87, -402,
	-402, -402, -286, -402, -388, 600, 402, -192, -191, -189,
	74, 238, 75, -401, -292, -402, -154, -251, -252, -251,
	-197, -284, 95, 99, -228, -162, -164, 14, -131, -210,
	88, 87, -320, -232, -238, -270, -284, 93, 174, -322,
	174, -322, 358, 359, -224, 218, -193, 15, -196, 32,
	57, -11, -401, -401, 32, 87, -181, -183, -182, -184,
	66, 70, 72, 67, 68, 69, 73, -297, 25, -163,
	-9, -8, -401, -401, -401, -185, -178, -403, 14, 77,
	-403, 87, 218, -263, -265, 404, 401, 407, -373, 93,
	-106, 87, -346, -333, -229, -135, 40, -326, 365, -320,
	505, -320, -328, 93, -328, 95, 95, 88, -47, -42,
	-43, 33, 81, -353, -340, 93, 39, -340, -340, -284,
	88, -225, -134, -185, 140, 76, -357, -357, -357, -290,
	-2, 639, 645, 134, 86, 368, 18, -246, 87, 88,
	-213, 296, 88, -108, -284, 88, 86, -338, -338, -284,
	-401, 234, 31, 31, 590, 546, 537, -57, -213, -212,
	-373, -321, 638, 637, 88, 236, 294, -139, 415, -136,
	93, 89, -185, -185, -185, -185, -185, 227, 224, -397,
	305, -397, 279, 237, -178, -185, 87, -81, 253, 248,
	-295, -295, 33, -185, 401, 612, 610, -140, 139, 258,
	-158, -150, -128, 495, -304, 174, 332, 257, 330, 326,
	346, 337, 363, 328, 364, 325, 324, 323, -304, -302,
	-140, -140, 147, -140, 145, -140, -402, -402, -402, -402,
	-402, -221, -140, -140, -140, -402, 174, 332, 14, -140,
	-140, -140, -140, -370, -140, -204, -140, -204, -140, -140,
	-140, -140, -140, -371, -371, -371, -371, -371, -204, -204,
	-204, -204, -401, -284, -93, -92, -91, 573, 238, -90,
	-160, -93, -160, -127, -286, -140, -140, -140, -140, -140,
	-140, -189, -334, -334, -334, -255, 87, -266, 22, 14,
	57, 57, -162, -193, -163, -131, -284, -235, 596, -241,
	46, -239, -240, 47, -236, 48, 56, -322, -322, 165,
	-226, -140, -256, 76, -257, -261, -212, -207, -209, -208,
	-401, -245, -402, -284, -255, -257, -165, -166, -166, -165,
	-166, 66, 66, 66, 71, 66, 71, 66, -182, -290,
	-402, -402, -9, -9, -140, -293, 77, -163, -163, -187,
	-290, 165, 401, 405, 406, -346, -395, 116, 140, 31,
	76, 361, 102, -393, 173, 534, 585, 590, 546, 538,
	580, -394, 240, 133, 134, 252, 25, 41, 88, 87,
	88, 87, 88, 87, -278, -277, -43, -42, -340, -340,
	95, -373, 93, 93, 236, 26, -185, 76, 76, 76,
	-109, 643, 95, 86, -3, 81, -140, 86, 19, -329,
	-212, -364, -316, -365, -317, -318, -5, -6, -341, -112,
	57, 102, -61, 44, 235, 623, 624, 124, -401, 636,
	-356, -246, -360, -362, -185, -143, -401, -142, -144, -151,
	163, 164, -213, -185, -133, 285, 293, 86, -137, 90,
	-376, 77, 276, 361, 276, -398, 306, 93, -398, -185,
	-81, -47, -185, -273, -273, 33, -373, -402, -158, -150,
	-401, -307, 504, -315, -315, -315, -324, -315, 320, -315,
	320, -315, -402, -402, 87, -402, 22, -402, -140, 87,
	-117, 443, 87, 87, -402, 86, 86, -140, -402, -402,
	-402, -402, -402, 87, -402, -402, -402, 87, -305, 591,
	-402, -402, -402, -402, -402, -402, -402, -402, -402, -402,
	-89, -285, -284, -90, 555, 555, -402, -90, -218, 87,
	-402, -402, 87, -402, 87, 87, -402, 87, -402, 87,
	-190, 22, -190, -190, -402, -251, -185, -193, -219, 16,
	-232, 51, 338, -243, -242, 55, 47, -240, 19, 49,
	19, 30, -256, 87, 148, 87, -402, -402, 87, 57,
	218, -402, -193, -176, -175, 76, 77, -177, 76, -175,
	66, 66, -247, -402, -402, 87, -254, -163, -193, -193,
	218, 116, -401, -145, -157, -143, 12, 93, 93, -373,
	-392, 627, 628, 31, 95, -340, -340, 134, 134, -185,
	86, -320, 93, -320, 95, 95, 31, 82, 83, 84,
	31, 78, 79, 80, -185, -185, -185, -185, -361, 86,
	19, -140, 86, 148, 88, -246, -246, 272, 159, -340,
	621, 278, 278, -340, -340, -340, -111, -110, 643, 88,
	-402, 87, -327, 498, 501, -140, -152, -152, -247, 88,
	-369, 498, -375, -284, -284, -284, -284, 95, 97, -146,
	-402, -320, -140, -140, -140, -226, 93, -140, -140, 95,
	95, -402, -204, -140, -402, -173, -172, -174, 604, 116,
	31, -304, -402, -206, 270, -96, -95, -94, 14, -402,
	-140, -140, -140, -140, -140, -140, -401, 66, 18, 16,
	-401, -401, -293, -219, -220, 17, 19, -233, 53, -231,
	52, -231, -242, 19, 19, 93, 19, 93, 134, -261,
	-140, -209, 57, -11, -284, -207, -284, -221, -140, 86,
	-140, -154, -193, -193, -140, -199, 467, 469, 470, 471,
	468, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 472, 446, 105, 107, 106, 447, 448, 449, 489,
	492, 493, 491, 490, 347, 348, 450, 451, 452, 108,
	109, 110, 111, 112, 113, 114, 453, 456, 454, 457,
	458, 459, 464, 465, 460, 461, 462, 463, 466, 483,
	484, 485, 486, 487, 488, 592, 593, 594, 595, 93,
	93, 86, -140, 88, 88, -247, -360, -58, 88, -246,
	95, 88, 273, -208, -401, 93, -340, -340, -340, 95,
	95, -292, -402, 87, -284, -394, -362, 502, 502, -402,
	25, -368, -367, -286, 86, 77, -121, 159, 498, -402,
	-402, 87, -402, -402, -402, 88, 88, -402, -402, 87,
	-402, -172, -174, -402, 76, -154, -221, 19, -93, 295,
	297, -93, -402, 87, -402, -402, 87, -402, 87, -402,
	-248, -402, -284, 240, 19, 19, -248, -248, -192, -220,
	-103, -102, -101, 528, -140, -204, -234, 54, 76, 119,
	93, 93, 93, 12, -207, 218, -226, -246, -170, 368,
	-221, -402, -246, 88, 25, 88, 645, 134, 88, -208,
	-120, -401, 269, -292, 93, 93, -110, -113, -11, 87,
	148, -246, -185, -402, 496, 73, 499, -140, -204, -402,
	76, 509, 604, -88, -87, -84, 615, 641, -204, -90,
	-90, -140, -140, -140, 87, -402, -402, -402, -103, 87,
	-100, -99, -284, 76, 119, -257, -284, 88, -402, -401,
	-226, 88, -230, -11, 86, -3, 269, -316, -365, -317,
	-318, -5, -6, -341, -79, 498, -367, -345, -286, 93,
	95, 88, 62, 497, 500, -402, -402, -86, 142, 613,
	588, -141, -152, -149, -402, 87, -402, 87, -402, 87,
	-284, 240, -101, 87, 25, -293, -171, -169, -284, 552,
	-385, -384, 494, -395, -391, 116, 140, 102, -393, 590,
	546, 125, 126, -79, -140, 86, -402, -80, 284, 600,
	-376, 62, -86, 614, 566, 540, 566, 540, -140, -140,
	-140, -99, -401, -402, 87, 22, -308, -60, 563, -382,
	-383, 76, -386, 374, 562, 583, 116, 93, 88, -246,
	245, -369, 498, 139, -402, 87, -402, 87, -402, -89,
	-169, 559, -321, -154, -383, 76, -382, 76, 13, 12,
	-4, 644, 88, 286, 499, -86, -140, -140, -402, -59,
	26, -170, -381, 253, 248, 251, 32, -381, 95, -4,
	500, -402, -402, 563, 247, 31, 116, -154, -173, -172,
	-172,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 69, 71, 72, 834,
	834, 834, 0, 834, 0, 0, 834, -2, -2, 834,
	1429, 0, 834, 0, 0, -2, 762, 768, 0, 770,
	-2, 0, 0, 779, 1969, 1969, 829, 0, 0, 0,
	0, 0, 834, 834, 834, 834, 1286, 49, 834, 0,
	84, 85, 785, 786, 787, 64, 0, 1967, 1, 3,
	70, 74, 0, 0, 0, 57, 1295, 0, 77, 0,
	0, 838, 0, 836, 0, 1412, 834, 834, 0, 116,
	117, 0, 0, 0, -2, 120, -2, 149, 150, 151,
	0, 156, 576, 503, 555, 501, 540, -2, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 506, 379, 379, 0, 0, -2, 489, 489, 489,
	1414, 0, 0, 0, 537, 441, 379, 379, 379, 0,
	379, 379, 379, 379, 0, 0, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 1313, 155, 1430, 1427, 1428, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 0, 1406, 0, 689, 935, 0, 751,
	751, 0, 751, 751, 751, 751, 0, 0, 0, 701,
	0, 0, 0, 0, 748, 0, 717, 718, 0, 748,
	0, 724, 754, 0, 729, 751, 751, 732, 1970, 0,
	1970, 1970, 1397, 0, 745, 743, 757, 758, 39, 761,
	764, 765, 766, 767, 769, 0, 774, 777, 1423, 1424,
	0, 792, 48, 1678, 784, 797, 798, 0, 830, 831,
	44, 1078, 0, 957, 962, 973, 988, 989, 990, 991,
	992, 994, 995, 996, 0, 0, 0, 0, 1001, 1002,
	0, 0, 0, 0, 0, 1059, 1010, 0, 0, 0,
	1261, 0, 0, 1222, 1222, 1093, 1222, 1224, 1224, 1630,
	1762, 1770, 1886, 1593, 1598, 1599, 1600, 1879, 1880, 1881,
	1882, 1920, 1921, 1925, 1690, 0, 0, 0, 1966, 1725,
	1733, 1734, 1756, 1852, 1906, 1687, 1707, 1708, 1834, 1835,
	1729, 1730, 1711, 1723, 1726, 1714, 1715, 1717, 1719, 1724,
	1731, 1737, 1716, 1736, 1735, 0, 1712, 1713, 1718, 1728,
	1732, 1720, 1721, 1722, 1727, 1738, 0, 0, 0, 0,
	0, 1169, 1170, 1171, 0, 0, 0, 0, 0, 0,
	0, 275, 276, -2, -2, 42, 43, 1077, 1384, 0,
	1224, 1224, 1224, 1224, 1224, 1019, 1020, 1021, 1022, 1023,
	1047, 1048, 1054, 1055, 1829, 1830, 1831, 1832, 1671, 1915,
	1679, 1680, 1814, 1815, -2, 221, 222, 223, 224, 225,
	226, 227, 0, 217, 0, 0, 280, 281, 277, 278,
	279, 1061, 1062, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 1969, 0, 807, 0, 0,
	0, 0, 0, 1295, 0, 1287, 1286, 62, 0, 834,
	-2, 0, 0, 0, 0, 46, 0, 51, 894, 76,
	75, 1335, 0, 0, 0, 58, 1296, 66, 68, 1297,
	0, 839, 840, 0, 870, 874, 0, 835, 0, 0,
	1413, 1412, 1412, 101, 0, 0, 1388, 113, 114, 115,
	0, 0, 1394, 1395, 1399, 1400, 0, 0, 167, 168,
	0, 40, 406, 0, 163, 0, 399, 340, 0, 1313,
	0, 0, 0, 0, 0, 834, 0, 1407, 144, 145,
	152, 153, 154, 379, 379, 379, 552, 0, 0, 155,
	155, 510, 511, 512, 0, 0, -2, 404, 0, 490,
	0, 0, 393, 393, 397, 395, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 380,
	0, 550, 551, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 1416, 0, 527, 528, 0, 0, 0,
	379, 379, 0, 0, 0, 0, 379, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 1326, 0, 0,
	0, -2, 0, 681, 0, 0, 0, 1408, 1408, 0,
	688, 0, 690, 691, 0, 0, 692, 0, 748, 748,
	746, 747, 694, 695, 696, 697, 751, 0, 0, 388,
	389, 390, 748, 751, 0, 751, 751, 751, 751, 748,
	748, 748, 751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 754, 751, 0, 725, 0, 726, 727,
	730, 731, 733, 1971, 1972, 1425, 1426, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1970, 1970, 737, 741,
	1398, 763, 775, 778, 795, 793, 794, 796, 788, 789,
	790, 791, 0, 809, 810, 815, 0, 0, 0, 0,
	821, 822, 823, 0, 0, 826, 827, 828, 0, 0,
	0, 0, 0, 955, 0, 0, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	974, 975, 0, 0, 0, 997, 998, 999, 1000, 1003,
	0, 0, 0, 1008, 1009, 0, 0, 0, 0, 0,
	1262, 0, 0, 1091, 0, 1092, 1094, 1095, 0, 1096,
	844, 844, 844, 844, 844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1418, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 854, 0, 0, 854, 854, 0, 0, 0,
	210, 211, 212, 213, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 229, 230, 231, 232,
	282, 1270, -2, 0, 1077, 0, 0, 0, 45, 799,
	800, 0, 918, 1418, 0, 0, 850, 0, 56, 65,
	67, 1295, 60, 1295, 0, 856, 0, 0, -2, -2,
	857, 863, 864, 865, 866, 867, 53, 1968, 54, 0,
	73, 0, 47, 0, 0, 0, 0, 352, 1338, 0,
	0, 1288, 1289, 1292, 0, 871, 1768, 875, 0, 877,
	878, 0, 837, 0, 99, 0, 934, 0, 0, 0,
	0, 1396, 103, 104, 0, 0, 0, 363, 1401, 1402,
	1403, -2, 386, 0, 363, 347, 290, 291, 292, 340,
	294, 340, 340, 340, 340, 352, 352, 352, 352, 323,
	324, 325, 326, 327, 0, 0, 309, 340, 340, 340,
	340, 330, 331, 332, 333, 334, 335, 336, 337, 295,
	296, 297, 298, 299, 300, 301, 302, 303, 342, 342,
	342, 344, 344, 0, 41, 0, 367, 0, 1292, 0,
	0, 1326, 1410, 1420, 0, 0, 0, 1410, 122, 0,
	0, 0, 553, 587, 504, 541, 554, 0, 507, 508,
	-2, 0, 0, 489, 0, 491, 0, 387, 0, -2,
	0, 397, 0, 393, 397, 394, 397, 385, 398, 531,
	532, 533, 0, 535, 536, 617, 904, 0, 0, 0,
	0, 0, 623, 624, 625, 0, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 542, 543, 544, 545,
	546, 547, 548, 549, 0, 0, 0, 0, 491, 0,
	538, 0, 0, 443, 444, 445, 0, 0, 448, 449,
	450, 451, 0, 0, 454, 455, 456, 921, 922, 457,
	458, 483, 484, 485, 459, 460, 461, 462, 463, 464,
	465, 477, 478, 479, 480, 481, 482, 466, 467, 468,
	469, 470, 471, 474, 0, 137, 1317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1408, 0, 0, 0, 0, 853, 936, 1431, 1432, 752,
	753, 0, 391, 392, 751, 751, 698, 738, 0, 751,
	702, 739, 703, 705, 704, 706, 719, 720, 751, 709,
	749, 750, 710, 711, 712, 713, 714, 715, 716, 734,
	721, 722, 723, 755, 0, 759, 760, 735, 736, 0,
	776, 780, 781, 782, 783, 0, 0, 812, 95, 817,
	818, 819, 820, 832, 825, 1079, 952, 953, 954, 0,
	956, 959, 0, 1063, 1065, 961, 963, 1074, 1075, 1076,
	0, 0, 0, 0, 0, 967, 971, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 993,
	1238, 1239, 1240, 1011, 283, 284, 0, 1012, 0, 868,
	0, 0, 0, 0, 0, 0, 1268, 1265, 0, 0,
	0, 1223, 1225, 0, 0, 0, 0, 845, 846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1201, 1202, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1241, 0,
	0, 0, 0, 0, 1261, 0, 1014, 1015, 1016, 0,
	0, 0, 1129, 0, 0, 0, 0, 1419, 0, 132,
	133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1172, 1173, 1174,
	1175, 38, 0, 0, 0, 855, 1272, 0, -2, -2,
	0, 0, 0, 0, 0, 1013, 0, 0, 0, 0,
	0, 0, 0, 0, 1197, 0, 0, 0, 1382, 0,
	0, 802, 803, 805, 0, 938, 0, 919, 0, 0,
	808, 0, 849, 0, 852, 59, 61, 861, 862, 0,
	879, 858, 55, 50, 0, 0, 896, 1336, 352, 1358,
	0, 361, 361, 358, 1298, 1299, 0, 1291, 1293, 1294,
	78, 876, 872, 0, 950, 0, 0, 933, 0, 882,
	884, 885, 886, 916, 0, 889, 0, 0, 0, 0,
	0, 97, 935, 1389, 0, 102, 0, 0, 107, 108,
	1390, 1391, 1392, 1393, 0, 576, -2, 438, 169, 171,
	172, 173, 164, -2, 350, 348, 349, 293, 352, 352,
	317, 318, 319, 320, 321, 322, 0, 0, 310, 311,
	312, 313, 304, 0, 305, 306, 307, 0, 308, 405,
	0, 1300, 368, 369, 371, 379, 0, 374, 375, 0,
	379, 379, 0, 400, 401, 0, 1292, 1317, 0, 0,
	0, 1421, 1420, 1420, 1420, 0, 157, 158, 159, 160,
	161, 162, 612, 0, 0, 588, 610, 611, 155, 0,
	0, 165, 493, 492, 0, 644, 0, 403, 0, 0,
	397, 397, 382, 383, 534, 0, 0, 619, 620, 621,
	622, 0, 0, 0, 520, 432, 0, 521, 522, 491,
	493, 0, 0, 363, 446, 447, 452, 453, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	567, 568, 569, 570, 495, 574, 571, 495, 575, 1314,
	1315, 1316, 0, 0, 682, 0, 0, 429, 93, 1409,
	687, 748, 708, 740, 748, 700, 707, 728, 772, 816,
	0, 0, 0, 0, 824, 0, 0, 960, 1064, 1066,
	964, 0, 968, 972, 0, 0, 0, 0, 0, 0,
	0, 1060, 1082, 1083, 0, 0, 0, 1266, 0, 0,
	1089, 0, 1226, 1227, 1097, 0, 0, 0, 0, 0,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1286, 0, 0, 0, 0, 0, 1118, 1119, 1120, 1121,
	1122, 0, 1124, 0, 0, 1127, 1128, 1130, 0, 0,
	1133, 1134, 0, 0, 1135, 0, 0, 0, 1139, 0,
	0, 0, 0, 1148, 1149, 1150, 1151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1162, 1163, 0,
	1042, 0, 0, 1042, 0, 1080, 854, 0, 1228, 1229,
	1230, 1231, 1232, 0, 0, 0, 0, 0, 0, 1195,
	1196, 1198, 1272, 1383, 801, 804, 806, 892, 939, 940,
	0, 0, 0, 0, 920, 1417, 847, 848, 851, 898,
	0, 1274, 0, 0, 879, 950, 880, 0, 859, 52,
	895, 0, 1340, 1339, 1352, 1365, 361, 361, 355, 356,
	362, 357, 359, 360, 1290, 0, 1295, 0, 1376, 0,
	0, 1368, 0, 0, 0, 0, 0, 0, 0, 0,
	923, 0, 0, 926, 0, 0, 0, 0, 917, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 91, 92,
	0, 0, 0, 105, 106, 0, 0, 112, 364, 365,
	146, 155, 440, 170, 413, 0, 0, 289, 351, 314,
	315, 316, 0, 338, 0, 0, 0, 434, 118, 1304,
	1303, 379, 379, 370, 0, 373, 0, 0, 0, 1422,
	341, 402, 0, 136, 0, 0, 0, 0, 0, 142,
	582, 0, 0, 589, 0, 0, 0, 502, 0, 513,
	514, 0, 616, -2, 678, 367, 0, 381, 384, 905,
	0, 0, 515, 0, 518, 519, 433, 493, 524, 525,
	539, 526, 475, 476, 473, 0, 0, 1327, 1328, 1333,
	1331, 1332, 123, 560, 562, 561, 565, 0, 0, 497,
	0, 497, 558, 0, 429, 1300, 0, 686, 430, 431,
	751, 751, 811, 96, 0, 814, 0, 0, 0, 0,
	965, 969, 869, 0, 1259, 340, 340, 1246, 340, 344,
	1249, 340, 1251, 340, 1254, 340, 1257, 1258, 0, 0,
	0, 0, 1088, 1269, 0, 0, 1098, 1099, 1100, 1101,
	1102, 1263, 0, 0, 0, 1117, 0, 0, 0, 0,
	0, 0, 0, 134, 135, 0, 0, 0, 0, 0,
	0, 1199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1037, 1041, 0, 1043, 1044, 0, 0, 1165,
	0, 0, 1176, 0, 1273, 0, 0, 0, 0, 0,
	0, 941, 946, 946, 946, 0, 0, 0, 1404, 1405,
	1275, 1276, 950, 1277, 881, 860, 897, 1358, 0, 1351,
	0, -2, 1360, 0, 0, 0, 1366, 353, 354, 873,
	79, 951, 82, 0, 1376, 1385, 0, 1367, 1378, 1380,
	0, 0, 0, 1372, 0, 950, 883, 912, 914, 0,
	909, 924, 925, 927, 0, 929, 0, 931, 932, 894,
	888, 890, 0, 0, 0, 99, 0, 950, 950, 98,
	0, 937, 109, 110, 111, 439, 174, 179, 0, 0,
	0, 184, 0, 186, 0, 0, 0, 191, 192, 379,
	379, 414, 0, 286, 288, 0, 0, 177, 352, 0,
	352, 0, 345, 0, 415, 435, 1301, 1302, 0, 0,
	372, 376, 377, 378, 0, 1411, 138, 0, 0, 0,
	585, 0, 613, 0, 0, 0, 0, 0, 0, 166,
	494, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	0, 379, 0, 0, 0, 379, 379, 379, 0, 670,
	366, 0, 0, 641, 638, 516, 0, 215, 216, 218,
	0, 0, 523, 894, 1318, 1319, 1320, 0, 1330, 1334,
	126, 0, 0, 0, 0, 572, 0, 496, 573, 683,
	684, 685, 94, 693, 699, 813, 833, 958, 966, 970,
	0, 0, 1260, 1244, 352, 1247, 1248, 1250, 1252, 1253,
	1255, 1256, 1006, 1007, 0, 1085, 0, 1087, 1267, 0,
	1295, 0, 0, 0, 1116, 0, 0, 0, 1125, 1126,
	1131, 1132, 1136, 0, 1138, 1140, 1141, 0, 0, 0,
	1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161,
	0, 1035, 1038, 1164, 1045, 1046, 1051, 1167, 0, 0,
	1081, 1178, 0, 1183, 0, 0, 1189, 0, 1193, 0,
	0, 0, 0, 0, 918, 899, 63, 1277, 1279, 0,
	1345, 1343, 1343, 1353, 1354, 0, 0, 1361, 0, 0,
	0, 0, 83, 0, 0, 0, 1381, 0, 0, 0,
	0, 100, 1286, 906, 913, 0, 0, 907, 0, 908,
	928, 930, 887, -2, 891, 0, 950, 950, 89, 90,
	0, 180, 0, 182, 208, 209, 0, 185, 187, 188,
	189, 195, 196, 197, 190, 0, 0, 285, 287, 0,
	0, 328, 339, 329, 0, 0, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 894, 139, 140, 141, 577, 0,
	587, 0, 0, 0, 580, 0, 505, 0, 0, 0,
	379, 379, 379, 0, 0, 0, 0, 655, 0, 0,
	618, 0, 626, 0, 0, 0, 219, 220, 0, 1329,
	559, 0, 124, 125, 0, 0, 564, 498, 499, 1233,
	1005, 1245, 0, 0, 0, 0, 1264, 0, 0, 0,
	0, 1123, 0, 0, 1144, 0, 0, 0, 607, 608,
	0, 1200, 1040, 1286, 0, 1042, 1052, 1053, 0, 1042,
	1177, 0, 0, 0, 0, 0, 0, 947, 0, 0,
	0, 0, 938, 1279, 1284, 0, 0, 1348, 0, 1341,
	1344, 1342, 1355, 0, 0, 1362, 0, 1364, 0, 1386,
	1387, 1379, 0, 1371, 1374, 1370, 1373, 1295, 910, 0,
	915, 0, 1286, 88, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 343, 346, 0, 0, 0, 578, 0,
	590, 581, 0, 668, 0, 672, 0, 0, 0, 675,
	676, 677, 654, 0, 658, 407, 642, 639, 640, 517,
	0, 127, 128, 0, 0, 0, 0, 0, 0, 1084,
	1086, 0, 1113, 1114, 1115, 1242, 1243, 1137, 1142, 0,
	1145, 0, 0, 1146, 0, 609, 1031, 0, 0, 1049,
	1050, 0, 1179, 0, 1184, 1185, 0, 1190, 0, 1194,
	0, 943, 900, 901, 948, 949, 0, 0, 893, 1284,
	81, 1285, 1282, 0, 1280, 1278, 1337, 0, 1346, 1347,
	1356, 1357, 1363, 0, 1369, 0, 86, 0, 0, 0,
	1295, 181, 0, 200, 0, 586, 0, 589, 579, 666,
	667, 0, 679, 671, 673, 674, 656, -2, 1321, 0,
	0, 0, 566, 1004, 0, 0, 0, 0, 0, 1147,
	0, 605, 606, 1039, 1032, 0, 1017, 1018, 1036, 1166,
	1168, 0, 0, 0, 0, 942, 944, 945, 80, 0,
	1281, 1057, 0, 1349, 1350, 1377, 1375, 911, 918, 0,
	87, 420, 413, 1321, 0, 0, 0, 659, 660, 661,
	662, 663, 664, 665, 556, 1323, 129, 130, 486, 487,
	488, 123, 1234, 0, 1237, 1090, 1143, 1033, 0, 0,
	0, 0, 1029, 1030, 1180, 0, 1186, 0, 1191, 0,
	902, 903, 1283, 0, 0, 591, 0, 593, 0, -2,
	408, 421, 0, 175, 201, 202, 0, 0, 205, 206,
	207, 198, 199, 119, 0, 0, 680, 0, 1324, 1325,
	126, 1235, 0, 1024, 1025, 1026, 1027, 1028, 0, 0,
	0, 1058, 1037, 592, 0, 0, 363, 0, 602, 409,
	410, 0, 416, 417, 418, 419, 203, 204, 614, 0,
	0, 563, 0, 0, 1181, 0, 1187, 0, 1192, 0,
	594, 595, 603, 0, 411, 0, 412, 0, 0, 0,
	583, 0, 614, 1322, 0, 1034, 0, 0, 1056, 0,
	604, 600, 422, 424, 425, 0, 0, 423, 615, 584,
	1236, 1182, 1188, 0, 426, 427, 428, 596, 597, 598,
	599,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 168, 160, 3,
	86, 88, 165, 163, 87, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 646,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:579
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:584
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:585
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:589
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:625
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:631
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:637
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:642
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:646
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:652
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:656
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:662
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:668
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:674
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:678
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:687
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:693
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:697
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:703
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:709
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:713
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:717
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:751
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:757
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:777
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:787
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:791
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:799
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:803
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:809
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:818
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:822
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:828
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:832
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:837
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:843
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:849
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:856
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:862
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:870
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:874
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:880
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:892
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:904
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:908
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:914
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:924
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:928
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:932
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:937
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:938
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:942
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:946
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:952
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:956
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:962
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:966
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:971
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:975
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:981
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:987
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:991
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: NoScope}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:997
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1001
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1007
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1011
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1015
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1021
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1025
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1029
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1033
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1039
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1043
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1047
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1053
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1059
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1066
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1075
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1079
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1086
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1090
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1095
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1105
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1110
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1115
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1121
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1126
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1132
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1141
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1147
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1157
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1163
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1170
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1177
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1182
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1187
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1192
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1199
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1206
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1217
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1224
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1228
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1234
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1238
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1242
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1246
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1250
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1254
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1260
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1264
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1270
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1274
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1280
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1284
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1290
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1294
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1300
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1304
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1310
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1314
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1320
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1325
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1330
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1334
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1339
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1343
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1347
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1358
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1367
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1376
		{
			yyVAL.str = ""
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1380
		{
			yyVAL.str = ""
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1393
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1399
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1405
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1410
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1415
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1420
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1425
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1430
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1435
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1439
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1444
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1448
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1453
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1459
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1465
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1469
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1475
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1479
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1483
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1489
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1493
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1498
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1502
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1507
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1513
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1519
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1524
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1529
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1535
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1543
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1550
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1554
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1558
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1562
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1566
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1576
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1583
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1587
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1593
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1597
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1601
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1605
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1609
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1613
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1622
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1626
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1630
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1634
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1638
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = Armscii8Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = ASCIIStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = Big5Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = UBinaryStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = Cp1250Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.str = Cp1251Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.str = Cp1256Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.str = Cp1257Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.str = Cp850Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.str = Cp852Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.str = Cp866Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.str = Cp932Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.str = Dec8Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.str = EucjpmsStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.str = EuckrStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1705
		{
			yyVAL.str = Gb18030Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1709
		{
			yyVAL.str = Gb2312Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1713
		{
			yyVAL.str = GbkStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.str = Geostd8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1721
		{
			yyVAL.str = GreekStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.str = HebrewStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1729
		{
			yyVAL.str = Hp8Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1733
		{
			yyVAL.str = Keybcs2Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.str = Koi8rStr
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = Koi8uStr
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = Latin1Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = Latin2Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.str = Latin5Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.str = Latin7Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.str = MacceStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.str = MacromanStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = SjisStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = Swe7Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = Tis620Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = Ucs2Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = UjisStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = Utf16Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = Utf16leStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = Utf32Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = Utf8Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = Utf8mb4Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = Utf8Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1819
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1823
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1827
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1833
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1837
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1841
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1847
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1851
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1858
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1862
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1866
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1870
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1876
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1930
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1942
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1954
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1960
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1976
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1980
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1984
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1994
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2040
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2059
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2063
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2079
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2087
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2098
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2103
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2107
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2112
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2116
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2124
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2128
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2134
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2142
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2146
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2150
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2155
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2159
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2180
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2185
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2195
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2200
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2206
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2210
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2215
		{
			yyVAL.str = ""
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2219
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2223
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2229
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2238
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2244
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2248
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2254
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2258
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2263
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2267
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2271
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2275
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2279
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2283
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2289
		{
			yyVAL.str = ""
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2293
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2299
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2303
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2307
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2311
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2315
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2320
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2324
		{
			yyVAL.str = yyDollar[2].str
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2330
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2334
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2338
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2344
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2348
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2353
		{
			yyVAL.str = "key"
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2357
		{
			yyVAL.str = yyDollar[1].str
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2363
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2367
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2372
		{
			yyVAL.str = ""
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2376
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2382
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2386
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2392
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2396
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2402
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2406
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2412
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2416
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2422
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2428
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2432
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2436
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2440
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2444
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2449
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2453
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2459
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2465
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2471
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2475
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2479
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2484
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2488
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2494
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2500
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2506
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2510
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2514
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2518
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2522
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2527
		{
			yyVAL.str = ""
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2531
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2535
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2541
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2545
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2550
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2554
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2559
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2563
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2569
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2573
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2577
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2583
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2587
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2593
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2597
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2601
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2605
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2609
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2613
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2617
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2621
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2625
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2629
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2633
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2637
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2641
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2645
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2649
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2653
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2657
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2661
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2665
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2669
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2673
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2677
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2681
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2685
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2689
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2693
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2697
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2701
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2705
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2709
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2713
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2718
		{
			yyVAL.str = ""
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2722
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2726
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2745
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2749
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2753
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2758
		{
			yyVAL.str = ""
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2764
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2768
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2773
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2777
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2782
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2786
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2791
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2795
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2799
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2804
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2808
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2812
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2816
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2820
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 505:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2824
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2830
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2834
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2838
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2844
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2848
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2852
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2856
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2860
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2864
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2868
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2872
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2876
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2880
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2885
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2890
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2894
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2898
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2902
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2906
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2910
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2914
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2918
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2922
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2926
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2930
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2934
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2938
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2942
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2946
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2950
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2954
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2958
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2962
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2966
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2972
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2976
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2982
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2986
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2990
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2994
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2998
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3002
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3006
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3010
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3014
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3018
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3024
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3031
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3038
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3045
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3051
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3061
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3068
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3075
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3087
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3097
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3101
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3105
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3118
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3128
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3132
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3143
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3150
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3157
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3164
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3171
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3194
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3201
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3208
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3212
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3221
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3229
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3238
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3245
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3257
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3266
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3281
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3286
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3290
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3295
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3299
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3305
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3311
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3317
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3321
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3327
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3331
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3337
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3343
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3349
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3355
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3361
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3365
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3369
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3373
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3379
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3385
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3391
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3395
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3399
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3405
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3409
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3414
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3418
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3423
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3427
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3433
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3437
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3441
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3445
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3449
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3453
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3457
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3461
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3465
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3469
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3473
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3477
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3481
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3485
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3489
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3493
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3497
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3501
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3505
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3509
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3513
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3517
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3522
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3526
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3530
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3536
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3540
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3546
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3551
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3555
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3560
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3565
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3570
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3575
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3580
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3586
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3592
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3597
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3603
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3609
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3613
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3619
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3624
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3628
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3633
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3638
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3643
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3648
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3654
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3660
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3667
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3674
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3681
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3689
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3693
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3699
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3705
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3711
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3717
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3723
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3729
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3735
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3741
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3747
		{
			yyVAL.str = ""
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3751
		{
			yyVAL.str = ""
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3757
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3763
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3767
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 684:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3773
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3777
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3786
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3790
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3796
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3800
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3806
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3812
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3816
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3820
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3824
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3828
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3832
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3836
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3844
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3848
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3852
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3856
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3860
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3864
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3868
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3876
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3880
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3884
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3888
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3892
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3896
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3900
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3904
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3920
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3960
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3968
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3995
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3999
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4007
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4011
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4015
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4021
		{
			yyVAL.str = ""
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4025
		{
			yyVAL.str = "extended "
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4031
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4035
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4041
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4045
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4051
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4055
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4059
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4069
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4073
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4079
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4083
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4089
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4093
		{
			yyVAL.empty = struct{}{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.empty = struct{}{}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4103
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4107
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4128
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4132
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4136
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4140
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4147
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4151
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4172
		{
			yyVAL.empty = struct{}{}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4174
		{
			yyVAL.empty = struct{}{}
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4177
		{
			yyVAL.empty = struct{}{}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4179
		{
			yyVAL.empty = struct{}{}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4183
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4189
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4194
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4198
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4202
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4206
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4210
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4214
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4220
		{
			yyVAL.str = yyDollar[1].str
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4224
		{
			yyVAL.str = yyDollar[1].str
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.str = yyDollar[1].str
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4234
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4238
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4242
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4246
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4251
		{
			yyVAL.str = ""
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4255
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4259
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4265
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4269
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4275
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4279
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4285
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4291
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4295
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4301
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4307
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4311
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4315
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4319
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4325
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4331
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4337
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4341
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4345
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4349
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4353
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4357
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4363
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4367
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4373
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4377
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4381
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4385
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4389
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4393
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4401
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4405
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4409
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4413
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4417
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4422
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4426
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4430
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4435
		{
			yyVAL.str = ""
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4439
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4444
		{
			setAllowComments(yylex, true)
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4448
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4454
		{
			yyVAL.strs = nil
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4458
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4464
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4468
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4472
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4477
		{
			yyVAL.str = ""
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4481
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4485
		{
			yyVAL.str = SQLCacheStr
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4490
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4494
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4498
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4504
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4508
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4518
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4523
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4527
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4533
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4537
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4542
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4546
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4551
		{
			yyVAL.strs = nil
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4555
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4559
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4563
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4567
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4573
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4577
		{
			yyVAL.str = SQLCacheStr
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4581
		{
			yyVAL.str = DistinctStr
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4585
		{
			yyVAL.str = DistinctStr
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4589
		{
			yyVAL.str = StraightJoinHint
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4593
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4597
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4603
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4607
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4613
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4617
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4621
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4625
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4630
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4634
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4638
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4645
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4650
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4654
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4660
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4666
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4670
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4680
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4684
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4688
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4692
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4698
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4702
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4708
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4712
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4717
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4721
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4727
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4731
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4737
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4741
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4747
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4751
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4755
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4759
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4765
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4769
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4782
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4786
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4790
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4794
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4800
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4802
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4806
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4808
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4812
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4814
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4817
		{
			yyVAL.empty = struct{}{}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4819
		{
			yyVAL.empty = struct{}{}
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4822
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4826
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4830
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4837
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4843
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4847
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4851
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4857
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4863
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4867
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4871
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4875
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4881
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4885
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4895
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4899
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4905
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4909
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4915
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4920
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4924
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4930
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4934
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 942:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4940
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4944
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4948
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4952
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4957
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4961
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4965
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4969
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4975
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4979
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4986
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4990
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4994
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4998
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5002
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5006
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5010
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5016
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5020
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5024
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5028
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5042
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5046
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5050
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5054
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5058
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5062
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5066
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5070
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5074
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5083
		{
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5089
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5093
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5097
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5101
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5105
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5109
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5113
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5117
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5121
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5125
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5129
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5133
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5137
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5143
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5147
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5151
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5155
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5159
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5163
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5167
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5171
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5175
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5179
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5183
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5187
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5191
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5195
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5199
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5203
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5207
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5211
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5215
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5219
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5227
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5231
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5239
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5243
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5249
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5255
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5259
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5263
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5269
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5273
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5280
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5284
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5288
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5292
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5296
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5302
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5306
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5310
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5314
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5318
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5333
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5337
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5343
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5347
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5352
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5356
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5361
		{
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5364
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5370
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5376
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5380
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5385
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5392
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5398
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5402
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5408
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5412
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5418
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5422
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5427
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5434
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5440
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5444
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5450
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5456
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5460
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5466
		{
			yyVAL.str = ""
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5470
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5476
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5480
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5487
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5491
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5495
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5499
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5505
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5509
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5513
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5517
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5521
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5525
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5529
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5535
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5539
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5543
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5550
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5556
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5560
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5570
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5574
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5584
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5588
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5592
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5596
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5600
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5604
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5608
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5612
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5616
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5620
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5631
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5635
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5641
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5645
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5650
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5654
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5658
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5662
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5666
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5670
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5674
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5678
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5682
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5686
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5690
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5694
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5698
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5702
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5706
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5710
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5714
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5718
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5722
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5726
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5730
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5734
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5738
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5742
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5746
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5750
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5754
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5758
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5762
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5766
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5770
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5774
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5778
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5782
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5786
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5790
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5794
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5798
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5802
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5806
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5810
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5814
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5818
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5822
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5826
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5830
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5834
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5838
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5842
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5846
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5890
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5894
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5898
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5902
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5906
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5910
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5914
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5922
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5926
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5930
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5934
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5938
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5947
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5951
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5955
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5959
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5965
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5969
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5975
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5979
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5983
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5987
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5991
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5996
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6000
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6004
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6008
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6012
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6016
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6021
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6025
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6029
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6033
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6040
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6044
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6058
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6062
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6071
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6077
		{
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6079
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6083
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6087
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6091
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6095
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6099
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6103
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6107
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6111
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6115
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6119
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6125
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6129
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6133
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6137
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6141
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6145
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6149
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6153
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6157
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6167
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6171
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6175
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6179
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6198
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6202
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6206
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6212
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6216
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6220
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6224
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6228
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6234
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6238
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6242
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1241:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6252
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6256
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6262
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6266
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6270
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6274
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6278
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6284
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6288
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6292
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6296
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6300
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6304
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6308
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6312
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6316
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6320
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6326
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6330
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6335
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6339
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6344
		{
			yyVAL.str = string("")
		}
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6348
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6354
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6358
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6364
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6369
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6373
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6379
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6383
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6387
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6391
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6397
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6406
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6410
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6416
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6420
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6425
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6429
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6435
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6441
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6445
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6450
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6454
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6459
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6463
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6469
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6475
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6479
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6485
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6490
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6494
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6498
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6503
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6507
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6513
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6517
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6521
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6526
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6530
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6534
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6538
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6542
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6549
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6553
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6557
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6561
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6567
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6571
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6575
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6579
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6584
		{
			yyVAL.str = ""
		}
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6588
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6592
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6596
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6601
		{
			yyVAL.str = ""
		}
	case 1318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6605
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6611
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6615
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6620
		{
			yyVAL.str = ""
		}
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6624
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6629
		{
			yyVAL.str = "cascaded"
		}
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6633
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6637
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6642
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6646
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6652
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6658
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6664
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6673
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6677
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6682
		{
			yyVAL.str = ""
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6686
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6692
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6696
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6702
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6706
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6710
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6715
		{
			yyVAL.str = ""
		}
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6719
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6723
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6728
		{
			yyVAL.str = ""
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6732
		{
			yyVAL.str = " header"
		}
	case 1345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6737
		{
			yyVAL.str = ""
		}
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6741
		{
			yyVAL.str = " manifest on"
		}
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6745
		{
			yyVAL.str = " manifest off"
		}
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6750
		{
			yyVAL.str = ""
		}
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6754
		{
			yyVAL.str = " overwrite on"
		}
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6758
		{
			yyVAL.str = " overwrite off"
		}
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6764
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6769
		{
			yyVAL.str = ""
		}
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6773
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6779
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6783
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6789
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6793
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6798
		{
			yyVAL.str = ""
		}
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6802
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6808
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6812
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6818
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6822
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6826
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6831
		{
			yyVAL.str = ""
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6835
		{
			yyVAL.str = " optionally"
		}
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6848
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6852
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6856
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6860
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6864
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6870
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6874
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6878
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1375:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6882
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6887
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6891
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6897
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6901
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6907
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6911
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6917
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6921
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6926
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6936
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6940
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6946
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6952
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6956
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6962
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6966
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6970
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6974
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:6980
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:6984
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:6988
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6995
		{
			yyVAL.str = "charset"
		}
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7005
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7009
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7013
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7022
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7024
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7027
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7029
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7032
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7034
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7037
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7039
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7042
		{
			yyVAL.empty = struct{}{}
		}
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7044
		{
			yyVAL.empty = struct{}{}
		}
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7046
		{
			yyVAL.empty = struct{}{}
		}
	case 1417:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7050
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7055
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7059
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7064
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7066
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7070
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7076
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7080
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7087
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7093
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7097
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7103
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7107
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7114
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7675
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7684
		{
			decNesting(yylex)
		}
	case 1969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7689
		{
			skipToEnd(yylex)
		}
	case 1970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7694
		{
			skipToEnd(yylex)
		}
	case 1971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7698
		{
			skipToEnd(yylex)
		}
	case 1972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7702
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
