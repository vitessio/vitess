// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const JSON_PRETTY = 57441
const JSON_STORAGE_SIZE = 57442
const JSON_STORAGE_FREE = 57443
const EXTRACT = 57444
const NULL = 57445
const TRUE = 57446
const FALSE = 57447
const OFF = 57448
const DISCARD = 57449
const IMPORT = 57450
const ENABLE = 57451
const DISABLE = 57452
const TABLESPACE = 57453
const VIRTUAL = 57454
const STORED = 57455
const BOTH = 57456
const LEADING = 57457
const TRAILING = 57458
const EMPTY_FROM_CLAUSE = 57459
const LOWER_THAN_CHARSET = 57460
const CHARSET = 57461
const UNIQUE = 57462
const KEY = 57463
const EXPRESSION_PREC_SETTER = 57464
const OR = 57465
const XOR = 57466
const AND = 57467
const NOT = 57468
const BETWEEN = 57469
const CASE = 57470
const WHEN = 57471
const THEN = 57472
const ELSE = 57473
const END = 57474
const LE = 57475
const GE = 57476
const NE = 57477
const NULL_SAFE_EQUAL = 57478
const IS = 57479
const LIKE = 57480
const REGEXP = 57481
const IN = 57482
const SHIFT_LEFT = 57483
const SHIFT_RIGHT = 57484
const DIV = 57485
const MOD = 57486
const UNARY = 57487
const COLLATE = 57488
const BINARY = 57489
const UNDERSCORE_ARMSCII8 = 57490
const UNDERSCORE_ASCII = 57491
const UNDERSCORE_BIG5 = 57492
const UNDERSCORE_BINARY = 57493
const UNDERSCORE_CP1250 = 57494
const UNDERSCORE_CP1251 = 57495
const UNDERSCORE_CP1256 = 57496
const UNDERSCORE_CP1257 = 57497
const UNDERSCORE_CP850 = 57498
const UNDERSCORE_CP852 = 57499
const UNDERSCORE_CP866 = 57500
const UNDERSCORE_CP932 = 57501
const UNDERSCORE_DEC8 = 57502
const UNDERSCORE_EUCJPMS = 57503
const UNDERSCORE_EUCKR = 57504
const UNDERSCORE_GB18030 = 57505
const UNDERSCORE_GB2312 = 57506
const UNDERSCORE_GBK = 57507
const UNDERSCORE_GEOSTD8 = 57508
const UNDERSCORE_GREEK = 57509
const UNDERSCORE_HEBREW = 57510
const UNDERSCORE_HP8 = 57511
const UNDERSCORE_KEYBCS2 = 57512
const UNDERSCORE_KOI8R = 57513
const UNDERSCORE_KOI8U = 57514
const UNDERSCORE_LATIN1 = 57515
const UNDERSCORE_LATIN2 = 57516
const UNDERSCORE_LATIN5 = 57517
const UNDERSCORE_LATIN7 = 57518
const UNDERSCORE_MACCE = 57519
const UNDERSCORE_MACROMAN = 57520
const UNDERSCORE_SJIS = 57521
const UNDERSCORE_SWE7 = 57522
const UNDERSCORE_TIS620 = 57523
const UNDERSCORE_UCS2 = 57524
const UNDERSCORE_UJIS = 57525
const UNDERSCORE_UTF16 = 57526
const UNDERSCORE_UTF16LE = 57527
const UNDERSCORE_UTF32 = 57528
const UNDERSCORE_UTF8 = 57529
const UNDERSCORE_UTF8MB4 = 57530
const INTERVAL = 57531
const JSON_EXTRACT_OP = 57532
const JSON_UNQUOTE_EXTRACT_OP = 57533
const CREATE = 57534
const ALTER = 57535
const DROP = 57536
const RENAME = 57537
const ANALYZE = 57538
const ADD = 57539
const FLUSH = 57540
const CHANGE = 57541
const MODIFY = 57542
const DEALLOCATE = 57543
const REVERT = 57544
const SCHEMA = 57545
const TABLE = 57546
const INDEX = 57547
const VIEW = 57548
const TO = 57549
const IGNORE = 57550
const IF = 57551
const PRIMARY = 57552
const COLUMN = 57553
const SPATIAL = 57554
const FULLTEXT = 57555
const KEY_BLOCK_SIZE = 57556
const CHECK = 57557
const INDEXES = 57558
const ACTION = 57559
const CASCADE = 57560
const CONSTRAINT = 57561
const FOREIGN = 57562
const NO = 57563
const REFERENCES = 57564
const RESTRICT = 57565
const SHOW = 57566
const DESCRIBE = 57567
const EXPLAIN = 57568
const DATE = 57569
const ESCAPE = 57570
const REPAIR = 57571
const OPTIMIZE = 57572
const TRUNCATE = 57573
const COALESCE = 57574
const EXCHANGE = 57575
const REBUILD = 57576
const PARTITIONING = 57577
const REMOVE = 57578
const PREPARE = 57579
const EXECUTE = 57580
const MAXVALUE = 57581
const PARTITION = 57582
const REORGANIZE = 57583
const LESS = 57584
const THAN = 57585
const PROCEDURE = 57586
const TRIGGER = 57587
const VINDEX = 57588
const VINDEXES = 57589
const DIRECTORY = 57590
const NAME = 57591
const UPGRADE = 57592
const STATUS = 57593
const VARIABLES = 57594
const WARNINGS = 57595
const CASCADED = 57596
const DEFINER = 57597
const OPTION = 57598
const SQL = 57599
const UNDEFINED = 57600
const SEQUENCE = 57601
const MERGE = 57602
const TEMPORARY = 57603
const TEMPTABLE = 57604
const INVOKER = 57605
const SECURITY = 57606
const FIRST = 57607
const AFTER = 57608
const LAST = 57609
const VITESS_MIGRATION = 57610
const CANCEL = 57611
const RETRY = 57612
const COMPLETE = 57613
const CLEANUP = 57614
const BEGIN = 57615
const START = 57616
const TRANSACTION = 57617
const COMMIT = 57618
const ROLLBACK = 57619
const SAVEPOINT = 57620
const RELEASE = 57621
const WORK = 57622
const BIT = 57623
const TINYINT = 57624
const SMALLINT = 57625
const MEDIUMINT = 57626
const INT = 57627
const INTEGER = 57628
const BIGINT = 57629
const INTNUM = 57630
const REAL = 57631
const DOUBLE = 57632
const FLOAT_TYPE = 57633
const DECIMAL_TYPE = 57634
const NUMERIC = 57635
const TIME = 57636
const TIMESTAMP = 57637
const DATETIME = 57638
const YEAR = 57639
const CHAR = 57640
const VARCHAR = 57641
const BOOL = 57642
const CHARACTER = 57643
const VARBINARY = 57644
const NCHAR = 57645
const TEXT = 57646
const TINYTEXT = 57647
const MEDIUMTEXT = 57648
const LONGTEXT = 57649
const BLOB = 57650
const TINYBLOB = 57651
const MEDIUMBLOB = 57652
const LONGBLOB = 57653
const JSON = 57654
const ENUM = 57655
const GEOMETRY = 57656
const POINT = 57657
const LINESTRING = 57658
const POLYGON = 57659
const GEOMETRYCOLLECTION = 57660
const MULTIPOINT = 57661
const MULTILINESTRING = 57662
const MULTIPOLYGON = 57663
const ASCII = 57664
const UNICODE = 57665
const NULLX = 57666
const AUTO_INCREMENT = 57667
const APPROXNUM = 57668
const SIGNED = 57669
const UNSIGNED = 57670
const ZEROFILL = 57671
const CODE = 57672
const COLLATION = 57673
const COLUMNS = 57674
const DATABASES = 57675
const ENGINES = 57676
const EVENT = 57677
const EXTENDED = 57678
const FIELDS = 57679
const FULL = 57680
const FUNCTION = 57681
const GTID_EXECUTED = 57682
const KEYSPACES = 57683
const OPEN = 57684
const PLUGINS = 57685
const PRIVILEGES = 57686
const PROCESSLIST = 57687
const SCHEMAS = 57688
const TABLES = 57689
const TRIGGERS = 57690
const USER = 57691
const VGTID_EXECUTED = 57692
const VITESS_KEYSPACES = 57693
const VITESS_METADATA = 57694
const VITESS_MIGRATIONS = 57695
const VITESS_REPLICATION_STATUS = 57696
const VITESS_SHARDS = 57697
const VITESS_TABLETS = 57698
const VSCHEMA = 57699
const NAMES = 57700
const GLOBAL = 57701
const SESSION = 57702
const ISOLATION = 57703
const LEVEL = 57704
const READ = 57705
const WRITE = 57706
const ONLY = 57707
const REPEATABLE = 57708
const COMMITTED = 57709
const UNCOMMITTED = 57710
const SERIALIZABLE = 57711
const CURRENT_TIMESTAMP = 57712
const DATABASE = 57713
const CURRENT_DATE = 57714
const CURRENT_TIME = 57715
const LOCALTIME = 57716
const LOCALTIMESTAMP = 57717
const CURRENT_USER = 57718
const UTC_DATE = 57719
const UTC_TIME = 57720
const UTC_TIMESTAMP = 57721
const DAY = 57722
const DAY_HOUR = 57723
const DAY_MICROSECOND = 57724
const DAY_MINUTE = 57725
const DAY_SECOND = 57726
const HOUR = 57727
const HOUR_MICROSECOND = 57728
const HOUR_MINUTE = 57729
const HOUR_SECOND = 57730
const MICROSECOND = 57731
const MINUTE = 57732
const MINUTE_MICROSECOND = 57733
const MINUTE_SECOND = 57734
const MONTH = 57735
const QUARTER = 57736
const SECOND = 57737
const SECOND_MICROSECOND = 57738
const YEAR_MONTH = 57739
const WEEK = 57740
const REPLACE = 57741
const CONVERT = 57742
const CAST = 57743
const SUBSTR = 57744
const SUBSTRING = 57745
const GROUP_CONCAT = 57746
const SEPARATOR = 57747
const TIMESTAMPADD = 57748
const TIMESTAMPDIFF = 57749
const WEIGHT_STRING = 57750
const LTRIM = 57751
const RTRIM = 57752
const TRIM = 57753
const JSON_ARRAY = 57754
const JSON_OBJECT = 57755
const JSON_QUOTE = 57756
const MATCH = 57757
const AGAINST = 57758
const BOOLEAN = 57759
const LANGUAGE = 57760
const WITH = 57761
const QUERY = 57762
const EXPANSION = 57763
const WITHOUT = 57764
const VALIDATION = 57765
const UNUSED = 57766
const ARRAY = 57767
const CUME_DIST = 57768
const DESCRIPTION = 57769
const DENSE_RANK = 57770
const EMPTY = 57771
const EXCEPT = 57772
const FIRST_VALUE = 57773
const GROUPING = 57774
const GROUPS = 57775
const JSON_TABLE = 57776
const LAG = 57777
const LAST_VALUE = 57778
const LATERAL = 57779
const LEAD = 57780
const MEMBER = 57781
const NTH_VALUE = 57782
const NTILE = 57783
const OF = 57784
const OVER = 57785
const PERCENT_RANK = 57786
const RANK = 57787
const RECURSIVE = 57788
const ROW_NUMBER = 57789
const SYSTEM = 57790
const WINDOW = 57791
const ACTIVE = 57792
const ADMIN = 57793
const BUCKETS = 57794
const CLONE = 57795
const COMPONENT = 57796
const DEFINITION = 57797
const ENFORCED = 57798
const EXCLUDE = 57799
const FOLLOWING = 57800
const GEOMCOLLECTION = 57801
const GET_MASTER_PUBLIC_KEY = 57802
const HISTOGRAM = 57803
const HISTORY = 57804
const INACTIVE = 57805
const INVISIBLE = 57806
const LOCKED = 57807
const MASTER_COMPRESSION_ALGORITHMS = 57808
const MASTER_PUBLIC_KEY_PATH = 57809
const MASTER_TLS_CIPHERSUITES = 57810
const MASTER_ZSTD_COMPRESSION_LEVEL = 57811
const NESTED = 57812
const NETWORK_NAMESPACE = 57813
const NOWAIT = 57814
const NULLS = 57815
const OJ = 57816
const OLD = 57817
const OPTIONAL = 57818
const ORDINALITY = 57819
const ORGANIZATION = 57820
const OTHERS = 57821
const PATH = 57822
const PERSIST = 57823
const PERSIST_ONLY = 57824
const PRECEDING = 57825
const PRIVILEGE_CHECKS_USER = 57826
const PROCESS = 57827
const RANDOM = 57828
const REFERENCE = 57829
const REQUIRE_ROW_FORMAT = 57830
const RESOURCE = 57831
const RESPECT = 57832
const RESTART = 57833
const RETAIN = 57834
const REUSE = 57835
const ROLE = 57836
const SECONDARY = 57837
const SECONDARY_ENGINE = 57838
const SECONDARY_LOAD = 57839
const SECONDARY_UNLOAD = 57840
const SKIP = 57841
const SRID = 57842
const THREAD_PRIORITY = 57843
const TIES = 57844
const UNBOUNDED = 57845
const VCPU = 57846
const VISIBLE = 57847
const FORMAT = 57848
const TREE = 57849
const VITESS = 57850
const TRADITIONAL = 57851
const LOCAL = 57852
const LOW_PRIORITY = 57853
const NO_WRITE_TO_BINLOG = 57854
const LOGS = 57855
const ERROR = 57856
const GENERAL = 57857
const HOSTS = 57858
const OPTIMIZER_COSTS = 57859
const USER_RESOURCES = 57860
const SLOW = 57861
const CHANNEL = 57862
const RELAY = 57863
const EXPORT = 57864
const AVG_ROW_LENGTH = 57865
const CONNECTION = 57866
const CHECKSUM = 57867
const DELAY_KEY_WRITE = 57868
const ENCRYPTION = 57869
const ENGINE = 57870
const INSERT_METHOD = 57871
const MAX_ROWS = 57872
const MIN_ROWS = 57873
const PACK_KEYS = 57874
const PASSWORD = 57875
const FIXED = 57876
const DYNAMIC = 57877
const COMPRESSED = 57878
const REDUNDANT = 57879
const COMPACT = 57880
const ROW_FORMAT = 57881
const STATS_AUTO_RECALC = 57882
const STATS_PERSISTENT = 57883
const STATS_SAMPLE_PAGES = 57884
const STORAGE = 57885
const MEMORY = 57886
const DISK = 57887
const PARTITIONS = 57888
const LINEAR = 57889
const RANGE = 57890
const LIST = 57891
const SUBPARTITION = 57892
const SUBPARTITIONS = 57893
const HASH = 57894

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 47,
	11, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	570, 145,
	-2, 151,
	-1, 48,
	122, 151,
	162, 151,
	318, 151,
	-2, 456,
	-1, 55,
	33, 654,
	222, 654,
	233, 654,
	268, 668,
	269, 668,
	-2, 656,
	-1, 60,
	224, 679,
	-2, 677,
	-1, 114,
	221, 1166,
	-2, 119,
	-1, 116,
	1, 146,
	570, 146,
	-2, 151,
	-1, 126,
	123, 359,
	227, 359,
	-2, 450,
	-1, 145,
	122, 151,
	162, 151,
	318, 151,
	-2, 465,
	-1, 629,
	206, 1187,
	-2, 1183,
	-1, 630,
	206, 1188,
	-2, 1184,
	-1, 704,
	57, 747,
	-2, 762,
	-1, 741,
	138, 1561,
	-2, 112,
	-1, 742,
	138, 1429,
	-2, 113,
	-1, 748,
	138, 1490,
	-2, 1160,
	-1, 894,
	138, 1360,
	-2, 1157,
	-1, 932,
	232, 41,
	237, 41,
	-2, 370,
	-1, 1009,
	1, 504,
	570, 504,
	-2, 151,
	-1, 1220,
	57, 748,
	-2, 767,
	-1, 1221,
	57, 749,
	-2, 768,
	-1, 1273,
	122, 151,
	162, 151,
	318, 151,
	-2, 400,
	-1, 1350,
	123, 359,
	227, 359,
	-2, 450,
	-1, 1359,
	232, 42,
	237, 42,
	-2, 371,
	-1, 1633,
	206, 1192,
	-2, 1186,
	-1, 1716,
	122, 151,
	162, 151,
	318, 151,
	-2, 401,
	-1, 1723,
	23, 170,
	-2, 172,
	-1, 1931,
	84, 39,
	-2, 804,
	-1, 1983,
	75, 94,
	84, 94,
	-2, 824,
	-1, 2157,
	47, 1128,
	-2, 1122,
	-1, 2328,
	84, 39,
	-2, 805,
	-1, 2366,
	5, 53,
	16, 53,
	18, 53,
	85, 53,
	-2, 796,
	-1, 2611,
	20, 1492,
	30, 1492,
	163, 1492,
	244, 1492,
	298, 1492,
	299, 1492,
	300, 1492,
	301, 1492,
	302, 1492,
	303, 1492,
	304, 1492,
	306, 1492,
	307, 1492,
	308, 1492,
	309, 1492,
	310, 1492,
	311, 1492,
	312, 1492,
	313, 1492,
	314, 1492,
	315, 1492,
	316, 1492,
	317, 1492,
	319, 1492,
	321, 1492,
	322, 1492,
	323, 1492,
	324, 1492,
	325, 1492,
	326, 1492,
	327, 1492,
	328, 1492,
	329, 1492,
	330, 1492,
	331, 1492,
	332, 1492,
	333, 1492,
	334, 1492,
	335, 1492,
	336, 1492,
	337, 1492,
	338, 1492,
	434, 1492,
	-2, 544,
}

const yyPrivate = 57344

const yyLast = 38097

var yyAct = [...]int{
	629, 638, 631, 1559, 2676, 2658, 2555, 1713, 2675, 2652,
	1667, 2609, 2613, 2427, 2280, 2594, 1276, 2210, 2217, 1073,
	3, 1199, 2517, 1647, 2531, 719, 96, 2171, 2453, 2251,
	575, 697, 1919, 2168, 2263, 624, 1776, 2219, 2262, 1235,
	571, 2172, 2337, 1671, 2169, 2458, 1954, 568, 632, 621,
	622, 182, 623, 37, 182, 2331, 535, 182, 1977, 597,
	2265, 1686, 551, 2166, 182, 2158, 2357, 1946, 2323, 1204,
	1746, 1021, 182, 567, 2015, 569, 2085, 1766, 2044, 1751,
	2016, 1702, 746, 2017, 154, 1966, 1690, 182, 36, 563,
	1691, 1938, 1624, 38, 1921, 962, 897, 1222, 720, 1627,
	1566, 2101, 140, 699, 1050, 1785, 1818, 1765, 1555, 551,
	1357, 1753, 551, 182, 551, 2009, 1514, 927, 922, 1985,
	1265, 1155, 1244, 505, 580, 91, 1465, 1693, 743, 1649,
	701, 1202, 705, 554, 1578, 1532, 95, 1092, 1364, 1461,
	1373, 692, 904, 1763, 905, 933, 928, 930, 1447, 1678,
	722, 929, 1264, 901, 1248, 711, 940, 1620, 1470, 1349,
	1071, 1066, 123, 98, 124, 1742, 1005, 1262, 706, 1672,
	1325, 709, 76, 707, 157, 733, 117, 558, 1158, 85,
	118, 1162, 903, 1330, 2564, 2037, 89, 1640, 2659, 1778,
	1779, 1780, 1778, 2248, 2064, 2063, 1816, 2035, 708, 77,
	8, 7, 2093, 727, 97, 732, 2094, 2686, 125, 2687,
	2679, 6, 184, 185, 186, 1521, 713, 1644, 1645, 1520,
	1519, 1518, 119, 1517, 90, 508, 1516, 1503, 1508, 898,
	967, 561, 1630, 562, 1917, 2154, 1948, 2627, 964, 913,
	1433, 2672, 908, 559, 1093, 2636, 2649, 2392, 2234, 2513,
	700, 978, 979, 2512, 982, 983, 984, 985, 966, 965,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 943, 740, 721, 747, 714,
	2420, 698, 1758, 2421, 944, 2671, 2604, 2678, 102, 920,
	1124, 119, 2687, 919, 968, 969, 970, 918, 2662, 2575,
	2647, 78, 1856, 1093, 2428, 78, 1756, 178, 80, 2595,
	975, 2522, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133,
	1132, 1134, 1135, 78, 1804, 1957, 2603, 980, 2100, 104,
	105, 120, 108, 142, 2313, 114, 2574, 1339, 179, 2072,
	78, 503, 912, 2071, 162, 914, 2207, 2208, 1994, 1103,
	1958, 1993, 1708, 1709, 1995, 119, 1266, 1918, 1267, 2206,
	2092, 693, 694, 695, 696, 1646, 1854, 704, 1853, 1707,
	1069, 917, 2471, 1014, 1015, 152, 1045, 1046, 87, 1040,
	141, 691, 87, 178, 1028, 690, 1028, 2556, 1041, 1029,
	1057, 1029, 1059, 2038, 2040, 735, 736, 1027, 1008, 1026,
	87, 159, 1034, 160, 2006, 1017, 538, 120, 1103, 142,
	1726, 1725, 129, 130, 151, 150, 177, 87, 2334, 1004,
	162, 2282, 538, 1509, 1510, 1511, 538, 2127, 2304, 915,
	1056, 1058, 2302, 549, 1507, 538, 553, 547, 1755, 917,
	1453, 909, 1099, 2045, 1206, 1091, 1786, 1824, 911, 910,
	1423, 152, 1830, 1827, 1829, 1828, 141, 2067, 2661, 1832,
	2275, 1833, 981, 1834, 1819, 1047, 921, 1042, 2276, 1448,
	1068, 1043, 1044, 1063, 1049, 1048, 1010, 159, 1835, 160,
	2080, 1035, 987, 986, 2284, 1821, 2259, 1823, 1351, 1352,
	151, 150, 177, 2628, 1424, 2413, 1425, 915, 951, 1789,
	2283, 1099, 1825, 182, 1687, 182, 949, 923, 182, 87,
	1209, 924, 146, 127, 153, 134, 126, 924, 147, 148,
	960, 1054, 2223, 2666, 163, 1055, 1061, 959, 958, 1822,
	957, 956, 955, 168, 135, 1060, 551, 551, 551, 916,
	917, 1003, 954, 953, 942, 948, 1342, 2645, 138, 136,
	131, 132, 133, 137, 551, 551, 1136, 1053, 961, 902,
	128, 902, 1136, 2656, 936, 900, 734, 902, 935, 139,
	1462, 1764, 1012, 2081, 1018, 1363, 1085, 1020, 1810, 2128,
	1038, 1024, 1458, 1030, 1031, 1032, 1033, 1079, 146, 1353,
	153, 2233, 1350, 1854, 147, 148, 971, 2258, 2241, 2523,
	163, 1337, 539, 942, 2066, 1007, 1070, 916, 37, 168,
	1336, 1098, 1095, 1096, 1097, 1102, 1104, 1101, 539, 1100,
	1335, 1806, 539, 1673, 1674, 2084, 1094, 2056, 1459, 2563,
	2036, 539, 1333, 507, 1064, 502, 1454, 1137, 1138, 2096,
	2102, 952, 941, 1757, 155, 1867, 2069, 945, 935, 950,
	2552, 2373, 1139, 1140, 1141, 1142, 1062, 946, 116, 2039,
	1922, 1924, 1147, 2353, 1150, 2079, 1990, 1953, 2078, 1192,
	1098, 1095, 1096, 1097, 1102, 1104, 1101, 947, 1100, 1362,
	1909, 1639, 2509, 1714, 1252, 1094, 1179, 1019, 977, 1136,
	2335, 182, 2205, 1197, 1006, 551, 551, 1075, 1076, 2573,
	1051, 941, 184, 185, 186, 1135, 1557, 1143, 916, 716,
	1537, 182, 2677, 1067, 2569, 81, 2120, 1471, 1855, 149,
	155, 2104, 942, 1210, 1538, 1539, 1536, 699, 1215, 1198,
	551, 86, 1213, 1023, 182, 86, 1452, 2409, 143, 551,
	2347, 144, 111, 1016, 2087, 551, 1013, 1025, 963, 2086,
	1820, 1212, 1455, 86, 77, 1216, 1088, 1086, 743, 942,
	1268, 701, 1435, 1434, 1436, 1437, 1438, 1087, 2654, 1037,
	86, 2655, 1089, 2653, 1579, 1160, 2087, 1161, 2028, 1558,
	1039, 2086, 1164, 2114, 2113, 2112, 2106, 1108, 2110, 942,
	2105, 1198, 2103, 2467, 1579, 149, 1882, 2108, 1107, 1108,
	1214, 1891, 1805, 1257, 95, 112, 2107, 1185, 1186, 1187,
	1188, 1871, 1803, 1923, 143, 2384, 2383, 144, 1203, 1793,
	941, 2109, 2111, 1372, 1371, 1361, 935, 938, 939, 1801,
	902, 98, 951, 1242, 932, 936, 1052, 949, 2310, 1009,
	1798, 2641, 156, 161, 158, 164, 165, 166, 167, 169,
	170, 171, 172, 1472, 1263, 931, 2669, 941, 173, 174,
	175, 176, 945, 935, 2374, 1798, 1022, 1200, 2619, 87,
	1802, 1449, 946, 1450, 942, 2617, 1451, 1106, 1211, 1107,
	1108, 700, 1234, 1535, 2621, 2622, 2122, 941, 1106, 976,
	1107, 1108, 2221, 2222, 1231, 1800, 2667, 182, 1241, 2618,
	1253, 1326, 2504, 1229, 1106, 698, 1107, 1108, 747, 1878,
	1334, 1258, 1259, 2443, 1106, 2580, 1107, 1108, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 2442,
	2545, 551, 1899, 1359, 173, 174, 175, 176, 1679, 1680,
	1106, 1368, 1107, 1108, 1106, 1370, 1107, 1108, 551, 551,
	2581, 551, 2391, 551, 551, 2390, 551, 551, 551, 551,
	551, 551, 2249, 738, 2239, 2546, 1275, 2013, 1873, 1194,
	2012, 551, 941, 2668, 1369, 182, 1406, 1872, 935, 938,
	939, 1877, 902, 1527, 1529, 1530, 932, 936, 2308, 1229,
	1229, 182, 1217, 1761, 2643, 1443, 2220, 1583, 1428, 1401,
	1402, 1584, 551, 1427, 182, 1229, 1426, 1528, 2223, 1130,
	1131, 1133, 1132, 1134, 1135, 1460, 1340, 1341, 551, 1106,
	182, 1107, 1108, 1106, 1442, 1107, 1108, 1355, 2560, 1348,
	1106, 1417, 1107, 1108, 1411, 1106, 182, 1107, 1108, 1106,
	1408, 1107, 1108, 182, 1405, 1440, 1106, 1407, 1107, 1108,
	1382, 1367, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 551, 551, 551, 2642, 1238, 1229, 1403, 2549, 1106,
	2548, 1107, 1108, 1446, 1332, 1430, 1409, 1410, 1366, 1859,
	1860, 1861, 1415, 1416, 2547, 1345, 2466, 1441, 1346, 1375,
	1344, 1376, 182, 1378, 1380, 1365, 1365, 1384, 1386, 1388,
	1390, 1392, 1467, 1358, 2464, 1476, 1475, 1106, 1439, 1107,
	1108, 2439, 1480, 1479, 1239, 1481, 1482, 1483, 1484, 2502,
	1419, 2388, 1488, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	2380, 1473, 1474, 643, 644, 645, 1502, 1556, 1429, 1562,
	1562, 1404, 1564, 2022, 2010, 1478, 1868, 1814, 2410, 1813,
	1569, 551, 1485, 1486, 1487, 1533, 1463, 1670, 1652, 2368,
	1106, 1515, 1107, 1108, 2316, 2346, 551, 551, 1504, 1540,
	2279, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 119, 1531, 919, 2315, 1580, 1106,
	918, 1107, 1108, 1229, 1468, 1477, 1431, 1621, 1541, 1631,
	1418, 1106, 1338, 1107, 1108, 182, 1106, 1903, 1107, 1108,
	551, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1132, 1134,
	1135, 1498, 1499, 1500, 1414, 1501, 2014, 1621, 1413, 1106,
	1412, 1107, 1108, 1240, 182, 1065, 1078, 551, 2530, 1657,
	2348, 1658, 1944, 2660, 1534, 101, 2529, 182, 2498, 1106,
	551, 1107, 1108, 2632, 1229, 182, 100, 182, 99, 182,
	182, 551, 1633, 1124, 551, 2095, 2497, 1106, 2426, 1107,
	1108, 2046, 1631, 1944, 2601, 551, 184, 185, 186, 1105,
	743, 1635, 1636, 743, 1723, 1125, 1126, 1127, 1128, 1129,
	1130, 1131, 1133, 1132, 1134, 1135, 95, 1944, 2588, 1944,
	2584, 2486, 2488, 2487, 603, 2025, 1632, 1128, 1129, 1130,
	1131, 1133, 1132, 1134, 1135, 95, 1681, 1689, 2576, 1229,
	1663, 1124, 1722, 1866, 1685, 1229, 1688, 2568, 92, 1515,
	551, 1732, 1733, 1734, 1735, 1633, 1767, 1768, 1769, 93,
	1944, 1771, 1773, 1125, 1126, 1127, 1128, 1129, 1130, 1131,
	1133, 1132, 1134, 1135, 1955, 551, 1955, 713, 1717, 1944,
	2565, 551, 1368, 1651, 1963, 1368, 2625, 1368, 184, 185,
	186, 1718, 2381, 1797, 2418, 2562, 1700, 1565, 2229, 1684,
	1944, 2505, 2418, 1229, 1571, 1572, 184, 185, 186, 1665,
	1997, 1787, 1721, 1229, 1986, 1748, 184, 185, 186, 2167,
	1774, 1944, 2416, 551, 1682, 1556, 1754, 1798, 1229, 2346,
	1556, 1556, 1124, 1634, 1705, 94, 1637, 1638, 184, 185,
	186, 1720, 1772, 2351, 1229, 1963, 1719, 2346, 1704, 2142,
	747, 2231, 2230, 747, 1125, 1126, 1127, 1128, 1129, 1130,
	1131, 1133, 1132, 1134, 1135, 1706, 182, 2227, 2228, 92,
	1869, 1784, 1662, 182, 2227, 2226, 94, 1987, 182, 182,
	93, 1902, 182, 1888, 182, 1727, 1989, 1728, 1729, 1730,
	1731, 182, 1792, 1229, 1759, 1795, 1986, 1796, 182, 1749,
	1760, 1762, 1770, 1738, 1739, 1740, 1741, 1744, 1745, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1110, 1963, 1229, 1807,
	100, 943, 1794, 1791, 1790, 1887, 182, 551, 1798, 1808,
	944, 1962, 1749, 1809, 1229, 1515, 1869, 1229, 1811, 1812,
	1365, 1799, 1826, 1854, 2065, 1329, 2050, 1836, 1837, 2042,
	2043, 1841, 1944, 1943, 1105, 1229, 1329, 1328, 101, 1987,
	1844, 1940, 1274, 1273, 2200, 1845, 1846, 1847, 1854, 100,
	1848, 99, 1781, 1854, 1677, 1233, 94, 1642, 1512, 1849,
	94, 1457, 1817, 1260, 703, 1963, 926, 925, 1869, 2393,
	2591, 87, 1533, 2519, 1236, 1850, 2495, 2281, 1798, 2478,
	2408, 1397, 2405, 2386, 2319, 1863, 625, 1865, 598, 600,
	626, 627, 1608, 596, 599, 628, 2318, 1331, 1747, 1838,
	1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1132, 1134,
	1135, 2277, 2520, 1869, 1864, 2254, 2397, 2250, 1229, 2394,
	2395, 2396, 601, 602, 2485, 2489, 2490, 2491, 2492, 2493,
	2494, 1398, 1399, 1400, 2051, 1758, 1743, 1737, 1736, 1445,
	1360, 87, 1356, 182, 630, 1327, 113, 2018, 2252, 2019,
	1852, 182, 1008, 2358, 2359, 1562, 551, 1928, 1655, 1915,
	2685, 1534, 551, 2398, 2399, 2682, 1932, 2638, 2614, 2361,
	2246, 2245, 1862, 551, 2244, 1600, 1589, 1590, 1591, 1592,
	1602, 1593, 1594, 1595, 1607, 1603, 1596, 1597, 1604, 1605,
	1606, 1598, 1599, 1601, 2019, 183, 182, 1394, 183, 2167,
	182, 183, 2029, 1839, 1505, 2189, 552, 1959, 183, 2213,
	2190, 2364, 1881, 2363, 1945, 1996, 183, 1968, 1971, 1972,
	1973, 1969, 1633, 1970, 1974, 2187, 2186, 2358, 2359, 2185,
	2188, 183, 2448, 2191, 2447, 1972, 1973, 1897, 2630, 37,
	1661, 2602, 1669, 1237, 1395, 1396, 2159, 2161, 1979, 2352,
	2147, 2146, 2048, 552, 2214, 2162, 552, 183, 552, 551,
	2339, 1941, 2544, 2457, 182, 2156, 1632, 2459, 2338, 1983,
	1203, 182, 2007, 2008, 1916, 2342, 1456, 717, 689, 2216,
	1926, 2225, 2446, 551, 1978, 718, 2211, 2004, 1937, 2023,
	551, 1942, 1575, 2041, 1368, 1368, 973, 972, 92, 551,
	1952, 2000, 92, 2221, 2222, 94, 1576, 1879, 2291, 93,
	2212, 2062, 2018, 93, 2090, 1077, 1984, 2061, 2058, 2057,
	120, 1988, 182, 182, 182, 182, 182, 1991, 2344, 94,
	1754, 1679, 1680, 2027, 1998, 2664, 2001, 2242, 1842, 182,
	182, 101, 2218, 1968, 1971, 1972, 1973, 1969, 2561, 1970,
	1974, 2021, 100, 2011, 99, 182, 1227, 1223, 99, 1831,
	2515, 1906, 1907, 94, 2020, 2224, 1976, 1666, 2324, 2026,
	2145, 1224, 725, 726, 1556, 2030, 2031, 2032, 2144, 1858,
	2536, 2535, 2465, 2463, 1348, 2462, 2455, 2060, 101, 2406,
	2343, 2073, 2074, 2075, 2076, 2077, 1659, 1660, 1226, 100,
	1225, 99, 2341, 2255, 2052, 2053, 699, 2220, 1515, 2083,
	551, 2119, 101, 2059, 1782, 1343, 1227, 1223, 724, 2223,
	100, 2454, 2332, 100, 2091, 1955, 551, 2640, 2639, 2136,
	1940, 1224, 2129, 1889, 1653, 1254, 1246, 106, 107, 2640,
	2097, 182, 2550, 2098, 2379, 551, 715, 103, 88, 2088,
	1, 2616, 2089, 520, 551, 2082, 1220, 1221, 1226, 1643,
	1225, 551, 551, 1201, 182, 182, 182, 182, 182, 534,
	2099, 2612, 1432, 2136, 2115, 1422, 182, 2429, 1622, 1623,
	2164, 182, 2116, 2516, 182, 2149, 182, 2047, 2170, 182,
	182, 182, 1788, 2170, 2173, 2131, 2179, 2404, 1752, 2150,
	934, 145, 1715, 1716, 2597, 110, 895, 2199, 2135, 109,
	937, 1036, 1783, 705, 2419, 2137, 2005, 1724, 1280, 1278,
	1279, 1277, 2215, 1282, 2240, 1281, 1890, 1506, 548, 2148,
	182, 1975, 180, 1216, 1979, 1269, 1247, 974, 510, 2151,
	2232, 1815, 516, 551, 2201, 1148, 2143, 2202, 1992, 706,
	2180, 744, 551, 2183, 707, 2181, 2182, 182, 2184, 737,
	2192, 1654, 2261, 1930, 2175, 2336, 2141, 182, 2155, 2196,
	2197, 2203, 2157, 1467, 1947, 614, 2257, 2160, 95, 2138,
	2139, 2140, 182, 2153, 2209, 182, 2543, 2456, 2589, 2002,
	1243, 1880, 1577, 1694, 1526, 2292, 573, 572, 2236, 2243,
	2235, 570, 2178, 1933, 1956, 1111, 633, 1920, 2269, 2268,
	1255, 1967, 1965, 1964, 2237, 2238, 1840, 1701, 2360, 2356,
	2674, 2608, 1696, 1692, 1939, 581, 2264, 574, 1754, 566,
	2260, 2376, 2267, 2068, 2278, 2070, 2273, 550, 2272, 2256,
	2003, 2274, 1090, 551, 182, 1219, 560, 183, 907, 183,
	1574, 2285, 183, 2521, 2288, 2507, 1857, 2312, 2287, 2286,
	2289, 2290, 1218, 1587, 1588, 2247, 1775, 63, 41, 2293,
	1615, 555, 2294, 2626, 1081, 731, 32, 2300, 31, 30,
	552, 552, 552, 29, 745, 28, 23, 899, 22, 906,
	21, 20, 19, 25, 18, 2330, 17, 16, 552, 552,
	2635, 182, 2663, 115, 50, 47, 45, 122, 2325, 2326,
	121, 48, 44, 2329, 1011, 42, 27, 26, 15, 2382,
	14, 2333, 13, 2340, 182, 12, 2355, 11, 10, 9,
	5, 4, 2345, 2365, 35, 34, 33, 1084, 24, 2,
	2034, 1777, 182, 0, 0, 182, 182, 182, 2371, 2372,
	2362, 0, 0, 0, 0, 551, 551, 0, 0, 2370,
	0, 2369, 0, 2269, 2268, 2411, 2412, 0, 0, 0,
	2387, 0, 2389, 2377, 2378, 0, 0, 0, 0, 0,
	0, 0, 551, 551, 551, 551, 2297, 2298, 0, 2299,
	0, 0, 2301, 2385, 2303, 2414, 2305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2400, 0, 2425, 2401, 2402, 2403, 0, 0, 2423,
	2424, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 178, 0, 0, 183, 0, 0, 2438, 552,
	552, 0, 2435, 2434, 0, 0, 0, 0, 0, 0,
	0, 2451, 551, 0, 551, 183, 120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	1562, 2472, 2480, 0, 552, 0, 0, 2170, 183, 2461,
	2474, 2460, 699, 552, 2173, 0, 2452, 2476, 2173, 552,
	2470, 2468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 37, 0, 0, 0, 0, 0, 551,
	0, 1999, 0, 0, 0, 178, 2481, 2482, 0, 2503,
	2484, 0, 0, 0, 0, 0, 159, 0, 160, 551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	2499, 177, 0, 2501, 2500, 0, 551, 0, 2518, 2506,
	551, 551, 162, 2511, 2510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2537, 2538, 0, 2542, 0, 551,
	0, 2540, 0, 0, 2539, 0, 0, 0, 0, 2554,
	0, 0, 0, 0, 0, 0, 551, 0, 0, 2551,
	0, 0, 2553, 0, 0, 0, 2559, 2173, 699, 159,
	0, 160, 0, 2557, 0, 0, 0, 0, 0, 0,
	551, 182, 0, 0, 177, 0, 0, 0, 0, 0,
	2570, 0, 0, 0, 0, 0, 2567, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 551, 0, 0, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 37, 551,
	551, 0, 0, 0, 0, 552, 0, 551, 0, 0,
	0, 2170, 2590, 2587, 2582, 0, 182, 551, 2518, 2598,
	2571, 2596, 552, 552, 2592, 552, 0, 552, 552, 0,
	552, 552, 552, 552, 552, 552, 2623, 2615, 2620, 2607,
	0, 745, 745, 745, 37, 552, 2629, 0, 0, 183,
	0, 0, 0, 0, 0, 2637, 551, 2634, 0, 1080,
	1082, 0, 163, 551, 0, 183, 2644, 1562, 0, 2651,
	0, 168, 2650, 2646, 2648, 0, 552, 0, 183, 0,
	2657, 0, 0, 0, 0, 0, 0, 0, 2665, 0,
	0, 0, 552, 0, 183, 0, 2670, 0, 0, 155,
	0, 0, 0, 0, 1562, 0, 2673, 0, 0, 2681,
	183, 2684, 2683, 2680, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 552, 552, 552, 0, 0,
	0, 0, 0, 0, 1195, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1347, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 0, 142, 0, 0,
	0, 0, 155, 0, 1124, 0, 0, 1120, 162, 1121,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1207, 1208, 0, 1122, 1123, 1119, 1125, 1126, 1127, 1128,
	1129, 1130, 1131, 1133, 1132, 1134, 1135, 0, 0, 152,
	0, 0, 0, 0, 141, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1250, 0, 0, 0, 0,
	552, 552, 0, 0, 745, 159, 0, 160, 0, 0,
	1270, 0, 0, 0, 0, 0, 1351, 1352, 151, 150,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1228, 0, 0, 156, 161, 158,
	164, 165, 166, 167, 169, 170, 171, 172, 183, 0,
	0, 552, 0, 173, 174, 175, 176, 0, 0, 0,
	0, 183, 0, 0, 552, 0, 0, 0, 0, 183,
	0, 183, 0, 183, 183, 552, 0, 0, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	0, 0, 0, 0, 0, 0, 146, 1353, 153, 0,
	1350, 0, 147, 148, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 0, 0, 0, 0, 0, 173, 174, 175, 176,
	0, 0, 0, 0, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	0, 0, 0, 0, 0, 552, 899, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1195,
	0, 0, 0, 1374, 1374, 0, 1374, 0, 1374, 1374,
	0, 1383, 1374, 1374, 1374, 1374, 1374, 0, 0, 0,
	0, 0, 0, 0, 1195, 1195, 899, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1444, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 1464, 0, 0, 0, 183, 0, 0,
	0, 0, 183, 183, 0, 0, 183, 0, 183, 184,
	185, 186, 0, 0, 0, 183, 615, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 745, 745, 745, 0,
	0, 0, 0, 0, 0, 538, 0, 0, 0, 0,
	183, 552, 143, 0, 0, 144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	506, 0, 0, 546, 0, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 525, 0, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	0, 730, 0, 0, 2633, 0, 1570, 0, 0, 506,
	0, 0, 524, 1195, 1297, 0, 0, 0, 0, 0,
	0, 1585, 1586, 0, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 745, 156, 161, 158, 164,
	165, 166, 167, 169, 170, 171, 172, 0, 0, 0,
	0, 0, 173, 174, 175, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 519, 1656, 0, 183, 0, 0,
	0, 0, 0, 533, 0, 183, 0, 0, 0, 0,
	552, 0, 0, 0, 0, 0, 552, 0, 530, 0,
	0, 0, 1668, 0, 0, 0, 0, 552, 0, 0,
	0, 0, 0, 0, 0, 1250, 0, 0, 745, 0,
	0, 0, 0, 0, 0, 0, 745, 0, 0, 745,
	183, 539, 0, 0, 183, 0, 0, 0, 0, 0,
	899, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1285, 0, 0,
	0, 509, 0, 511, 526, 0, 541, 0, 540, 515,
	0, 513, 517, 527, 518, 0, 512, 0, 523, 0,
	0, 514, 528, 529, 531, 545, 544, 532, 0, 521,
	542, 0, 0, 552, 0, 906, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 0, 0,
	899, 0, 0, 0, 552, 0, 906, 0, 0, 0,
	0, 0, 0, 552, 0, 0, 0, 0, 1298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 183, 183, 183,
	183, 0, 0, 0, 0, 0, 0, 0, 899, 0,
	0, 0, 0, 183, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 1311, 1314, 1315, 1316, 1317, 1318, 1319, 0,
	1320, 1321, 1322, 1323, 1324, 1299, 1300, 1301, 1302, 1283,
	1284, 1312, 0, 1286, 0, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 0, 0, 0, 0, 0, 0, 0,
	543, 0, 0, 0, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 536, 0,
	552, 1230, 1232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 537, 0, 183, 0, 0, 0, 552,
	0, 0, 0, 0, 0, 0, 0, 0, 552, 0,
	0, 0, 0, 0, 0, 552, 552, 0, 183, 183,
	183, 183, 183, 0, 0, 0, 0, 0, 0, 506,
	183, 506, 0, 0, 506, 183, 0, 0, 183, 0,
	183, 0, 0, 183, 183, 183, 0, 0, 1313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 183,
	0, 1668, 0, 0, 0, 0, 0, 1934, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1949, 0,
	0, 0, 0, 0, 0, 1196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 712, 0, 0,
	0, 0, 0, 0, 2024, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 0, 0, 1668, 0,
	0, 0, 0, 0, 0, 2049, 0, 0, 183, 0,
	0, 0, 0, 0, 2054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 183,
	183, 183, 0, 0, 0, 729, 0, 0, 0, 552,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 552, 552, 552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 723, 552, 0, 552, 0,
	0, 1374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	2152, 0, 0, 0, 1581, 0, 0, 0, 1582, 745,
	0, 0, 0, 1195, 0, 0, 2177, 1374, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 0, 0, 0, 0, 0, 0,
	1196, 0, 0, 1230, 1641, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1196, 1196, 0, 0, 0,
	552, 506, 0, 0, 552, 552, 1664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1420, 0, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 899, 0,
	506, 1195, 0, 552, 0, 0, 0, 1668, 0, 0,
	0, 0, 0, 0, 0, 0, 1466, 0, 0, 0,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 552, 183, 0, 0, 1489, 1490,
	506, 506, 506, 506, 506, 506, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 552, 552, 0, 0, 0, 2152, 0,
	0, 552, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 640, 79, 0, 0, 730, 730,
	552, 0, 0, 0, 1196, 0, 0, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 1466, 730, 730, 730,
	730, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1420, 0, 1298, 0, 0, 0, 0, 0, 0,
	1668, 1668, 0, 0, 0, 0, 730, 0, 0, 0,
	0, 0, 702, 0, 79, 0, 0, 0, 0, 0,
	712, 0, 0, 0, 0, 0, 0, 2430, 2431, 2432,
	2433, 0, 702, 506, 0, 0, 0, 0, 0, 1466,
	0, 506, 0, 506, 0, 506, 1703, 1311, 1314, 1315,
	1316, 1317, 1318, 1319, 0, 1320, 1321, 1322, 1323, 1324,
	1299, 1300, 1301, 1302, 1283, 1284, 1312, 0, 1286, 0,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 0, 0,
	0, 0, 1195, 0, 0, 0, 0, 2473, 0, 2475,
	1870, 0, 0, 0, 1874, 0, 1875, 1876, 0, 0,
	0, 0, 0, 0, 0, 1884, 0, 0, 1885, 1886,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1892, 1893, 1894, 1895, 1896,
	0, 1898, 0, 0, 1668, 1900, 0, 1901, 0, 1156,
	0, 1904, 1905, 0, 0, 0, 0, 0, 0, 1910,
	1911, 1912, 1913, 1914, 745, 1664, 0, 0, 0, 0,
	0, 0, 0, 1313, 0, 0, 1927, 0, 0, 0,
	0, 2533, 0, 0, 0, 2533, 2533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1668, 0, 0, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 0, 0, 506,
	0, 1668, 0, 0, 506, 506, 0, 0, 506, 0,
	1843, 0, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 0, 0, 506, 1668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 506, 0, 0, 0, 1195, 0, 2583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 745, 0, 0, 0, 0,
	0, 0, 2605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1668, 0, 0, 0, 0, 0, 0, 2610, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 730, 0, 0, 0,
	0, 0, 0, 0, 0, 2126, 1466, 0, 0, 506,
	0, 0, 0, 0, 0, 0, 0, 1420, 0, 0,
	0, 2133, 2134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1072, 1072, 1072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 506, 0, 0, 0,
	79, 0, 0, 0, 0, 2176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2194, 2195, 0, 0, 0, 702, 1144, 1145,
	1146, 0, 1149, 0, 1151, 1152, 1153, 1154, 0, 1157,
	1159, 1159, 0, 1159, 1163, 1163, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	506, 1180, 1181, 1182, 1183, 1184, 0, 2033, 0, 0,
	1163, 1163, 1163, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 506, 506,
	506, 506, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 506, 506, 1205, 0, 0,
	0, 0, 0, 702, 0, 0, 2296, 702, 0, 0,
	0, 506, 0, 702, 0, 0, 0, 0, 0, 0,
	2306, 2307, 2309, 2311, 0, 0, 730, 0, 0, 0,
	2317, 0, 0, 0, 0, 2321, 0, 0, 0, 0,
	2322, 1522, 1523, 1524, 1525, 0, 2327, 0, 0, 78,
	39, 40, 80, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 0, 0, 0, 84,
	0, 0, 0, 43, 69, 70, 0, 67, 71, 2349,
	2350, 1567, 1568, 2354, 0, 0, 68, 0, 0, 1573,
	0, 0, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 2366, 2367, 0, 1609, 1610, 1611, 1612, 1613, 1614,
	1616, 564, 1625, 1626, 1196, 56, 0, 0, 0, 1196,
	506, 506, 506, 506, 506, 0, 87, 0, 0, 0,
	0, 0, 2193, 0, 0, 0, 0, 506, 0, 0,
	1420, 564, 506, 0, 0, 506, 2204, 1466, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2417, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1675, 1676, 0,
	0, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1196, 0, 1712, 0, 0, 0, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 506, 0, 2444, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 506, 0,
	0, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 46, 49, 52, 51, 54, 0, 66, 0,
	0, 75, 72, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 83, 82, 0, 0, 64,
	65, 53, 0, 0, 0, 0, 0, 73, 74, 0,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2514, 0, 0,
	0, 0, 0, 57, 58, 0, 59, 60, 61, 62,
	0, 2524, 2525, 2526, 0, 2527, 2528, 0, 0, 0,
	2532, 0, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 0, 0, 0, 1072, 1072, 1072, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 0, 0, 2558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 506, 0,
	0, 506, 506, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2577, 0, 0, 0,
	0, 0, 2578, 2579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	2585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2593, 0, 0, 0, 0, 0, 0, 0, 86,
	0, 0, 0, 87, 1420, 0, 0, 0, 0, 634,
	641, 642, 643, 644, 645, 635, 637, 0, 0, 0,
	636, 0, 0, 1196, 0, 0, 639, 646, 647, 0,
	0, 0, 0, 2631, 0, 1883, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 634, 641, 642, 643, 644, 645, 635,
	637, 1156, 2270, 2271, 636, 0, 0, 0, 0, 0,
	639, 646, 647, 1695, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 683,
	684, 685, 686, 687, 688, 0, 2270, 2271, 0, 0,
	0, 0, 0, 1245, 0, 0, 0, 0, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 1929, 0, 0, 1560,
	1561, 0, 0, 0, 0, 1563, 0, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1420, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 0, 0, 0, 625, 0, 0,
	0, 626, 627, 0, 0, 0, 628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2117, 2118, 0, 0, 0, 2121, 0,
	0, 0, 0, 2123, 2124, 2125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2130, 0, 0, 1625, 2132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1560, 1561, 0, 0, 0, 1908, 1563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1925, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 702, 0, 0, 2253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1960, 1961, 0, 0, 0, 0, 0, 0, 0,
	1980, 0, 1981, 1982, 0, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2314, 0,
	0, 0, 0, 0, 0, 2320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2055, 0, 0, 0, 0, 0,
	564, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2436, 1695, 2437, 0, 0, 0,
	0, 2440, 2441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2174, 0, 79, 0, 0, 1695, 1695,
	1695, 1695, 1695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2469, 0, 1980, 702, 0, 0, 0,
	1695, 0, 0, 1695, 2477, 0, 0, 2479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2541, 564, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2375, 0,
	0, 0, 0, 0, 0, 0, 0, 2624, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2445, 0,
	2449, 2450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2174, 0, 79, 0, 2174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2586, 0, 877, 862, 427, 79, 809, 880, 778,
	797, 890, 800, 803, 844, 757, 823, 348, 794, 0,
	782, 752, 789, 753, 780, 811, 244, 777, 864, 827,
	879, 303, 241, 759, 783, 362, 799, 193, 846, 403,
	228, 313, 310, 434, 255, 247, 243, 227, 281, 320,
	360, 421, 354, 886, 307, 833, 0, 412, 333, 0,
	0, 0, 813, 868, 821, 858, 808, 845, 767, 832,
	881, 795, 841, 882, 287, 226, 192, 345, 413, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 2599, 0,
	2600, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	299, 301, 300, 791, 838, 876, 792, 840, 239, 285,
	246, 238, 431, 887, 867, 756, 820, 875, 0, 0,
	209, 878, 815, 0, 843, 0, 893, 751, 835, 0,
	754, 758, 889, 871, 786, 249, 0, 0, 0, 0,
	0, 0, 0, 812, 822, 855, 806, 0, 0, 0,
	0, 0, 0, 0, 784, 0, 831, 0, 0, 0,
	763, 755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 810, 0, 0, 0, 766, 0, 785,
	856, 0, 749, 268, 760, 334, 231, 0, 860, 870,
	807, 465, 874, 805, 804, 850, 764, 866, 798, 302,
	762, 293, 188, 205, 0, 796, 344, 385, 391, 865,
	781, 790, 229, 788, 389, 358, 449, 213, 257, 382,
	363, 387, 370, 260, 830, 848, 388, 308, 436, 377,
	446, 466, 467, 237, 338, 456, 425, 462, 478, 206,
	234, 352, 418, 452, 409, 331, 432, 433, 292, 408,
	266, 191, 306, 472, 204, 397, 221, 211, 197, 420,
	444, 218, 400, 0, 0, 480, 199, 442, 417, 327,
	289, 290, 198, 0, 381, 242, 264, 232, 347, 439,
	440, 230, 481, 208, 461, 201, 1074, 460, 340, 435,
	443, 328, 318, 200, 441, 326, 317, 295, 253, 275,
	375, 311, 376, 276, 336, 335, 337, 194, 453, 0,
	195, 0, 414, 454, 482, 214, 215, 216, 776, 252,
	256, 263, 265, 271, 272, 279, 304, 351, 374, 372,
	378, 861, 430, 447, 457, 464, 470, 471, 473, 474,
	475, 476, 477, 339, 278, 410, 294, 309, 853, 892,
	357, 390, 219, 451, 411, 771, 775, 769, 770, 825,
	826, 772, 883, 884, 885, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 857, 765, 0, 773, 774, 0,
	863, 872, 873, 501, 319, 402, 448, 296, 297, 298,
	829, 187, 202, 305, 888, 379, 261, 479, 459, 455,
	750, 768, 236, 779, 787, 0, 793, 801, 802, 814,
	816, 817, 818, 819, 330, 836, 837, 839, 847, 849,
	852, 854, 859, 869, 891, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	315, 321, 322, 323, 324, 341, 342, 343, 346, 349,
	350, 353, 355, 356, 359, 366, 367, 368, 369, 371,
	373, 380, 384, 392, 393, 394, 395, 396, 398, 399,
	404, 405, 406, 407, 415, 419, 437, 438, 450, 463,
	468, 270, 445, 469, 0, 314, 828, 834, 316, 254,
	273, 284, 842, 458, 416, 207, 386, 262, 196, 225,
	210, 233, 248, 251, 288, 325, 332, 361, 365, 267,
	245, 223, 383, 220, 401, 422, 423, 424, 426, 329,
	240, 364, 824, 851, 312, 428, 429, 280, 877, 862,
	427, 0, 809, 880, 778, 797, 890, 800, 803, 844,
	757, 823, 348, 794, 0, 782, 752, 789, 753, 780,
	811, 244, 777, 864, 827, 879, 303, 241, 759, 783,
	362, 799, 193, 846, 403, 228, 313, 310, 434, 255,
	247, 243, 227, 281, 320, 360, 421, 354, 886, 307,
	833, 0, 412, 333, 0, 0, 0, 813, 868, 821,
	858, 808, 845, 767, 832, 881, 795, 841, 882, 287,
	226, 192, 345, 413, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 299, 301, 300, 791, 838,
	876, 792, 840, 239, 285, 246, 238, 431, 887, 867,
	756, 820, 875, 0, 0, 209, 878, 815, 0, 843,
	0, 893, 751, 835, 0, 754, 758, 889, 871, 786,
	249, 0, 0, 0, 0, 0, 0, 0, 812, 822,
	855, 806, 0, 0, 0, 0, 0, 2205, 0, 784,
	0, 831, 0, 0, 0, 763, 755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 810, 0,
	0, 0, 766, 0, 785, 856, 0, 749, 268, 760,
	334, 231, 0, 860, 870, 807, 465, 874, 805, 804,
	850, 764, 866, 798, 302, 762, 293, 188, 205, 0,
	796, 344, 385, 391, 865, 781, 790, 229, 788, 389,
	358, 449, 213, 257, 382, 363, 387, 370, 260, 830,
	848, 388, 308, 436, 377, 446, 466, 467, 237, 338,
	456, 425, 462, 478, 206, 234, 352, 418, 452, 409,
	331, 432, 433, 292, 408, 266, 191, 306, 472, 204,
	397, 221, 211, 197, 420, 444, 218, 400, 0, 0,
	480, 199, 442, 417, 327, 289, 290, 198, 0, 381,
	242, 264, 232, 347, 439, 440, 230, 481, 208, 461,
	201, 1074, 460, 340, 435, 443, 328, 318, 200, 441,
	326, 317, 295, 253, 275, 375, 311, 376, 276, 336,
	335, 337, 194, 453, 0, 195, 0, 414, 454, 482,
	214, 215, 216, 776, 252, 256, 263, 265, 271, 272,
	279, 304, 351, 374, 372, 378, 861, 430, 447, 457,
	464, 470, 471, 473, 474, 475, 476, 477, 339, 278,
	410, 294, 309, 853, 892, 357, 390, 219, 451, 411,
	771, 775, 769, 770, 825, 826, 772, 883, 884, 885,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 857,
	765, 0, 773, 774, 0, 863, 872, 873, 501, 319,
	402, 448, 296, 297, 298, 829, 187, 202, 305, 888,
	379, 261, 479, 459, 455, 750, 768, 236, 779, 787,
	0, 793, 801, 802, 814, 816, 817, 818, 819, 330,
	836, 837, 839, 847, 849, 852, 854, 859, 869, 891,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 315, 321, 322, 323, 324,
	341, 342, 343, 346, 349, 350, 353, 355, 356, 359,
	366, 367, 368, 369, 371, 373, 380, 384, 392, 393,
	394, 395, 396, 398, 399, 404, 405, 406, 407, 415,
	419, 437, 438, 450, 463, 468, 270, 445, 469, 0,
	314, 828, 834, 316, 254, 273, 284, 842, 458, 416,
	207, 386, 262, 196, 225, 210, 233, 248, 251, 288,
	325, 332, 361, 365, 267, 245, 223, 383, 220, 401,
	422, 423, 424, 426, 329, 240, 364, 824, 851, 312,
	428, 429, 280, 877, 862, 427, 0, 809, 880, 778,
	797, 890, 800, 803, 844, 757, 823, 348, 794, 0,
	782, 752, 789, 753, 780, 811, 244, 777, 864, 827,
	879, 303, 241, 759, 783, 362, 799, 193, 846, 403,
	228, 313, 310, 434, 255, 247, 243, 227, 281, 320,
	360, 421, 354, 886, 307, 833, 0, 412, 333, 0,
	0, 0, 813, 868, 821, 858, 808, 845, 767, 832,
	881, 795, 841, 882, 287, 226, 192, 345, 413, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	299, 301, 300, 791, 838, 876, 792, 840, 239, 285,
	246, 238, 431, 887, 867, 756, 820, 875, 0, 0,
	209, 878, 815, 0, 843, 0, 893, 751, 835, 0,
	754, 758, 889, 871, 786, 249, 0, 0, 0, 0,
	0, 0, 0, 812, 822, 855, 806, 0, 0, 0,
	0, 0, 2163, 0, 784, 0, 831, 0, 0, 0,
	763, 755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 810, 0, 0, 0, 766, 0, 785,
	856, 0, 749, 268, 760, 334, 231, 0, 860, 870,
	807, 465, 874, 805, 804, 850, 764, 866, 798, 302,
	762, 293, 188, 205, 0, 796, 344, 385, 391, 865,
	781, 790, 229, 788, 389, 358, 449, 213, 257, 382,
	363, 387, 370, 260, 830, 848, 388, 308, 436, 377,
	446, 466, 467, 237, 338, 456, 425, 462, 478, 206,
	234, 352, 418, 452, 409, 331, 432, 433, 292, 408,
	266, 191, 306, 472, 204, 397, 221, 211, 197, 420,
	444, 218, 400, 0, 0, 480, 199, 442, 417, 327,
	289, 290, 198, 0, 381, 242, 264, 232, 347, 439,
	440, 230, 481, 208, 461, 201, 1074, 460, 340, 435,
	443, 328, 318, 200, 441, 326, 317, 295, 253, 275,
	375, 311, 376, 276, 336, 335, 337, 194, 453, 0,
	195, 0, 414, 454, 482, 214, 215, 216, 776, 252,
	256, 263, 265, 271, 272, 279, 304, 351, 374, 372,
	378, 861, 430, 447, 457, 464, 470, 471, 473, 474,
	475, 476, 477, 339, 278, 410, 294, 309, 853, 892,
	357, 390, 219, 451, 411, 771, 775, 769, 770, 825,
	826, 772, 883, 884, 885, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 857, 765, 0, 773, 774, 0,
	863, 872, 873, 501, 319, 402, 448, 296, 297, 298,
	829, 187, 202, 305, 888, 379, 261, 479, 459, 455,
	750, 768, 236, 779, 787, 0, 793, 801, 802, 814,
	816, 817, 818, 819, 330, 836, 837, 839, 847, 849,
	852, 854, 859, 869, 891, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	315, 321, 322, 323, 324, 341, 342, 343, 346, 349,
	350, 353, 355, 356, 359, 366, 367, 368, 369, 371,
	373, 380, 384, 392, 393, 394, 395, 396, 398, 399,
	404, 405, 406, 407, 415, 419, 437, 438, 450, 463,
	468, 270, 445, 469, 0, 314, 828, 834, 316, 254,
	273, 284, 842, 458, 416, 207, 386, 262, 196, 225,
	210, 233, 248, 251, 288, 325, 332, 361, 365, 267,
	245, 223, 383, 220, 401, 422, 423, 424, 426, 329,
	240, 364, 824, 851, 312, 428, 429, 280, 877, 862,
	427, 0, 809, 880, 778, 797, 890, 800, 803, 844,
	757, 823, 348, 794, 0, 782, 752, 789, 753, 780,
	811, 244, 777, 864, 827, 879, 303, 241, 759, 783,
	362, 799, 193, 846, 403, 228, 313, 310, 434, 255,
	247, 243, 227, 281, 320, 360, 421, 354, 886, 307,
	833, 0, 412, 333, 0, 0, 0, 813, 868, 821,
	858, 808, 845, 767, 832, 881, 795, 841, 882, 287,
	226, 192, 345, 413, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 299, 301, 300, 791, 838,
	876, 792, 840, 239, 285, 246, 238, 431, 887, 867,
	756, 820, 875, 0, 0, 209, 878, 815, 0, 843,
	0, 893, 751, 835, 0, 754, 758, 889, 871, 786,
	249, 0, 0, 0, 0, 0, 0, 0, 812, 822,
	855, 806, 0, 0, 0, 0, 0, 1683, 0, 784,
	0, 831, 0, 0, 0, 763, 755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 810, 0,
	0, 0, 766, 0, 785, 856, 0, 749, 268, 760,
	334, 231, 0, 860, 870, 807, 465, 874, 805, 804,
	850, 764, 866, 798, 302, 762, 293, 188, 205, 0,
	796, 344, 385, 391, 865, 781, 790, 229, 788, 389,
	358, 449, 213, 257, 382, 363, 387, 370, 260, 830,
	848, 388, 308, 436, 377, 446, 466, 467, 237, 338,
	456, 425, 462, 478, 206, 234, 352, 418, 452, 409,
	331, 432, 433, 292, 408, 266, 191, 306, 472, 204,
	397, 221, 211, 197, 420, 444, 218, 400, 0, 0,
	480, 199, 442, 417, 327, 289, 290, 198, 0, 381,
	242, 264, 232, 347, 439, 440, 230, 481, 208, 461,
	201, 1074, 460, 340, 435, 443, 328, 318, 200, 441,
	326, 317, 295, 253, 275, 375, 311, 376, 276, 336,
	335, 337, 194, 453, 0, 195, 0, 414, 454, 482,
	214, 215, 216, 776, 252, 256, 263, 265, 271, 272,
	279, 304, 351, 374, 372, 378, 861, 430, 447, 457,
	464, 470, 471, 473, 474, 475, 476, 477, 339, 278,
	410, 294, 309, 853, 892, 357, 390, 219, 451, 411,
	771, 775, 769, 770, 825, 826, 772, 883, 884, 885,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 857,
	765, 0, 773, 774, 0, 863, 872, 873, 501, 319,
	402, 448, 296, 297, 298, 829, 187, 202, 305, 888,
	379, 261, 479, 459, 455, 750, 768, 236, 779, 787,
	0, 793, 801, 802, 814, 816, 817, 818, 819, 330,
	836, 837, 839, 847, 849, 852, 854, 859, 869, 891,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 315, 321, 322, 323, 324,
	341, 342, 343, 346, 349, 350, 353, 355, 356, 359,
	366, 367, 368, 369, 371, 373, 380, 384, 392, 393,
	394, 395, 396, 398, 399, 404, 405, 406, 407, 415,
	419, 437, 438, 450, 463, 468, 270, 445, 469, 0,
	314, 828, 834, 316, 254, 273, 284, 842, 458, 416,
	207, 386, 262, 196, 225, 210, 233, 248, 251, 288,
	325, 332, 361, 365, 267, 245, 223, 383, 220, 401,
	422, 423, 424, 426, 329, 240, 364, 824, 851, 312,
	428, 429, 280, 877, 862, 427, 0, 809, 880, 778,
	797, 890, 800, 803, 844, 757, 823, 348, 794, 0,
	782, 752, 789, 753, 780, 811, 244, 777, 864, 827,
	879, 303, 241, 759, 783, 362, 799, 193, 846, 403,
	228, 313, 310, 434, 255, 247, 243, 227, 281, 320,
	360, 421, 354, 886, 307, 833, 0, 412, 333, 0,
	0, 0, 813, 868, 821, 858, 808, 845, 767, 832,
	881, 795, 841, 882, 287, 226, 192, 345, 413, 259,
	0, 87, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	299, 301, 300, 791, 838, 876, 792, 840, 239, 285,
	246, 238, 431, 887, 867, 756, 820, 875, 0, 0,
	209, 878, 815, 0, 843, 0, 893, 751, 835, 0,
	754, 758, 889, 871, 786, 249, 0, 0, 0, 0,
	0, 0, 0, 812, 822, 855, 806, 0, 0, 0,
	0, 0, 0, 0, 784, 0, 831, 0, 0, 0,
	763, 755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 810, 0, 0, 0, 766, 0, 785,
	856, 0, 749, 268, 760, 334, 231, 0, 860, 870,
	807, 465, 874, 805, 804, 850, 764, 866, 798, 302,
	762, 293, 188, 205, 0, 796, 344, 385, 391, 865,
	781, 790, 229, 788, 389, 358, 449, 213, 257, 382,
	363, 387, 370, 260, 830, 848, 388, 308, 436, 377,
	446, 466, 467, 237, 338, 456, 425, 462, 478, 206,
	234, 352, 418, 452, 409, 331, 432, 433, 292, 408,
	266, 191, 306, 472, 204, 397, 221, 211, 197, 420,
	444, 218, 400, 0, 0, 480, 199, 442, 417, 327,
	289, 290, 198, 0, 381, 242, 264, 232, 347, 439,
	440, 230, 481, 208, 461, 201, 1074, 460, 340, 435,
	443, 328, 318, 200, 441, 326, 317, 295, 253, 275,
	375, 311, 376, 276, 336, 335, 337, 194, 453, 0,
	195, 0, 414, 454, 482, 214, 215, 216, 776, 252,
	256, 263, 265, 271, 272, 279, 304, 351, 374, 372,
	378, 861, 430, 447, 457, 464, 470, 471, 473, 474,
	475, 476, 477, 339, 278, 410, 294, 309, 853, 892,
	357, 390, 219, 451, 411, 771, 775, 769, 770, 825,
	826, 772, 883, 884, 885, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 857, 765, 0, 773, 774, 0,
	863, 872, 873, 501, 319, 402, 448, 296, 297, 298,
	829, 187, 202, 305, 888, 379, 261, 479, 459, 455,
	750, 768, 236, 779, 787, 0, 793, 801, 802, 814,
	816, 817, 818, 819, 330, 836, 837, 839, 847, 849,
	852, 854, 859, 869, 891, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	315, 321, 322, 323, 324, 341, 342, 343, 346, 349,
	350, 353, 355, 356, 359, 366, 367, 368, 369, 371,
	373, 380, 384, 392, 393, 394, 395, 396, 398, 399,
	404, 405, 406, 407, 415, 419, 437, 438, 450, 463,
	468, 270, 445, 469, 0, 314, 828, 834, 316, 254,
	273, 284, 842, 458, 416, 207, 386, 262, 196, 225,
	210, 233, 248, 251, 288, 325, 332, 361, 365, 267,
	245, 223, 383, 220, 401, 422, 423, 424, 426, 329,
	240, 364, 824, 851, 312, 428, 429, 280, 877, 862,
	427, 0, 809, 880, 778, 797, 890, 800, 803, 844,
	757, 823, 348, 794, 0, 782, 752, 789, 753, 780,
	811, 244, 777, 864, 827, 879, 303, 241, 759, 783,
	362, 799, 193, 846, 403, 228, 313, 310, 434, 255,
	247, 243, 227, 281, 320, 360, 421, 354, 886, 307,
	833, 0, 412, 333, 0, 0, 0, 813, 868, 821,
	858, 808, 845, 767, 832, 881, 795, 841, 882, 287,
	226, 192, 345, 413, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 299, 301, 300, 791, 838,
	876, 792, 840, 239, 285, 246, 238, 431, 887, 867,
	756, 820, 875, 0, 0, 209, 878, 815, 0, 843,
	0, 893, 751, 835, 0, 754, 758, 889, 871, 786,
	249, 0, 0, 0, 0, 0, 0, 0, 812, 822,
	855, 806, 0, 0, 0, 0, 0, 0, 0, 784,
	0, 831, 0, 0, 0, 763, 755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 810, 0,
	0, 0, 766, 0, 785, 856, 0, 749, 268, 760,
	334, 231, 0, 860, 870, 807, 465, 874, 805, 804,
	850, 764, 866, 798, 302, 762, 293, 188, 205, 0,
	796, 344, 385, 391, 865, 781, 790, 229, 788, 389,
	358, 449, 213, 257, 382, 363, 387, 370, 260, 830,
	848, 388, 308, 436, 377, 446, 466, 467, 237, 338,
	456, 425, 462, 478, 206, 234, 352, 418, 452, 409,
	331, 432, 433, 292, 408, 266, 191, 306, 472, 204,
	397, 221, 211, 197, 420, 444, 218, 400, 0, 0,
	480, 199, 442, 417, 327, 289, 290, 198, 0, 381,
	242, 264, 232, 347, 439, 440, 230, 481, 208, 461,
	201, 1074, 460, 340, 435, 443, 328, 318, 200, 441,
	326, 317, 295, 253, 275, 375, 311, 376, 276, 336,
	335, 337, 194, 453, 0, 195, 0, 414, 454, 482,
	214, 215, 216, 776, 252, 256, 263, 265, 271, 272,
	279, 304, 351, 374, 372, 378, 861, 430, 447, 457,
	464, 470, 471, 473, 474, 475, 476, 477, 339, 278,
	410, 294, 309, 853, 892, 357, 390, 219, 451, 411,
	771, 775, 769, 770, 825, 826, 772, 883, 884, 885,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 857,
	765, 0, 773, 774, 0, 863, 872, 873, 501, 319,
	402, 448, 296, 297, 298, 829, 187, 202, 305, 888,
	379, 261, 479, 459, 455, 750, 768, 236, 779, 787,
	0, 793, 801, 802, 814, 816, 817, 818, 819, 330,
	836, 837, 839, 847, 849, 852, 854, 859, 869, 891,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 315, 321, 322, 323, 324,
	341, 342, 343, 346, 349, 350, 353, 355, 356, 359,
	366, 367, 368, 369, 371, 373, 380, 384, 392, 393,
	394, 395, 396, 398, 399, 404, 405, 406, 407, 415,
	419, 437, 438, 450, 463, 468, 270, 445, 469, 0,
	314, 828, 834, 316, 254, 273, 284, 842, 458, 416,
	207, 386, 262, 196, 225, 210, 233, 248, 251, 288,
	325, 332, 361, 365, 267, 245, 223, 383, 220, 401,
	422, 423, 424, 426, 329, 240, 364, 824, 851, 312,
	428, 429, 280, 877, 862, 427, 0, 809, 880, 778,
	797, 890, 800, 803, 844, 757, 823, 348, 794, 0,
	782, 752, 789, 753, 780, 811, 244, 777, 864, 827,
	879, 303, 241, 759, 783, 362, 799, 193, 846, 403,
	228, 313, 310, 434, 255, 247, 243, 227, 281, 320,
	360, 421, 354, 886, 307, 833, 0, 412, 333, 0,
	0, 0, 813, 868, 821, 858, 808, 845, 767, 832,
	881, 795, 841, 882, 287, 226, 192, 345, 413, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	299, 301, 300, 791, 838, 876, 792, 840, 239, 285,
	246, 238, 431, 887, 867, 756, 820, 875, 0, 0,
	894, 878, 815, 0, 843, 0, 893, 751, 835, 0,
	754, 758, 889, 871, 786, 249, 0, 0, 0, 0,
	0, 0, 0, 812, 822, 855, 806, 0, 0, 0,
	0, 0, 0, 0, 784, 0, 831, 0, 0, 0,
	763, 755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 810, 0, 0, 0, 766, 0, 785,
	856, 0, 749, 268, 760, 334, 231, 0, 860, 870,
	807, 465, 874, 805, 804, 850, 764, 866, 798, 302,
	762, 293, 188, 205, 0, 796, 344, 385, 391, 865,
	781, 790, 229, 788, 389, 358, 449, 213, 257, 382,
	363, 387, 370, 260, 830, 848, 388, 308, 436, 377,
	446, 466, 467, 237, 338, 456, 425, 462, 478, 206,
	234, 352, 418, 452, 409, 331, 432, 433, 292, 408,
	266, 191, 306, 472, 204, 397, 221, 211, 197, 420,
	444, 218, 400, 0, 0, 480, 199, 442, 417, 327,
	289, 290, 198, 0, 381, 242, 264, 232, 347, 439,
	440, 230, 481, 208, 461, 201, 761, 460, 340, 435,
	443, 328, 318, 200, 441, 326, 317, 295, 253, 275,
	375, 311, 376, 276, 336, 335, 337, 194, 453, 0,
	195, 0, 414, 454, 482, 214, 215, 216, 776, 252,
	256, 263, 265, 271, 272, 279, 304, 351, 374, 372,
	378, 861, 430, 447, 457, 464, 470, 471, 473, 474,
	475, 476, 477, 748, 742, 741, 294, 309, 853, 892,
	357, 390, 219, 451, 411, 771, 775, 769, 770, 825,
	826, 772, 883, 884, 885, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 857, 765, 0, 773, 774, 0,
	863, 872, 873, 501, 319, 402, 448, 296, 297, 298,
	829, 187, 202, 305, 888, 379, 261, 479, 459, 455,
	750, 768, 236, 779, 787, 0, 793, 801, 802, 814,
	816, 817, 818, 819, 330, 836, 837, 839, 847, 849,
	852, 854, 859, 869, 891, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	315, 321, 322, 323, 324, 341, 342, 343, 346, 349,
	350, 353, 355, 356, 359, 366, 367, 368, 369, 371,
	373, 380, 384, 392, 393, 394, 395, 396, 398, 399,
	404, 405, 406, 407, 415, 419, 437, 438, 450, 463,
	468, 270, 445, 469, 0, 314, 828, 834, 316, 254,
	273, 284, 842, 458, 416, 207, 386, 262, 196, 225,
	210, 233, 248, 251, 288, 325, 332, 361, 365, 267,
	245, 223, 383, 220, 401, 422, 423, 424, 426, 329,
	240, 364, 824, 851, 312, 428, 429, 280, 877, 862,
	427, 0, 809, 880, 778, 797, 890, 800, 803, 844,
	757, 823, 348, 794, 0, 782, 752, 789, 753, 780,
	811, 244, 777, 864, 827, 879, 303, 241, 759, 783,
	362, 799, 193, 846, 403, 228, 313, 310, 434, 255,
	247, 243, 227, 281, 320, 360, 421, 354, 886, 307,
	833, 0, 412, 333, 0, 0, 0, 813, 868, 821,
	858, 808, 845, 767, 832, 881, 795, 841, 882, 287,
	226, 192, 345, 413, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 299, 301, 300, 791, 838,
	876, 792, 840, 239, 285, 246, 238, 431, 887, 867,
	756, 820, 875, 0, 0, 894, 878, 815, 0, 843,
	0, 893, 751, 835, 0, 754, 758, 889, 871, 786,
	249, 0, 0, 0, 0, 0, 0, 0, 812, 822,
	855, 806, 0, 0, 0, 0, 0, 0, 0, 784,
	0, 831, 0, 0, 0, 763, 755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 810, 0,
	0, 0, 766, 0, 785, 856, 0, 749, 268, 760,
	334, 231, 0, 860, 870, 807, 465, 874, 805, 804,
	850, 764, 866, 798, 302, 762, 293, 188, 205, 0,
	796, 344, 385, 391, 865, 781, 790, 229, 788, 389,
	358, 449, 213, 257, 382, 363, 387, 370, 260, 830,
	848, 388, 308, 436, 377, 446, 466, 467, 237, 338,
	456, 425, 462, 478, 206, 234, 352, 418, 452, 409,
	331, 432, 433, 292, 408, 266, 191, 306, 472, 204,
	397, 221, 211, 197, 420, 1261, 218, 400, 0, 0,
	480, 199, 442, 417, 327, 289, 290, 198, 0, 381,
	242, 264, 232, 347, 439, 440, 230, 481, 208, 461,
	201, 761, 460, 340, 435, 443, 328, 318, 200, 441,
	326, 317, 295, 253, 275, 375, 311, 376, 276, 336,
	335, 337, 194, 453, 0, 195, 0, 414, 454, 482,
	214, 215, 216, 776, 252, 256, 263, 265, 271, 272,
	279, 304, 351, 374, 372, 378, 861, 430, 447, 457,
	464, 470, 471, 473, 474, 475, 476, 477, 748, 742,
	741, 294, 309, 853, 892, 357, 390, 219, 451, 411,
	771, 775, 769, 770, 825, 826, 772, 883, 884, 885,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 857,
	765, 0, 773, 774, 0, 863, 872, 873, 501, 319,
	402, 448, 296, 297, 298, 829, 187, 202, 305, 888,
	379, 261, 479, 459, 455, 750, 768, 236, 779, 787,
	0, 793, 801, 802, 814, 816, 817, 818, 819, 330,
	836, 837, 839, 847, 849, 852, 854, 859, 869, 891,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 315, 321, 322, 323, 324,
	341, 342, 343, 346, 349, 350, 353, 355, 356, 359,
	366, 367, 368, 369, 371, 373, 380, 384, 392, 393,
	394, 395, 396, 398, 399, 404, 405, 406, 407, 415,
	419, 437, 438, 450, 463, 468, 270, 445, 469, 0,
	314, 828, 834, 316, 254, 273, 284, 842, 458, 416,
	207, 386, 262, 196, 225, 210, 233, 248, 251, 288,
	325, 332, 361, 365, 267, 245, 223, 383, 220, 401,
	422, 423, 424, 426, 329, 240, 364, 824, 851, 312,
	428, 429, 280, 877, 862, 427, 0, 809, 880, 778,
	797, 890, 800, 803, 844, 757, 823, 348, 794, 0,
	782, 752, 789, 753, 780, 811, 244, 777, 864, 827,
	879, 303, 241, 759, 783, 362, 799, 193, 846, 403,
	228, 313, 310, 434, 255, 247, 243, 227, 281, 320,
	360, 421, 354, 886, 307, 833, 0, 412, 333, 0,
	0, 0, 813, 868, 821, 858, 808, 845, 767, 832,
	881, 795, 841, 882, 287, 226, 192, 345, 413, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	299, 301, 300, 791, 838, 876, 792, 840, 239, 285,
	246, 238, 431, 887, 867, 756, 820, 875, 0, 0,
	894, 878, 815, 0, 843, 0, 893, 751, 835, 0,
	754, 758, 889, 871, 786, 249, 0, 0, 0, 0,
	0, 0, 0, 812, 822, 855, 806, 0, 0, 0,
	0, 0, 0, 0, 784, 0, 831, 0, 0, 0,
	763, 755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 810, 0, 0, 0, 766, 0, 785,
	856, 0, 749, 268, 760, 334, 231, 0, 860, 870,
	807, 465, 874, 805, 804, 850, 764, 866, 798, 302,
	762, 293, 188, 205, 0, 796, 344, 385, 391, 865,
	781, 790, 229, 788, 389, 358, 449, 213, 257, 382,
	363, 387, 370, 260, 830, 848, 388, 308, 436, 377,
	446, 466, 467, 237, 338, 456, 425, 462, 478, 206,
	234, 352, 418, 452, 409, 331, 432, 433, 292, 408,
	266, 191, 306, 472, 204, 397, 221, 211, 197, 420,
	739, 218, 400, 0, 0, 480, 199, 442, 417, 327,
	289, 290, 198, 0, 381, 242, 264, 232, 347, 439,
	440, 230, 481, 208, 461, 201, 761, 460, 340, 435,
	443, 328, 318, 200, 441, 326, 317, 295, 253, 275,
	375, 311, 376, 276, 336, 335, 337, 194, 453, 0,
	195, 0, 414, 454, 482, 214, 215, 216, 776, 252,
	256, 263, 265, 271, 272, 279, 304, 351, 374, 372,
	378, 861, 430, 447, 457, 464, 470, 471, 473, 474,
	475, 476, 477, 748, 742, 741, 294, 309, 853, 892,
	357, 390, 219, 451, 411, 771, 775, 769, 770, 825,
	826, 772, 883, 884, 885, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 857, 765, 0, 773, 774, 0,
	863, 872, 873, 501, 319, 402, 448, 296, 297, 298,
	829, 187, 202, 305, 888, 379, 261, 479, 459, 455,
	750, 768, 236, 779, 787, 0, 793, 801, 802, 814,
	816, 817, 818, 819, 330, 836, 837, 839, 847, 849,
	852, 854, 859, 869, 891, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	315, 321, 322, 323, 324, 341, 342, 343, 346, 349,
	350, 353, 355, 356, 359, 366, 367, 368, 369, 371,
	373, 380, 384, 392, 393, 394, 395, 396, 398, 399,
	404, 405, 406, 407, 415, 419, 437, 438, 450, 463,
	468, 270, 445, 469, 0, 314, 828, 834, 316, 254,
	273, 284, 842, 458, 416, 207, 386, 262, 196, 225,
	210, 233, 248, 251, 288, 325, 332, 361, 365, 267,
	245, 223, 383, 220, 401, 422, 423, 424, 426, 329,
	240, 364, 824, 851, 312, 428, 429, 280, 427, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 1628, 0, 582, 0, 0, 0, 244,
	587, 0, 0, 0, 303, 241, 0, 1629, 362, 0,
	193, 0, 403, 228, 313, 310, 434, 255, 247, 243,
	227, 281, 320, 360, 421, 354, 594, 307, 0, 0,
	412, 333, 0, 0, 0, 0, 0, 589, 590, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	345, 413, 259, 0, 87, 0, 0, 184, 185, 186,
	634, 641, 642, 643, 644, 645, 635, 637, 0, 0,
	217, 636, 224, 605, 607, 606, 603, 639, 646, 647,
	0, 239, 285, 246, 238, 431, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 565, 579, 0, 593, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 576, 577, 728, 0, 0, 0, 619,
	0, 578, 0, 0, 586, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 334, 231,
	0, 618, 0, 0, 465, 0, 0, 616, 0, 0,
	0, 0, 302, 0, 293, 188, 205, 0, 0, 344,
	385, 391, 0, 0, 0, 229, 0, 389, 358, 449,
	213, 257, 382, 363, 387, 370, 260, 0, 0, 388,
	308, 436, 377, 446, 466, 467, 237, 338, 456, 425,
	462, 478, 206, 234, 352, 418, 452, 409, 331, 432,
	433, 292, 408, 266, 191, 306, 472, 204, 397, 221,
	211, 197, 420, 444, 218, 400, 0, 0, 480, 199,
	442, 417, 327, 289, 290, 198, 0, 381, 242, 264,
	232, 347, 439, 440, 230, 481, 208, 461, 201, 0,
	460, 340, 435, 443, 328, 318, 200, 441, 326, 317,
	295, 253, 275, 375, 311, 376, 276, 336, 335, 337,
	194, 453, 0, 195, 0, 414, 454, 482, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 304,
	351, 374, 372, 378, 0, 430, 447, 457, 464, 470,
	471, 473, 474, 475, 476, 477, 339, 278, 410, 294,
	309, 0, 0, 357, 390, 219, 451, 411, 625, 617,
	598, 600, 626, 627, 595, 596, 599, 628, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 620, 585, 584,
	0, 591, 592, 0, 601, 602, 604, 608, 609, 610,
	611, 612, 613, 583, 187, 202, 305, 0, 379, 261,
	479, 459, 455, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 315, 321, 322, 323, 324, 341, 342,
	343, 346, 349, 350, 353, 355, 356, 359, 366, 367,
	368, 369, 371, 373, 380, 384, 392, 393, 394, 395,
	396, 398, 399, 404, 405, 406, 407, 415, 419, 437,
	438, 450, 463, 468, 270, 445, 469, 0, 314, 0,
	0, 316, 254, 273, 284, 0, 458, 416, 207, 386,
	262, 196, 225, 210, 233, 248, 251, 288, 325, 332,
	361, 365, 267, 245, 223, 383, 220, 401, 422, 423,
	424, 426, 329, 240, 364, 427, 0, 312, 428, 429,
	280, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 582, 0, 0, 0, 244, 587, 0, 0,
	0, 303, 241, 0, 0, 362, 0, 193, 0, 403,
	228, 313, 310, 434, 255, 247, 243, 227, 281, 320,
	360, 421, 354, 594, 307, 0, 0, 412, 333, 0,
	0, 0, 0, 0, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 345, 413, 259,
	0, 87, 0, 0, 184, 185, 186, 634, 641, 642,
	643, 644, 645, 635, 637, 0, 0, 217, 636, 224,
	605, 607, 606, 603, 639, 646, 647, 0, 239, 285,
	246, 238, 431, 0, 0, 1617, 1618, 1619, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 565, 579,
	0, 593, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	576, 577, 0, 0, 0, 0, 619, 0, 578, 0,
	0, 586, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 334, 231, 0, 618, 0,
	0, 465, 0, 0, 616, 0, 0, 0, 0, 302,
	0, 293, 188, 205, 0, 0, 344, 385, 391, 0,
	0, 0, 229, 0, 389, 358, 449, 213, 257, 382,
	363, 387, 370, 260, 0, 0, 388, 308, 436, 377,
	446, 466, 467, 237, 338, 456, 425, 462, 478, 206,
	234, 352, 418, 452, 409, 331, 432, 433, 292, 408,
	266, 191, 306, 472, 204, 397, 221, 211, 197, 420,
	444, 218, 400, 0, 0, 480, 199, 442, 417, 327,
	289, 290, 198, 0, 381, 242, 264, 232, 347, 439,
	440, 230, 481, 208, 461, 201, 0, 460, 340, 435,
	443, 328, 318, 200, 441, 326, 317, 295, 253, 275,
	375, 311, 376, 276, 336, 335, 337, 194, 453, 0,
	195, 0, 414, 454, 482, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 304, 351, 374, 372,
	378, 0, 430, 447, 457, 464, 470, 471, 473, 474,
	475, 476, 477, 339, 278, 410, 294, 309, 0, 0,
	357, 390, 219, 451, 411, 625, 617, 598, 600, 626,
	627, 595, 596, 599, 628, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 620, 585, 584, 0, 591, 592,
	0, 601, 602, 604, 608, 609, 610, 611, 612, 613,
	583, 187, 202, 305, 0, 379, 261, 479, 459, 455,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	315, 321, 322, 323, 324, 341, 342, 343, 346, 349,
	350, 353, 355, 356, 359, 366, 367, 368, 369, 371,
	373, 380, 384, 392, 393, 394, 395, 396, 398, 399,
	404, 405, 406, 407, 415, 419, 437, 438, 450, 463,
	468, 270, 445, 469, 0, 314, 0, 0, 316, 254,
	273, 284, 0, 458, 416, 207, 386, 262, 196, 225,
	210, 233, 248, 251, 288, 325, 332, 361, 365, 267,
	245, 223, 383, 220, 401, 422, 423, 424, 426, 329,
	240, 364, 427, 0, 312, 428, 429, 280, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 582,
	0, 0, 0, 244, 587, 0, 0, 0, 303, 241,
	0, 0, 362, 0, 193, 0, 403, 228, 313, 310,
	434, 255, 247, 243, 227, 281, 320, 360, 421, 354,
	594, 307, 0, 0, 412, 333, 0, 0, 0, 0,
	0, 589, 590, 0, 0, 0, 0, 0, 0, 1710,
	0, 287, 226, 192, 345, 413, 259, 0, 87, 0,
	0, 184, 185, 186, 634, 641, 642, 643, 644, 645,
	635, 637, 0, 0, 217, 636, 224, 605, 607, 606,
	603, 639, 646, 647, 1711, 239, 285, 246, 238, 431,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 565, 579, 0, 593, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 576, 577, 0,
	0, 0, 0, 619, 0, 578, 0, 0, 586, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 334, 231, 0, 618, 0, 0, 465, 0,
	0, 616, 0, 0, 0, 0, 302, 0, 293, 188,
	205, 0, 0, 344, 385, 391, 0, 0, 0, 229,
	0, 389, 358, 449, 213, 257, 382, 363, 387, 370,
	260, 0, 0, 388, 308, 436, 377, 446, 466, 467,
	237, 338, 456, 425, 462, 478, 206, 234, 352, 418,
	452, 409, 331, 432, 433, 292, 408, 266, 191, 306,
	472, 204, 397, 221, 211, 197, 420, 444, 218, 400,
	0, 0, 480, 199, 442, 417, 327, 289, 290, 198,
	0, 381, 242, 264, 232, 347, 439, 440, 230, 481,
	208, 461, 201, 0, 460, 340, 435, 443, 328, 318,
	200, 441, 326, 317, 295, 253, 275, 375, 311, 376,
	276, 336, 335, 337, 194, 453, 0, 195, 0, 414,
	454, 482, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 304, 351, 374, 372, 378, 0, 430,
	447, 457, 464, 470, 471, 473, 474, 475, 476, 477,
	339, 278, 410, 294, 309, 0, 0, 357, 390, 219,
	451, 411, 625, 617, 598, 600, 626, 627, 595, 596,
	599, 628, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 620, 585, 584, 0, 591, 592, 0, 601, 602,
	604, 608, 609, 610, 611, 612, 613, 583, 187, 202,
	305, 0, 379, 261, 479, 459, 455, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 315, 321, 322,
	323, 324, 341, 342, 343, 346, 349, 350, 353, 355,
	356, 359, 366, 367, 368, 369, 371, 373, 380, 384,
	392, 393, 394, 395, 396, 398, 399, 404, 405, 406,
	407, 415, 419, 437, 438, 450, 463, 468, 270, 445,
	469, 0, 314, 0, 0, 316, 254, 273, 284, 0,
	458, 416, 207, 386, 262, 196, 225, 210, 233, 248,
	251, 288, 325, 332, 361, 365, 267, 245, 223, 383,
	220, 401, 422, 423, 424, 426, 329, 240, 364, 78,
	427, 312, 428, 429, 280, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 582, 0, 0,
	0, 244, 587, 0, 0, 0, 303, 241, 0, 0,
	362, 0, 193, 0, 403, 228, 313, 310, 434, 255,
	247, 243, 227, 281, 320, 360, 421, 354, 594, 307,
	0, 0, 412, 333, 0, 0, 0, 0, 0, 589,
	590, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 345, 413, 259, 0, 87, 0, 0, 184,
	185, 186, 634, 641, 642, 643, 644, 645, 635, 637,
	0, 0, 217, 636, 224, 605, 607, 606, 603, 639,
	646, 647, 0, 239, 285, 246, 238, 431, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 565, 579, 0, 593, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 576, 577, 0, 0, 0,
	0, 619, 0, 578, 0, 0, 586, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	334, 231, 0, 618, 0, 0, 465, 0, 0, 616,
	0, 0, 0, 0, 302, 0, 293, 188, 205, 0,
	0, 344, 385, 391, 0, 0, 0, 229, 0, 389,
	358, 449, 213, 257, 382, 363, 387, 370, 260, 0,
	0, 388, 308, 436, 377, 446, 466, 467, 237, 338,
	456, 425, 462, 478, 206, 234, 352, 418, 452, 409,
	331, 432, 433, 292, 408, 266, 191, 306, 472, 204,
	397, 221, 211, 197, 420, 444, 218, 400, 0, 0,
	480, 199, 442, 417, 327, 289, 290, 198, 0, 381,
	242, 264, 232, 347, 439, 440, 230, 481, 208, 461,
	201, 0, 460, 340, 435, 443, 328, 318, 200, 441,
	326, 317, 295, 253, 275, 375, 311, 376, 276, 336,
	335, 337, 194, 453, 0, 195, 0, 414, 454, 482,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 304, 351, 374, 372, 378, 0, 430, 447, 457,
	464, 470, 471, 473, 474, 475, 476, 477, 339, 278,
	410, 294, 309, 0, 0, 357, 390, 219, 451, 411,
	625, 617, 598, 600, 626, 627, 595, 596, 599, 628,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 620,
	585, 584, 0, 591, 592, 0, 601, 602, 604, 608,
	609, 610, 611, 612, 613, 583, 187, 202, 305, 86,
	379, 261, 479, 459, 455, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 315, 321, 322, 323, 324,
	341, 342, 343, 346, 349, 350, 353, 355, 356, 359,
	366, 367, 368, 369, 371, 373, 380, 384, 392, 393,
	394, 395, 396, 398, 399, 404, 405, 406, 407, 415,
	419, 437, 438, 450, 463, 468, 270, 445, 469, 0,
	314, 0, 0, 316, 254, 273, 284, 0, 458, 416,
	207, 386, 262, 196, 225, 210, 233, 248, 251, 288,
	325, 332, 361, 365, 267, 245, 223, 383, 220, 401,
	422, 423, 424, 426, 329, 240, 364, 427, 0, 312,
	428, 429, 280, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 582, 0, 0, 0, 244, 587,
	0, 0, 0, 303, 241, 0, 0, 362, 0, 193,
	0, 403, 228, 313, 310, 434, 255, 247, 243, 227,
	281, 320, 360, 421, 354, 594, 307, 0, 0, 412,
	333, 0, 0, 0, 0, 0, 589, 590, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 345,
	413, 259, 0, 87, 0, 0, 184, 185, 186, 634,
	641, 642, 643, 644, 645, 635, 637, 0, 0, 217,
	636, 224, 605, 607, 606, 603, 639, 646, 647, 0,
	239, 285, 246, 238, 431, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	565, 579, 0, 593, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 576, 577, 0, 0, 0, 0, 619, 0,
	578, 0, 0, 586, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 683,
	684, 685, 686, 687, 688, 588, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 334, 231, 0,
	618, 0, 0, 465, 0, 0, 616, 0, 0, 0,
	0, 302, 0, 293, 188, 205, 0, 0, 344, 385,
	391, 0, 0, 0, 229, 0, 389, 358, 449, 213,
	257, 382, 363, 387, 370, 260, 2566, 0, 388, 308,
	436, 377, 446, 466, 467, 237, 338, 456, 425, 462,
	478, 206, 234, 352, 418, 452, 409, 331, 432, 433,
	292, 408, 266, 191, 306, 472, 204, 397, 221, 211,
	197, 420, 444, 218, 400, 0, 0, 480, 199, 442,
	417, 327, 289, 290, 198, 0, 381, 242, 264, 232,
	347, 439, 440, 230, 481, 208, 461, 201, 0, 460,
	340, 435, 443, 328, 318, 200, 441, 326, 317, 295,
	253, 275, 375, 311, 376, 276, 336, 335, 337, 194,
	453, 0, 195, 0, 414, 454, 482, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 304, 351,
	374, 372, 378, 0, 430, 447, 457, 464, 470, 471,
	473, 474, 475, 476, 477, 339, 278, 410, 294, 309,
	0, 0, 357, 390, 219, 451, 411, 625, 617, 598,
	600, 626, 627, 595, 596, 599, 628, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 620, 585, 584, 0,
	591, 592, 0, 601, 602, 604, 608, 609, 610, 611,
	612, 613, 583, 187, 202, 305, 0, 379, 261, 479,
	459, 455, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 315, 321, 322, 323, 324, 341, 342, 343,
	346, 349, 350, 353, 355, 356, 359, 366, 367, 368,
	369, 371, 373, 380, 384, 392, 393, 394, 395, 396,
	398, 399, 404, 405, 406, 407, 415, 419, 437, 438,
	450, 463, 468, 270, 445, 469, 0, 314, 0, 0,
	316, 254, 273, 284, 0, 458, 416, 207, 386, 262,
	196, 225, 210, 233, 248, 251, 288, 325, 332, 361,
	365, 267, 245, 223, 383, 220, 401, 422, 423, 424,
	426, 329, 240, 364, 427, 0, 312, 428, 429, 280,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 582, 0, 0, 0, 244, 587, 0, 0, 0,
	303, 241, 0, 0, 362, 0, 193, 0, 403, 228,
	313, 310, 434, 255, 247, 243, 227, 281, 320, 360,
	421, 354, 594, 307, 0, 0, 412, 333, 0, 0,
	0, 0, 0, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 345, 413, 259, 0,
	87, 0, 1229, 184, 185, 186, 634, 641, 642, 643,
	644, 645, 635, 637, 0, 0, 217, 636, 224, 605,
	607, 606, 603, 639, 646, 647, 0, 239, 285, 246,
	238, 431, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 565, 579, 0,
	593, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 576,
	577, 0, 0, 0, 0, 619, 0, 578, 0, 0,
	586, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 588, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 334, 231, 0, 618, 0, 0,
	465, 0, 0, 616, 0, 0, 0, 0, 302, 0,
	293, 188, 205, 0, 0, 344, 385, 391, 0, 0,
	0, 229, 0, 389, 358, 449, 213, 257, 382, 363,
	387, 370, 260, 0, 0, 388, 308, 436, 377, 446,
	466, 467, 237, 338, 456, 425, 462, 478, 206, 234,
	352, 418, 452, 409, 331, 432, 433, 292, 408, 266,
	191, 306, 472, 204, 397, 221, 211, 197, 420, 444,
	218, 400, 0, 0, 480, 199, 442, 417, 327, 289,
	290, 198, 0, 381, 242, 264, 232, 347, 439, 440,
	230, 481, 208, 461, 201, 0, 460, 340, 435, 443,
	328, 318, 200, 441, 326, 317, 295, 253, 275, 375,
	311, 376, 276, 336, 335, 337, 194, 453, 0, 195,
	0, 414, 454, 482, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 304, 351, 374, 372, 378,
	0, 430, 447, 457, 464, 470, 471, 473, 474, 475,
	476, 477, 339, 278, 410, 294, 309, 0, 0, 357,
	390, 219, 451, 411, 625, 617, 598, 600, 626, 627,
	595, 596, 599, 628, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 620, 585, 584, 0, 591, 592, 0,
	601, 602, 604, 608, 609, 610, 611, 612, 613, 583,
	187, 202, 305, 0, 379, 261, 479, 459, 455, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 315,
	321, 322, 323, 324, 341, 342, 343, 346, 349, 350,
	353, 355, 356, 359, 366, 367, 368, 369, 371, 373,
	380, 384, 392, 393, 394, 395, 396, 398, 399, 404,
	405, 406, 407, 415, 419, 437, 438, 450, 463, 468,
	270, 445, 469, 0, 314, 0, 0, 316, 254, 273,
	284, 0, 458, 416, 207, 386, 262, 196, 225, 210,
	233, 248, 251, 288, 325, 332, 361, 365, 267, 245,
	223, 383, 220, 401, 422, 423, 424, 426, 329, 240,
	364, 427, 0, 312, 428, 429, 280, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 0, 582, 0,
	0, 0, 244, 587, 0, 0, 0, 303, 241, 0,
	0, 362, 0, 193, 0, 403, 228, 313, 310, 434,
	255, 247, 243, 227, 281, 320, 360, 421, 354, 594,
	307, 0, 0, 412, 333, 0, 0, 0, 0, 0,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 345, 413, 259, 0, 87, 0, 0,
	184, 185, 186, 634, 641, 642, 643, 644, 645, 635,
	637, 0, 0, 217, 636, 224, 605, 607, 606, 603,
	639, 646, 647, 0, 239, 285, 246, 238, 431, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 565, 579, 0, 593, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 577, 728, 0,
	0, 0, 619, 0, 578, 0, 0, 586, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 334, 231, 0, 618, 0, 0, 465, 0, 0,
	616, 0, 0, 0, 0, 302, 0, 293, 188, 205,
	0, 0, 344, 385, 391, 0, 0, 0, 229, 0,
	389, 358, 449, 213, 257, 382, 363, 387, 370, 260,
	0, 0, 388, 308, 436, 377, 446, 466, 467, 237,
	338, 456, 425, 462, 478, 206, 234, 352, 418, 452,
	409, 331, 432, 433, 292, 408, 266, 191, 306, 472,
	204, 397, 221, 211, 197, 420, 444, 218, 400, 0,
	0, 480, 199, 442, 417, 327, 289, 290, 198, 0,
	381, 242, 264, 232, 347, 439, 440, 230, 481, 208,
	461, 201, 0, 460, 340, 435, 443, 328, 318, 200,
	441, 326, 317, 295, 253, 275, 375, 311, 376, 276,
	336, 335, 337, 194, 453, 0, 195, 0, 414, 454,
	482, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 304, 351, 374, 372, 378, 0, 430, 447,
	457, 464, 470, 471, 473, 474, 475, 476, 477, 339,
	278, 410, 294, 309, 0, 0, 357, 390, 219, 451,
	411, 625, 617, 598, 600, 626, 627, 595, 596, 599,
	628, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	620, 585, 584, 0, 591, 592, 0, 601, 602, 604,
	608, 609, 610, 611, 612, 613, 583, 187, 202, 305,
	0, 379, 261, 479, 459, 455, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 315, 321, 322, 323,
	324, 341, 342, 343, 346, 349, 350, 353, 355, 356,
	359, 366, 367, 368, 369, 371, 373, 380, 384, 392,
	393, 394, 395, 396, 398, 399, 404, 405, 406, 407,
	415, 419, 437, 438, 450, 463, 468, 270, 445, 469,
	0, 314, 0, 0, 316, 254, 273, 284, 0, 458,
	416, 207, 386, 262, 196, 225, 210, 233, 248, 251,
	288, 325, 332, 361, 365, 267, 245, 223, 383, 220,
	401, 422, 423, 424, 426, 329, 240, 364, 427, 0,
	312, 428, 429, 280, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 582, 0, 0, 0, 244,
	587, 0, 0, 0, 303, 241, 0, 0, 362, 0,
	193, 0, 403, 228, 313, 310, 434, 255, 247, 243,
	227, 281, 320, 360, 421, 354, 594, 307, 0, 0,
	412, 333, 0, 0, 0, 0, 0, 589, 590, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	345, 413, 259, 0, 87, 0, 0, 184, 185, 186,
	634, 641, 642, 643, 644, 645, 635, 637, 0, 0,
	217, 636, 224, 605, 607, 606, 603, 639, 646, 647,
	0, 239, 285, 246, 238, 431, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 565, 579, 0, 593, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 576, 577, 0, 0, 0, 0, 619,
	0, 578, 0, 0, 586, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 334, 231,
	0, 618, 0, 0, 465, 0, 0, 616, 0, 0,
	0, 0, 302, 0, 293, 188, 205, 0, 0, 344,
	385, 391, 0, 0, 0, 229, 0, 389, 358, 449,
	213, 257, 382, 363, 387, 370, 260, 0, 0, 388,
	308, 436, 377, 446, 466, 467, 237, 338, 456, 425,
	462, 478, 206, 234, 352, 418, 452, 409, 331, 432,
	433, 292, 408, 266, 191, 306, 472, 204, 397, 221,
	211, 197, 420, 444, 218, 400, 0, 0, 480, 199,
	442, 417, 327, 289, 290, 198, 0, 381, 242, 264,
	232, 347, 439, 440, 230, 481, 208, 461, 201, 0,
	460, 340, 435, 443, 328, 318, 200, 441, 326, 317,
	295, 253, 275, 375, 311, 376, 276, 336, 335, 337,
	194, 453, 0, 195, 0, 414, 454, 482, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 304,
	351, 374, 372, 378, 0, 430, 447, 457, 464, 470,
	471, 473, 474, 475, 476, 477, 339, 278, 410, 294,
	309, 0, 0, 357, 390, 219, 451, 411, 625, 617,
	598, 600, 626, 627, 595, 596, 599, 628, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 620, 585, 584,
	0, 591, 592, 0, 601, 602, 604, 608, 609, 610,
	611, 612, 613, 583, 187, 202, 305, 0, 379, 261,
	479, 459, 455, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 315, 321, 322, 323, 324, 341, 342,
	343, 346, 349, 350, 353, 355, 356, 359, 366, 367,
	368, 369, 371, 373, 380, 384, 392, 393, 394, 395,
	396, 398, 399, 404, 405, 406, 407, 415, 419, 437,
	438, 450, 463, 468, 270, 445, 469, 0, 314, 0,
	0, 316, 254, 273, 284, 0, 458, 416, 207, 386,
	262, 196, 225, 210, 233, 248, 251, 288, 325, 332,
	361, 365, 267, 245, 223, 383, 220, 401, 422, 423,
	424, 426, 329, 240, 364, 427, 0, 312, 428, 429,
	280, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 582, 0, 0, 0, 244, 587, 0, 0,
	0, 303, 241, 0, 0, 362, 0, 193, 0, 403,
	228, 313, 310, 434, 255, 247, 243, 227, 281, 320,
	360, 421, 354, 594, 307, 0, 0, 412, 333, 0,
	0, 0, 0, 0, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 345, 413, 259,
	0, 87, 0, 0, 184, 185, 186, 634, 641, 642,
	643, 644, 645, 635, 637, 0, 0, 217, 636, 224,
	605, 607, 606, 603, 639, 646, 647, 0, 239, 285,
	246, 238, 431, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 579,
	0, 593, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	576, 577, 0, 0, 0, 0, 619, 0, 578, 0,
	0, 586, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 334, 231, 0, 618, 0,
	0, 465, 0, 0, 616, 0, 0, 0, 0, 302,
	0, 293, 188, 205, 0, 0, 344, 385, 391, 0,
	0, 0, 229, 0, 389, 358, 449, 213, 257, 382,
	363, 387, 370, 260, 0, 0, 388, 308, 436, 377,
	446, 466, 467, 237, 338, 456, 425, 462, 478, 206,
	234, 352, 418, 452, 409, 331, 432, 433, 292, 408,
	266, 191, 306, 472, 204, 397, 221, 211, 197, 420,
	444, 218, 400, 0, 0, 480, 199, 442, 417, 327,
	289, 290, 198, 0, 381, 242, 264, 232, 347, 439,
	440, 230, 481, 208, 461, 201, 0, 460, 340, 435,
	443, 328, 318, 200, 441, 326, 317, 295, 253, 275,
	375, 311, 376, 276, 336, 335, 337, 194, 453, 0,
	195, 0, 414, 454, 482, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 304, 351, 374, 372,
	378, 0, 430, 447, 457, 464, 470, 471, 473, 474,
	475, 476, 477, 339, 278, 410, 294, 309, 0, 0,
	357, 390, 219, 451, 411, 625, 617, 598, 600, 626,
	627, 595, 596, 599, 628, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 620, 585, 584, 0, 591, 592,
	0, 601, 602, 604, 608, 609, 610, 611, 612, 613,
	583, 187, 202, 305, 0, 379, 261, 479, 459, 455,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	315, 321, 322, 323, 324, 341, 342, 343, 346, 349,
	350, 353, 355, 356, 359, 366, 367, 368, 369, 371,
	373, 380, 384, 392, 393, 394, 395, 396, 398, 399,
	404, 405, 406, 407, 415, 419, 437, 438, 450, 463,
	468, 270, 445, 469, 0, 314, 0, 0, 316, 254,
	273, 284, 0, 458, 416, 207, 386, 262, 196, 225,
	210, 233, 248, 251, 288, 325, 332, 361, 365, 267,
	245, 223, 383, 220, 401, 422, 423, 424, 426, 329,
	240, 364, 427, 0, 312, 428, 429, 280, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 303, 241,
	0, 0, 362, 0, 193, 0, 403, 228, 313, 310,
	434, 255, 247, 243, 227, 281, 320, 360, 421, 354,
	0, 307, 0, 0, 412, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 345, 413, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 299, 301, 300,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 431,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 942,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 334, 231, 0, 0, 0, 941, 465, 0,
	0, 0, 0, 0, 938, 939, 302, 902, 293, 188,
	205, 932, 936, 344, 385, 391, 0, 0, 0, 229,
	0, 389, 358, 449, 213, 257, 382, 363, 387, 370,
	260, 0, 0, 388, 308, 436, 377, 446, 466, 467,
	237, 338, 456, 425, 462, 478, 206, 234, 352, 418,
	452, 409, 331, 432, 433, 292, 408, 266, 191, 306,
	472, 204, 397, 221, 211, 197, 420, 444, 218, 400,
	0, 0, 480, 199, 442, 417, 327, 289, 290, 198,
	0, 381, 242, 264, 232, 347, 439, 440, 230, 481,
	208, 461, 201, 0, 460, 340, 435, 443, 328, 318,
	200, 441, 326, 317, 295, 253, 275, 375, 311, 376,
	276, 336, 335, 337, 194, 453, 0, 195, 0, 414,
	454, 482, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 304, 351, 374, 372, 378, 0, 430,
	447, 457, 464, 470, 471, 473, 474, 475, 476, 477,
	339, 278, 410, 294, 309, 0, 0, 357, 390, 219,
	451, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	501, 319, 402, 448, 296, 297, 298, 0, 187, 202,
	305, 0, 379, 261, 479, 459, 455, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 315, 321, 322,
	323, 324, 341, 342, 343, 346, 349, 350, 353, 355,
	356, 359, 366, 367, 368, 369, 371, 373, 380, 384,
	392, 393, 394, 395, 396, 398, 399, 404, 405, 406,
	407, 415, 419, 437, 438, 450, 463, 468, 270, 445,
	469, 0, 314, 0, 0, 316, 254, 273, 284, 0,
	458, 416, 207, 386, 262, 196, 225, 210, 233, 248,
	251, 288, 325, 332, 361, 365, 267, 245, 223, 383,
	220, 401, 422, 423, 424, 426, 329, 240, 364, 78,
	427, 312, 428, 429, 280, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 303, 241, 0, 0,
	362, 0, 193, 0, 403, 228, 313, 310, 434, 255,
	247, 243, 227, 281, 320, 360, 421, 354, 0, 307,
	0, 0, 412, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 345, 413, 259, 0, 87, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 299, 301, 300, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 431, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	334, 231, 0, 0, 0, 0, 465, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 293, 188, 205, 0,
	0, 344, 385, 391, 0, 0, 0, 229, 0, 389,
	358, 449, 213, 257, 382, 363, 387, 370, 260, 0,
	0, 388, 308, 436, 377, 446, 466, 467, 237, 338,
	456, 425, 462, 478, 206, 234, 352, 418, 452, 409,
	331, 432, 433, 292, 408, 266, 191, 306, 472, 204,
	397, 221, 211, 197, 420, 444, 218, 400, 0, 0,
	480, 199, 442, 417, 327, 289, 290, 198, 0, 381,
	242, 264, 232, 347, 439, 440, 230, 481, 208, 461,
	201, 0, 460, 340, 435, 443, 328, 318, 200, 441,
	326, 317, 295, 253, 275, 375, 311, 376, 276, 336,
	335, 337, 194, 453, 0, 195, 0, 414, 454, 482,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 304, 351, 374, 372, 378, 0, 430, 447, 457,
	464, 470, 471, 473, 474, 475, 476, 477, 339, 278,
	410, 294, 309, 0, 0, 357, 390, 219, 451, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 501, 319,
	402, 448, 296, 297, 298, 0, 187, 202, 305, 86,
	379, 261, 479, 459, 455, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 1698, 0, 0, 1697, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 315, 321, 322, 323, 324,
	341, 342, 343, 346, 349, 350, 353, 355, 356, 359,
	366, 367, 368, 369, 371, 373, 380, 384, 392, 393,
	394, 395, 396, 398, 399, 404, 405, 406, 407, 415,
	419, 437, 438, 450, 463, 468, 270, 445, 469, 0,
	314, 0, 0, 316, 254, 273, 284, 0, 458, 416,
	207, 386, 262, 196, 225, 210, 233, 248, 251, 288,
	325, 332, 361, 365, 267, 245, 223, 383, 220, 401,
	422, 423, 424, 426, 329, 240, 364, 427, 0, 312,
	428, 429, 280, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 1249, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 303, 241, 0, 0, 362, 0, 193,
	0, 403, 228, 313, 310, 434, 255, 247, 243, 227,
	281, 320, 360, 421, 354, 0, 307, 0, 0, 412,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 345,
	413, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	1251, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 299, 301, 300, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 431, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 1106, 0, 1107, 1108,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 334, 231, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 293, 188, 205, 0, 0, 344, 385,
	391, 0, 0, 0, 229, 0, 389, 358, 449, 213,
	257, 382, 363, 387, 370, 260, 0, 0, 388, 308,
	436, 377, 446, 466, 467, 237, 338, 456, 425, 462,
	478, 206, 234, 352, 418, 452, 409, 331, 432, 433,
	292, 408, 266, 191, 306, 472, 204, 397, 221, 211,
	197, 420, 444, 218, 400, 0, 0, 480, 199, 442,
	417, 327, 289, 290, 198, 0, 381, 242, 264, 232,
	347, 439, 440, 230, 481, 208, 461, 201, 0, 460,
	340, 435, 443, 328, 318, 200, 441, 326, 317, 295,
	253, 275, 375, 311, 376, 276, 336, 335, 337, 194,
	453, 0, 195, 0, 414, 454, 482, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 304, 351,
	374, 372, 378, 0, 430, 447, 457, 464, 470, 471,
	473, 474, 475, 476, 477, 339, 278, 410, 294, 309,
	0, 0, 357, 390, 219, 451, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 319, 402, 448, 296,
	297, 298, 0, 187, 202, 305, 0, 379, 261, 479,
	459, 455, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 315, 321, 322, 323, 324, 341, 342, 343,
	346, 349, 350, 353, 355, 356, 359, 366, 367, 368,
	369, 371, 373, 380, 384, 392, 393, 394, 395, 396,
	398, 399, 404, 405, 406, 407, 415, 419, 437, 438,
	450, 463, 468, 270, 445, 469, 0, 314, 0, 0,
	316, 254, 273, 284, 0, 458, 416, 207, 386, 262,
	196, 225, 210, 233, 248, 251, 288, 325, 332, 361,
	365, 267, 245, 223, 383, 220, 401, 422, 423, 424,
	426, 329, 240, 364, 427, 0, 312, 428, 429, 280,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	303, 241, 0, 0, 362, 0, 193, 0, 403, 228,
	313, 310, 434, 255, 247, 243, 227, 281, 320, 360,
	421, 354, 0, 307, 0, 0, 412, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 345, 413, 259, 0,
	0, 0, 0, 184, 185, 186, 1191, 1194, 0, 0,
	0, 0, 1190, 1193, 0, 0, 217, 1189, 224, 299,
	301, 300, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 431, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 334, 231, 0, 0, 0, 0,
	465, 0, 0, 0, 0, 0, 0, 0, 302, 0,
	293, 188, 205, 0, 0, 344, 385, 391, 0, 0,
	0, 229, 0, 389, 358, 449, 213, 257, 382, 363,
	387, 370, 260, 0, 0, 388, 308, 436, 377, 446,
	466, 467, 237, 338, 456, 425, 462, 478, 206, 234,
	352, 418, 452, 409, 331, 432, 433, 292, 408, 266,
	191, 306, 472, 204, 397, 221, 211, 197, 420, 444,
	218, 400, 0, 0, 480, 199, 442, 417, 327, 289,
	290, 198, 0, 381, 242, 264, 232, 347, 439, 440,
	230, 481, 208, 461, 201, 0, 460, 340, 435, 443,
	328, 318, 200, 441, 326, 317, 295, 253, 275, 375,
	311, 376, 276, 336, 335, 337, 194, 453, 0, 195,
	0, 414, 454, 482, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 304, 351, 374, 372, 378,
	0, 430, 447, 457, 464, 470, 471, 473, 474, 475,
	476, 477, 339, 278, 410, 294, 309, 0, 0, 357,
	390, 219, 451, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 319, 402, 448, 296, 297, 298, 0,
	187, 202, 305, 0, 379, 261, 479, 459, 455, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 315,
	321, 322, 323, 324, 341, 342, 343, 346, 349, 350,
	353, 355, 356, 359, 366, 367, 368, 369, 371, 373,
	380, 384, 392, 393, 394, 395, 396, 398, 399, 404,
	405, 406, 407, 415, 419, 437, 438, 450, 463, 468,
	270, 445, 469, 0, 314, 0, 0, 316, 254, 273,
	284, 0, 458, 416, 207, 386, 262, 196, 225, 210,
	233, 248, 251, 288, 325, 332, 361, 365, 267, 245,
	223, 383, 220, 401, 422, 423, 424, 426, 329, 240,
	364, 78, 427, 312, 428, 429, 280, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 303, 241,
	0, 0, 362, 0, 193, 0, 403, 228, 313, 310,
	434, 255, 247, 243, 227, 281, 320, 360, 421, 354,
	0, 307, 0, 0, 412, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 345, 413, 259, 0, 87, 0,
	1229, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 299, 301, 300,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 431,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 334, 231, 0, 0, 0, 0, 465, 0,
	0, 0, 0, 0, 0, 0, 302, 0, 293, 188,
	205, 0, 0, 344, 385, 391, 0, 0, 0, 229,
	0, 389, 358, 449, 213, 257, 382, 363, 387, 370,
	260, 0, 0, 388, 308, 436, 377, 446, 466, 467,
	237, 338, 456, 425, 462, 478, 206, 234, 352, 418,
	452, 409, 331, 432, 433, 292, 408, 266, 191, 306,
	472, 204, 397, 221, 211, 197, 420, 444, 218, 400,
	0, 0, 480, 199, 442, 417, 327, 289, 290, 198,
	0, 381, 242, 264, 232, 347, 439, 440, 230, 481,
	208, 461, 201, 0, 460, 340, 435, 443, 328, 318,
	200, 441, 326, 317, 295, 253, 275, 375, 311, 376,
	276, 336, 335, 337, 194, 453, 0, 195, 0, 414,
	454, 482, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 304, 351, 374, 372, 378, 0, 430,
	447, 457, 464, 470, 471, 473, 474, 475, 476, 477,
	339, 278, 410, 294, 309, 0, 0, 357, 390, 219,
	451, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	501, 319, 402, 448, 296, 297, 298, 0, 187, 202,
	305, 86, 379, 261, 479, 459, 455, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 315, 321, 322,
	323, 324, 341, 342, 343, 346, 349, 350, 353, 355,
	356, 359, 366, 367, 368, 369, 371, 373, 380, 384,
	392, 393, 394, 395, 396, 398, 399, 404, 405, 406,
	407, 415, 419, 437, 438, 450, 463, 468, 270, 445,
	469, 0, 314, 0, 0, 316, 254, 273, 284, 0,
	458, 416, 207, 386, 262, 196, 225, 210, 233, 248,
	251, 288, 325, 332, 361, 365, 267, 245, 223, 383,
	220, 401, 422, 423, 424, 426, 329, 240, 364, 427,
	0, 312, 428, 429, 280, 0, 0, 0, 0, 0,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 303, 241, 0, 0, 362,
	0, 193, 0, 403, 228, 313, 310, 434, 255, 247,
	243, 227, 281, 320, 360, 421, 354, 0, 307, 0,
	0, 412, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 345, 413, 259, 0, 87, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 299, 301, 300, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 431, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 334,
	231, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	0, 0, 0, 302, 0, 293, 188, 205, 0, 0,
	344, 385, 391, 0, 0, 0, 229, 0, 389, 358,
	449, 213, 257, 382, 363, 387, 370, 260, 0, 0,
	388, 308, 436, 377, 446, 466, 467, 237, 338, 456,
	425, 462, 478, 206, 234, 352, 418, 452, 409, 331,
	432, 433, 292, 408, 266, 191, 306, 472, 204, 397,
	221, 211, 197, 420, 444, 218, 400, 0, 0, 480,
	199, 442, 417, 327, 289, 290, 198, 0, 381, 242,
	264, 232, 347, 439, 440, 230, 481, 208, 461, 201,
	0, 460, 340, 435, 443, 328, 318, 200, 441, 326,
	317, 295, 253, 275, 375, 311, 376, 276, 336, 335,
	337, 194, 453, 0, 195, 0, 414, 454, 482, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	304, 351, 374, 372, 378, 0, 430, 447, 457, 464,
	470, 471, 473, 474, 475, 476, 477, 339, 278, 410,
	294, 309, 0, 0, 357, 390, 219, 451, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 501, 319, 402,
	448, 296, 297, 298, 0, 187, 202, 305, 0, 379,
	261, 479, 459, 455, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 1698, 0, 0, 1697, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 315, 321, 322, 323, 324, 341,
	342, 343, 346, 349, 350, 353, 355, 356, 359, 366,
	367, 368, 369, 371, 373, 380, 384, 392, 393, 394,
	395, 396, 398, 399, 404, 405, 406, 407, 415, 419,
	437, 438, 450, 463, 468, 270, 445, 469, 0, 314,
	0, 0, 316, 254, 273, 284, 0, 458, 416, 207,
	386, 262, 196, 225, 210, 233, 248, 251, 288, 325,
	332, 361, 365, 267, 245, 223, 383, 220, 401, 422,
	423, 424, 426, 329, 240, 364, 427, 0, 312, 428,
	429, 280, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 1650, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 303, 241, 0, 0, 362, 0, 193, 0,
	403, 228, 313, 310, 434, 255, 247, 243, 227, 281,
	320, 360, 421, 354, 0, 307, 0, 0, 412, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 345, 413,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 1421,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 299, 301, 300, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 431, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 334, 231, 0, 0,
	0, 0, 465, 0, 0, 0, 0, 0, 0, 0,
	302, 0, 293, 188, 205, 0, 0, 344, 385, 391,
	0, 0, 0, 229, 0, 389, 358, 449, 213, 257,
	382, 363, 387, 370, 260, 0, 1648, 388, 308, 436,
	377, 446, 466, 467, 237, 338, 456, 425, 462, 478,
	206, 234, 352, 418, 452, 409, 331, 432, 433, 292,
	408, 266, 191, 306, 472, 204, 397, 221, 211, 197,
	420, 444, 218, 400, 0, 0, 480, 199, 442, 417,
	327, 289, 290, 198, 0, 381, 242, 264, 232, 347,
	439, 440, 230, 481, 208, 461, 201, 0, 460, 340,
	435, 443, 328, 318, 200, 441, 326, 317, 295, 253,
	275, 375, 311, 376, 276, 336, 335, 337, 194, 453,
	0, 195, 0, 414, 454, 482, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 304, 351, 374,
	372, 378, 0, 430, 447, 457, 464, 470, 471, 473,
	474, 475, 476, 477, 339, 278, 410, 294, 309, 0,
	0, 357, 390, 219, 451, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 501, 319, 402, 448, 296, 297,
	298, 0, 187, 202, 305, 0, 379, 261, 479, 459,
	455, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 315, 321, 322, 323, 324, 341, 342, 343, 346,
	349, 350, 353, 355, 356, 359, 366, 367, 368, 369,
	371, 373, 380, 384, 392, 393, 394, 395, 396, 398,
	399, 404, 405, 406, 407, 415, 419, 437, 438, 450,
	463, 468, 270, 445, 469, 0, 314, 0, 0, 316,
	254, 273, 284, 0, 458, 416, 207, 386, 262, 196,
	225, 210, 233, 248, 251, 288, 325, 332, 361, 365,
	267, 245, 223, 383, 220, 401, 422, 423, 424, 426,
	329, 240, 364, 427, 0, 312, 428, 429, 280, 0,
	0, 0, 0, 0, 0, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 303,
	241, 0, 0, 362, 0, 193, 0, 403, 228, 313,
	310, 434, 255, 247, 243, 227, 281, 320, 360, 421,
	354, 0, 307, 0, 0, 412, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 345, 413, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 299, 301,
	300, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	431, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 896, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 334, 231, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 0, 0, 0, 302, 902, 293,
	188, 205, 900, 0, 344, 385, 391, 0, 0, 0,
	229, 0, 389, 358, 449, 213, 257, 382, 363, 387,
	370, 260, 0, 0, 388, 308, 436, 377, 446, 466,
	467, 237, 338, 456, 425, 462, 478, 206, 234, 352,
	418, 452, 409, 331, 432, 433, 292, 408, 266, 191,
	306, 472, 204, 397, 221, 211, 197, 420, 444, 218,
	400, 0, 0, 480, 199, 442, 417, 327, 289, 290,
	198, 0, 381, 242, 264, 232, 347, 439, 440, 230,
	481, 208, 461, 201, 0, 460, 340, 435, 443, 328,
	318, 200, 441, 326, 317, 295, 253, 275, 375, 311,
	376, 276, 336, 335, 337, 194, 453, 0, 195, 0,
	414, 454, 482, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 304, 351, 374, 372, 378, 0,
	430, 447, 457, 464, 470, 471, 473, 474, 475, 476,
	477, 339, 278, 410, 294, 309, 0, 0, 357, 390,
	219, 451, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 501, 319, 402, 448, 296, 297, 298, 0, 187,
	202, 305, 0, 379, 261, 479, 459, 455, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 315, 321,
	322, 323, 324, 341, 342, 343, 346, 349, 350, 353,
	355, 356, 359, 366, 367, 368, 369, 371, 373, 380,
	384, 392, 393, 394, 395, 396, 398, 399, 404, 405,
	406, 407, 415, 419, 437, 438, 450, 463, 468, 270,
	445, 469, 0, 314, 0, 0, 316, 254, 273, 284,
	0, 458, 416, 207, 386, 262, 196, 225, 210, 233,
	248, 251, 288, 325, 332, 361, 365, 267, 245, 223,
	383, 220, 401, 422, 423, 424, 426, 329, 240, 364,
	427, 0, 312, 428, 429, 280, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 1650, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 303, 241, 0, 0,
	362, 0, 193, 0, 403, 228, 313, 310, 434, 255,
	247, 243, 227, 281, 320, 360, 421, 354, 0, 307,
	0, 0, 412, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 345, 413, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 1421, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 299, 301, 300, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 431, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	334, 231, 0, 0, 0, 0, 465, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 293, 188, 205, 0,
	0, 344, 385, 391, 0, 0, 0, 229, 0, 389,
	358, 449, 213, 257, 382, 363, 387, 370, 260, 0,
	0, 388, 308, 436, 377, 446, 466, 467, 237, 338,
	456, 425, 462, 478, 206, 234, 352, 418, 452, 409,
	331, 432, 433, 292, 408, 266, 191, 306, 472, 204,
	397, 221, 211, 197, 420, 444, 218, 400, 0, 0,
	480, 199, 442, 417, 327, 289, 290, 198, 0, 381,
	242, 264, 232, 347, 439, 440, 230, 481, 208, 461,
	201, 0, 460, 340, 435, 443, 328, 318, 200, 441,
	326, 317, 295, 253, 275, 375, 311, 376, 276, 336,
	335, 337, 194, 453, 0, 195, 0, 414, 454, 482,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 304, 351, 374, 372, 378, 0, 430, 447, 457,
	464, 470, 471, 473, 474, 475, 476, 477, 339, 278,
	410, 294, 309, 0, 0, 357, 390, 219, 451, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 501, 319,
	402, 448, 296, 297, 298, 0, 187, 202, 305, 0,
	379, 261, 479, 459, 455, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 315, 321, 322, 323, 324,
	341, 342, 343, 346, 349, 350, 353, 355, 356, 359,
	366, 367, 368, 369, 371, 373, 380, 384, 392, 393,
	394, 395, 396, 398, 399, 404, 405, 406, 407, 415,
	419, 437, 438, 450, 463, 468, 270, 445, 469, 0,
	314, 0, 0, 316, 254, 273, 284, 0, 458, 416,
	207, 386, 262, 196, 225, 210, 233, 248, 251, 288,
	325, 332, 361, 365, 267, 245, 223, 383, 220, 401,
	422, 423, 424, 426, 329, 240, 364, 427, 0, 312,
	428, 429, 280, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 303, 241, 0, 0, 362, 0, 193,
	0, 403, 228, 313, 310, 434, 255, 247, 243, 227,
	281, 320, 360, 421, 354, 0, 307, 0, 0, 412,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 345,
	413, 259, 0, 0, 0, 1229, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 299, 301, 300, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 431, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 334, 231, 0,
	0, 0, 0, 465, 0, 0, 0, 2534, 0, 0,
	0, 302, 0, 293, 188, 205, 0, 0, 344, 385,
	391, 0, 0, 0, 229, 0, 389, 358, 449, 213,
	257, 382, 363, 387, 370, 260, 0, 0, 388, 308,
	436, 377, 446, 466, 467, 237, 338, 456, 425, 462,
	478, 206, 234, 352, 418, 452, 409, 331, 432, 433,
	292, 408, 266, 191, 306, 472, 204, 397, 221, 211,
	197, 420, 444, 218, 400, 0, 0, 480, 199, 442,
	417, 327, 289, 290, 198, 0, 381, 242, 264, 232,
	347, 439, 440, 230, 481, 208, 461, 201, 0, 460,
	340, 435, 443, 328, 318, 200, 441, 326, 317, 295,
	253, 275, 375, 311, 376, 276, 336, 335, 337, 194,
	453, 0, 195, 0, 414, 454, 482, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 304, 351,
	374, 372, 378, 0, 430, 447, 457, 464, 470, 471,
	473, 474, 475, 476, 477, 339, 278, 410, 294, 309,
	0, 0, 357, 390, 219, 451, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 319, 402, 448, 296,
	297, 298, 0, 187, 202, 305, 0, 379, 261, 479,
	459, 455, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 315, 321, 322, 323, 324, 341, 342, 343,
	346, 349, 350, 353, 355, 356, 359, 366, 367, 368,
	369, 371, 373, 380, 384, 392, 393, 394, 395, 396,
	398, 399, 404, 405, 406, 407, 415, 419, 437, 438,
	450, 463, 468, 270, 445, 469, 0, 314, 0, 0,
	316, 254, 273, 284, 0, 458, 416, 207, 386, 262,
	196, 225, 210, 233, 248, 251, 288, 325, 332, 361,
	365, 267, 245, 223, 383, 220, 401, 422, 423, 424,
	426, 329, 240, 364, 427, 0, 312, 428, 429, 280,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	303, 241, 0, 0, 362, 0, 193, 0, 403, 228,
	313, 310, 434, 255, 247, 243, 227, 281, 320, 360,
	421, 354, 0, 307, 0, 0, 412, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 345, 413, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 1950, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 299,
	301, 300, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 431, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1951, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 334, 231, 0, 0, 0, 0,
	465, 0, 0, 0, 0, 0, 0, 0, 302, 0,
	293, 188, 205, 0, 0, 344, 385, 391, 0, 0,
	0, 229, 0, 389, 358, 449, 213, 257, 382, 363,
	387, 370, 260, 0, 0, 388, 308, 436, 377, 446,
	466, 467, 237, 338, 456, 425, 462, 478, 206, 234,
	352, 418, 452, 409, 331, 432, 433, 292, 408, 266,
	191, 306, 472, 204, 397, 221, 211, 197, 420, 444,
	218, 400, 0, 0, 480, 199, 442, 417, 327, 289,
	290, 198, 0, 381, 242, 264, 232, 347, 439, 440,
	230, 481, 208, 461, 201, 0, 460, 340, 435, 443,
	328, 318, 200, 441, 326, 317, 295, 253, 275, 375,
	311, 376, 276, 336, 335, 337, 194, 453, 0, 195,
	0, 414, 454, 482, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 304, 351, 374, 372, 378,
	0, 430, 447, 457, 464, 470, 471, 473, 474, 475,
	476, 477, 339, 278, 410, 294, 309, 0, 0, 357,
	390, 219, 451, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 319, 402, 448, 296, 297, 298, 0,
	187, 202, 305, 0, 379, 261, 479, 459, 455, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 315,
	321, 322, 323, 324, 341, 342, 343, 346, 349, 350,
	353, 355, 356, 359, 366, 367, 368, 369, 371, 373,
	380, 384, 392, 393, 394, 395, 396, 398, 399, 404,
	405, 406, 407, 415, 419, 437, 438, 450, 463, 468,
	270, 445, 469, 0, 314, 0, 0, 316, 254, 273,
	284, 0, 458, 416, 207, 386, 262, 196, 225, 210,
	233, 248, 251, 288, 325, 332, 361, 365, 267, 245,
	223, 383, 220, 401, 422, 423, 424, 426, 329, 240,
	364, 427, 0, 312, 428, 429, 280, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 303, 241, 0,
	0, 362, 0, 193, 0, 403, 228, 313, 310, 434,
	255, 247, 243, 227, 281, 320, 360, 421, 354, 0,
	307, 0, 0, 412, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 345, 413, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 1935, 0, 0, 0,
	1936, 0, 0, 217, 0, 224, 299, 301, 300, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 431, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 334, 231, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 293, 188, 205,
	0, 0, 344, 385, 391, 0, 0, 0, 229, 0,
	389, 358, 449, 213, 257, 382, 363, 387, 370, 260,
	0, 0, 388, 308, 436, 377, 446, 466, 467, 237,
	338, 456, 425, 462, 478, 206, 234, 352, 418, 452,
	409, 331, 432, 433, 292, 408, 266, 191, 306, 472,
	204, 397, 221, 211, 197, 420, 444, 218, 400, 0,
	0, 480, 199, 442, 417, 327, 289, 290, 198, 0,
	381, 242, 264, 232, 347, 439, 440, 230, 481, 208,
	461, 201, 0, 460, 340, 435, 443, 328, 318, 200,
	441, 326, 317, 295, 253, 275, 375, 311, 376, 276,
	336, 335, 337, 194, 453, 0, 195, 0, 414, 454,
	482, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 304, 351, 374, 372, 378, 0, 430, 447,
	457, 464, 470, 471, 473, 474, 475, 476, 477, 339,
	278, 410, 294, 309, 0, 0, 357, 390, 219, 451,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 501,
	319, 402, 448, 296, 297, 298, 0, 187, 202, 305,
	0, 379, 261, 479, 459, 455, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 315, 321, 322, 323,
	324, 341, 342, 343, 346, 349, 350, 353, 355, 356,
	359, 366, 367, 368, 369, 371, 373, 380, 384, 392,
	393, 394, 395, 396, 398, 399, 404, 405, 406, 407,
	415, 419, 437, 438, 450, 463, 468, 270, 445, 469,
	0, 314, 0, 0, 316, 254, 273, 284, 0, 458,
	416, 207, 386, 262, 196, 225, 210, 233, 248, 251,
	288, 325, 332, 361, 365, 267, 245, 223, 383, 220,
	401, 422, 423, 424, 426, 329, 240, 364, 427, 0,
	312, 428, 429, 280, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	1272, 0, 0, 0, 303, 241, 0, 0, 362, 0,
	193, 0, 403, 228, 313, 310, 434, 255, 247, 243,
	227, 281, 320, 360, 421, 354, 0, 307, 0, 0,
	412, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	345, 413, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1271, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 299, 301, 300, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 431, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 334, 231,
	0, 0, 0, 0, 465, 0, 0, 0, 0, 0,
	0, 0, 302, 0, 293, 188, 205, 0, 0, 344,
	385, 391, 0, 0, 0, 229, 0, 389, 358, 449,
	213, 257, 382, 363, 387, 370, 260, 0, 0, 388,
	308, 436, 377, 446, 466, 467, 237, 338, 456, 425,
	462, 478, 206, 234, 352, 418, 452, 409, 331, 432,
	433, 292, 408, 266, 191, 306, 472, 204, 397, 221,
	211, 197, 420, 444, 218, 400, 0, 0, 480, 199,
	442, 417, 327, 289, 290, 198, 0, 381, 242, 264,
	232, 347, 439, 440, 230, 481, 208, 461, 201, 0,
	460, 340, 435, 443, 328, 318, 200, 441, 326, 317,
	295, 253, 275, 375, 311, 376, 276, 336, 335, 337,
	194, 453, 0, 195, 0, 414, 454, 482, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 304,
	351, 374, 372, 378, 0, 430, 447, 457, 464, 470,
	471, 473, 474, 475, 476, 477, 339, 278, 410, 294,
	309, 0, 0, 357, 390, 219, 451, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 501, 319, 402, 448,
	296, 297, 298, 0, 187, 202, 305, 0, 379, 261,
	479, 459, 455, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 315, 321, 322, 323, 324, 341, 342,
	343, 346, 349, 350, 353, 355, 356, 359, 366, 367,
	368, 369, 371, 373, 380, 384, 392, 393, 394, 395,
	396, 398, 399, 404, 405, 406, 407, 415, 419, 437,
	438, 450, 463, 468, 270, 445, 469, 0, 314, 0,
	0, 316, 254, 273, 284, 0, 458, 416, 207, 386,
	262, 196, 225, 210, 233, 248, 251, 288, 325, 332,
	361, 365, 267, 245, 223, 383, 220, 401, 422, 423,
	424, 426, 329, 240, 364, 427, 0, 312, 428, 429,
	280, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 303, 241, 0, 0, 362, 0, 193, 0, 403,
	228, 313, 310, 434, 255, 247, 243, 227, 281, 320,
	360, 421, 354, 0, 307, 0, 0, 412, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 345, 413, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	299, 301, 300, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 431, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 334, 231, 0, 0, 0,
	0, 465, 0, 0, 0, 2606, 0, 0, 0, 302,
	0, 293, 188, 205, 0, 0, 344, 385, 391, 0,
	0, 0, 229, 0, 389, 358, 449, 213, 257, 382,
	363, 387, 370, 260, 0, 0, 388, 308, 436, 377,
	446, 466, 467, 237, 338, 456, 425, 462, 478, 206,
	234, 352, 418, 452, 409, 331, 432, 433, 292, 408,
	266, 191, 306, 472, 204, 397, 221, 211, 197, 420,
	444, 218, 400, 0, 0, 480, 199, 442, 417, 327,
	289, 290, 198, 0, 381, 242, 264, 232, 347, 439,
	440, 230, 481, 208, 461, 201, 0, 460, 340, 435,
	443, 328, 318, 200, 441, 326, 317, 295, 253, 275,
	375, 311, 376, 276, 336, 335, 337, 194, 453, 0,
	195, 0, 414, 454, 482, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 304, 351, 374, 372,
	378, 0, 430, 447, 457, 464, 470, 471, 473, 474,
	475, 476, 477, 339, 278, 410, 294, 309, 0, 0,
	357, 390, 219, 451, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 319, 402, 448, 296, 297, 298,
	0, 187, 202, 305, 0, 379, 261, 479, 459, 455,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	315, 321, 322, 323, 324, 341, 342, 343, 346, 349,
	350, 353, 355, 356, 359, 366, 367, 368, 369, 371,
	373, 380, 384, 392, 393, 394, 395, 396, 398, 399,
	404, 405, 406, 407, 415, 419, 437, 438, 450, 463,
	468, 270, 445, 469, 0, 314, 0, 0, 316, 254,
	273, 284, 0, 458, 416, 207, 386, 262, 196, 225,
	210, 233, 248, 251, 288, 325, 332, 361, 365, 267,
	245, 223, 383, 220, 401, 422, 423, 424, 426, 329,
	240, 364, 427, 0, 312, 428, 429, 280, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 303, 241,
	0, 0, 362, 0, 193, 0, 403, 228, 313, 310,
	434, 255, 247, 243, 227, 281, 320, 360, 421, 354,
	0, 307, 0, 0, 412, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 345, 413, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 299, 301, 300,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 431,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 334, 231, 0, 0, 0, 0, 465, 0,
	0, 0, 2534, 0, 0, 0, 302, 0, 293, 188,
	205, 0, 0, 344, 385, 391, 0, 0, 0, 229,
	0, 389, 358, 449, 213, 257, 382, 363, 387, 370,
	260, 0, 0, 388, 308, 436, 377, 446, 466, 467,
	237, 338, 456, 425, 462, 478, 206, 234, 352, 418,
	452, 409, 331, 432, 433, 292, 408, 266, 191, 306,
	472, 204, 397, 221, 211, 197, 420, 444, 218, 400,
	0, 0, 480, 199, 442, 417, 327, 289, 290, 198,
	0, 381, 242, 264, 232, 347, 439, 440, 230, 481,
	208, 461, 201, 0, 460, 340, 435, 443, 328, 318,
	200, 441, 326, 317, 295, 253, 275, 375, 311, 376,
	276, 336, 335, 337, 194, 453, 0, 195, 0, 414,
	454, 482, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 304, 351, 374, 372, 378, 0, 430,
	447, 457, 464, 470, 471, 473, 474, 475, 476, 477,
	339, 278, 410, 294, 309, 0, 0, 357, 390, 219,
	451, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	501, 319, 402, 448, 296, 297, 298, 0, 187, 202,
	305, 0, 379, 261, 479, 459, 455, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 315, 321, 322,
	323, 324, 341, 342, 343, 346, 349, 350, 353, 355,
	356, 359, 366, 367, 368, 369, 371, 373, 380, 384,
	392, 393, 394, 395, 396, 398, 399, 404, 405, 406,
	407, 415, 419, 437, 438, 450, 463, 468, 270, 445,
	469, 0, 314, 0, 0, 316, 254, 273, 284, 0,
	458, 416, 207, 386, 262, 196, 225, 210, 233, 248,
	251, 288, 325, 332, 361, 365, 267, 245, 223, 383,
	220, 401, 422, 423, 424, 426, 329, 240, 364, 427,
	0, 312, 428, 429, 280, 0, 0, 0, 0, 0,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 303, 241, 0, 0, 362,
	0, 193, 0, 403, 228, 313, 310, 434, 255, 247,
	243, 227, 281, 320, 360, 421, 354, 0, 307, 0,
	0, 412, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 345, 413, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1421, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 299, 301, 300, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 431, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 334,
	231, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	0, 0, 0, 302, 0, 293, 188, 205, 0, 0,
	344, 385, 391, 0, 0, 0, 229, 0, 389, 358,
	449, 213, 257, 382, 363, 387, 370, 260, 0, 0,
	388, 308, 436, 377, 446, 466, 467, 237, 338, 456,
	425, 462, 478, 206, 234, 352, 418, 452, 409, 331,
	432, 433, 292, 408, 266, 191, 306, 472, 204, 397,
	221, 211, 197, 420, 444, 218, 400, 0, 0, 480,
	199, 442, 417, 327, 289, 290, 198, 0, 381, 242,
	264, 232, 347, 439, 440, 230, 481, 208, 461, 201,
	0, 460, 340, 435, 443, 328, 318, 200, 441, 326,
	317, 295, 253, 275, 375, 311, 376, 276, 336, 335,
	337, 194, 453, 0, 195, 0, 414, 454, 482, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	304, 351, 374, 372, 378, 0, 430, 447, 457, 464,
	470, 471, 473, 474, 475, 476, 477, 339, 278, 410,
	294, 309, 0, 0, 357, 390, 219, 451, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 501, 319, 402,
	448, 296, 297, 298, 0, 187, 202, 305, 0, 379,
	261, 479, 459, 455, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 315, 321, 322, 323, 324, 341,
	342, 343, 346, 349, 350, 353, 355, 356, 359, 366,
	367, 368, 369, 371, 373, 380, 384, 392, 393, 394,
	395, 396, 398, 399, 404, 405, 406, 407, 415, 419,
	437, 438, 450, 463, 468, 270, 445, 469, 0, 314,
	0, 0, 316, 254, 273, 284, 0, 458, 416, 207,
	386, 262, 196, 225, 210, 233, 248, 251, 288, 325,
	332, 361, 365, 267, 245, 223, 383, 220, 401, 422,
	423, 424, 426, 329, 240, 364, 0, 427, 312, 428,
	429, 280, 1699, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 303, 241, 0, 0, 362, 0, 193,
	0, 403, 228, 313, 310, 434, 255, 247, 243, 227,
	281, 320, 360, 421, 354, 0, 307, 0, 0, 412,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 345,
	413, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 299, 301, 300, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 431, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 334, 231, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 293, 188, 205, 0, 0, 344, 385,
	391, 0, 0, 0, 229, 0, 389, 358, 449, 213,
	257, 382, 363, 387, 370, 260, 0, 0, 388, 308,
	436, 377, 446, 466, 467, 237, 338, 456, 425, 462,
	478, 206, 234, 352, 418, 452, 409, 331, 432, 433,
	292, 408, 266, 191, 306, 472, 204, 397, 221, 211,
	197, 420, 444, 218, 400, 0, 0, 480, 199, 442,
	417, 327, 289, 290, 198, 0, 381, 242, 264, 232,
	347, 439, 440, 230, 481, 208, 461, 201, 0, 460,
	340, 435, 443, 328, 318, 200, 441, 326, 317, 295,
	253, 275, 375, 311, 376, 276, 336, 335, 337, 194,
	453, 0, 195, 0, 414, 454, 482, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 304, 351,
	374, 372, 378, 0, 430, 447, 457, 464, 470, 471,
	473, 474, 475, 476, 477, 339, 278, 410, 294, 309,
	0, 0, 357, 390, 219, 451, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 319, 402, 448, 296,
	297, 298, 0, 187, 202, 305, 0, 379, 261, 479,
	459, 455, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 315, 321, 322, 323, 324, 341, 342, 343,
	346, 349, 350, 353, 355, 356, 359, 366, 367, 368,
	369, 371, 373, 380, 384, 392, 393, 394, 395, 396,
	398, 399, 404, 405, 406, 407, 415, 419, 437, 438,
	450, 463, 468, 270, 445, 469, 0, 314, 0, 0,
	316, 254, 273, 284, 0, 458, 416, 207, 386, 262,
	196, 225, 210, 233, 248, 251, 288, 325, 332, 361,
	365, 267, 245, 223, 383, 220, 401, 422, 423, 424,
	426, 329, 240, 364, 427, 0, 312, 428, 429, 280,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	303, 241, 0, 0, 362, 0, 193, 0, 403, 228,
	313, 310, 434, 255, 247, 243, 227, 281, 320, 360,
	421, 354, 0, 307, 0, 0, 412, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 345, 413, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 1251, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 299,
	301, 300, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 431, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 334, 231, 0, 0, 0, 0,
	465, 0, 0, 0, 0, 0, 0, 0, 302, 0,
	293, 188, 205, 0, 0, 344, 385, 391, 0, 0,
	0, 229, 0, 389, 358, 449, 213, 257, 382, 363,
	387, 370, 260, 0, 0, 388, 308, 436, 377, 446,
	466, 467, 237, 338, 456, 425, 462, 478, 206, 234,
	352, 418, 452, 409, 331, 432, 433, 292, 408, 266,
	191, 306, 472, 204, 397, 221, 211, 197, 420, 444,
	218, 400, 0, 0, 480, 199, 442, 417, 327, 289,
	290, 198, 0, 381, 242, 264, 232, 347, 439, 440,
	230, 481, 208, 461, 201, 0, 460, 340, 435, 443,
	328, 318, 200, 441, 326, 317, 295, 253, 275, 375,
	311, 376, 276, 336, 335, 337, 194, 453, 0, 195,
	0, 414, 454, 482, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 304, 351, 374, 372, 378,
	0, 430, 447, 457, 464, 470, 471, 473, 474, 475,
	476, 477, 339, 278, 410, 294, 309, 0, 0, 357,
	390, 219, 451, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 319, 402, 448, 296, 297, 298, 0,
	187, 202, 305, 0, 379, 261, 479, 459, 455, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 315,
	321, 322, 323, 324, 341, 342, 343, 346, 349, 350,
	353, 355, 356, 359, 366, 367, 368, 369, 371, 373,
	380, 384, 392, 393, 394, 395, 396, 398, 399, 404,
	405, 406, 407, 415, 419, 437, 438, 450, 463, 468,
	270, 445, 469, 0, 314, 0, 0, 316, 254, 273,
	284, 0, 458, 416, 207, 386, 262, 196, 225, 210,
	233, 248, 251, 288, 325, 332, 361, 365, 267, 245,
	223, 383, 220, 401, 422, 423, 424, 426, 329, 240,
	364, 427, 0, 312, 428, 429, 280, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 303, 241, 0,
	0, 362, 0, 193, 0, 403, 228, 313, 310, 434,
	255, 247, 243, 227, 281, 320, 360, 421, 354, 0,
	307, 0, 0, 412, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 345, 413, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 299, 301, 300, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 431, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 334, 231, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 293, 188, 205,
	0, 0, 344, 385, 391, 0, 0, 0, 229, 0,
	389, 358, 449, 213, 257, 382, 363, 387, 370, 260,
	0, 0, 388, 308, 436, 377, 446, 466, 467, 237,
	338, 456, 425, 462, 478, 206, 234, 352, 418, 452,
	409, 331, 432, 433, 292, 408, 266, 191, 306, 472,
	204, 397, 221, 211, 197, 420, 444, 218, 400, 0,
	0, 480, 199, 442, 417, 327, 289, 290, 198, 0,
	381, 242, 264, 232, 347, 439, 440, 230, 481, 208,
	461, 201, 0, 460, 340, 435, 443, 328, 318, 200,
	441, 326, 317, 295, 253, 275, 375, 311, 376, 276,
	336, 335, 337, 194, 453, 0, 195, 0, 414, 454,
	482, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 304, 351, 374, 372, 378, 0, 430, 447,
	457, 464, 470, 471, 473, 474, 475, 476, 477, 339,
	278, 410, 294, 309, 0, 0, 357, 390, 219, 451,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 501,
	319, 402, 448, 296, 297, 298, 0, 187, 202, 305,
	0, 379, 261, 479, 459, 455, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 315, 321, 322, 323,
	324, 341, 342, 343, 346, 349, 350, 353, 355, 356,
	359, 366, 367, 368, 369, 371, 373, 380, 384, 392,
	393, 394, 395, 396, 398, 399, 404, 405, 406, 407,
	415, 419, 437, 438, 450, 463, 468, 270, 445, 469,
	0, 314, 0, 0, 316, 254, 273, 284, 0, 458,
	416, 207, 386, 262, 196, 225, 210, 233, 248, 251,
	288, 325, 332, 361, 365, 267, 245, 223, 383, 220,
	401, 422, 423, 424, 426, 329, 240, 364, 427, 0,
	312, 428, 429, 280, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 303, 241, 0, 0, 362, 0,
	193, 0, 403, 228, 313, 310, 434, 255, 247, 243,
	227, 281, 320, 360, 421, 354, 0, 307, 0, 0,
	412, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	345, 413, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 299, 301, 300, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 431, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 334, 231,
	0, 0, 0, 0, 465, 0, 0, 0, 0, 0,
	0, 0, 302, 0, 293, 188, 205, 0, 0, 344,
	385, 391, 0, 0, 0, 229, 0, 389, 358, 449,
	213, 257, 382, 363, 387, 370, 260, 0, 0, 388,
	308, 436, 377, 446, 466, 467, 237, 338, 456, 425,
	462, 478, 206, 234, 352, 418, 452, 409, 331, 432,
	433, 292, 408, 266, 191, 306, 472, 204, 397, 221,
	211, 197, 420, 444, 218, 400, 0, 0, 480, 199,
	442, 417, 327, 289, 290, 198, 0, 381, 242, 264,
	232, 347, 439, 440, 230, 481, 208, 461, 201, 0,
	460, 340, 435, 443, 328, 318, 200, 441, 326, 317,
	295, 253, 275, 375, 311, 376, 276, 336, 335, 337,
	194, 453, 0, 195, 0, 414, 454, 482, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 304,
	351, 374, 372, 378, 0, 430, 447, 457, 464, 470,
	471, 473, 474, 475, 476, 477, 339, 278, 410, 294,
	309, 0, 0, 357, 390, 219, 451, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 501, 319, 402, 448,
	296, 297, 298, 0, 187, 202, 305, 1513, 379, 261,
	479, 459, 455, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 315, 321, 322, 323, 324, 341, 342,
	343, 346, 349, 350, 353, 355, 356, 359, 366, 367,
	368, 369, 371, 373, 380, 384, 392, 393, 394, 395,
	396, 398, 399, 404, 405, 406, 407, 415, 419, 437,
	438, 450, 463, 468, 270, 445, 469, 0, 314, 0,
	0, 316, 254, 273, 284, 0, 458, 416, 207, 386,
	262, 196, 225, 210, 233, 248, 251, 288, 325, 332,
	361, 365, 267, 245, 223, 383, 220, 401, 422, 423,
	424, 426, 329, 240, 364, 427, 0, 312, 428, 429,
	280, 0, 0, 0, 0, 0, 0, 348, 0, 1393,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 303, 241, 0, 0, 362, 0, 193, 0, 403,
	228, 313, 310, 434, 255, 247, 243, 227, 281, 320,
	360, 421, 354, 0, 307, 0, 0, 412, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 345, 413, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	299, 301, 300, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 431, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 334, 231, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 293, 188, 205, 0, 0, 344, 385, 391, 0,
	0, 0, 229, 0, 389, 358, 449, 213, 257, 382,
	363, 387, 370, 260, 0, 0, 388, 308, 436, 377,
	446, 466, 467, 237, 338, 456, 425, 462, 478, 206,
	234, 352, 418, 452, 409, 331, 432, 433, 292, 408,
	266, 191, 306, 472, 204, 397, 221, 211, 197, 420,
	444, 218, 400, 0, 0, 480, 199, 442, 417, 327,
	289, 290, 198, 0, 381, 242, 264, 232, 347, 439,
	440, 230, 481, 208, 461, 201, 0, 460, 340, 435,
	443, 328, 318, 200, 441, 326, 317, 295, 253, 275,
	375, 311, 376, 276, 336, 335, 337, 194, 453, 0,
	195, 0, 414, 454, 482, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 304, 351, 374, 372,
	378, 0, 430, 447, 457, 464, 470, 471, 473, 474,
	475, 476, 477, 339, 278, 410, 294, 309, 0, 0,
	357, 390, 219, 451, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 319, 402, 448, 296, 297, 298,
	0, 187, 202, 305, 0, 379, 261, 479, 459, 455,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	315, 321, 322, 323, 324, 341, 342, 343, 346, 349,
	350, 353, 355, 356, 359, 366, 367, 368, 369, 371,
	373, 380, 384, 392, 393, 394, 395, 396, 398, 399,
	404, 405, 406, 407, 415, 419, 437, 438, 450, 463,
	468, 270, 445, 469, 0, 314, 0, 0, 316, 254,
	273, 284, 0, 458, 416, 207, 386, 262, 196, 225,
	210, 233, 248, 251, 288, 325, 332, 361, 365, 267,
	245, 223, 383, 220, 401, 422, 423, 424, 426, 329,
	240, 364, 427, 0, 312, 428, 429, 280, 0, 0,
	0, 0, 0, 0, 348, 0, 1391, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 303, 241,
	0, 0, 362, 0, 193, 0, 403, 228, 313, 310,
	434, 255, 247, 243, 227, 281, 320, 360, 421, 354,
	0, 307, 0, 0, 412, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 345, 413, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 299, 301, 300,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 431,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 334, 231, 0, 0, 0, 0, 465, 0,
	0, 0, 0, 0, 0, 0, 302, 0, 293, 188,
	205, 0, 0, 344, 385, 391, 0, 0, 0, 229,
	0, 389, 358, 449, 213, 257, 382, 363, 387, 370,
	260, 0, 0, 388, 308, 436, 377, 446, 466, 467,
	237, 338, 456, 425, 462, 478, 206, 234, 352, 418,
	452, 409, 331, 432, 433, 292, 408, 266, 191, 306,
	472, 204, 397, 221, 211, 197, 420, 444, 218, 400,
	0, 0, 480, 199, 442, 417, 327, 289, 290, 198,
	0, 381, 242, 264, 232, 347, 439, 440, 230, 481,
	208, 461, 201, 0, 460, 340, 435, 443, 328, 318,
	200, 441, 326, 317, 295, 253, 275, 375, 311, 376,
	276, 336, 335, 337, 194, 453, 0, 195, 0, 414,
	454, 482, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 304, 351, 374, 372, 378, 0, 430,
	447, 457, 464, 470, 471, 473, 474, 475, 476, 477,
	339, 278, 410, 294, 309, 0, 0, 357, 390, 219,
	451, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	501, 319, 402, 448, 296, 297, 298, 0, 187, 202,
	305, 0, 379, 261, 479, 459, 455, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 315, 321, 322,
	323, 324, 341, 342, 343, 346, 349, 350, 353, 355,
	356, 359, 366, 367, 368, 369, 371, 373, 380, 384,
	392, 393, 394, 395, 396, 398, 399, 404, 405, 406,
	407, 415, 419, 437, 438, 450, 463, 468, 270, 445,
	469, 0, 314, 0, 0, 316, 254, 273, 284, 0,
	458, 416, 207, 386, 262, 196, 225, 210, 233, 248,
	251, 288, 325, 332, 361, 365, 267, 245, 223, 383,
	220, 401, 422, 423, 424, 426, 329, 240, 364, 427,
	0, 312, 428, 429, 280, 0, 0, 0, 0, 0,
	0, 348, 0, 1389, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 303, 241, 0, 0, 362,
	0, 193, 0, 403, 228, 313, 310, 434, 255, 247,
	243, 227, 281, 320, 360, 421, 354, 0, 307, 0,
	0, 412, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 345, 413, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 299, 301, 300, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 431, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 334,
	231, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	0, 0, 0, 302, 0, 293, 188, 205, 0, 0,
	344, 385, 391, 0, 0, 0, 229, 0, 389, 358,
	449, 213, 257, 382, 363, 387, 370, 260, 0, 0,
	388, 308, 436, 377, 446, 466, 467, 237, 338, 456,
	425, 462, 478, 206, 234, 352, 418, 452, 409, 331,
	432, 433, 292, 408, 266, 191, 306, 472, 204, 397,
	221, 211, 197, 420, 444, 218, 400, 0, 0, 480,
	199, 442, 417, 327, 289, 290, 198, 0, 381, 242,
	264, 232, 347, 439, 440, 230, 481, 208, 461, 201,
	0, 460, 340, 435, 443, 328, 318, 200, 441, 326,
	317, 295, 253, 275, 375, 311, 376, 276, 336, 335,
	337, 194, 453, 0, 195, 0, 414, 454, 482, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	304, 351, 374, 372, 378, 0, 430, 447, 457, 464,
	470, 471, 473, 474, 475, 476, 477, 339, 278, 410,
	294, 309, 0, 0, 357, 390, 219, 451, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 501, 319, 402,
	448, 296, 297, 298, 0, 187, 202, 305, 0, 379,
	261, 479, 459, 455, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 315, 321, 322, 323, 324, 341,
	342, 343, 346, 349, 350, 353, 355, 356, 359, 366,
	367, 368, 369, 371, 373, 380, 384, 392, 393, 394,
	395, 396, 398, 399, 404, 405, 406, 407, 415, 419,
	437, 438, 450, 463, 468, 270, 445, 469, 0, 314,
	0, 0, 316, 254, 273, 284, 0, 458, 416, 207,
	386, 262, 196, 225, 210, 233, 248, 251, 288, 325,
	332, 361, 365, 267, 245, 223, 383, 220, 401, 422,
	423, 424, 426, 329, 240, 364, 427, 0, 312, 428,
	429, 280, 0, 0, 0, 0, 0, 0, 348, 0,
	1387, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 303, 241, 0, 0, 362, 0, 193, 0,
	403, 228, 313, 310, 434, 255, 247, 243, 227, 281,
	320, 360, 421, 354, 0, 307, 0, 0, 412, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 345, 413,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 299, 301, 300, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 431, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 334, 231, 0, 0,
	0, 0, 465, 0, 0, 0, 0, 0, 0, 0,
	302, 0, 293, 188, 205, 0, 0, 344, 385, 391,
	0, 0, 0, 229, 0, 389, 358, 449, 213, 257,
	382, 363, 387, 370, 260, 0, 0, 388, 308, 436,
	377, 446, 466, 467, 237, 338, 456, 425, 462, 478,
	206, 234, 352, 418, 452, 409, 331, 432, 433, 292,
	408, 266, 191, 306, 472, 204, 397, 221, 211, 197,
	420, 444, 218, 400, 0, 0, 480, 199, 442, 417,
	327, 289, 290, 198, 0, 381, 242, 264, 232, 347,
	439, 440, 230, 481, 208, 461, 201, 0, 460, 340,
	435, 443, 328, 318, 200, 441, 326, 317, 295, 253,
	275, 375, 311, 376, 276, 336, 335, 337, 194, 453,
	0, 195, 0, 414, 454, 482, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 304, 351, 374,
	372, 378, 0, 430, 447, 457, 464, 470, 471, 473,
	474, 475, 476, 477, 339, 278, 410, 294, 309, 0,
	0, 357, 390, 219, 451, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 501, 319, 402, 448, 296, 297,
	298, 0, 187, 202, 305, 0, 379, 261, 479, 459,
	455, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 315, 321, 322, 323, 324, 341, 342, 343, 346,
	349, 350, 353, 355, 356, 359, 366, 367, 368, 369,
	371, 373, 380, 384, 392, 393, 394, 395, 396, 398,
	399, 404, 405, 406, 407, 415, 419, 437, 438, 450,
	463, 468, 270, 445, 469, 0, 314, 0, 0, 316,
	254, 273, 284, 0, 458, 416, 207, 386, 262, 196,
	225, 210, 233, 248, 251, 288, 325, 332, 361, 365,
	267, 245, 223, 383, 220, 401, 422, 423, 424, 426,
	329, 240, 364, 427, 0, 312, 428, 429, 280, 0,
	0, 0, 0, 0, 0, 348, 0, 1385, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 303,
	241, 0, 0, 362, 0, 193, 0, 403, 228, 313,
	310, 434, 255, 247, 243, 227, 281, 320, 360, 421,
	354, 0, 307, 0, 0, 412, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 345, 413, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 299, 301,
	300, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	431, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 334, 231, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 0, 0, 0, 302, 0, 293,
	188, 205, 0, 0, 344, 385, 391, 0, 0, 0,
	229, 0, 389, 358, 449, 213, 257, 382, 363, 387,
	370, 260, 0, 0, 388, 308, 436, 377, 446, 466,
	467, 237, 338, 456, 425, 462, 478, 206, 234, 352,
	418, 452, 409, 331, 432, 433, 292, 408, 266, 191,
	306, 472, 204, 397, 221, 211, 197, 420, 444, 218,
	400, 0, 0, 480, 199, 442, 417, 327, 289, 290,
	198, 0, 381, 242, 264, 232, 347, 439, 440, 230,
	481, 208, 461, 201, 0, 460, 340, 435, 443, 328,
	318, 200, 441, 326, 317, 295, 253, 275, 375, 311,
	376, 276, 336, 335, 337, 194, 453, 0, 195, 0,
	414, 454, 482, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 304, 351, 374, 372, 378, 0,
	430, 447, 457, 464, 470, 471, 473, 474, 475, 476,
	477, 339, 278, 410, 294, 309, 0, 0, 357, 390,
	219, 451, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 501, 319, 402, 448, 296, 297, 298, 0, 187,
	202, 305, 0, 379, 261, 479, 459, 455, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 315, 321,
	322, 323, 324, 341, 342, 343, 346, 349, 350, 353,
	355, 356, 359, 366, 367, 368, 369, 371, 373, 380,
	384, 392, 393, 394, 395, 396, 398, 399, 404, 405,
	406, 407, 415, 419, 437, 438, 450, 463, 468, 270,
	445, 469, 0, 314, 0, 0, 316, 254, 273, 284,
	0, 458, 416, 207, 386, 262, 196, 225, 210, 233,
	248, 251, 288, 325, 332, 361, 365, 267, 245, 223,
	383, 220, 401, 422, 423, 424, 426, 329, 240, 364,
	427, 0, 312, 428, 429, 280, 0, 0, 0, 0,
	0, 0, 348, 0, 1381, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 303, 241, 0, 0,
	362, 0, 193, 0, 403, 228, 313, 310, 434, 255,
	247, 243, 227, 281, 320, 360, 421, 354, 0, 307,
	0, 0, 412, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 345, 413, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 299, 301, 300, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 431, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	334, 231, 0, 0, 0, 0, 465, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 293, 188, 205, 0,
	0, 344, 385, 391, 0, 0, 0, 229, 0, 389,
	358, 449, 213, 257, 382, 363, 387, 370, 260, 0,
	0, 388, 308, 436, 377, 446, 466, 467, 237, 338,
	456, 425, 462, 478, 206, 234, 352, 418, 452, 409,
	331, 432, 433, 292, 408, 266, 191, 306, 472, 204,
	397, 221, 211, 197, 420, 444, 218, 400, 0, 0,
	480, 199, 442, 417, 327, 289, 290, 198, 0, 381,
	242, 264, 232, 347, 439, 440, 230, 481, 208, 461,
	201, 0, 460, 340, 435, 443, 328, 318, 200, 441,
	326, 317, 295, 253, 275, 375, 311, 376, 276, 336,
	335, 337, 194, 453, 0, 195, 0, 414, 454, 482,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 304, 351, 374, 372, 378, 0, 430, 447, 457,
	464, 470, 471, 473, 474, 475, 476, 477, 339, 278,
	410, 294, 309, 0, 0, 357, 390, 219, 451, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 501, 319,
	402, 448, 296, 297, 298, 0, 187, 202, 305, 0,
	379, 261, 479, 459, 455, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 315, 321, 322, 323, 324,
	341, 342, 343, 346, 349, 350, 353, 355, 356, 359,
	366, 367, 368, 369, 371, 373, 380, 384, 392, 393,
	394, 395, 396, 398, 399, 404, 405, 406, 407, 415,
	419, 437, 438, 450, 463, 468, 270, 445, 469, 0,
	314, 0, 0, 316, 254, 273, 284, 0, 458, 416,
	207, 386, 262, 196, 225, 210, 233, 248, 251, 288,
	325, 332, 361, 365, 267, 245, 223, 383, 220, 401,
	422, 423, 424, 426, 329, 240, 364, 427, 0, 312,
	428, 429, 280, 0, 0, 0, 0, 0, 0, 348,
	0, 1379, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 303, 241, 0, 0, 362, 0, 193,
	0, 403, 228, 313, 310, 434, 255, 247, 243, 227,
	281, 320, 360, 421, 354, 0, 307, 0, 0, 412,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 345,
	413, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 299, 301, 300, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 431, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 334, 231, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 293, 188, 205, 0, 0, 344, 385,
	391, 0, 0, 0, 229, 0, 389, 358, 449, 213,
	257, 382, 363, 387, 370, 260, 0, 0, 388, 308,
	436, 377, 446, 466, 467, 237, 338, 456, 425, 462,
	478, 206, 234, 352, 418, 452, 409, 331, 432, 433,
	292, 408, 266, 191, 306, 472, 204, 397, 221, 211,
	197, 420, 444, 218, 400, 0, 0, 480, 199, 442,
	417, 327, 289, 290, 198, 0, 381, 242, 264, 232,
	347, 439, 440, 230, 481, 208, 461, 201, 0, 460,
	340, 435, 443, 328, 318, 200, 441, 326, 317, 295,
	253, 275, 375, 311, 376, 276, 336, 335, 337, 194,
	453, 0, 195, 0, 414, 454, 482, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 304, 351,
	374, 372, 378, 0, 430, 447, 457, 464, 470, 471,
	473, 474, 475, 476, 477, 339, 278, 410, 294, 309,
	0, 0, 357, 390, 219, 451, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 319, 402, 448, 296,
	297, 298, 0, 187, 202, 305, 0, 379, 261, 479,
	459, 455, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 315, 321, 322, 323, 324, 341, 342, 343,
	346, 349, 350, 353, 355, 356, 359, 366, 367, 368,
	369, 371, 373, 380, 384, 392, 393, 394, 395, 396,
	398, 399, 404, 405, 406, 407, 415, 419, 437, 438,
	450, 463, 468, 270, 445, 469, 0, 314, 0, 0,
	316, 254, 273, 284, 0, 458, 416, 207, 386, 262,
	196, 225, 210, 233, 248, 251, 288, 325, 332, 361,
	365, 267, 245, 223, 383, 220, 401, 422, 423, 424,
	426, 329, 240, 364, 427, 0, 312, 428, 429, 280,
	0, 0, 0, 0, 0, 0, 348, 0, 1377, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	303, 241, 0, 0, 362, 0, 193, 0, 403, 228,
	313, 310, 434, 255, 247, 243, 227, 281, 320, 360,
	421, 354, 0, 307, 0, 0, 412, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 345, 413, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 299,
	301, 300, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 431, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 334, 231, 0, 0, 0, 0,
	465, 0, 0, 0, 0, 0, 0, 0, 302, 0,
	293, 188, 205, 0, 0, 344, 385, 391, 0, 0,
	0, 229, 0, 389, 358, 449, 213, 257, 382, 363,
	387, 370, 260, 0, 0, 388, 308, 436, 377, 446,
	466, 467, 237, 338, 456, 425, 462, 478, 206, 234,
	352, 418, 452, 409, 331, 432, 433, 292, 408, 266,
	191, 306, 472, 204, 397, 221, 211, 197, 420, 444,
	218, 400, 0, 0, 480, 199, 442, 417, 327, 289,
	290, 198, 0, 381, 242, 264, 232, 347, 439, 440,
	230, 481, 208, 461, 201, 0, 460, 340, 435, 443,
	328, 318, 200, 441, 326, 317, 295, 253, 275, 375,
	311, 376, 276, 336, 335, 337, 194, 453, 0, 195,
	0, 414, 454, 482, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 304, 351, 374, 372, 378,
	0, 430, 447, 457, 464, 470, 471, 473, 474, 475,
	476, 477, 339, 278, 410, 294, 309, 0, 0, 357,
	390, 219, 451, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 319, 402, 448, 296, 297, 298, 0,
	187, 202, 305, 0, 379, 261, 479, 459, 455, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 315,
	321, 322, 323, 324, 341, 342, 343, 346, 349, 350,
	353, 355, 356, 359, 366, 367, 368, 369, 371, 373,
	380, 384, 392, 393, 394, 395, 396, 398, 399, 404,
	405, 406, 407, 415, 419, 437, 438, 450, 463, 468,
	270, 445, 469, 0, 314, 0, 0, 316, 254, 273,
	284, 0, 458, 416, 207, 386, 262, 196, 225, 210,
	233, 248, 251, 288, 325, 332, 361, 365, 267, 245,
	223, 383, 220, 401, 422, 423, 424, 426, 329, 240,
	364, 427, 0, 312, 428, 429, 280, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 303, 241, 0,
	0, 362, 0, 193, 0, 403, 228, 313, 310, 434,
	255, 247, 243, 227, 281, 320, 360, 421, 354, 0,
	307, 0, 0, 412, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 345, 413, 259, 0, 1354, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 299, 301, 300, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 431, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 334, 231, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 293, 188, 205,
	0, 0, 344, 385, 391, 0, 0, 0, 229, 0,
	389, 358, 449, 213, 257, 382, 363, 387, 370, 260,
	0, 0, 388, 308, 436, 377, 446, 466, 467, 237,
	338, 456, 425, 462, 478, 206, 234, 352, 418, 452,
	409, 331, 432, 433, 292, 408, 266, 191, 306, 472,
	204, 397, 221, 211, 197, 420, 444, 218, 400, 0,
	0, 480, 199, 442, 417, 327, 289, 290, 198, 0,
	381, 242, 264, 232, 347, 439, 440, 230, 481, 208,
	461, 201, 0, 460, 340, 435, 443, 328, 318, 200,
	441, 326, 317, 295, 253, 275, 375, 311, 376, 276,
	336, 335, 337, 194, 453, 0, 195, 0, 414, 454,
	482, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 304, 351, 374, 372, 378, 0, 430, 447,
	457, 464, 470, 471, 473, 474, 475, 476, 477, 339,
	278, 410, 294, 309, 0, 0, 357, 390, 219, 451,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 501,
	319, 402, 448, 296, 297, 298, 0, 187, 202, 305,
	0, 379, 261, 479, 459, 455, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 315, 321, 322, 323,
	324, 341, 342, 343, 346, 349, 350, 353, 355, 356,
	359, 366, 367, 368, 369, 371, 373, 380, 384, 392,
	393, 394, 395, 396, 398, 399, 404, 405, 406, 407,
	415, 419, 437, 438, 450, 463, 468, 270, 445, 469,
	0, 314, 0, 0, 316, 254, 273, 284, 0, 458,
	416, 207, 386, 262, 196, 225, 210, 233, 248, 251,
	288, 325, 332, 361, 365, 267, 245, 223, 383, 220,
	401, 422, 423, 424, 426, 329, 240, 364, 427, 0,
	312, 428, 429, 280, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 0, 1256, 244,
	0, 0, 0, 0, 303, 241, 0, 0, 362, 0,
	193, 0, 403, 228, 313, 310, 434, 255, 247, 243,
	227, 281, 320, 360, 421, 354, 0, 307, 0, 0,
	412, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	345, 413, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 299, 301, 300, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 431, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 334, 231,
	0, 0, 0, 0, 465, 0, 0, 0, 0, 0,
	0, 0, 302, 0, 293, 188, 205, 0, 0, 344,
	385, 391, 0, 0, 0, 229, 0, 389, 358, 449,
	213, 257, 382, 363, 387, 370, 260, 0, 0, 388,
	308, 436, 377, 446, 466, 467, 237, 338, 456, 425,
	462, 478, 206, 234, 352, 418, 452, 409, 331, 432,
	433, 292, 408, 266, 191, 306, 472, 204, 397, 221,
	211, 197, 420, 444, 218, 400, 0, 0, 480, 199,
	442, 417, 327, 289, 290, 198, 0, 381, 242, 264,
	232, 347, 439, 440, 230, 481, 208, 461, 201, 0,
	460, 340, 435, 443, 328, 318, 200, 441, 326, 317,
	295, 253, 275, 375, 311, 376, 276, 336, 335, 337,
	194, 453, 0, 195, 0, 414, 454, 482, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 304,
	351, 374, 372, 378, 0, 430, 447, 457, 464, 470,
	471, 473, 474, 475, 476, 477, 339, 278, 410, 294,
	309, 0, 0, 357, 390, 219, 451, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 501, 319, 402, 448,
	296, 297, 298, 0, 187, 202, 305, 0, 379, 261,
	479, 459, 455, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 315, 321, 322, 323, 324, 341, 342,
	343, 346, 349, 350, 353, 355, 356, 359, 366, 367,
	368, 369, 371, 373, 380, 384, 392, 393, 394, 395,
	396, 398, 399, 404, 405, 406, 407, 415, 419, 437,
	438, 450, 463, 468, 270, 445, 469, 0, 314, 0,
	0, 316, 254, 273, 284, 0, 458, 416, 207, 386,
	262, 196, 225, 210, 233, 248, 251, 288, 325, 332,
	361, 365, 267, 245, 223, 383, 220, 401, 422, 423,
	424, 426, 329, 240, 364, 427, 0, 312, 428, 429,
	280, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 303, 241, 0, 0, 362, 0, 193, 0, 403,
	228, 313, 310, 434, 255, 247, 243, 227, 281, 320,
	360, 421, 354, 0, 307, 0, 0, 412, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 345, 413, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1083, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	299, 301, 300, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 431, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 334, 231, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 293, 188, 205, 0, 0, 344, 385, 391, 0,
	0, 0, 229, 0, 389, 358, 449, 213, 257, 382,
	363, 387, 370, 260, 0, 0, 388, 308, 436, 377,
	446, 466, 467, 237, 338, 456, 425, 462, 478, 206,
	234, 352, 418, 452, 409, 331, 432, 433, 292, 408,
	266, 191, 306, 472, 204, 397, 221, 211, 197, 420,
	444, 218, 400, 0, 0, 480, 199, 442, 417, 327,
	289, 290, 198, 0, 381, 242, 264, 232, 347, 439,
	440, 230, 481, 208, 461, 201, 0, 460, 340, 435,
	443, 328, 318, 200, 441, 326, 317, 295, 253, 275,
	375, 311, 376, 276, 336, 335, 337, 194, 453, 0,
	195, 0, 414, 454, 482, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 304, 351, 374, 372,
	378, 0, 430, 447, 457, 464, 470, 471, 473, 474,
	475, 476, 477, 339, 278, 410, 294, 309, 0, 0,
	357, 390, 219, 451, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 319, 402, 448, 296, 297, 298,
	0, 187, 202, 305, 0, 379, 261, 479, 459, 455,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	315, 321, 322, 323, 324, 341, 342, 343, 346, 349,
	350, 353, 355, 356, 359, 366, 367, 368, 369, 371,
	373, 380, 384, 392, 393, 394, 395, 396, 398, 399,
	404, 405, 406, 407, 415, 419, 437, 438, 450, 463,
	468, 270, 445, 469, 0, 314, 0, 0, 316, 254,
	273, 284, 0, 458, 416, 207, 386, 262, 196, 225,
	210, 233, 248, 251, 288, 325, 332, 361, 365, 267,
	245, 223, 383, 220, 401, 422, 423, 424, 426, 329,
	240, 364, 427, 0, 312, 428, 429, 280, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 303, 241,
	0, 0, 362, 0, 193, 0, 403, 228, 313, 310,
	434, 255, 247, 243, 227, 281, 320, 360, 421, 354,
	0, 307, 0, 0, 412, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 345, 413, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 299, 301, 300,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 431,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 334, 231, 0, 0, 0, 0, 465, 0,
	0, 0, 0, 0, 0, 0, 302, 0, 293, 188,
	205, 0, 0, 344, 385, 391, 0, 0, 0, 229,
	0, 389, 358, 449, 213, 257, 382, 363, 387, 370,
	260, 0, 0, 388, 308, 436, 377, 446, 466, 467,
	237, 338, 456, 425, 462, 478, 206, 234, 352, 418,
	452, 409, 331, 432, 433, 292, 408, 266, 191, 306,
	472, 204, 397, 221, 211, 197, 420, 444, 218, 400,
	0, 0, 480, 199, 442, 417, 327, 289, 290, 198,
	0, 381, 242, 264, 232, 347, 439, 440, 230, 481,
	208, 461, 201, 0, 460, 340, 435, 443, 328, 318,
	200, 441, 326, 317, 295, 253, 275, 375, 311, 376,
	276, 336, 335, 337, 194, 453, 0, 195, 0, 414,
	454, 482, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 304, 351, 374, 372, 378, 0, 430,
	447, 457, 464, 470, 471, 473, 474, 475, 476, 477,
	339, 278, 410, 294, 309, 0, 0, 357, 390, 219,
	451, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	501, 319, 402, 448, 296, 297, 298, 0, 187, 202,
	305, 0, 379, 261, 479, 459, 455, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 710, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 315, 321, 322,
	323, 324, 341, 342, 343, 346, 349, 350, 353, 355,
	356, 359, 366, 367, 368, 369, 371, 373, 380, 384,
	392, 393, 394, 395, 396, 398, 399, 404, 405, 406,
	407, 415, 419, 437, 438, 450, 463, 468, 270, 445,
	469, 0, 314, 0, 0, 316, 254, 273, 284, 0,
	458, 416, 207, 386, 262, 196, 225, 210, 233, 248,
	251, 288, 325, 332, 361, 365, 267, 245, 223, 383,
	220, 401, 422, 423, 424, 426, 329, 240, 364, 427,
	0, 312, 428, 429, 280, 0, 0, 0, 0, 0,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 303, 241, 0, 0, 362,
	0, 193, 0, 403, 228, 313, 310, 434, 255, 247,
	243, 227, 281, 320, 360, 421, 354, 0, 307, 0,
	0, 412, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 345, 413, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 299, 301, 300, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 431, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 557, 0, 268, 0, 334,
	231, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	0, 0, 0, 302, 0, 293, 188, 205, 0, 0,
	344, 385, 391, 0, 0, 0, 229, 0, 389, 358,
	449, 213, 257, 382, 363, 387, 370, 260, 0, 0,
	388, 308, 436, 377, 446, 466, 467, 237, 338, 456,
	425, 462, 478, 206, 234, 352, 418, 452, 409, 331,
	432, 433, 292, 408, 266, 191, 306, 472, 204, 397,
	221, 211, 197, 420, 444, 218, 400, 0, 0, 480,
	199, 442, 417, 327, 289, 290, 198, 0, 381, 242,
	264, 232, 347, 439, 440, 230, 481, 208, 461, 201,
	0, 460, 340, 435, 443, 328, 318, 200, 441, 326,
	317, 295, 253, 275, 375, 311, 376, 276, 336, 335,
	337, 194, 453, 0, 195, 0, 414, 454, 482, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	304, 351, 374, 372, 378, 0, 430, 447, 457, 464,
	470, 471, 473, 474, 475, 476, 477, 339, 278, 410,
	294, 309, 0, 0, 357, 390, 219, 451, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 501, 319, 402,
	448, 296, 297, 298, 0, 187, 202, 305, 0, 379,
	261, 479, 459, 455, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 315, 321, 322, 323, 324, 341,
	342, 343, 346, 349, 350, 353, 355, 356, 359, 366,
	367, 368, 369, 371, 373, 380, 384, 392, 393, 394,
	395, 396, 398, 399, 404, 405, 406, 407, 415, 419,
	437, 438, 450, 463, 468, 556, 445, 469, 0, 314,
	0, 0, 316, 254, 273, 284, 0, 458, 416, 207,
	386, 262, 196, 225, 210, 233, 248, 251, 288, 325,
	332, 361, 365, 267, 245, 223, 383, 220, 401, 422,
	423, 424, 426, 329, 240, 364, 427, 0, 312, 428,
	429, 280, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 303, 241, 0, 0, 362, 0, 193, 0,
	403, 228, 313, 310, 434, 255, 247, 243, 227, 281,
	320, 360, 421, 354, 0, 307, 0, 0, 412, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 345, 413,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 299, 301, 300, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 431, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 334, 231, 0, 0,
	504, 0, 465, 0, 0, 0, 0, 0, 0, 0,
	302, 0, 293, 188, 205, 0, 0, 344, 385, 391,
	0, 0, 0, 229, 0, 389, 358, 449, 213, 257,
	382, 363, 387, 370, 260, 0, 0, 388, 308, 436,
	377, 446, 466, 467, 237, 338, 456, 425, 462, 478,
	206, 234, 352, 418, 452, 409, 331, 432, 433, 292,
	408, 266, 191, 306, 472, 204, 397, 221, 211, 197,
	420, 444, 218, 400, 0, 0, 480, 199, 442, 417,
	327, 289, 290, 198, 0, 381, 242, 264, 232, 347,
	439, 440, 230, 481, 208, 461, 201, 0, 460, 340,
	435, 443, 328, 318, 200, 441, 326, 317, 295, 253,
	275, 375, 311, 376, 276, 336, 335, 337, 194, 453,
	0, 195, 0, 414, 454, 482, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 304, 351, 374,
	372, 378, 0, 430, 447, 457, 464, 470, 471, 473,
	474, 475, 476, 477, 339, 278, 410, 294, 309, 0,
	0, 357, 390, 219, 451, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 501, 319, 402, 448, 296, 297,
	298, 0, 187, 202, 305, 0, 379, 261, 479, 459,
	455, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 315, 321, 322, 323, 324, 341, 342, 343, 346,
	349, 350, 353, 355, 356, 359, 366, 367, 368, 369,
	371, 373, 380, 384, 392, 393, 394, 395, 396, 398,
	399, 404, 405, 406, 407, 415, 419, 437, 438, 450,
	463, 468, 270, 445, 469, 0, 314, 0, 0, 316,
	254, 273, 284, 0, 458, 416, 207, 386, 262, 196,
	225, 210, 233, 248, 251, 288, 325, 332, 361, 365,
	267, 245, 223, 383, 220, 401, 422, 423, 424, 426,
	329, 240, 364, 427, 0, 312, 428, 429, 280, 0,
	0, 0, 0, 0, 0, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 303,
	241, 0, 0, 362, 0, 193, 0, 403, 228, 313,
	310, 434, 255, 247, 243, 227, 281, 320, 360, 421,
	354, 0, 307, 0, 0, 412, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 345, 413, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 299, 301,
	300, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	431, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 334, 231, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 0, 0, 0, 302, 0, 293,
	188, 205, 0, 0, 344, 385, 391, 0, 0, 0,
	229, 0, 389, 358, 449, 213, 257, 382, 363, 387,
	370, 260, 0, 0, 388, 308, 436, 377, 446, 466,
	467, 237, 338, 456, 425, 462, 478, 206, 234, 352,
	418, 452, 409, 331, 432, 433, 292, 408, 266, 191,
	306, 472, 204, 397, 221, 211, 197, 420, 444, 218,
	400, 0, 0, 480, 199, 442, 417, 327, 289, 290,
	198, 0, 381, 242, 264, 232, 347, 439, 440, 230,
	481, 208, 461, 201, 0, 460, 340, 435, 443, 328,
	318, 200, 441, 326, 317, 295, 253, 275, 375, 311,
	376, 276, 336, 335, 337, 194, 453, 0, 195, 0,
	414, 454, 482, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 304, 351, 374, 372, 378, 0,
	430, 447, 457, 464, 470, 471, 473, 474, 475, 476,
	477, 339, 278, 410, 294, 309, 0, 0, 357, 390,
	219, 451, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 501, 319, 402, 448, 296, 297, 298, 0, 187,
	202, 305, 0, 379, 261, 479, 459, 455, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 315, 321,
	322, 323, 324, 2611, 342, 343, 346, 349, 350, 353,
	355, 356, 359, 366, 367, 368, 369, 371, 373, 380,
	384, 392, 393, 394, 395, 396, 398, 399, 404, 405,
	406, 407, 415, 419, 437, 438, 450, 463, 468, 270,
	445, 469, 0, 314, 0, 0, 316, 254, 273, 284,
	0, 458, 416, 207, 386, 262, 196, 225, 210, 233,
	248, 251, 288, 325, 332, 361, 365, 267, 245, 223,
	383, 220, 401, 422, 423, 424, 426, 329, 240, 364,
	427, 0, 312, 428, 429, 280, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 303, 241, 0, 0,
	362, 0, 193, 0, 403, 228, 313, 310, 434, 255,
	247, 243, 227, 281, 320, 360, 421, 354, 0, 307,
	0, 0, 412, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 345, 413, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 299, 301, 300, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 431, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	334, 231, 0, 0, 0, 0, 465, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 293, 188, 205, 0,
	0, 344, 385, 391, 0, 0, 0, 229, 0, 389,
	358, 449, 213, 257, 382, 363, 387, 370, 260, 0,
	0, 388, 308, 436, 377, 446, 466, 467, 237, 338,
	456, 425, 462, 478, 206, 234, 352, 418, 452, 409,
	331, 432, 433, 292, 408, 266, 191, 306, 472, 204,
	397, 221, 211, 197, 420, 444, 218, 400, 0, 0,
	480, 199, 442, 417, 327, 289, 290, 198, 0, 381,
	242, 264, 232, 347, 439, 440, 230, 481, 208, 461,
	201, 0, 460, 340, 435, 443, 328, 318, 200, 441,
	326, 317, 295, 253, 275, 375, 311, 376, 276, 336,
	335, 337, 194, 453, 0, 195, 0, 414, 454, 482,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 304, 351, 374, 372, 378, 0, 430, 447, 457,
	464, 470, 471, 473, 474, 475, 476, 477, 339, 278,
	410, 294, 309, 0, 0, 357, 390, 219, 451, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 501, 319,
	402, 448, 296, 297, 298, 0, 187, 202, 305, 0,
	379, 261, 479, 459, 455, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 315, 321, 322, 323, 324,
	341, 342, 343, 346, 349, 350, 353, 355, 356, 359,
	366, 367, 368, 369, 371, 373, 380, 384, 392, 393,
	394, 395, 396, 398, 399, 404, 405, 406, 407, 415,
	419, 437, 438, 450, 463, 468, 270, 445, 469, 0,
	314, 0, 0, 316, 254, 273, 284, 0, 458, 416,
	207, 386, 262, 196, 225, 210, 233, 248, 251, 288,
	325, 332, 361, 365, 267, 245, 223, 383, 220, 401,
	422, 423, 424, 426, 329, 240, 364, 427, 0, 312,
	428, 429, 280, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 303, 241, 0, 0, 362, 0, 193,
	0, 403, 228, 313, 310, 434, 255, 247, 243, 227,
	281, 320, 360, 421, 354, 0, 307, 0, 0, 412,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 345,
	413, 259, 0, 0, 0, 0, 184, 2328, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 299, 301, 300, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 431, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 334, 231, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 293, 188, 205, 0, 0, 344, 385,
	391, 0, 0, 0, 229, 0, 389, 358, 449, 213,
	257, 382, 363, 387, 370, 260, 0, 0, 388, 308,
	436, 377, 446, 466, 467, 237, 338, 456, 425, 462,
	478, 206, 234, 352, 418, 452, 409, 331, 432, 433,
	292, 408, 266, 191, 306, 472, 204, 397, 221, 211,
	197, 420, 444, 218, 400, 0, 0, 480, 199, 442,
	417, 327, 289, 290, 198, 0, 381, 242, 264, 232,
	347, 439, 440, 230, 481, 208, 461, 201, 0, 460,
	340, 435, 443, 328, 318, 200, 441, 326, 317, 295,
	253, 275, 375, 311, 376, 276, 336, 335, 337, 194,
	453, 0, 195, 0, 414, 454, 482, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 304, 351,
	374, 372, 378, 0, 430, 447, 457, 464, 470, 471,
	473, 474, 475, 476, 477, 339, 278, 410, 294, 309,
	0, 0, 357, 390, 219, 451, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 319, 402, 448, 296,
	297, 298, 0, 187, 202, 305, 0, 379, 261, 479,
	459, 455, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 315, 321, 322, 323, 324, 341, 342, 343,
	346, 349, 350, 353, 355, 356, 359, 366, 367, 368,
	369, 371, 373, 380, 384, 392, 393, 394, 395, 396,
	398, 399, 404, 405, 406, 407, 415, 419, 437, 438,
	450, 463, 468, 270, 445, 469, 0, 314, 0, 0,
	316, 254, 273, 284, 0, 458, 416, 207, 386, 262,
	196, 225, 210, 233, 248, 251, 288, 325, 332, 361,
	365, 267, 245, 223, 383, 220, 401, 422, 423, 424,
	426, 329, 240, 364, 427, 0, 312, 428, 429, 280,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	303, 241, 0, 0, 362, 0, 193, 0, 403, 228,
	313, 310, 434, 255, 247, 243, 227, 281, 320, 360,
	421, 354, 0, 307, 0, 0, 412, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 345, 413, 259, 0,
	0, 0, 0, 184, 1931, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 299,
	301, 300, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 431, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 334, 231, 0, 0, 0, 0,
	465, 0, 0, 0, 0, 0, 0, 0, 302, 0,
	293, 188, 205, 0, 0, 344, 385, 391, 0, 0,
	0, 229, 0, 389, 358, 449, 213, 257, 382, 363,
	387, 370, 260, 0, 0, 388, 308, 436, 377, 446,
	466, 467, 237, 338, 456, 425, 462, 478, 206, 234,
	352, 418, 452, 409, 331, 432, 433, 292, 408, 266,
	191, 306, 472, 204, 397, 221, 211, 197, 420, 444,
	218, 400, 0, 0, 480, 199, 442, 417, 327, 289,
	290, 198, 0, 381, 242, 264, 232, 347, 439, 440,
	230, 481, 208, 461, 201, 0, 460, 340, 435, 443,
	328, 318, 200, 441, 326, 317, 295, 253, 275, 375,
	311, 376, 276, 336, 335, 337, 194, 453, 0, 195,
	0, 414, 454, 482, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 304, 351, 374, 372, 378,
	0, 430, 447, 457, 464, 470, 471, 473, 474, 475,
	476, 477, 339, 278, 410, 294, 309, 0, 0, 357,
	390, 219, 451, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 319, 402, 448, 296, 297, 298, 0,
	187, 202, 305, 0, 379, 261, 479, 459, 455, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 315,
	321, 322, 323, 324, 341, 342, 343, 346, 349, 350,
	353, 355, 356, 359, 366, 367, 368, 369, 371, 373,
	380, 384, 392, 393, 394, 395, 396, 398, 399, 404,
	405, 406, 407, 415, 419, 437, 438, 450, 463, 468,
	270, 445, 469, 0, 314, 0, 0, 316, 254, 273,
	284, 0, 458, 416, 207, 386, 262, 196, 225, 210,
	233, 248, 251, 288, 325, 332, 361, 365, 267, 245,
	223, 383, 220, 401, 422, 423, 424, 426, 329, 240,
	364, 0, 0, 312, 428, 429, 280,
}

var yyPact = [...]int{
	5003, -1000, -384, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1778, 1836, -1000, -1000,
	-1000, -1000, 1927, -1000, 659, 1563, -1000, 1791, 302, -1000,
	36413, 414, -1000, 35299, 412, 3023, 36413, -1000, 145, -1000,
	136, 36413, 141, 34742, -1000, -1000, -296, 15801, 1736, 21,
	17, 36413, -1000, -1000, -1000, -1000, 1907, 1558, -1000, 334,
	-1000, -1000, -1000, -1000, -1000, -1000, 34185, -1000, -1000, -1000,
	1802, 1782, 1936, 561, 1737, -1000, 1840, 1558, -1000, 15801,
	1901, 1851, 15244, -1000, 15244, 341, -1000, -1000, 11338, -1000,
	-1000, 20816, 36413, 36413, 219, -1000, 1791, -1000, -1000, 304,
	-1000, 254, 1483, -1000, 1482, -1000, 598, 420, 288, 392,
	384, 286, 285, 275, 274, 273, 271, 270, 263, 306,
	-1000, 610, 610, -181, -182, 2410, 340, 340, 340, 372,
	1764, 1763, -1000, 665, -1000, 610, 610, 300, 610, 610,
	610, 610, 218, 217, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 320,
	1791, 209, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 36413, 151, 36413, -1000, 481, 36413, 720, 720,
	35, 720, 720, 720, 720, 134, 547, 15, -1000, 120,
	203, 108, 206, 688, 169, 126, -1000, -1000, 204, 688,
	1145, 567, 106, -1000, 720, 9078, 9078, 9078, -1000, 1785,
	-1000, -1000, -1000, -1000, -1000, -1000, 1149, -1000, 363, -1000,
	-1000, -1000, -1000, 36413, 33628, 299, 634, -1000, -1000, -1000,
	81, -1000, -1000, 1195, 762, 15801, 1351, -1000, 2627, 527,
	-1000, -1000, -1000, -1000, -1000, 430, 16358, 16358, 16358, 16358,
	-1000, -1000, 1488, 1488, 1488, 1488, 16358, 1488, 16358, 1488,
	1488, 1488, 1488, 15801, 1488, 1488, 1488, -1000, 1488, 1488,
	1488, 1488, 1488, 1488, 1488, 1488, 1488, 1488, 1488, 1488,
	1488, 1488, 1488, 1488, 1488, 480, 1488, 1488, 1488, 1488,
	1488, -1000, -1000, -1000, -1000, 1488, 1488, 1488, 1488, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18587, -1000,
	13573, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	36413, -1000, 1488, 159, 36413, 36413, 256, 1840, 1558, -1000,
	1907, 1883, 334, -1000, 1895, 1533, 1429, 1108, 1558, 1471,
	36413, -1000, 1491, -1000, -1000, -1000, 1684, 1024, 1143, -1000,
	-1000, -1000, -1000, 814, 15801, -1000, -1000, 1924, -1000, 18030,
	478, 802, 1923, 33071, -1000, 341, 341, 1479, 10773, -22,
	-1000, -1000, -1000, 622, 23601, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1785, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1458, 36413, -1000, -1000, 4079,
	1190, -1000, 1562, -1000, 1452, -1000, 1514, 1574, 411, 1190,
	398, 388, 379, -1000, -79, -1000, -1000, -1000, -1000, -1000,
	610, 610, -1000, 294, 1898, 302, 2716, -1000, -1000, -1000,
	32514, 1559, 1190, -1000, 1557, -1000, 701, 452, 479, 479,
	1190, -1000, -1000, 36413, 1190, 700, 699, 36413, 36413, -1000,
	31957, -1000, 31400, 30843, 958, 36413, 30286, 29729, 29172, 28615,
	28058, -1000, 1668, -1000, 1552, -1000, -1000, -1000, 36413, 36413,
	36413, 313, -1000, -1000, 36413, 1190, -1000, -1000, 955, 948,
	610, 610, 942, 1140, 1138, 1134, 610, 610, 939, 1110,
	25272, 212, 914, 911, 906, 1046, 1106, 211, 1016, 995,
	903, 36413, 1556, 36413, -1000, 197, 662, 350, 614, 1791,
	1734, 1477, 358, 407, 1190, 344, 344, 36413, -1000, 9643,
	-1000, -1000, 1104, 15801, -1000, 705, 688, 688, -1000, -1000,
	-1000, -1000, -1000, -1000, 720, 36413, 705, -1000, -1000, -1000,
	688, 720, 36413, 720, 720, 720, 720, 688, 688, 688,
	720, 36413, 36413, 36413, 36413, 36413, 36413, 36413, 36413, 36413,
	9078, 9078, 9078, 567, 720, -303, -1000, 1078, -1000, 1630,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 139,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -101,
	1474, 27501, -1000, -304, -307, -309, -310, -1000, -1000, -1000,
	-311, -315, -1000, -1000, -1000, 15801, 15801, 15801, 15801, -1000,
	877, 16358, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 786,
	578, 16358, 16358, 16358, 16358, 16358, 16358, 16358, 16358, 16358,
	16358, 16358, 16358, 16358, 16358, 16358, 616, 5801, 5801, 527,
	527, 527, 527, -1000, 15244, 15801, 15801, 527, -1000, 1190,
	26944, 15244, 15244, 15801, 1770, 640, 762, 36413, -1000, 1108,
	-1000, -1000, -1000, 905, -1000, 36413, 36413, 1278, 15801, 15801,
	15801, 15801, 15801, 15801, 12458, 15801, 15801, 15801, 11901, 9643,
	15244, 15244, 15244, 15244, 15244, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 475, 1240, 1308, 1450,
	-1000, 1473, -1000, -163, 20259, 15801, 1068, 1922, 1583, 36413,
	-1000, -1000, -1000, 1840, -1000, 1840, 1240, 1835, 1683, 15244,
	-1000, -1000, 1835, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1388, -1000, 36413, 1471, 1844, 36413, 1682, 1067, 284,
	-1000, 15801, 15801, 1470, -1000, 913, 36413, -1000, -1000, 26387,
	-1000, -1000, 8513, -1000, 36413, 247, 36413, -1000, 19702, 25830,
	10208, -22, -1000, 10208, 1361, -1000, -10, -29, 13015, 521,
	-1000, -1000, -1000, 2410, 16915, 1237, 521, 66, -1000, -1000,
	-1000, 1514, -1000, 1514, 1514, 1514, 1514, 284, 284, 284,
	284, -1000, -1000, -1000, -1000, -1000, 1555, 1554, -1000, 1514,
	1514, 1514, 1514, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1553, 1553, 1553, 1515, 1515, 335, -1000, 15801, 207, 36413,
	1806, 901, 197, 345, 1560, 1190, 1190, 1190, 345, -1000,
	1332, 1310, -1000, -375, 1468, -1000, -1000, 1897, -1000, -1000,
	750, 723, 718, 635, 36413, 164, 242, -1000, 327, -1000,
	36413, 1190, 695, 479, 1190, -1000, 1190, -1000, -1000, -1000,
	-1000, -1000, 1190, 1424, -1000, 1494, 781, 715, 756, 698,
	1424, -1000, -1000, -112, 1424, -1000, 1424, -1000, 1424, -1000,
	1424, -1000, 1424, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 591, 36413, 164, 616, -1000, 354, -1000, -1000, 616,
	616, -1000, -1000, -1000, -1000, 1059, 1057, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -364, 36413, -1000, 190, 612, 222,
	266, 226, 36413, 166, 1838, 184, 213, 36413, 36413, 344,
	1629, 36413, 1814, 36413, -1000, -1000, -1000, -1000, -1000, 762,
	36413, -1000, -1000, 720, 720, -1000, -1000, 36413, 720, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 720, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 36413, 36413, -1000, -1000, -1000,
	-1000, -1000, 140, -12, 282, -1000, -1000, -1000, -1000, -1000,
	1859, -1000, 762, 670, 658, -1000, -1000, -1000, 973, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 786, 16358, 16358, 16358,
	1194, 400, 1285, 1451, 1061, 1155, 1155, 855, 855, 546,
	546, 546, 546, 546, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1056, -1000, -1000, 1432, -1000, 788, 893, 1108,
	-1000, 1432, 1432, 897, 15244, -1000, -1000, 660, -1000, 15801,
	1108, -1000, -1000, 1108, 1108, 1421, 1379, 1921, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 778,
	981, 981, 981, 981, 981, 15801, 920, -1000, -1000, -1000,
	1108, 1195, 1108, 1377, -1000, 1123, 981, 1108, 15244, 15244,
	1366, 1488, 474, -1000, 1432, 1108, 1108, 1432, 1432, 9643,
	1108, -1000, 36413, -1000, -293, -1000, -24, 588, 1488, -1000,
	25272, 1108, -1000, 5539, -1000, 37527, -1000, -1000, -1000, -1000,
	-1000, 23044, 1529, 1835, -1000, -1000, 1488, 1448, -1000, -1000,
	284, 37, 22487, -1000, -1000, 762, 762, 15801, -1000, -1000,
	-1000, -1000, -1000, -1000, 461, 1912, 295, 1488, -1000, 1481,
	1779, -1000, -1000, -1000, 1843, 17473, -1000, 1488, 1488, 36413,
	1464, 1382, -1000, 460, -1000, 1361, -22, -32, -1000, -1000,
	-1000, -1000, 762, -1000, 1300, 260, 2327, -1000, 329, -1000,
	-1000, -1000, -1000, 1749, 58, -1000, -1000, -1000, 284, 284,
	-1000, -1000, -1000, -1000, -1000, -1000, 1054, 1054, -1000, -1000,
	-1000, -1000, -1000, 878, -1000, -1000, -1000, 875, -1000, -1000,
	1141, 1616, 207, -1000, -1000, 610, 1053, 1752, 36413, -1000,
	-1000, 1220, 190, 36413, 648, 1628, -1000, 1560, 1560, 1560,
	36413, -1000, -1000, -1000, -1000, -366, 61, 310, -1000, -1000,
	-1000, 378, 36413, 1445, -1000, 160, -1000, 1186, 1697, 36413,
	-1000, 1441, 1551, 1190, 1190, -1000, -1000, -1000, 36413, 1488,
	-1000, -1000, -1000, -1000, 406, 1790, 1789, 164, 160, 521,
	1190, -1000, -1000, -1000, -1000, -1000, -367, 1439, 381, 176,
	253, 36413, 36413, 36413, 36413, 36413, 454, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 214, 349, -1000, 36413, 36413,
	541, -1000, -1000, -1000, 688, -1000, -1000, 688, -1000, -1000,
	-1000, -1000, -1000, 1783, 36413, -20, -337, -1000, -331, -1000,
	-1000, -1000, -1000, 1136, 394, 1285, 16358, 16358, -1000, 15244,
	-105, 477, 477, 616, -1000, -1000, -1000, 15801, 15801, 1484,
	579, -1000, 15801, 751, -1000, -1000, -1000, 15801, 15801, 15801,
	1108, 264, -1000, -1000, -1000, -1000, -1000, 1920, -1000, 15801,
	-1000, -1000, 15801, 15801, -1000, -1000, 1432, 1432, 15244, 9643,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	588, -1000, 479, 479, 479, 36413, -1000, -1000, -1000, -1000,
	-1000, -1000, 1345, 1858, -1000, 1696, 1695, 1918, 1912, -1000,
	19702, 1835, -1000, -1000, 36413, -288, -1000, 1721, 1701, -1000,
	-1000, -1000, -1000, 7948, 1840, 15801, 1625, 36413, 1488, -1000,
	19145, 36413, 36413, 19702, 19702, 19702, 19702, 19702, -1000, 1665,
	1662, -1000, 1661, 1641, 1669, 36413, -1000, 1413, 1108, 1883,
	17473, 334, 15801, 21373, 1469, 19702, -1000, -1000, 19702, 36413,
	7383, -1000, -1000, -21, -38, -1000, -1000, -1000, -1000, 2410,
	-1000, -1000, 1680, 1842, 1742, -1000, -1000, -1000, -1000, 1370,
	-1000, 1363, 1294, 1347, 118, -1000, 1571, 1781, 610, 610,
	-1000, 872, -1000, 1190, -1000, -1000, 375, -1000, 1813, 36413,
	1600, 1597, 1596, -1000, -374, 870, 1534, 1570, 15801, 1532,
	1886, 1256, 36413, -1000, -1000, 36413, -1000, -1000, 338, -1000,
	207, 36413, -1000, -1000, -1000, 242, 36413, -1000, 5414, 160,
	-1000, -1000, -1000, -1000, -1000, -1000, 36413, 188, -1000, 1528,
	1083, -1000, -1000, 1502, -1000, -1000, -1000, -1000, 158, 221,
	-1000, 36413, 509, 1616, 36413, -1000, -1000, -1000, 720, 720,
	-1000, -1000, 1777, -1000, 1190, 16358, 16358, -1000, 527, -1000,
	1488, 1108, 1514, 1514, -1000, 1514, 1515, -1000, 1514, 129,
	1514, 125, 1514, -1000, -1000, 1108, 1108, 904, 818, -88,
	-1000, 762, 15801, 1103, 1080, 981, -1000, 1513, 1501, 15801,
	981, -1000, 762, -1000, -1000, 1108, -1000, -1000, 1848, 1848,
	1848, 1323, 36970, 36413, -1000, -1000, -1000, -1000, 1912, 1908,
	1280, -1000, -1000, 37, 369, -1000, 1715, 1701, -1000, 1885,
	1728, 1873, -1000, -1000, -1000, 762, -1000, 1800, 1325, -1000,
	602, 1156, -1000, -1000, 14687, 1339, 1694, 457, 1323, 1343,
	1779, 1579, 1595, 1653, -1000, -1000, -1000, -1000, 1649, -1000,
	1647, -1000, -1000, 1491, -1000, -1000, 1308, 1108, 1075, 247,
	19702, 1341, 1341, -1000, 445, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 758, 5360, 1934, -1000, 1040, -1000, 1282, -1000,
	692, 691, -1000, 36413, 1500, -1000, 284, 1031, 284, 863,
	-1000, 860, -1000, -1000, -226, -1000, -1000, 1540, 1587, -1000,
	-1000, 36413, -1000, -1000, 36413, 36413, 36413, 1499, 1872, -1000,
	15801, 1497, 599, 1063, 36413, 36413, -1000, -1000, 235, 1488,
	-1000, 1317, 1298, -1000, -156, -1000, 15801, -1000, -1000, -1000,
	1041, 1041, -1000, 1491, -1000, -1000, -1000, 1183, -1000, -1000,
	-132, 36413, 36413, 36413, 36413, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 527, 16358, -1000, -1000, 284, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15801, -1000,
	15801, -1000, 1840, 1021, 762, 15801, 15801, -1000, 837, 821,
	981, -1000, -1000, 1488, 1718, 1488, 1488, 21373, -1000, -1000,
	1908, 1906, 1869, 1712, 1717, 1717, 1715, -1000, 1868, 1866,
	-1000, 1014, 1865, 996, 669, -1000, 36413, 15801, 1488, -1000,
	317, 36413, 1488, 36413, -1000, 1904, -1000, -1000, 15801, 1496,
	-1000, 15801, -1000, -1000, -1000, -1000, -1000, -1000, 5801, 1912,
	1341, -1000, -1000, 538, -1000, 15801, -1000, -1000, -1000, 1199,
	-1000, -1000, -1000, -1000, -1000, 1493, 15801, -1000, -1000, -1000,
	1181, 1163, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1491, -1000, -1000, -1000, -1000, 242, -372, 1034, 36413, 810,
	-1000, 1296, 1256, 426, -1000, 15801, 283, -1000, 242, -1000,
	-187, -191, 981, -1000, -1000, 1837, -1000, -1000, 9643, -1000,
	-1000, 1490, 1537, -1000, 163, -1000, 981, 981, 1108, -1000,
	981, 981, 1161, 1153, -1000, 21930, -1000, 1864, 1863, 24715,
	24715, 588, 1906, -1000, 15801, 15801, 1710, 856, -1000, -1000,
	-1000, -1000, 994, 980, -1000, 978, -1000, 1932, -1000, 762,
	-1000, 1488, -1000, 444, 1156, -1000, 1840, 762, 36413, 762,
	38, 1904, -1000, 981, -1000, 1488, 1488, 1488, 1488, 1488,
	1488, 1488, 1488, 1488, 1488, 36413, 943, -1000, -1000, 1825,
	1290, 60, -1000, 1275, -1000, -1000, -1000, -1000, 14130, -1000,
	-1000, -1000, -1000, -1000, -1000, 334, 1243, -1000, 576, 36413,
	36413, 1108, 265, -138, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1234, -1000, -1000, -1000, -1000, -1000, 1234, 1234, -1000,
	-1000, 762, 1195, -1000, 841, -1000, -1000, -1000, -1000, -1000,
	36413, 1156, 36413, -1000, 1215, 1108, 1488, 1840, -1000, 1213,
	-1000, 334, -1000, 1487, 1570, -1000, 1108, -127, 9643, 6818,
	1189, -1000, -1000, 1681, -109, -152, 24158, -1000, -1000, -1000,
	-1000, -1000, 1081, -1000, -1000, 21373, 35856, -1000, 1594, 769,
	-127, 15801, 1283, -1000, -1000, -34, -1000, -1000, -1000, -1000,
	-1000, 1502, -1000, 1678, -1000, -1000, -1000, -1000, 1169, -1000,
	3204, -252, 1593, -1000, 1917, -1000, -1000, -1000, 735, 974,
	-1000, -1000, -1000, -1000, 909, 36413, 315, -1000, -1000, -132,
	-136, -1000, 35856, -248, 521, 5801, -1000, -1000, 1929, 533,
	533, -1000, -1000, -380, 1158, 185, -1000, -139, -1000, -1000,
	1811, 38, -1000, -1000, -1000, 289, 867, -1000, -1000, 764,
	-380, -1000, -153, -256, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 5801, 181, 181, -1000, 1591, -1000, -1000, 5916,
	-1000, 1586, -239, -1000, 879, -322, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2241, 2240, 29, 5, 2239, 52, 88, 172, 20,
	179, 93, 2238, 2237, 2236, 2235, 2234, 2231, 2230, 211,
	201, 200, 2229, 2228, 2227, 2225, 2222, 2220, 2218, 2217,
	2216, 2215, 198, 155, 171, 2214, 2212, 2211, 102, 159,
	80, 83, 164, 2210, 2207, 74, 2206, 2205, 2204, 180,
	176, 658, 2203, 174, 105, 36, 2202, 2200, 2197, 2196,
	2194, 2193, 2192, 2191, 2190, 2188, 2186, 2185, 2183, 2179,
	2178, 2176, 288, 2175, 2174, 15, 2173, 76, 2171, 2170,
	2168, 2167, 118, 2166, 2165, 2164, 2163, 2162, 2157, 137,
	2156, 2155, 2153, 2150, 204, 2148, 2146, 232, 99, 100,
	2145, 2142, 97, 166, 2141, 106, 2140, 2135, 2134, 148,
	2133, 3895, 2132, 60, 50, 2131, 47, 75, 49, 48,
	2, 3, 2129, 2127, 59, 73, 2125, 91, 58, 2124,
	86, 90, 2123, 2122, 11, 6, 2121, 8, 2120, 4,
	66, 2119, 2118, 116, 2117, 2116, 2113, 85, 2112, 2111,
	69, 2110, 81, 127, 94, 68, 2107, 32, 46, 2106,
	2105, 2104, 2103, 2101, 40, 2097, 2096, 2094, 135, 21,
	157, 27, 35, 41, 124, 2093, 30, 78, 2092, 134,
	121, 2091, 55, 28, 31, 2090, 26, 122, 149, 25,
	98, 125, 2089, 2088, 45, 67, 2087, 2086, 2083, 2077,
	2074, 2072, 65, 2068, 42, 2065, 187, 2064, 10, 2063,
	39, 24, 2061, 61, 140, 63, 33, 2059, 169, 2051,
	44, 167, 120, 152, 2048, 2046, 2045, 175, 236, 2042,
	2041, 71, 161, 139, 143, 2040, 242, 2038, 2037, 82,
	1644, 2075, 19, 154, 2036, 2035, 3116, 126, 129, 23,
	2032, 104, 2031, 2028, 2027, 177, 160, 108, 854, 101,
	2026, 16, 2025, 2023, 2021, 2020, 2019, 2018, 183, 181,
	43, 7, 165, 70, 2017, 2016, 2014, 115, 96, 2012,
	151, 146, 117, 156, 2011, 158, 138, 110, 2010, 95,
	2009, 2006, 2005, 2004, 84, 2003, 2002, 2001, 2000, 144,
	142, 111, 77, 1998, 79, 107, 145, 153, 38, 1997,
	34, 1992, 1987, 162, 22, 1983, 13, 92, 1979, 1978,
	0, 1977, 14, 170, 239, 147, 1975, 1972, 9, 1971,
	12, 1969, 1963, 131, 1959, 1953, 1951, 18, 37, 17,
	1, 1950, 1948, 4264, 2864, 119, 1947, 178,
}

//line sql.y:6460
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 341, 342, 342, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 320, 320,
	320, 323, 323, 30, 67, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 80, 80, 20, 21, 21, 21, 21,
	345, 345, 145, 145, 143, 143, 144, 144, 213, 213,
	22, 23, 23, 223, 223, 222, 222, 222, 224, 224,
	224, 224, 258, 258, 24, 24, 24, 24, 24, 95,
	95, 322, 322, 321, 316, 316, 315, 315, 314, 319,
	319, 318, 318, 317, 36, 37, 46, 46, 46, 46,
	47, 48, 324, 324, 290, 52, 52, 51, 51, 51,
	51, 53, 53, 50, 50, 49, 49, 292, 292, 279,
	279, 291, 291, 291, 291, 291, 291, 291, 278, 278,
	106, 106, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 336, 336, 193, 193, 193, 193, 193,
	193, 115, 115, 124, 124, 124, 124, 113, 113, 114,
	112, 112, 112, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 123, 123, 119, 119,
	119, 120, 120, 120, 121, 121, 121, 121, 337, 337,
	337, 337, 261, 261, 261, 261, 264, 264, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 263, 263, 263,
	263, 263, 265, 265, 265, 265, 265, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 267, 267, 267, 267, 267, 267, 267, 267,
	277, 277, 268, 268, 272, 272, 273, 273, 273, 274,
	274, 274, 275, 275, 270, 270, 270, 270, 270, 270,
	271, 271, 271, 280, 304, 304, 303, 303, 301, 301,
	301, 301, 289, 289, 298, 298, 298, 298, 298, 288,
	288, 284, 284, 284, 285, 285, 286, 286, 283, 283,
	287, 287, 300, 300, 299, 281, 281, 282, 282, 306,
	338, 338, 338, 338, 339, 339, 307, 329, 330, 328,
	328, 328, 328, 328, 77, 77, 77, 235, 235, 235,
	296, 296, 295, 295, 295, 297, 297, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 230, 230, 230, 327, 327,
	327, 327, 327, 327, 326, 326, 326, 293, 293, 293,
	325, 325, 54, 54, 177, 177, 43, 43, 43, 43,
	43, 43, 42, 42, 42, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 44, 44,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 82,
	82, 83, 83, 83, 83, 84, 84, 84, 309, 309,
	55, 55, 3, 3, 133, 135, 136, 136, 134, 134,
	134, 134, 134, 134, 57, 57, 56, 56, 138, 137,
	139, 139, 139, 1, 1, 2, 2, 4, 4, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 276, 276, 276, 308, 308, 310, 312, 312, 312,
	312, 311, 91, 91, 26, 35, 35, 27, 27, 27,
	27, 28, 28, 58, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 331, 331, 229, 229, 237, 237, 228, 228,
	251, 251, 251, 231, 231, 231, 232, 232, 335, 335,
	335, 60, 60, 60, 62, 62, 63, 64, 64, 253,
	253, 254, 254, 65, 66, 78, 78, 78, 78, 78,
	78, 81, 81, 81, 13, 13, 13, 13, 74, 74,
	74, 12, 12, 61, 61, 68, 332, 332, 333, 334,
	334, 334, 334, 69, 71, 29, 29, 29, 29, 29,
	29, 101, 101, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 96, 96, 96, 90, 90,
	346, 72, 73, 73, 94, 94, 94, 87, 87, 87,
	93, 93, 93, 14, 14, 15, 212, 212, 16, 16,
	98, 98, 100, 100, 100, 100, 100, 102, 102, 102,
	102, 102, 102, 102, 97, 97, 99, 99, 99, 99,
	244, 244, 244, 243, 243, 127, 127, 129, 128, 128,
	130, 130, 131, 131, 131, 131, 175, 175, 153, 153,
	210, 210, 208, 208, 209, 209, 211, 211, 211, 211,
	214, 214, 132, 132, 132, 132, 140, 140, 141, 141,
	142, 142, 252, 252, 249, 249, 249, 248, 248, 146,
	146, 146, 148, 147, 147, 147, 147, 149, 149, 151,
	151, 150, 150, 152, 157, 157, 156, 156, 154, 154,
	154, 154, 155, 155, 155, 155, 158, 158, 111, 111,
	111, 111, 111, 111, 122, 122, 122, 122, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 79, 79, 79, 226, 226,
	159, 159, 167, 167, 167, 167, 160, 160, 160, 160,
	160, 160, 160, 168, 168, 168, 174, 169, 169, 165,
	165, 165, 165, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 347, 347, 269, 269, 269, 269,
	166, 166, 166, 166, 166, 92, 92, 92, 92, 92,
	257, 257, 257, 260, 260, 260, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 180, 180, 88, 88, 178, 178, 179, 181, 181,
	176, 176, 176, 162, 162, 162, 182, 182, 183, 183,
	184, 184, 186, 185, 185, 187, 188, 188, 188, 189,
	189, 190, 190, 190, 45, 45, 45, 45, 45, 40,
	40, 40, 40, 41, 41, 41, 103, 103, 103, 103,
	105, 105, 104, 104, 75, 75, 76, 76, 76, 109,
	109, 110, 110, 110, 107, 107, 108, 108, 206, 206,
	191, 191, 191, 198, 198, 198, 194, 194, 196, 196,
	196, 197, 197, 197, 195, 203, 203, 205, 205, 204,
	204, 200, 200, 201, 201, 202, 202, 202, 199, 199,
	161, 161, 161, 161, 161, 207, 207, 207, 207, 215,
	215, 171, 171, 173, 173, 172, 126, 216, 216, 220,
	217, 217, 221, 221, 221, 221, 221, 218, 218, 219,
	219, 245, 245, 245, 225, 225, 236, 236, 233, 233,
	234, 234, 227, 227, 238, 238, 238, 70, 170, 170,
	305, 305, 302, 241, 241, 242, 242, 246, 246, 250,
	250, 247, 247, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 343, 344, 255, 256, 256, 256,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 3, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	5, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 2, 2, 2, 1, 1,
	0, 2, 2, 5, 0, 1, 1, 2, 1, 3,
	2, 3, 0, 1, 4, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 3, 1, 3, 1, 7,
	5, 6, 6, 7, 0, 1, 5, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 0, 1, 2,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 8, 6, 5, 5, 2, 2, 2,
	2, 3, 3, 3, 4, 1, 3, 5, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 0,
	6, 5, 6, 4, 5, 0, 8, 9, 0, 3,
	0, 1, 0, 3, 8, 4, 1, 3, 3, 6,
	7, 7, 8, 4, 0, 1, 0, 1, 3, 3,
	1, 1, 2, 1, 1, 0, 2, 0, 2, 5,
	3, 7, 4, 4, 4, 4, 3, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 0, 2, 2, 1, 3, 2, 0, 4, 4,
	3, 2, 1, 3, 3, 3, 5, 7, 7, 6,
	5, 3, 2, 3, 3, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 4, 2, 4, 5, 4, 4,
	4, 4, 4, 3, 3, 3, 5, 2, 3, 3,
	3, 3, 1, 1, 0, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 2, 0, 1,
	1, 2, 1, 3, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 1, 3, 4, 3, 7,
	0, 3, 1, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 1, 1, 2, 6, 5,
	6, 6, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 3, 4, 3, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 9, 6, 6, 6,
	2, 2, 3, 3, 3, 1, 1, 1, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	5, 5, 6, 4, 4, 8, 6, 8, 6, 8,
	5, 4, 2, 2, 1, 2, 2, 2, 8, 8,
	6, 5, 4, 4, 4, 4, 4, 7, 4, 6,
	4, 4, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 3,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 0, 5, 5, 2, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 2, 1,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 2, 2, 0, 3, 0, 2,
	0, 1, 3, 1, 3, 2, 0, 1, 1, 0,
	1, 2, 4, 4, 0, 2, 2, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 4,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -341, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -58, -59, -60, -62,
	-63, -64, -65, -66, -12, -61, -29, -30, -67, -68,
	-69, -70, -71, -14, -15, -16, -7, -6, -11, 7,
	8, -80, -31, 30, -36, -46, 209, -47, -37, 210,
	-48, 212, 211, 248, 213, 241, 72, 290, 291, 293,
	294, 295, 296, -81, 246, 247, 215, 34, 43, 31,
	32, 35, 219, 254, 255, 218, -8, -32, 6, -343,
	9, 416, 243, 242, 26, -10, 436, 83, -342, 570,
	-206, -191, 20, 31, 27, -190, -186, -94, -191, 18,
	16, 5, -72, -346, -72, -72, 10, 11, -72, -290,
	-292, 83, 146, 83, -72, -52, -51, -50, -49, -53,
	29, -43, -44, -313, -42, -39, 214, 211, 258, 110,
	111, 248, 249, 250, 213, 232, 247, 251, 246, 267,
	-38, 78, 31, 436, 439, -297, 210, 216, 217, 417,
	113, 112, 73, 212, -294, 342, 540, -53, 542, 99,
	101, 541, 42, 222, 543, 544, 545, 546, 231, 547,
	548, 549, 550, 556, 557, 558, 559, 114, 5, -72,
	-250, -246, -320, -240, 86, 87, 88, 433, 234, 467,
	468, 283, 78, 39, 339, 342, 540, 290, 304, 298,
	325, 317, 434, 469, 286, 235, 271, 537, 315, 122,
	542, 289, 470, 249, 347, 348, 349, 99, 293, 384,
	555, 288, 471, 553, 101, 541, 77, 49, 42, 244,
	313, 218, 309, 543, 272, 472, 444, 265, 113, 110,
	562, 34, 307, 48, 28, 552, 112, 47, 544, 137,
	473, 545, 351, 330, 531, 46, 352, 250, 474, 81,
	255, 438, 539, 353, 308, 354, 282, 551, 215, 475,
	523, 355, 356, 532, 476, 331, 335, 477, 376, 357,
	569, 50, 478, 479, 533, 111, 480, 76, 546, 302,
	303, 481, 280, 233, 378, 329, 429, 430, 431, 102,
	104, 103, 231, 33, 358, 435, 284, 56, 259, 379,
	44, 333, 566, 43, 527, 482, 530, 328, 324, 426,
	51, 483, 484, 485, 486, 547, 327, 301, 323, 561,
	456, 277, 548, 60, 217, 337, 336, 338, 266, 375,
	320, 487, 488, 489, 238, 79, 490, 310, 19, 491,
	492, 359, 273, 493, 54, 494, 495, 382, 247, 496,
	52, 549, 37, 252, 563, 550, 497, 498, 499, 500,
	254, 501, 361, 502, 360, 332, 334, 261, 362, 437,
	503, 306, 251, 554, 504, 239, 538, 253, 258, 246,
	383, 240, 505, 506, 507, 508, 509, 287, 510, 511,
	294, 556, 427, 41, 512, 513, 514, 515, 281, 276,
	377, 386, 59, 80, 344, 516, 536, 300, 274, 517,
	291, 53, 557, 558, 559, 268, 560, 7, 567, 568,
	364, 114, 278, 279, 45, 321, 260, 518, 519, 311,
	312, 326, 299, 322, 292, 524, 262, 365, 428, 248,
	520, 385, 275, 340, 345, 441, 267, 366, 535, 440,
	319, 316, 269, 521, 367, 223, 263, 264, 522, 525,
	368, 369, 285, 370, 371, 372, 373, 374, 270, 439,
	297, 314, 346, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 425, 221, -72, 221, -150, -246, 221, -218, 348,
	-237, 350, 363, 358, 368, 356, -229, 359, 361, 261,
	-335, 376, 221, 365, 209, 163, 351, 360, 369, 370,
	285, 371, 374, 270, -331, -320, 545, 560, 122, 318,
	355, 353, 377, 527, 373, 372, -246, 292, -253, 297,
	-241, -320, -240, 295, -150, -78, 523, 213, -255, -255,
	-96, 527, 529, -169, -111, 130, -122, -125, -116, -117,
	-163, -164, -165, -166, -123, -176, 152, 153, 160, 131,
	-174, -126, 24, 432, 418, 417, 163, 29, 205, 66,
	67, 420, 421, 133, 55, 393, 394, -124, 389, 395,
	390, 423, 424, 105, 425, 102, 104, 103, 426, 427,
	428, 429, 430, 431, -241, -246, 226, 388, 220, 158,
	416, -118, -114, -6, -172, 387, 391, 392, 396, -320,
	-240, -120, -119, -159, 89, 95, 100, 96, -340, 106,
	-343, 90, 91, 92, 93, 94, 107, 108, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 42,
	364, 364, -150, -72, -72, -72, -72, -184, -94, -186,
	-8, -6, -343, 6, -72, -6, -7, -11, -32, -34,
	463, -33, -246, -191, -206, 10, 148, 40, 48, -189,
	-190, -10, -6, -111, 17, 21, 22, -99, 154, -111,
	-246, -73, -99, -227, 225, -72, -72, -217, -258, 292,
	-221, 377, 376, -242, -219, -241, -239, -218, 375, 214,
	442, 129, 23, 25, 132, 163, 117, 17, 133, 35,
	216, 318, 232, 162, 228, 417, 209, 70, 443, 389,
	390, 387, 393, 419, 420, 388, 350, 29, 11, 445,
	26, 242, 22, 36, 156, 211, 136, 446, 245, 24,
	243, 105, 108, 448, 20, 73, 237, 12, 230, 38,
	14, 449, 450, 15, 226, 225, 148, 222, 68, 9,
	205, 27, 145, 64, 451, 124, 452, 453, 454, 455,
	118, 66, 146, 18, 564, 391, 392, 31, 528, 432,
	256, 158, 71, 57, 529, 130, 457, 458, 106, 459,
	109, 74, 534, 126, 16, 69, 40, 460, 257, 461,
	227, 565, 462, 380, 463, 147, 212, 416, 67, 464,
	220, 363, 6, 422, 30, 241, 229, 116, 65, 465,
	221, 135, 423, 424, 224, 119, 107, 5, 123, 32,
	10, 72, 75, 394, 395, 396, 55, 115, 436, 134,
	13, 466, 381, 128, 122, -291, 146, -278, -282, -241,
	236, -307, 232, -150, -300, -299, -241, -95, -236, 222,
	230, 229, 123, -324, 126, 278, 388, 220, -49, -50,
	-218, 162, -82, 253, 257, 84, 84, -282, -281, -280,
	-325, 257, 236, -306, -298, 228, 237, -288, 229, 230,
	-283, 222, 124, -325, -283, 227, 237, 257, 257, 114,
	257, 114, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 252, -289, 138, -289, 440, 440, -294, -325, -325,
	-325, 224, 33, 33, -238, -283, 224, 23, -289, -289,
	-218, 162, -289, -289, -289, -289, 265, 265, -289, -289,
	-289, -289, -289, -289, -289, -289, -289, -289, -289, -289,
	-289, -289, -289, 221, -324, -103, 374, 285, 78, -51,
	267, -35, -150, -236, 222, 223, -324, 254, -150, 206,
	-150, -231, 146, 13, -231, -228, 364, 362, 349, 354,
	-231, -231, -231, -231, 268, 347, -284, 222, 33, 233,
	364, 268, 347, 268, 269, 268, 269, 357, 367, 268,
	-251, 12, 148, 388, 352, 356, 261, 221, 262, 223,
	366, -320, 530, 269, -251, 90, -232, 146, 364, 264,
	-231, -256, -343, -242, 318, -256, -256, 30, 87, 224,
	-241, -74, -241, 90, -13, -9, -20, -19, -21, 138,
	-101, 364, -89, 163, 545, 531, 532, 533, 530, 361,
	538, 536, 534, 268, 535, 84, 126, 128, 129, -111,
	145, -160, 138, 139, 140, 141, 142, 143, 144, 148,
	130, 132, 146, 147, 127, 149, 150, 151, 152, 153,
	154, 155, 157, 156, 158, 159, 162, 207, 208, -117,
	-117, -117, -117, -174, -343, -343, -343, -117, -226, -343,
	-117, -343, -343, -343, -343, -180, -111, -343, -347, -343,
	-347, -347, -269, -343, -269, -343, -343, -343, -343, -343,
	-343, -343, -343, -343, -343, -343, -343, -343, -343, 206,
	-343, -343, -343, -343, -343, -269, -269, -269, -269, 100,
	95, 89, -176, 96, 90, -241, -246, -6, -7, -169,
	-255, -332, -333, -153, -150, -343, 285, -241, -241, 254,
	-189, -10, -6, -184, -190, -186, -6, -72, -87, -100,
	61, 62, -102, 22, 36, 65, 63, 21, -344, 85,
	-344, -206, -344, 84, -34, -210, 83, 59, 41, 90,
	90, 84, 19, -185, -187, -111, 12, -244, -243, 23,
	-241, 90, 206, 98, 12, -151, 27, -150, -227, -227,
	84, 292, -221, -258, -223, -222, 378, 380, 138, -245,
	-241, 90, 29, 85, 84, -150, -261, -264, -266, -265,
	-267, -262, -263, 315, 316, 163, 319, 321, 322, 323,
	324, 325, 326, 327, 328, 329, 330, 30, 244, 311,
	312, 313, 314, 331, 332, 333, 334, 335, 336, 337,
	338, 298, 317, 434, 299, 300, 301, 302, 303, 304,
	306, 307, 308, 309, 310, -323, -320, 83, 85, 84,
	-268, 83, -103, 221, -320, 222, 222, 222, -72, 416,
	-289, -289, 252, 17, -42, -39, -313, 16, -38, -39,
	214, 110, 111, 211, 83, -278, 83, -287, -323, -320,
	83, 124, 227, 123, -286, -283, -286, -287, -320, -176,
	-320, 124, 124, -214, -241, -214, -214, 21, -214, 21,
	-214, 21, 92, -241, -214, 21, -214, 21, -214, 21,
	-214, 21, -214, 21, 29, 76, 77, 29, 79, 80,
	81, -176, -176, -278, -218, -150, -320, 92, 92, -289,
	-289, 92, 90, 90, 90, -289, -289, 92, 90, -248,
	-246, 90, -326, 238, 282, 284, 92, 92, 92, 92,
	29, 90, -327, 29, 552, 551, 553, 554, 555, 92,
	29, 92, 29, 92, -241, 83, -150, -109, 272, 209,
	211, 214, 74, 90, 286, 138, 42, 84, 224, 221,
	-320, -233, 226, -233, -241, -247, -246, -239, 90, -111,
	-285, 12, 148, -251, -251, -231, -150, -285, -251, -231,
	-150, -231, -231, -231, -231, -251, -251, -251, -231, -246,
	-246, -150, -150, -150, -150, -150, -150, -150, -256, -256,
	-256, -232, -231, 530, 90, 74, -254, 295, 329, 524,
	525, 526, 84, 436, -143, -150, 530, 530, 530, 530,
	530, 530, -111, -111, -111, -111, -167, 106, 130, 107,
	108, -125, -168, -172, -174, 97, 148, 132, 146, 147,
	-116, -117, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -257, -320, 90, 163, -121,
	90, 91, -340, 96, -121, -97, -99, -111, -111, -320,
	-241, -97, -97, -111, -93, 22, 36, -178, -179, 134,
	-176, -344, -344, 92, 96, -241, -241, -86, -85, 398,
	399, 400, 401, 403, 404, 405, 408, 409, 413, 414,
	397, 415, 402, 407, 410, 411, 412, 406, 314, -111,
	-111, -111, -111, -111, -111, -79, -111, 117, 118, 119,
	-170, -169, -319, -318, -317, -111, -111, -98, 22, 36,
	-97, -242, -247, -239, -97, -98, -98, -97, -97, 206,
	-206, -344, 84, -334, 380, 381, 528, -249, 257, -248,
	23, -170, 90, 12, -212, 75, -241, -189, -189, 61,
	62, 57, -97, -102, -344, -33, 23, -208, -241, 60,
	90, -270, -218, 339, 340, -111, -111, 84, -188, 25,
	26, -150, -243, 154, -247, -150, -213, 257, -150, -128,
	-130, -131, -132, -153, -175, -343, -133, 454, 451, 12,
	-143, -144, -152, -246, -221, -223, 84, 379, 381, 382,
	74, 109, -111, -271, 162, -296, -295, -294, -278, -280,
	-281, -282, 85, -271, -274, 345, 344, -268, -268, -268,
	-268, -268, -270, -270, -270, -270, 83, 83, -268, -268,
	-268, -268, -272, 83, -272, -272, -273, 83, -273, -307,
	-111, -304, -303, -301, -302, 231, 99, 436, 75, -299,
	-188, 92, -109, -234, 226, -305, -302, -320, -320, -320,
	-234, -320, 90, -320, 90, -83, -55, -1, 564, 565,
	566, 84, 17, -279, -278, -54, 282, -310, -311, 257,
	-306, -300, -287, 124, -286, -287, -287, -320, 84, 27,
	114, 114, 114, 114, 436, 211, 30, -278, -54, -257,
	224, -257, -257, 90, 90, -230, 560, -143, -105, 274,
	138, 263, 263, 221, 221, 276, -150, 287, 289, 288,
	286, 21, 275, 277, 279, 265, -150, -150, -233, 74,
	-145, -150, 24, -246, -150, -231, -231, -150, -231, -231,
	-150, -241, -89, 380, 84, 436, 20, -90, 20, 106,
	107, 108, -168, -116, -117, -116, 129, 245, 90, 84,
	-344, 23, 84, 75, -344, -344, -344, 84, 12, -97,
	-181, -179, 136, -111, -344, -344, -344, 84, 84, 12,
	-260, 23, -344, -344, -344, -344, -344, -180, -344, 12,
	-344, -344, 84, 84, -344, -344, -97, -97, -343, 206,
	-344, -344, -344, -344, -344, -242, -333, 527, 381, -157,
	-156, -154, 72, 225, 73, -343, -248, -344, -121, 87,
	-209, 87, -208, -162, -241, 92, 96, -191, -127, -129,
	12, -102, -174, 85, 84, -270, -195, -200, -228, -241,
	90, 163, -187, 206, -158, 13, -161, 30, 55, -9,
	-343, -343, 30, 84, -146, -148, -147, -149, 64, 68,
	70, 65, 66, 67, 71, -252, 23, -128, -7, -6,
	-343, -343, -343, -150, -143, -345, 12, 75, -345, 84,
	206, -222, -224, 383, 380, 386, -320, 90, -82, 84,
	-294, -282, -192, -106, 38, -275, 346, -270, -270, -277,
	90, -277, 92, 92, 85, -45, -40, -41, 31, 78,
	-301, -289, 90, 37, -241, 85, -105, -150, 130, 74,
	-305, -305, -305, -246, -2, 563, 569, 124, 83, 349,
	16, -208, 84, 85, -177, 283, 85, -312, 55, -241,
	85, 83, -287, -287, -241, -343, 221, 29, 29, -54,
	-177, -271, -320, 562, 561, 85, 223, 281, -110, 393,
	-107, 90, 86, -150, -150, -150, -150, -150, 214, 211,
	266, 224, -143, -150, 84, -77, 240, 235, -251, -251,
	31, -150, 380, 539, 537, 129, 245, -125, -117, -99,
	433, -259, 163, 315, 244, 313, 309, 329, 320, 344,
	311, 345, 308, 307, 306, -259, -257, -111, -111, -184,
	137, -111, 135, -111, -111, -111, -344, 163, 315, 12,
	-111, -317, -111, -344, -344, -98, -242, -154, -283, -283,
	-283, -214, 84, -225, 20, 12, 55, 55, -127, -158,
	-128, -102, -241, -198, 523, -203, 44, -201, -202, 45,
	-199, 46, 54, 154, -189, -111, -215, 74, -216, -220,
	-176, -171, -173, -172, -343, -207, -344, -241, -214, -216,
	-130, -131, -131, -130, -131, 64, 64, 64, 69, 64,
	69, 64, -147, -246, -344, -344, -7, -7, -111, -249,
	75, -128, -128, -152, -246, 154, 380, 384, 385, -294,
	-339, 106, 130, 29, 74, 342, 99, -337, 162, -338,
	227, 123, 124, 239, 23, 39, 85, 84, 85, 84,
	85, 84, -235, 473, 130, -41, -40, -289, -289, 92,
	-320, 223, 24, -150, 74, 74, 74, -84, 567, 92,
	83, -3, 78, -111, 83, 17, -278, -176, 259, 148,
	-304, -208, -308, -310, -150, -113, -343, -112, -114, -118,
	152, 153, -177, -150, -104, 272, 280, 83, -108, 87,
	-322, 75, 263, 342, 263, -150, -77, -45, -150, -231,
	-231, 31, -320, -125, -117, -343, -344, -268, -268, -268,
	-273, -268, 303, -268, 303, -268, -344, -344, 84, -344,
	20, -344, -88, 422, -111, 84, 84, -344, 83, 83,
	-111, -344, -344, -155, 20, -155, -155, -344, 87, -150,
	-158, -182, 14, -195, 49, 321, -205, -204, 53, 45,
	-202, 17, 47, 17, 28, -215, 84, 138, 84, -344,
	-344, 84, 55, 206, -344, -158, -141, -140, 74, 75,
	-142, 74, -140, 64, 64, -210, -344, -344, 84, -213,
	-128, -158, -158, 206, 106, -343, -115, -124, -113, 10,
	90, 90, -320, 124, 124, -150, 83, -270, 90, -270,
	92, 92, 473, 29, 79, 80, 81, 29, 76, 77,
	-150, -150, -150, -150, -309, 83, 17, -111, 83, 138,
	85, -208, -208, 260, -172, -343, 85, -344, 84, -276,
	436, 439, -111, -119, -119, -210, 85, -316, 436, -321,
	-241, -241, -241, -241, -116, -270, -111, -111, -189, 90,
	-111, -111, 92, 92, -344, -343, 64, 16, 14, -343,
	-343, -249, -182, -183, 15, 17, -196, 51, -194, 50,
	-194, -204, 17, 17, 90, 17, 90, 124, -220, -111,
	-173, 55, -9, -241, -171, -241, -184, -111, 83, -111,
	-121, -158, -158, -111, -164, 425, 102, 104, 103, 426,
	427, 428, 429, 430, 431, 83, -111, 85, 85, -210,
	-308, -55, 85, -208, 92, 85, -172, -91, -343, 256,
	-338, -310, 440, 440, -344, 23, -315, -314, -242, 83,
	75, -92, 148, 436, -344, -344, -344, -344, -344, 85,
	85, -211, -344, -241, 227, 17, 17, -211, -211, -157,
	-183, -111, -169, -197, 52, 74, 109, 90, 90, 90,
	10, -171, 206, -189, -208, -135, 349, -184, -344, -208,
	85, 23, 85, 569, 124, 85, 256, -9, 84, 138,
	-208, -150, -344, 434, 71, 437, 84, -344, -344, -344,
	74, 109, -216, -241, 85, -344, -343, -189, 85, -193,
	-9, 83, -3, -344, -75, 436, -314, -293, -242, 90,
	92, 85, 60, 435, 438, -241, 227, -249, -136, -134,
	-241, 487, -329, -330, 74, -339, -336, 106, 130, 99,
	-337, 115, 116, -75, -111, 83, -76, 271, 527, -322,
	60, -344, 84, 20, -261, -57, 497, -330, 74, 11,
	10, 106, 90, 85, -208, 232, -316, 436, -134, 494,
	-271, -121, -328, 240, 235, 238, 30, -328, -4, 568,
	85, 273, 437, -56, 24, -135, 234, 29, 106, 92,
	-4, 438, 497, -121, -138, -137, -139, 531, 106, 29,
	-137, -139, 74, -120, -340, 74, 446, 531,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 740,
	740, 740, 0, 740, 0, 0, 740, -2, -2, 740,
	1189, 0, 740, 0, 0, -2, 672, 674, 0, 676,
	-2, 0, 0, 685, 1655, 1655, 735, 0, 0, 0,
	0, 0, 740, 740, 740, 740, 1050, 48, 740, 0,
	83, 84, 691, 692, 693, 63, 0, 1653, 1, 3,
	69, 73, 0, 0, 0, 56, 1059, 0, 76, 0,
	0, 744, 0, 742, 0, 1172, 740, 740, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 519, 459, 502, 457, 488, -2, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	462, 352, 352, 0, 0, -2, 450, 450, 450, 0,
	0, 0, 485, 1174, 405, 352, 352, 0, 352, 352,
	352, 352, 0, 0, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 1076,
	151, 1190, 1187, 1188, 38, 39, 40, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 0, 1166, 0, 602, 841, 0, 663, 663,
	0, 663, 663, 663, 663, 0, 0, 0, 614, 0,
	0, 0, 0, 660, 0, 0, 633, 635, 0, 660,
	0, 666, 0, 647, 663, 1656, 1656, 1656, 1157, 0,
	657, 655, 669, 670, 652, 653, 671, 675, 0, 680,
	683, 1183, 1184, 0, 698, 47, 1421, 690, 703, 704,
	0, 736, 737, 43, 937, 0, 863, 867, 878, 891,
	892, 893, 894, 895, 897, 898, 0, 0, 0, 0,
	903, 904, 0, 0, 0, 0, 0, 918, 0, 0,
	0, 0, 0, 1031, 0, 994, 994, 954, 994, 996,
	996, 0, 0, 0, 1652, 1450, 1451, 1452, 1470, 1553,
	1599, 1447, 1448, 1449, 1040, 0, 0, 0, 0, 0,
	0, 256, 257, 936, 1146, 996, 996, 996, 996, -2,
	-2, 203, 204, 205, 206, 207, 208, 209, 0, 199,
	0, 261, 262, 258, 259, 260, 920, 921, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 1655,
	0, 713, 0, 0, 0, 0, 0, 1059, 0, 1051,
	1050, 61, 0, 740, -2, 0, 0, 0, 0, 45,
	0, 50, 800, 75, 74, 1098, 0, 0, 0, 57,
	1060, 65, 67, 1061, 0, 745, 746, 0, 776, 780,
	0, 741, 0, 0, 1173, 1172, 1172, 100, 0, 1595,
	1150, -2, -2, 0, 0, 1185, 1186, 1159, -2, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, -2, 0, 0, 161, 162, 0,
	41, 378, 0, 157, 0, 372, 322, 1076, 0, 0,
	0, 0, 0, 740, 0, 1167, 142, 143, 149, 150,
	352, 352, 499, 0, 0, 151, 151, 466, 467, 468,
	0, 0, -2, 376, 0, 451, 0, 0, 366, 366,
	370, 368, 369, 0, 0, 0, 0, 0, 0, 479,
	0, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 0, 353, 0, 497, 498, 406, 0, 0,
	0, 0, 477, 478, 0, 0, 1175, 1176, 0, 0,
	352, 352, 0, 0, 0, 0, 352, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 141, 1089, 0, 0, 0, -2,
	0, 594, 0, 0, 0, 1168, 1168, 0, 601, 0,
	603, 604, 0, 0, 605, 0, 660, 660, 658, 659,
	607, 608, 609, 610, 663, 0, 0, 361, 362, 363,
	660, 663, 0, 663, 663, 663, 663, 660, 660, 660,
	663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1656, 1656, 1656, 666, 663, 0, 643, 0, 644, 645,
	648, 649, 1657, 1658, 1205, 650, 651, 1158, 673, 681,
	684, 701, 699, 700, 702, 694, 695, 696, 697, 0,
	715, 716, 721, 0, 0, 0, 0, 727, 728, 729,
	0, 0, 732, 733, 734, 0, 0, 0, 0, 861,
	0, 0, 926, 927, 928, 929, 930, 931, 932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 899,
	900, 901, 902, 905, 0, 0, 0, 910, 911, 0,
	0, 0, 0, 0, 750, 0, 1032, 0, 952, 0,
	953, 955, 956, 0, 957, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1178, 129, 0, 760, 0,
	0, 760, 760, 0, 0, 193, 194, 195, 196, 210,
	211, 212, 213, 214, 263, 1040, 0, 936, 0, 0,
	44, 705, 706, 0, 824, 1178, 0, 0, 756, 0,
	55, 64, 66, 1059, 59, 1059, 0, 762, 0, 0,
	-2, -2, 763, 769, 770, 771, 772, 773, 52, 1654,
	53, 0, 72, 0, 46, 0, 0, 0, 0, 334,
	1101, 0, 0, 1052, 1053, 1056, 0, 777, 781, 0,
	783, 784, 0, 743, 0, 98, 0, 840, 0, 0,
	0, 1595, 1156, 0, 102, 103, 0, 0, 0, 340,
	1161, 1162, 1163, -2, 359, 0, 340, 329, 273, 274,
	275, 322, 277, 322, 322, 322, 322, 334, 334, 334,
	334, 305, 306, 307, 308, 309, 0, 0, 292, 322,
	322, 322, 322, 312, 313, 314, 315, 316, 317, 318,
	319, 278, 279, 280, 281, 282, 283, 284, 285, 286,
	324, 324, 324, 326, 326, 0, 42, 0, 344, 0,
	1056, 0, 1089, 1170, 1180, 0, 0, 0, 1170, 120,
	0, 0, 500, 530, 460, 489, 501, 0, 463, 464,
	-2, 0, 0, 450, 0, 452, 0, 360, 0, -2,
	0, 370, 0, 366, 370, 367, 370, 358, 371, 481,
	482, 483, 0, 560, 810, 0, 0, 0, 0, 0,
	566, 567, 568, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 490, 491, 492, 493, 494, 495,
	496, 0, 0, 452, 0, 486, 0, 407, 408, 0,
	0, 411, 412, 413, 414, 0, 0, 417, 418, 419,
	827, 828, 420, 444, 445, 446, 421, 422, 423, 424,
	425, 426, 427, 438, 439, 440, 441, 442, 443, 428,
	429, 430, 431, 432, 435, 0, 135, 1080, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1168,
	0, 0, 0, 0, 759, 842, 1191, 1192, 664, 665,
	0, 364, 365, 663, 663, 611, 634, 0, 663, 615,
	636, 616, 618, 617, 619, 638, 639, 663, 622, 661,
	662, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 640, 641, 642, 667, 0, 0, 682, 686, 687,
	688, 689, 0, 0, 718, 94, 723, 724, 725, 726,
	738, 731, 938, 858, 859, 860, 862, 864, 0, 922,
	924, 866, 868, 933, 934, 935, 0, 0, 0, 0,
	0, 872, 876, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 889, 890, 896, 1010, 1011, 1012, 913,
	264, 265, 0, 267, 914, 0, 774, 0, 0, 0,
	912, 0, 0, 0, 0, 751, 752, 1038, 1035, 0,
	0, 995, 997, 0, 0, 0, 0, 0, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 1013,
	0, 0, 0, 0, 0, 1031, 0, 915, 916, 917,
	0, 1179, 0, 130, 131, 0, 0, 0, 0, 0,
	761, 1041, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 1145, 0, 708, 709, 711, 0, 844, 0, 825,
	0, 0, 714, 0, 755, 0, 758, 58, 60, 767,
	768, 0, 785, 764, 54, 49, 0, 0, 802, 1099,
	334, 1121, 0, 338, 339, 1062, 1063, 0, 1055, 1057,
	1058, 77, 782, 778, 0, 856, 0, 0, 839, 0,
	788, 790, 791, 792, 822, 0, 795, 0, 0, 0,
	0, 0, 96, 841, 1151, 101, 0, 0, 106, 107,
	1152, 1153, 1154, 1155, 0, 519, -2, 402, 163, 165,
	166, 167, 158, -2, 332, 330, 331, 276, 334, 334,
	299, 300, 301, 302, 303, 304, 0, 0, 293, 294,
	295, 296, 287, 0, 288, 289, 290, 0, 291, 377,
	0, 1064, 345, 346, 348, 352, 0, 0, 0, 373,
	374, 0, 1080, 0, 0, 0, 1181, 1180, 1180, 1180,
	0, 153, 154, 155, 156, 555, 0, 0, 531, 553,
	554, 151, 0, 0, 159, 454, 453, 0, 587, 0,
	375, 0, 0, 370, 370, 355, 356, 484, 0, 0,
	562, 563, 564, 565, 0, 0, 0, 452, 454, 340,
	0, 409, 410, 415, 416, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 515, 516,
	517, 518, 1077, 1078, 1079, 0, 0, 595, 0, 0,
	394, 92, 1169, 600, 660, 621, 637, 660, 613, 620,
	646, 678, 722, 0, 0, 0, 0, 730, 0, 865,
	923, 925, 869, 0, 873, 877, 0, 0, 266, 0,
	0, 0, 0, 0, 919, 943, 944, 0, 0, 1050,
	0, 1036, 0, 0, 951, 998, 999, 0, 0, 0,
	0, 0, 962, 963, 964, 965, 966, 0, 968, 0,
	970, 971, 0, 0, 972, 939, 0, 0, 760, 0,
	1000, 1001, 1002, 1003, 1004, 1041, 707, 710, 712, 798,
	845, 846, 0, 0, 0, 0, 826, 1177, 753, 754,
	757, -2, 0, 0, 1043, 0, 0, 785, 856, 786,
	0, 765, 51, 801, 0, 1103, 1102, 1115, 1128, 335,
	336, 337, 1054, 0, 1059, 0, 1139, 0, 0, 1131,
	0, 0, 0, 0, 0, 0, 0, 0, 829, 0,
	0, 832, 0, 0, 0, 0, 823, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 90, 91, 0, 0,
	0, 104, 105, 0, 0, 111, 341, 342, 144, 151,
	404, 164, 384, 0, 0, 272, 333, 297, 298, 0,
	320, 0, 0, 0, 397, 116, 1068, 1067, 352, 352,
	347, 0, 350, 0, 1182, 323, 0, 134, 0, 0,
	0, 0, 0, 140, 525, 0, 0, 532, 0, 0,
	0, 458, 0, 469, 470, 0, 559, 586, 0, 591,
	344, 0, 354, 357, 811, 0, 0, 471, 0, 454,
	475, 476, 487, 436, 437, 434, 0, 0, 1090, 1091,
	1096, 1094, 1095, 121, 507, 509, 508, 512, 0, 0,
	505, 0, 394, 1064, 0, 599, 395, 396, 663, 663,
	717, 95, 0, 720, 0, 0, 0, 870, 874, 775,
	0, 0, 322, 322, 1018, 322, 326, 1021, 322, 1023,
	322, 1026, 322, 1029, 1030, 0, 0, 0, 0, 1033,
	950, 1039, 0, 0, 0, 0, 961, 0, 0, 0,
	0, 132, 133, 940, 941, 0, 1042, 847, 852, 852,
	852, 0, 0, 0, 1164, 1165, 1044, 1045, 856, 1046,
	787, 766, 803, 1121, 0, 1114, 0, -2, 1123, 0,
	0, 0, 1129, 779, 78, 857, 81, 0, 1139, 1147,
	0, 1130, 1141, 1143, 0, 0, 0, 1135, 0, 856,
	789, 818, 820, 0, 815, 830, 831, 833, 0, 835,
	0, 837, 838, 800, 794, 796, 0, 0, 0, 98,
	0, 856, 856, 97, 0, 843, 108, 109, 110, 403,
	168, 173, 0, 0, 0, 178, 0, 180, 0, 385,
	0, 269, 271, 0, 0, 171, 334, 0, 334, 0,
	327, 0, 386, 398, 0, 1065, 1066, 0, 0, 349,
	351, 0, 1171, 136, 0, 0, 0, 528, 0, 556,
	0, 0, 0, 0, 0, 0, 160, 455, 0, 0,
	343, 0, 0, 584, 581, 472, 0, 197, 198, 200,
	0, 0, 474, 800, 1081, 1082, 1083, 0, 1093, 1097,
	124, 0, 0, 0, 0, 596, 597, 598, 93, 606,
	612, 719, 739, 871, 875, 0, 907, 1016, 334, 1019,
	1020, 1022, 1024, 1025, 1027, 1028, 908, 909, 0, 946,
	0, 948, 1059, 0, 1037, 0, 0, 960, 0, 0,
	0, 969, 942, 0, 0, 0, 0, 824, -2, 62,
	1046, 1048, 0, 1108, 1106, 1106, 1116, 1117, 0, 0,
	1124, 0, 0, 0, 0, 82, 0, 0, 0, 1144,
	0, 0, 0, 0, 99, 1050, 812, 819, 0, 0,
	813, 0, 814, 834, 836, 793, -2, 797, 0, 856,
	856, 88, 89, 0, 174, 0, 176, 191, 192, 0,
	179, 181, 182, 268, 270, 0, 0, 310, 321, 311,
	0, 0, 399, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	800, 137, 138, 139, 520, 0, 530, 0, 0, 0,
	523, 0, 461, 0, 590, 0, 0, 561, 0, 569,
	0, 0, 0, 201, 202, 0, 1092, 506, 0, 122,
	123, 0, 0, 511, 1005, 1017, 0, 0, 0, 1034,
	0, 0, 0, 0, 967, 0, 853, 0, 0, 0,
	0, 844, 1048, 80, 0, 0, 1111, 0, 1104, 1107,
	1105, 1118, 0, 0, 1125, 0, 1127, 0, 1148, 1149,
	1142, 0, 1134, 1137, 1133, 1136, 1059, 816, 0, 821,
	0, 1050, 87, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 328, 0,
	0, 0, 521, 0, 533, 524, 588, 589, 0, 592,
	379, 585, 582, 583, 473, 0, 125, 126, 0, 0,
	0, 0, 0, 0, 945, 947, 949, 958, 959, 1014,
	1015, 0, 849, 806, 807, 854, 855, 0, 0, 799,
	79, 1049, 1047, 1100, 0, 1109, 1110, 1119, 1120, 1126,
	0, 1132, 0, 85, 0, 0, 0, 1059, 175, 0,
	185, 0, 529, 0, 532, 522, 0, 1084, 0, 0,
	0, 513, 906, 0, 0, 0, 0, 848, 850, 851,
	1112, 1113, 1140, 1138, 817, 824, 0, 86, 380, 384,
	1084, 0, 0, 593, 503, 1086, 127, 128, 447, 448,
	449, 121, 1006, 0, 1009, 808, 809, 534, 0, 536,
	0, -2, 381, 382, 0, 169, 186, 187, 0, 0,
	190, 183, 184, 117, 0, 0, 0, 1087, 1088, 124,
	1007, 535, 0, 0, 340, 0, 545, 383, 0, 0,
	0, 188, 189, 557, 0, 0, 510, 0, 537, 538,
	546, 0, 387, 389, 390, 0, 0, 388, 526, 0,
	557, 1085, 0, 0, 547, 543, 391, 392, 393, 558,
	527, 1008, 0, 539, 540, 541, 0, 550, 551, 0,
	542, 0, 0, 552, 0, 0, 548, 549,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 131, 3, 3, 3, 157, 149, 3,
	83, 85, 154, 152, 84, 153, 206, 155, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 570,
	139, 138, 140, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 159, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 160,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 128, 129, 130, 132, 133, 134, 135, 136,
	137, 141, 142, 143, 144, 145, 146, 147, 148, 150,
	151, 156, 158, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:494
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:499
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:500
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:504
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:540
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:546
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:550
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:554
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:559
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:563
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:569
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:575
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:581
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:585
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:590
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:594
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:600
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:604
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:610
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:616
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:620
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:624
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:647
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:653
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:658
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:664
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:671
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:677
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:684
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:694
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:716
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:720
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:735
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:756
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:763
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:769
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:789
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:801
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:813
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:817
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:823
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:829
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:833
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:837
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:841
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:846
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:847
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:851
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:855
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:861
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:865
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:871
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:884
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:890
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:896
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:900
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:906
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:910
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:916
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:920
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:924
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:930
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:934
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:938
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:942
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:948
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:952
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:958
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:964
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:971
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:980
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:984
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:991
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:995
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1000
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1004
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1010
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1015
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1020
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1026
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1031
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1037
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1042
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1046
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1052
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1056
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1062
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1068
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1075
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1082
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1087
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1092
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1097
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1104
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1111
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1122
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1129
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1133
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1139
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1143
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1147
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1151
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1157
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1161
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1167
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1171
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1177
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1181
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1188
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1192
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1198
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1202
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1208
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1213
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1218
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1222
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1227
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1235
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1246
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1255
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1264
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1268
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1277
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1281
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1287
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1293
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1298
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1303
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1308
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1313
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1318
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1323
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1327
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1334
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1338
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1343
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1347
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1352
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1358
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1364
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1369
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1376
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1383
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1387
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1391
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1395
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1406
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1413
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1417
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1423
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1427
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1431
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1435
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1439
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1443
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1447
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1452
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1456
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1460
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1464
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1468
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = Armscii8Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = ASCIIStr
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = Big5Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = UBinaryStr
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.str = Cp1250Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.str = Cp1251Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.str = Cp1256Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.str = Cp1257Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.str = Cp850Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.str = Cp852Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = Cp866Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = Cp932Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.str = Dec8Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.str = EucjpmsStr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.str = EuckrStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = Gb18030Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = Gb2312Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = GbkStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = Geostd8Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = GreekStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = HebrewStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = Hp8Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = Keybcs2Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = Koi8rStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = Koi8uStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = Latin1Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = Latin2Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = Latin5Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = Latin7Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = MacceStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = MacromanStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = SjisStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = Swe7Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = Tis620Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = Ucs2Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = UjisStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = Utf16Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = Utf16leStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = Utf32Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = Utf8Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = Utf8mb4Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1645
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1649
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1653
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1660
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1664
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1668
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1674
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1678
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1682
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1686
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1693
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1697
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1701
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1705
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1711
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1722
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1771
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1777
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1811
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1819
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1841
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1882
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1927
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1932
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1936
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1941
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1945
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1953
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1963
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1971
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1975
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1979
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1984
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1988
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1993
		{
			yyVAL.str = ""
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1997
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2020
		{
			yyVAL.str = ""
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2028
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2035
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2044
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2050
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2060
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2064
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2069
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2073
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2079
		{
			yyVAL.str = ""
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2089
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2093
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2097
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2101
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2105
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2110
		{
			yyVAL.str = ""
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2114
		{
			yyVAL.str = yyDollar[2].str
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2120
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2124
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2128
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2139
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2144
		{
			yyVAL.str = "key"
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2148
		{
			yyVAL.str = yyDollar[1].str
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2163
		{
			yyVAL.str = ""
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2173
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2177
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2183
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2189
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2193
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2199
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2203
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2209
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2215
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2219
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2223
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2227
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2232
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2236
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2242
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2248
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2254
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2260
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2264
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2268
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2272
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2276
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2281
		{
			yyVAL.str = ""
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2285
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2289
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2294
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2298
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2302
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2307
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2311
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2317
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2321
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2325
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2331
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2335
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2341
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2345
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2349
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2353
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2357
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2361
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2365
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2369
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2373
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2377
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2381
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2385
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2389
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2393
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2397
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2401
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2405
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2409
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2413
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2417
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2421
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2425
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2429
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2433
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2437
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2441
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2445
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2449
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2454
		{
			yyVAL.str = ""
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2458
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2462
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2481
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2485
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2489
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2494
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2500
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2504
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2509
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2513
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2518
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2522
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2526
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2530
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2534
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 461:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2538
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2544
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2548
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2552
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2558
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2562
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2566
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2570
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2574
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2578
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2582
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2586
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2590
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2594
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2598
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2602
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2606
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2610
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2614
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2618
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2622
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2626
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2630
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2634
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2638
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2642
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2646
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2652
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2656
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2662
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2666
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2670
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2674
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2678
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2682
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2686
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2690
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2694
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2700
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2707
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2714
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2721
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2727
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2731
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2738
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2745
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2767
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2771
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2775
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2788
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2798
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2802
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2813
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2820
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2827
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2834
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2841
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2848
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2852
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2861
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2869
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2878
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2885
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2893
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2897
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2906
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2917
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2921
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2926
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2930
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2935
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2939
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2945
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2951
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2957
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2961
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2967
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2971
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2977
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2983
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2989
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2995
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3001
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3005
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3009
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3013
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3019
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3025
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3031
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3035
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3039
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3045
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3049
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3054
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3058
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3063
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3067
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3073
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3077
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3081
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3085
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3089
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3093
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3097
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3101
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3105
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3109
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3113
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3117
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3121
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3125
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3129
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3133
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3137
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3141
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3145
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3149
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3153
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3157
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3162
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3166
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3170
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3177
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3181
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3187
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3196
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3203
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3210
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3219
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3225
		{
			yyVAL.str = ""
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3229
		{
			yyVAL.str = ""
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3241
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3245
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3251
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3255
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3264
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3268
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3278
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3283
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3289
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3297
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3317
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3325
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3329
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3337
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3341
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3345
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3349
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3357
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3365
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3369
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3373
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3377
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3381
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3385
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3389
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3393
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3397
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3401
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3405
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3409
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3413
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3417
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3421
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3425
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3429
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3433
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3438
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3442
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3446
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3451
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3455
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3463
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3468
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3482
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3486
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3490
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3496
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3500
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3506
		{
			yyVAL.str = ""
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.str = "extended "
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3516
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3520
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3526
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3530
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3536
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3540
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3544
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3550
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3554
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3558
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3568
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3574
		{
			yyVAL.empty = struct{}{}
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3578
		{
			yyVAL.empty = struct{}{}
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3582
		{
			yyVAL.empty = struct{}{}
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3588
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3592
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3596
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3602
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3606
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3612
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3618
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3622
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3627
		{
			yyVAL.empty = struct{}{}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3629
		{
			yyVAL.empty = struct{}{}
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3632
		{
			yyVAL.empty = struct{}{}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3634
		{
			yyVAL.empty = struct{}{}
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3639
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3645
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3650
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3654
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3658
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3662
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3666
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3670
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3676
		{
			yyVAL.str = yyDollar[1].str
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3680
		{
			yyVAL.str = yyDollar[1].str
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3684
		{
			yyVAL.str = yyDollar[1].str
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3690
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3694
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3698
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3702
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3707
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3711
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3715
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3721
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3725
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3731
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3735
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3741
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3747
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3751
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3757
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3763
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3767
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3771
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3775
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3781
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3787
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3793
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3797
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3805
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3813
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3819
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3823
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3829
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3833
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3837
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3841
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3845
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3853
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3857
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3861
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3865
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3869
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3873
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3878
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3882
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3886
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3891
		{
			yyVAL.str = ""
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3895
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3900
		{
			setAllowComments(yylex, true)
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3904
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3910
		{
			yyVAL.strs = nil
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3914
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3920
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3924
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3928
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3933
		{
			yyVAL.str = ""
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3937
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3941
		{
			yyVAL.str = SQLCacheStr
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3946
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3950
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3954
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3960
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3981
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3985
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3995
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4000
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4004
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4009
		{
			yyVAL.strs = nil
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4013
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4017
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4021
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4025
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4031
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4035
		{
			yyVAL.str = SQLCacheStr
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4039
		{
			yyVAL.str = DistinctStr
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4043
		{
			yyVAL.str = DistinctStr
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.str = StraightJoinHint
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4051
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4055
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4061
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4065
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4071
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4075
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4079
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4083
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4088
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4092
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4096
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4103
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4108
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4112
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4118
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4124
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4128
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4138
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4142
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4146
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4150
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4156
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4160
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4166
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4170
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4175
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4179
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4185
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4189
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4195
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4199
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4205
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4209
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4213
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4217
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4223
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4227
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4240
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4244
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4248
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4252
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4258
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4260
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4264
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4270
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4272
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4275
		{
			yyVAL.empty = struct{}{}
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4277
		{
			yyVAL.empty = struct{}{}
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4280
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4288
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4301
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4305
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4309
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4315
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4321
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4325
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4329
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4333
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4339
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4343
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4353
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4357
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4363
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4367
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4373
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4378
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4382
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4388
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4392
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 848:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4398
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4402
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4406
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4410
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4415
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4419
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4423
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4427
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4433
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4437
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4444
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4448
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4452
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4456
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4460
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4464
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4471
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4475
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4479
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4483
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4489
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4493
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4497
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4501
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4505
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4509
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4513
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4517
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4521
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4525
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4529
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4535
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4539
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4543
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4547
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4551
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4555
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4559
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4563
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4567
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4571
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4575
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4579
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4583
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4589
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4593
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4597
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4601
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4605
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4609
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4613
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4617
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4621
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4625
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4629
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4633
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4637
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4641
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4645
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4649
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4653
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4657
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4661
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4669
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4673
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4681
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4685
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4691
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4695
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4699
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4705
		{
			yyVAL.str = ""
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4709
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4715
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4719
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4726
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4730
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4734
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4738
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4744
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4748
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4752
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4756
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4760
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4764
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4768
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4774
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4778
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4782
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4789
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4795
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4799
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4809
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4813
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4817
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4821
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4831
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4835
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4839
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4843
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4847
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4851
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4855
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4859
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4863
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4867
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4878
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4882
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4888
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4892
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4897
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4901
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4905
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4909
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4913
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4917
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4921
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4925
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4929
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4933
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4937
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4941
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4945
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4949
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4953
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4957
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4963
		{
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4965
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4969
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4973
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4977
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4981
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4985
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4989
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4993
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4997
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5001
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5005
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5011
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5015
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5019
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5023
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5027
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5031
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5035
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5039
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5043
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5053
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5057
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5061
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5065
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5076
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5080
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5084
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5088
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5092
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5098
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5102
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5106
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5110
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5114
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5120
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5124
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5128
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5138
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5142
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5148
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5152
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5156
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5160
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5164
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5170
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5174
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5178
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5182
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5186
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5190
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5194
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5198
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5202
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5206
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5212
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5216
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5221
		{
			yyVAL.str = string("")
		}
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5225
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5231
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5235
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5241
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5246
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5250
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5256
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5260
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5264
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5270
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5279
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5289
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5293
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5302
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5307
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5311
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5317
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5323
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5327
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5333
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5338
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5342
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5346
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5351
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5355
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5361
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5365
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5369
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5374
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5378
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5382
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5386
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5390
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5397
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5401
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5405
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5409
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5415
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5419
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5423
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5428
		{
			yyVAL.str = ""
		}
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5432
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5436
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5440
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5445
		{
			yyVAL.str = ""
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5449
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5455
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5459
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5464
		{
			yyVAL.str = ""
		}
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5468
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5473
		{
			yyVAL.str = "cascaded"
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5477
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5481
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5486
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5490
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5496
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5502
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5508
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5517
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5521
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5526
		{
			yyVAL.str = ""
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5530
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5536
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5540
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5546
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5550
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5554
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5559
		{
			yyVAL.str = ""
		}
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5563
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5567
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5572
		{
			yyVAL.str = ""
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5576
		{
			yyVAL.str = " header"
		}
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5581
		{
			yyVAL.str = ""
		}
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5585
		{
			yyVAL.str = " manifest on"
		}
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5589
		{
			yyVAL.str = " manifest off"
		}
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5594
		{
			yyVAL.str = ""
		}
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5598
		{
			yyVAL.str = " overwrite on"
		}
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5602
		{
			yyVAL.str = " overwrite off"
		}
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5608
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5613
		{
			yyVAL.str = ""
		}
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5617
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5623
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5627
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5633
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5637
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5642
		{
			yyVAL.str = ""
		}
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5646
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5652
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5656
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5662
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5666
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5670
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5675
		{
			yyVAL.str = ""
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5679
		{
			yyVAL.str = " optionally"
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5692
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5696
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5700
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5704
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5708
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5714
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5718
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5722
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1138:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5726
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5731
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5735
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5741
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5745
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5751
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5755
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5761
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5766
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5776
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5780
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5786
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5792
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5796
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5802
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5806
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5810
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5814
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5818
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5826
		{
			yyVAL.str = "charset"
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5836
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5840
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5844
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5853
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5855
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5858
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5860
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5863
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5865
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5868
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5870
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5873
		{
			yyVAL.empty = struct{}{}
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5875
		{
			yyVAL.empty = struct{}{}
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5877
		{
			yyVAL.empty = struct{}{}
		}
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5881
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5886
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5890
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5897
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5901
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5907
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5911
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5918
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5924
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5928
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5934
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5938
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5945
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6430
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6439
		{
			decNesting(yylex)
		}
	case 1655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6444
		{
			skipToEnd(yylex)
		}
	case 1656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6449
		{
			skipToEnd(yylex)
		}
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6453
		{
			skipToEnd(yylex)
		}
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6457
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
