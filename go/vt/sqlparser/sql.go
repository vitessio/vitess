// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const SELECT = 57354
const STREAM = 57355
const VSTREAM = 57356
const INSERT = 57357
const UPDATE = 57358
const DELETE = 57359
const FROM = 57360
const WHERE = 57361
const GROUP = 57362
const HAVING = 57363
const ORDER = 57364
const BY = 57365
const LIMIT = 57366
const OFFSET = 57367
const FOR = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const INTO = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const DO = 57381
const CALL = 57382
const ALL = 57383
const ANY = 57384
const SOME = 57385
const DISTINCTROW = 57386
const PARSER = 57387
const GENERATED = 57388
const ALWAYS = 57389
const OUTFILE = 57390
const S3 = 57391
const DATA = 57392
const LOAD = 57393
const LINES = 57394
const TERMINATED = 57395
const ESCAPED = 57396
const ENCLOSED = 57397
const DUMPFILE = 57398
const CSV = 57399
const HEADER = 57400
const MANIFEST = 57401
const OVERWRITE = 57402
const STARTING = 57403
const OPTIONALLY = 57404
const VALUES = 57405
const LAST_INSERT_ID = 57406
const NEXT = 57407
const VALUE = 57408
const SHARE = 57409
const MODE = 57410
const SQL_NO_CACHE = 57411
const SQL_CACHE = 57412
const SQL_CALC_FOUND_ROWS = 57413
const SQL_SMALL_RESULT = 57414
const SQL_BIG_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const EMPTY_FROM_CLAUSE = 57485
const LOWER_THAN_CHARSET = 57486
const CHARSET = 57487
const UNIQUE = 57488
const KEY = 57489
const EXPRESSION_PREC_SETTER = 57490
const OR = 57491
const XOR = 57492
const AND = 57493
const NOT = 57494
const BETWEEN = 57495
const CASE = 57496
const WHEN = 57497
const THEN = 57498
const ELSE = 57499
const END = 57500
const LE = 57501
const GE = 57502
const NE = 57503
const NULL_SAFE_EQUAL = 57504
const IS = 57505
const LIKE = 57506
const REGEXP = 57507
const RLIKE = 57508
const IN = 57509
const ASSIGNMENT_OPT = 57510
const SHIFT_LEFT = 57511
const SHIFT_RIGHT = 57512
const DIV = 57513
const MOD = 57514
const UNARY = 57515
const COLLATE = 57516
const BINARY = 57517
const UNDERSCORE_ARMSCII8 = 57518
const UNDERSCORE_ASCII = 57519
const UNDERSCORE_BIG5 = 57520
const UNDERSCORE_BINARY = 57521
const UNDERSCORE_CP1250 = 57522
const UNDERSCORE_CP1251 = 57523
const UNDERSCORE_CP1256 = 57524
const UNDERSCORE_CP1257 = 57525
const UNDERSCORE_CP850 = 57526
const UNDERSCORE_CP852 = 57527
const UNDERSCORE_CP866 = 57528
const UNDERSCORE_CP932 = 57529
const UNDERSCORE_DEC8 = 57530
const UNDERSCORE_EUCJPMS = 57531
const UNDERSCORE_EUCKR = 57532
const UNDERSCORE_GB18030 = 57533
const UNDERSCORE_GB2312 = 57534
const UNDERSCORE_GBK = 57535
const UNDERSCORE_GEOSTD8 = 57536
const UNDERSCORE_GREEK = 57537
const UNDERSCORE_HEBREW = 57538
const UNDERSCORE_HP8 = 57539
const UNDERSCORE_KEYBCS2 = 57540
const UNDERSCORE_KOI8R = 57541
const UNDERSCORE_KOI8U = 57542
const UNDERSCORE_LATIN1 = 57543
const UNDERSCORE_LATIN2 = 57544
const UNDERSCORE_LATIN5 = 57545
const UNDERSCORE_LATIN7 = 57546
const UNDERSCORE_MACCE = 57547
const UNDERSCORE_MACROMAN = 57548
const UNDERSCORE_SJIS = 57549
const UNDERSCORE_SWE7 = 57550
const UNDERSCORE_TIS620 = 57551
const UNDERSCORE_UCS2 = 57552
const UNDERSCORE_UJIS = 57553
const UNDERSCORE_UTF16 = 57554
const UNDERSCORE_UTF16LE = 57555
const UNDERSCORE_UTF32 = 57556
const UNDERSCORE_UTF8 = 57557
const UNDERSCORE_UTF8MB4 = 57558
const UNDERSCORE_UTF8MB3 = 57559
const INTERVAL = 57560
const WINDOW_EXPR = 57561
const JSON_EXTRACT_OP = 57562
const JSON_UNQUOTE_EXTRACT_OP = 57563
const CREATE = 57564
const ALTER = 57565
const DROP = 57566
const RENAME = 57567
const ANALYZE = 57568
const ADD = 57569
const FLUSH = 57570
const CHANGE = 57571
const MODIFY = 57572
const DEALLOCATE = 57573
const REVERT = 57574
const QUERIES = 57575
const SCHEMA = 57576
const TABLE = 57577
const INDEX = 57578
const VIEW = 57579
const TO = 57580
const IGNORE = 57581
const IF = 57582
const PRIMARY = 57583
const COLUMN = 57584
const SPATIAL = 57585
const FULLTEXT = 57586
const KEY_BLOCK_SIZE = 57587
const CHECK = 57588
const INDEXES = 57589
const ACTION = 57590
const CASCADE = 57591
const CONSTRAINT = 57592
const FOREIGN = 57593
const NO = 57594
const REFERENCES = 57595
const RESTRICT = 57596
const SHOW = 57597
const DESCRIBE = 57598
const EXPLAIN = 57599
const DATE = 57600
const ESCAPE = 57601
const REPAIR = 57602
const OPTIMIZE = 57603
const TRUNCATE = 57604
const COALESCE = 57605
const EXCHANGE = 57606
const REBUILD = 57607
const PARTITIONING = 57608
const REMOVE = 57609
const PREPARE = 57610
const EXECUTE = 57611
const MAXVALUE = 57612
const PARTITION = 57613
const REORGANIZE = 57614
const LESS = 57615
const THAN = 57616
const PROCEDURE = 57617
const TRIGGER = 57618
const VINDEX = 57619
const VINDEXES = 57620
const DIRECTORY = 57621
const NAME = 57622
const UPGRADE = 57623
const STATUS = 57624
const VARIABLES = 57625
const WARNINGS = 57626
const CASCADED = 57627
const DEFINER = 57628
const OPTION = 57629
const SQL = 57630
const UNDEFINED = 57631
const SEQUENCE = 57632
const MERGE = 57633
const TEMPORARY = 57634
const TEMPTABLE = 57635
const INVOKER = 57636
const SECURITY = 57637
const FIRST = 57638
const AFTER = 57639
const LAST = 57640
const VITESS_MIGRATION = 57641
const CANCEL = 57642
const RETRY = 57643
const LAUNCH = 57644
const COMPLETE = 57645
const CLEANUP = 57646
const THROTTLE = 57647
const UNTHROTTLE = 57648
const FORCE_CUTOVER = 57649
const EXPIRE = 57650
const RATIO = 57651
const VITESS_THROTTLER = 57652
const BEGIN = 57653
const START = 57654
const TRANSACTION = 57655
const COMMIT = 57656
const ROLLBACK = 57657
const SAVEPOINT = 57658
const RELEASE = 57659
const WORK = 57660
const CONSISTENT = 57661
const SNAPSHOT = 57662
const BIT = 57663
const TINYINT = 57664
const SMALLINT = 57665
const MEDIUMINT = 57666
const INT = 57667
const INTEGER = 57668
const BIGINT = 57669
const INTNUM = 57670
const REAL = 57671
const DOUBLE = 57672
const FLOAT_TYPE = 57673
const FLOAT4_TYPE = 57674
const FLOAT8_TYPE = 57675
const DECIMAL_TYPE = 57676
const NUMERIC = 57677
const TIME = 57678
const TIMESTAMP = 57679
const DATETIME = 57680
const YEAR = 57681
const CHAR = 57682
const VARCHAR = 57683
const BOOL = 57684
const CHARACTER = 57685
const VARBINARY = 57686
const NCHAR = 57687
const TEXT = 57688
const TINYTEXT = 57689
const MEDIUMTEXT = 57690
const LONGTEXT = 57691
const BLOB = 57692
const TINYBLOB = 57693
const MEDIUMBLOB = 57694
const LONGBLOB = 57695
const JSON = 57696
const JSON_SCHEMA_VALID = 57697
const JSON_SCHEMA_VALIDATION_REPORT = 57698
const ENUM = 57699
const GEOMETRY = 57700
const POINT = 57701
const LINESTRING = 57702
const POLYGON = 57703
const GEOMCOLLECTION = 57704
const GEOMETRYCOLLECTION = 57705
const MULTIPOINT = 57706
const MULTILINESTRING = 57707
const MULTIPOLYGON = 57708
const ASCII = 57709
const UNICODE = 57710
const NULLX = 57711
const AUTO_INCREMENT = 57712
const APPROXNUM = 57713
const SIGNED = 57714
const UNSIGNED = 57715
const ZEROFILL = 57716
const PURGE = 57717
const BEFORE = 57718
const CODE = 57719
const COLLATION = 57720
const COLUMNS = 57721
const DATABASES = 57722
const ENGINES = 57723
const EVENT = 57724
const EXTENDED = 57725
const FIELDS = 57726
const FULL = 57727
const FUNCTION = 57728
const GTID_EXECUTED = 57729
const KEYSPACES = 57730
const OPEN = 57731
const PLUGINS = 57732
const PRIVILEGES = 57733
const PROCESSLIST = 57734
const SCHEMAS = 57735
const TABLES = 57736
const TRIGGERS = 57737
const USER = 57738
const VGTID_EXECUTED = 57739
const VITESS_KEYSPACES = 57740
const VITESS_METADATA = 57741
const VITESS_MIGRATIONS = 57742
const VITESS_REPLICATION_STATUS = 57743
const VITESS_SHARDS = 57744
const VITESS_TABLETS = 57745
const VITESS_TARGET = 57746
const VSCHEMA = 57747
const VITESS_THROTTLED_APPS = 57748
const NAMES = 57749
const GLOBAL = 57750
const SESSION = 57751
const ISOLATION = 57752
const LEVEL = 57753
const READ = 57754
const WRITE = 57755
const ONLY = 57756
const REPEATABLE = 57757
const COMMITTED = 57758
const UNCOMMITTED = 57759
const SERIALIZABLE = 57760
const ADDDATE = 57761
const CURRENT_TIMESTAMP = 57762
const DATABASE = 57763
const CURRENT_DATE = 57764
const CURDATE = 57765
const DATE_ADD = 57766
const DATE_SUB = 57767
const NOW = 57768
const SUBDATE = 57769
const CURTIME = 57770
const CURRENT_TIME = 57771
const LOCALTIME = 57772
const LOCALTIMESTAMP = 57773
const CURRENT_USER = 57774
const UTC_DATE = 57775
const UTC_TIME = 57776
const UTC_TIMESTAMP = 57777
const SYSDATE = 57778
const DAY = 57779
const DAY_HOUR = 57780
const DAY_MICROSECOND = 57781
const DAY_MINUTE = 57782
const DAY_SECOND = 57783
const HOUR = 57784
const HOUR_MICROSECOND = 57785
const HOUR_MINUTE = 57786
const HOUR_SECOND = 57787
const MICROSECOND = 57788
const MINUTE = 57789
const MINUTE_MICROSECOND = 57790
const MINUTE_SECOND = 57791
const MONTH = 57792
const QUARTER = 57793
const SECOND = 57794
const SECOND_MICROSECOND = 57795
const YEAR_MONTH = 57796
const WEEK = 57797
const SQL_TSI_DAY = 57798
const SQL_TSI_WEEK = 57799
const SQL_TSI_HOUR = 57800
const SQL_TSI_MINUTE = 57801
const SQL_TSI_MONTH = 57802
const SQL_TSI_QUARTER = 57803
const SQL_TSI_SECOND = 57804
const SQL_TSI_MICROSECOND = 57805
const SQL_TSI_YEAR = 57806
const REPLACE = 57807
const CONVERT = 57808
const CAST = 57809
const SUBSTR = 57810
const SUBSTRING = 57811
const MID = 57812
const SEPARATOR = 57813
const TIMESTAMPADD = 57814
const TIMESTAMPDIFF = 57815
const WEIGHT_STRING = 57816
const LTRIM = 57817
const RTRIM = 57818
const TRIM = 57819
const JSON_ARRAY = 57820
const JSON_OBJECT = 57821
const JSON_QUOTE = 57822
const JSON_DEPTH = 57823
const JSON_TYPE = 57824
const JSON_LENGTH = 57825
const JSON_VALID = 57826
const JSON_ARRAY_APPEND = 57827
const JSON_ARRAY_INSERT = 57828
const JSON_INSERT = 57829
const JSON_MERGE = 57830
const JSON_MERGE_PATCH = 57831
const JSON_MERGE_PRESERVE = 57832
const JSON_REMOVE = 57833
const JSON_REPLACE = 57834
const JSON_SET = 57835
const JSON_UNQUOTE = 57836
const COUNT = 57837
const AVG = 57838
const MAX = 57839
const MIN = 57840
const SUM = 57841
const GROUP_CONCAT = 57842
const BIT_AND = 57843
const BIT_OR = 57844
const BIT_XOR = 57845
const STD = 57846
const STDDEV = 57847
const STDDEV_POP = 57848
const STDDEV_SAMP = 57849
const VAR_POP = 57850
const VAR_SAMP = 57851
const VARIANCE = 57852
const ANY_VALUE = 57853
const REGEXP_INSTR = 57854
const REGEXP_LIKE = 57855
const REGEXP_REPLACE = 57856
const REGEXP_SUBSTR = 57857
const ExtractValue = 57858
const UpdateXML = 57859
const GET_LOCK = 57860
const RELEASE_LOCK = 57861
const RELEASE_ALL_LOCKS = 57862
const IS_FREE_LOCK = 57863
const IS_USED_LOCK = 57864
const LOCATE = 57865
const POSITION = 57866
const ST_GeometryCollectionFromText = 57867
const ST_GeometryFromText = 57868
const ST_LineStringFromText = 57869
const ST_MultiLineStringFromText = 57870
const ST_MultiPointFromText = 57871
const ST_MultiPolygonFromText = 57872
const ST_PointFromText = 57873
const ST_PolygonFromText = 57874
const ST_GeometryCollectionFromWKB = 57875
const ST_GeometryFromWKB = 57876
const ST_LineStringFromWKB = 57877
const ST_MultiLineStringFromWKB = 57878
const ST_MultiPointFromWKB = 57879
const ST_MultiPolygonFromWKB = 57880
const ST_PointFromWKB = 57881
const ST_PolygonFromWKB = 57882
const ST_AsBinary = 57883
const ST_AsText = 57884
const ST_Dimension = 57885
const ST_Envelope = 57886
const ST_IsSimple = 57887
const ST_IsEmpty = 57888
const ST_GeometryType = 57889
const ST_X = 57890
const ST_Y = 57891
const ST_Latitude = 57892
const ST_Longitude = 57893
const ST_EndPoint = 57894
const ST_IsClosed = 57895
const ST_Length = 57896
const ST_NumPoints = 57897
const ST_StartPoint = 57898
const ST_PointN = 57899
const ST_Area = 57900
const ST_Centroid = 57901
const ST_ExteriorRing = 57902
const ST_InteriorRingN = 57903
const ST_NumInteriorRings = 57904
const ST_NumGeometries = 57905
const ST_GeometryN = 57906
const ST_LongFromGeoHash = 57907
const ST_PointFromGeoHash = 57908
const ST_LatFromGeoHash = 57909
const ST_GeoHash = 57910
const ST_AsGeoJSON = 57911
const ST_GeomFromGeoJSON = 57912
const MATCH = 57913
const AGAINST = 57914
const BOOLEAN = 57915
const LANGUAGE = 57916
const WITH = 57917
const QUERY = 57918
const EXPANSION = 57919
const WITHOUT = 57920
const VALIDATION = 57921
const ROLLUP = 57922
const UNUSED = 57923
const ARRAY = 57924
const BYTE = 57925
const CUME_DIST = 57926
const DESCRIPTION = 57927
const DENSE_RANK = 57928
const EMPTY = 57929
const EXCEPT = 57930
const FIRST_VALUE = 57931
const GROUPING = 57932
const GROUPS = 57933
const JSON_TABLE = 57934
const LAG = 57935
const LAST_VALUE = 57936
const LATERAL = 57937
const LEAD = 57938
const NTH_VALUE = 57939
const NTILE = 57940
const OF = 57941
const OVER = 57942
const PERCENT_RANK = 57943
const RANK = 57944
const RECURSIVE = 57945
const ROW_NUMBER = 57946
const SYSTEM = 57947
const WINDOW = 57948
const ACTIVE = 57949
const ADMIN = 57950
const AUTOEXTEND_SIZE = 57951
const BUCKETS = 57952
const CLONE = 57953
const COLUMN_FORMAT = 57954
const COMPONENT = 57955
const DEFINITION = 57956
const ENFORCED = 57957
const ENGINE_ATTRIBUTE = 57958
const EXCLUDE = 57959
const FOLLOWING = 57960
const GET_MASTER_PUBLIC_KEY = 57961
const HISTOGRAM = 57962
const HISTORY = 57963
const INACTIVE = 57964
const INVISIBLE = 57965
const LOCKED = 57966
const MASTER_COMPRESSION_ALGORITHMS = 57967
const MASTER_PUBLIC_KEY_PATH = 57968
const MASTER_TLS_CIPHERSUITES = 57969
const MASTER_ZSTD_COMPRESSION_LEVEL = 57970
const NESTED = 57971
const NETWORK_NAMESPACE = 57972
const NOWAIT = 57973
const NULLS = 57974
const OJ = 57975
const OLD = 57976
const OPTIONAL = 57977
const ORDINALITY = 57978
const ORGANIZATION = 57979
const OTHERS = 57980
const PARTIAL = 57981
const PATH = 57982
const PERSIST = 57983
const PERSIST_ONLY = 57984
const PRECEDING = 57985
const PRIVILEGE_CHECKS_USER = 57986
const PROCESS = 57987
const RANDOM = 57988
const REFERENCE = 57989
const REQUIRE_ROW_FORMAT = 57990
const RESOURCE = 57991
const RESPECT = 57992
const RESTART = 57993
const RETAIN = 57994
const REUSE = 57995
const ROLE = 57996
const SECONDARY = 57997
const SECONDARY_ENGINE = 57998
const SECONDARY_ENGINE_ATTRIBUTE = 57999
const SECONDARY_LOAD = 58000
const SECONDARY_UNLOAD = 58001
const SIMPLE = 58002
const SKIP = 58003
const SRID = 58004
const THREAD_PRIORITY = 58005
const TIES = 58006
const UNBOUNDED = 58007
const VCPU = 58008
const VISIBLE = 58009
const RETURNING = 58010
const FORMAT_BYTES = 58011
const FORMAT_PICO_TIME = 58012
const PS_CURRENT_THREAD_ID = 58013
const PS_THREAD_ID = 58014
const GTID_SUBSET = 58015
const GTID_SUBTRACT = 58016
const WAIT_FOR_EXECUTED_GTID_SET = 58017
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58018
const FORMAT = 58019
const TREE = 58020
const VITESS = 58021
const TRADITIONAL = 58022
const VTEXPLAIN = 58023
const VEXPLAIN = 58024
const PLAN = 58025
const LOCAL = 58026
const LOW_PRIORITY = 58027
const NO_WRITE_TO_BINLOG = 58028
const LOGS = 58029
const ERROR = 58030
const GENERAL = 58031
const HOSTS = 58032
const OPTIMIZER_COSTS = 58033
const USER_RESOURCES = 58034
const SLOW = 58035
const CHANNEL = 58036
const RELAY = 58037
const EXPORT = 58038
const CURRENT = 58039
const ROW = 58040
const ROWS = 58041
const AVG_ROW_LENGTH = 58042
const CONNECTION = 58043
const CHECKSUM = 58044
const DELAY_KEY_WRITE = 58045
const ENCRYPTION = 58046
const ENGINE = 58047
const INSERT_METHOD = 58048
const MAX_ROWS = 58049
const MIN_ROWS = 58050
const PACK_KEYS = 58051
const PASSWORD = 58052
const FIXED = 58053
const DYNAMIC = 58054
const COMPRESSED = 58055
const REDUNDANT = 58056
const COMPACT = 58057
const ROW_FORMAT = 58058
const STATS_AUTO_RECALC = 58059
const STATS_PERSISTENT = 58060
const STATS_SAMPLE_PAGES = 58061
const STORAGE = 58062
const MEMORY = 58063
const DISK = 58064
const PARTITIONS = 58065
const LINEAR = 58066
const RANGE = 58067
const LIST = 58068
const SUBPARTITION = 58069
const SUBPARTITIONS = 58070
const HASH = 58071

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	16, 49,
	17, 49,
	-2, 40,
	-1, 52,
	1, 157,
	747, 157,
	-2, 165,
	-1, 53,
	148, 165,
	190, 165,
	360, 165,
	-2, 523,
	-1, 61,
	38, 780,
	253, 780,
	264, 780,
	299, 794,
	300, 794,
	-2, 782,
	-1, 66,
	255, 818,
	-2, 816,
	-1, 122,
	252, 1615,
	-2, 131,
	-1, 124,
	1, 158,
	747, 158,
	-2, 165,
	-1, 135,
	149, 408,
	258, 408,
	-2, 512,
	-1, 154,
	148, 165,
	190, 165,
	360, 165,
	-2, 532,
	-1, 743,
	176, 41,
	-2, 43,
	-1, 952,
	95, 1632,
	-2, 1476,
	-1, 953,
	95, 1633,
	235, 1637,
	-2, 1477,
	-1, 954,
	235, 1636,
	-2, 42,
	-1, 1038,
	65, 890,
	-2, 903,
	-1, 1126,
	263, 1103,
	268, 1103,
	-2, 419,
	-1, 1211,
	1, 580,
	747, 580,
	-2, 165,
	-1, 1519,
	235, 1637,
	-2, 1477,
	-1, 1732,
	65, 891,
	-2, 907,
	-1, 1733,
	65, 892,
	-2, 908,
	-1, 1793,
	148, 165,
	190, 165,
	360, 165,
	-2, 458,
	-1, 1874,
	149, 408,
	258, 408,
	-2, 512,
	-1, 1883,
	263, 1104,
	268, 1104,
	-2, 420,
	-1, 2330,
	235, 1641,
	-2, 1635,
	-1, 2331,
	235, 1637,
	-2, 1633,
	-1, 2434,
	148, 165,
	190, 165,
	360, 165,
	-2, 459,
	-1, 2441,
	28, 186,
	-2, 188,
	-1, 2901,
	86, 96,
	96, 96,
	-2, 970,
	-1, 2970,
	722, 700,
	-2, 674,
	-1, 3194,
	55, 1580,
	-2, 1574,
	-1, 4032,
	722, 700,
	-2, 688,
	-1, 4124,
	98, 632,
	104, 632,
	114, 632,
	192, 632,
	193, 632,
	194, 632,
	195, 632,
	196, 632,
	197, 632,
	198, 632,
	199, 632,
	200, 632,
	201, 632,
	202, 632,
	203, 632,
	204, 632,
	205, 632,
	206, 632,
	207, 632,
	208, 632,
	209, 632,
	210, 632,
	211, 632,
	212, 632,
	213, 632,
	214, 632,
	215, 632,
	216, 632,
	217, 632,
	218, 632,
	219, 632,
	220, 632,
	221, 632,
	222, 632,
	223, 632,
	224, 632,
	225, 632,
	226, 632,
	227, 632,
	228, 632,
	229, 632,
	230, 632,
	231, 632,
	232, 632,
	233, 632,
	-2, 2012,
}

const yyPrivate = 57344

const yyLast = 56203

var yyAct = [...]int{
	968, 3683, 3684, 87, 3682, 4199, 956, 4103, 4013, 4122,
	3482, 2135, 3995, 4212, 3346, 4091, 4166, 1279, 963, 3246,
	955, 2123, 3253, 4167, 2158, 3918, 1277, 3295, 2359, 2431,
	3304, 3309, 3306, 3207, 3305, 3303, 3308, 3307, 3993, 3324,
	1796, 2003, 3060, 2361, 3619, 3632, 3261, 2505, 747, 3145,
	3323, 3211, 2061, 3208, 3528, 5, 3725, 3034, 3059, 3205,
	2861, 2386, 3522, 3512, 3195, 917, 741, 742, 3016, 2935,
	3353, 1852, 775, 916, 2468, 2493, 2473, 4064, 2967, 2936,
	2536, 3326, 2937, 2419, 2407, 1752, 1036, 41, 87, 1088,
	2406, 1899, 163, 2853, 43, 1056, 2867, 2886, 1063, 737,
	2405, 921, 2837, 2402, 42, 1158, 2315, 1036, 2283, 1134,
	2119, 1033, 3008, 2282, 149, 2069, 2514, 2157, 1881, 3550,
	2492, 2394, 1098, 2553, 2928, 2874, 2475, 1116, 1121, 1785,
	2903, 1765, 2409, 1713, 1532, 2163, 2083, 2094, 104, 1457,
	100, 1442, 1999, 1888, 1095, 1980, 757, 1092, 2490, 3210,
	1127, 1096, 1122, 2464, 105, 1123, 1784, 1073, 1770, 1075,
	1124, 752, 1045, 1735, 1491, 3720, 2171, 2190, 2835, 744,
	2465, 1267, 1515, 2011, 167, 1040, 127, 125, 2060, 3712,
	126, 1055, 1041, 107, 3483, 1873, 132, 1035, 1042, 1039,
	2387, 85, 133, 751, 1207, 1031, 1068, 1536, 98, 745,
	4200, 1541, 3620, 3292, 1043, 4048, 2507, 918, 1058, 1253,
	3539, 1067, 84, 99, 2958, 106, 2507, 2508, 2509, 2551,
	1275, 2990, 2989, 93, 1965, 3612, 1030, 128, 4149, 3024,
	734, 4049, 3025, 4044, 4043, 2356, 2357, 2076, 2075, 134,
	1048, 2074, 2073, 2072, 2071, 2042, 1138, 1163, 1089, 1223,
	2833, 675, 678, 676, 2602, 3191, 4170, 1160, 3149, 4222,
	4165, 4143, 2540, 1105, 1453, 3575, 4190, 1100, 1171, 3486,
	1177, 1178, 1179, 3485, 1182, 1183, 1184, 1185, 1082, 2,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 1137, 1034, 128,
	1032, 1112, 1111, 735, 3314, 1110, 2539, 1083, 1756, 3314,
	95, 4022, 1754, 2960, 1049, 3687, 1164, 1167, 1168, 1113,
	4205, 2383, 3311, 4153, 111, 112, 113, 2863, 116, 719,
	1057, 122, 4151, 3687, 191, 4044, 719, 670, 1757, 2380,
	2382, 95, 1755, 2983, 713, 4204, 1474, 3996, 4152, 732,
	733, 1029, 2798, 2081, 95, 3372, 95, 4150, 1180, 1024,
	1025, 1026, 1027, 922, 3312, 190, 1038, 128, 4118, 3312,
	1081, 1085, 920, 3914, 3913, 1162, 2097, 1161, 1224, 2980,
	971, 972, 973, 4180, 713, 86, 1114, 3924, 129, 1081,
	1085, 920, 4147, 3318, 1070, 1071, 1746, 3644, 3318, 1444,
	971, 972, 973, 3625, 172, 3633, 3626, 4092, 2877, 4100,
	2533, 3686, 3923, 2128, 4127, 86, 3398, 1862, 713, 3243,
	3244, 2834, 2609, 1109, 3242, 1216, 1217, 709, 2912, 3686,
	86, 2911, 3023, 4104, 2913, 2538, 2878, 713, 2606, 4132,
	1470, 2426, 2427, 1104, 2053, 2054, 1106, 1786, 3007, 1787,
	2917, 2425, 1243, 1022, 3643, 1206, 1021, 1219, 1231, 4130,
	1272, 4014, 2924, 1232, 169, 3350, 3739, 170, 95, 4136,
	4137, 2007, 1244, 1454, 1237, 694, 1248, 1249, 3263, 3264,
	713, 1107, 2444, 2443, 1458, 4131, 1231, 713, 692, 3348,
	3380, 1232, 2607, 189, 1471, 3378, 1472, 1473, 95, 1230,
	2052, 1229, 4027, 2600, 1458, 2870, 2871, 3315, 2358, 4108,
	4171, 713, 3315, 95, 713, 727, 2056, 731, 725, 1260,
	3354, 1262, 86, 2390, 1782, 88, 3009, 1955, 689, 4108,
	1717, 4172, 3081, 3966, 2515, 3967, 2968, 704, 3341, 2993,
	2560, 4202, 2558, 2554, 2484, 1109, 3342, 1101, 1981, 1246,
	1247, 1264, 699, 1181, 1103, 1102, 714, 2390, 3351, 1259,
	1261, 1437, 1443, 702, 1269, 2199, 712, 1245, 2478, 1238,
	1271, 1956, 1252, 1957, 1212, 2577, 1270, 2578, 2603, 2579,
	2604, 1250, 3349, 3011, 2557, 2556, 1866, 3262, 3614, 2518,
	1157, 1251, 1468, 1492, 3613, 2561, 714, 2559, 2580, 3265,
	1074, 1187, 1186, 1107, 1136, 95, 3898, 173, 1147, 2008,
	1108, 3691, 1468, 3610, 2403, 3369, 179, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1501, 1500, 1502, 1503, 1118, 4223,
	714, 679, 1506, 681, 695, 1156, 716, 1155, 715, 685,
	1154, 683, 687, 696, 688, 1153, 682, 1152, 693, 714,
	1151, 684, 697, 698, 701, 705, 706, 707, 703, 700,
	4144, 691, 717, 2191, 1150, 2997, 1257, 2998, 2193, 3148,
	1258, 1117, 2198, 2194, 1149, 1118, 2195, 2196, 2197, 1144,
	1263, 2192, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207,
	2208, 1720, 714, 2961, 1084, 1078, 1076, 3265, 3082, 714,
	4177, 1464, 1093, 1129, 1456, 1256, 3525, 1135, 2000, 1276,
	2491, 1276, 1276, 1084, 1078, 1076, 2388, 2389, 3028, 1093,
	2477, 1464, 1069, 714, 1130, 1093, 714, 3012, 3609, 1091,
	2544, 2543, 1108, 2567, 2563, 2565, 2566, 2564, 2568, 2569,
	2570, 164, 1996, 1166, 1445, 1860, 1174, 3285, 3176, 1129,
	2388, 2389, 2992, 1165, 1783, 1859, 1858, 1148, 2978, 1997,
	1036, 1516, 1521, 1522, 1856, 1525, 1527, 1528, 1529, 1530,
	1531, 1222, 1534, 1535, 1537, 1537, 669, 1537, 1537, 1542,
	1542, 1542, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1513, 4021, 1265, 2959,
	1669, 2537, 1671, 1672, 1673, 1674, 1675, 1115, 1967, 1966,
	1968, 1969, 1970, 1452, 1542, 1542, 1542, 1542, 1542, 1542,
	969, 1435, 1436, 1434, 1218, 1526, 4067, 718, 1215, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1509, 1510, 1511, 1512, 4106, 710, 3573,
	3574, 969, 3642, 1523, 1136, 94, 2926, 1145, 1517, 4135,
	1710, 1077, 1538, 711, 1539, 1540, 969, 4106, 3316, 3317,
	165, 1543, 1544, 3316, 3317, 2982, 3685, 177, 2608, 4105,
	1077, 3320, 89, 1709, 2962, 94, 3320, 1463, 1460, 1461,
	1462, 1467, 1469, 1466, 3685, 1465, 1210, 1506, 1228, 4105,
	94, 1136, 3526, 4134, 2607, 1459, 2995, 1463, 1460, 1461,
	1462, 1467, 1469, 1466, 1716, 1465, 4216, 3470, 185, 2981,
	1887, 3006, 3370, 1036, 3005, 1459, 4145, 1036, 1173, 1745,
	4009, 3015, 3157, 1036, 1507, 1508, 1241, 3564, 3546, 3156,
	2481, 2908, 1136, 2873, 2810, 2131, 1708, 1774, 1227, 1986,
	1233, 1234, 1235, 1236, 910, 2535, 1670, 1135, 1221, 2868,
	1707, 166, 171, 168, 174, 175, 176, 178, 180, 181,
	182, 183, 124, 677, 1273, 1274, 2432, 184, 186, 187,
	188, 2482, 2155, 2624, 1506, 1503, 3241, 2635, 2480, 1746,
	2838, 2840, 94, 1486, 1052, 1268, 119, 4035, 3174, 1136,
	1159, 3605, 3538, 1254, 1135, 2555, 1146, 2065, 1993, 2172,
	193, 1788, 2012, 673, 1708, 1676, 1677, 1678, 1679, 1680,
	1681, 1726, 2483, 3055, 1724, 104, 2173, 1226, 1728, 1886,
	2164, 2951, 2479, 673, 1035, 4181, 2164, 1727, 2644, 1473,
	1474, 105, 1472, 1473, 1714, 1135, 3734, 1701, 2532, 1046,
	1136, 1129, 1132, 1133, 3580, 1093, 1985, 1109, 1205, 1126,
	1130, 3579, 2522, 1896, 1895, 3035, 1066, 1066, 1885, 2530,
	107, 2527, 2635, 120, 3018, 673, 1136, 1147, 1145, 3017,
	2147, 2136, 2137, 2138, 2139, 2149, 2140, 2141, 2142, 2154,
	2150, 2143, 2144, 2151, 2152, 2153, 2145, 2146, 2148, 1474,
	1136, 3018, 1135, 1722, 1879, 1047, 3017, 1139, 1129, 1863,
	1864, 1865, 1141, 2527, 2531, 4224, 1142, 1140, 4173, 3565,
	1725, 3387, 1209, 4068, 1950, 1872, 1901, 4218, 1902, 2005,
	1904, 1906, 1889, 1889, 1910, 1912, 1914, 1916, 1918, 1751,
	1032, 1711, 3906, 1891, 1748, 1034, 1723, 4214, 1932, 3037,
	4215, 1240, 4213, 1135, 1276, 1172, 2529, 1779, 1780, 1169,
	1255, 2534, 1242, 2839, 2170, 1211, 1847, 1890, 1989, 2013,
	1987, 1988, 4069, 1990, 1991, 1992, 1940, 1941, 3905, 1135,
	1225, 4001, 1946, 1947, 1855, 1129, 1132, 1133, 1471, 1093,
	1472, 1473, 1746, 1126, 1130, 1869, 1870, 3057, 971, 972,
	973, 1882, 1868, 1135, 3639, 3896, 3640, 1729, 1139, 1129,
	1982, 4225, 1983, 1141, 1125, 1984, 1746, 1142, 1140, 3656,
	3047, 3046, 3045, 3655, 2169, 3039, 2099, 3043, 1208, 3038,
	4002, 3036, 1474, 1975, 3587, 1893, 3041, 3586, 1143, 3576,
	2100, 1504, 1505, 2098, 1108, 3040, 3293, 1471, 3281, 1472,
	1473, 2001, 2933, 2932, 2931, 1936, 1498, 1499, 1501, 1500,
	1502, 1503, 1928, 3042, 3044, 1931, 1492, 1933, 2487, 1488,
	1973, 1489, 1976, 1960, 1962, 1861, 128, 1959, 1112, 1111,
	1958, 1492, 1110, 3027, 1948, 1490, 1504, 1505, 1487, 1942,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1501, 1500, 1502,
	1503, 1939, 1938, 2018, 1974, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1501, 1500, 1502, 1503, 1496, 1497, 1498, 1499,
	1501, 1500, 1502, 1503, 1276, 1276, 2040, 1937, 1908, 2014,
	2015, 1492, 2087, 2088, 2614, 2615, 1721, 4174, 2320, 87,
	1474, 1972, 87, 2019, 1474, 1961, 190, 3345, 1439, 1474,
	2026, 2027, 2028, 2685, 719, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1501, 1500, 1502, 1503, 1492, 1782, 2623, 129,
	1763, 3570, 4030, 719, 2039, 1474, 2915, 1492, 719, 4029,
	1471, 1474, 1472, 1473, 2503, 172, 2502, 2501, 1474, 2500,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1501, 1500, 1502,
	1503, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1501, 1500,
	1502, 1503, 2859, 4201, 2395, 2396, 2126, 2126, 2124, 2124,
	2127, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1501, 1500,
	1502, 1503, 4186, 1746, 1746, 2089, 4184, 1746, 4161, 1746,
	42, 1762, 1709, 42, 2499, 169, 2498, 4005, 170, 1494,
	1495, 1496, 1497, 1498, 1499, 1501, 1500, 1502, 1503, 2087,
	2088, 2085, 2086, 2633, 2859, 1746, 2210, 4114, 1746, 1470,
	1746, 4023, 1474, 2632, 189, 1480, 1481, 1482, 1483, 1484,
	1485, 1479, 1476, 2320, 1759, 2084, 4004, 2317, 1471, 2224,
	1472, 1473, 1471, 2683, 1472, 1473, 2319, 1471, 110, 1472,
	1473, 1474, 4003, 1470, 1746, 1708, 2016, 1474, 3901, 109,
	3885, 108, 967, 2020, 1474, 2022, 2023, 2024, 2025, 1707,
	2066, 1474, 2029, 1471, 2096, 1472, 1473, 85, 2681, 1471,
	85, 1472, 1473, 1760, 2041, 1474, 1471, 2159, 1472, 1473,
	101, 2859, 4099, 2101, 2047, 2048, 1474, 2859, 4078, 2102,
	102, 2104, 2105, 2106, 2107, 2108, 2109, 2111, 2113, 2114,
	2115, 2116, 2117, 2118, 4112, 1746, 2859, 4074, 3933, 2307,
	2308, 2309, 2310, 2311, 3884, 1474, 3986, 1746, 2330, 2130,
	2103, 1474, 3733, 3249, 1746, 101, 2332, 2328, 173, 2335,
	2336, 103, 2234, 4110, 1746, 102, 1474, 179, 3731, 3979,
	1746, 3932, 2329, 2174, 2175, 2176, 2177, 1746, 3623, 4020,
	103, 1746, 3889, 3928, 1517, 3909, 1746, 2188, 2316, 2318,
	1471, 2209, 1472, 1473, 673, 2353, 673, 3977, 1746, 2859,
	3897, 3888, 2165, 3652, 3250, 1706, 2226, 1705, 3974, 1746,
	3631, 1474, 1704, 3623, 1746, 1474, 2859, 3621, 2969, 1471,
	1474, 1472, 1473, 3584, 1474, 1471, 1746, 1472, 1473, 3252,
	3569, 3355, 1471, 3352, 1472, 1473, 3284, 3956, 1746, 1471,
	2411, 1472, 1473, 3511, 1746, 1746, 1474, 2327, 2671, 3247,
	2333, 2334, 2330, 1471, 1474, 1472, 1473, 673, 3504, 1746,
	2947, 2328, 3283, 104, 1471, 1474, 1472, 1473, 3263, 3264,
	2527, 1746, 1474, 3544, 1746, 3248, 2400, 2765, 1746, 105,
	3274, 3273, 3271, 3272, 104, 1520, 2441, 3269, 3270, 2440,
	2375, 1474, 164, 1471, 2363, 1472, 1473, 2942, 1474, 1471,
	105, 1472, 1473, 3501, 1746, 3269, 3268, 3499, 1746, 3254,
	2929, 2095, 1098, 1746, 1471, 1703, 1472, 1473, 2883, 1746,
	2607, 2991, 1851, 2972, 2965, 2966, 1474, 2859, 2858, 2450,
	2451, 2452, 2453, 2445, 1474, 2446, 2447, 2448, 2449, 4175,
	95, 2413, 1696, 2904, 2436, 1098, 2435, 4018, 4140, 1048,
	2598, 2456, 2457, 2458, 2459, 2590, 2417, 3559, 2376, 1471,
	2589, 1472, 1473, 1471, 3506, 1472, 1473, 2369, 1471, 2370,
	1472, 1473, 1471, 2378, 1472, 1473, 2549, 3262, 2129, 1746,
	2516, 2470, 2351, 2439, 3893, 2875, 2476, 2548, 2385, 3265,
	2398, 3606, 3541, 2364, 1471, 2043, 1472, 1473, 2009, 2422,
	2423, 2421, 1471, 1082, 1472, 1473, 1971, 2438, 1474, 1963,
	2437, 2905, 1474, 1471, 1953, 1472, 1473, 1474, 3462, 1746,
	1471, 2907, 1472, 1473, 1474, 1949, 3460, 1746, 2513, 1945,
	1474, 1944, 1083, 1943, 2486, 1474, 2856, 1851, 1850, 1471,
	1474, 1472, 1473, 1761, 1474, 1266, 1471, 1138, 1472, 1473,
	103, 1474, 2904, 1794, 1793, 2471, 1474, 1889, 2467, 3537,
	3540, 2489, 2883, 2485, 2521, 3236, 1470, 2524, 3206, 2525,
	2497, 2460, 2462, 2463, 1471, 2607, 1472, 1473, 2882, 3537,
	2875, 2541, 1471, 4062, 1472, 1473, 2528, 109, 1520, 2520,
	2471, 2523, 4034, 2519, 2859, 1474, 2883, 3490, 1137, 3271,
	3456, 1746, 3179, 2424, 3453, 1746, 3251, 2545, 2765, 2542,
	2934, 2546, 2547, 2668, 2854, 2667, 3451, 1746, 1474, 2527,
	2905, 2510, 3449, 1746, 1474, 2393, 1750, 3447, 1746, 2354,
	2607, 165, 3445, 1746, 110, 2129, 3443, 1746, 177, 2883,
	1747, 1749, 2612, 3441, 1746, 109, 673, 108, 3439, 1746,
	2527, 1036, 1036, 1036, 2552, 103, 1471, 3537, 1472, 1473,
	1471, 1470, 1472, 1473, 2067, 1471, 1474, 1472, 1473, 1046,
	2051, 1527, 1471, 1527, 1472, 1473, 1995, 3588, 1471, 185,
	1472, 1473, 1781, 1471, 1474, 1472, 1473, 3502, 1471, 2627,
	1472, 1473, 1471, 673, 1472, 1473, 1120, 1037, 1119, 1471,
	2583, 1472, 1473, 4081, 1471, 3920, 1472, 1473, 1753, 2330,
	3437, 1746, 673, 3886, 1474, 3296, 3435, 1746, 2630, 3746,
	1746, 3604, 166, 171, 168, 174, 175, 176, 178, 180,
	181, 182, 183, 2329, 3589, 3590, 3591, 3601, 184, 186,
	187, 188, 3582, 1471, 1474, 1472, 1473, 3403, 3402, 1853,
	2469, 1474, 1924, 2599, 3343, 3298, 2650, 1474, 3433, 1746,
	3294, 1474, 1520, 2973, 2466, 2461, 1471, 2605, 1472, 1473,
	2455, 2454, 1471, 2665, 1472, 1473, 3431, 1746, 1978, 1474,
	95, 2613, 1884, 1474, 1880, 1849, 121, 2938, 2939, 1520,
	1210, 3347, 1520, 3921, 1520, 673, 2619, 2616, 2617, 2618,
	1474, 2484, 3592, 2367, 4196, 2096, 3429, 1746, 4194, 1925,
	1926, 1927, 3551, 3552, 1471, 1951, 1472, 1473, 4168, 4042,
	3961, 2045, 3554, 1474, 2631, 3557, 3290, 3289, 3288, 2620,
	673, 2622, 1471, 1474, 1472, 1473, 3427, 1746, 3556, 3206,
	2625, 2939, 2626, 3425, 1746, 1474, 2004, 673, 3255, 3423,
	1746, 2952, 3259, 3409, 1746, 3593, 3594, 3595, 2643, 3258,
	2621, 2584, 1471, 673, 1472, 1473, 3225, 3224, 1474, 1920,
	673, 3385, 1746, 1474, 4038, 2830, 1746, 1474, 674, 2030,
	2031, 673, 673, 673, 673, 673, 673, 673, 2046, 2809,
	3922, 3228, 1471, 3260, 1472, 1473, 3229, 2628, 3256, 1471,
	2384, 1472, 1473, 3257, 1050, 1471, 1474, 1472, 1473, 1471,
	1474, 1472, 1473, 3226, 2679, 3468, 2797, 3230, 3227, 2892,
	2893, 2841, 1921, 1922, 1923, 2828, 1746, 1471, 1758, 1472,
	1473, 1471, 2373, 1472, 1473, 3545, 3724, 2803, 1746, 3184,
	1036, 3183, 4000, 3726, 2126, 3533, 2124, 2844, 1471, 3193,
	1472, 1473, 736, 2592, 2593, 1051, 2922, 1474, 2595, 1994,
	2780, 1746, 1020, 2880, 2881, 3464, 2842, 2596, 3267, 2772,
	1746, 1471, 2411, 1472, 1473, 1036, 2900, 3711, 1474, 3710,
	2943, 1471, 3530, 1472, 1473, 2092, 2090, 2091, 1474, 1053,
	3529, 2172, 2845, 1471, 2847, 1472, 1473, 1054, 2763, 1746,
	3196, 3198, 2761, 1746, 1474, 1176, 1062, 2860, 2173, 3199,
	2576, 1492, 1474, 2575, 2574, 2879, 1471, 2573, 1472, 1473,
	1061, 1471, 2095, 1472, 1473, 1471, 2640, 1472, 1473, 2572,
	2571, 1175, 3709, 3363, 2938, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1501, 1500, 1502, 1503, 2869, 1714, 2832, 2748,
	1746, 3021, 101, 1438, 1471, 2979, 1472, 1473, 1471, 1708,
	1472, 1473, 102, 129, 42, 1474, 3535, 103, 2925, 2927,
	2746, 1746, 2898, 2897, 1474, 2852, 2899, 4210, 101, 1474,
	3400, 673, 110, 3286, 103, 2872, 2857, 2918, 102, 2977,
	1474, 2587, 2902, 109, 1474, 108, 2744, 1746, 1474, 2395,
	2396, 4117, 4019, 103, 2639, 1471, 3916, 1472, 1473, 2906,
	2476, 3266, 2896, 1474, 2909, 2379, 3182, 1474, 3513, 2611,
	3985, 2916, 2050, 108, 3181, 2919, 1471, 3984, 1472, 1473,
	3964, 3732, 109, 110, 3730, 2988, 1471, 2167, 1472, 1473,
	2930, 1520, 2168, 2941, 109, 3523, 108, 3729, 2944, 2945,
	3722, 3602, 1471, 3534, 1472, 1473, 3532, 2742, 1746, 1520,
	1471, 2940, 1472, 1473, 3299, 2511, 2740, 1746, 1867, 1060,
	2948, 2738, 1746, 2949, 3721, 2953, 2954, 2955, 110, 2875,
	2230, 2985, 2736, 1746, 3695, 1872, 2734, 1746, 2856, 109,
	2732, 1746, 3085, 1474, 4198, 4197, 4197, 3031, 3032, 1474,
	2669, 2974, 2975, 2365, 1775, 2730, 1746, 4198, 1767, 2728,
	1746, 3, 4006, 1471, 2155, 1472, 1473, 3568, 2984, 114,
	115, 3051, 1471, 2064, 1472, 1473, 10, 1471, 2062, 1472,
	1473, 9, 2063, 97, 1, 8, 1028, 1441, 1471, 1474,
	1472, 1473, 1471, 1474, 1472, 1473, 1471, 3010, 1472, 1473,
	3048, 3029, 1440, 3572, 4129, 690, 2355, 1712, 4169, 3013,
	2313, 1471, 4125, 1472, 1473, 1471, 4126, 1472, 1473, 1964,
	1954, 3634, 2281, 3917, 3066, 3067, 3068, 3069, 3070, 3071,
	3072, 3073, 3074, 3075, 3302, 2726, 1746, 1474, 2517, 3600,
	2345, 2724, 1746, 2474, 3083, 2004, 2888, 2891, 2892, 2893,
	2889, 1128, 2890, 2894, 3049, 154, 3551, 3552, 1747, 2352,
	2433, 2986, 2147, 2136, 2137, 2138, 2139, 2149, 2140, 2141,
	2142, 2154, 2150, 2143, 2144, 2151, 2152, 2153, 2145, 2146,
	2148, 2722, 1746, 1474, 2434, 2720, 1746, 4094, 118, 1086,
	1951, 1471, 117, 1472, 1473, 1131, 1239, 1471, 2377, 1472,
	1473, 2512, 3624, 3125, 3087, 3127, 1066, 3033, 2923, 3143,
	2442, 3019, 1800, 1798, 3020, 3050, 1799, 1797, 1802, 1801,
	4066, 3138, 3139, 3140, 3141, 1046, 3371, 2670, 3469, 2718,
	1746, 2055, 726, 2895, 3030, 720, 192, 1471, 1789, 1472,
	1473, 1471, 673, 1472, 1473, 1768, 2049, 3161, 1170, 2004,
	673, 680, 673, 3150, 673, 2420, 3275, 2550, 1474, 686,
	1524, 2964, 3152, 2044, 3180, 2910, 1080, 2411, 1072, 2366,
	2846, 3076, 1079, 1474, 3894, 2716, 1746, 2316, 2318, 2316,
	2318, 3214, 1474, 3527, 3123, 1471, 3192, 1472, 1473, 3213,
	3194, 87, 2862, 3197, 2411, 2411, 2411, 2411, 2411, 3190,
	3999, 1474, 3723, 4079, 2488, 3133, 3134, 3135, 3136, 3137,
	3161, 2920, 1764, 3489, 2411, 2642, 2162, 2411, 3151, 1514,
	3153, 2888, 2891, 2892, 2893, 2889, 3218, 2890, 2894, 2410,
	1474, 1471, 3690, 1472, 1473, 2082, 2005, 3160, 749, 1474,
	3235, 748, 746, 3178, 2848, 2876, 1478, 1477, 1474, 3172,
	2714, 1746, 957, 1474, 2836, 1776, 3185, 2887, 3173, 3175,
	3177, 2885, 2884, 3187, 2585, 2709, 1746, 3188, 2413, 2418,
	3553, 3200, 3201, 3549, 2705, 1746, 4121, 2412, 1040, 3220,
	3221, 3319, 3223, 3217, 3219, 1041, 2408, 3222, 2855, 3186,
	1474, 3327, 1039, 2703, 1746, 2413, 2413, 2413, 2413, 2413,
	908, 3239, 3231, 104, 907, 1474, 1471, 758, 1472, 1473,
	1474, 750, 740, 970, 3237, 2413, 1474, 3238, 2413, 105,
	3245, 1471, 3399, 1472, 1473, 3276, 906, 3278, 905, 3277,
	1471, 3391, 1472, 1473, 3329, 3330, 2994, 3344, 2996, 2921,
	2696, 1746, 3340, 1474, 1455, 2694, 1746, 1731, 1734, 1471,
	2374, 1472, 1473, 673, 3279, 3280, 3331, 1099, 2476, 3321,
	673, 3368, 1474, 3328, 3332, 3300, 3203, 4025, 2610, 3397,
	673, 673, 1730, 3338, 673, 4032, 2588, 3310, 1471, 3618,
	1472, 1473, 3389, 3291, 2970, 2504, 673, 1471, 69, 1472,
	1473, 3356, 3358, 673, 3359, 3209, 1471, 2826, 1472, 1473,
	3209, 1471, 2825, 1472, 1473, 3366, 46, 1474, 2821, 3994,
	4063, 900, 897, 3692, 3693, 3694, 3146, 3373, 3374, 673,
	3375, 3147, 4045, 3377, 3376, 3379, 4046, 3381, 1736, 896,
	3392, 3393, 3394, 3395, 3396, 2820, 4047, 2219, 1471, 1451,
	1472, 1473, 1744, 1448, 4142, 1737, 2057, 96, 36, 35,
	34, 33, 32, 1471, 2819, 1472, 1473, 26, 1471, 25,
	1472, 1473, 24, 23, 1471, 1527, 1472, 1473, 22, 1527,
	2371, 2372, 1743, 1741, 1742, 1738, 29, 1739, 19, 21,
	2629, 20, 18, 3313, 2634, 3514, 3301, 3516, 4164, 4209,
	123, 1471, 55, 1472, 1473, 52, 50, 131, 3484, 2818,
	1740, 130, 53, 49, 1520, 3488, 2004, 2637, 1213, 2638,
	1471, 47, 1472, 1473, 31, 2646, 30, 17, 16, 2648,
	2649, 15, 14, 13, 12, 11, 7, 6, 2655, 2656,
	2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 3367, 2666,
	39, 38, 37, 28, 27, 40, 4, 2411, 1709, 3515,
	2957, 3517, 3212, 2506, 0, 1471, 3519, 1472, 1473, 0,
	3566, 3524, 2672, 2673, 2674, 2675, 0, 2677, 2678, 3531,
	2680, 1474, 0, 0, 2682, 1474, 0, 3536, 2687, 2688,
	0, 2689, 0, 0, 2692, 2693, 2695, 2697, 2698, 2699,
	2700, 2701, 2702, 2704, 2706, 2707, 2708, 2710, 738, 2712,
	2713, 2715, 2717, 2719, 2721, 2723, 2725, 2727, 2729, 2731,
	2733, 2735, 2737, 2739, 2741, 2743, 2745, 2747, 2749, 2750,
	2751, 3521, 2753, 3322, 2755, 3331, 2757, 2758, 3558, 2760,
	2762, 2764, 3328, 3332, 3491, 2767, 3493, 3494, 3495, 2771,
	3583, 3567, 3585, 2776, 2777, 2778, 2779, 3561, 2413, 3560,
	3628, 3629, 3555, 1474, 3548, 0, 2790, 2791, 2792, 2793,
	2794, 2795, 0, 2817, 2799, 2800, 0, 2816, 0, 0,
	1474, 0, 2802, 3562, 3563, 3577, 3578, 2808, 0, 1474,
	0, 0, 2811, 2812, 2813, 2814, 2815, 0, 0, 1474,
	0, 0, 0, 2822, 2823, 1474, 2824, 0, 0, 2827,
	2829, 2377, 1474, 2831, 0, 0, 0, 1059, 3361, 3362,
	1065, 1065, 0, 2843, 0, 0, 1474, 0, 0, 1471,
	1474, 1472, 1473, 1471, 0, 1472, 1473, 1474, 3611, 673,
	0, 0, 3615, 3616, 3617, 3630, 0, 1951, 0, 0,
	0, 0, 0, 0, 0, 2807, 3646, 0, 0, 1474,
	0, 0, 0, 0, 0, 0, 0, 1474, 0, 0,
	0, 0, 2806, 1474, 0, 0, 0, 0, 0, 1474,
	0, 2805, 0, 3657, 0, 0, 0, 0, 0, 0,
	0, 2804, 0, 0, 0, 0, 673, 2801, 0, 1474,
	0, 673, 0, 1474, 2796, 0, 0, 0, 0, 3679,
	0, 1471, 0, 1472, 1473, 0, 1474, 0, 2789, 0,
	0, 0, 2788, 3698, 0, 3699, 3700, 3701, 1471, 2787,
	1472, 1473, 0, 3708, 1474, 0, 3715, 1471, 3717, 1472,
	1473, 0, 0, 1474, 0, 0, 0, 1471, 3688, 1472,
	1473, 2786, 0, 1471, 0, 1472, 1473, 0, 0, 2785,
	1471, 3213, 1472, 1473, 87, 2784, 3213, 3718, 0, 1474,
	0, 2783, 0, 0, 1471, 673, 1472, 1473, 1471, 0,
	1472, 1473, 2956, 1474, 0, 1471, 0, 1472, 1473, 0,
	0, 2782, 0, 0, 1474, 2781, 0, 0, 2126, 3651,
	2124, 3748, 3728, 3727, 3719, 3738, 1474, 1471, 2775, 1472,
	1473, 3735, 3737, 0, 0, 1471, 3740, 1472, 1473, 0,
	0, 1471, 0, 1472, 1473, 0, 2774, 1471, 1520, 1472,
	1473, 3900, 0, 0, 0, 2773, 0, 3752, 0, 0,
	0, 673, 673, 673, 673, 673, 673, 1471, 0, 1472,
	1473, 1471, 0, 1472, 1473, 0, 0, 0, 3607, 3608,
	0, 2770, 0, 0, 1471, 42, 1472, 1473, 673, 673,
	3892, 0, 3891, 0, 0, 2769, 0, 0, 0, 0,
	3919, 3907, 1471, 3912, 1472, 1473, 2768, 0, 3911, 0,
	0, 1471, 673, 1472, 1473, 0, 0, 0, 2766, 0,
	0, 0, 3890, 0, 3958, 3959, 3749, 3750, 0, 0,
	3061, 3062, 3063, 3064, 3065, 3742, 3716, 1471, 0, 1472,
	1473, 0, 0, 0, 0, 0, 2126, 0, 2124, 3962,
	3080, 1471, 0, 1472, 1473, 0, 0, 0, 3902, 3903,
	3904, 0, 1471, 0, 1472, 1473, 0, 0, 0, 0,
	0, 0, 0, 0, 1471, 0, 1472, 1473, 0, 4007,
	3213, 0, 3965, 0, 3744, 3209, 3968, 3998, 0, 0,
	0, 0, 0, 0, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1665, 1666, 1667,
	1668, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 3992, 3963, 3991, 3982, 4008,
	0, 1474, 0, 0, 0, 3988, 1474, 3990, 0, 4026,
	0, 0, 0, 0, 3212, 1474, 0, 0, 0, 3212,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 1066,
	3215, 673, 0, 0, 0, 1709, 4011, 0, 0, 0,
	0, 1474, 0, 0, 0, 0, 0, 0, 3233, 0,
	0, 0, 1520, 0, 3895, 4015, 4028, 1520, 673, 673,
	673, 673, 673, 4010, 4031, 0, 0, 1474, 0, 0,
	3232, 0, 0, 0, 0, 0, 1951, 0, 673, 4033,
	0, 673, 3240, 2004, 3899, 0, 0, 0, 0, 0,
	0, 4040, 0, 2759, 0, 0, 0, 0, 2756, 4050,
	0, 0, 0, 0, 0, 0, 0, 2754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4051, 0,
	0, 4052, 0, 0, 0, 4076, 0, 673, 42, 0,
	87, 0, 0, 2752, 0, 0, 0, 0, 1475, 0,
	0, 4061, 0, 1520, 0, 0, 0, 0, 0, 1471,
	4070, 1472, 1473, 673, 1471, 0, 1472, 1473, 0, 2711,
	4082, 1709, 0, 1471, 4107, 1472, 1473, 673, 0, 1533,
	4093, 3919, 4096, 4085, 4090, 4087, 3365, 4086, 4084, 4089,
	4088, 0, 4080, 0, 0, 4115, 0, 673, 0, 1471,
	673, 1472, 1473, 0, 0, 0, 4012, 0, 3382, 3383,
	0, 3384, 3386, 3388, 0, 0, 4138, 0, 0, 4128,
	0, 0, 4133, 3212, 4120, 1471, 0, 1472, 1473, 0,
	0, 4107, 4148, 0, 4146, 0, 0, 0, 4159, 3401,
	1817, 42, 0, 1474, 3404, 0, 3406, 3407, 3408, 3410,
	3411, 3412, 3413, 3414, 3415, 3416, 3417, 3418, 3419, 3420,
	3421, 3422, 3424, 3426, 3428, 3430, 3432, 3434, 3436, 3438,
	3440, 3442, 3444, 3446, 3448, 3450, 3452, 3454, 3455, 3457,
	3458, 3459, 3461, 2005, 4163, 3463, 4182, 3465, 3466, 3467,
	4188, 4189, 3471, 3472, 3473, 3474, 3475, 3476, 3477, 3478,
	3479, 3480, 3481, 2126, 4195, 2124, 4192, 4178, 4107, 4203,
	4193, 3487, 4179, 4191, 4158, 3492, 0, 4077, 0, 3496,
	3497, 4211, 3498, 3500, 0, 3503, 3505, 4219, 3507, 3508,
	3509, 3510, 4217, 0, 3209, 2691, 1474, 0, 3518, 4072,
	1474, 1736, 0, 4162, 1474, 0, 4017, 0, 4228, 4229,
	3959, 4227, 1817, 1474, 0, 1744, 0, 0, 1737, 0,
	0, 2126, 1474, 2124, 4226, 673, 1474, 0, 0, 0,
	1474, 0, 0, 3542, 3543, 0, 0, 3547, 0, 0,
	4036, 0, 4024, 1732, 1733, 1743, 1741, 1742, 1738, 0,
	1739, 1471, 0, 1472, 1473, 0, 1805, 0, 4154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1740, 0, 0, 0, 0, 0, 0,
	0, 673, 0, 0, 0, 0, 0, 0, 2690, 0,
	0, 0, 2686, 0, 0, 0, 2684, 0, 0, 0,
	0, 0, 0, 0, 0, 2676, 0, 0, 0, 0,
	673, 0, 0, 0, 2647, 0, 0, 0, 2641, 0,
	0, 0, 2636, 0, 0, 0, 0, 4071, 0, 1766,
	673, 0, 0, 673, 673, 673, 0, 0, 0, 0,
	1818, 0, 0, 3622, 1471, 0, 1472, 1473, 1471, 0,
	1472, 1473, 1471, 0, 1472, 1473, 0, 0, 0, 0,
	0, 1471, 0, 1472, 1473, 0, 0, 1854, 1805, 0,
	1471, 0, 1472, 1473, 1471, 0, 1472, 1473, 1471, 0,
	1472, 1473, 0, 0, 0, 0, 0, 0, 3641, 0,
	0, 3645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 1834, 1835, 1836, 1837, 1838, 1839,
	0, 1840, 1841, 1843, 1844, 1842, 1845, 1846, 1819, 1820,
	1821, 1822, 1803, 1804, 1832, 3658, 1806, 0, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 0, 0, 1816,
	1823, 1824, 1825, 1826, 0, 1827, 1828, 1829, 1830, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	4176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3681,
	0, 0, 0, 0, 1018, 2010, 0, 2320, 0, 0,
	1019, 0, 3689, 0, 0, 0, 0, 0, 0, 3696,
	2125, 0, 0, 0, 0, 1831, 1834, 1835, 1836, 1837,
	1838, 1839, 0, 1840, 1841, 1843, 1844, 1842, 1845, 1846,
	1819, 1820, 1821, 1822, 1803, 1804, 1832, 0, 1806, 0,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 0,
	0, 1816, 1823, 1824, 1825, 1826, 0, 1827, 1828, 1829,
	1830, 0, 0, 1951, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1520, 0, 0, 0, 1951, 0, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	0, 0, 0, 0, 0, 0, 0, 0, 3908, 0,
	0, 0, 0, 0, 0, 0, 0, 3915, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 1951, 0, 0, 0, 0, 3925, 3926, 3927,
	0, 3929, 0, 3930, 3931, 0, 0, 0, 0, 3934,
	3935, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944,
	3945, 3946, 3947, 3948, 3949, 3950, 3951, 3952, 3953, 3954,
	3955, 0, 3957, 3960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3969, 3970,
	3971, 3972, 3973, 3975, 3976, 3978, 3980, 3981, 3983, 0,
	0, 0, 3987, 0, 0, 0, 3989, 0, 0, 2077,
	2078, 2079, 2080, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2093, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 4016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2132, 2133, 0, 0, 0, 0, 2156, 0, 0, 2160,
	2161, 0, 0, 0, 2166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2178,
	2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 0,
	2189, 0, 0, 0, 2211, 2212, 2213, 2214, 2215, 2216,
	2217, 2218, 2220, 0, 2225, 0, 2227, 2228, 2229, 0,
	2231, 2232, 2233, 0, 2235, 2236, 2237, 2238, 2239, 2240,
	2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250,
	2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260,
	2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293,
	2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303,
	2304, 2305, 2306, 0, 0, 0, 0, 0, 2312, 0,
	2314, 0, 2321, 2322, 2323, 2324, 2325, 2326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1951, 0, 0,
	0, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 0,
	2346, 2347, 2348, 2349, 2350, 0, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1065, 0, 4056, 0, 0, 0, 0, 0, 4059, 0,
	4060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 2391, 2392, 4075, 2963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 151, 0,
	0, 1520, 0, 0, 0, 0, 0, 2430, 0, 4101,
	4102, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4109, 4111, 4113, 0, 0, 0, 0,
	4095, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4119, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 150, 4141, 0, 0, 0, 0, 0, 0,
	953, 0, 0, 0, 0, 0, 0, 0, 2472, 0,
	1951, 0, 169, 0, 0, 170, 0, 0, 3773, 3775,
	3774, 3840, 3841, 3842, 3843, 3844, 3845, 3846, 3776, 3777,
	800, 4160, 0, 0, 0, 0, 0, 1875, 1876, 161,
	160, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 195,
	0, 0, 0, 724, 0, 4183, 4185, 4187, 730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	2004, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1018, 0, 0, 0, 195, 0, 1019, 4208, 0,
	0, 0, 0, 0, 0, 0, 0, 2125, 0, 0,
	0, 0, 0, 0, 0, 0, 4220, 4221, 0, 0,
	730, 195, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 1877, 158, 0, 1874, 0, 156, 157,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1715, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3781, 0,
	0, 0, 0, 1023, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3789, 3790, 0, 0, 3865, 3864, 3863,
	0, 0, 3861, 3862, 3860, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2651, 2652, 2653, 2654, 3866, 923, 0,
	776, 777, 3867, 3868, 927, 3869, 779, 780, 924, 925,
	0, 774, 778, 926, 928, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1533, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	3770, 3771, 3772, 3778, 3779, 3780, 3791, 3838, 3839, 3847,
	3849, 879, 3848, 3850, 3851, 3852, 3855, 3856, 3857, 3858,
	3853, 3854, 3859, 3753, 3757, 3754, 3755, 3756, 3768, 3758,
	3759, 3760, 3761, 3762, 3763, 3764, 3765, 3766, 3767, 3769,
	3870, 3871, 3872, 3873, 3874, 3875, 3784, 3788, 3787, 3785,
	3786, 3782, 3783, 3810, 3809, 3811, 3812, 3813, 3814, 3815,
	3816, 3818, 3817, 3819, 3820, 3821, 3822, 3823, 3824, 3792,
	3793, 3796, 3797, 3795, 3794, 3798, 3807, 3808, 3799, 3800,
	3801, 3802, 3803, 3804, 3806, 3805, 3825, 3826, 3827, 3828,
	3829, 3831, 3830, 3834, 3835, 3833, 3832, 3837, 3836, 0,
	0, 0, 0, 0, 152, 0, 0, 153, 0, 0,
	0, 0, 929, 0, 930, 0, 0, 934, 0, 0,
	0, 936, 935, 0, 937, 899, 898, 0, 0, 931,
	932, 0, 933, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3876, 3877, 3878,
	3879, 3880, 3881, 3882, 3883, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	171, 168, 174, 175, 176, 178, 180, 181, 182, 183,
	0, 0, 0, 0, 0, 184, 186, 187, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	0, 730, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3026, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3052, 3053,
	3054, 0, 0, 3056, 0, 0, 3058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3077, 3078, 3079, 0,
	0, 0, 0, 0, 0, 3084, 0, 0, 0, 0,
	3086, 0, 0, 3088, 3089, 3090, 0, 0, 0, 3091,
	3092, 0, 0, 3093, 1214, 3094, 1220, 0, 0, 0,
	0, 0, 3095, 0, 3096, 0, 0, 0, 3097, 0,
	3098, 0, 0, 3099, 0, 3100, 0, 3101, 0, 3102,
	0, 3103, 0, 3104, 0, 3105, 0, 3106, 0, 3107,
	0, 3108, 0, 3109, 0, 3110, 0, 3111, 0, 3112,
	0, 3113, 0, 3114, 0, 3115, 0, 3116, 0, 0,
	0, 3117, 0, 3118, 0, 3119, 0, 1447, 3120, 0,
	3121, 0, 3122, 0, 2284, 3124, 0, 0, 3126, 0,
	0, 3128, 3129, 3130, 3131, 0, 0, 0, 0, 3132,
	2284, 2284, 2284, 2284, 2284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3142, 0, 0, 0, 0,
	0, 0, 0, 3155, 1519, 0, 3159, 0, 0, 0,
	0, 0, 0, 0, 0, 3162, 3163, 3164, 3165, 3166,
	3167, 0, 0, 0, 3168, 3169, 0, 3170, 0, 3171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1065, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 730, 730, 0, 0,
	0, 0, 0, 0, 3204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 86, 44,
	45, 88, 0, 0, 0, 0, 0, 0, 0, 3234,
	0, 0, 0, 0, 0, 0, 730, 92, 0, 195,
	0, 48, 76, 77, 0, 74, 78, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 75, 195, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	3297, 0, 0, 0, 0, 730, 0, 730, 0, 0,
	0, 95, 0, 0, 0, 730, 0, 0, 1519, 730,
	0, 0, 730, 730, 730, 730, 0, 730, 0, 730,
	730, 0, 730, 730, 730, 730, 730, 730, 0, 0,
	0, 0, 0, 0, 0, 1519, 730, 730, 1519, 730,
	1519, 195, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 83, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3390, 730, 0, 0,
	730, 0, 195, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 3405, 0, 195, 0, 0, 0,
	0, 0, 0, 1778, 0, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 730, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 51, 54, 57, 56, 59,
	0, 73, 0, 0, 82, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 61, 91,
	90, 0, 0, 71, 72, 58, 0, 0, 0, 0,
	0, 80, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1934, 0, 0, 0, 0,
	0, 0, 0, 0, 63, 64, 0, 65, 66, 67,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 0, 0, 0, 2006, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2017, 129, 0, 151, 0, 60, 0,
	2021, 0, 0, 0, 730, 730, 0, 0, 0, 0,
	172, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 730, 0,
	0, 0, 0, 3603, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	150, 0, 0, 0, 0, 0, 3627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 170, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 89, 0,
	0, 0, 0, 0, 0, 1875, 1876, 161, 160, 189,
	0, 0, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 3647, 0, 3648, 0, 3649, 0,
	3650, 0, 0, 0, 0, 0, 0, 0, 3653, 3654,
	0, 0, 0, 0, 0, 0, 0, 952, 3659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 3660, 0, 3661, 0, 3662, 0, 3663, 0,
	3664, 0, 3665, 0, 3666, 0, 3667, 0, 3668, 0,
	3669, 129, 3670, 151, 3671, 0, 3672, 0, 3673, 0,
	3674, 0, 3675, 0, 0, 3676, 0, 172, 0, 3677,
	0, 3678, 0, 0, 0, 0, 0, 3680, 94, 708,
	155, 1877, 158, 0, 1874, 729, 156, 157, 0, 0,
	0, 2070, 0, 173, 0, 0, 0, 0, 0, 3697,
	0, 162, 179, 0, 0, 0, 0, 150, 3702, 0,
	3703, 3704, 0, 3705, 0, 3706, 0, 0, 0, 0,
	3707, 2331, 0, 0, 0, 0, 0, 169, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 729, 0, 729,
	0, 0, 0, 0, 0, 0, 0, 3736, 0, 0,
	0, 0, 138, 139, 161, 160, 189, 0, 0, 0,
	3745, 0, 0, 3747, 0, 0, 195, 0, 0, 0,
	0, 730, 0, 0, 0, 3751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 70, 0, 0, 0, 0,
	0, 3887, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 730, 0, 0, 2331, 195, 164, 195, 0,
	195, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 136, 158,
	143, 135, 0, 156, 157, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 145, 140, 141, 142, 146,
	0, 0, 730, 0, 0, 0, 137, 0, 0, 730,
	730, 730, 0, 0, 0, 148, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 730,
	3997, 0, 0, 0, 0, 730, 730, 0, 0, 730,
	0, 730, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 909, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 730, 0, 0,
	0, 730, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2397, 0, 164, 0, 0, 0, 0, 0,
	2401, 0, 2404, 0, 0, 2070, 0, 0, 0, 0,
	0, 0, 0, 0, 728, 0, 0, 0, 0, 195,
	0, 0, 152, 0, 0, 153, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 195, 0, 0,
	195, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 165, 0, 0, 195,
	0, 0, 0, 177, 0, 0, 1090, 0, 1097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 730, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4039, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 171, 168,
	174, 175, 176, 178, 180, 181, 182, 183, 0, 0,
	0, 0, 0, 184, 186, 187, 188, 0, 0, 0,
	1519, 0, 2331, 4053, 0, 0, 4054, 0, 4055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 0, 153, 2070, 0, 0, 0, 0, 0, 0,
	2562, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2581, 2582, 0, 0, 2586, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 2591, 0, 0, 0,
	177, 0, 0, 2594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4139, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4155,
	0, 4156, 0, 4157, 0, 0, 729, 1433, 729, 729,
	0, 0, 0, 0, 166, 171, 168, 174, 175, 176,
	178, 180, 181, 182, 183, 0, 0, 0, 0, 729,
	184, 186, 187, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4206, 0, 4207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 0, 730, 730, 0, 0, 0, 730, 0,
	0, 1518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 195, 195,
	195, 195, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 195, 0, 0, 0, 0,
	0, 0, 0, 729, 729, 0, 0, 0, 0, 0,
	0, 2901, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 1278, 0, 1278, 1278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 729, 730, 0, 0, 0, 1446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	0, 0, 0, 0, 0, 2950, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 729, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 729, 0, 0, 1518, 729, 0, 0, 729,
	729, 729, 729, 0, 729, 0, 729, 729, 0, 729,
	729, 729, 729, 729, 729, 0, 0, 0, 0, 0,
	0, 0, 1518, 729, 729, 1518, 729, 1518, 0, 729,
	0, 2999, 3000, 3001, 3002, 3003, 3004, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2070, 3014,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 729, 0, 0, 729, 0, 0,
	0, 0, 3022, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 1519, 0,
	0, 730, 730, 1519, 195, 195, 195, 195, 195, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 195, 0, 195, 0, 0, 195, 195, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1718, 1719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 730, 0, 0, 1519,
	0, 0, 1772, 0, 730, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 1848, 0,
	0, 729, 729, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 195, 0, 729, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1090, 0, 1883, 0, 0, 0, 0, 0, 0,
	0, 1892, 0, 0, 0, 1894, 0, 0, 1897, 1898,
	1900, 1900, 0, 1900, 0, 1900, 1900, 0, 1909, 1900,
	1900, 1900, 1900, 1900, 0, 0, 0, 0, 0, 0,
	0, 0, 1929, 1930, 729, 1090, 0, 0, 1935, 0,
	0, 0, 0, 0, 1518, 0, 0, 0, 0, 0,
	0, 0, 0, 2134, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 0, 0, 0, 0, 0, 0, 0,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 2002, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3287, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3325, 0, 0, 0, 0, 0, 0,
	1278, 0, 0, 0, 0, 0, 0, 3339, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3357, 0, 0,
	3360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 729, 195,
	195, 195, 0, 0, 0, 0, 0, 0, 0, 730,
	730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	1278, 1278, 729, 0, 0, 0, 0, 0, 730, 730,
	730, 730, 0, 0, 2058, 0, 0, 0, 0, 0,
	0, 0, 729, 0, 0, 3520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2120, 0, 0, 0, 0, 0, 729,
	0, 0, 0, 0, 0, 0, 729, 729, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 729, 0, 0, 0,
	3581, 0, 729, 729, 0, 0, 729, 0, 729, 0,
	0, 0, 0, 0, 729, 0, 0, 0, 0, 0,
	3596, 0, 0, 3597, 3598, 3599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	0, 0, 0, 0, 729, 0, 0, 0, 729, 729,
	0, 0, 0, 0, 0, 730, 0, 730, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1519, 0,
	0, 0, 195, 0, 0, 730, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 730, 0, 729, 0, 0, 0, 2368, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	0, 1278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 729,
	0, 1090, 0, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 730, 0, 730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 0,
	0, 0, 0, 0, 0, 2494, 2495, 2496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1090, 0, 0, 0, 0,
	0, 1097, 1892, 0, 0, 1892, 0, 1892, 0, 0,
	0, 0, 0, 2526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1090, 0,
	0, 0, 0, 2120, 0, 0, 0, 2120, 2120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 729, 0, 0, 0, 0,
	0, 0, 2601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	2914, 0, 0, 0, 0, 0, 0, 1519, 730, 0,
	730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 2331, 0, 1278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 729, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 730, 0, 729,
	0, 0, 0, 0, 0, 0, 729, 0, 0, 0,
	729, 729, 0, 0, 0, 729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4037, 0, 0, 0,
	95, 1518, 729, 1018, 0, 0, 0, 730, 958, 1019,
	971, 972, 973, 959, 0, 0, 960, 961, 0, 962,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 967, 195, 974, 975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	730, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3333, 3334, 0, 0, 0,
	0, 729, 0, 0, 0, 0, 0, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 0,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3335, 0, 0, 0, 2864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 729, 0, 3336, 3337,
	0, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2946, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	0, 0, 0, 0, 0, 0, 0, 0, 2381, 0,
	0, 0, 0, 0, 0, 2971, 0, 729, 0, 1892,
	1892, 0, 0, 0, 2976, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 1518, 0, 0, 729, 729,
	1518, 2987, 923, 0, 0, 0, 0, 0, 927, 0,
	0, 0, 924, 925, 0, 0, 0, 926, 928, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 729, 0, 0, 1518, 0, 0, 0,
	2120, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2120, 0, 0, 3364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3144, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 0, 0, 1278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1900, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1278, 0, 0, 0, 0, 0, 0, 3216, 1900, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 729, 729, 0, 0,
	0, 0, 1090, 0, 0, 0, 0, 0, 0, 0,
	2381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 729, 729, 729, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 729, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 0,
	0, 0, 729, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 729, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 2381, 2381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3635, 3636, 3637, 3638, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 729, 0, 0, 0,
	0, 0, 0, 729, 0, 729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3713, 0, 3713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3741, 0, 3743, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3910, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 729, 0, 729, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 729, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3713, 0, 0, 0, 0,
	0, 0, 3713, 0, 3713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 2381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 729, 0, 729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4057, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4065, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2381, 0, 4073, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1278, 1278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4065, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 1848, 0, 4123, 1416,
	1400, 528, 0, 1342, 1419, 1310, 1329, 1429, 1332, 1335,
	1379, 1288, 1357, 416, 1326, 1314, 1283, 1321, 1284, 1312,
	1344, 270, 1309, 1402, 1361, 1418, 366, 267, 1290, 1281,
	204, 505, 1315, 430, 1331, 203, 1381, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 1425, 370, 1367, 0, 497, 401, 0, 0, 0,
	1406, 1405, 1336, 1346, 1408, 1355, 1393, 1341, 1380, 1298,
	1366, 1420, 1327, 1376, 1421, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 4097, 507, 954, 0,
	0, 0, 0, 4098, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 1323, 1373, 607,
	1415, 1324, 1375, 265, 321, 272, 264, 580, 1426, 1407,
	1287, 1354, 1414, 1349, 0, 0, 229, 1417, 1348, 0,
	1378, 0, 1432, 1282, 1369, 0, 1285, 1289, 1428, 1412,
	1318, 275, 0, 0, 0, 0, 0, 0, 0, 1345,
	1356, 1390, 1394, 1339, 0, 0, 0, 0, 0, 0,
	0, 0, 1316, 0, 1365, 0, 0, 0, 1294, 1286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1343, 0, 0, 0, 0, 1297, 0, 1317,
	1391, 0, 1280, 297, 1291, 402, 257, 0, 453, 1398,
	1411, 1340, 625, 1413, 1338, 1337, 1385, 1295, 1404, 1330,
	365, 1293, 330, 197, 225, 0, 1328, 412, 461, 473,
	1403, 1313, 1322, 253, 1320, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 1364, 1383, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 1292, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 1308, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 1399, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 1388, 1431, 425,
	472, 240, 604, 496, 199, 1302, 1307, 1300, 0, 254,
	255, 1370, 575, 1303, 1301, 1359, 1360, 1304, 1422, 1423,
	1424, 1409, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	1392, 1296, 0, 1305, 1306, 398, 1401, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 1363, 196, 221, 368,
	1427, 454, 288, 646, 615, 484, 610, 206, 223, 1299,
	262, 1311, 1319, 0, 1325, 1333, 1334, 1347, 1350, 1351,
	1352, 1353, 1371, 1372, 1374, 1382, 1384, 1387, 1389, 1396,
	1410, 1430, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	1362, 1368, 381, 281, 305, 320, 1377, 614, 502, 227,
	466, 290, 251, 1395, 1397, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 1358,
	1386, 376, 576, 577, 316, 396, 0, 0, 0, 0,
	0, 0, 1416, 1400, 528, 0, 1342, 1419, 1310, 1329,
	1429, 1332, 1335, 1379, 1288, 1357, 416, 1326, 1314, 1283,
	1321, 1284, 1312, 1344, 270, 1309, 1402, 1361, 1418, 366,
	267, 1290, 1281, 204, 505, 1315, 430, 1331, 203, 1381,
	487, 252, 377, 374, 583, 282, 273, 269, 250, 317,
	385, 428, 518, 422, 1425, 370, 1367, 0, 497, 401,
	0, 0, 0, 1406, 1405, 1336, 1346, 1408, 1355, 1393,
	1341, 1380, 1298, 1366, 1420, 1327, 1376, 1421, 323, 248,
	325, 202, 413, 498, 286, 0, 0, 0, 0, 0,
	507, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	1323, 1373, 607, 1415, 1324, 1375, 265, 321, 272, 264,
	580, 1426, 1407, 1287, 1354, 1414, 1349, 0, 0, 229,
	1417, 1348, 0, 1378, 0, 1432, 1282, 1369, 0, 1285,
	1289, 1428, 1412, 1318, 275, 0, 0, 0, 0, 0,
	0, 0, 1345, 1356, 1390, 1394, 1339, 0, 0, 0,
	0, 0, 0, 3241, 0, 1316, 0, 1365, 0, 0,
	0, 1294, 1286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1343, 0, 0, 0, 0,
	1297, 0, 1317, 1391, 0, 1280, 297, 1291, 402, 257,
	0, 453, 1398, 1411, 1340, 625, 1413, 1338, 1337, 1385,
	1295, 1404, 1330, 365, 1293, 330, 197, 225, 0, 1328,
	412, 461, 473, 1403, 1313, 1322, 253, 1320, 471, 426,
	602, 233, 284, 458, 432, 469, 440, 287, 1364, 1383,
	470, 372, 585, 450, 599, 626, 627, 263, 406, 612,
	522, 620, 644, 226, 260, 420, 506, 605, 494, 397,
	581, 582, 329, 493, 295, 201, 369, 632, 224, 479,
	371, 242, 231, 587, 609, 299, 289, 456, 639, 213,
	517, 597, 239, 483, 0, 0, 647, 247, 504, 215,
	594, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 589, 590, 256, 648, 228, 619,
	220, 1292, 618, 408, 584, 595, 394, 383, 219, 593,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 606, 0, 208, 0,
	499, 608, 649, 452, 212, 234, 235, 237, 1308, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 1399, 579, 600, 613, 624, 630, 631, 633, 634,
	635, 636, 637, 640, 638, 407, 311, 495, 333, 373,
	1388, 1431, 425, 472, 240, 604, 496, 199, 1302, 1307,
	1300, 0, 254, 255, 1370, 575, 1303, 1301, 1359, 1360,
	1304, 1422, 1423, 1424, 1409, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 645, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 1392, 1296, 0, 1305, 1306, 398, 1401,
	591, 592, 668, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 1363,
	196, 221, 368, 1427, 454, 288, 646, 615, 484, 610,
	206, 223, 1299, 262, 1311, 1319, 0, 1325, 1333, 1334,
	1347, 1350, 1351, 1352, 1353, 1371, 1372, 1374, 1382, 1384,
	1387, 1389, 1396, 1410, 1430, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 628, 480, 301, 302, 444,
	445, 314, 315, 642, 643, 300, 598, 629, 596, 641,
	623, 438, 378, 1362, 1368, 381, 281, 305, 320, 1377,
	614, 502, 227, 466, 290, 251, 1395, 1397, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 1358, 1386, 376, 576, 577, 316, 396, 0,
	0, 0, 0, 0, 0, 1416, 1400, 528, 0, 1342,
	1419, 1310, 1329, 1429, 1332, 1335, 1379, 1288, 1357, 416,
	1326, 1314, 1283, 1321, 1284, 1312, 1344, 270, 1309, 1402,
	1361, 1418, 366, 267, 1290, 1281, 204, 505, 1315, 430,
	1331, 203, 1381, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 1425, 370, 1367,
	0, 497, 401, 0, 0, 0, 1406, 1405, 1336, 1346,
	1408, 1355, 1393, 1341, 1380, 1298, 1366, 1420, 1327, 1376,
	1421, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 507, 719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 1323, 1373, 607, 1415, 1324, 1375, 265,
	321, 272, 264, 580, 1426, 1407, 1287, 1354, 1414, 1349,
	0, 0, 229, 1417, 1348, 0, 1378, 0, 1432, 1282,
	1369, 0, 1285, 1289, 1428, 1412, 1318, 275, 0, 0,
	0, 0, 0, 0, 0, 1345, 1356, 1390, 1394, 1339,
	0, 0, 0, 0, 0, 0, 3202, 0, 1316, 0,
	1365, 0, 0, 0, 1294, 1286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1343, 0,
	0, 0, 0, 1297, 0, 1317, 1391, 0, 1280, 297,
	1291, 402, 257, 0, 453, 1398, 1411, 1340, 625, 1413,
	1338, 1337, 1385, 1295, 1404, 1330, 365, 1293, 330, 197,
	225, 0, 1328, 412, 461, 473, 1403, 1313, 1322, 253,
	1320, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 1364, 1383, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 1292, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 1308, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 1399, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 1388, 1431, 425, 472, 240, 604, 496,
	199, 1302, 1307, 1300, 0, 254, 255, 1370, 575, 1303,
	1301, 1359, 1360, 1304, 1422, 1423, 1424, 1409, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 1392, 1296, 0, 1305,
	1306, 398, 1401, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 1363, 196, 221, 368, 1427, 454, 288, 646,
	615, 484, 610, 206, 223, 1299, 262, 1311, 1319, 0,
	1325, 1333, 1334, 1347, 1350, 1351, 1352, 1353, 1371, 1372,
	1374, 1382, 1384, 1387, 1389, 1396, 1410, 1430, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 1362, 1368, 381, 281,
	305, 320, 1377, 614, 502, 227, 466, 290, 251, 1395,
	1397, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 1358, 1386, 376, 576, 577,
	316, 396, 0, 0, 0, 0, 0, 0, 1416, 1400,
	528, 0, 1342, 1419, 1310, 1329, 1429, 1332, 1335, 1379,
	1288, 1357, 416, 1326, 1314, 1283, 1321, 1284, 1312, 1344,
	270, 1309, 1402, 1361, 1418, 366, 267, 1290, 1281, 204,
	505, 1315, 430, 1331, 203, 1381, 487, 252, 377, 374,
	583, 282, 273, 269, 250, 317, 385, 428, 518, 422,
	1425, 370, 1367, 0, 497, 401, 0, 0, 0, 1406,
	1405, 1336, 1346, 1408, 1355, 1393, 1341, 1380, 1298, 1366,
	1420, 1327, 1376, 1421, 323, 248, 325, 202, 413, 498,
	286, 0, 0, 0, 0, 0, 507, 954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 1323, 1373, 607, 1415,
	1324, 1375, 265, 321, 272, 264, 580, 1426, 1407, 1287,
	1354, 1414, 1349, 0, 0, 229, 1417, 1348, 0, 1378,
	0, 1432, 1282, 1369, 0, 1285, 1289, 1428, 1412, 1318,
	275, 0, 0, 0, 0, 0, 0, 0, 1345, 1356,
	1390, 1394, 1339, 0, 0, 0, 0, 0, 0, 2399,
	0, 1316, 0, 1365, 0, 0, 0, 1294, 1286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1343, 0, 0, 0, 0, 1297, 0, 1317, 1391,
	0, 1280, 297, 1291, 402, 257, 0, 453, 1398, 1411,
	1340, 625, 1413, 1338, 1337, 1385, 1295, 1404, 1330, 365,
	1293, 330, 197, 225, 0, 1328, 412, 461, 473, 1403,
	1313, 1322, 253, 1320, 471, 426, 602, 233, 284, 458,
	432, 469, 440, 287, 1364, 1383, 470, 372, 585, 450,
	599, 626, 627, 263, 406, 612, 522, 620, 644, 226,
	260, 420, 506, 605, 494, 397, 581, 582, 329, 493,
	295, 201, 369, 632, 224, 479, 371, 242, 231, 587,
	609, 299, 289, 456, 639, 213, 517, 597, 239, 483,
	0, 0, 647, 247, 504, 215, 594, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	589, 590, 256, 648, 228, 619, 220, 1292, 618, 408,
	584, 595, 394, 383, 219, 593, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 606, 0, 208, 0, 499, 608, 649, 452,
	212, 234, 235, 237, 1308, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 1399, 579, 600,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 407, 311, 495, 333, 373, 1388, 1431, 425, 472,
	240, 604, 496, 199, 1302, 1307, 1300, 0, 254, 255,
	1370, 575, 1303, 1301, 1359, 1360, 1304, 1422, 1423, 1424,
	1409, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 645,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 1392,
	1296, 0, 1305, 1306, 398, 1401, 591, 592, 668, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 1363, 196, 221, 368, 1427,
	454, 288, 646, 615, 484, 610, 206, 223, 1299, 262,
	1311, 1319, 0, 1325, 1333, 1334, 1347, 1350, 1351, 1352,
	1353, 1371, 1372, 1374, 1382, 1384, 1387, 1389, 1396, 1410,
	1430, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 628, 480, 301, 302, 444, 445, 314, 315, 642,
	643, 300, 598, 629, 596, 641, 623, 438, 378, 1362,
	1368, 381, 281, 305, 320, 1377, 614, 502, 227, 466,
	290, 251, 1395, 1397, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 1358, 1386,
	376, 576, 577, 316, 396, 0, 0, 0, 0, 0,
	0, 1416, 1400, 528, 0, 1342, 1419, 1310, 1329, 1429,
	1332, 1335, 1379, 1288, 1357, 416, 1326, 1314, 1283, 1321,
	1284, 1312, 1344, 270, 1309, 1402, 1361, 1418, 366, 267,
	1290, 1281, 204, 505, 1315, 430, 1331, 203, 1381, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 1425, 370, 1367, 0, 497, 401, 0,
	0, 0, 1406, 1405, 1336, 1346, 1408, 1355, 1393, 1341,
	1380, 1298, 1366, 1420, 1327, 1376, 1421, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 0, 507,
	719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 1323,
	1373, 607, 1415, 1324, 1375, 265, 321, 272, 264, 580,
	1426, 1407, 1287, 1354, 1414, 1349, 0, 0, 229, 1417,
	1348, 0, 1378, 0, 1432, 1282, 1369, 0, 1285, 1289,
	1428, 1412, 1318, 275, 0, 0, 0, 0, 0, 0,
	0, 1345, 1356, 1390, 1394, 1339, 0, 0, 0, 0,
	0, 0, 0, 0, 1316, 0, 1365, 0, 0, 0,
	1294, 1286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1343, 0, 0, 0, 0, 1297,
	0, 1317, 1391, 0, 1280, 297, 1291, 402, 257, 0,
	453, 1398, 1411, 1340, 625, 1413, 1338, 1337, 1385, 1295,
	1404, 1330, 365, 1293, 330, 197, 225, 0, 1328, 412,
	461, 473, 1403, 1313, 1322, 253, 1320, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 1364, 1383, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 648, 228, 619, 220,
	1292, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 1308, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	1399, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 1388,
	1431, 425, 472, 240, 604, 496, 199, 1302, 1307, 1300,
	0, 254, 255, 1370, 575, 1303, 1301, 1359, 1360, 1304,
	1422, 1423, 1424, 1409, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 1392, 1296, 0, 1305, 1306, 398, 1401, 591,
	592, 668, 384, 486, 601, 335, 349, 352, 341, 361,
	0, 362, 337, 338, 343, 346, 347, 348, 353, 354,
	358, 364, 249, 210, 390, 399, 578, 312, 216, 217,
	218, 524, 525, 526, 527, 616, 617, 621, 205, 462,
	463, 464, 465, 292, 611, 309, 468, 467, 331, 332,
	379, 449, 540, 542, 553, 557, 559, 561, 567, 570,
	541, 543, 554, 558, 560, 562, 568, 571, 530, 532,
	534, 536, 549, 548, 545, 573, 574, 551, 556, 535,
	547, 552, 565, 572, 569, 529, 533, 537, 546, 564,
	563, 544, 555, 566, 550, 538, 531, 539, 1363, 196,
	221, 368, 1427, 454, 288, 646, 615, 484, 610, 206,
	223, 1299, 262, 1311, 1319, 0, 1325, 1333, 1334, 1347,
	1350, 1351, 1352, 1353, 1371, 1372, 1374, 1382, 1384, 1387,
	1389, 1396, 1410, 1430, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 301, 302, 444, 445,
	314, 315, 642, 643, 300, 598, 629, 596, 641, 623,
	438, 378, 1362, 1368, 381, 281, 305, 320, 1377, 614,
	502, 227, 466, 290, 251, 1395, 1397, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 1358, 1386, 376, 576, 577, 316, 396, 0, 0,
	0, 0, 0, 0, 1416, 1400, 528, 0, 1342, 1419,
	1310, 1329, 1429, 1332, 1335, 1379, 1288, 1357, 416, 1326,
	1314, 1283, 1321, 1284, 1312, 1344, 270, 1309, 1402, 1361,
	1418, 366, 267, 1290, 1281, 204, 505, 1315, 430, 1331,
	203, 1381, 487, 252, 377, 374, 583, 282, 273, 269,
	250, 317, 385, 428, 518, 422, 1425, 370, 1367, 0,
	497, 401, 0, 0, 0, 1406, 1405, 1336, 1346, 1408,
	1355, 1393, 1341, 1380, 1298, 1366, 1420, 1327, 1376, 1421,
	323, 248, 325, 202, 413, 498, 286, 0, 0, 0,
	0, 0, 507, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	351, 360, 359, 339, 340, 342, 344, 350, 357, 363,
	336, 345, 1323, 1373, 607, 1415, 1324, 1375, 265, 321,
	272, 264, 580, 1426, 1407, 1287, 1354, 1414, 1349, 0,
	0, 229, 1417, 1348, 0, 1378, 0, 1432, 1282, 1369,
	0, 1285, 1289, 1428, 1412, 1318, 275, 0, 0, 0,
	0, 0, 0, 0, 1345, 1356, 1390, 1394, 1339, 0,
	0, 0, 0, 0, 0, 0, 0, 1316, 0, 1365,
	0, 0, 0, 1294, 1286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1343, 0, 0,
	0, 0, 1297, 0, 1317, 1391, 0, 1280, 297, 1291,
	402, 257, 0, 453, 1398, 1411, 1340, 625, 1413, 1338,
	1337, 1385, 1295, 1404, 1330, 365, 1293, 330, 197, 225,
	0, 1328, 412, 461, 473, 1403, 1313, 1322, 253, 1320,
	471, 426, 602, 233, 284, 458, 432, 469, 440, 287,
	1364, 1383, 470, 372, 585, 450, 599, 626, 627, 263,
	406, 612, 522, 620, 644, 226, 260, 420, 506, 605,
	494, 397, 581, 582, 329, 493, 295, 201, 369, 632,
	224, 479, 371, 242, 231, 587, 609, 299, 289, 456,
	639, 213, 517, 597, 239, 483, 0, 0, 647, 247,
	504, 215, 594, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 589, 590, 256, 648,
	228, 619, 220, 1292, 618, 408, 584, 595, 394, 383,
	219, 593, 392, 382, 334, 355, 356, 280, 307, 447,
	375, 448, 306, 308, 404, 403, 405, 207, 606, 0,
	208, 0, 499, 608, 649, 452, 212, 234, 235, 237,
	1308, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 1399, 579, 600, 613, 624, 630, 631,
	633, 634, 635, 636, 637, 640, 638, 407, 311, 495,
	333, 373, 1388, 1431, 425, 472, 240, 604, 496, 199,
	1302, 1307, 1300, 0, 254, 255, 1370, 575, 1303, 1301,
	1359, 1360, 1304, 1422, 1423, 1424, 1409, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 645, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 1392, 1296, 0, 1305, 1306,
	398, 1401, 591, 592, 668, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 1363, 196, 221, 368, 1427, 454, 288, 646, 615,
	484, 610, 206, 223, 1299, 262, 1311, 1319, 0, 1325,
	1333, 1334, 1347, 1350, 1351, 1352, 1353, 1371, 1372, 1374,
	1382, 1384, 1387, 1389, 1396, 1410, 1430, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 628, 480, 301,
	302, 444, 445, 314, 315, 642, 643, 300, 598, 629,
	596, 641, 623, 438, 378, 1362, 1368, 381, 281, 305,
	320, 1377, 614, 502, 227, 466, 290, 251, 1395, 1397,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 1358, 1386, 376, 576, 577, 316,
	396, 0, 0, 0, 0, 0, 0, 1416, 1400, 528,
	0, 1342, 1419, 1310, 1329, 1429, 1332, 1335, 1379, 1288,
	1357, 416, 1326, 1314, 1283, 1321, 1284, 1312, 1344, 270,
	1309, 1402, 1361, 1418, 366, 267, 1290, 1281, 204, 505,
	1315, 430, 1331, 203, 1381, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 1425,
	370, 1367, 0, 497, 401, 0, 0, 0, 1406, 1405,
	1336, 1346, 1408, 1355, 1393, 1341, 1380, 1298, 1366, 1420,
	1327, 1376, 1421, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 0, 507, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 1323, 1373, 607, 1415, 1324,
	1375, 265, 321, 272, 264, 580, 1426, 1407, 1287, 1354,
	1414, 1349, 0, 0, 229, 1417, 1348, 0, 1378, 0,
	1432, 1282, 1369, 0, 1285, 1289, 1428, 1412, 1318, 275,
	0, 0, 0, 0, 0, 0, 0, 1345, 1356, 1390,
	1394, 1339, 0, 0, 0, 0, 0, 0, 0, 0,
	1316, 0, 1365, 0, 0, 0, 1294, 1286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1343, 0, 0, 0, 0, 1297, 0, 1317, 1391, 0,
	1280, 297, 1291, 402, 257, 0, 453, 1398, 1411, 1340,
	625, 1413, 1338, 1337, 1385, 1295, 1404, 1330, 365, 1293,
	330, 197, 225, 0, 1328, 412, 461, 473, 1403, 1313,
	1322, 253, 1320, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 1364, 1383, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 1292, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 1308, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 1399, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 1388, 1431, 425, 472, 240,
	604, 496, 199, 1302, 1307, 1300, 0, 254, 255, 1370,
	575, 1303, 1301, 1359, 1360, 1304, 1422, 1423, 1424, 1409,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 1392, 1296,
	0, 1305, 1306, 398, 1401, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 1363, 196, 221, 368, 1427, 454,
	288, 646, 615, 484, 610, 206, 223, 1299, 262, 1311,
	1319, 0, 1325, 1333, 1334, 1347, 1350, 1351, 1352, 1353,
	1371, 1372, 1374, 1382, 1384, 1387, 1389, 1396, 1410, 1430,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 1362, 1368,
	381, 281, 305, 320, 1377, 614, 502, 227, 466, 290,
	251, 1395, 1397, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 1358, 1386, 376,
	576, 577, 316, 396, 0, 0, 0, 0, 0, 0,
	1416, 1400, 528, 0, 1342, 1419, 1310, 1329, 1429, 1332,
	1335, 1379, 1288, 1357, 416, 1326, 1314, 1283, 1321, 1284,
	1312, 1344, 270, 1309, 1402, 1361, 1418, 366, 267, 1290,
	1281, 204, 505, 1315, 430, 1331, 203, 1381, 487, 252,
	377, 374, 583, 282, 273, 269, 250, 317, 385, 428,
	518, 422, 1425, 370, 1367, 0, 497, 401, 0, 0,
	0, 1406, 1405, 1336, 1346, 1408, 1355, 1393, 1341, 1380,
	1298, 1366, 1420, 1327, 1376, 1421, 323, 248, 325, 202,
	413, 498, 286, 0, 0, 0, 0, 0, 507, 954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 1323, 1373,
	607, 1415, 1324, 1375, 265, 321, 272, 264, 580, 1426,
	1407, 1287, 1354, 1414, 1349, 0, 0, 229, 1417, 1348,
	0, 1378, 0, 1432, 1282, 1369, 0, 1285, 1289, 1428,
	1412, 1318, 275, 0, 0, 0, 0, 0, 0, 0,
	1345, 1356, 1390, 1394, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 1316, 0, 1365, 0, 0, 0, 1294,
	1286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1343, 0, 0, 0, 0, 1297, 0,
	1317, 1391, 0, 1280, 297, 1291, 402, 257, 0, 453,
	1398, 1411, 1340, 625, 1413, 1338, 1337, 1385, 1295, 1404,
	1330, 365, 1293, 330, 197, 225, 0, 1328, 412, 461,
	473, 1403, 1313, 1322, 253, 1320, 471, 426, 602, 233,
	284, 458, 432, 469, 440, 287, 1364, 1383, 470, 372,
	585, 450, 599, 626, 627, 263, 406, 612, 522, 620,
	644, 226, 260, 420, 506, 605, 494, 397, 581, 582,
	329, 493, 295, 201, 369, 632, 224, 479, 371, 242,
	231, 587, 609, 299, 289, 456, 639, 213, 517, 597,
	239, 483, 0, 0, 647, 247, 504, 215, 594, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 589, 590, 256, 648, 228, 619, 220, 1292,
	618, 408, 584, 595, 394, 383, 219, 593, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 606, 0, 208, 0, 499, 608,
	649, 452, 212, 234, 235, 237, 1308, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 1399,
	579, 600, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 407, 311, 495, 333, 373, 1388, 1431,
	425, 472, 240, 604, 496, 199, 1302, 1307, 1300, 0,
	254, 255, 1370, 575, 1303, 1301, 1359, 1360, 1304, 1422,
	1423, 1424, 1409, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 645, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 1392, 1296, 0, 1305, 1306, 398, 1401, 591, 592,
	668, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 1363, 196, 221,
	368, 1427, 454, 288, 646, 615, 484, 610, 206, 223,
	1299, 262, 1311, 1319, 0, 1325, 1333, 1334, 1347, 1350,
	1351, 1352, 1353, 1371, 1372, 1374, 1382, 1384, 1387, 1389,
	1396, 1410, 1430, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 628, 480, 301, 302, 444, 445, 314,
	315, 642, 643, 300, 598, 629, 596, 641, 623, 438,
	378, 1362, 1368, 381, 281, 305, 320, 1377, 614, 502,
	227, 466, 290, 251, 1395, 1397, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	1358, 1386, 376, 576, 577, 316, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 0, 772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 759, 0, 0, 0, 270, 764, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 771, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 766,
	767, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 95, 0, 0,
	1018, 507, 954, 743, 920, 958, 1019, 971, 972, 973,
	959, 0, 238, 960, 961, 245, 962, 0, 919, 802,
	804, 803, 869, 870, 871, 872, 873, 874, 875, 805,
	806, 800, 967, 607, 974, 975, 0, 265, 321, 272,
	264, 580, 0, 0, 2221, 2222, 2223, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 739, 756,
	0, 770, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 753, 754, 0, 0, 0, 0, 914, 0,
	755, 0, 0, 763, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 913, 0, 0, 625, 0, 0, 911,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 964, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 965, 966, 256, 648, 810,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 818, 819, 280, 307, 895, 894,
	893, 306, 308, 891, 892, 890, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 901, 923,
	912, 776, 777, 902, 903, 927, 904, 779, 780, 924,
	925, 773, 774, 778, 926, 928, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 915, 762, 761, 0, 768, 769,
	0, 798, 799, 801, 807, 808, 809, 820, 867, 868,
	876, 878, 879, 877, 880, 881, 882, 885, 886, 887,
	888, 883, 884, 889, 781, 785, 782, 783, 784, 796,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 795,
	797, 938, 939, 940, 941, 942, 943, 813, 817, 816,
	814, 815, 811, 812, 839, 838, 840, 841, 842, 843,
	844, 845, 847, 846, 848, 849, 850, 851, 852, 853,
	821, 822, 825, 826, 824, 823, 827, 836, 837, 828,
	829, 830, 831, 832, 833, 835, 834, 854, 855, 856,
	857, 858, 860, 859, 863, 864, 862, 861, 866, 865,
	760, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 929, 262, 930, 0, 0, 934, 0,
	0, 0, 936, 935, 0, 937, 899, 898, 0, 0,
	931, 932, 0, 933, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 944, 945,
	946, 947, 948, 949, 950, 951, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 969, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 0, 528, 0, 772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 759, 0,
	0, 0, 270, 764, 0, 0, 0, 366, 267, 0,
	0, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 583, 282, 273, 269, 250, 317, 385, 428,
	518, 422, 771, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 766, 767, 0, 0,
	0, 0, 0, 0, 2428, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 95, 0, 0, 1018, 507, 954,
	743, 920, 958, 1019, 971, 972, 973, 959, 0, 238,
	960, 961, 245, 962, 0, 919, 802, 804, 803, 869,
	870, 871, 872, 873, 874, 875, 805, 806, 800, 967,
	607, 974, 975, 2429, 265, 321, 272, 264, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 739, 756, 0, 770, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 753,
	754, 0, 0, 0, 0, 914, 0, 755, 0, 0,
	763, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	913, 0, 0, 625, 0, 0, 911, 0, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 964, 0, 471, 426, 602, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	585, 450, 599, 626, 627, 263, 406, 612, 522, 620,
	644, 226, 260, 420, 506, 605, 494, 397, 581, 582,
	329, 493, 295, 201, 369, 632, 224, 479, 371, 242,
	231, 587, 609, 299, 289, 456, 639, 213, 517, 597,
	239, 483, 0, 0, 647, 247, 504, 215, 594, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 965, 966, 256, 648, 810, 619, 220, 0,
	618, 408, 584, 595, 394, 383, 219, 593, 392, 382,
	334, 818, 819, 280, 307, 895, 894, 893, 306, 308,
	891, 892, 890, 207, 606, 0, 208, 0, 499, 608,
	649, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 901, 923, 912, 776, 777,
	902, 903, 927, 904, 779, 780, 924, 925, 773, 774,
	778, 926, 928, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 645, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 915, 762, 761, 0, 768, 769, 0, 798, 799,
	801, 807, 808, 809, 820, 867, 868, 876, 878, 879,
	877, 880, 881, 882, 885, 886, 887, 888, 883, 884,
	889, 781, 785, 782, 783, 784, 796, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 797, 938, 939,
	940, 941, 942, 943, 813, 817, 816, 814, 815, 811,
	812, 839, 838, 840, 841, 842, 843, 844, 845, 847,
	846, 848, 849, 850, 851, 852, 853, 821, 822, 825,
	826, 824, 823, 827, 836, 837, 828, 829, 830, 831,
	832, 833, 835, 834, 854, 855, 856, 857, 858, 860,
	859, 863, 864, 862, 861, 866, 865, 760, 196, 221,
	368, 0, 454, 288, 646, 615, 484, 610, 206, 223,
	929, 262, 930, 0, 0, 934, 0, 0, 0, 936,
	935, 0, 937, 899, 898, 0, 0, 931, 932, 0,
	933, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 628, 480, 944, 945, 946, 947, 948,
	949, 950, 951, 300, 598, 629, 596, 641, 623, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 969, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 86, 528,
	0, 772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 759, 0, 0, 0, 270,
	764, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 771,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 766, 767, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 95, 0, 0, 1018, 507, 954, 743, 920, 958,
	1019, 971, 972, 973, 959, 0, 238, 960, 961, 245,
	962, 0, 919, 802, 804, 803, 869, 870, 871, 872,
	873, 874, 875, 805, 806, 800, 967, 607, 974, 975,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 739, 756, 0, 770, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 753, 754, 0, 0,
	0, 0, 914, 0, 755, 0, 0, 763, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 913, 0, 0,
	625, 0, 0, 911, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 964, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 965,
	966, 256, 648, 810, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 818, 819,
	280, 307, 895, 894, 893, 306, 308, 891, 892, 890,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 901, 923, 912, 776, 777, 902, 903, 927,
	904, 779, 780, 924, 925, 773, 774, 778, 926, 928,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 915, 762,
	761, 0, 768, 769, 0, 798, 799, 801, 807, 808,
	809, 820, 867, 868, 876, 878, 879, 877, 880, 881,
	882, 885, 886, 887, 888, 883, 884, 889, 781, 785,
	782, 783, 784, 796, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 795, 797, 938, 939, 940, 941, 942,
	943, 813, 817, 816, 814, 815, 811, 812, 839, 838,
	840, 841, 842, 843, 844, 845, 847, 846, 848, 849,
	850, 851, 852, 853, 821, 822, 825, 826, 824, 823,
	827, 836, 837, 828, 829, 830, 831, 832, 833, 835,
	834, 854, 855, 856, 857, 858, 860, 859, 863, 864,
	862, 861, 866, 865, 760, 196, 221, 368, 94, 454,
	288, 646, 615, 484, 610, 206, 223, 929, 262, 930,
	0, 0, 934, 0, 0, 0, 936, 935, 0, 937,
	899, 898, 0, 0, 931, 932, 0, 933, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 944, 945, 946, 947, 948, 949, 950, 951,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 969, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 0, 528, 0, 772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 759, 0, 0, 0, 270, 764, 0, 0,
	0, 366, 267, 0, 0, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 583, 282, 273, 269,
	250, 317, 385, 428, 518, 422, 771, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	766, 767, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 95, 0,
	0, 1018, 507, 954, 743, 920, 958, 1019, 971, 972,
	973, 959, 0, 238, 960, 961, 245, 962, 0, 919,
	802, 804, 803, 869, 870, 871, 872, 873, 874, 875,
	805, 806, 800, 967, 607, 974, 975, 0, 265, 321,
	272, 264, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 739,
	756, 0, 770, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 753, 754, 0, 0, 0, 0, 914,
	0, 755, 0, 0, 763, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 913, 0, 0, 625, 0, 0,
	911, 0, 0, 0, 0, 365, 0, 330, 197, 225,
	0, 0, 412, 461, 473, 0, 0, 0, 964, 0,
	471, 426, 602, 233, 284, 458, 432, 469, 440, 287,
	4083, 0, 470, 372, 585, 450, 599, 626, 627, 263,
	406, 612, 522, 620, 644, 226, 260, 420, 506, 605,
	494, 397, 581, 582, 329, 493, 295, 201, 369, 632,
	224, 479, 371, 242, 231, 587, 609, 299, 289, 456,
	639, 213, 517, 597, 239, 483, 0, 0, 647, 247,
	504, 215, 594, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 965, 966, 256, 648,
	810, 619, 220, 0, 618, 408, 584, 595, 394, 383,
	219, 593, 392, 382, 334, 818, 819, 280, 307, 895,
	894, 893, 306, 308, 891, 892, 890, 207, 606, 0,
	208, 0, 499, 608, 649, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 624, 630, 631,
	633, 634, 635, 636, 637, 640, 638, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 901,
	923, 912, 776, 777, 902, 903, 927, 904, 779, 780,
	924, 925, 773, 774, 778, 926, 928, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 645, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 915, 762, 761, 0, 768,
	769, 0, 798, 799, 801, 807, 808, 809, 820, 867,
	868, 876, 878, 879, 877, 880, 881, 882, 885, 886,
	887, 888, 883, 884, 889, 781, 785, 782, 783, 784,
	796, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 797, 938, 939, 940, 941, 942, 943, 813, 817,
	816, 814, 815, 811, 812, 839, 838, 840, 841, 842,
	843, 844, 845, 847, 846, 848, 849, 850, 851, 852,
	853, 821, 822, 825, 826, 824, 823, 827, 836, 837,
	828, 829, 830, 831, 832, 833, 835, 834, 854, 855,
	856, 857, 858, 860, 859, 863, 864, 862, 861, 866,
	865, 760, 196, 221, 368, 0, 454, 288, 646, 615,
	484, 610, 206, 223, 929, 262, 930, 0, 0, 934,
	0, 0, 0, 936, 935, 0, 937, 899, 898, 0,
	0, 931, 932, 0, 933, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 628, 480, 944,
	945, 946, 947, 948, 949, 950, 951, 300, 598, 629,
	596, 641, 623, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 969, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 759,
	0, 0, 0, 270, 764, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 771, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 766, 767, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 1746, 1018, 507,
	954, 743, 920, 958, 1019, 971, 972, 973, 959, 0,
	238, 960, 961, 245, 962, 0, 919, 802, 804, 803,
	869, 870, 871, 872, 873, 874, 875, 805, 806, 800,
	967, 607, 974, 975, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 739, 756, 0, 770,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	753, 754, 0, 0, 0, 0, 914, 0, 755, 0,
	0, 763, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 913, 0, 0, 625, 0, 0, 911, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 964, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 965, 966, 256, 648, 810, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 818, 819, 280, 307, 895, 894, 893, 306,
	308, 891, 892, 890, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 901, 923, 912, 776,
	777, 902, 903, 927, 904, 779, 780, 924, 925, 773,
	774, 778, 926, 928, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 915, 762, 761, 0, 768, 769, 0, 798,
	799, 801, 807, 808, 809, 820, 867, 868, 876, 878,
	879, 877, 880, 881, 882, 885, 886, 887, 888, 883,
	884, 889, 781, 785, 782, 783, 784, 796, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 795, 797, 938,
	939, 940, 941, 942, 943, 813, 817, 816, 814, 815,
	811, 812, 839, 838, 840, 841, 842, 843, 844, 845,
	847, 846, 848, 849, 850, 851, 852, 853, 821, 822,
	825, 826, 824, 823, 827, 836, 837, 828, 829, 830,
	831, 832, 833, 835, 834, 854, 855, 856, 857, 858,
	860, 859, 863, 864, 862, 861, 866, 865, 760, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 929, 262, 930, 0, 0, 934, 0, 0, 0,
	936, 935, 0, 937, 899, 898, 0, 0, 931, 932,
	0, 933, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 944, 945, 946, 947,
	948, 949, 950, 951, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 969, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 0,
	528, 0, 772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 759, 0, 0, 0,
	270, 764, 0, 0, 0, 366, 267, 0, 0, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	583, 282, 273, 269, 250, 317, 385, 428, 518, 422,
	771, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 766, 767, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 95, 0, 0, 1018, 507, 954, 743, 920,
	958, 1019, 971, 972, 973, 959, 0, 238, 960, 961,
	245, 962, 0, 919, 802, 804, 803, 869, 870, 871,
	872, 873, 874, 875, 805, 806, 800, 967, 607, 974,
	975, 0, 265, 321, 272, 264, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 739, 756, 0, 770, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 753, 754, 1064,
	0, 0, 0, 914, 0, 755, 0, 0, 763, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 913, 0,
	0, 625, 0, 0, 911, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 964, 0, 471, 426, 602, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 585, 450,
	599, 626, 627, 263, 406, 612, 522, 620, 644, 226,
	260, 420, 506, 605, 494, 397, 581, 582, 329, 493,
	295, 201, 369, 632, 224, 479, 371, 242, 231, 587,
	609, 299, 289, 456, 639, 213, 517, 597, 239, 483,
	0, 0, 647, 247, 504, 215, 594, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	965, 966, 256, 648, 810, 619, 220, 0, 618, 408,
	584, 595, 394, 383, 219, 593, 392, 382, 334, 818,
	819, 280, 307, 895, 894, 893, 306, 308, 891, 892,
	890, 207, 606, 0, 208, 0, 499, 608, 649, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 901, 923, 912, 776, 777, 902, 903,
	927, 904, 779, 780, 924, 925, 773, 774, 778, 926,
	928, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 645,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 915,
	762, 761, 0, 768, 769, 0, 798, 799, 801, 807,
	808, 809, 820, 867, 868, 876, 878, 879, 877, 880,
	881, 882, 885, 886, 887, 888, 883, 884, 889, 781,
	785, 782, 783, 784, 796, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 795, 797, 938, 939, 940, 941,
	942, 943, 813, 817, 816, 814, 815, 811, 812, 839,
	838, 840, 841, 842, 843, 844, 845, 847, 846, 848,
	849, 850, 851, 852, 853, 821, 822, 825, 826, 824,
	823, 827, 836, 837, 828, 829, 830, 831, 832, 833,
	835, 834, 854, 855, 856, 857, 858, 860, 859, 863,
	864, 862, 861, 866, 865, 760, 196, 221, 368, 0,
	454, 288, 646, 615, 484, 610, 206, 223, 929, 262,
	930, 0, 0, 934, 0, 0, 0, 936, 935, 0,
	937, 899, 898, 0, 0, 931, 932, 0, 933, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 628, 480, 944, 945, 946, 947, 948, 949, 950,
	951, 300, 598, 629, 596, 641, 623, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 969, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 759, 0, 0, 0, 270, 764, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 771, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 766, 767, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 95,
	0, 0, 1018, 507, 954, 743, 920, 958, 1019, 971,
	972, 973, 959, 0, 238, 960, 961, 245, 962, 0,
	919, 802, 804, 803, 869, 870, 871, 872, 873, 874,
	875, 805, 806, 800, 967, 607, 974, 975, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	739, 756, 0, 770, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 753, 754, 0, 0, 0, 0,
	914, 0, 755, 0, 0, 763, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 913, 0, 0, 625, 0,
	0, 911, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 964,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 965, 966, 256,
	648, 810, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 818, 819, 280, 307,
	895, 894, 893, 306, 308, 891, 892, 890, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	901, 923, 912, 776, 777, 902, 903, 927, 904, 779,
	780, 924, 925, 773, 774, 778, 926, 928, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 915, 762, 761, 0,
	768, 769, 0, 798, 799, 801, 807, 808, 809, 820,
	867, 868, 876, 878, 879, 877, 880, 881, 882, 885,
	886, 887, 888, 883, 884, 889, 781, 785, 782, 783,
	784, 796, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 797, 938, 939, 940, 941, 942, 943, 813,
	817, 816, 814, 815, 811, 812, 839, 838, 840, 841,
	842, 843, 844, 845, 847, 846, 848, 849, 850, 851,
	852, 853, 821, 822, 825, 826, 824, 823, 827, 836,
	837, 828, 829, 830, 831, 832, 833, 835, 834, 854,
	855, 856, 857, 858, 860, 859, 863, 864, 862, 861,
	866, 865, 760, 196, 221, 368, 0, 454, 288, 646,
	615, 484, 610, 206, 223, 929, 262, 930, 0, 0,
	934, 0, 0, 0, 936, 935, 0, 937, 899, 898,
	0, 0, 931, 932, 0, 933, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	944, 945, 946, 947, 948, 949, 950, 951, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 969,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 0, 528, 0, 772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	759, 0, 0, 0, 270, 764, 0, 0, 0, 366,
	267, 0, 0, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 583, 282, 273, 269, 250, 317,
	385, 428, 518, 422, 771, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 766, 767,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 95, 0, 0, 1018,
	507, 954, 743, 920, 958, 1019, 971, 972, 973, 959,
	0, 238, 960, 961, 245, 962, 0, 919, 802, 804,
	803, 869, 870, 871, 872, 873, 874, 875, 805, 806,
	800, 967, 607, 974, 975, 0, 265, 321, 272, 264,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 739, 756, 0,
	770, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 753, 754, 0, 0, 0, 0, 914, 0, 755,
	0, 0, 763, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 3158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 913, 0, 0, 625, 0, 0, 911, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 964, 0, 471, 426,
	602, 233, 284, 458, 432, 469, 440, 287, 0, 0,
	470, 372, 585, 450, 599, 626, 627, 263, 406, 612,
	522, 620, 644, 226, 260, 420, 506, 605, 494, 397,
	581, 582, 329, 493, 295, 201, 369, 632, 224, 479,
	371, 242, 231, 587, 609, 299, 289, 456, 639, 213,
	517, 597, 239, 483, 0, 0, 647, 247, 504, 215,
	594, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 965, 966, 256, 648, 810, 619,
	220, 0, 618, 408, 584, 595, 394, 383, 219, 593,
	392, 382, 334, 818, 819, 280, 307, 895, 894, 893,
	306, 308, 891, 892, 890, 207, 606, 0, 208, 0,
	499, 608, 649, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 624, 630, 631, 633, 634,
	635, 636, 637, 640, 638, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 901, 923, 912,
	776, 777, 902, 903, 927, 904, 779, 780, 924, 925,
	773, 774, 778, 926, 928, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 645, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 915, 762, 761, 0, 768, 769, 0,
	798, 799, 801, 807, 808, 809, 820, 867, 868, 876,
	878, 879, 877, 880, 881, 882, 885, 886, 887, 888,
	883, 884, 889, 781, 785, 782, 783, 784, 796, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 797,
	938, 939, 940, 941, 942, 943, 813, 817, 816, 814,
	815, 811, 812, 839, 838, 840, 841, 842, 843, 844,
	845, 847, 846, 848, 849, 850, 851, 852, 853, 821,
	822, 825, 826, 824, 823, 827, 836, 837, 828, 829,
	830, 831, 832, 833, 835, 834, 854, 855, 856, 857,
	858, 860, 859, 863, 864, 862, 861, 866, 865, 760,
	196, 221, 368, 0, 454, 288, 646, 615, 484, 610,
	206, 223, 929, 262, 930, 0, 0, 934, 0, 0,
	0, 936, 935, 0, 937, 899, 898, 0, 0, 931,
	932, 0, 933, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 628, 480, 944, 945, 946,
	947, 948, 949, 950, 951, 300, 598, 629, 596, 641,
	623, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 969, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 759, 0, 0,
	0, 270, 764, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 771, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 766, 767, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 95, 0, 0, 1018, 507, 954, 743,
	920, 958, 1019, 971, 972, 973, 959, 0, 238, 960,
	961, 245, 962, 0, 919, 802, 804, 803, 869, 870,
	871, 872, 873, 874, 875, 805, 806, 800, 967, 607,
	974, 975, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 739, 756, 0, 770, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 753, 754,
	0, 0, 0, 0, 914, 0, 755, 0, 0, 763,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 3154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 913,
	0, 0, 625, 0, 0, 911, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 964, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 965, 966, 256, 648, 810, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	818, 819, 280, 307, 895, 894, 893, 306, 308, 891,
	892, 890, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 901, 923, 912, 776, 777, 902,
	903, 927, 904, 779, 780, 924, 925, 773, 774, 778,
	926, 928, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	915, 762, 761, 0, 768, 769, 0, 798, 799, 801,
	807, 808, 809, 820, 867, 868, 876, 878, 879, 877,
	880, 881, 882, 885, 886, 887, 888, 883, 884, 889,
	781, 785, 782, 783, 784, 796, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 797, 938, 939, 940,
	941, 942, 943, 813, 817, 816, 814, 815, 811, 812,
	839, 838, 840, 841, 842, 843, 844, 845, 847, 846,
	848, 849, 850, 851, 852, 853, 821, 822, 825, 826,
	824, 823, 827, 836, 837, 828, 829, 830, 831, 832,
	833, 835, 834, 854, 855, 856, 857, 858, 860, 859,
	863, 864, 862, 861, 866, 865, 760, 196, 221, 368,
	0, 454, 288, 646, 615, 484, 610, 206, 223, 929,
	262, 930, 0, 0, 934, 0, 0, 0, 936, 935,
	0, 937, 899, 898, 0, 0, 931, 932, 0, 933,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 944, 945, 946, 947, 948, 949,
	950, 951, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 969, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 0, 0, 528, 0,
	772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 759, 0, 0, 0, 270, 764,
	0, 0, 0, 366, 267, 0, 0, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 583, 282,
	273, 269, 250, 317, 385, 428, 518, 422, 771, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 766, 767, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	95, 0, 0, 1018, 507, 954, 1085, 920, 958, 1019,
	971, 972, 973, 959, 0, 238, 960, 961, 245, 962,
	0, 919, 802, 804, 803, 869, 870, 871, 872, 873,
	874, 875, 805, 806, 800, 967, 607, 974, 975, 0,
	265, 321, 272, 264, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 756, 0, 770, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 753, 754, 0, 0, 0,
	0, 914, 0, 755, 0, 0, 763, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 913, 0, 0, 625,
	0, 0, 911, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	964, 0, 471, 426, 602, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 585, 450, 599, 626,
	627, 263, 406, 612, 522, 620, 644, 226, 260, 420,
	506, 605, 494, 397, 581, 582, 329, 493, 295, 201,
	369, 632, 224, 479, 371, 242, 231, 587, 609, 299,
	289, 456, 639, 213, 517, 597, 239, 483, 0, 0,
	647, 247, 504, 215, 594, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 965, 966,
	256, 648, 810, 619, 220, 0, 618, 408, 584, 595,
	394, 383, 219, 593, 392, 382, 334, 818, 819, 280,
	307, 895, 894, 893, 306, 308, 891, 892, 890, 207,
	606, 0, 208, 0, 499, 608, 649, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 624,
	630, 631, 633, 634, 635, 636, 637, 640, 638, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 901, 923, 912, 776, 777, 902, 903, 927, 904,
	779, 780, 924, 925, 773, 774, 778, 926, 928, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 645, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 915, 762, 761,
	0, 768, 769, 0, 798, 799, 801, 807, 808, 809,
	820, 867, 868, 876, 878, 879, 877, 880, 881, 882,
	885, 886, 887, 888, 883, 884, 889, 781, 785, 782,
	783, 784, 796, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 797, 938, 939, 940, 941, 942, 943,
	813, 817, 816, 814, 815, 811, 812, 839, 838, 840,
	841, 842, 843, 844, 845, 847, 846, 848, 849, 850,
	851, 852, 853, 821, 822, 825, 826, 824, 823, 827,
	836, 837, 828, 829, 830, 831, 832, 833, 835, 834,
	854, 855, 856, 857, 858, 860, 859, 863, 864, 862,
	861, 866, 865, 760, 196, 221, 368, 0, 454, 288,
	646, 615, 484, 610, 206, 223, 929, 262, 930, 0,
	0, 934, 0, 0, 0, 936, 935, 0, 937, 899,
	898, 0, 0, 931, 932, 0, 933, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 628,
	480, 944, 945, 946, 947, 948, 949, 950, 951, 300,
	598, 629, 596, 641, 623, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	969, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 759, 0, 0, 0, 270, 764, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 771, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 766,
	767, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 95, 0, 0,
	1018, 507, 954, 1085, 920, 958, 1019, 971, 972, 973,
	959, 0, 238, 960, 961, 245, 962, 0, 919, 802,
	804, 803, 869, 870, 871, 872, 873, 874, 875, 805,
	806, 800, 967, 607, 974, 975, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 756,
	0, 770, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 753, 754, 0, 0, 0, 0, 914, 0,
	755, 0, 0, 763, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 2112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 913, 0, 0, 625, 0, 0, 911,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 964, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 965, 966, 256, 648, 810,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 818, 819, 280, 307, 895, 894,
	893, 306, 308, 891, 892, 890, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 901, 923,
	912, 776, 777, 902, 903, 927, 904, 779, 780, 924,
	925, 773, 774, 778, 926, 928, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 915, 762, 761, 0, 768, 769,
	0, 798, 799, 801, 807, 808, 809, 820, 867, 868,
	876, 878, 879, 877, 880, 881, 882, 885, 886, 887,
	888, 883, 884, 889, 781, 785, 782, 783, 784, 796,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 795,
	797, 938, 939, 940, 941, 942, 943, 813, 817, 816,
	814, 815, 811, 812, 839, 838, 840, 841, 842, 843,
	844, 845, 847, 846, 848, 849, 850, 851, 852, 853,
	821, 822, 825, 826, 824, 823, 827, 836, 837, 828,
	829, 830, 831, 832, 833, 835, 834, 854, 855, 856,
	857, 858, 860, 859, 863, 864, 862, 861, 866, 865,
	760, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 929, 262, 930, 0, 0, 934, 0,
	0, 0, 936, 935, 0, 937, 899, 898, 0, 0,
	931, 932, 0, 933, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 944, 945,
	946, 947, 948, 949, 950, 951, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 969, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 0, 528, 0, 772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 759, 0,
	0, 0, 270, 764, 0, 0, 0, 366, 267, 0,
	0, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 583, 282, 273, 269, 250, 317, 385, 428,
	518, 422, 771, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 766, 767, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 95, 0, 0, 1018, 507, 954,
	1085, 920, 958, 1019, 971, 972, 973, 959, 0, 238,
	960, 961, 245, 962, 0, 919, 802, 804, 803, 869,
	870, 871, 872, 873, 874, 875, 805, 806, 800, 967,
	607, 974, 975, 0, 265, 321, 272, 264, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 756, 0, 770, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 753,
	754, 0, 0, 0, 0, 914, 0, 755, 0, 0,
	763, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 2110, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	913, 0, 0, 625, 0, 0, 911, 0, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 964, 0, 471, 426, 602, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	585, 450, 599, 626, 627, 263, 406, 612, 522, 620,
	644, 226, 260, 420, 506, 605, 494, 397, 581, 582,
	329, 493, 295, 201, 369, 632, 224, 479, 371, 242,
	231, 587, 609, 299, 289, 456, 639, 213, 517, 597,
	239, 483, 0, 0, 647, 247, 504, 215, 594, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 965, 966, 256, 648, 810, 619, 220, 0,
	618, 408, 584, 595, 394, 383, 219, 593, 392, 382,
	334, 818, 819, 280, 307, 895, 894, 893, 306, 308,
	891, 892, 890, 207, 606, 0, 208, 0, 499, 608,
	649, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 901, 923, 912, 776, 777,
	902, 903, 927, 904, 779, 780, 924, 925, 773, 774,
	778, 926, 928, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 645, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 915, 762, 761, 0, 768, 769, 0, 798, 799,
	801, 807, 808, 809, 820, 867, 868, 876, 878, 879,
	877, 880, 881, 882, 885, 886, 887, 888, 883, 884,
	889, 781, 785, 782, 783, 784, 796, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 797, 938, 939,
	940, 941, 942, 943, 813, 817, 816, 814, 815, 811,
	812, 839, 838, 840, 841, 842, 843, 844, 845, 847,
	846, 848, 849, 850, 851, 852, 853, 821, 822, 825,
	826, 824, 823, 827, 836, 837, 828, 829, 830, 831,
	832, 833, 835, 834, 854, 855, 856, 857, 858, 860,
	859, 863, 864, 862, 861, 866, 865, 760, 196, 221,
	368, 0, 454, 288, 646, 615, 484, 610, 206, 223,
	929, 262, 930, 0, 0, 934, 0, 0, 0, 936,
	935, 0, 937, 899, 898, 0, 0, 931, 932, 0,
	933, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 628, 480, 944, 945, 946, 947, 948,
	949, 950, 951, 300, 598, 629, 596, 641, 623, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 969, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 0, 507, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 1136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 1135,
	625, 0, 0, 0, 0, 0, 1132, 1133, 365, 1093,
	330, 197, 225, 1126, 1130, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 199, 0, 0, 0, 0, 254, 255, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 0, 0,
	0, 0, 0, 398, 0, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 0, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 0, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 366, 267, 0, 0, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 583, 282, 273, 269,
	250, 317, 385, 428, 518, 422, 0, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 0, 0,
	0, 1703, 507, 954, 0, 0, 1700, 0, 0, 0,
	0, 1698, 0, 238, 1699, 1697, 245, 1702, 0, 919,
	351, 360, 359, 339, 340, 342, 344, 350, 357, 363,
	336, 345, 0, 0, 607, 0, 0, 0, 265, 321,
	272, 264, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 0, 0, 0, 625, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 330, 197, 225,
	0, 0, 412, 461, 473, 0, 0, 0, 253, 0,
	471, 426, 602, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 585, 450, 599, 626, 627, 263,
	406, 612, 522, 620, 644, 226, 260, 420, 506, 605,
	494, 397, 581, 582, 329, 493, 295, 201, 369, 632,
	224, 479, 371, 242, 231, 587, 609, 299, 289, 456,
	639, 213, 517, 597, 239, 483, 0, 0, 647, 247,
	504, 215, 594, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 589, 590, 256, 648,
	228, 619, 220, 0, 618, 408, 584, 595, 394, 383,
	219, 593, 392, 382, 334, 355, 356, 280, 307, 447,
	375, 448, 306, 308, 404, 403, 405, 207, 606, 0,
	208, 0, 499, 608, 649, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 624, 630, 631,
	633, 634, 635, 636, 637, 640, 638, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 645, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 668, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 646, 615,
	484, 610, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 628, 480, 301,
	302, 444, 445, 314, 315, 642, 643, 300, 598, 629,
	596, 641, 623, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 86, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 0, 507,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 648, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 199, 0, 0, 0,
	0, 254, 255, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 0, 0, 0, 0, 0, 398, 0, 591,
	592, 668, 384, 486, 601, 335, 349, 352, 341, 361,
	0, 362, 337, 338, 343, 346, 347, 348, 353, 354,
	358, 364, 249, 210, 390, 399, 578, 312, 216, 217,
	218, 524, 525, 526, 527, 616, 617, 621, 205, 462,
	463, 464, 465, 292, 611, 309, 468, 467, 331, 332,
	379, 449, 540, 542, 553, 557, 559, 561, 567, 570,
	541, 543, 554, 558, 560, 562, 568, 571, 530, 532,
	534, 536, 549, 548, 545, 573, 574, 551, 556, 535,
	547, 552, 565, 572, 569, 529, 533, 537, 546, 564,
	563, 544, 555, 566, 550, 538, 531, 539, 0, 196,
	221, 368, 94, 454, 288, 646, 615, 484, 610, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 2415,
	0, 0, 2414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 301, 302, 444, 445,
	314, 315, 642, 643, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 1769, 0, 376, 576, 577, 316, 0, 0, 0,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 1771, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 366, 267, 0, 0, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	583, 282, 273, 269, 250, 317, 385, 428, 518, 422,
	0, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 0, 0, 0, 1773, 507, 719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 0, 0, 607, 0,
	0, 0, 265, 321, 272, 264, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 1471,
	0, 1472, 1473, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 0, 0,
	0, 625, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 253, 0, 471, 426, 602, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 585, 450,
	599, 626, 627, 263, 406, 612, 522, 620, 644, 226,
	260, 420, 506, 605, 494, 397, 581, 582, 329, 493,
	295, 201, 369, 632, 224, 479, 371, 242, 231, 587,
	609, 299, 289, 456, 639, 213, 517, 597, 239, 483,
	0, 0, 647, 247, 504, 215, 594, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	589, 590, 256, 648, 228, 619, 220, 0, 618, 408,
	584, 595, 394, 383, 219, 593, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 606, 0, 208, 0, 499, 608, 649, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 645,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 0,
	0, 0, 0, 0, 398, 0, 591, 592, 668, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 0, 196, 221, 368, 0,
	454, 288, 646, 615, 484, 610, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 628, 480, 301, 302, 444, 445, 314, 315, 642,
	643, 300, 598, 629, 596, 641, 623, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 86, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 95,
	0, 1746, 0, 507, 719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	199, 0, 0, 0, 0, 254, 255, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 0, 0, 0, 0,
	0, 398, 0, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 0, 196, 221, 368, 94, 454, 288, 646,
	615, 484, 610, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 0, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 366,
	267, 0, 0, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 583, 282, 273, 269, 250, 317,
	385, 428, 518, 422, 0, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 95, 0, 0, 0,
	507, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	0, 0, 607, 0, 0, 0, 265, 321, 272, 264,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 0, 0, 0, 625, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 253, 0, 471, 426,
	602, 233, 284, 458, 432, 469, 440, 287, 0, 0,
	470, 372, 585, 450, 599, 626, 627, 263, 406, 612,
	522, 620, 644, 226, 260, 420, 506, 605, 494, 397,
	581, 582, 329, 493, 295, 201, 369, 632, 224, 479,
	371, 242, 231, 587, 609, 299, 289, 456, 639, 213,
	517, 597, 239, 483, 0, 0, 647, 247, 504, 215,
	594, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 589, 590, 256, 648, 228, 619,
	220, 0, 618, 408, 584, 595, 394, 383, 219, 593,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 606, 0, 208, 0,
	499, 608, 649, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 624, 630, 631, 633, 634,
	635, 636, 637, 640, 638, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 645, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 0, 0, 0, 0, 0, 398, 0,
	591, 592, 668, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 0,
	196, 221, 368, 0, 454, 288, 646, 615, 484, 610,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	2415, 0, 0, 2414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 628, 480, 301, 302, 444,
	445, 314, 315, 642, 643, 300, 598, 629, 596, 641,
	623, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 2362, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 1952, 507, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 2360, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 199, 0, 0, 0, 0, 254,
	255, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	0, 0, 0, 0, 0, 398, 0, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 0, 196, 221, 368,
	0, 454, 288, 646, 615, 484, 610, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 0, 0, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 366, 267, 0, 0, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 583, 282,
	273, 269, 250, 317, 385, 428, 518, 422, 0, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	0, 0, 0, 0, 507, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 351, 360, 359, 339, 340, 342, 344, 350,
	357, 363, 336, 345, 0, 0, 607, 0, 0, 0,
	265, 321, 272, 264, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 1087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 0, 0, 0, 625,
	0, 0, 0, 0, 0, 0, 0, 365, 1093, 330,
	197, 225, 1091, 0, 412, 461, 473, 0, 0, 0,
	253, 0, 471, 426, 602, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 585, 450, 599, 626,
	627, 263, 406, 612, 522, 620, 644, 226, 260, 420,
	506, 605, 494, 397, 581, 582, 329, 493, 295, 201,
	369, 632, 224, 479, 371, 242, 231, 587, 609, 299,
	289, 456, 639, 213, 517, 597, 239, 483, 0, 0,
	647, 247, 504, 215, 594, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 589, 590,
	256, 648, 228, 619, 220, 0, 618, 408, 584, 595,
	394, 383, 219, 593, 392, 382, 334, 355, 356, 280,
	307, 447, 375, 448, 306, 308, 404, 403, 405, 207,
	606, 0, 208, 0, 499, 608, 649, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 624,
	630, 631, 633, 634, 635, 636, 637, 640, 638, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 645, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 0, 0, 0,
	0, 0, 398, 0, 591, 592, 668, 384, 486, 601,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	616, 617, 621, 205, 462, 463, 464, 465, 292, 611,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 0, 196, 221, 368, 0, 454, 288,
	646, 615, 484, 610, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 628,
	480, 301, 302, 444, 445, 314, 315, 642, 643, 300,
	598, 629, 596, 641, 623, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	2362, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	1952, 507, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 199, 0,
	0, 0, 0, 254, 255, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 0, 0, 0, 0, 0, 398,
	0, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	0, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 0, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 366, 267, 0,
	0, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 583, 282, 273, 269, 250, 317, 385, 428,
	518, 422, 0, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 0, 0, 1746, 0, 507, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 0, 0,
	607, 0, 0, 0, 265, 321, 272, 264, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	0, 0, 0, 625, 0, 0, 0, 3714, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 253, 0, 471, 426, 602, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	585, 450, 599, 626, 627, 263, 406, 612, 522, 620,
	644, 226, 260, 420, 506, 605, 494, 397, 581, 582,
	329, 493, 295, 201, 369, 632, 224, 479, 371, 242,
	231, 587, 609, 299, 289, 456, 639, 213, 517, 597,
	239, 483, 0, 0, 647, 247, 504, 215, 594, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 589, 590, 256, 648, 228, 619, 220, 0,
	618, 408, 584, 595, 394, 383, 219, 593, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 606, 0, 208, 0, 499, 608,
	649, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 645, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 0, 0, 0, 0, 0, 398, 0, 591, 592,
	668, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 0, 196, 221,
	368, 0, 454, 288, 646, 615, 484, 610, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 628, 480, 301, 302, 444, 445, 314,
	315, 642, 643, 300, 598, 629, 596, 641, 623, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 2121, 507, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2122, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 199, 0, 0, 0, 0, 254, 255, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 0, 0,
	0, 0, 0, 398, 0, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 0, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 0, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 366, 267, 0, 0, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 583, 282, 273, 269,
	250, 317, 385, 428, 518, 422, 0, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 0, 0,
	0, 2865, 507, 719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	351, 360, 359, 339, 340, 342, 344, 350, 357, 363,
	336, 345, 0, 0, 607, 0, 0, 0, 265, 321,
	272, 264, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 0, 0, 0, 625, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 330, 197, 225,
	0, 0, 412, 461, 473, 0, 0, 0, 253, 0,
	471, 426, 602, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 585, 450, 599, 626, 627, 263,
	406, 612, 522, 620, 644, 226, 260, 420, 506, 605,
	494, 397, 581, 582, 329, 493, 295, 201, 369, 632,
	224, 479, 371, 242, 231, 587, 609, 299, 289, 456,
	639, 213, 517, 597, 239, 483, 0, 0, 647, 247,
	504, 215, 594, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 589, 590, 256, 648,
	228, 619, 220, 0, 618, 408, 584, 595, 394, 383,
	219, 593, 392, 382, 334, 355, 356, 280, 307, 447,
	375, 448, 306, 308, 404, 403, 405, 207, 606, 0,
	208, 0, 499, 608, 649, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 624, 630, 631,
	633, 634, 635, 636, 637, 640, 638, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 645, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 668, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 646, 615,
	484, 610, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 628, 480, 301,
	302, 444, 445, 314, 315, 642, 643, 300, 598, 629,
	596, 641, 623, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	719, 0, 0, 0, 0, 2850, 0, 0, 0, 0,
	238, 0, 0, 245, 2851, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 648, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 199, 0, 0, 0,
	0, 254, 255, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 0, 0, 0, 0, 0, 398, 0, 591,
	592, 668, 384, 486, 601, 335, 349, 352, 341, 361,
	0, 362, 337, 338, 343, 346, 347, 348, 353, 354,
	358, 364, 249, 210, 390, 399, 578, 312, 216, 217,
	218, 524, 525, 526, 527, 616, 617, 621, 205, 462,
	463, 464, 465, 292, 611, 309, 468, 467, 331, 332,
	379, 449, 540, 542, 553, 557, 559, 561, 567, 570,
	541, 543, 554, 558, 560, 562, 568, 571, 530, 532,
	534, 536, 549, 548, 545, 573, 574, 551, 556, 535,
	547, 552, 565, 572, 569, 529, 533, 537, 546, 564,
	563, 544, 555, 566, 550, 538, 531, 539, 0, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 301, 302, 444, 445,
	314, 315, 642, 643, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 0,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	270, 1792, 0, 0, 0, 366, 267, 0, 0, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	583, 282, 273, 269, 250, 317, 385, 428, 518, 422,
	0, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 0, 0, 0, 1791, 507, 719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 0, 0, 607, 0,
	0, 0, 265, 321, 272, 264, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 0, 0,
	0, 625, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 253, 0, 471, 426, 602, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 585, 450,
	599, 626, 627, 263, 406, 612, 522, 620, 644, 226,
	260, 420, 506, 605, 494, 397, 581, 582, 329, 493,
	295, 201, 369, 632, 224, 479, 371, 242, 231, 587,
	609, 299, 289, 456, 639, 213, 517, 597, 239, 483,
	0, 0, 647, 247, 504, 215, 594, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	589, 590, 256, 648, 228, 619, 220, 0, 618, 408,
	584, 595, 394, 383, 219, 593, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 606, 0, 208, 0, 499, 608, 649, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 645,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 0,
	0, 0, 0, 0, 398, 0, 591, 592, 668, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 0, 196, 221, 368, 0,
	454, 288, 646, 615, 484, 610, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 628, 480, 301, 302, 444, 445, 314, 315, 642,
	643, 300, 598, 629, 596, 641, 623, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 507, 721, 722, 723, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	199, 0, 0, 0, 0, 254, 255, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 0, 0, 0, 0,
	0, 398, 0, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 0, 196, 221, 368, 0, 454, 288, 646,
	615, 484, 610, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 0, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 366,
	267, 0, 0, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 583, 282, 273, 269, 250, 317,
	385, 428, 518, 422, 0, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 0, 0, 0, 0,
	507, 719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	0, 0, 607, 0, 0, 0, 265, 321, 272, 264,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 0, 0, 0, 625, 0, 0, 0, 4058,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 253, 0, 471, 426,
	602, 233, 284, 458, 432, 469, 440, 287, 0, 0,
	470, 372, 585, 450, 599, 626, 627, 263, 406, 612,
	522, 620, 644, 226, 260, 420, 506, 605, 494, 397,
	581, 582, 329, 493, 295, 201, 369, 632, 224, 479,
	371, 242, 231, 587, 609, 299, 289, 456, 639, 213,
	517, 597, 239, 483, 0, 0, 647, 247, 504, 215,
	594, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 589, 590, 256, 648, 228, 619,
	220, 0, 618, 408, 584, 595, 394, 383, 219, 593,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 606, 0, 208, 0,
	499, 608, 649, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 624, 630, 631, 633, 634,
	635, 636, 637, 640, 638, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 645, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 0, 0, 0, 0, 0, 398, 0,
	591, 592, 668, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 0,
	196, 221, 368, 0, 454, 288, 646, 615, 484, 610,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 628, 480, 301, 302, 444,
	445, 314, 315, 642, 643, 300, 598, 629, 596, 641,
	623, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 1952, 507, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 199, 0, 0, 0, 0, 254,
	255, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	0, 0, 0, 0, 0, 398, 0, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 0, 196, 221, 368,
	0, 454, 288, 646, 615, 484, 610, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 0, 0, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 366, 267, 0, 0, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 583, 282,
	273, 269, 250, 317, 385, 428, 518, 422, 0, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	0, 0, 0, 0, 507, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 351, 360, 359, 339, 340, 342, 344, 350,
	357, 363, 336, 345, 0, 0, 607, 0, 0, 0,
	265, 321, 272, 264, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 0, 0, 0, 625,
	0, 0, 0, 3714, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	253, 0, 471, 426, 602, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 585, 450, 599, 626,
	627, 263, 406, 612, 522, 620, 644, 226, 260, 420,
	506, 605, 494, 397, 581, 582, 329, 493, 295, 201,
	369, 632, 224, 479, 371, 242, 231, 587, 609, 299,
	289, 456, 639, 213, 517, 597, 239, 483, 0, 0,
	647, 247, 504, 215, 594, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 589, 590,
	256, 648, 228, 619, 220, 0, 618, 408, 584, 595,
	394, 383, 219, 593, 392, 382, 334, 355, 356, 280,
	307, 447, 375, 448, 306, 308, 404, 403, 405, 207,
	606, 0, 208, 0, 499, 608, 649, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 624,
	630, 631, 633, 634, 635, 636, 637, 640, 638, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 645, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 0, 0, 0,
	0, 0, 398, 0, 591, 592, 668, 384, 486, 601,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	616, 617, 621, 205, 462, 463, 464, 465, 292, 611,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 0, 196, 221, 368, 0, 454, 288,
	646, 615, 484, 610, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 628,
	480, 301, 302, 444, 445, 314, 315, 642, 643, 300,
	598, 629, 596, 641, 623, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 95, 0, 0,
	0, 507, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 199, 0,
	0, 0, 0, 254, 255, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 0, 0, 0, 0, 0, 398,
	0, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	0, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 0, 528, 0, 0, 0, 0, 2416, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 366, 267, 0,
	0, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 583, 282, 273, 269, 250, 317, 385, 428,
	518, 422, 0, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 0, 0, 0, 0, 507, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 0, 0,
	607, 0, 0, 0, 265, 321, 272, 264, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	0, 0, 0, 625, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 253, 0, 471, 426, 602, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	585, 450, 599, 626, 627, 263, 406, 612, 522, 620,
	644, 226, 260, 420, 506, 605, 494, 397, 581, 582,
	329, 493, 295, 201, 369, 632, 224, 479, 371, 242,
	231, 587, 609, 299, 289, 456, 639, 213, 517, 597,
	239, 483, 0, 0, 647, 247, 504, 215, 594, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 589, 590, 256, 648, 228, 619, 220, 0,
	618, 408, 584, 595, 394, 383, 219, 593, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 606, 0, 208, 0, 499, 608,
	649, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 645, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 0, 0, 0, 0, 0, 398, 0, 591, 592,
	668, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 0, 196, 221,
	368, 0, 454, 288, 646, 615, 484, 610, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 628, 480, 301, 302, 444, 445, 314,
	315, 642, 643, 300, 598, 629, 596, 641, 623, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 1773, 507, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 199, 0, 0, 0, 0, 254, 255, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 0, 0,
	0, 0, 0, 398, 0, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 0, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 0, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 366, 267, 0, 0, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 583, 282, 273, 269,
	250, 317, 385, 428, 518, 422, 0, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 0, 0,
	0, 0, 507, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	351, 360, 359, 339, 340, 342, 344, 350, 357, 363,
	336, 345, 0, 0, 607, 0, 0, 0, 265, 321,
	272, 264, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 0, 0, 0, 625, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 330, 197, 225,
	0, 0, 412, 461, 473, 0, 0, 0, 253, 0,
	471, 426, 602, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 585, 450, 599, 626, 627, 263,
	406, 612, 522, 620, 644, 226, 260, 420, 506, 605,
	494, 397, 581, 582, 329, 493, 295, 201, 369, 632,
	224, 479, 371, 242, 231, 587, 609, 299, 289, 456,
	639, 213, 517, 597, 239, 483, 0, 0, 647, 247,
	504, 215, 594, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 589, 590, 256, 648,
	228, 619, 220, 0, 618, 408, 584, 595, 394, 383,
	219, 593, 392, 382, 334, 355, 356, 280, 307, 447,
	375, 448, 306, 308, 404, 403, 405, 207, 606, 0,
	208, 0, 499, 608, 649, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 624, 630, 631,
	633, 634, 635, 636, 637, 640, 638, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 645, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 668, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 2068, 454, 288, 646, 615,
	484, 610, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 628, 480, 301,
	302, 444, 445, 314, 315, 642, 643, 300, 598, 629,
	596, 641, 623, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 2059, 507,
	719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 648, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 199, 0, 0, 0,
	0, 254, 255, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 0, 0, 0, 0, 0, 398, 0, 591,
	592, 668, 384, 486, 601, 335, 349, 352, 341, 361,
	0, 362, 337, 338, 343, 346, 347, 348, 353, 354,
	358, 364, 249, 210, 390, 399, 578, 312, 216, 217,
	218, 524, 525, 526, 527, 616, 617, 621, 205, 462,
	463, 464, 465, 292, 611, 309, 468, 467, 331, 332,
	379, 449, 540, 542, 553, 557, 559, 561, 567, 570,
	541, 543, 554, 558, 560, 562, 568, 571, 530, 532,
	534, 536, 549, 548, 545, 573, 574, 551, 556, 535,
	547, 552, 565, 572, 569, 529, 533, 537, 546, 564,
	563, 544, 555, 566, 550, 538, 531, 539, 0, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 301, 302, 444, 445,
	314, 315, 642, 643, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 0,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 366, 267, 0, 1919, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	583, 282, 273, 269, 250, 317, 385, 428, 518, 422,
	0, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 0, 0, 0, 0, 507, 719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 0, 0, 607, 0,
	0, 0, 265, 321, 272, 264, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 0, 0,
	0, 625, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 253, 0, 471, 426, 602, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 585, 450,
	599, 626, 627, 263, 406, 612, 522, 620, 644, 226,
	260, 420, 506, 605, 494, 397, 581, 582, 329, 493,
	295, 201, 369, 632, 224, 479, 371, 242, 231, 587,
	609, 299, 289, 456, 639, 213, 517, 597, 239, 483,
	0, 0, 647, 247, 504, 215, 594, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	589, 590, 256, 648, 228, 619, 220, 0, 618, 408,
	584, 595, 394, 383, 219, 593, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 606, 0, 208, 0, 499, 608, 649, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 645,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 0,
	0, 0, 0, 0, 398, 0, 591, 592, 668, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 0, 196, 221, 368, 0,
	454, 288, 646, 615, 484, 610, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 628, 480, 301, 302, 444, 445, 314, 315, 642,
	643, 300, 598, 629, 596, 641, 623, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 1917, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 507, 719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	199, 0, 0, 0, 0, 254, 255, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 0, 0, 0, 0,
	0, 398, 0, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 0, 196, 221, 368, 0, 454, 288, 646,
	615, 484, 610, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 0, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 366,
	267, 0, 1915, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 583, 282, 273, 269, 250, 317,
	385, 428, 518, 422, 0, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 0, 0, 0, 0,
	507, 719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	0, 0, 607, 0, 0, 0, 265, 321, 272, 264,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 0, 0, 0, 625, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 253, 0, 471, 426,
	602, 233, 284, 458, 432, 469, 440, 287, 0, 0,
	470, 372, 585, 450, 599, 626, 627, 263, 406, 612,
	522, 620, 644, 226, 260, 420, 506, 605, 494, 397,
	581, 582, 329, 493, 295, 201, 369, 632, 224, 479,
	371, 242, 231, 587, 609, 299, 289, 456, 639, 213,
	517, 597, 239, 483, 0, 0, 647, 247, 504, 215,
	594, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 589, 590, 256, 648, 228, 619,
	220, 0, 618, 408, 584, 595, 394, 383, 219, 593,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 606, 0, 208, 0,
	499, 608, 649, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 624, 630, 631, 633, 634,
	635, 636, 637, 640, 638, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 645, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 0, 0, 0, 0, 0, 398, 0,
	591, 592, 668, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 0,
	196, 221, 368, 0, 454, 288, 646, 615, 484, 610,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 628, 480, 301, 302, 444,
	445, 314, 315, 642, 643, 300, 598, 629, 596, 641,
	623, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 1913,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 0, 507, 719, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 199, 0, 0, 0, 0, 254,
	255, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	0, 0, 0, 0, 0, 398, 0, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 0, 196, 221, 368,
	0, 454, 288, 646, 615, 484, 610, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 0, 0, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 366, 267, 0, 1911, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 583, 282,
	273, 269, 250, 317, 385, 428, 518, 422, 0, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	0, 0, 0, 0, 507, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 351, 360, 359, 339, 340, 342, 344, 350,
	357, 363, 336, 345, 0, 0, 607, 0, 0, 0,
	265, 321, 272, 264, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 0, 0, 0, 625,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	253, 0, 471, 426, 602, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 585, 450, 599, 626,
	627, 263, 406, 612, 522, 620, 644, 226, 260, 420,
	506, 605, 494, 397, 581, 582, 329, 493, 295, 201,
	369, 632, 224, 479, 371, 242, 231, 587, 609, 299,
	289, 456, 639, 213, 517, 597, 239, 483, 0, 0,
	647, 247, 504, 215, 594, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 589, 590,
	256, 648, 228, 619, 220, 0, 618, 408, 584, 595,
	394, 383, 219, 593, 392, 382, 334, 355, 356, 280,
	307, 447, 375, 448, 306, 308, 404, 403, 405, 207,
	606, 0, 208, 0, 499, 608, 649, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 624,
	630, 631, 633, 634, 635, 636, 637, 640, 638, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 645, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 0, 0, 0,
	0, 0, 398, 0, 591, 592, 668, 384, 486, 601,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	616, 617, 621, 205, 462, 463, 464, 465, 292, 611,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 0, 196, 221, 368, 0, 454, 288,
	646, 615, 484, 610, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 628,
	480, 301, 302, 444, 445, 314, 315, 642, 643, 300,
	598, 629, 596, 641, 623, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 1907, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	0, 507, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 199, 0,
	0, 0, 0, 254, 255, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 0, 0, 0, 0, 0, 398,
	0, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	0, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 0, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 366, 267, 0,
	1905, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 583, 282, 273, 269, 250, 317, 385, 428,
	518, 422, 0, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 0, 0, 0, 0, 507, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 0, 0,
	607, 0, 0, 0, 265, 321, 272, 264, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	0, 0, 0, 625, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 253, 0, 471, 426, 602, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	585, 450, 599, 626, 627, 263, 406, 612, 522, 620,
	644, 226, 260, 420, 506, 605, 494, 397, 581, 582,
	329, 493, 295, 201, 369, 632, 224, 479, 371, 242,
	231, 587, 609, 299, 289, 456, 639, 213, 517, 597,
	239, 483, 0, 0, 647, 247, 504, 215, 594, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 589, 590, 256, 648, 228, 619, 220, 0,
	618, 408, 584, 595, 394, 383, 219, 593, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 606, 0, 208, 0, 499, 608,
	649, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 645, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 0, 0, 0, 0, 0, 398, 0, 591, 592,
	668, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 0, 196, 221,
	368, 0, 454, 288, 646, 615, 484, 610, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 628, 480, 301, 302, 444, 445, 314,
	315, 642, 643, 300, 598, 629, 596, 641, 623, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 1903, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 0, 507, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 199, 0, 0, 0, 0, 254, 255, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 0, 0,
	0, 0, 0, 398, 0, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 0, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 0, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 366, 267, 0, 0, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 583, 282, 273, 269,
	250, 317, 385, 428, 518, 422, 0, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 1878, 0,
	0, 0, 507, 719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	351, 360, 359, 339, 340, 342, 344, 350, 357, 363,
	336, 345, 0, 0, 607, 0, 0, 0, 265, 321,
	272, 264, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 0, 0, 0, 625, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 330, 197, 225,
	0, 0, 412, 461, 473, 0, 0, 0, 253, 0,
	471, 426, 602, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 585, 450, 599, 626, 627, 263,
	406, 612, 522, 620, 644, 226, 260, 420, 506, 605,
	494, 397, 581, 582, 329, 493, 295, 201, 369, 632,
	224, 479, 371, 242, 231, 587, 609, 299, 289, 456,
	639, 213, 517, 597, 239, 483, 0, 0, 647, 247,
	504, 215, 594, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 589, 590, 256, 648,
	228, 619, 220, 0, 618, 408, 584, 595, 394, 383,
	219, 593, 392, 382, 334, 355, 356, 280, 307, 447,
	375, 448, 306, 308, 404, 403, 405, 207, 606, 0,
	208, 0, 499, 608, 649, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 624, 630, 631,
	633, 634, 635, 636, 637, 640, 638, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 645, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 668, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 646, 615,
	484, 610, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 628, 480, 301,
	302, 444, 445, 314, 315, 642, 643, 300, 598, 629,
	596, 641, 623, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 1777, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 648, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 199, 0, 0, 0,
	0, 254, 255, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 0, 0, 0, 0, 0, 398, 0, 591,
	592, 668, 384, 486, 601, 335, 349, 352, 341, 361,
	0, 362, 337, 338, 343, 346, 347, 348, 353, 354,
	358, 364, 249, 210, 390, 399, 578, 312, 216, 217,
	218, 524, 525, 526, 527, 616, 617, 621, 205, 462,
	463, 464, 465, 292, 611, 309, 468, 467, 331, 332,
	379, 449, 540, 542, 553, 557, 559, 561, 567, 570,
	541, 543, 554, 558, 560, 562, 568, 571, 530, 532,
	534, 536, 549, 548, 545, 573, 574, 551, 556, 535,
	547, 552, 565, 572, 569, 529, 533, 537, 546, 564,
	563, 544, 555, 566, 550, 538, 531, 539, 0, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 301, 302, 444, 445,
	314, 315, 642, 643, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 0,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 366, 267, 0, 0, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	583, 282, 273, 269, 250, 317, 385, 428, 518, 422,
	0, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 95, 0, 0, 0, 507, 954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 0, 0, 607, 0,
	0, 0, 265, 321, 272, 264, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 0, 0,
	0, 625, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 253, 0, 471, 426, 602, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 585, 450,
	599, 626, 627, 263, 406, 612, 522, 620, 644, 226,
	260, 420, 506, 605, 494, 397, 581, 582, 329, 493,
	295, 201, 369, 632, 224, 479, 371, 242, 231, 587,
	609, 299, 289, 456, 639, 213, 517, 597, 239, 483,
	0, 0, 647, 247, 504, 215, 594, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	589, 590, 256, 648, 228, 619, 220, 0, 618, 408,
	584, 595, 394, 383, 219, 593, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 606, 0, 208, 0, 499, 608, 649, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 645,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 0,
	0, 0, 0, 0, 398, 0, 591, 592, 668, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 0, 196, 221, 368, 0,
	454, 288, 646, 615, 484, 610, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 628, 480, 301, 302, 444, 445, 314, 315, 642,
	643, 300, 598, 629, 596, 641, 623, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 507, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1450, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	199, 0, 0, 0, 0, 254, 255, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 0, 0, 0, 0,
	0, 398, 0, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 0, 196, 221, 368, 0, 454, 288, 646,
	615, 484, 610, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 1449, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 0, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 366,
	267, 0, 0, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 583, 282, 273, 269, 250, 317,
	385, 428, 518, 422, 0, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 0, 0, 0, 0,
	507, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	0, 0, 607, 0, 0, 0, 265, 321, 272, 264,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 0, 0, 0, 625, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 253, 0, 471, 426,
	602, 233, 284, 458, 432, 469, 440, 287, 0, 0,
	470, 372, 585, 450, 599, 626, 627, 263, 406, 612,
	522, 620, 644, 226, 260, 420, 506, 605, 494, 397,
	581, 582, 329, 493, 295, 201, 369, 632, 224, 479,
	371, 242, 231, 587, 609, 299, 289, 456, 639, 213,
	517, 597, 239, 483, 0, 0, 647, 247, 504, 215,
	594, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 589, 590, 256, 648, 228, 619,
	220, 0, 618, 408, 584, 595, 394, 383, 219, 593,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 606, 0, 208, 0,
	499, 608, 649, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 624, 630, 631, 633, 634,
	635, 636, 637, 640, 638, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 645, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 0, 0, 0, 0, 0, 398, 0,
	591, 592, 668, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 0,
	196, 221, 368, 0, 454, 288, 646, 615, 484, 610,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1044, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 628, 480, 301, 302, 444,
	445, 314, 315, 642, 643, 300, 598, 629, 596, 641,
	623, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 0, 507, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	671, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 199, 0, 0, 0, 0, 254,
	255, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	0, 0, 0, 0, 0, 398, 0, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 0, 196, 221, 368,
	0, 454, 288, 646, 615, 484, 610, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 0, 0, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 366, 267, 0, 0, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 583, 282,
	273, 269, 250, 317, 385, 428, 518, 422, 0, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	0, 0, 0, 0, 507, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 351, 360, 359, 339, 340, 342, 344, 350,
	357, 363, 336, 345, 0, 0, 607, 0, 0, 0,
	265, 321, 272, 264, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 0, 0, 0, 625,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	253, 0, 471, 426, 602, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 585, 450, 599, 626,
	627, 263, 406, 612, 522, 620, 644, 226, 260, 420,
	506, 605, 494, 397, 581, 582, 329, 493, 295, 201,
	369, 632, 224, 479, 371, 242, 231, 587, 609, 299,
	289, 456, 639, 213, 517, 597, 239, 483, 0, 0,
	647, 247, 504, 215, 594, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 589, 590,
	256, 648, 228, 619, 220, 0, 618, 408, 584, 595,
	394, 383, 219, 593, 392, 382, 334, 355, 356, 280,
	307, 447, 375, 448, 306, 308, 404, 403, 405, 207,
	606, 0, 208, 0, 499, 608, 649, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 624,
	630, 631, 633, 634, 635, 636, 637, 640, 638, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 645, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 0, 0, 0,
	0, 0, 398, 0, 591, 592, 668, 384, 486, 601,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	616, 617, 621, 205, 462, 463, 464, 465, 292, 611,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 0, 196, 221, 368, 0, 454, 288,
	646, 615, 484, 610, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 4124, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 628,
	480, 301, 302, 444, 445, 314, 315, 642, 643, 300,
	598, 629, 596, 641, 623, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	0, 507, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 199, 0,
	0, 0, 0, 254, 255, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 0, 0, 0, 0, 0, 398,
	0, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	0, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 0, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 366, 267, 0,
	0, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 583, 282, 273, 269, 250, 317, 385, 428,
	518, 422, 0, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 0, 0, 0, 0, 507, 954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 0, 0,
	607, 0, 0, 0, 265, 321, 272, 264, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	0, 0, 0, 625, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 253, 0, 471, 426, 602, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	585, 450, 599, 626, 627, 263, 406, 612, 522, 620,
	644, 226, 260, 420, 506, 605, 494, 397, 581, 582,
	329, 493, 295, 201, 369, 632, 224, 479, 371, 242,
	231, 587, 609, 299, 289, 456, 639, 213, 517, 597,
	239, 483, 0, 0, 647, 247, 504, 215, 594, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 589, 590, 256, 648, 228, 619, 220, 0,
	618, 408, 584, 595, 394, 383, 219, 593, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 606, 0, 208, 0, 499, 608,
	649, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 645, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 0, 0, 0, 0, 0, 398, 0, 591, 592,
	668, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 0, 196, 221,
	368, 0, 454, 288, 646, 615, 484, 610, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 628, 480, 301, 302, 444, 445, 314,
	315, 642, 643, 300, 598, 629, 596, 641, 623, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 0, 507, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 199, 0, 0, 0, 0, 254, 255, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 0, 0,
	0, 0, 0, 398, 0, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 0, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 0, 0, 376,
	576, 577, 316,
}

var yyPact = [...]int{
	-1000, -1000, 6166, -1000, -549, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2492, 2511, -1000, -1000, -1000, -1000, 2643, -1000, 1011,
	2131, -1000, 2469, 6697, -1000, 55456, 524, -1000, 52508, -450,
	892, 236, 36294, -1000, 188, -1000, 180, 53982, 184, -1000,
	-1000, -1000, -1000, -450, 21554, 2352, 45, 42, 55456, -1000,
	-1000, -1000, -1000, -367, 2607, 2125, -1000, 418, -1000, -1000,
	-1000, -1000, -1000, -1000, 51771, -1000, 1106, -1000, -1000, 2475,
	2466, 2328, 929, 2381, -1000, 2539, 2125, -1000, 21554, 2586,
	2419, 20817, 20817, 466, -1000, -1000, 270, -1000, -1000, 31135,
	55456, 39242, 294, -1000, 2469, -1000, -1000, -1000, 196, -1000,
	387, 2042, -1000, 2040, -1000, 1036, 1060, 391, 828, 469,
	386, 376, 362, 359, 357, 352, 349, 347, 307, -1000,
	946, 946, -219, -221, 1445, 490, 444, 444, 1010, 491,
	2433, 2407, -1000, -1000, 946, 946, 946, 363, 946, 946,
	946, 946, 306, 305, 946, 946, 946, 946, 946, 946,
	946, 946, 946, 946, 946, 946, 946, 946, 946, 946,
	946, 916, 2469, 276, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 55456,
	172, 55456, -1000, 833, 519, -1000, -1000, -455, 1118, 1118,
	90, 1118, 1118, 1118, 1118, 175, 1008, 41, -1000, 173,
	250, 177, 273, 1095, 267, -1000, -1000, 251, 1095, 1887,
	-1000, 933, 265, 165, -1000, 1118, 1118, -1000, 14160, 229,
	14160, 14160, 262, -1000, 2458, -1000, -1000, -1000, -1000, -1000,
	1357, -1000, -1000, -1000, -1000, -30, 489, -1000, -1000, -1000,
	-1000, 53982, 51034, 223, -1000, -1000, 293, 1910, 1338, 21554,
	1421, 927, -1000, -1000, 1223, 904, -1000, -1000, -1000, -1000,
	-1000, 807, -1000, 23765, 23765, 23765, 23765, -1000, -1000, 1785,
	50297, 1785, 1785, 23765, 1785, 23765, 1785, 1785, 1785, 1785,
	21554, 1785, 1785, 1785, 1785, -1000, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, -1000, -1000, -1000, -1000, 1785,
	831, 1785, 1785, 1785, 1785, 1785, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1785, 1785, 1785, 1785, 1785, 1785, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, -1000, -1000, -1000, 1784, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 26713, 1654, 1649, 1647, -1000, 18606, 1785,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 55456, -1000, 1785, 214, 53982, 53982, 406, 1341, -1000,
	-1000, 2539, 2125, -1000, 2607, 2562, 418, -1000, 4194, 2063,
	1669, 1447, 2125, 1970, 55456, -1000, 2053, -1000, -1000, -1000,
	-336, -340, 2301, 1545, 1885, -1000, -1000, -1000, -1000, 1455,
	21554, -1000, -1000, 2630, -1000, 28187, 822, 2626, 49560, -1000,
	466, 466, 2026, 424, 20, -1000, -1000, -1000, -1000, 957,
	35557, -1000, -1000, -1000, -1000, -1000, 1897, 55456, -1000, -1000,
	4085, 53982, -1000, 2130, -1000, 1881, -1000, 2094, 21554, 2140,
	512, 53982, 503, 502, 492, -1000, -65, -1000, -1000, -1000,
	-1000, -1000, -1000, 946, 946, 946, -1000, 303, 2585, 6697,
	6520, -1000, -1000, -1000, 48823, 2129, 53982, -1000, 2127, -1000,
	1028, 881, 861, 861, 53982, -1000, -1000, 54719, 53982, 1024,
	1023, 53982, 53982, 53982, 53982, -1000, 48086, -1000, 47349, 46612,
	1333, 53982, 45875, 45138, 44401, 43664, 42927, -1000, 2275, -1000,
	2158, -1000, -1000, -1000, 54719, 53982, 53982, 54719, 53982, 54719,
	55456, 53982, -1000, -1000, 339, -1000, -1000, 1332, 1307, 1306,
	946, 946, 1294, 1875, 1873, 1871, 946, 946, 1289, 1867,
	37768, 1856, 258, 1285, 1282, 1278, 1350, 1851, 190, 1848,
	1346, 1309, 1277, 53982, 2123, 55456, -1000, 245, 1081, 961,
	954, 2469, 2349, 2020, 487, 507, 53982, 451, 451, 53982,
	-1000, 14903, 55456, 216, -1000, 1840, 21554, -1000, 1104, 1095,
	1095, -1000, -1000, -1000, -1000, -1000, -1000, 1118, 55456, 1104,
	-1000, -1000, -1000, 1095, 1118, 55456, 1118, 1118, 1118, 1118,
	1095, 1095, 1095, 1118, 55456, 55456, 55456, 55456, 55456, 55456,
	55456, 55456, 55456, 14160, 933, 1118, -459, -1000, 1837, -1000,
	-1000, -1000, 2243, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 14160, 14160, -1000, -1000, 2536, -1000, -1000,
	-1000, 2014, -1000, 164, 14, 183, -1000, 42190, 510, 953,
	-1000, 510, -1000, -1000, -1000, 2008, 41453, -1000, -460, -461,
	-462, -463, -1000, -1000, -1000, -466, -467, -1000, -1000, -1000,
	21554, 21554, 21554, 21554, -263, -1000, 1439, 23765, 2384, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 21554, 261, 1178, 23765,
	23765, 23765, 23765, 23765, 23765, 23765, 25239, 24502, 23765, 23765,
	23765, 23765, 23765, 23765, -1000, -1000, 33346, 5123, 5123, 904,
	904, 904, 904, -1000, -176, 1979, 54719, -1000, -1000, -1000,
	820, 21554, 21554, 904, -1000, 1364, 2298, 18606, 21554, 21554,
	21554, 21554, 980, 1338, 54719, 21554, -1000, 1447, -1000, -1000,
	-1000, -1000, 1229, -1000, -1000, 1092, 2404, 2404, 2404, 2404,
	21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554,
	2404, 21554, 209, 209, 736, 21554, 21554, 21554, 21554, 21554,
	21554, 21554, 21554, 17132, 21554, 21554, 23765, 21554, 21554, 21554,
	1447, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554,
	21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554,
	21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554,
	21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554,
	21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554,
	21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554,
	21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554,
	21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554,
	1447, 21554, 1492, 21554, 21554, 21554, 21554, 21554, 21554, 21554,
	16389, 21554, 21554, 21554, 21554, 21554, -1000, -1000, -1000, -1000,
	-1000, -1000, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554,
	1447, 21554, 21554, 21554, 21554, 21554, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1597, 1624, 1483,
	21554, -1000, 1973, -1000, -194, 30398, 21554, 1835, 2625, 2157,
	53982, -1000, -1000, -1000, -1000, 2539, -1000, 2539, 1597, 3091,
	2307, 20817, -1000, -1000, 3091, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1688, -1000,
	55456, 1970, 2527, 53982, -1000, -301, -1000, -320, 2272, 1830,
	332, -1000, 21554, 21554, 1969, -1000, 1494, 55456, -1000, -263,
	-1000, 40716, -1000, -1000, 13417, 55456, 326, 55456, -1000, 29661,
	39979, 289, -1000, 20, 1947, -1000, 23, 11, 17869, 896,
	-1000, -1000, -1000, 1445, 25976, 1732, 896, 93, -1000, -1000,
	-1000, 2094, -1000, 2094, 2094, 2094, 2094, 332, 332, 332,
	332, -1000, -1000, -1000, -1000, -1000, 2116, 2115, -1000, 2094,
	2094, 2094, 2094, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2110, 2110, 2110, 2109, 2109, 2095, 2095, 439, -1000, 21554,
	458, 39242, 2509, 1273, 1756, 245, 453, 2155, 53982, 53982,
	53982, 453, -1000, 1456, 1399, 1396, -1000, -525, 1965, -1000,
	-1000, 2582, -1000, -1000, 902, 1049, 1048, 959, 53982, 221,
	301, -1000, 456, -1000, 39242, 53982, 1022, 861, 53982, -1000,
	53982, -1000, -1000, -1000, -1000, -1000, 53982, -1000, -1000, 1963,
	-1000, 1994, 1127, 1040, 1085, 1019, 1963, -1000, -1000, -182,
	1963, -1000, 1963, -1000, 1963, -1000, 1963, -1000, 1963, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1030, 279,
	-378, 53982, 221, 476, -1000, 475, 33346, -1000, -1000, -1000,
	33346, 33346, -1000, -1000, -1000, -1000, 1829, 1818, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -518, 55456, -1000,
	238, 951, 291, 290, 288, 55456, 416, 2429, 2428, 2416,
	2413, 2412, 2409, 269, 302, 55456, 55456, 451, 2216, 55456,
	2502, 55456, -1000, -1000, -1000, -1000, -1000, 1802, 1797, -1000,
	1338, 55456, -1000, -1000, 1118, 1118, -1000, -1000, 55456, 1118,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1118, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 55456, -1000, -1000, -1000, -1000, 1792,
	-1000, -30, 166, -1000, -1000, 53982, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -117, -1000, 313, 9, 396,
	-1000, -1000, -1000, -1000, -1000, 2533, -1000, 1338, 998, 994,
	-1000, 1785, -1000, -1000, 1312, -1000, -1000, -1000, -1000, -1000,
	1785, 1785, 1785, -1000, -1000, -1000, -1000, -1000, 261, 23765,
	23765, 23765, 1323, 817, 1334, 1354, 1381, 1246, 1246, 1184,
	23765, 1184, 23765, 908, 908, 908, 908, 908, -1000, -1000,
	-1000, -1000, -1000, -1000, 1784, -1000, 1757, -1000, 1785, 54719,
	1822, 16389, 2236, 1487, 1447, 917, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 4246, 1447, 1910, 1447,
	2448, 4242, 986, -1000, 21554, 1447, 4238, -1000, -1000, 1447,
	1447, 21554, -1000, -1000, 21554, 21554, 21554, 21554, 1756, 1756,
	1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 21554, 1756,
	1959, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1957,
	2622, 1760, 1756, 1756, 1756, 1756, 4229, 1756, 1756, 21554,
	1620, -1000, -1000, -1000, 1517, 4220, 1288, 4216, 1756, 1756,
	-1000, 1756, 4212, 4119, 1447, 2939, 2934, 1756, 1756, 1756,
	1756, 1756, 2887, 2868, 1756, 1756, 2859, 1756, 3953, 1756,
	2844, 2769, 2723, 2679, 2675, 2635, 2629, 2553, 2549, 2534,
	2530, 2526, 2515, 2510, 2501, 2440, 2414, 2393, 1756, 1756,
	1756, 3927, 1756, 3901, 1756, 3892, 1756, 1756, 3887, 2346,
	2342, 1447, 1952, -1000, 3582, 1756, 3570, 3559, 3545, 2313,
	3519, 3510, 3492, 1756, 1756, 1756, 2304, 3479, 3475, 3455,
	3449, 3443, 3435, 3413, 3406, 3402, 1756, 1483, 1483, 1483,
	1483, 1483, 3388, -265, 1756, 1447, -1000, -1000, -1000, -1000,
	-1000, 3381, 2281, 3375, 3365, 3356, 3339, 1447, 1785, 819,
	-1000, -1000, 1483, 1447, 1447, 1483, 1483, 3261, 3257, 3093,
	3048, 3029, 3002, 1756, 1756, -1000, 1756, 2996, 2991, 2269,
	2219, 1447, -1000, 1483, 55456, -1000, -451, -1000, -9, 1017,
	1785, -1000, 37768, 1447, -1000, 4416, -1000, 1347, -1000, -1000,
	-1000, -1000, -1000, 34820, 1958, -1000, -1000, -1000, -1000, 1785,
	1771, -1000, -1000, -1000, -1000, 332, 62, 34083, 878, 878,
	121, 1338, 1338, 21554, -1000, -1000, -1000, -1000, -1000, -1000,
	818, 2600, 373, 1785, -1000, 1983, 2836, -1000, -1000, -1000,
	2524, 27450, -1000, -1000, 1785, 1785, 55456, 1974, 1865, -1000,
	816, -1000, 1377, 1947, 20, -1, -1000, -1000, -1000, -1000,
	1338, -1000, 1388, 340, 354, -1000, 462, -1000, -1000, -1000,
	-1000, 2350, 71, -1000, -1000, -1000, 366, 332, -1000, -1000,
	-1000, -1000, -1000, -1000, 1752, 1752, -1000, -1000, -1000, -1000,
	-1000, 1259, -1000, -1000, -1000, -1000, 1258, -1000, -1000, 1257,
	-1000, -1000, 1953, 2191, 458, -1000, -1000, 946, 1739, -1000,
	-1000, 2375, 946, 946, 53982, -1000, -1000, 1703, 2509, 238,
	55456, 985, 2206, -1000, 2155, 2155, 2155, 55456, -1000, -1000,
	-1000, -1000, -1000, -1000, -526, 163, 598, -1000, -1000, -1000,
	5032, 53982, 1768, -1000, 222, -1000, 1661, -1000, 53982, -1000,
	1766, 2108, 53982, 53982, -1000, -1000, -1000, 53982, 1785, -1000,
	-1000, -1000, -1000, 506, 2461, 345, -1000, -1000, -289, -1000,
	-1000, 221, 222, 54719, 53982, 896, -1000, -1000, -1000, -1000,
	-1000, -517, 1764, 498, 227, 567, 55456, 55456, 55456, 55456,
	55456, 55456, 790, -1000, -1000, 29, -1000, -1000, 201, -1000,
	-1000, -1000, -1000, -1000, 201, -1000, -1000, -1000, -1000, -1000,
	286, 472, -1000, 55456, 55456, 945, -1000, -1000, -1000, -1000,
	-1000, 1095, -1000, -1000, 1095, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2455, 55456, 3, -484,
	-1000, -479, 21554, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1238, 442, 1334, 23765, 23765, 2298, 2298, 23765, -1000, -1000,
	-1000, 984, 984, 33346, -1000, 23765, 21554, -1000, -1000, 21554,
	21554, 21554, 970, -1000, 21554, 1146, -1000, 21554, -1000, -265,
	1483, 1756, 1756, 1756, 1756, -265, -265, -265, -265, -265,
	-265, -265, -265, -265, -265, 2005, -1000, 21554, 21554, 21554,
	1447, 341, -1000, -1000, -1000, -265, 21554, -1000, -1000, 2614,
	-1000, 21554, -1000, 33346, 21554, 21554, 21554, -1000, -1000, -1000,
	21554, 21554, -1000, -1000, 21554, -1000, 21554, -1000, -1000, -1000,
	-1000, -1000, -1000, 21554, -1000, 21554, -1000, -1000, -1000, 21554,
	-1000, 21554, -1000, -1000, 21554, -1000, 21554, -1000, 21554, -1000,
	21554, -1000, 21554, -1000, 21554, -1000, 21554, -1000, 21554, -1000,
	21554, -1000, 21554, -1000, 21554, -1000, 21554, -1000, 21554, -1000,
	21554, -1000, 21554, -1000, 21554, -1000, 21554, -1000, 21554, -1000,
	-1000, -1000, 21554, -1000, 21554, -1000, 21554, -1000, -1000, 21554,
	-1000, 21554, -1000, 21554, -1000, 21554, 21554, -1000, 21554, 21554,
	21554, -1000, 21554, 21554, 21554, 21554, -1000, -1000, -1000, -1000,
	21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554, 21554,
	-1000, -1000, -1000, -1000, -1000, -1000, 21554, -1000, 39242, 2,
	-265, 1492, 2, 1492, 23028, 815, 808, 22291, -1000, 21554,
	15646, -1000, -1000, -1000, -1000, -1000, 21554, 21554, 21554, 21554,
	21554, 21554, -1000, -1000, -1000, 21554, 21554, -1000, 21554, -1000,
	21554, -1000, -1000, -1000, -1000, -1000, 1017, -1000, 814, 454,
	861, 53982, -1000, -1000, -1000, -1000, 1946, -1000, 2538, -1000,
	2318, 2316, 2610, 2600, 20817, -1000, 29661, -1000, -1000, 53982,
	-439, -1000, 2337, 2387, 878, 878, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 12674, 2539, 21554, 2194, 54719, 246, -1000,
	28924, 53982, 54719, 29661, 29661, 29661, 29661, 29661, -1000, 2232,
	2231, -1000, 2278, 2256, 2282, 55456, -1000, 1597, 1762, -1000,
	21554, 31872, 1919, 29661, -1000, -1000, 29661, 55456, 11931, -1000,
	-1000, -5, -14, -1000, -1000, -1000, -1000, 1445, -1000, -1000,
	1659, 2523, 2361, -1000, -1000, -1000, -1000, -1000, 1749, -1000,
	1731, 1943, 1726, 1724, 279, -1000, 2138, 2438, 946, 946,
	-1000, 1253, -1000, 1364, 1704, 1678, -1000, -1000, -1000, 493,
	-1000, 2494, 55456, 2183, 2182, 2181, -1000, -541, 1251, 2105,
	2065, 21554, 2100, 2581, 1938, 53982, -1000, -1000, 54719, -1000,
	259, -1000, 458, 53982, -1000, -1000, -1000, 301, 55456, -1000,
	9145, -1000, -1000, -1000, 222, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 55456, 235, -1000, 2099, 1356, -1000, -1000, 2145,
	-1000, -1000, -1000, -1000, -1000, 195, 171, 1675, 194, 1673,
	194, -1000, 55456, 918, 2191, 55456, -1000, -1000, -1000, 1118,
	1118, -1000, -1000, 2437, -1000, 1364, 1756, 23765, 23765, -1000,
	904, -1000, -1000, 440, -244, 2094, 2094, -1000, 2094, 2095,
	-1000, 2094, 152, 2094, 147, 2094, -1000, -1000, 1447, 1447,
	-1000, 1483, 2215, 1205, 2976, -1000, 1338, 21554, 2925, -1000,
	-1000, -265, -265, -265, -265, -265, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -72, 2916, 2424, 1756,
	-1000, 2093, 2092, -1000, 1756, 21554, 1756, 1447, 2197, 1756,
	1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
	1756, 2193, 2187, 2180, 2150, 2120, 2102, 2060, 2054, 1992,
	1987, 1980, 1976, 1971, 1966, 1960, 1948, 1756, 1756, 1944,
	1756, 1870, 1862, -1000, 1338, 1483, 2309, 1483, 1756, 1756,
	2259, 342, 1756, 1721, 1721, 1721, 1721, 1721, 1483, 1483,
	1483, 1483, 1756, 53982, -1000, -265, -1000, -1000, -376, -380,
	-1000, 1447, -265, 1941, 23765, 1756, 23765, 23765, 23765, 1756,
	1447, -1000, 1751, 1747, 2031, 1702, 1756, 1808, 1756, 1756,
	1756, 1687, -1000, 2532, 1785, 2532, 1785, 2532, 1714, 1347,
	55456, -1000, -1000, -1000, -1000, 2600, 2565, -1000, 1940, -1000,
	62, 649, -1000, 2369, 2387, -1000, 2573, 2330, 2570, -1000,
	-1000, -1000, -1000, -1000, 1338, -1000, 2473, 1923, -1000, 948,
	1904, -1000, -1000, 20080, 1717, 2312, 813, 1714, 2001, 2836,
	2167, 2177, 2661, -1000, -1000, -1000, -1000, 2203, -1000, 2190,
	-1000, -1000, 2053, -1000, 1801, 326, 29661, 1906, 1906, -1000,
	812, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1099, 9145,
	2641, -1000, 1672, -1000, 1383, 231, 1244, -1000, -1000, 946,
	946, -1000, 1021, 1014, -1000, 55456, 2087, -1000, 332, 1665,
	332, 1242, -1000, -1000, 1239, -1000, -1000, -1000, -1000, 2083,
	2208, -1000, -1000, -1000, -1000, 55456, -1000, -1000, 55456, 55456,
	55456, 2082, 2568, -1000, 21554, 2066, 947, 1834, 53982, 53982,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 438, 946, -497, 298, 292, 946, 946, 946, -542,
	-1000, -1000, 1660, 1657, -1000, -189, -1000, 21554, -1000, -1000,
	-1000, -1000, -1000, 1203, 1203, 1654, 1649, 1647, -1000, 2053,
	-1000, -1000, -1000, 1653, -1000, -1000, -187, 53982, 53982, 53982,
	53982, -1000, -1000, -1000, 1209, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 904, 1447, 372,
	-196, 1447, -1000, -1000, 332, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 21554, -1000, 21554, -1000, 21554,
	1338, 21554, -1000, -1000, -1000, -1000, -1000, 2539, 1645, 21554,
	21554, -1000, 1228, 1224, -265, 1756, -1000, -1000, -1000, 21554,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 21554, -1000, 21554, -1000, 21554, -1000, 21554,
	-1000, 21554, -1000, 21554, -1000, 21554, -1000, 21554, -1000, 21554,
	-1000, 21554, -1000, 21554, -1000, 21554, -1000, 21554, -1000, 21554,
	-1000, 21554, -1000, 21554, -1000, -1000, 21554, -1000, -1000, -1000,
	21554, -1000, 21554, -1000, 21554, -1000, -1000, -1000, 21554, 299,
	984, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1447, 323, -1000, -1000, -1000, 2606, -1000, 1447,
	21554, 2298, -1000, 2298, 2298, 2298, -1000, -1000, -1000, 21554,
	-1000, 21554, 21554, -1000, 21554, -1000, 21554, -1000, -1000, -1000,
	-1000, 21554, 1785, 2397, 38505, 1785, 38505, 1785, 31872, -1000,
	-1000, 2565, 2593, 2567, 2317, 2325, 2325, 2369, -1000, 2564,
	2551, -1000, 1610, 2548, 1594, 1006, -1000, 54719, 21554, -1000,
	246, 37768, -1000, 403, 53982, 246, 53982, -1000, 2550, -1000,
	-1000, 21554, 2064, -1000, 21554, -1000, -1000, -1000, -1000, 5123,
	2600, 1906, -1000, -1000, 914, -1000, 21554, -1000, 5031, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1586, 1522, -1000,
	-1000, 2058, 21554, -1000, -1000, -1000, 1644, 1625, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2053, -1000, -1000, -1000,
	-1000, 301, -535, 1827, 53982, 1210, -1000, 1643, 1938, 315,
	246, 1520, 946, 946, 946, 1183, 1147, 37768, 1629, -1000,
	53982, 427, -1000, 301, -1000, -222, -223, 1756, -1000, -1000,
	2518, -1000, -1000, 15646, -1000, -1000, 2050, 2147, -1000, -1000,
	-1000, -1000, 2262, -179, -207, -1000, -1000, 1756, 1756, 1756,
	1627, 1447, -1000, 1756, 1756, 1614, 1581, -1000, -1000, 1756,
	1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
	1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1483,
	1681, -1000, 299, 1447, 2175, -1000, -1000, 5123, -1000, -1000,
	2550, 2547, 2, -1000, -1000, 220, 2, 1338, 1002, 1447,
	1447, 1002, 1652, 1756, 1641, 1613, 1756, 1756, 32609, -1000,
	2544, 2537, 1590, -1000, -1000, 38505, 1590, 38505, 1017, 2593,
	-276, 21554, 21554, 2322, 1206, -1000, -1000, -1000, -1000, 1514,
	1498, -1000, 1459, -1000, 2636, -1000, 1338, -1000, 1785, 246,
	-1000, 805, 1904, -1000, 2539, 1338, 53982, 1338, 65, 2550,
	-1000, 1756, -1000, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785, 1785,
	1785, 1785, 1785, 1785, -1000, -1000, 53982, 1790, -1000, -1000,
	2514, 1622, 161, -1000, 1484, 1938, -1000, -1000, 215, -1000,
	21554, -1000, 37768, 1391, 1384, -1000, -1000, -1000, -1000, -542,
	-1000, -1000, -1000, -1000, -1000, -1000, 418, 1936, -1000, 943,
	53982, 55456, -1000, 2246, -1000, -1000, -1000, -1000, 21554, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 21554, -1000, 1447, 2174,
	-1000, -370, -1000, -511, 21554, -265, -1000, -1000, -265, -1000,
	-1000, -1000, -1000, -1000, 21554, -1000, -1000, 21554, -1000, 21554,
	-1000, -1000, 1590, -1000, -1000, -1000, 37031, -1000, 1590, -1000,
	1590, -1000, -276, -1000, 1927, -1000, 53982, 1338, 344, -1000,
	1148, -1000, -1000, -1000, -1000, -1000, 54719, 53982, 1904, 53982,
	-1000, -1000, 1580, 1447, 1785, 2539, -1000, 1561, -1000, 418,
	-1000, 2048, 2065, -1000, -1000, -1000, 19343, -1000, -1000, -1000,
	-1000, -1000, 254, -185, 15646, 11188, 1555, -1000, -183, 1756,
	1483, -1000, -472, -1000, -1000, -1000, -1000, 275, -1000, -1000,
	1910, -1000, -1000, 1607, 1578, 1481, -1000, -1000, -1000, -1000,
	-1000, -1000, -276, -1000, -1000, 2513, -1000, -229, -1000, -1000,
	1903, 1478, -1000, -1000, -1000, 31872, 53245, -1000, -174, 329,
	-185, 21554, 1793, 1447, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -41, -1000, -1000, 801, -1000, -1000, -1000, 2145,
	-201, -1000, -1000, -1000, 295, -487, -303, -312, 23765, -1000,
	21554, -1000, 21554, -1000, 21554, -1000, 53982, 1785, -1000, -1000,
	-1000, 1452, -1000, 4197, -397, 2173, -1000, -146, -1000, -1000,
	-1000, 1098, 1349, -1000, -1000, -1000, -1000, -1000, -1000, 1782,
	53982, -1000, 437, -1000, -1000, 14903, -187, -211, 990, -1000,
	-1000, -1000, -1000, -1000, 2298, 1450, 1446, 1756, -1000, 53982,
	-1000, 53245, -387, 896, 5123, -1000, 2163, 2159, 2618, -1000,
	-1000, -1000, -1000, -1000, -1000, -545, 1426, 237, -1000, -1000,
	-1000, 295, -315, -1000, 21554, -1000, 21554, -1000, 1447, -1000,
	-1000, 2488, 65, -1000, 2631, -1000, 2619, 991, 991, -1000,
	1132, -545, -1000, -1000, -1000, -1000, 1756, 1756, -1000, -398,
	-1000, -1000, -1000, -1000, -1000, 364, 1191, -1000, -1000, -1000,
	-1000, -1000, 5123, -1000, -1000, -1000, 281, 281, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3243, 3240, 27, 5, 37, 36, 3236, 3235, 3234,
	178, 3233, 3232, 3231, 3230, 3217, 3216, 2672, 2668, 2663,
	3215, 3214, 3213, 3212, 3211, 3208, 3207, 3206, 3204, 52,
	94, 101, 87, 212, 223, 3201, 188, 162, 204, 3198,
	3193, 3192, 114, 185, 79, 82, 192, 3191, 3187, 69,
	3186, 3185, 3182, 180, 177, 176, 1082, 3180, 174, 116,
	47, 3179, 3178, 3173, 3172, 3171, 3169, 3168, 3166, 3158,
	3153, 3152, 3149, 3147, 3142, 3141, 3140, 3139, 3138, 279,
	3137, 3136, 15, 3134, 68, 3133, 3129, 3127, 3126, 3119,
	7, 3116, 3112, 10, 42, 58, 3111, 3106, 49, 3105,
	3104, 3103, 3102, 3101, 77, 3100, 12, 3099, 38, 3096,
	3078, 127, 3075, 3074, 3073, 44, 3069, 3067, 3065, 11,
	167, 3062, 3059, 139, 3058, 3057, 3051, 166, 215, 3047,
	2318, 3040, 98, 3038, 3037, 3034, 163, 194, 3032, 123,
	3029, 3028, 3027, 145, 3026, 3288, 3025, 3024, 65, 81,
	169, 3018, 3016, 199, 73, 6, 3003, 20, 21, 3002,
	3001, 72, 67, 2997, 106, 2994, 2990, 93, 100, 2978,
	90, 84, 2976, 2967, 9, 8, 2966, 1, 4, 2,
	119, 2963, 2960, 115, 2959, 2954, 2952, 97, 2951, 2947,
	5314, 2945, 83, 132, 102, 63, 2944, 168, 125, 2942,
	2937, 2936, 2935, 2934, 2932, 48, 2931, 2928, 2925, 137,
	24, 117, 2922, 149, 363, 51, 146, 2919, 207, 78,
	193, 172, 2909, 2906, 135, 134, 2905, 2903, 62, 165,
	195, 2902, 111, 131, 121, 181, 95, 140, 2901, 2893,
	56, 60, 2892, 2890, 2889, 2883, 164, 2882, 2880, 64,
	2876, 54, 2873, 213, 2871, 339, 85, 2864, 179, 161,
	2862, 66, 2860, 2859, 103, 91, 59, 33, 2858, 156,
	159, 129, 190, 2856, 2855, 53, 2854, 2853, 2850, 196,
	327, 2849, 2847, 378, 171, 142, 148, 80, 2846, 267,
	2841, 2838, 2836, 17, 5130, 7036, 184, 26, 158, 2835,
	2828, 1064, 41, 43, 28, 2826, 209, 2825, 210, 2823,
	2822, 2821, 230, 220, 110, 157, 57, 2818, 2817, 2816,
	2810, 40, 2809, 2808, 2807, 2806, 2803, 2802, 35, 34,
	32, 71, 201, 61, 29, 96, 170, 153, 74, 2800,
	2798, 2792, 124, 89, 2791, 155, 152, 128, 109, 2786,
	173, 143, 118, 2785, 105, 31, 2782, 2779, 2778, 2777,
	92, 2774, 2750, 2745, 2741, 151, 144, 126, 75, 2733,
	76, 120, 150, 147, 50, 2729, 39, 2728, 2724, 30,
	186, 25, 2713, 45, 108, 113, 2712, 6697, 2711, 14,
	263, 160, 2710, 2709, 13, 16, 23, 2706, 2702, 2698,
	2697, 133, 2696, 2695, 2694, 2693, 22, 46, 19, 18,
	112, 136, 70, 2692, 2677, 141, 2676, 2674, 2673, 0,
	1039, 130, 2651, 197,
}

//line sql.y:8726
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 417, 418, 418, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 261, 387, 259, 259, 28, 74, 36, 36, 35,
	35, 38, 38, 37, 31, 31, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	29, 29, 29, 29, 30, 30, 30, 30, 30, 15,
	16, 34, 34, 17, 17, 109, 109, 18, 19, 19,
	19, 19, 421, 421, 185, 185, 183, 183, 184, 184,
	264, 264, 20, 268, 268, 270, 270, 270, 270, 260,
	260, 260, 21, 21, 269, 269, 271, 271, 271, 274,
	274, 274, 274, 315, 315, 315, 22, 22, 22, 22,
	22, 129, 129, 389, 389, 388, 383, 383, 382, 382,
	381, 386, 386, 385, 385, 384, 40, 41, 50, 50,
	50, 50, 51, 52, 390, 390, 356, 57, 57, 56,
	56, 56, 56, 56, 56, 58, 58, 54, 54, 53,
	53, 55, 55, 358, 358, 344, 344, 357, 357, 357,
	357, 357, 357, 357, 343, 343, 140, 140, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 405, 405, 405, 404, 404,
	239, 239, 239, 239, 239, 239, 239, 239, 149, 149,
	161, 161, 161, 161, 161, 161, 147, 147, 148, 146,
	146, 146, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 160, 160, 155, 155, 155, 157, 157, 156, 156,
	156, 158, 158, 406, 406, 406, 406, 321, 321, 321,
	321, 324, 324, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 323, 323, 323, 323, 323, 323, 323, 325,
	325, 325, 325, 325, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 326, 326, 326, 326, 326,
	327, 327, 327, 327, 327, 327, 327, 327, 342, 342,
	331, 331, 336, 336, 337, 337, 338, 338, 338, 339,
	339, 339, 340, 340, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 335, 335, 334, 334, 334, 345, 370,
	370, 369, 369, 367, 367, 367, 367, 367, 367, 367,
	367, 354, 354, 364, 364, 364, 364, 364, 353, 353,
	349, 349, 349, 350, 350, 351, 351, 348, 348, 352,
	352, 366, 366, 365, 365, 346, 346, 347, 347, 372,
	407, 407, 407, 407, 407, 408, 408, 373, 397, 399,
	399, 399, 398, 398, 395, 396, 394, 394, 394, 394,
	394, 84, 84, 84, 287, 287, 288, 288, 362, 362,
	361, 361, 361, 363, 363, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 282, 282, 282, 393,
	393, 393, 393, 393, 393, 392, 392, 392, 359, 359,
	359, 359, 391, 391, 59, 59, 219, 219, 410, 410,
	412, 412, 412, 47, 47, 47, 47, 47, 47, 46,
	46, 46, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 48, 48, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 111, 111, 112,
	112, 112, 112, 114, 114, 114, 375, 375, 60, 60,
	3, 3, 173, 175, 176, 176, 174, 174, 174, 174,
	174, 174, 62, 62, 61, 61, 178, 177, 179, 179,
	179, 1, 1, 2, 2, 4, 4, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 341,
	341, 341, 374, 374, 376, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 117, 116, 116, 115, 118,
	118, 118, 118, 118, 118, 118, 118, 378, 378, 378,
	63, 63, 379, 328, 329, 330, 5, 6, 355, 377,
	125, 125, 24, 39, 39, 25, 25, 25, 25, 26,
	26, 64, 67, 67, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 292, 292,
	281, 281, 290, 290, 280, 280, 306, 306, 306, 283,
	283, 283, 284, 284, 403, 403, 403, 277, 277, 66,
	66, 66, 307, 307, 307, 307, 69, 69, 413, 413,
	414, 414, 415, 415, 415, 70, 71, 71, 310, 310,
	311, 311, 72, 73, 85, 85, 85, 85, 85, 86,
	86, 86, 86, 110, 110, 110, 10, 10, 10, 10,
	81, 81, 81, 9, 9, 11, 68, 68, 75, 400,
	400, 401, 402, 402, 402, 402, 76, 78, 27, 27,
	27, 27, 27, 27, 135, 135, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 130, 130,
	130, 124, 124, 422, 79, 80, 80, 128, 128, 128,
	121, 121, 121, 127, 127, 127, 12, 12, 13, 263,
	263, 14, 14, 134, 134, 133, 133, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 131, 131,
	132, 132, 132, 132, 299, 299, 299, 298, 298, 167,
	167, 169, 168, 168, 170, 170, 171, 171, 171, 171,
	217, 217, 193, 193, 256, 256, 257, 257, 255, 255,
	262, 262, 258, 258, 258, 258, 265, 265, 172, 172,
	172, 172, 180, 180, 181, 181, 182, 182, 309, 309,
	304, 304, 304, 303, 303, 186, 186, 186, 188, 187,
	187, 187, 187, 189, 189, 191, 191, 190, 190, 192,
	197, 197, 196, 196, 194, 194, 194, 194, 194, 194,
	195, 195, 195, 195, 198, 198, 145, 145, 145, 145,
	145, 145, 145, 145, 411, 411, 159, 159, 159, 159,
	159, 159, 159, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 246, 246, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 222, 222, 221, 221,
	87, 87, 87, 88, 88, 89, 89, 89, 89, 89,
	90, 90, 90, 90, 90, 90, 90, 92, 92, 91,
	91, 212, 212, 296, 296, 93, 94, 94, 95, 95,
	98, 98, 97, 96, 96, 102, 102, 99, 99, 101,
	101, 100, 103, 103, 104, 105, 105, 278, 278, 199,
	199, 208, 208, 208, 208, 200, 200, 201, 201, 201,
	201, 201, 201, 209, 209, 209, 216, 210, 210, 206,
	206, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 164, 164, 164, 164, 227,
	227, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 152, 152, 165, 165,
	165, 165, 166, 166, 166, 166, 166, 166, 166, 317,
	317, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 423,
	423, 332, 332, 332, 207, 207, 207, 207, 207, 126,
	126, 126, 126, 126, 314, 314, 314, 318, 318, 318,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 319, 319, 225, 225, 122,
	122, 223, 223, 224, 226, 226, 218, 218, 218, 218,
	220, 220, 203, 203, 203, 228, 228, 320, 320, 229,
	229, 106, 107, 107, 108, 108, 230, 230, 232, 231,
	231, 233, 234, 234, 234, 235, 235, 236, 236, 236,
	49, 49, 49, 49, 49, 44, 44, 44, 44, 45,
	45, 45, 45, 137, 137, 137, 137, 139, 139, 138,
	138, 82, 82, 83, 83, 83, 143, 143, 144, 144,
	144, 141, 141, 142, 142, 253, 253, 253, 253, 253,
	253, 253, 237, 237, 237, 244, 244, 244, 240, 240,
	242, 242, 242, 243, 243, 243, 241, 250, 250, 252,
	252, 251, 251, 247, 247, 248, 248, 249, 249, 249,
	245, 245, 202, 202, 202, 202, 202, 254, 254, 254,
	254, 308, 308, 308, 266, 266, 213, 213, 215, 215,
	214, 214, 163, 267, 267, 275, 272, 272, 273, 273,
	300, 300, 300, 276, 276, 289, 289, 285, 285, 286,
	286, 279, 279, 291, 291, 291, 77, 211, 211, 371,
	371, 368, 295, 295, 297, 297, 301, 301, 305, 305,
	302, 302, 8, 416, 416, 416, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 419, 420, 312, 313, 313, 313,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 5,
	7, 10, 9, 7, 8, 1, 1, 10, 11, 9,
	8, 8, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 1, 3, 3, 3, 3, 3, 1,
	1, 2, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 6,
	10, 7, 5, 5, 5, 7, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 4, 5, 5, 3, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 2, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 3, 3, 5, 2, 3, 3, 2, 3, 4,
	4, 4, 3, 4, 4, 5, 3, 5, 0, 1,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 1, 1, 2,
	1, 3, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 3, 2, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 4, 4, 4, 2, 2, 3, 1,
	3, 2, 1, 2, 1, 2, 2, 4, 3, 3,
	6, 4, 7, 6, 1, 3, 2, 2, 2, 2,
	1, 1, 1, 3, 2, 1, 1, 1, 0, 1,
	1, 0, 3, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 1, 0, 1, 1, 5, 5, 4, 0,
	2, 4, 4, 0, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 3, 1,
	1, 2, 3, 7, 0, 3, 0, 1, 1, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 1, 1, 2, 6, 5, 6, 6, 5, 5,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 3, 6, 1, 1, 3, 4, 3, 4,
	4, 4, 1, 3, 4, 5, 6, 3, 4, 5,
	6, 3, 4, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 5, 5, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 7, 7, 6, 6,
	2, 2, 5, 6, 3, 3, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 4, 2, 4, 0, 1, 2,
	5, 0, 3, 0, 1, 4, 4, 2, 1, 0,
	0, 1, 1, 2, 2, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 5, 1, 3, 0, 3, 1,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	6, 4, 4, 8, 8, 6, 8, 6, 5, 4,
	10, 2, 2, 1, 2, 2, 2, 2, 2, 5,
	6, 6, 6, 6, 6, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 8, 4, 8, 8, 6,
	5, 4, 4, 4, 5, 7, 4, 4, 7, 4,
	4, 6, 6, 6, 8, 6, 6, 4, 4, 3,
	4, 6, 6, 4, 4, 6, 4, 6, 4, 4,
	4, 4, 4, 4, 6, 4, 6, 4, 4, 4,
	6, 4, 6, 4, 4, 6, 4, 6, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 4, 4, 6,
	4, 6, 4, 8, 6, 4, 4, 6, 4, 6,
	8, 4, 6, 8, 4, 4, 6, 8, 6, 4,
	6, 6, 8, 10, 7, 8, 8, 9, 4, 4,
	4, 4, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 4, 4, 4, 4, 4, 4, 6, 4,
	6, 5, 9, 6, 9, 8, 6, 8, 8, 8,
	6, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 6, 8, 10, 12, 14, 6, 8, 8, 10,
	12, 14, 6, 8, 10, 12, 6, 8, 4, 4,
	3, 4, 6, 6, 4, 6, 4, 6, 8, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 1, 3, 5,
	1, 1, 1, 2, 2, 0, 4, 0, 2, 0,
	2, 2, 1, 3, 0, 1, 0, 1, 3, 1,
	3, 2, 0, 1, 1, 0, 1, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 1, 0, 1, 2, 3, 4, 2, 3,
	4, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 3, 1, 6, 5, 4, 1, 3, 3,
	5, 0, 2, 5, 0, 5, 1, 3, 1, 2,
	3, 4, 1, 1, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -417, -79, -422, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -64, -67,
	-65, -66, -69, -70, -71, -72, -73, -9, -11, -68,
	-27, -28, -74, -75, -76, -77, -78, -12, -13, -14,
	-8, -32, -31, -30, 13, 14, -109, -35, 35, -40,
	-50, 239, -51, -41, 240, -52, 242, 241, 279, 243,
	392, 272, 83, 328, 329, 331, 332, 333, 334, -110,
	699, 277, 278, 245, 39, 51, 36, 37, 40, 249,
	285, 286, 248, 145, -33, -36, 12, -419, 15, 482,
	274, 273, 31, -34, 592, 95, -80, -418, 747, -253,
	-237, 26, 36, 32, -236, -232, -128, -237, 24, 22,
	11, -79, -79, -79, 16, 17, -79, -356, -358, 95,
	172, 95, -79, -57, -56, -54, -53, -55, -58, 34,
	-47, -48, -380, -46, -43, 244, 241, 289, 135, 136,
	279, 280, 281, 243, 263, 278, 282, 277, 298, -42,
	90, 36, 592, 595, -363, 240, 246, 247, 242, 483,
	138, 137, 84, -360, 387, 626, 717, -58, 719, 110,
	113, 718, 50, 253, 720, 721, 722, 633, 723, 262,
	724, 725, 726, 727, 733, 674, 734, 735, 736, 139,
	11, -79, -305, -301, 100, -294, 589, 265, 624, 436,
	625, 314, 90, 47, 42, 528, 599, 384, 387, 626,
	513, 717, 393, 328, 344, 338, 518, 519, 520, 367,
	359, 590, 627, 600, 317, 266, 302, 711, 357, 148,
	719, 321, 628, 280, 394, 395, 629, 396, 110, 331,
	433, 732, 320, 630, 730, 113, 718, 336, 88, 512,
	57, 714, 50, 275, 441, 442, 355, 248, 351, 720,
	303, 631, 602, 296, 138, 135, 739, 39, 347, 56,
	33, 729, 137, 55, 721, 163, 632, 722, 633, 398,
	374, 705, 54, 399, 281, 634, 93, 286, 594, 325,
	713, 400, 533, 348, 401, 313, 728, 245, 635, 324,
	694, 686, 687, 402, 403, 706, 379, 375, 380, 535,
	636, 425, 517, 404, 690, 691, 746, 58, 637, 638,
	707, 136, 639, 87, 723, 89, 342, 343, 640, 311,
	264, 538, 539, 427, 371, 495, 127, 502, 503, 120,
	121, 498, 122, 504, 123, 128, 505, 506, 507, 496,
	124, 117, 497, 508, 509, 372, 373, 125, 510, 119,
	118, 499, 501, 126, 511, 262, 38, 405, 591, 315,
	64, 319, 290, 428, 52, 377, 743, 51, 701, 540,
	641, 704, 370, 366, 492, 59, 642, 643, 644, 645,
	514, 724, 369, 341, 365, 738, 4, 308, 487, 515,
	725, 68, 247, 382, 381, 383, 297, 424, 362, 646,
	647, 648, 269, 91, 649, 352, 25, 650, 651, 406,
	304, 652, 62, 653, 654, 431, 278, 655, 60, 726,
	45, 656, 283, 740, 727, 657, 658, 659, 700, 660,
	285, 661, 408, 662, 688, 689, 407, 376, 378, 541,
	292, 409, 392, 250, 593, 663, 326, 346, 282, 731,
	664, 270, 529, 530, 531, 532, 712, 537, 536, 284,
	289, 277, 432, 271, 665, 666, 667, 668, 669, 318,
	685, 670, 671, 332, 597, 733, 493, 49, 672, 673,
	674, 675, 676, 312, 307, 426, 435, 67, 92, 389,
	677, 678, 710, 340, 337, 43, 305, 99, 473, 475,
	476, 477, 478, 479, 474, 481, 679, 329, 61, 734,
	735, 736, 299, 737, 521, 522, 523, 524, 13, 575,
	558, 586, 559, 576, 560, 569, 561, 577, 585, 587,
	542, 550, 543, 551, 581, 564, 578, 570, 563, 562,
	584, 567, 571, 544, 552, 582, 568, 545, 553, 546,
	554, 547, 555, 580, 579, 572, 583, 548, 556, 574,
	549, 557, 573, 565, 566, 444, 744, 745, 516, 411,
	139, 309, 310, 53, 363, 291, 680, 322, 681, 353,
	354, 489, 490, 368, 339, 364, 697, 330, 695, 293,
	412, 494, 279, 682, 434, 306, 385, 131, 390, 323,
	598, 534, 298, 413, 709, 596, 525, 526, 361, 358,
	300, 527, 683, 699, 414, 254, 294, 295, 684, 696,
	415, 416, 316, 417, 418, 419, 420, 421, 423, 327,
	422, 698, 692, 693, 301, 472, 595, 335, 356, 391,
	454, 455, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 491, 252,
	-79, 252, -190, -301, -130, 701, 703, 191, -272, 395,
	-290, 397, 410, 405, 415, 403, -281, 406, 408, 292,
	-403, 425, 252, 412, 239, 398, 407, 416, 417, 316,
	423, 418, 327, 422, 301, 419, 420, 421, -387, 191,
	722, 737, 330, 148, 360, 402, 400, 426, 701, 100,
	-307, 100, 101, 102, -294, 330, -310, 335, -295, -387,
	-294, 333, -79, -79, -312, -312, -130, -210, -145, 156,
	-159, -261, -162, 101, -150, -153, -204, -205, -206, -207,
	-160, -220, -259, 180, 181, 188, 157, -216, -163, 29,
	588, 484, 483, 191, 34, 234, 77, 78, 486, 487,
	159, 63, 15, 449, 450, -161, 439, 440, 451, 445,
	446, 512, 514, 515, 516, 513, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 517, 528, 489, 490,
	129, 491, 117, 119, 118, 127, 128, 492, 493, 494,
	357, 540, 541, 535, 538, 539, 537, 536, 372, 373,
	495, 558, 559, 563, 562, 560, 561, 564, 567, 568,
	569, 570, 571, 572, 574, 573, 565, 566, 543, 542,
	544, 545, 546, 547, 548, 549, 551, 550, 552, 553,
	554, 555, 556, 557, 575, 576, 577, 578, 579, 581,
	580, 585, 584, 582, 583, 587, 586, 496, 497, 120,
	121, 122, 123, 124, 125, 126, 498, 501, 499, 500,
	502, 503, 504, 509, 510, 505, 506, 507, 508, 511,
	383, 381, 382, 378, 377, 376, -89, -102, 615, 614,
	-103, 436, 441, 442, 444, -151, -152, -165, -166, -295,
	-301, 257, 438, 251, 186, 482, -154, -148, -218, 116,
	102, -31, -214, 437, 447, 448, 452, 443, 453, 601,
	603, 618, 619, 621, 606, 611, 610, 613, 529, 530,
	531, 532, 533, 534, 686, 687, 688, 689, 690, 691,
	692, 693, -387, -294, 100, -157, -155, -199, 103, 108,
	111, 112, 114, -409, 275, 353, 354, 130, -419, 715,
	-156, 105, 106, 107, 132, 133, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 233, 98, 104,
	50, 411, 411, -190, -79, -79, -79, -79, -416, 718,
	593, -230, -128, -232, -33, -31, -419, 12, -79, -31,
	-32, -30, -36, -38, 620, -37, -301, 109, -237, -253,
	16, 67, 175, 48, 56, -235, -236, -34, -31, -145,
	23, 41, 27, -132, 182, -145, -301, -132, -279, 256,
	-79, -79, -268, -315, 330, -270, 426, 701, 425, -260,
	-273, 100, -259, -272, 424, 101, -357, 172, -343, -347,
	-295, 267, -373, 263, -190, -366, -365, -295, -419, -129,
	-289, 253, 261, 260, 149, -390, 152, 309, 438, 251,
	-53, -54, -55, -272, 190, 721, -111, 284, 288, 96,
	96, -347, -346, -345, -391, 288, 267, -372, -364, 259,
	268, -353, 260, 261, -348, 253, 150, -391, -348, 258,
	268, 263, 267, 288, 288, 139, 288, 139, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 283, -354, 164,
	-354, 596, 596, -360, -391, 263, 253, -391, -391, 259,
	-291, -348, 255, 28, 255, 38, 38, -354, -354, -354,
	-272, 190, -354, -354, -354, -354, 296, 296, -354, -354,
	-354, -354, -354, -354, -354, -354, -354, -354, -354, -354,
	-354, -354, -354, -354, -354, 252, -390, -137, 422, 316,
	90, -56, 298, -39, -190, -289, 253, 254, -390, 285,
	-190, 235, 252, 704, -283, 172, 19, -283, -280, 411,
	409, 396, 401, -283, -283, -283, -283, 299, 394, -349,
	253, 38, 264, 411, 299, 394, 299, 300, 299, 300,
	404, 414, 299, -306, 18, 175, 438, 399, 403, 292,
	252, 293, 254, 413, 300, -306, 98, -284, 172, 299,
	411, 405, 295, -283, -283, -313, -419, -297, -295, -293,
	244, 41, 155, 28, 30, 158, 191, 142, 23, 159,
	40, 246, 360, 263, 190, 259, 483, 239, 81, 601,
	439, 446, 437, 445, 449, 485, 486, 438, 397, 34,
	17, 603, 31, 273, 27, 44, 184, 241, 162, 604,
	276, 29, 274, 129, 133, 606, 26, 84, 268, 18,
	261, 46, 20, 607, 608, 21, 74, 257, 256, 175,
	253, 79, 15, 234, 32, 171, 75, 609, 150, 145,
	610, 611, 612, 613, 143, 77, 172, 24, 741, 447,
	448, 36, 702, 588, 287, 186, 82, 65, 703, 156,
	443, 614, 615, 130, 616, 134, 85, 708, 152, 22,
	80, 48, 617, 288, 618, 258, 742, 619, 429, 620,
	173, 242, 482, 78, 174, 715, 621, 716, 251, 410,
	12, 488, 35, 272, 260, 73, 72, 141, 76, 453,
	622, 252, 161, 255, 144, 132, 11, 149, 37, 16,
	83, 86, 450, 451, 452, 63, 140, 592, 160, 19,
	623, 430, 154, -387, 704, -313, -313, 299, 35, 101,
	-413, -414, -415, 592, 429, 255, -295, -190, -85, 694,
	243, -86, 700, 41, 250, -135, 411, -123, 191, 722,
	705, 706, 707, 704, 408, 712, 710, 708, 299, 709,
	96, 152, 154, 155, 4, -145, 171, -200, -201, 170,
	164, 165, 166, 167, 168, 169, 176, 175, 156, 158,
	172, -246, 153, 177, 178, 179, 180, 181, 182, 183,
	185, 184, 186, 187, 173, 174, 190, 237, 238, -153,
	-153, -153, -153, -216, -222, -221, -419, -218, -387, -294,
	-301, -419, -419, -153, -278, -419, -150, -419, -419, -419,
	-419, -419, -225, -145, -419, -419, -423, -419, -423, -423,
	-423, -332, -419, -332, -332, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	235, -419, -419, -419, -419, -419, -332, -332, -332, -332,
	-332, -332, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, 98, 112, 108, 111,
	103, -220, 114, 98, 98, 98, 98, -31, -32, -210,
	-419, -312, -400, -401, -193, -190, -419, 316, -295, -295,
	285, 105, -235, -34, -31, -230, -236, -232, -31, -79,
	-121, -134, 69, 70, -133, -136, 27, 44, 74, 76,
	99, 72, 73, 71, 41, -420, 97, -420, -253, -420,
	96, -38, -256, 95, 648, 678, 648, 678, 67, 49,
	98, 98, 96, 25, -231, -233, -145, 18, -299, 4,
	-298, 28, -295, 98, 235, 18, -191, 32, -190, -279,
	-279, 96, 100, 330, -269, -271, 427, 429, 164, -300,
	-295, 98, 34, 97, 96, -190, -321, -324, -326, -325,
	-327, -322, -323, 357, 358, 191, 361, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 374, 35, 275, 353,
	354, 355, 356, 375, 376, 377, 378, 380, 381, 382,
	383, 338, 359, 590, 339, 340, 341, 342, 343, 344,
	346, 347, 350, 348, 349, 351, 352, -296, -295, 95,
	97, 96, -331, 95, -145, -137, 252, -295, 253, 253,
	253, -79, 482, -354, -354, -354, 283, 23, -46, -43,
	-380, 22, -42, -43, 244, 135, 136, 241, 95, -343,
	95, -352, -296, -295, 95, 150, 258, 149, -351, -348,
	-351, -352, -295, -218, -295, 150, 150, -295, -295, -265,
	-295, -265, -265, 41, -265, 41, -265, 41, 105, -295,
	-265, 41, -265, 41, -265, 41, -265, 41, -265, 41,
	34, 87, 88, 89, 34, 91, 92, 93, -218, -295,
	-295, -218, -343, -218, -190, -295, -272, 105, 105, 105,
	-354, -354, 105, 98, 98, 98, -354, -354, 105, 98,
	-303, -301, 98, 98, -392, 269, 313, 315, 105, 105,
	105, 105, 34, 98, -393, 34, 729, 728, 730, 731,
	732, 98, 105, 34, 105, 34, 105, -295, 95, -190,
	-143, 303, 239, 241, 244, 85, 98, 319, 320, 317,
	322, 323, 324, 164, 50, 96, 255, 252, -295, -285,
	257, -285, -295, -302, -301, -293, -190, 255, 393, 98,
	-145, -350, 18, 175, -306, -306, -283, -190, -350, -306,
	-283, -190, -283, -283, -283, -283, -306, -306, -306, -283,
	-301, -301, -190, -190, -190, -190, -190, -190, -190, -313,
	-284, -283, 704, 98, -277, 18, 85, -313, -313, -292,
	26, 96, 336, 430, 431, -311, 333, -81, -295, 98,
	-10, -29, -18, -17, -19, 164, -10, 96, 592, -183,
	-190, 704, 704, 704, 704, 704, 704, -145, -145, -145,
	-145, 616, -208, -411, 156, 132, 133, 130, 131, -162,
	42, 43, 41, -145, -209, -214, -216, 115, 175, 158,
	172, -246, -150, -153, -150, -150, -150, -150, -150, -150,
	234, -150, 234, -150, -150, -150, -150, -150, -150, -314,
	-295, 98, 191, -158, -157, 114, -409, -158, 589, 96,
	-221, 235, -145, -145, -387, -119, 455, 456, 457, 458,
	460, 461, 462, 465, 466, 470, 471, 454, 472, 459,
	464, 467, 468, 469, 463, 356, -145, -211, -210, -211,
	-145, -145, -223, -224, 160, -218, -145, -420, -420, 105,
	182, -127, 27, 44, -127, -127, -127, -127, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -127, -145,
	-120, 454, 472, 459, 464, 467, 468, 469, 463, 356,
	473, 474, 475, 476, 477, 478, 479, 480, 481, -120,
	-119, -145, -145, -145, -145, -145, -145, -145, -145, -87,
	-145, 142, 143, 144, -210, -145, -150, -145, -145, -145,
	-420, -145, -145, -145, -211, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -386, -385, -384, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -210, -210, -210,
	-210, -210, -145, -420, -145, -164, -148, 105, -261, 114,
	101, -145, -145, -145, -145, -145, -145, -211, -297, -302,
	-293, -294, -210, -211, -211, -210, -210, -145, -145, -145,
	-145, -145, -145, -145, -145, -420, -145, -145, -145, -145,
	-145, -253, -420, -210, 96, -402, 429, 430, 702, -304,
	288, -303, 28, -211, 98, 18, -263, 86, -295, -235,
	-235, 69, 70, 65, -131, -132, -136, -420, -37, 28,
	-255, -295, 641, 641, 68, 98, -333, -272, 384, 385,
	191, -145, -145, 96, -234, 30, 31, -190, -298, 182,
	-302, -190, -264, 288, -190, -168, -170, -171, -172, -193,
	-217, -419, -173, -31, 612, 609, 18, -183, -184, -192,
	-301, -270, -315, -269, 96, 428, 430, 431, 85, 134,
	-145, -334, 190, -362, -361, -360, -343, -345, -346, -347,
	97, -334, -339, 390, 389, -331, -331, -331, -331, -331,
	-333, -333, -333, -333, 95, 95, -331, -331, -331, -331,
	-336, 95, -336, -336, -337, -336, 95, -337, -338, 95,
	-338, -373, -145, -370, -369, -367, -368, 262, 110, 684,
	640, 592, 633, 674, 86, -365, -234, 105, -420, -143,
	-286, 257, -371, -368, -295, -295, -295, -286, 100, 98,
	100, 98, 100, 98, -112, -60, -1, 741, 742, 743,
	96, 23, -344, -343, -59, 313, -376, -377, 288, -372,
	-366, -352, 150, -351, -352, -352, -295, 96, 32, 139,
	139, 139, 139, 592, 241, 35, -287, 632, 156, 684,
	640, -343, -59, 255, 255, -314, -314, -314, 98, 98,
	-282, 737, -183, -139, 305, 164, 294, 294, 252, 307,
	252, 307, -190, 318, 321, 319, 320, 317, 322, 323,
	324, 41, 41, 41, 41, 41, 41, 306, 308, 310,
	296, -190, -190, -285, 85, -185, -190, 29, -301, 98,
	98, -190, -283, -283, -190, -283, -283, -190, 98, -415,
	337, -295, 371, 695, 697, -123, 429, 96, 592, 26,
	-124, 26, -419, -411, 132, 133, -216, -216, -216, -209,
	-150, -153, -150, 155, 276, -150, -150, -419, -218, -420,
	-297, 28, 96, 86, -420, 180, 96, -420, -420, 96,
	18, 96, -226, -224, 162, -145, -420, 96, -420, -420,
	-210, -145, -145, -145, -145, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -210, -420, 96, 96, 18,
	-318, 28, -420, -420, -420, -420, 96, -420, -420, -225,
	-420, 18, -420, 86, 96, 175, 96, -420, -420, -420,
	96, 96, -420, -420, 96, -420, 96, -420, -420, -420,
	-420, -420, -420, 96, -420, 96, -420, -420, -420, 96,
	-420, 96, -420, -420, 96, -420, 96, -420, 96, -420,
	96, -420, 96, -420, 96, -420, 96, -420, 96, -420,
	96, -420, 96, -420, 96, -420, 96, -420, 96, -420,
	96, -420, 96, -420, 96, -420, 96, -420, 96, -420,
	-420, -420, 96, -420, 96, -420, 96, -420, -420, 96,
	-420, 96, -420, 96, -420, 96, 96, -420, 96, 96,
	96, -420, 96, 96, 96, 96, -420, -420, -420, -420,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	-420, -420, -420, -420, -420, -420, 96, -94, 617, -420,
	-420, 96, -420, 96, 96, 96, 96, 96, -420, -419,
	235, -420, -420, -420, -420, -420, 96, 96, 96, 96,
	96, 96, -420, -420, -420, 96, 96, -420, 96, -420,
	96, -420, -401, 701, 430, -197, -196, -194, 83, 256,
	84, -419, -303, -420, -158, -261, -262, -261, -203, -295,
	105, 114, -237, -167, 96, -169, 18, -216, 97, 96,
	-333, -241, -247, -280, -295, 98, 191, -335, 191, -335,
	384, 385, -233, 235, -198, 19, -202, 35, 63, -29,
	-419, -419, 35, 96, -186, -188, -187, -189, 75, 79,
	81, 76, 77, 78, 82, -309, 28, -31, -168, -31,
	-419, -190, -183, -421, 18, 86, -421, 96, 235, -271,
	-274, 432, 429, 435, -387, 98, -111, 96, -360, -347,
	-238, -140, 46, -340, 391, -333, 600, -333, -342, 98,
	-342, 105, 105, 105, 97, -49, -44, -45, 36, 90,
	-367, -354, 98, 45, -354, -354, -295, 97, -234, -139,
	-190, 156, 85, -371, -371, -371, -301, -2, 740, 746,
	150, 95, 396, 22, -255, 96, 97, -219, 314, 97,
	-113, -295, 97, 95, -352, -352, -295, -419, 252, 34,
	34, 684, 640, 632, -59, -219, -218, -295, -334, 739,
	738, 97, 254, 312, -144, 449, -141, 98, 100, -190,
	-190, -190, -190, -190, -190, 244, 241, 419, -410, 325,
	-410, 297, 255, -183, -190, 96, -84, 271, 266, -306,
	-306, 36, -190, 429, 713, 711, -145, 155, 276, -162,
	-153, -119, -119, -150, -316, 191, 357, 275, 355, 351,
	371, 362, 389, 353, 390, 348, 347, 346, -316, -314,
	-150, -210, -145, -145, -145, 163, -145, 161, -145, -95,
	-94, -420, -420, -420, -420, -420, -95, -95, -95, -95,
	-95, -95, -95, -95, -95, -95, -230, -145, -145, -145,
	-420, 191, 357, -95, -145, 18, -145, -314, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -384, -145, -210, -145, -210, -145, -145,
	-145, -145, -145, -385, -385, -385, -385, -385, -210, -210,
	-210, -210, -145, -419, -295, -98, -97, -96, 667, 256,
	-94, -164, -98, -164, 234, -145, 234, 234, 234, -145,
	-211, -297, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -194, -348, 294, -348, 294, -348, -265, 96,
	-276, 26, 18, 63, 63, -167, -198, -132, -168, -295,
	-244, 694, -250, 52, -248, -249, 53, -245, 54, 62,
	-335, -335, 182, -235, -145, -266, 85, -267, -275, -218,
	-213, -215, -214, -419, -254, -420, -295, -265, -267, -170,
	-171, -171, -170, -171, 75, 75, 75, 80, 75, 80,
	75, -187, -301, -420, -145, -304, 86, -168, -168, -192,
	-301, 182, 429, 433, 434, -360, -408, 130, 156, 34,
	85, 387, 110, -406, 190, 629, 679, 684, 640, 633,
	674, -407, 258, 149, 150, 270, 28, 47, 97, 96,
	97, 96, 97, 97, 96, -288, -287, -45, -44, -354,
	-354, 105, -387, 98, 98, 254, 29, -190, 85, 85,
	85, -114, 744, 105, 95, -3, 90, -145, 95, 23,
	-343, -218, -378, -328, -379, -329, -330, -5, -6, -355,
	-117, 63, 110, -63, 50, 253, 724, 725, 139, -419,
	737, -370, -255, -374, -376, -190, -149, -419, -161, -147,
	-146, -148, -154, 180, 181, 275, 353, 354, -219, -190,
	-138, 303, 311, 95, -142, 101, -389, 86, 294, 387,
	294, 387, 98, -412, 326, 98, -412, -190, -84, -49,
	-190, -283, -283, 36, -387, -420, -162, -153, -126, 175,
	592, -319, 599, -331, -331, -331, -338, -331, 343, -331,
	343, -331, -420, -420, -420, 96, -420, 26, -420, 96,
	-145, 96, -95, -95, -95, -95, -95, -122, 488, 96,
	96, -420, 95, 95, -420, -145, -420, -420, -420, 96,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, 96, -420, 96, -420, 96, -420, 96,
	-420, 96, -420, 96, -420, 96, -420, 96, -420, 96,
	-420, 96, -420, 96, -420, 96, -420, 96, -420, 96,
	-420, 96, -420, 96, -420, -420, 96, -420, -420, -420,
	96, -420, 96, -420, 96, -420, -420, -420, 96, -317,
	685, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -93, -296, -94, 649, 649, -420, -94, -227,
	96, -150, -420, -150, -150, -150, -420, -420, -420, 96,
	-420, 96, 96, -420, 96, -420, 96, -420, -420, -420,
	-420, 96, -195, 26, -419, -195, -419, -195, -420, -261,
	-190, -198, -228, 20, -241, 57, 363, -252, -251, 61,
	53, -249, 23, 55, 23, 33, -266, 96, 164, -308,
	96, 28, -420, -420, 96, 63, 235, -420, -198, -181,
	-180, 85, 86, -182, 85, -180, 75, 75, -256, 96,
	-264, -168, -198, -198, 235, 130, -419, -149, 16, 98,
	98, -387, -405, 728, 729, 34, 105, -354, -354, 150,
	150, -190, 95, -333, 98, -333, 105, 105, 34, 91,
	92, 93, 34, 87, 88, 89, -190, -190, -190, -190,
	-375, 95, 23, -145, 95, 164, 97, -255, -255, 290,
	175, -354, 722, 296, 296, -354, -354, -354, -116, -115,
	744, 97, -420, 96, -341, 592, 595, -145, -155, -155,
	-256, 97, -383, 592, -388, -295, -295, -295, -295, 105,
	107, -420, 590, 82, 593, -420, -333, -145, -145, -145,
	-145, -235, 98, -145, -145, 105, 105, -95, -420, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -210,
	-145, -420, -178, -177, -179, 705, 130, 34, -316, -420,
	-212, 288, -101, -100, -99, 18, -420, -145, -119, -119,
	-119, -119, -145, -145, -145, -145, -145, -145, -419, 75,
	22, 20, -258, -295, 258, -419, -258, -419, -304, -228,
	-229, 21, 23, -242, 59, -240, 58, -240, -251, 23,
	23, 98, 23, 98, 150, -275, -145, -215, -303, 63,
	-29, -295, -213, -295, -230, -145, 95, -145, -158, -198,
	-198, -145, -205, 512, 514, 515, 516, 513, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 517, 528,
	489, 490, 491, 117, 119, 118, 127, 128, 492, 493,
	494, 357, 540, 541, 535, 538, 539, 537, 536, 372,
	373, 495, 558, 559, 563, 562, 560, 561, 564, 567,
	568, 569, 570, 571, 572, 574, 573, 565, 566, 543,
	542, 544, 545, 546, 547, 548, 549, 551, 550, 552,
	553, 554, 555, 556, 557, 575, 576, 577, 578, 579,
	581, 580, 585, 584, 582, 583, 587, 586, 496, 497,
	120, 121, 122, 123, 124, 125, 126, 498, 501, 499,
	502, 503, 504, 509, 510, 505, 506, 507, 508, 511,
	383, 381, 382, 378, 377, 376, 436, 441, 442, 444,
	529, 530, 531, 532, 533, 534, 686, 687, 688, 689,
	690, 691, 692, 693, 98, 98, 95, -145, 97, 97,
	-256, -374, -60, 97, -257, -255, 105, 97, 291, -214,
	-419, 98, -354, -354, -354, 105, 105, -303, -420, 96,
	-295, -407, -376, 596, 596, -420, 28, -382, -381, -297,
	95, 86, 68, 591, 594, -420, -420, -420, 96, -420,
	-420, -420, 97, 97, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, 96, -420, -177, -179,
	-420, 85, -158, -230, 23, -98, 313, 315, -98, -420,
	-420, -420, -420, -420, 96, -420, -420, 96, -420, 96,
	-420, -420, -258, -420, 23, 23, 96, -420, -258, -420,
	-258, -197, -229, -108, -107, -106, 623, -145, -210, -243,
	60, 85, 134, 98, 98, 98, 16, -419, -213, 235,
	-308, -235, -255, -175, 396, -230, -420, -255, 97, 28,
	97, 746, 150, 97, -214, -125, -419, 287, -303, 98,
	98, -115, -118, -29, 96, 164, -255, -190, 68, -145,
	-210, -420, 85, 604, 705, -92, -91, -88, 716, 742,
	-210, -94, -94, -145, -145, -145, -420, -295, 258, -420,
	-420, -108, 96, -105, -104, -295, -320, 592, 85, 134,
	-267, -255, -308, -295, 97, -420, -419, -235, 97, -239,
	-29, 95, -3, 287, -328, -379, -329, -330, -5, -6,
	-355, -82, 592, -381, -359, -301, -297, 98, 105, 97,
	592, -420, -420, -90, 158, 714, 682, -155, 234, -420,
	96, -420, 96, -420, 96, -106, 96, 28, 597, -420,
	-304, -176, -174, -295, 646, -398, -397, 588, -408, -404,
	130, 156, 110, -406, 684, 640, 140, 141, -82, -145,
	95, -420, -83, 302, 701, 235, -389, 593, -90, 715,
	660, 635, 660, 635, -150, -145, -145, -145, -104, -419,
	-420, 96, 26, -321, -62, 657, -395, -396, 85, -399,
	402, 656, 677, 130, 98, 97, -255, 263, -302, -383,
	594, 155, -119, -420, 96, -420, 96, -420, -93, -174,
	653, -334, -158, -396, 85, -395, 85, 17, 16, -4,
	745, 97, 304, -90, 660, 635, -145, -145, -420, -61,
	29, -175, -394, 271, 266, 269, 35, -394, 105, -4,
	-420, -420, 657, 265, 34, 130, -158, -178, -177, -177,
}

var yyDef = [...]int{
	883, -2, -2, 885, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 70, 72, 73, 883, 883, 883, 0, 883, 0,
	0, 883, -2, -2, 883, 1638, 0, 883, 0, 878,
	0, -2, 800, 806, 0, 815, -2, 0, 0, 883,
	883, 2274, 2274, 878, 0, 0, 0, 0, 0, 883,
	883, 883, 883, 1643, 1496, 50, 883, 0, 85, 86,
	833, 834, 835, 65, 0, 2272, 884, 1, 3, 71,
	75, 0, 0, 0, 58, 1505, 0, 78, 0, 0,
	887, 0, 0, 1621, 883, 883, 0, 126, 127, 0,
	0, 0, -2, 130, -2, 159, 160, 161, 0, 166,
	607, 526, 578, 524, 563, -2, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	401, 401, 0, 0, -2, 512, 512, 512, 1623, 0,
	0, 0, 560, 463, 401, 401, 401, 0, 401, 401,
	401, 401, 0, 0, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 1523, 165, 1639, 1636, 1637, 1799, 1800, 1801, 1802,
	1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812,
	1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822,
	1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832,
	1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842,
	1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852,
	1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862,
	1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872,
	1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942,
	1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,
	1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962,
	1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972,
	1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982,
	1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,
	1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052,
	2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082,
	2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122,
	2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132,
	2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142,
	2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152,
	2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162,
	2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172,
	2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182,
	2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192,
	2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202,
	2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212,
	2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222,
	2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232,
	2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242,
	2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252,
	2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262,
	2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 0,
	1615, 0, 720, 987, 0, 879, 880, 0, 789, 789,
	0, 789, 789, 789, 789, 0, 0, 0, 734, 0,
	0, 0, 0, 786, 0, 750, 751, 0, 786, 0,
	757, 792, 0, 0, 764, 789, 789, 767, 2275, 0,
	2275, 2275, 0, 1606, 0, 783, 781, 795, 796, 42,
	799, 802, 803, 804, 805, 808, 0, 819, 822, 1632,
	1633, 0, 824, 829, 846, 847, 0, 45, 1147, 0,
	1011, 0, 1022, -2, 1033, 1050, 1051, 1052, 1053, 1054,
	1056, 1057, 1058, 0, 0, 0, 0, 1063, 1064, 0,
	0, 0, 0, 0, 1127, 0, 0, 0, 0, 2001,
	1467, 0, 0, 1429, 1429, 1163, 1429, 1429, 1431, 1431,
	1431, 1852, 1993, 2002, 2181, 1813, 1819, 1820, 1821, 2127,
	2128, 2129, 2130, 2219, 2220, 2224, 1915, 1808, 2194, 2195,
	0, 2271, 1954, 1962, 1963, 1939, 1948, 1987, 2089, 2204,
	1831, 1982, 2052, 1912, 1934, 1935, 2070, 2071, 1958, 1959,
	1938, 2133, 2135, 2151, 2152, 2137, 2139, 2148, 2154, 2159,
	2138, 2150, 2155, 2168, 2172, 2175, 2176, 2177, 2145, 2143,
	2156, 2160, 2162, 2164, 2170, 2173, 2146, 2144, 2157, 2161,
	2163, 2165, 2171, 2174, 2132, 2136, 2140, 2149, 2167, 2147,
	2166, 2141, 2153, 2158, 2169, 2142, 2134, 1952, 1955, 1942,
	1943, 1945, 1947, 1953, 1960, 1966, 1944, 1965, 1964, 0,
	1940, 1941, 1946, 1957, 1961, 1949, 1950, 1951, 1956, 1967,
	2008, 2007, 2006, 2051, 1978, 2050, 0, 0, 0, 0,
	0, 1802, 1857, 1858, 2178, 1351, 1352, 1353, 1354, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 1480, 1481,
	44, 1146, 1602, 1431, 1431, 1431, 1431, 1431, 1431, 1085,
	1086, 1087, 1088, 1089, 1115, 1116, 1122, 1123, 2065, 2066,
	2067, 2068, 1895, 2214, 1904, 1905, 2047, 2048, 1917, 1918,
	2245, 2246, -2, -2, -2, 232, 233, 234, 235, 236,
	237, 238, 239, 0, 1856, 2192, 2193, 228, 0, 0,
	296, 293, 294, 295, 1129, 1130, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 258, 259, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270, 271, 272,
	273, 274, 275, 276, 277, 278, 279, 280, 281, 282,
	283, 284, 285, 286, 287, 288, 289, 290, 298, 299,
	2274, 0, 856, 0, 0, 0, 0, 0, 0, 1644,
	1645, 1505, 0, 1497, 1496, 63, 0, 883, -2, 0,
	0, 0, 0, 47, 0, 52, 944, 886, 77, 76,
	1545, 1548, 0, 0, 0, 59, 1506, 67, 69, 1507,
	0, 888, 889, 0, 920, 924, 0, 0, 0, 1622,
	1621, 1621, 102, 0, 0, 103, 123, 124, 125, 0,
	0, 109, 110, 1608, 1609, 43, 0, 0, 177, 178,
	0, 1103, 428, 0, 173, 0, 421, 360, 0, 1523,
	0, 0, 0, 0, 0, 883, 0, 1616, 154, 155,
	162, 163, 164, 401, 401, 401, 575, 0, 0, 165,
	165, 533, 534, 535, 0, 0, -2, 426, 0, 513,
	0, 0, 415, 415, 419, 417, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 668, 0, 402,
	0, 573, 574, 464, 0, 0, 0, 0, 0, 0,
	0, 0, 1624, 1625, 0, 550, 551, 0, 0, 0,
	401, 401, 0, 0, 0, 0, 401, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 1536, 0, 0,
	0, -2, 0, 712, 0, 0, 0, 1617, 1617, 0,
	719, 0, 0, 0, 724, 0, 0, 725, 0, 786,
	786, 784, 785, 727, 728, 729, 730, 789, 0, 0,
	410, 411, 412, 786, 789, 0, 789, 789, 789, 789,
	786, 786, 786, 789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2275, 792, 789, 0, 758, 0, 759,
	760, 761, 762, 765, 766, 768, 2276, 2277, 1634, 1635,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 2275, 2275, 772, 776, 778, 1607, 801,
	807, 809, 810, 0, 0, 820, 823, 840, 49, 1903,
	828, 49, 830, 831, 832, 858, 859, 864, 0, 0,
	0, 0, 870, 871, 872, 0, 0, 875, 876, 877,
	0, 0, 0, 0, 0, 1009, 0, 0, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1034, 1035, 0, 0, 0, 1059,
	1060, 1061, 1062, 1065, 0, 1076, 0, 1078, 1476, -2,
	0, 0, 0, 1070, 1071, 0, 0, 0, 1627, 1627,
	0, 0, 0, 1468, 0, 0, 1161, 0, 1162, 1164,
	1165, 1166, 0, 1167, 1168, 893, 893, 893, 893, 893,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	893, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 141, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 1627, 1627, 0, 0, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 240, 241, 242,
	243, 244, 245, 300, 246, 247, 248, 1146, 0, 0,
	0, 46, 848, 849, 0, 970, 1627, 0, 0, 899,
	0, 1642, 57, 66, 68, 1505, 61, 1505, 0, 903,
	0, 0, -2, -2, 904, 905, 909, 910, 911, 912,
	913, 914, 915, 916, 917, 54, 2273, 55, 0, 74,
	0, 48, 0, 0, 1546, 0, 1549, 0, 0, 0,
	374, 1553, 0, 0, 1498, 1499, 1502, 0, 921, 1999,
	925, 0, 927, 928, 0, 0, 100, 0, 986, 0,
	0, 0, 111, 0, 113, 114, 0, 0, 0, 385,
	1610, 1611, 1612, -2, 408, 0, 385, 369, 308, 309,
	310, 360, 312, 360, 360, 360, 360, 374, 374, 374,
	374, 343, 344, 345, 346, 347, 0, 0, 329, 360,
	360, 360, 360, 350, 351, 352, 353, 354, 355, 356,
	357, 313, 314, 315, 316, 317, 318, 319, 320, 321,
	362, 362, 362, 362, 362, 366, 366, 0, 1104, 0,
	389, 0, 1502, 0, 0, 1536, 1619, 1629, 0, 0,
	0, 1619, 132, 0, 0, 0, 576, 618, 527, 564,
	577, 0, 530, 531, -2, 0, 0, 512, 0, 514,
	0, 409, 0, -2, 0, 419, 0, 415, 419, 416,
	419, 407, 420, 554, 555, 556, 0, 558, 559, 648,
	956, 0, 0, 0, 0, 0, 654, 655, 656, 0,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 0,
	0, 0, 514, 0, 561, 0, 0, 465, 466, 467,
	0, 0, 470, 471, 472, 473, 0, 0, 476, 477,
	478, 973, 974, 479, 480, 505, 506, 507, 481, 482,
	483, 484, 485, 486, 487, 499, 500, 501, 502, 503,
	504, 488, 489, 490, 491, 492, 493, 496, 0, 147,
	1527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1617, 0, 0,
	0, 0, 902, 988, 1640, 1641, 721, 0, 0, 790,
	791, 0, 413, 414, 789, 789, 731, 773, 0, 789,
	735, 774, 736, 738, 737, 739, 752, 753, 789, 742,
	787, 788, 743, 744, 745, 746, 747, 748, 749, 769,
	754, 755, 756, 793, 0, 797, 798, 770, 771, 0,
	779, 0, 0, 813, 814, 0, 821, 843, 841, 842,
	844, 836, 837, 838, 839, 0, 845, 0, 0, 861,
	96, 866, 867, 868, 869, 881, 874, 1148, 1006, 1007,
	1008, 0, 1010, 1016, 0, 1131, 1133, 1014, 1015, 1018,
	0, 0, 0, 1012, 1023, 1143, 1144, 1145, 0, 0,
	0, 0, 0, 1027, 1031, 1036, 1037, 1038, 1039, 1040,
	0, 1041, 0, 1044, 1045, 1046, 1047, 1048, 1049, 1055,
	1444, 1445, 1446, 1074, 301, 302, 0, 1075, 0, 0,
	0, 0, 0, 0, 0, 0, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1147, 0, 1628, 0,
	0, 0, 1474, 1471, 0, 0, 0, 1430, 1432, 0,
	0, 0, 894, 895, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 0,
	0, 1447, 0, 0, 0, 0, 0, 0, 0, 1467,
	0, 1080, 1081, 1082, 0, 0, 0, 0, 0, 0,
	1209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1355, 1356, 1357, 1358,
	41, 0, 0, 0, 0, 0, 0, 0, 1478, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1380, 0, 0, 0, 0,
	0, 0, 1600, 0, 0, 851, 852, 854, 0, 990,
	0, 971, 0, 0, 857, 0, 898, 0, 901, 60,
	62, 907, 908, 0, 929, 918, 906, 56, 51, 0,
	0, 948, 1547, 1550, 1551, 374, 1573, 0, 383, 383,
	380, 1508, 1509, 0, 1501, 1503, 1504, 79, 926, 922,
	0, 1004, 0, 0, 985, 0, 932, 934, 935, 936,
	968, 0, 939, 940, 0, 0, 0, 0, 0, 98,
	987, 104, 0, 112, 0, 0, 117, 118, 105, 106,
	107, 108, 0, 607, -2, 460, 179, 181, 182, 183,
	174, -2, 372, 370, 371, 311, 374, 374, 337, 338,
	339, 340, 341, 342, 0, 0, 330, 331, 332, 333,
	322, 0, 323, 324, 325, 364, 0, 326, 327, 0,
	328, 427, 0, 1510, 390, 391, 393, 401, 0, 396,
	397, 0, 401, 401, 0, 422, 423, 0, 1502, 1527,
	0, 0, 0, 1630, 1629, 1629, 1629, 0, 167, 168,
	169, 170, 171, 172, 643, 0, 0, 619, 641, 642,
	165, 0, 0, 175, 516, 515, 0, 675, 0, 425,
	0, 0, 419, 419, 404, 405, 557, 0, 0, 650,
	651, 652, 653, 0, 0, 0, 543, 454, 0, 544,
	545, 514, 516, 0, 0, 385, 468, 469, 474, 475,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 592, 593, 594, 597, 599, 518, 603,
	605, 596, 598, 600, 518, 604, 606, 1524, 1525, 1526,
	0, 0, 713, 0, 0, 451, 94, 1618, 718, 722,
	723, 786, 741, 775, 786, 733, 740, 763, 777, 811,
	812, 817, 825, 826, 827, 865, 0, 0, 0, 0,
	873, 0, 0, 1017, 1132, 1134, 1019, 1020, 1021, 1024,
	0, 1028, 1032, 0, 0, 0, 0, 0, 1079, 1077,
	1478, 0, 0, 0, 1128, 0, 0, 1151, 1152, 0,
	0, 0, 0, 1472, 0, 0, 1159, 0, 1433, 1109,
	0, 0, 0, 0, 0, 1109, 1109, 1109, 1109, 1109,
	1109, 1109, 1109, 1109, 1109, 1496, 1186, 0, 0, 0,
	0, 0, 1191, 1192, 1193, 1109, 0, 1196, 1197, 0,
	1199, 0, 1200, 0, 0, 0, 0, 1207, 1208, 1210,
	0, 0, 1213, 1214, 0, 1216, 0, 1218, 1219, 1220,
	1221, 1222, 1223, 0, 1225, 0, 1227, 1228, 1229, 0,
	1231, 0, 1233, 1234, 0, 1236, 0, 1238, 0, 1241,
	0, 1244, 0, 1247, 0, 1250, 0, 1253, 0, 1256,
	0, 1259, 0, 1262, 0, 1265, 0, 1268, 0, 1271,
	0, 1274, 0, 1277, 0, 1280, 0, 1283, 0, 1286,
	1287, 1288, 0, 1290, 0, 1292, 0, 1295, 1296, 0,
	1298, 0, 1301, 0, 1304, 0, 0, 1305, 0, 0,
	0, 1309, 0, 0, 0, 0, 1318, 1319, 1320, 1321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1332, 1333, 1334, 1335, 1336, 1337, 0, 1339, 0, 1110,
	0, 0, 1110, 0, 0, 0, 0, 0, 1149, 1627,
	0, 1434, 1435, 1436, 1437, 1438, 0, 0, 0, 0,
	0, 0, 1378, 1379, 1381, 0, 0, 1384, 0, 1386,
	0, 1601, 850, 853, 855, 942, 991, 992, 0, 0,
	0, 0, 972, 1626, 896, 897, 900, 950, 0, 1482,
	0, 0, 929, 1004, 0, 930, 0, 53, 945, 0,
	1555, 1554, 1567, 1580, 383, 383, 377, 378, 384, 379,
	381, 382, 1500, 0, 1505, 0, 1594, 0, 0, 1583,
	0, 0, 0, 0, 0, 0, 0, 0, 975, 0,
	0, 978, 0, 0, 0, 0, 969, 940, 0, 941,
	0, -2, 0, 0, 92, 93, 0, 0, 0, 115,
	116, 0, 0, 122, 386, 387, 156, 165, 462, 180,
	435, 0, 0, 307, 373, 334, 335, 336, 0, 358,
	0, 0, 0, 0, 456, 128, 1514, 1513, 401, 401,
	392, 0, 395, 0, 0, 0, 1631, 361, 424, 0,
	146, 0, 0, 0, 0, 0, 152, 613, 0, 0,
	620, 0, 0, 0, 525, 0, 536, 537, 0, 647,
	-2, 709, 389, 0, 403, 406, 957, 0, 0, 538,
	0, 541, 542, 455, 516, 547, 548, 562, 549, 497,
	498, 495, 0, 0, 1537, 1538, 1543, 1541, 1542, 133,
	583, 585, 589, 584, 588, 0, 0, 0, 520, 0,
	520, 581, 0, 451, 1510, 0, 717, 452, 453, 789,
	789, 860, 97, 0, 863, 0, 0, 0, 0, 1025,
	1029, 1042, 1043, 1439, 1465, 360, 360, 1452, 360, 366,
	1455, 360, 1457, 360, 1460, 360, 1463, 1464, 0, 0,
	1072, 0, 0, 0, 0, 1158, 1475, 0, 0, 1169,
	1108, 1109, 1109, 1109, 1109, 1109, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1184, 1469, 0, 0, 0,
	1190, 0, 0, 1194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 145, 0, 0, 0, 0, 0,
	0, 1389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1103, 1107, 0, 1111, 1112, 0, 0,
	1341, 0, 0, 1359, 0, 0, 0, 0, 0, 0,
	0, 1479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 993, 1000, 0, 1000, 0, 1000, 0, 0,
	0, 1613, 1614, 1483, 1484, 1004, 1485, 919, 931, 949,
	1573, 0, 1566, 0, -2, 1575, 0, 0, 0, 1581,
	375, 376, 923, 80, 1005, 83, 0, 1594, 1603, 0,
	1591, 1596, 1598, 0, 0, 0, 1587, 0, 1004, 933,
	964, 966, 0, 961, 976, 977, 979, 0, 981, 0,
	983, 984, 944, 938, 0, 100, 0, 1004, 1004, 99,
	0, 989, 119, 120, 121, 461, 184, 189, 0, 0,
	0, 194, 0, 196, 0, 0, 0, 201, 202, 401,
	401, 436, 0, 304, 306, 0, 0, 187, 374, 0,
	374, 0, 365, 367, 0, 437, 457, 1511, 1512, 0,
	0, 394, 398, 399, 400, 0, 1620, 148, 0, 0,
	0, 616, 0, 644, 0, 0, 0, 0, 0, 0,
	176, 517, 676, 677, 678, 679, 680, 681, 682, 683,
	684, 0, 401, 0, 0, 0, 401, 401, 401, 0,
	701, 388, 0, 0, 672, 669, 539, 0, 218, 219,
	226, 227, 229, 0, 0, 0, 0, 0, 546, 944,
	1528, 1529, 1530, 0, 1540, 1544, 136, 0, 0, 0,
	0, 591, 595, 601, 0, 519, 602, 714, 715, 716,
	95, 726, 732, 862, 882, 1013, 1026, 1030, 0, 0,
	0, 0, 1466, 1450, 374, 1453, 1454, 1456, 1458, 1459,
	1461, 1462, 1068, 1069, 1073, 0, 1155, 0, 1157, 0,
	1473, 0, 1170, 1171, 1172, 1173, 1174, 1505, 0, 0,
	0, 1189, 0, 0, 1109, 0, 1202, 1201, 1203, 0,
	1205, 1206, 1211, 1212, 1215, 1217, 1224, 1226, 1230, 1232,
	1235, 1237, 1239, 0, 1242, 0, 1245, 0, 1248, 0,
	1251, 0, 1254, 0, 1257, 0, 1260, 0, 1263, 0,
	1266, 0, 1269, 0, 1272, 0, 1275, 0, 1278, 0,
	1281, 0, 1284, 0, 1289, 1291, 0, 1294, 1297, 1299,
	0, 1302, 0, 1306, 0, 1308, 1310, 1311, 0, 0,
	0, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1338, 0, 1101, 1340, 1113, 1114, 1119, 1343, 0,
	0, 0, 1346, 0, 0, 0, 1350, 1150, 1361, 0,
	1366, 0, 0, 1372, 0, 1376, 0, 1382, 1383, 1385,
	1387, 0, 0, 0, 0, 0, 0, 0, 970, 951,
	64, 1485, 1489, 0, 1560, 1558, 1558, 1568, 1569, 0,
	0, 1576, 0, 0, 0, 0, 84, 0, 0, 1582,
	0, 0, 1599, 0, 0, 0, 0, 101, 1496, 958,
	965, 0, 0, 959, 0, 960, 980, 982, 937, 0,
	1004, 1004, 90, 91, 0, 190, 0, 192, 0, 195,
	197, 198, 199, 205, 206, 207, 200, 0, 0, 303,
	305, 0, 0, 348, 359, 349, 0, 0, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 944, 149, 150, 151,
	608, 0, 618, 0, 946, 0, 611, 0, 528, 0,
	0, 0, 401, 401, 401, 0, 0, 0, 0, 686,
	0, 0, 649, 0, 657, 0, 0, 0, 230, 231,
	0, 1539, 582, 0, 134, 135, 0, 0, 587, 521,
	522, 1066, 0, 0, 0, 1067, 1451, 0, 0, 0,
	0, 0, 1470, 0, 0, 0, 0, 1195, 1198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1314, 0, 0, 0, 638, 639, 0, 1390, 1106,
	1496, 0, 1110, 1120, 1121, 0, 1110, 1360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1001,
	0, 0, 0, 952, 953, 0, 0, 0, 990, 1489,
	1494, 0, 0, 1563, 0, 1556, 1559, 1557, 1570, 0,
	0, 1577, 0, 1579, 0, 1604, 1605, 1597, 1592, 0,
	1586, 1589, 1591, 1588, 1505, 962, 0, 967, 0, 1496,
	89, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 0, 0, 363, 368,
	0, 0, 0, 609, 0, 947, 621, 612, 0, 699,
	0, 703, 0, 0, 0, 706, 707, 708, 685, 0,
	689, 429, 673, 670, 671, 540, 0, 137, 138, 0,
	0, 0, 1440, 0, 1443, 1153, 1156, 1154, 0, 1185,
	1187, 1188, 1448, 1449, 1204, 1240, 1243, 1246, 1249, 1252,
	1255, 1258, 1261, 1264, 1267, 1270, 1273, 1276, 1279, 1282,
	1285, 1293, 1300, 1303, 1307, 1312, 0, 1315, 0, 0,
	1316, 0, 640, 1097, 0, 0, 1117, 1118, 0, 1345,
	1347, 1348, 1349, 1362, 0, 1367, 1368, 0, 1373, 0,
	1377, 1388, 0, 995, 1002, 1003, 0, 998, 0, 999,
	0, 943, 1494, 82, 1495, 1492, 0, 1490, 1487, 1552,
	0, 1561, 1562, 1571, 1572, 1578, 0, 0, 1591, 0,
	1585, 87, 0, 0, 0, 1505, 191, 0, 210, 0,
	617, 0, 620, 610, 697, 698, 0, 710, 702, 704,
	705, 687, -2, 1531, 0, 0, 0, 590, 1441, 0,
	0, 1317, 0, 636, 637, 1105, 1098, 0, 1083, 1084,
	1102, 1342, 1344, 0, 0, 0, 994, 954, 955, 996,
	997, 81, 0, 1491, 1125, 0, 1486, 0, 1564, 1565,
	1595, 0, 1584, 1590, 963, 970, 0, 88, 442, 435,
	1531, 0, 0, 0, 690, 691, 692, 693, 694, 695,
	696, 579, 1533, 139, 140, 0, 509, 510, 511, 133,
	0, 1160, 1313, 1099, 0, 0, 0, 0, 0, 1363,
	0, 1369, 0, 1374, 0, 1493, 0, 0, 1488, 1593,
	622, 0, 624, 0, -2, 430, 443, 0, 185, 211,
	212, 0, 0, 215, 216, 217, 208, 209, 129, 0,
	0, 711, 0, 1534, 1535, 0, 136, 0, 0, 1090,
	1091, 1092, 1093, 1095, 0, 0, 0, 0, 1126, 1103,
	623, 0, 0, 385, 0, 633, 431, 432, 0, 438,
	439, 440, 441, 213, 214, 645, 0, 0, 508, 586,
	1442, 0, 0, 1364, 0, 1370, 0, 1375, 0, 625,
	626, 634, 0, 433, 0, 434, 0, 0, 0, 614,
	0, 645, 1532, 1100, 1094, 1096, 0, 0, 1124, 0,
	635, 631, 444, 446, 447, 0, 0, 445, 646, 615,
	1365, 1371, 0, 448, 449, 450, 627, 628, 629, 630,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 157, 3, 3, 3, 185, 177, 3,
	95, 97, 182, 180, 96, 181, 235, 183, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 747,
	165, 164, 166, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 187, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 153, 3, 188,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 154, 155,
	156, 158, 159, 160, 161, 162, 163, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 178, 179, 184,
	186, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:628
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:641
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:642
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:646
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:685
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:691
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:697
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:703
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:707
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:713
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:719
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:725
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:729
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:738
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:744
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:748
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:754
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:768
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:791
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:797
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:808
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:815
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:821
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:828
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:832
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:838
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:842
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:846
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:850
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:854
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:860
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:864
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:869
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:873
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:879
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:883
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:888
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:894
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:900
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:907
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:913
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:921
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:925
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:931
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:943
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:955
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:959
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:965
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:971
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:975
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:979
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:983
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:988
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:989
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:993
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:997
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1003
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1007
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1013
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1017
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1026
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1032
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1038
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1042
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1048
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1052
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1056
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1060
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1066
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1070
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1074
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1080
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1084
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1090
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1094
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1100
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1104
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1108
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1114
		{
			yyVAL.str = RepeatableReadStr
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1118
		{
			yyVAL.str = ReadCommittedStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1122
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1126
		{
			yyVAL.str = SerializableStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1132
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1136
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1140
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1146
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1152
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1159
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1168
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1172
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1179
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1183
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1188
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1198
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1203
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1208
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1214
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1219
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1234
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1240
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1244
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1256
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1263
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1270
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1275
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1280
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1285
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1292
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1299
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1310
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1317
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1321
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1327
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1331
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1335
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1339
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1343
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1347
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1353
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1357
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1363
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1367
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1373
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1377
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1383
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1387
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1393
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1397
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1403
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1407
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1413
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1418
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1423
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1427
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1432
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1436
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1440
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1451
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1460
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1469
		{
			yyVAL.str = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1473
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1482
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1486
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1491
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1496
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1501
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1507
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1512
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1517
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1522
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1527
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1531
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1536
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1540
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1545
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1550
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1555
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1559
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1565
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1569
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1573
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1579
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1583
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1588
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1592
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1597
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1602
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1607
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1612
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1617
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1622
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1629
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1644
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1648
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1652
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1656
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1666
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1673
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1677
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1699
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1703
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1707
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1711
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1715
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1719
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1723
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1727
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1731
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1735
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1740
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1744
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1748
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = Armscii8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = ASCIIStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = Big5Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = UBinaryStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = Cp1250Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = Cp1251Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = Cp1256Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = Cp1257Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = Cp850Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = Cp852Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = Cp866Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = Cp932Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = Dec8Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = EucjpmsStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = EuckrStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = Gb18030Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = Gb2312Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = GbkStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = Geostd8Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = GreekStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = HebrewStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = Hp8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.str = Keybcs2Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.str = Koi8rStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.str = Koi8uStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.str = Latin1Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.str = Latin2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.str = Latin5Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.str = Latin7Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.str = MacceStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = MacromanStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.str = SjisStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.str = Swe7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.str = Tis620Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = Ucs2Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = UjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.str = Utf16Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.str = Utf16leStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.str = Utf32Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.str = Utf8mb3Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.str = Utf8mb4Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.str = Utf8mb3Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1928
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1932
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1936
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1942
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1946
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1952
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1956
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1960
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1966
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1970
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1976
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1980
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1984
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1988
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2040
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2090
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2098
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2102
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2106
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2110
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2114
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2124
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2130
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2138
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2142
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2146
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2150
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2154
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2178
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2197
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2205
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2209
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2213
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2228
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2233
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2237
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2242
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2246
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2259
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2266
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2270
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2276
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2284
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2288
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2292
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2297
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2301
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2306
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2314
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2318
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2322
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2327
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2332
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2337
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2342
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2348
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2352
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2357
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2361
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2365
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2371
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2376
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2380
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2386
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2390
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2396
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2400
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2405
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2409
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2413
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2417
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2421
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2425
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2431
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2441
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2445
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2449
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2453
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2457
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2462
		{
			yyVAL.str = ""
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = yyDollar[2].str
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2476
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2495
		{
			yyVAL.str = ""
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = yyDollar[1].str
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2505
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2509
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2524
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2528
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2534
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2538
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2544
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2548
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2554
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2558
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2564
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2570
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2574
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2578
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2582
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2586
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2591
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2595
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2601
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2607
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2613
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2617
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2621
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2626
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2630
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2636
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2642
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2648
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2652
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2656
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2660
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2664
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2669
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2677
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2683
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2687
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2692
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2696
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2701
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2705
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2711
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2715
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2719
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2725
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2729
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2735
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2739
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2743
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2747
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2751
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2755
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2759
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2763
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2767
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2771
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2775
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2779
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2783
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2787
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2791
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2795
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2799
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2803
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2807
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2811
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2815
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2819
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2823
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2827
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2831
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2835
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2839
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2843
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2847
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2851
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2855
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2860
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2864
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2868
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2887
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2891
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2899
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2910
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2914
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2919
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2923
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2928
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2932
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2937
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2941
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2945
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2954
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2958
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2962
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2966
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2970
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2976
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2980
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2984
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2990
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2994
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2998
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3002
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3006
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3010
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3014
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3018
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3022
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3026
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3030
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3034
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3038
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3042
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3046
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3050
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3054
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3058
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3062
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3066
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3070
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3074
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3078
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3082
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3086
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3090
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3094
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3098
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3102
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3106
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3110
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3116
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3120
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3126
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3130
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3134
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3138
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3142
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3146
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3150
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3154
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3158
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3162
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3168
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3195
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3205
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3212
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3231
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3241
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3245
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3262
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3272
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3276
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3291
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3298
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3312
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3319
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3327
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3340
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3359
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3368
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3376
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3383
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3389
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3396
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3403
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3407
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3416
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3424
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3433
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3440
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3448
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3452
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3461
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3472
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3476
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3481
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3485
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3490
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3494
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3500
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3506
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3512
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3516
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3522
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3526
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3532
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3538
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3544
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3550
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3556
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3560
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3564
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3568
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3574
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3580
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3586
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3590
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3594
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3600
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3604
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3609
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3613
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3618
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3622
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3628
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3632
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3636
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3640
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3644
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3648
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3652
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3656
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3660
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3664
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3668
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3672
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3676
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3680
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3684
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3688
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3692
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3696
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3700
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3704
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3708
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3712
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3717
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3721
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3725
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3731
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3735
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3741
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3746
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3750
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3755
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3760
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3765
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3770
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3775
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3780
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3785
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3790
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3796
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3802
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3806
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3812
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3817
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3821
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3826
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3831
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3836
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3841
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3846
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3851
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3858
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3865
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3872
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3880
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3884
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3890
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3896
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3902
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3908
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3914
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3920
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3926
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3932
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3938
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3942
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3954
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3958
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3968
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3977
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4007
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4041
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4105
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4149
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4153
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4173
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4177
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4181
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4185
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4192
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4196
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4204
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4208
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4212
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4216
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4220
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4224
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4228
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4233
		{
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4235
		{
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4239
		{
			yyVAL.str = ""
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4243
		{
			yyVAL.str = "extended "
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4249
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4253
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4259
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4263
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4269
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4273
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4277
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4283
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4287
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4291
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4297
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4301
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4307
		{
			yyVAL.empty = struct{}{}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			yyVAL.empty = struct{}{}
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4315
		{
			yyVAL.empty = struct{}{}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4321
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4325
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4331
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4335
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4339
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4346
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4354
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4358
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4365
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4369
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4374
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4378
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4384
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4388
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4394
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4398
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4402
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4409
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4415
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4419
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4424
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4426
		{
			yyVAL.empty = struct{}{}
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4429
		{
			yyVAL.empty = struct{}{}
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4431
		{
			yyVAL.empty = struct{}{}
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4435
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4441
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4446
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4450
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4454
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4458
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4462
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4467
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4471
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4475
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4479
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4485
		{
			yyVAL.str = yyDollar[1].str
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4489
		{
			yyVAL.str = yyDollar[1].str
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4493
		{
			yyVAL.str = yyDollar[1].str
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4499
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4503
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4507
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4511
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4516
		{
			yyVAL.str = ""
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4520
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4524
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4530
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4534
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4540
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4546
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4550
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4556
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4562
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4566
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4572
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4578
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4582
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4586
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4590
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4596
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4602
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4608
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4612
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4616
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4620
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4624
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4628
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4634
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4638
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4644
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4648
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4652
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4656
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4660
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4664
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4668
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4672
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4676
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4680
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4684
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4688
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4693
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4697
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4701
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4706
		{
			yyVAL.str = ""
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4710
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4715
		{
			setAllowComments(yylex, true)
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4719
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4725
		{
			yyVAL.strs = nil
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4729
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4735
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4739
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4743
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4748
		{
			yyVAL.str = ""
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4752
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4756
		{
			yyVAL.str = SQLCacheStr
		}
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4761
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4765
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4769
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4775
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4779
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4789
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4794
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4798
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4804
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4808
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4813
		{
			yyVAL.strs = nil
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4817
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4827
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4833
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4837
		{
			yyVAL.str = SQLCacheStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4841
		{
			yyVAL.str = DistinctStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4845
		{
			yyVAL.str = DistinctStr
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4849
		{
			yyVAL.str = HighPriorityStr
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4853
		{
			yyVAL.str = StraightJoinHint
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4857
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4861
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4865
		{
			yyVAL.str = SQLBigResultStr
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4869
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4873
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4879
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4883
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4889
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4893
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4897
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4901
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4906
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4910
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4914
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4921
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4926
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4930
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4936
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4942
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4946
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4956
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4960
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4964
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4968
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4974
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4978
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4984
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4988
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4993
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4997
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5002
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5006
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5012
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5016
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5022
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5026
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5032
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5036
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5040
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5044
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5050
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5054
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5067
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5071
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5075
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5079
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5085
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5087
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5091
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5093
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5097
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5099
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5102
		{
			yyVAL.empty = struct{}{}
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5104
		{
			yyVAL.empty = struct{}{}
		}
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5107
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5111
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5115
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5122
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5128
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5132
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5136
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5142
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5148
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5152
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5156
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5160
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5166
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5170
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5180
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5184
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5190
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5194
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5200
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5209
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5215
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5219
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5225
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5229
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5233
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5237
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5241
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5245
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5250
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5254
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5258
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5262
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5268
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5272
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5279
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5287
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5291
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5295
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5303
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5307
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5313
		{
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5316
		{
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5321
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5325
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5329
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5333
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5337
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5341
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5345
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5371
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5375
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5379
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5383
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5387
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5391
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5397
		{
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5400
		{
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5406
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5414
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5418
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5422
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5446
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5450
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5468
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5472
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5476
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5480
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5484
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5488
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5492
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5496
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5500
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5504
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5508
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5512
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5516
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5520
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5524
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5528
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5532
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5536
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5540
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5544
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5552
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5556
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5560
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5564
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5568
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5574
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5578
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5584
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5588
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5594
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5598
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5602
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5608
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5612
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5619
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5623
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5627
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5631
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5635
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5641
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5645
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5649
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5653
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5657
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5661
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5665
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5670
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5674
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5680
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5684
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5689
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5693
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5698
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5702
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5708
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5714
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5718
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5724
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5728
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5733
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5740
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5746
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5750
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5756
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5760
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5766
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5770
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5775
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5782
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5788
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5792
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5798
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5804
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5808
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5814
		{
			yyVAL.str = ""
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5818
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5824
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5828
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5835
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5839
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5843
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5847
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5853
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5857
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5863
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5867
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5871
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5875
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5879
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5883
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5889
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5893
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5897
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5904
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5910
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5914
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5938
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5946
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5950
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5954
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5958
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5962
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5966
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5970
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5978
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5989
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5993
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5999
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6003
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6007
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6012
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6017
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6021
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6025
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6029
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6033
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6037
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6041
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6045
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6049
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6053
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6057
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6061
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6065
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6069
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6073
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6077
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6081
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6085
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6133
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6137
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6149
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6173
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6181
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6185
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6189
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6193
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6197
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6201
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6205
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6209
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6213
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6229
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6233
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6237
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6241
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6245
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6249
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6253
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6265
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6269
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6273
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6277
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6281
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6285
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6289
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6293
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6297
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6301
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6305
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6309
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6313
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6317
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6321
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6325
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6329
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6333
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6337
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6341
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6345
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6357
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6361
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6365
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6369
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6373
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6377
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6381
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6385
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6389
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6393
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6397
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6401
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6405
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6421
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6425
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6429
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6433
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6437
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6441
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6445
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6449
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6453
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6457
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6461
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6465
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6469
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6473
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6477
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6481
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6485
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6489
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6493
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6497
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6501
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6505
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6509
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6513
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6517
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6521
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6525
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6529
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6541
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6545
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6549
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6553
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6557
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6561
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6565
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6577
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6581
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6585
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6589
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6593
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6597
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6601
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6605
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6609
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6613
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6617
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6621
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6625
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6629
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6633
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6637
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6641
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6645
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6649
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6653
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6657
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6661
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6665
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6669
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6673
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6677
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6681
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6685
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6689
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6693
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6697
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6701
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6705
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6709
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6713
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6717
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6721
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6725
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6729
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6733
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6737
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6741
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6745
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6755
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6759
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6763
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6767
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6776
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6782
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6786
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6790
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6794
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6798
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6803
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6807
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6811
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6815
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6819
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6823
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6828
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6832
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6836
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6840
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6847
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6851
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6857
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6861
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6865
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6869
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6875
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6879
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6883
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6887
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6891
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6895
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6899
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6904
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6908
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6914
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6918
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6922
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6926
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6930
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6934
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6938
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6942
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6946
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6950
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6954
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6958
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6962
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6966
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6970
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6974
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6978
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6982
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6986
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6990
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6996
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7000
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7004
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7008
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7012
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7016
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7020
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7024
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7028
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7032
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7036
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7040
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7044
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7048
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7052
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7056
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7060
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7064
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7074
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7078
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7082
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7092
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7096
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7100
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7104
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7108
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7114
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7118
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7122
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7126
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7130
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7136
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7140
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7144
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7150
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7154
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7158
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7164
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7168
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7172
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7176
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7180
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7186
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7190
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7194
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7198
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7202
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7206
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7210
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7214
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7218
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7222
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7228
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7232
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7241
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7246
		{
			yyVAL.str = string("")
		}
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7250
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7256
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7260
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7266
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7271
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7275
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7281
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7285
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7289
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7293
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7299
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7303
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7309
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7318
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7322
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7327
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7331
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7336
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7340
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7346
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7350
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7356
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7362
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7366
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7371
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7375
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7380
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7384
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7390
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7396
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7400
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7406
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7411
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7415
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7419
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7424
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7428
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7434
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7438
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7442
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7447
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7451
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7455
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7459
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7463
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7470
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7474
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7478
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7482
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7488
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7492
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7496
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7500
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7505
		{
			yyVAL.str = ""
		}
	case 1524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7509
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7513
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7517
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7522
		{
			yyVAL.str = ""
		}
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7526
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7532
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7536
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7541
		{
			yyVAL.str = ""
		}
	case 1532:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7545
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7550
		{
			yyVAL.str = "cascaded"
		}
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7554
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7558
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7563
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7567
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7573
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7579
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7585
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7594
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7598
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7603
		{
			yyVAL.str = ""
		}
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7607
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7613
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7617
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7621
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7625
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7629
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7633
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7637
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7643
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7647
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7651
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7656
		{
			yyVAL.str = ""
		}
	case 1556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7660
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7664
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7669
		{
			yyVAL.str = ""
		}
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7673
		{
			yyVAL.str = " header"
		}
	case 1560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7678
		{
			yyVAL.str = ""
		}
	case 1561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7682
		{
			yyVAL.str = " manifest on"
		}
	case 1562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7686
		{
			yyVAL.str = " manifest off"
		}
	case 1563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7691
		{
			yyVAL.str = ""
		}
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7695
		{
			yyVAL.str = " overwrite on"
		}
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7699
		{
			yyVAL.str = " overwrite off"
		}
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7705
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7710
		{
			yyVAL.str = ""
		}
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7714
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7720
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7724
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7730
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7734
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7739
		{
			yyVAL.str = ""
		}
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7743
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7749
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7753
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7759
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7763
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7767
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7772
		{
			yyVAL.str = ""
		}
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7776
		{
			yyVAL.str = " optionally"
		}
	case 1582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7789
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7793
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7797
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7801
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7805
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7811
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7815
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7819
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1590:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7823
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7832
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7836
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7841
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7845
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7851
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7855
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7861
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7865
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7871
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7875
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7880
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7890
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7894
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7900
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7907
		{
			yyVAL.str = "charset"
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7917
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7921
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7925
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7934
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7936
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7939
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7941
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7944
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7946
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7949
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7951
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7954
		{
			yyVAL.empty = struct{}{}
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7956
		{
			yyVAL.empty = struct{}{}
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7958
		{
			yyVAL.empty = struct{}{}
		}
	case 1626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7962
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7967
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7971
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7976
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7978
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7982
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7988
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7992
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7999
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8005
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8009
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1638:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8015
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8019
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8026
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8032
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8038
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8042
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8046
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8701
		{
		}
	case 2273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8706
		{
		}
	case 2274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8710
		{
			skipToEnd(yylex)
		}
	case 2275:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8715
		{
			skipToEnd(yylex)
		}
	case 2276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8719
		{
			skipToEnd(yylex)
		}
	case 2277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8723
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
