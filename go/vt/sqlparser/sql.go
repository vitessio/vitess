// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const QUERIES = 57561
const EXHAUSTIVE = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const VITESS_MIGRATION = 57628
const CANCEL = 57629
const RETRY = 57630
const LAUNCH = 57631
const COMPLETE = 57632
const CLEANUP = 57633
const THROTTLE = 57634
const UNTHROTTLE = 57635
const EXPIRE = 57636
const RATIO = 57637
const VITESS_THROTTLER = 57638
const BEGIN = 57639
const START = 57640
const TRANSACTION = 57641
const COMMIT = 57642
const ROLLBACK = 57643
const SAVEPOINT = 57644
const RELEASE = 57645
const WORK = 57646
const CONSISTENT = 57647
const SNAPSHOT = 57648
const BIT = 57649
const TINYINT = 57650
const SMALLINT = 57651
const MEDIUMINT = 57652
const INT = 57653
const INTEGER = 57654
const BIGINT = 57655
const INTNUM = 57656
const REAL = 57657
const DOUBLE = 57658
const FLOAT_TYPE = 57659
const DECIMAL_TYPE = 57660
const NUMERIC = 57661
const TIME = 57662
const TIMESTAMP = 57663
const DATETIME = 57664
const YEAR = 57665
const CHAR = 57666
const VARCHAR = 57667
const BOOL = 57668
const CHARACTER = 57669
const VARBINARY = 57670
const NCHAR = 57671
const TEXT = 57672
const TINYTEXT = 57673
const MEDIUMTEXT = 57674
const LONGTEXT = 57675
const BLOB = 57676
const TINYBLOB = 57677
const MEDIUMBLOB = 57678
const LONGBLOB = 57679
const JSON = 57680
const JSON_SCHEMA_VALID = 57681
const JSON_SCHEMA_VALIDATION_REPORT = 57682
const ENUM = 57683
const GEOMETRY = 57684
const POINT = 57685
const LINESTRING = 57686
const POLYGON = 57687
const GEOMCOLLECTION = 57688
const GEOMETRYCOLLECTION = 57689
const MULTIPOINT = 57690
const MULTILINESTRING = 57691
const MULTIPOLYGON = 57692
const ASCII = 57693
const UNICODE = 57694
const NULLX = 57695
const AUTO_INCREMENT = 57696
const APPROXNUM = 57697
const SIGNED = 57698
const UNSIGNED = 57699
const ZEROFILL = 57700
const CODE = 57701
const COLLATION = 57702
const COLUMNS = 57703
const DATABASES = 57704
const ENGINES = 57705
const EVENT = 57706
const EXTENDED = 57707
const FIELDS = 57708
const FULL = 57709
const FUNCTION = 57710
const GTID_EXECUTED = 57711
const KEYSPACES = 57712
const OPEN = 57713
const PLUGINS = 57714
const PRIVILEGES = 57715
const PROCESSLIST = 57716
const SCHEMAS = 57717
const TABLES = 57718
const TRIGGERS = 57719
const USER = 57720
const VGTID_EXECUTED = 57721
const VITESS_KEYSPACES = 57722
const VITESS_METADATA = 57723
const VITESS_MIGRATIONS = 57724
const VITESS_REPLICATION_STATUS = 57725
const VITESS_SHARDS = 57726
const VITESS_TABLETS = 57727
const VITESS_TARGET = 57728
const VSCHEMA = 57729
const VITESS_THROTTLED_APPS = 57730
const NAMES = 57731
const GLOBAL = 57732
const SESSION = 57733
const ISOLATION = 57734
const LEVEL = 57735
const READ = 57736
const WRITE = 57737
const ONLY = 57738
const REPEATABLE = 57739
const COMMITTED = 57740
const UNCOMMITTED = 57741
const SERIALIZABLE = 57742
const CURRENT_TIMESTAMP = 57743
const DATABASE = 57744
const CURRENT_DATE = 57745
const NOW = 57746
const CURRENT_TIME = 57747
const LOCALTIME = 57748
const LOCALTIMESTAMP = 57749
const CURRENT_USER = 57750
const UTC_DATE = 57751
const UTC_TIME = 57752
const UTC_TIMESTAMP = 57753
const DAY = 57754
const DAY_HOUR = 57755
const DAY_MICROSECOND = 57756
const DAY_MINUTE = 57757
const DAY_SECOND = 57758
const HOUR = 57759
const HOUR_MICROSECOND = 57760
const HOUR_MINUTE = 57761
const HOUR_SECOND = 57762
const MICROSECOND = 57763
const MINUTE = 57764
const MINUTE_MICROSECOND = 57765
const MINUTE_SECOND = 57766
const MONTH = 57767
const QUARTER = 57768
const SECOND = 57769
const SECOND_MICROSECOND = 57770
const YEAR_MONTH = 57771
const WEEK = 57772
const REPLACE = 57773
const CONVERT = 57774
const CAST = 57775
const SUBSTR = 57776
const SUBSTRING = 57777
const SEPARATOR = 57778
const TIMESTAMPADD = 57779
const TIMESTAMPDIFF = 57780
const WEIGHT_STRING = 57781
const LTRIM = 57782
const RTRIM = 57783
const TRIM = 57784
const JSON_ARRAY = 57785
const JSON_OBJECT = 57786
const JSON_QUOTE = 57787
const JSON_DEPTH = 57788
const JSON_TYPE = 57789
const JSON_LENGTH = 57790
const JSON_VALID = 57791
const JSON_ARRAY_APPEND = 57792
const JSON_ARRAY_INSERT = 57793
const JSON_INSERT = 57794
const JSON_MERGE = 57795
const JSON_MERGE_PATCH = 57796
const JSON_MERGE_PRESERVE = 57797
const JSON_REMOVE = 57798
const JSON_REPLACE = 57799
const JSON_SET = 57800
const JSON_UNQUOTE = 57801
const COUNT = 57802
const AVG = 57803
const MAX = 57804
const MIN = 57805
const SUM = 57806
const GROUP_CONCAT = 57807
const BIT_AND = 57808
const BIT_OR = 57809
const BIT_XOR = 57810
const STD = 57811
const STDDEV = 57812
const STDDEV_POP = 57813
const STDDEV_SAMP = 57814
const VAR_POP = 57815
const VAR_SAMP = 57816
const VARIANCE = 57817
const REGEXP_INSTR = 57818
const REGEXP_LIKE = 57819
const REGEXP_REPLACE = 57820
const REGEXP_SUBSTR = 57821
const ExtractValue = 57822
const UpdateXML = 57823
const GET_LOCK = 57824
const RELEASE_LOCK = 57825
const RELEASE_ALL_LOCKS = 57826
const IS_FREE_LOCK = 57827
const IS_USED_LOCK = 57828
const LOCATE = 57829
const POSITION = 57830
const MATCH = 57831
const AGAINST = 57832
const BOOLEAN = 57833
const LANGUAGE = 57834
const WITH = 57835
const QUERY = 57836
const EXPANSION = 57837
const WITHOUT = 57838
const VALIDATION = 57839
const UNUSED = 57840
const ARRAY = 57841
const BYTE = 57842
const CUME_DIST = 57843
const DESCRIPTION = 57844
const DENSE_RANK = 57845
const EMPTY = 57846
const EXCEPT = 57847
const FIRST_VALUE = 57848
const GROUPING = 57849
const GROUPS = 57850
const JSON_TABLE = 57851
const LAG = 57852
const LAST_VALUE = 57853
const LATERAL = 57854
const LEAD = 57855
const NTH_VALUE = 57856
const NTILE = 57857
const OF = 57858
const OVER = 57859
const PERCENT_RANK = 57860
const RANK = 57861
const RECURSIVE = 57862
const ROW_NUMBER = 57863
const SYSTEM = 57864
const WINDOW = 57865
const ACTIVE = 57866
const ADMIN = 57867
const AUTOEXTEND_SIZE = 57868
const BUCKETS = 57869
const CLONE = 57870
const COLUMN_FORMAT = 57871
const COMPONENT = 57872
const DEFINITION = 57873
const ENFORCED = 57874
const ENGINE_ATTRIBUTE = 57875
const EXCLUDE = 57876
const FOLLOWING = 57877
const GET_MASTER_PUBLIC_KEY = 57878
const HISTOGRAM = 57879
const HISTORY = 57880
const INACTIVE = 57881
const INVISIBLE = 57882
const LOCKED = 57883
const MASTER_COMPRESSION_ALGORITHMS = 57884
const MASTER_PUBLIC_KEY_PATH = 57885
const MASTER_TLS_CIPHERSUITES = 57886
const MASTER_ZSTD_COMPRESSION_LEVEL = 57887
const NESTED = 57888
const NETWORK_NAMESPACE = 57889
const NOWAIT = 57890
const NULLS = 57891
const OJ = 57892
const OLD = 57893
const OPTIONAL = 57894
const ORDINALITY = 57895
const ORGANIZATION = 57896
const OTHERS = 57897
const PARTIAL = 57898
const PATH = 57899
const PERSIST = 57900
const PERSIST_ONLY = 57901
const PRECEDING = 57902
const PRIVILEGE_CHECKS_USER = 57903
const PROCESS = 57904
const RANDOM = 57905
const REFERENCE = 57906
const REQUIRE_ROW_FORMAT = 57907
const RESOURCE = 57908
const RESPECT = 57909
const RESTART = 57910
const RETAIN = 57911
const REUSE = 57912
const ROLE = 57913
const SECONDARY = 57914
const SECONDARY_ENGINE = 57915
const SECONDARY_ENGINE_ATTRIBUTE = 57916
const SECONDARY_LOAD = 57917
const SECONDARY_UNLOAD = 57918
const SIMPLE = 57919
const SKIP = 57920
const SRID = 57921
const THREAD_PRIORITY = 57922
const TIES = 57923
const UNBOUNDED = 57924
const VCPU = 57925
const VISIBLE = 57926
const RETURNING = 57927
const FORMAT_BYTES = 57928
const FORMAT_PICO_TIME = 57929
const PS_CURRENT_THREAD_ID = 57930
const PS_THREAD_ID = 57931
const GTID_SUBSET = 57932
const GTID_SUBTRACT = 57933
const WAIT_FOR_EXECUTED_GTID_SET = 57934
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57935
const FORMAT = 57936
const TREE = 57937
const VITESS = 57938
const TRADITIONAL = 57939
const VTEXPLAIN = 57940
const VEXPLAIN = 57941
const PLAN = 57942
const LOCAL = 57943
const LOW_PRIORITY = 57944
const NO_WRITE_TO_BINLOG = 57945
const LOGS = 57946
const ERROR = 57947
const GENERAL = 57948
const HOSTS = 57949
const OPTIMIZER_COSTS = 57950
const USER_RESOURCES = 57951
const SLOW = 57952
const CHANNEL = 57953
const RELAY = 57954
const EXPORT = 57955
const CURRENT = 57956
const ROW = 57957
const ROWS = 57958
const AVG_ROW_LENGTH = 57959
const CONNECTION = 57960
const CHECKSUM = 57961
const DELAY_KEY_WRITE = 57962
const ENCRYPTION = 57963
const ENGINE = 57964
const INSERT_METHOD = 57965
const MAX_ROWS = 57966
const MIN_ROWS = 57967
const PACK_KEYS = 57968
const PASSWORD = 57969
const FIXED = 57970
const DYNAMIC = 57971
const COMPRESSED = 57972
const REDUNDANT = 57973
const COMPACT = 57974
const ROW_FORMAT = 57975
const STATS_AUTO_RECALC = 57976
const STATS_PERSISTENT = 57977
const STATS_SAMPLE_PAGES = 57978
const STORAGE = 57979
const MEMORY = 57980
const DISK = 57981
const PARTITIONS = 57982
const LINEAR = 57983
const RANGE = 57984
const LIST = 57985
const SUBPARTITION = 57986
const SUBPARTITIONS = 57987
const HASH = 57988

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"EXHAUSTIVE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 49,
	14, 49,
	-2, 38,
	-1, 50,
	1, 157,
	664, 157,
	-2, 165,
	-1, 51,
	135, 165,
	176, 165,
	344, 165,
	-2, 515,
	-1, 58,
	36, 762,
	240, 762,
	251, 762,
	286, 776,
	287, 776,
	-2, 764,
	-1, 63,
	242, 800,
	-2, 798,
	-1, 118,
	239, 1452,
	-2, 131,
	-1, 120,
	1, 158,
	664, 158,
	-2, 165,
	-1, 131,
	136, 401,
	245, 401,
	-2, 504,
	-1, 150,
	135, 165,
	176, 165,
	344, 165,
	-2, 524,
	-1, 811,
	87, 1469,
	-2, 1323,
	-1, 812,
	87, 1470,
	221, 1474,
	-2, 1324,
	-1, 813,
	221, 1473,
	-2, 40,
	-1, 893,
	60, 874,
	-2, 889,
	-1, 979,
	250, 41,
	255, 41,
	-2, 412,
	-1, 1064,
	1, 572,
	664, 572,
	-2, 165,
	-1, 1363,
	221, 1474,
	-2, 1324,
	-1, 1511,
	60, 875,
	-2, 894,
	-1, 1512,
	60, 876,
	-2, 895,
	-1, 1563,
	135, 165,
	176, 165,
	344, 165,
	-2, 451,
	-1, 1642,
	136, 401,
	245, 401,
	-2, 504,
	-1, 1651,
	250, 42,
	255, 42,
	-2, 413,
	-1, 2010,
	221, 1478,
	-2, 1472,
	-1, 2011,
	221, 1474,
	-2, 1470,
	-1, 2111,
	135, 165,
	176, 165,
	344, 165,
	-2, 452,
	-1, 2118,
	26, 186,
	-2, 188,
	-1, 2481,
	78, 96,
	88, 96,
	-2, 953,
	-1, 2549,
	639, 688,
	-2, 662,
	-1, 2716,
	50, 1420,
	-2, 1414,
	-1, 3368,
	639, 688,
	-2, 676,
	-1, 3456,
	23, 1832,
	33, 1832,
	177, 1832,
	262, 1832,
	324, 1832,
	325, 1832,
	326, 1832,
	327, 1832,
	328, 1832,
	329, 1832,
	330, 1832,
	332, 1832,
	333, 1832,
	334, 1832,
	335, 1832,
	336, 1832,
	337, 1832,
	338, 1832,
	339, 1832,
	340, 1832,
	341, 1832,
	342, 1832,
	343, 1832,
	345, 1832,
	347, 1832,
	348, 1832,
	349, 1832,
	350, 1832,
	351, 1832,
	352, 1832,
	353, 1832,
	354, 1832,
	355, 1832,
	358, 1832,
	359, 1832,
	360, 1832,
	361, 1832,
	362, 1832,
	364, 1832,
	365, 1832,
	366, 1832,
	367, 1832,
	508, 1832,
	-2, 620,
}

const yyPrivate = 57344

const yyLast = 47342

var yyAct = [...]int{
	1519, 3527, 3116, 3117, 815, 822, 3115, 3349, 3538, 814,
	685, 3433, 3496, 3454, 3497, 3086, 2943, 1566, 1877, 3399,
	2108, 2059, 3422, 2865, 2768, 2775, 2039, 3333, 3281, 2825,
	665, 2830, 2827, 2826, 2824, 2829, 2828, 3331, 2816, 3073,
	1823, 2732, 777, 5, 2729, 886, 3145, 3321, 2041, 2415,
	2982, 2675, 2381, 2178, 1011, 2844, 667, 2730, 2733, 3150,
	2610, 2976, 2845, 775, 1526, 2783, 2079, 695, 2727, 3002,
	2717, 1128, 2454, 2063, 2847, 2441, 2001, 2968, 663, 776,
	2546, 2514, 1076, 2141, 2594, 1620, 2871, 1130, 2166, 2146,
	941, 781, 2515, 2082, 40, 2516, 2209, 2084, 2096, 1667,
	159, 2433, 2083, 39, 2466, 2447, 1513, 41, 1972, 2417,
	910, 1998, 909, 888, 1873, 2187, 1649, 2586, 2165, 1105,
	2071, 2226, 1831, 2148, 145, 2508, 969, 1555, 2483, 1535,
	2086, 1493, 677, 1375, 974, 1850, 1766, 1896, 660, 1656,
	1892, 948, 1303, 1971, 1288, 980, 945, 977, 2163, 782,
	1748, 100, 949, 2137, 101, 975, 1554, 1770, 976, 1540,
	672, 927, 929, 1335, 2064, 1359, 1968, 1822, 1775, 1126,
	2006, 900, 96, 890, 1119, 894, 123, 95, 897, 1615,
	128, 81, 121, 122, 129, 1060, 898, 895, 922, 80,
	1641, 896, 89, 163, 912, 654, 671, 94, 1379, 3358,
	1383, 102, 1013, 3528, 2539, 2180, 2181, 2182, 2835, 3074,
	2813, 2180, 987, 103, 2537, 1030, 1031, 1032, 2224, 1035,
	1036, 1037, 1038, 599, 1489, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	1056, 1057, 130, 913, 124, 1733, 919, 919, 917, 921,
	942, 1016, 3384, 2569, 2568, 3066, 831, 832, 833, 3480,
	3029, 91, 2602, 2603, 2833, 655, 3380, 3379, 903, 91,
	2007, 889, 633, 936, 904, 2835, 2, 937, 3385, 1905,
	990, 1838, 887, 2036, 2037, 639, 1837, 1836, 2832, 966,
	2839, 3120, 831, 832, 833, 911, 659, 965, 1835, 1017,
	1020, 1021, 1834, 964, 963, 3434, 639, 1833, 3120, 1806,
	657, 186, 658, 967, 124, 3475, 2269, 91, 2413, 107,
	108, 109, 1299, 112, 1304, 2713, 118, 2213, 1033, 187,
	91, 2833, 594, 958, 3464, 125, 2679, 147, 2559, 3484,
	3548, 3482, 3495, 652, 653, 991, 664, 3518, 168, 1853,
	633, 1320, 3462, 882, 883, 884, 885, 2839, 2443, 893,
	2948, 3468, 3469, 953, 3483, 1520, 3481, 1024, 3380, 2785,
	2786, 2212, 3500, 2947, 1304, 2562, 3463, 3334, 3119, 158,
	3440, 2211, 124, 2382, 1843, 146, 2890, 924, 925, 3277,
	3276, 3079, 630, 1015, 3080, 3119, 1014, 633, 3509, 82,
	3287, 82, 84, 2836, 165, 3478, 3098, 166, 1290, 3087,
	3423, 2771, 3430, 2206, 3286, 3097, 3440, 82, 1882, 2278,
	3459, 2910, 82, 1630, 1063, 2457, 134, 135, 157, 156,
	185, 2492, 2764, 1314, 2491, 2103, 2104, 2493, 2601, 2067,
	615, 935, 779, 780, 2414, 2576, 2577, 1556, 3363, 1557,
	2458, 2765, 2766, 2275, 613, 2585, 2772, 1815, 1816, 962,
	2102, 1069, 1070, 1095, 880, 879, 935, 779, 780, 1083,
	2836, 3163, 1123, 2540, 1084, 3350, 2504, 91, 2784, 91,
	2774, 634, 2979, 1314, 2276, 633, 1317, 1096, 1318, 1319,
	2787, 2038, 633, 1072, 610, 91, 1089, 2644, 2769, 633,
	91, 2867, 2157, 625, 1112, 2898, 1114, 1289, 2121, 2120,
	633, 1100, 1101, 2450, 2451, 2785, 2786, 960, 620, 647,
	2896, 1059, 2770, 2267, 1814, 2151, 1818, 651, 623, 151,
	132, 154, 139, 131, 1300, 152, 153, 1310, 1552, 645,
	1302, 2067, 2587, 169, 1111, 1113, 2872, 1497, 3309, 1083,
	3310, 2547, 175, 140, 1084, 2776, 2188, 2860, 2227, 634,
	2572, 3501, 1082, 3530, 1081, 2861, 1116, 143, 141, 136,
	137, 138, 142, 2270, 2271, 2273, 2272, 1097, 2232, 133,
	962, 1058, 3502, 1122, 633, 1749, 1090, 1310, 144, 2589,
	1121, 2868, 600, 1723, 602, 616, 1104, 636, 1065, 635,
	606, 3068, 604, 608, 617, 609, 634, 603, 3067, 614,
	2250, 1102, 605, 618, 619, 622, 626, 627, 628, 624,
	621, 1103, 612, 637, 2784, 1034, 1098, 1099, 1754, 1040,
	2065, 2066, 1039, 2233, 2231, 186, 2787, 1724, 3064, 1725,
	961, 2869, 2229, 3261, 3476, 1062, 1109, 2247, 1000, 2248,
	1110, 2249, 2239, 2235, 2237, 2238, 2236, 2240, 2241, 125,
	1115, 2645, 2191, 3124, 970, 3542, 928, 1634, 971, 2080,
	1500, 1010, 168, 2150, 160, 971, 2230, 2678, 1009, 1008,
	998, 1007, 1006, 1079, 1108, 1085, 1086, 1087, 1088, 1005,
	1004, 1003, 186, 1002, 634, 997, 2787, 3549, 3507, 982,
	2276, 634, 1350, 2542, 1353, 1354, 1355, 1356, 634, 1124,
	1125, 1350, 2593, 946, 1367, 2497, 125, 1371, 147, 634,
	946, 946, 989, 1361, 944, 3357, 983, 1767, 165, 168,
	2538, 166, 2065, 2066, 1655, 1019, 2418, 2420, 2164, 1117,
	923, 982, 2590, 2217, 1093, 1018, 1061, 2216, 1763, 1291,
	2773, 1027, 155, 3063, 185, 2806, 938, 932, 930, 3436,
	158, 961, 1628, 1553, 2541, 989, 146, 1627, 1309, 1306,
	1307, 1308, 1313, 1315, 1312, 968, 1311, 2980, 2571, 2506,
	2574, 938, 932, 930, 1626, 165, 1305, 2210, 166, 2606,
	3467, 3435, 3346, 634, 2557, 3436, 1001, 1026, 2290, 1764,
	1321, 1282, 1283, 1624, 2837, 2838, 828, 1643, 1644, 157,
	156, 185, 1357, 148, 828, 1281, 149, 2841, 1309, 1306,
	1307, 1308, 1313, 1315, 1312, 988, 1311, 3435, 999, 1376,
	992, 982, 598, 638, 3466, 994, 1305, 2208, 85, 995,
	993, 593, 1757, 1654, 1755, 1756, 161, 1758, 1759, 3096,
	3016, 2998, 2584, 173, 631, 2583, 1351, 1352, 1735, 1734,
	1736, 1737, 1738, 2561, 2488, 2596, 2453, 169, 988, 632,
	2595, 2837, 2838, 3027, 3028, 828, 175, 2596, 2390, 1753,
	1885, 3118, 2595, 1544, 2841, 3540, 1452, 1074, 3541, 120,
	3539, 2448, 2109, 1381, 181, 1382, 1521, 1523, 3118, 1385,
	90, 1350, 90, 1347, 2419, 2763, 2277, 2560, 989, 906,
	151, 1645, 154, 1120, 1642, 1298, 152, 153, 90, 1487,
	115, 1078, 2630, 90, 169, 2777, 3371, 1012, 1071, 2781,
	3059, 1488, 2992, 175, 2154, 1504, 2780, 162, 167, 164,
	170, 171, 172, 174, 176, 177, 178, 179, 1092, 2932,
	1906, 2228, 1827, 180, 182, 183, 184, 1760, 1068, 1094,
	1080, 1558, 1897, 1897, 1907, 2307, 989, 2530, 931, 3510,
	2782, 3159, 1106, 1319, 2155, 2778, 1776, 1318, 1319, 1503,
	2779, 2153, 3034, 1507, 1458, 1459, 1460, 1461, 1462, 890,
	3033, 2195, 116, 931, 1664, 1488, 1663, 1653, 160, 1501,
	2205, 1505, 2203, 1000, 1506, 100, 998, 989, 101, 3401,
	1494, 988, 1336, 1025, 3503, 2156, 3017, 1022, 2200, 1481,
	3544, 1631, 1632, 1633, 3550, 2152, 989, 1750, 902, 1751,
	3269, 2207, 1752, 1661, 2887, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1345, 1344, 1346, 1347, 1342, 1343, 1345, 1344,
	1346, 1347, 1320, 1536, 3402, 160, 957, 2204, 3339, 959,
	1696, 2200, 3268, 1699, 1077, 1701, 3259, 103, 1647, 988,
	3109, 3108, 1320, 1522, 1491, 982, 985, 986, 1064, 946,
	1502, 3041, 3040, 979, 983, 3030, 1525, 889, 1708, 1709,
	1622, 887, 1718, 1904, 1714, 1715, 2814, 1669, 1640, 1670,
	2202, 1672, 1674, 3340, 1659, 1678, 1680, 1682, 1684, 1686,
	988, 3551, 1700, 1549, 1550, 1520, 982, 985, 986, 1107,
	946, 1743, 1902, 1777, 979, 983, 1658, 2802, 3093, 988,
	3094, 1903, 1855, 155, 992, 982, 2512, 2511, 1623, 994,
	2282, 2283, 2284, 995, 993, 978, 1856, 1348, 1349, 1854,
	1741, 2160, 1320, 1638, 1744, 1728, 3290, 1636, 962, 1650,
	954, 1730, 1772, 1637, 996, 1727, 1726, 956, 955, 1508,
	161, 1716, 1780, 831, 832, 833, 1710, 173, 1707, 1784,
	1706, 1786, 1787, 1788, 1789, 1742, 1705, 1317, 1793, 1318,
	1319, 2611, 1704, 1676, 148, 1320, 2632, 149, 1657, 1657,
	1805, 1778, 1779, 1946, 3024, 639, 1320, 1317, 1768, 1318,
	1319, 2003, 2864, 1285, 1740, 1783, 960, 1774, 181, 2072,
	2073, 639, 1790, 1791, 1792, 1729, 1552, 161, 2334, 1320,
	3504, 106, 2495, 639, 173, 1629, 3514, 1520, 1529, 2176,
	2175, 965, 105, 3366, 104, 2174, 2173, 964, 963, 1340,
	1341, 1342, 1343, 1345, 1344, 1346, 1347, 3365, 124, 3343,
	1782, 162, 167, 164, 170, 171, 172, 174, 176, 177,
	178, 179, 3342, 1320, 3341, 181, 2613, 180, 182, 183,
	184, 2991, 2172, 2171, 1530, 1803, 3264, 1317, 3248, 1318,
	1319, 1804, 1938, 1927, 1928, 1929, 1930, 1940, 1931, 1932,
	1933, 1945, 1941, 1934, 1935, 1942, 1943, 1944, 1936, 1937,
	1939, 1520, 1520, 3512, 1520, 2439, 3529, 1316, 162, 167,
	164, 170, 171, 172, 174, 176, 177, 178, 179, 3247,
	1317, 1320, 1318, 1319, 180, 182, 183, 184, 3158, 961,
	3156, 1317, 3105, 1318, 1319, 1486, 2623, 2622, 2621, 2615,
	1485, 2619, 97, 2614, 3359, 2612, 1320, 1880, 1880, 99,
	2617, 1878, 1878, 98, 1317, 1859, 1318, 1319, 1336, 2616,
	2605, 1881, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1322,
	1484, 1900, 2888, 1320, 3038, 1901, 40, 2618, 2620, 40,
	3023, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1345, 1344,
	1346, 1347, 1849, 1361, 1336, 3491, 1520, 1332, 1317, 1333,
	1318, 1319, 1316, 1520, 3295, 3446, 1520, 3294, 1520, 1964,
	1898, 2439, 3429, 1334, 1348, 1349, 1331, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1345, 1344, 1346, 1347, 2344, 2873,
	3444, 1520, 97, 2439, 3409, 2439, 3405, 1996, 1316, 1520,
	1811, 1812, 2870, 98, 2805, 1839, 1840, 1841, 1842, 1845,
	1847, 1848, 1487, 2804, 1852, 1828, 1317, 3011, 1318, 1319,
	3392, 1520, 2025, 81, 1488, 2003, 81, 3077, 3356, 2000,
	2521, 1851, 2509, 1846, 3272, 1520, 2439, 3260, 2002, 1521,
	2032, 1317, 1320, 1318, 1319, 1483, 1857, 3077, 1520, 2439,
	3075, 1320, 826, 2222, 1886, 1887, 2200, 1520, 1520, 1889,
	2221, 919, 919, 1894, 2295, 2996, 1520, 1899, 1317, 1533,
	1318, 1319, 2062, 2056, 2008, 2044, 1884, 1807, 1999, 1773,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
	2010, 2355, 1520, 3252, 1947, 1948, 1949, 1950, 1951, 1952,
	1954, 1739, 1959, 1731, 1961, 1962, 1963, 1721, 1965, 1966,
	1967, 1717, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980,
	1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990,
	1991, 1992, 1993, 1994, 1995, 1532, 1997, 2118, 2004, 2005,
	919, 1713, 919, 919, 919, 919, 919, 99, 100, 2795,
	2794, 101, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2009, 2026, 2027, 2028, 2029, 2030, 2008, 2049, 100, 2050,
	2055, 101, 1320, 2161, 1712, 2013, 2014, 1317, 1711, 1318,
	1319, 1531, 2010, 2304, 2791, 2792, 1317, 1958, 1318, 1319,
	1118, 2090, 3251, 1891, 1893, 1320, 3085, 1969, 2758, 919,
	1320, 2127, 2128, 2129, 2130, 2113, 1520, 2122, 2276, 2123,
	2124, 2125, 2126, 2043, 2112, 2548, 2031, 1908, 1909, 1910,
	1911, 2068, 2069, 2094, 105, 2133, 2134, 2135, 2136, 2526,
	1858, 1922, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 903, 2057, 2107, 2143, 2116,
	2117, 2075, 2077, 2791, 2790, 2993, 2303, 2149, 2463, 1520,
	2100, 2189, 936, 2099, 2098, 2033, 937, 2276, 2570, 3397,
	2115, 1969, 1336, 2114, 2012, 2435, 2484, 2015, 2016, 3442,
	1520, 1619, 2551, 3370, 3318, 1520, 1320, 2186, 2544, 2545,
	99, 2159, 1320, 1316, 2346, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1345, 1344, 1346, 1347, 2145, 1317, 2455, 1318,
	1319, 1960, 2144, 2439, 2438, 2139, 2140, 2300, 1520, 2439,
	2194, 2201, 2158, 2197, 2162, 2198, 2462, 1336, 2170, 2289,
	1317, 2054, 1318, 1319, 2463, 1317, 2952, 1318, 1319, 2485,
	2214, 1883, 1520, 990, 2193, 2196, 2192, 2144, 2300, 2487,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1345, 1344, 1346,
	1347, 1336, 3042, 2484, 1619, 1618, 2215, 1564, 1563, 2218,
	3316, 1520, 2728, 2219, 2220, 2793, 3313, 1520, 2455, 2200,
	2463, 2463, 2701, 2991, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1345, 1344, 1346, 1347, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1345, 1344, 1346, 1347, 1320, 2101, 991, 2300,
	2355, 2260, 2261, 3043, 3044, 3045, 2263, 2331, 1657, 2225,
	2330, 1317, 2200, 1318, 1319, 2264, 2485, 1317, 2183, 1318,
	1319, 2070, 1524, 1320, 106, 2293, 2276, 2287, 2034, 2298,
	1883, 1829, 2301, 1813, 2302, 105, 1762, 104, 1551, 2309,
	2991, 2253, 892, 2311, 2312, 2313, 99, 973, 972, 91,
	3472, 3412, 3283, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 1527, 1320, 3249, 2292, 1338, 1339, 1340,
	1341, 1342, 1343, 1345, 1344, 1346, 1347, 3170, 1320, 2817,
	3299, 1520, 3058, 3055, 1320, 3036, 2915, 2914, 1621, 2335,
	2336, 2337, 2338, 2339, 2142, 2341, 2862, 2294, 2266, 2343,
	2819, 1320, 2815, 2348, 2349, 1520, 2350, 2967, 1520, 2353,
	2552, 2354, 2274, 2010, 2138, 2357, 2132, 2131, 1320, 2361,
	91, 1746, 1652, 2366, 2367, 2368, 2369, 1852, 1648, 1617,
	2285, 1317, 117, 1318, 1319, 2518, 2380, 2905, 2383, 2384,
	1320, 1692, 2866, 1063, 1851, 1320, 2386, 2388, 2960, 1520,
	3284, 1320, 2517, 2391, 2392, 2393, 2394, 2395, 1317, 1320,
	1318, 1319, 2957, 1520, 2402, 2403, 1320, 2404, 2955, 1520,
	2407, 2409, 2056, 2306, 2411, 3524, 2308, 3003, 3004, 2157,
	2047, 1320, 3522, 2009, 2423, 2920, 1520, 2315, 2316, 2317,
	2318, 1880, 1693, 1694, 1695, 1878, 3498, 3378, 3046, 1317,
	2518, 1318, 1319, 1520, 2424, 2468, 2471, 2472, 2473, 2469,
	3304, 2470, 2474, 1317, 3006, 1318, 1319, 1809, 3009, 1317,
	2811, 1318, 1319, 1320, 2903, 1520, 2810, 2340, 1320, 2410,
	1520, 2422, 1376, 1320, 2809, 2962, 1317, 1320, 1318, 1319,
	2728, 2531, 2254, 2408, 1520, 3047, 3048, 3049, 1320, 2750,
	2387, 1520, 1320, 1317, 2751, 1318, 1319, 3008, 1320, 2342,
	2459, 2747, 2425, 2746, 2427, 2370, 1520, 1528, 1320, 3374,
	2314, 2752, 1320, 2472, 2473, 1317, 2440, 1318, 1319, 1810,
	1317, 2997, 1318, 1319, 3285, 2748, 1317, 2329, 1318, 1319,
	2749, 2061, 2053, 2706, 1317, 1320, 1318, 1319, 3140, 2705,
	3139, 1317, 2436, 1318, 1319, 1494, 2412, 2362, 1520, 3151,
	3338, 40, 2449, 1520, 3149, 2987, 1317, 2958, 1318, 1319,
	2477, 2930, 2478, 2479, 2715, 1761, 2297, 2984, 1320, 878,
	2789, 2437, 1488, 1520, 1320, 2983, 2296, 2505, 2507, 2502,
	2452, 1320, 2286, 3505, 2288, 2520, 2543, 1320, 3138, 1536,
	2523, 2524, 2498, 3354, 1320, 2522, 2482, 3256, 1317, 1906,
	1318, 1319, 1029, 1317, 2486, 1318, 1319, 2432, 1317, 2489,
	1318, 1319, 1317, 1907, 1318, 1319, 2149, 2496, 1028, 2567,
	3060, 2881, 2517, 1317, 812, 1318, 1319, 1317, 2499, 1318,
	1319, 2599, 907, 1317, 1284, 1318, 1319, 1320, 2510, 2565,
	908, 2558, 1320, 1317, 125, 1318, 1319, 1317, 97, 1318,
	1319, 2519, 2926, 2989, 2718, 2720, 2072, 2073, 2912, 98,
	1320, 99, 2527, 2721, 2528, 2911, 2532, 2533, 2534, 1320,
	1317, 2908, 1318, 1319, 1320, 3536, 2564, 2807, 191, 2513,
	97, 191, 2257, 2969, 644, 3451, 1688, 99, 1640, 650,
	3355, 98, 2553, 2554, 3279, 2634, 2635, 2636, 2637, 2638,
	191, 2608, 2788, 1317, 2476, 1318, 1319, 2058, 2246, 1317,
	2563, 1318, 1319, 2245, 2643, 191, 1317, 1320, 1318, 1319,
	2244, 2406, 1317, 2243, 1318, 1319, 2405, 915, 916, 1317,
	2242, 1318, 1319, 1689, 1690, 1691, 104, 2624, 106, 2704,
	650, 191, 650, 2588, 2401, 2280, 3326, 2703, 2607, 105,
	106, 104, 3325, 2400, 3307, 2639, 2591, 3157, 2399, 2597,
	99, 105, 2598, 104, 3155, 3154, 3147, 3056, 2988, 2986,
	2820, 2184, 1317, 1635, 1318, 1319, 914, 1317, 105, 1318,
	1319, 3146, 2977, 2468, 2471, 2472, 2473, 2469, 106, 2470,
	2474, 2455, 2625, 3003, 3004, 1317, 3128, 1318, 1319, 105,
	2604, 2398, 3526, 3525, 1317, 2435, 1318, 1319, 2646, 1317,
	2332, 1318, 1319, 2045, 1545, 1537, 3525, 2680, 2682, 919,
	3526, 2627, 2628, 2629, 110, 111, 2631, 3344, 3022, 2633,
	905, 1826, 1824, 1825, 10, 9, 8, 3, 1320, 2648,
	93, 2737, 2685, 1, 2654, 1999, 1287, 1999, 1286, 2640,
	2641, 2642, 1317, 3026, 1318, 1319, 3461, 611, 2035, 2755,
	1492, 2647, 3499, 3457, 2649, 2650, 2651, 3458, 1732, 1722,
	2652, 2653, 3088, 1970, 1973, 2655, 3280, 2681, 2657, 2683,
	2731, 2659, 2660, 2661, 2662, 2731, 2708, 2740, 2757, 2663,
	1973, 1973, 1973, 1973, 1973, 2664, 2665, 2666, 2667, 2668,
	2823, 2700, 2190, 3054, 2626, 2685, 2696, 2090, 919, 2709,
	2147, 981, 150, 2110, 2707, 2686, 2687, 2688, 2689, 2690,
	2691, 2111, 2397, 2710, 2692, 2693, 3425, 2694, 114, 2695,
	2722, 2723, 894, 939, 113, 2090, 2090, 2090, 2090, 2090,
	2684, 2739, 2742, 2743, 895, 2745, 2741, 2725, 896, 2744,
	984, 1320, 2800, 2801, 2843, 2090, 1772, 2759, 2090, 2753,
	2760, 1091, 2185, 2656, 3078, 2658, 2761, 2503, 100, 2119,
	2822, 101, 1570, 1317, 2726, 1318, 1319, 1568, 2767, 1569,
	1567, 2669, 2670, 2671, 2672, 2883, 1572, 1571, 2734, 2799,
	2797, 2798, 2889, 2333, 2931, 1817, 646, 2475, 1320, 2756,
	640, 188, 1559, 2851, 1538, 2900, 2901, 2902, 1320, 2904,
	2906, 2697, 2698, 2699, 2944, 2821, 1023, 2885, 2609, 2850,
	2149, 2842, 601, 2913, 2857, 2796, 1320, 2223, 2917, 2918,
	2919, 2921, 2922, 2923, 2924, 2396, 607, 2925, 1320, 2927,
	2928, 2929, 1320, 1368, 2933, 2934, 2935, 2936, 2937, 2938,
	2939, 2940, 2941, 2942, 2877, 2874, 2876, 1808, 2702, 2818,
	2879, 2880, 2949, 1320, 2884, 2953, 2490, 2954, 2956, 934,
	2959, 2961, 926, 2963, 2964, 2965, 2966, 2891, 2892, 2894,
	2893, 2972, 2385, 2895, 2046, 2897, 1317, 2899, 1318, 1319,
	1518, 1514, 2379, 2426, 933, 3257, 2736, 2981, 1320, 2714,
	2716, 2442, 2719, 2712, 1320, 1515, 3337, 3148, 2946, 3410,
	2378, 2500, 1320, 1534, 2951, 2950, 2994, 2995, 2305, 1895,
	2999, 1358, 2377, 1320, 2087, 3123, 2376, 1320, 1844, 669,
	2051, 2052, 1517, 1317, 1516, 1318, 1319, 668, 666, 2428,
	2456, 1323, 816, 1317, 1320, 1318, 1319, 2375, 2416, 1546,
	1320, 2907, 2467, 2465, 2464, 2255, 2970, 2971, 2973, 2095,
	2975, 1317, 3005, 1318, 1319, 2916, 3001, 2985, 2978, 1320,
	3453, 2089, 2085, 1317, 2434, 1318, 1319, 1317, 2990, 1318,
	1319, 767, 2374, 766, 678, 1320, 670, 662, 2373, 765,
	764, 1320, 3019, 3000, 3007, 2849, 2372, 3437, 1317, 3010,
	1318, 1319, 2573, 2863, 3012, 1320, 2575, 2371, 2501, 2859,
	1320, 2365, 3014, 3015, 1320, 2851, 3031, 3032, 191, 3020,
	191, 3061, 3062, 191, 1320, 3076, 3021, 1301, 2364, 1510,
	2090, 2850, 3013, 1317, 2363, 1318, 1319, 3082, 3083, 1317,
	656, 1318, 1319, 1320, 3037, 952, 3039, 1317, 2886, 1318,
	1319, 1320, 3361, 2360, 650, 2279, 650, 650, 1317, 2909,
	1318, 1319, 1317, 1509, 1318, 1319, 1925, 3095, 3065, 2359,
	3099, 1320, 3069, 3070, 3071, 2358, 650, 191, 1926, 1317,
	3368, 1318, 1319, 2831, 3072, 1317, 2812, 1318, 1319, 2356,
	2549, 2177, 66, 44, 2352, 3332, 3398, 3110, 2351, 763,
	760, 3125, 3126, 3084, 1317, 1363, 1318, 1319, 2347, 3127,
	2676, 2677, 3114, 3381, 3382, 759, 1518, 1514, 3383, 1953,
	1317, 1297, 1318, 1319, 3122, 1294, 1317, 2345, 1318, 1319,
	3474, 1515, 3129, 1819, 3057, 2310, 92, 35, 34, 768,
	1317, 33, 1318, 1319, 32, 1317, 3100, 1318, 1319, 1317,
	31, 1318, 1319, 25, 24, 2299, 1511, 1512, 1517, 1317,
	1516, 1318, 1319, 23, 22, 21, 28, 3081, 20, 19,
	18, 2834, 3494, 3121, 3535, 119, 53, 50, 1317, 3143,
	1318, 1319, 48, 127, 126, 51, 1317, 47, 1318, 1319,
	1066, 45, 30, 29, 17, 16, 15, 1880, 14, 13,
	12, 1878, 3104, 11, 648, 7, 1317, 6, 1318, 1319,
	3172, 38, 3153, 37, 2731, 27, 3164, 3144, 36, 3166,
	3152, 26, 3101, 4, 3102, 2536, 3168, 3103, 2179, 3160,
	3106, 3107, 3162, 0, 0, 0, 0, 0, 0, 3111,
	0, 0, 0, 0, 0, 0, 0, 1363, 0, 3113,
	0, 0, 0, 3271, 0, 943, 0, 950, 0, 3176,
	3258, 0, 3278, 0, 0, 3173, 3174, 40, 0, 0,
	0, 3130, 0, 0, 3131, 0, 3132, 3133, 0, 3134,
	0, 3135, 3288, 3289, 0, 3291, 3136, 3292, 3293, 0,
	3255, 3254, 3296, 3297, 3298, 3253, 3300, 3303, 3301, 3302,
	3270, 3265, 3266, 3267, 191, 0, 1880, 0, 650, 650,
	1878, 3161, 3312, 3314, 3315, 3317, 3319, 3320, 3322, 3305,
	3275, 3274, 3169, 2734, 191, 3171, 0, 2734, 0, 0,
	0, 3112, 0, 0, 0, 0, 0, 3175, 0, 3282,
	0, 0, 0, 0, 650, 0, 0, 191, 0, 3306,
	0, 0, 0, 0, 0, 3250, 3352, 3308, 0, 650,
	0, 3311, 0, 0, 0, 191, 0, 186, 0, 3327,
	3328, 3330, 3348, 3329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3345, 0, 0, 0, 0,
	0, 125, 0, 0, 3262, 0, 0, 0, 0, 3351,
	0, 0, 650, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1363, 0, 0, 0, 0,
	0, 650, 650, 0, 650, 0, 650, 650, 0, 650,
	650, 650, 650, 650, 650, 0, 0, 0, 0, 0,
	0, 0, 1363, 0, 0, 1363, 650, 1363, 191, 0,
	0, 3353, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 3347, 0, 166, 0, 3335, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 650, 3377, 191, 0, 3372, 185, 0, 0, 0,
	0, 0, 3367, 2734, 3364, 0, 0, 650, 0, 191,
	3369, 0, 3393, 0, 0, 0, 0, 0, 3394, 3395,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	3406, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	650, 3387, 0, 0, 3388, 0, 0, 0, 3396, 0,
	0, 40, 3336, 0, 1587, 0, 3431, 3432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2731, 3438, 3403,
	3441, 3443, 3445, 0, 3439, 0, 3411, 3413, 3416, 3424,
	3421, 3418, 3417, 3415, 3420, 3419, 0, 0, 0, 0,
	0, 3360, 0, 0, 0, 3473, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 3449, 0, 0, 175, 3375,
	0, 0, 0, 3452, 3470, 3460, 3465, 0, 0, 3438,
	0, 0, 3282, 3426, 0, 3439, 3479, 40, 0, 0,
	0, 0, 3389, 3477, 3490, 3390, 0, 3391, 0, 0,
	0, 0, 827, 0, 3408, 83, 0, 0, 0, 0,
	3488, 1371, 0, 3493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3511, 3513, 3515, 0,
	0, 0, 0, 3508, 3506, 0, 0, 0, 0, 0,
	1880, 0, 0, 0, 1878, 3517, 3516, 0, 0, 0,
	3523, 3521, 0, 3520, 3519, 3438, 0, 3534, 1575, 0,
	0, 3439, 3531, 0, 3376, 650, 650, 0, 3537, 0,
	0, 3545, 3386, 3546, 3547, 3543, 0, 0, 650, 0,
	0, 0, 0, 0, 891, 0, 83, 191, 0, 0,
	160, 3471, 0, 0, 1880, 3554, 3555, 3302, 1878, 3553,
	0, 0, 0, 0, 0, 891, 0, 3552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	951, 3485, 0, 3486, 0, 3487, 0, 0, 0, 1129,
	0, 1129, 1129, 0, 0, 650, 0, 3492, 0, 0,
	0, 0, 0, 1588, 0, 1363, 0, 1587, 0, 0,
	0, 1292, 0, 0, 0, 0, 650, 0, 0, 0,
	0, 0, 1363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 650, 650, 0,
	0, 3532, 0, 3533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1601, 1604, 1605, 1606, 1607,
	1608, 1609, 0, 1610, 1611, 1612, 1613, 1614, 1589, 1590,
	1591, 1592, 1573, 1574, 1602, 0, 1576, 0, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 2011, 0, 1586,
	1593, 1594, 1595, 1596, 0, 1597, 1598, 1599, 1600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 0, 0, 0, 0, 650, 0, 0, 0, 0,
	0, 1575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	181, 0, 650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 650, 0, 0, 2011,
	191, 0, 191, 0, 191, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 650,
	0, 0, 0, 162, 167, 164, 170, 171, 172, 174,
	176, 177, 178, 179, 0, 0, 0, 0, 0, 180,
	182, 183, 184, 0, 0, 0, 1588, 0, 0, 0,
	0, 0, 0, 1498, 1499, 0, 0, 0, 0, 1603,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 650, 0, 0, 1560, 0, 0, 650, 1601, 1604,
	1605, 1606, 1607, 1608, 1609, 0, 1610, 1611, 1612, 1613,
	1614, 1589, 1590, 1591, 1592, 1573, 1574, 1602, 0, 1576,
	0, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	0, 0, 1586, 1593, 1594, 1595, 1596, 943, 1597, 1598,
	1599, 1600, 0, 0, 650, 0, 0, 0, 0, 650,
	0, 0, 0, 650, 650, 0, 1668, 1668, 0, 1668,
	0, 1668, 1668, 0, 1677, 1668, 1668, 1668, 1668, 1668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 191, 0,
	0, 191, 0, 191, 0, 0, 1745, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1129, 0, 0, 0, 0,
	0, 0, 1603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1127, 0, 1127, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1363, 0,
	2011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 891, 1360, 1365, 1366, 0, 1369, 0, 1370,
	1372, 1373, 1374, 0, 1377, 1378, 1380, 1380, 0, 1380,
	1384, 1384, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 0, 0, 0,
	0, 1451, 0, 1453, 1454, 1455, 1456, 1457, 0, 0,
	1129, 1129, 0, 0, 0, 0, 1384, 1384, 1384, 1384,
	1384, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 1490, 0, 0, 0, 0, 0, 0, 650, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 650,
	1874, 0, 0, 0, 0, 0, 0, 0, 0, 1639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1890, 125, 191, 147, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 1496, 168, 0, 0, 0, 0,
	891, 0, 0, 0, 891, 0, 0, 0, 0, 0,
	891, 0, 1923, 1924, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 650, 0, 166, 0, 0, 0, 191, 0,
	0, 0, 1129, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 1643, 1644, 157, 156, 185, 0, 650,
	0, 0, 0, 0, 0, 0, 650, 0, 0, 0,
	0, 0, 0, 0, 0, 650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2048, 1363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 191, 191, 191, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 2060, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 191,
	0, 1542, 0, 0, 1129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 943, 0, 151, 1645, 154, 0,
	1642, 0, 152, 153, 0, 0, 0, 0, 0, 0,
	169, 0, 650, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 42,
	43, 84, 0, 0, 0, 0, 0, 0, 1127, 950,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 650,
	0, 0, 46, 73, 74, 0, 71, 75, 0, 0,
	0, 0, 0, 0, 0, 72, 943, 0, 0, 0,
	0, 0, 950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 650, 0, 0,
	0, 0, 0, 0, 59, 650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 91, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 943,
	0, 0, 0, 0, 1874, 0, 650, 0, 1874, 1874,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 0, 0, 0, 650, 0, 0, 0, 0, 0,
	0, 811, 0, 0, 0, 0, 0, 0, 650, 0,
	0, 0, 1363, 0, 0, 650, 650, 1363, 191, 191,
	191, 191, 191, 0, 0, 0, 0, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 191, 0, 191, 0,
	0, 191, 191, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1127, 1127, 0, 0, 0, 0, 155,
	629, 0, 0, 0, 0, 0, 649, 83, 0, 0,
	83, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 2268, 0, 0,
	0, 0, 0, 0, 49, 52, 55, 54, 57, 650,
	70, 0, 1363, 79, 76, 0, 0, 650, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 649, 0, 649,
	148, 0, 0, 149, 0, 0, 191, 0, 58, 87,
	86, 0, 0, 68, 69, 56, 0, 0, 0, 0,
	0, 77, 78, 0, 0, 191, 0, 0, 191, 0,
	0, 0, 0, 161, 0, 1129, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 829, 0, 2003, 0,
	0, 830, 0, 60, 61, 0, 62, 63, 64, 65,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 167, 164, 170, 171, 172,
	174, 176, 177, 178, 179, 0, 0, 191, 0, 0,
	180, 182, 183, 184, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 85, 0, 0,
	0, 0, 2088, 2429, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2444, 0, 0, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 191, 191, 191, 0, 0, 0,
	0, 0, 0, 0, 650, 650, 0, 0, 0, 90,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 951, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 650, 650, 650, 650, 951, 0, 2525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2060, 0, 0, 0, 0, 0,
	0, 2550, 0, 0, 0, 0, 0, 0, 0, 0,
	2555, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 829, 0, 0, 0, 67, 830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1363, 0, 0, 0,
	0, 650, 0, 650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
	877, 0, 0, 650, 1874, 0, 2281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 0, 0, 650,
	0, 649, 1280, 649, 649, 0, 0, 0, 0, 0,
	0, 0, 650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2674, 649, 0, 2291, 0, 0, 0, 0,
	1129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1362, 0, 0, 0, 0, 0, 0, 0,
	0, 1668, 650, 0, 0, 0, 650, 650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2711,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1129, 0, 650, 0, 0, 0, 0,
	2738, 1668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 0, 0, 0, 0, 0,
	0, 0, 0, 2421, 943, 0, 0, 0, 0, 0,
	191, 0, 2060, 0, 1362, 0, 0, 0, 0, 0,
	0, 891, 0, 0, 0, 0, 0, 0, 650, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2460, 2461, 0, 0, 0, 0, 0, 0,
	0, 2088, 0, 0, 891, 2480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 649, 0, 0, 650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1363,
	0, 650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 650, 650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 0, 0, 2945, 0, 0, 1616, 650, 0, 0,
	0, 0, 0, 0, 0, 0, 1625, 0, 0, 0,
	0, 191, 650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2556, 0, 0, 0, 0, 649,
	0, 1651, 0, 0, 0, 0, 0, 0, 0, 1660,
	0, 0, 1362, 1662, 0, 0, 1665, 1666, 649, 649,
	0, 649, 0, 649, 649, 650, 649, 649, 649, 649,
	649, 649, 0, 0, 0, 0, 0, 0, 0, 1362,
	1697, 1698, 1362, 649, 1362, 0, 1703, 650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 0, 650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 649, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2060,
	2060, 0, 0, 0, 0, 0, 0, 1495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 649, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3089, 3090, 3091, 3092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 596, 2673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2088, 0,
	0, 0, 0, 0, 947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2735, 0, 83, 0, 0, 2088, 2088, 2088, 2088,
	2088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2088, 0, 0, 2088,
	0, 0, 0, 0, 0, 0, 3165, 0, 3167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 649, 649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2840, 0, 0, 0, 0, 0, 2060, 0,
	0, 0, 2848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3273, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 0, 1129, 0, 0,
	0, 0, 1362, 0, 0, 0, 0, 0, 0, 0,
	0, 1888, 0, 649, 0, 0, 0, 0, 0, 1362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 649, 649, 0, 3323, 0, 0,
	0, 3323, 3323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2060,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 649,
	0, 2088, 0, 0, 0, 189, 0, 0, 597, 0,
	0, 0, 0, 649, 3018, 0, 649, 0, 0, 0,
	0, 0, 0, 2060, 0, 0, 0, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 0, 901, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 920,
	920, 0, 0, 0, 0, 0, 0, 0, 597, 0,
	0, 0, 0, 0, 3400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3404, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 0, 0, 2167, 2168,
	2169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1129, 1129, 0, 0, 0, 0, 0, 0, 649, 0,
	0, 0, 0, 0, 649, 1660, 0, 0, 1660, 0,
	1660, 0, 3447, 0, 0, 0, 2199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1067, 0, 1073, 0, 0, 1075, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 649, 0, 0, 0,
	649, 649, 0, 0, 0, 0, 0, 0, 0, 0,
	3400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3137, 2060, 3141, 3142, 0, 0, 0, 0, 0,
	1293, 0, 0, 0, 0, 0, 0, 0, 0, 2945,
	0, 3455, 0, 0, 0, 0, 2735, 0, 83, 0,
	2735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1362, 0, 649, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3362, 0, 0, 0, 1565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 83, 0, 0, 649, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 0, 0, 0, 0, 597, 0, 597, 0, 0,
	597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1702, 0, 3407, 0, 0, 0, 0, 83, 0,
	0, 0, 0, 0, 597, 0, 0, 91, 0, 0,
	829, 0, 0, 0, 817, 830, 831, 832, 833, 818,
	0, 0, 819, 820, 0, 821, 1747, 0, 0, 649,
	0, 0, 1364, 0, 0, 0, 0, 0, 0, 826,
	834, 835, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 649, 0, 1781, 0,
	0, 0, 0, 649, 0, 1785, 0, 1660, 1660, 0,
	0, 0, 649, 0, 0, 0, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 0, 0, 0, 2852, 2853, 1362, 2566,
	0, 0, 0, 0, 3489, 0, 0, 0, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 1364, 0, 0, 0, 0, 0,
	0, 0, 2854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 901, 0, 0, 649, 0, 0, 2855, 2856, 0,
	0, 0, 649, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 597, 649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 0, 0, 0, 1362,
	0, 0, 649, 649, 1362, 0, 0, 0, 783, 0,
	0, 787, 1364, 784, 785, 0, 0, 0, 786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1364,
	0, 0, 1364, 0, 1364, 597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2803, 1719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 0, 0, 0, 0, 0, 649, 0, 0, 1362,
	0, 0, 0, 0, 649, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 597, 0, 0, 0, 0, 0, 0, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 1794, 1795,
	597, 597, 597, 597, 597, 597, 597, 0, 0, 91,
	0, 0, 829, 0, 0, 2882, 817, 830, 831, 832,
	833, 818, 0, 0, 819, 820, 0, 821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 826, 834, 835, 0, 2074, 0, 0, 0, 0,
	0, 0, 0, 2078, 0, 2081, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 0, 0, 2852, 2853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2854, 0, 0, 0, 3025, 0,
	0, 0, 0, 0, 597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 649, 649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1364, 0, 1832, 0, 0, 0, 0, 2855,
	2856, 2234, 0, 0, 920, 920, 0, 0, 0, 1364,
	2251, 2252, 0, 0, 2256, 0, 0, 0, 649, 649,
	649, 649, 0, 2259, 0, 0, 0, 0, 0, 0,
	2262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 920, 1771, 920, 920, 920, 920, 920,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 920, 1362, 0, 0, 0, 0, 649, 0,
	649, 0, 0, 0, 0, 0, 901, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 597,
	0, 0, 0, 0, 0, 0, 1771, 597, 0, 597,
	0, 597, 2097, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	649, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 649, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 597, 0,
	0, 0, 0, 0, 0, 597, 0, 0, 0, 0,
	0, 0, 0, 0, 597, 597, 0, 0, 597, 0,
	2258, 649, 0, 0, 0, 0, 0, 597, 0, 0,
	0, 2529, 0, 0, 597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 0, 0, 0, 0,
	597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2578, 2579, 2580,
	2581, 2582, 0, 0, 0, 0, 649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1362, 0, 649, 0,
	0, 1832, 2592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1364, 0, 1771, 0, 0,
	0, 0, 649, 649, 2600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 649,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 649, 0, 649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 597, 0, 0, 0,
	0, 0, 0, 0, 1719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 0, 0, 0, 0, 597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 597, 0, 0, 0, 0,
	0, 0, 2535, 0, 0, 2846, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2875, 0,
	0, 2878, 0, 0, 0, 0, 0, 0, 1364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 597, 597, 597, 597, 597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 597, 597, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3194, 3196, 3195, 3213,
	3214, 3215, 3216, 3217, 3218, 3219, 717, 0, 597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 920, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2974, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 920, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3035, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3050, 0, 0, 3051, 3052, 3053,
	0, 0, 0, 0, 0, 0, 0, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1364,
	0, 0, 0, 0, 1364, 597, 597, 597, 597, 597,
	0, 0, 0, 0, 0, 0, 0, 2754, 0, 0,
	0, 0, 0, 1719, 0, 597, 0, 0, 597, 2762,
	1771, 0, 0, 0, 0, 0, 0, 0, 0, 3200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3208, 3209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 597, 0, 0, 783, 0, 696, 787,
	698, 784, 785, 0, 694, 697, 786, 0, 0, 0,
	0, 0, 597, 0, 0, 597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 715, 716, 3193, 3197, 3198, 3199, 3210, 3211,
	3212, 3220, 3222, 748, 3221, 3223, 3224, 3225, 3228, 3229,
	3230, 3231, 3226, 3227, 3232, 3177, 3181, 3178, 3179, 3180,
	3192, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190,
	3191, 3233, 3234, 3235, 3236, 3237, 3238, 3203, 3207, 3206,
	3204, 3205, 3201, 3202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 788, 0, 789, 0,
	0, 793, 0, 0, 0, 795, 794, 0, 796, 762,
	761, 0, 0, 790, 791, 0, 792, 0, 0, 0,
	0, 0, 0, 0, 597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 3239, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 597, 0,
	0, 597, 597, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 1263, 1248, 503,
	0, 1191, 1266, 1160, 1179, 1276, 1182, 1185, 1227, 1139,
	1205, 403, 1176, 1132, 1164, 1134, 1171, 1135, 1162, 1193,
	260, 1159, 1250, 1209, 1265, 354, 257, 1141, 1165, 417,
	1181, 198, 1229, 472, 244, 365, 362, 511, 272, 263,
	259, 242, 307, 373, 415, 493, 409, 1272, 358, 1215,
	0, 482, 388, 0, 0, 0, 1195, 1254, 1203, 1241,
	1190, 1228, 1149, 1214, 1267, 1177, 1224, 1268, 313, 240,
	315, 197, 400, 483, 276, 0, 0, 1719, 0, 3427,
	639, 0, 0, 0, 0, 3428, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 597, 339, 348, 347,
	328, 329, 331, 333, 338, 345, 351, 1173, 1221, 1262,
	1174, 1223, 255, 311, 262, 254, 508, 1273, 1253, 1138,
	1202, 1261, 0, 0, 221, 1264, 1197, 0, 1226, 0,
	1279, 1133, 1217, 0, 1136, 1140, 1275, 1257, 1168, 265,
	0, 0, 0, 0, 0, 0, 0, 1194, 1204, 1238,
	1242, 1188, 0, 0, 0, 0, 1364, 0, 0, 1166,
	0, 1213, 0, 0, 0, 1145, 1137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1192,
	0, 0, 0, 0, 1148, 0, 1167, 1239, 1719, 1131,
	288, 1142, 389, 247, 0, 439, 278, 1246, 1256, 1189,
	550, 1260, 1187, 1186, 1233, 1146, 1252, 1180, 353, 1144,
	320, 193, 217, 0, 1178, 399, 447, 459, 1251, 1163,
	1172, 245, 1170, 457, 413, 528, 225, 274, 444, 419,
	455, 427, 277, 1212, 1231, 456, 360, 513, 437, 525,
	551, 552, 253, 393, 537, 497, 545, 569, 218, 250,
	407, 490, 531, 479, 385, 509, 510, 319, 478, 286,
	196, 357, 557, 216, 465, 359, 234, 223, 515, 534,
	280, 442, 564, 205, 492, 523, 231, 469, 0, 0,
	571, 239, 489, 207, 520, 488, 381, 316, 317, 206,
	0, 443, 258, 284, 248, 402, 517, 518, 246, 572,
	220, 544, 212, 1143, 543, 395, 512, 521, 382, 371,
	211, 519, 380, 370, 324, 343, 344, 270, 297, 434,
	363, 435, 296, 298, 391, 390, 392, 200, 532, 0,
	201, 0, 484, 533, 573, 226, 227, 229, 1158, 269,
	273, 282, 285, 293, 294, 303, 355, 406, 433, 429,
	438, 1247, 507, 526, 538, 549, 555, 556, 558, 559,
	560, 561, 562, 565, 563, 394, 301, 480, 323, 361,
	1236, 1278, 412, 458, 232, 530, 481, 1153, 1157, 1151,
	1218, 1152, 1207, 1208, 1154, 1269, 1270, 1271, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 0, 1240, 1147, 0,
	1155, 1156, 1249, 1258, 1259, 592, 372, 471, 527, 325,
	337, 340, 330, 349, 0, 350, 326, 327, 332, 334,
	335, 336, 341, 342, 346, 352, 241, 203, 378, 386,
	506, 302, 208, 209, 210, 499, 500, 501, 502, 541,
	542, 546, 448, 449, 450, 451, 283, 536, 299, 454,
	453, 321, 322, 367, 436, 1211, 192, 213, 356, 1274,
	440, 279, 570, 540, 535, 199, 215, 1150, 252, 1161,
	1169, 0, 1175, 1183, 1184, 1196, 1198, 1199, 1200, 1201,
	1219, 1220, 1222, 1230, 1232, 1235, 1237, 1244, 1255, 1277,
	194, 195, 202, 214, 224, 228, 235, 251, 266, 268,
	275, 289, 300, 308, 309, 312, 318, 368, 374, 375,
	376, 377, 396, 397, 398, 401, 404, 405, 408, 410,
	411, 414, 418, 422, 423, 424, 426, 428, 430, 441,
	446, 460, 461, 462, 463, 464, 467, 468, 473, 474,
	475, 476, 477, 485, 486, 491, 514, 516, 529, 547,
	553, 466, 291, 292, 431, 432, 304, 305, 567, 568,
	290, 524, 554, 522, 566, 548, 425, 366, 1210, 1216,
	369, 271, 295, 310, 1225, 539, 487, 219, 452, 281,
	243, 1243, 1245, 204, 238, 222, 249, 264, 267, 314,
	379, 387, 416, 421, 287, 261, 236, 445, 233, 470,
	494, 495, 496, 498, 383, 256, 420, 1206, 1234, 364,
	504, 505, 306, 384, 0, 0, 0, 1263, 1248, 503,
	0, 1191, 1266, 1160, 1179, 1276, 1182, 1185, 1227, 1139,
	1205, 403, 1176, 1132, 1164, 1134, 1171, 1135, 1162, 1193,
	260, 1159, 1250, 1209, 1265, 354, 257, 1141, 1165, 417,
	1181, 198, 1229, 472, 244, 365, 362, 511, 272, 263,
	259, 242, 307, 373, 415, 493, 409, 1272, 358, 1215,
	0, 482, 388, 0, 0, 0, 1195, 1254, 1203, 1241,
	1190, 1228, 1149, 1214, 1267, 1177, 1224, 1268, 313, 240,
	315, 197, 400, 483, 276, 0, 0, 0, 0, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 339, 348, 347,
	328, 329, 331, 333, 338, 345, 351, 1173, 1221, 1262,
	1174, 1223, 255, 311, 262, 254, 508, 1273, 1253, 1138,
	1202, 1261, 0, 0, 221, 1264, 1197, 0, 1226, 0,
	1279, 1133, 1217, 0, 1136, 1140, 1275, 1257, 1168, 265,
	0, 0, 0, 0, 0, 0, 0, 1194, 1204, 1238,
	1242, 1188, 0, 0, 0, 0, 0, 2763, 0, 1166,
	0, 1213, 0, 0, 0, 1145, 1137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1192,
	0, 0, 0, 0, 1148, 0, 1167, 1239, 0, 1131,
	288, 1142, 389, 247, 0, 439, 278, 1246, 1256, 1189,
	550, 1260, 1187, 1186, 1233, 1146, 1252, 1180, 353, 1144,
	320, 193, 217, 0, 1178, 399, 447, 459, 1251, 1163,
	1172, 245, 1170, 457, 413, 528, 225, 274, 444, 419,
	455, 427, 277, 1212, 1231, 456, 360, 513, 437, 525,
	551, 552, 253, 393, 537, 497, 545, 569, 218, 250,
	407, 490, 531, 479, 385, 509, 510, 319, 478, 286,
	196, 357, 557, 216, 465, 359, 234, 223, 515, 534,
	280, 442, 564, 205, 492, 523, 231, 469, 0, 0,
	571, 239, 489, 207, 520, 488, 381, 316, 317, 206,
	0, 443, 258, 284, 248, 402, 517, 518, 246, 572,
	220, 544, 212, 1143, 543, 395, 512, 521, 382, 371,
	211, 519, 380, 370, 324, 343, 344, 270, 297, 434,
	363, 435, 296, 298, 391, 390, 392, 200, 532, 0,
	201, 0, 484, 533, 573, 226, 227, 229, 1158, 269,
	273, 282, 285, 293, 294, 303, 355, 406, 433, 429,
	438, 1247, 507, 526, 538, 549, 555, 556, 558, 559,
	560, 561, 562, 565, 563, 394, 301, 480, 323, 361,
	1236, 1278, 412, 458, 232, 530, 481, 1153, 1157, 1151,
	1218, 1152, 1207, 1208, 1154, 1269, 1270, 1271, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 0, 1240, 1147, 0,
	1155, 1156, 1249, 1258, 1259, 592, 372, 471, 527, 325,
	337, 340, 330, 349, 0, 350, 326, 327, 332, 334,
	335, 336, 341, 342, 346, 352, 241, 203, 378, 386,
	506, 302, 208, 209, 210, 499, 500, 501, 502, 541,
	542, 546, 448, 449, 450, 451, 283, 536, 299, 454,
	453, 321, 322, 367, 436, 1211, 192, 213, 356, 1274,
	440, 279, 570, 540, 535, 199, 215, 1150, 252, 1161,
	1169, 0, 1175, 1183, 1184, 1196, 1198, 1199, 1200, 1201,
	1219, 1220, 1222, 1230, 1232, 1235, 1237, 1244, 1255, 1277,
	194, 195, 202, 214, 224, 228, 235, 251, 266, 268,
	275, 289, 300, 308, 309, 312, 318, 368, 374, 375,
	376, 377, 396, 397, 398, 401, 404, 405, 408, 410,
	411, 414, 418, 422, 423, 424, 426, 428, 430, 441,
	446, 460, 461, 462, 463, 464, 467, 468, 473, 474,
	475, 476, 477, 485, 486, 491, 514, 516, 529, 547,
	553, 466, 291, 292, 431, 432, 304, 305, 567, 568,
	290, 524, 554, 522, 566, 548, 425, 366, 1210, 1216,
	369, 271, 295, 310, 1225, 539, 487, 219, 452, 281,
	243, 1243, 1245, 204, 238, 222, 249, 264, 267, 314,
	379, 387, 416, 421, 287, 261, 236, 445, 233, 470,
	494, 495, 496, 498, 383, 256, 420, 1206, 1234, 364,
	504, 505, 306, 384, 0, 0, 0, 1263, 1248, 503,
	0, 1191, 1266, 1160, 1179, 1276, 1182, 1185, 1227, 1139,
	1205, 403, 1176, 1132, 1164, 1134, 1171, 1135, 1162, 1193,
	260, 1159, 1250, 1209, 1265, 354, 257, 1141, 1165, 417,
	1181, 198, 1229, 472, 244, 365, 362, 511, 272, 263,
	259, 242, 307, 373, 415, 493, 409, 1272, 358, 1215,
	0, 482, 388, 0, 0, 0, 1195, 1254, 1203, 1241,
	1190, 1228, 1149, 1214, 1267, 1177, 1224, 1268, 313, 240,
	315, 197, 400, 483, 276, 0, 0, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 339, 348, 347,
	328, 329, 331, 333, 338, 345, 351, 1173, 1221, 1262,
	1174, 1223, 255, 311, 262, 254, 508, 1273, 1253, 1138,
	1202, 1261, 0, 0, 221, 1264, 1197, 0, 1226, 0,
	1279, 1133, 1217, 0, 1136, 1140, 1275, 1257, 1168, 265,
	0, 0, 0, 0, 0, 0, 0, 1194, 1204, 1238,
	1242, 1188, 0, 0, 0, 0, 0, 2724, 0, 1166,
	0, 1213, 0, 0, 0, 1145, 1137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1192,
	0, 0, 0, 0, 1148, 0, 1167, 1239, 0, 1131,
	288, 1142, 389, 247, 0, 439, 278, 1246, 1256, 1189,
	550, 1260, 1187, 1186, 1233, 1146, 1252, 1180, 353, 1144,
	320, 193, 217, 0, 1178, 399, 447, 459, 1251, 1163,
	1172, 245, 1170, 457, 413, 528, 225, 274, 444, 419,
	455, 427, 277, 1212, 1231, 456, 360, 513, 437, 525,
	551, 552, 253, 393, 537, 497, 545, 569, 218, 250,
	407, 490, 531, 479, 385, 509, 510, 319, 478, 286,
	196, 357, 557, 216, 465, 359, 234, 223, 515, 534,
	280, 442, 564, 205, 492, 523, 231, 469, 0, 0,
	571, 239, 489, 207, 520, 488, 381, 316, 317, 206,
	0, 443, 258, 284, 248, 402, 517, 518, 246, 572,
	220, 544, 212, 1143, 543, 395, 512, 521, 382, 371,
	211, 519, 380, 370, 324, 343, 344, 270, 297, 434,
	363, 435, 296, 298, 391, 390, 392, 200, 532, 0,
	201, 0, 484, 533, 573, 226, 227, 229, 1158, 269,
	273, 282, 285, 293, 294, 303, 355, 406, 433, 429,
	438, 1247, 507, 526, 538, 549, 555, 556, 558, 559,
	560, 561, 562, 565, 563, 394, 301, 480, 323, 361,
	1236, 1278, 412, 458, 232, 530, 481, 1153, 1157, 1151,
	1218, 1152, 1207, 1208, 1154, 1269, 1270, 1271, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 0, 1240, 1147, 0,
	1155, 1156, 1249, 1258, 1259, 592, 372, 471, 527, 325,
	337, 340, 330, 349, 0, 350, 326, 327, 332, 334,
	335, 336, 341, 342, 346, 352, 241, 203, 378, 386,
	506, 302, 208, 209, 210, 499, 500, 501, 502, 541,
	542, 546, 448, 449, 450, 451, 283, 536, 299, 454,
	453, 321, 322, 367, 436, 1211, 192, 213, 356, 1274,
	440, 279, 570, 540, 535, 199, 215, 1150, 252, 1161,
	1169, 0, 1175, 1183, 1184, 1196, 1198, 1199, 1200, 1201,
	1219, 1220, 1222, 1230, 1232, 1235, 1237, 1244, 1255, 1277,
	194, 195, 202, 214, 224, 228, 235, 251, 266, 268,
	275, 289, 300, 308, 309, 312, 318, 368, 374, 375,
	376, 377, 396, 397, 398, 401, 404, 405, 408, 410,
	411, 414, 418, 422, 423, 424, 426, 428, 430, 441,
	446, 460, 461, 462, 463, 464, 467, 468, 473, 474,
	475, 476, 477, 485, 486, 491, 514, 516, 529, 547,
	553, 466, 291, 292, 431, 432, 304, 305, 567, 568,
	290, 524, 554, 522, 566, 548, 425, 366, 1210, 1216,
	369, 271, 295, 310, 1225, 539, 487, 219, 452, 281,
	243, 1243, 1245, 204, 238, 222, 249, 264, 267, 314,
	379, 387, 416, 421, 287, 261, 236, 445, 233, 470,
	494, 495, 496, 498, 383, 256, 420, 1206, 1234, 364,
	504, 505, 306, 384, 0, 0, 0, 1263, 1248, 503,
	0, 1191, 1266, 1160, 1179, 1276, 1182, 1185, 1227, 1139,
	1205, 403, 1176, 1132, 1164, 1134, 1171, 1135, 1162, 1193,
	260, 1159, 1250, 1209, 1265, 354, 257, 1141, 1165, 417,
	1181, 198, 1229, 472, 244, 365, 362, 511, 272, 263,
	259, 242, 307, 373, 415, 493, 409, 1272, 358, 1215,
	0, 482, 388, 0, 0, 0, 1195, 1254, 1203, 1241,
	1190, 1228, 1149, 1214, 1267, 1177, 1224, 1268, 313, 240,
	315, 197, 400, 483, 276, 0, 0, 0, 0, 0,
	813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 339, 348, 347,
	328, 329, 331, 333, 338, 345, 351, 1173, 1221, 1262,
	1174, 1223, 255, 311, 262, 254, 508, 1273, 1253, 1138,
	1202, 1261, 0, 0, 221, 1264, 1197, 0, 1226, 0,
	1279, 1133, 1217, 0, 1136, 1140, 1275, 1257, 1168, 265,
	0, 0, 0, 0, 0, 0, 0, 1194, 1204, 1238,
	1242, 1188, 0, 0, 0, 0, 0, 2076, 0, 1166,
	0, 1213, 0, 0, 0, 1145, 1137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1192,
	0, 0, 0, 0, 1148, 0, 1167, 1239, 0, 1131,
	288, 1142, 389, 247, 0, 439, 278, 1246, 1256, 1189,
	550, 1260, 1187, 1186, 1233, 1146, 1252, 1180, 353, 1144,
	320, 193, 217, 0, 1178, 399, 447, 459, 1251, 1163,
	1172, 245, 1170, 457, 413, 528, 225, 274, 444, 419,
	455, 427, 277, 1212, 1231, 456, 360, 513, 437, 525,
	551, 552, 253, 393, 537, 497, 545, 569, 218, 250,
	407, 490, 531, 479, 385, 509, 510, 319, 478, 286,
	196, 357, 557, 216, 465, 359, 234, 223, 515, 534,
	280, 442, 564, 205, 492, 523, 231, 469, 0, 0,
	571, 239, 489, 207, 520, 488, 381, 316, 317, 206,
	0, 443, 258, 284, 248, 402, 517, 518, 246, 572,
	220, 544, 212, 1143, 543, 395, 512, 521, 382, 371,
	211, 519, 380, 370, 324, 343, 344, 270, 297, 434,
	363, 435, 296, 298, 391, 390, 392, 200, 532, 0,
	201, 0, 484, 533, 573, 226, 227, 229, 1158, 269,
	273, 282, 285, 293, 294, 303, 355, 406, 433, 429,
	438, 1247, 507, 526, 538, 549, 555, 556, 558, 559,
	560, 561, 562, 565, 563, 394, 301, 480, 323, 361,
	1236, 1278, 412, 458, 232, 530, 481, 1153, 1157, 1151,
	1218, 1152, 1207, 1208, 1154, 1269, 1270, 1271, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 0, 1240, 1147, 0,
	1155, 1156, 1249, 1258, 1259, 592, 372, 471, 527, 325,
	337, 340, 330, 349, 0, 350, 326, 327, 332, 334,
	335, 336, 341, 342, 346, 352, 241, 203, 378, 386,
	506, 302, 208, 209, 210, 499, 500, 501, 502, 541,
	542, 546, 448, 449, 450, 451, 283, 536, 299, 454,
	453, 321, 322, 367, 436, 1211, 192, 213, 356, 1274,
	440, 279, 570, 540, 535, 199, 215, 1150, 252, 1161,
	1169, 0, 1175, 1183, 1184, 1196, 1198, 1199, 1200, 1201,
	1219, 1220, 1222, 1230, 1232, 1235, 1237, 1244, 1255, 1277,
	194, 195, 202, 214, 224, 228, 235, 251, 266, 268,
	275, 289, 300, 308, 309, 312, 318, 368, 374, 375,
	376, 377, 396, 397, 398, 401, 404, 405, 408, 410,
	411, 414, 418, 422, 423, 424, 426, 428, 430, 441,
	446, 460, 461, 462, 463, 464, 467, 468, 473, 474,
	475, 476, 477, 485, 486, 491, 514, 516, 529, 547,
	553, 466, 291, 292, 431, 432, 304, 305, 567, 568,
	290, 524, 554, 522, 566, 548, 425, 366, 1210, 1216,
	369, 271, 295, 310, 1225, 539, 487, 219, 452, 281,
	243, 1243, 1245, 204, 238, 222, 249, 264, 267, 314,
	379, 387, 416, 421, 287, 261, 236, 445, 233, 470,
	494, 495, 496, 498, 383, 256, 420, 1206, 1234, 364,
	504, 505, 306, 384, 0, 0, 0, 1263, 1248, 503,
	0, 1191, 1266, 1160, 1179, 1276, 1182, 1185, 1227, 1139,
	1205, 403, 1176, 1132, 1164, 1134, 1171, 1135, 1162, 1193,
	260, 1159, 1250, 1209, 1265, 354, 257, 1141, 1165, 417,
	1181, 198, 1229, 472, 244, 365, 362, 511, 272, 263,
	259, 242, 307, 373, 415, 493, 409, 1272, 358, 1215,
	0, 482, 388, 0, 0, 0, 1195, 1254, 1203, 1241,
	1190, 1228, 1149, 1214, 1267, 1177, 1224, 1268, 313, 240,
	315, 197, 400, 483, 276, 0, 91, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 339, 348, 347,
	328, 329, 331, 333, 338, 345, 351, 1173, 1221, 1262,
	1174, 1223, 255, 311, 262, 254, 508, 1273, 1253, 1138,
	1202, 1261, 0, 0, 221, 1264, 1197, 0, 1226, 0,
	1279, 1133, 1217, 0, 1136, 1140, 1275, 1257, 1168, 265,
	0, 0, 0, 0, 0, 0, 0, 1194, 1204, 1238,
	1242, 1188, 0, 0, 0, 0, 0, 0, 0, 1166,
	0, 1213, 0, 0, 0, 1145, 1137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1192,
	0, 0, 0, 0, 1148, 0, 1167, 1239, 0, 1131,
	288, 1142, 389, 247, 0, 439, 278, 1246, 1256, 1189,
	550, 1260, 1187, 1186, 1233, 1146, 1252, 1180, 353, 1144,
	320, 193, 217, 0, 1178, 399, 447, 459, 1251, 1163,
	1172, 245, 1170, 457, 413, 528, 225, 274, 444, 419,
	455, 427, 277, 1212, 1231, 456, 360, 513, 437, 525,
	551, 552, 253, 393, 537, 497, 545, 569, 218, 250,
	407, 490, 531, 479, 385, 509, 510, 319, 478, 286,
	196, 357, 557, 216, 465, 359, 234, 223, 515, 534,
	280, 442, 564, 205, 492, 523, 231, 469, 0, 0,
	571, 239, 489, 207, 520, 488, 381, 316, 317, 206,
	0, 443, 258, 284, 248, 402, 517, 518, 246, 572,
	220, 544, 212, 1143, 543, 395, 512, 521, 382, 371,
	211, 519, 380, 370, 324, 343, 344, 270, 297, 434,
	363, 435, 296, 298, 391, 390, 392, 200, 532, 0,
	201, 0, 484, 533, 573, 226, 227, 229, 1158, 269,
	273, 282, 285, 293, 294, 303, 355, 406, 433, 429,
	438, 1247, 507, 526, 538, 549, 555, 556, 558, 559,
	560, 561, 562, 565, 563, 394, 301, 480, 323, 361,
	1236, 1278, 412, 458, 232, 530, 481, 1153, 1157, 1151,
	1218, 1152, 1207, 1208, 1154, 1269, 1270, 1271, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 0, 1240, 1147, 0,
	1155, 1156, 1249, 1258, 1259, 592, 372, 471, 527, 325,
	337, 340, 330, 349, 0, 350, 326, 327, 332, 334,
	335, 336, 341, 342, 346, 352, 241, 203, 378, 386,
	506, 302, 208, 209, 210, 499, 500, 501, 502, 541,
	542, 546, 448, 449, 450, 451, 283, 536, 299, 454,
	453, 321, 322, 367, 436, 1211, 192, 213, 356, 1274,
	440, 279, 570, 540, 535, 199, 215, 1150, 252, 1161,
	1169, 0, 1175, 1183, 1184, 1196, 1198, 1199, 1200, 1201,
	1219, 1220, 1222, 1230, 1232, 1235, 1237, 1244, 1255, 1277,
	194, 195, 202, 214, 224, 228, 235, 251, 266, 268,
	275, 289, 300, 308, 309, 312, 318, 368, 374, 375,
	376, 377, 396, 397, 398, 401, 404, 405, 408, 410,
	411, 414, 418, 422, 423, 424, 426, 428, 430, 441,
	446, 460, 461, 462, 463, 464, 467, 468, 473, 474,
	475, 476, 477, 485, 486, 491, 514, 516, 529, 547,
	553, 466, 291, 292, 431, 432, 304, 305, 567, 568,
	290, 524, 554, 522, 566, 548, 425, 366, 1210, 1216,
	369, 271, 295, 310, 1225, 539, 487, 219, 452, 281,
	243, 1243, 1245, 204, 238, 222, 249, 264, 267, 314,
	379, 387, 416, 421, 287, 261, 236, 445, 233, 470,
	494, 495, 496, 498, 383, 256, 420, 1206, 1234, 364,
	504, 505, 306, 384, 0, 0, 0, 1263, 1248, 503,
	0, 1191, 1266, 1160, 1179, 1276, 1182, 1185, 1227, 1139,
	1205, 403, 1176, 1132, 1164, 1134, 1171, 1135, 1162, 1193,
	260, 1159, 1250, 1209, 1265, 354, 257, 1141, 1165, 417,
	1181, 198, 1229, 472, 244, 365, 362, 511, 272, 263,
	259, 242, 307, 373, 415, 493, 409, 1272, 358, 1215,
	0, 482, 388, 0, 0, 0, 1195, 1254, 1203, 1241,
	1190, 1228, 1149, 1214, 1267, 1177, 1224, 1268, 313, 240,
	315, 197, 400, 483, 276, 0, 0, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 339, 348, 347,
	328, 329, 331, 333, 338, 345, 351, 1173, 1221, 1262,
	1174, 1223, 255, 311, 262, 254, 508, 1273, 1253, 1138,
	1202, 1261, 0, 0, 221, 1264, 1197, 0, 1226, 0,
	1279, 1133, 1217, 0, 1136, 1140, 1275, 1257, 1168, 265,
	0, 0, 0, 0, 0, 0, 0, 1194, 1204, 1238,
	1242, 1188, 0, 0, 0, 0, 0, 0, 0, 1166,
	0, 1213, 0, 0, 0, 1145, 1137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1192,
	0, 0, 0, 0, 1148, 0, 1167, 1239, 0, 1131,
	288, 1142, 389, 247, 0, 439, 278, 1246, 1256, 1189,
	550, 1260, 1187, 1186, 1233, 1146, 1252, 1180, 353, 1144,
	320, 193, 217, 0, 1178, 399, 447, 459, 1251, 1163,
	1172, 245, 1170, 457, 413, 528, 225, 274, 444, 419,
	455, 427, 277, 1212, 1231, 456, 360, 513, 437, 525,
	551, 552, 253, 393, 537, 497, 545, 569, 218, 250,
	407, 490, 531, 479, 385, 509, 510, 319, 478, 286,
	196, 357, 557, 216, 465, 359, 234, 223, 515, 534,
	280, 442, 564, 205, 492, 523, 231, 469, 0, 0,
	571, 239, 489, 207, 520, 488, 381, 316, 317, 206,
	0, 443, 258, 284, 248, 402, 517, 518, 246, 572,
	220, 544, 212, 1143, 543, 395, 512, 521, 382, 371,
	211, 519, 380, 370, 324, 343, 344, 270, 297, 434,
	363, 435, 296, 298, 391, 390, 392, 200, 532, 0,
	201, 0, 484, 533, 573, 226, 227, 229, 1158, 269,
	273, 282, 285, 293, 294, 303, 355, 406, 433, 429,
	438, 1247, 507, 526, 538, 549, 555, 556, 558, 559,
	560, 561, 562, 565, 563, 394, 301, 480, 323, 361,
	1236, 1278, 412, 458, 232, 530, 481, 1153, 1157, 1151,
	1218, 1152, 1207, 1208, 1154, 1269, 1270, 1271, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 0, 1240, 1147, 0,
	1155, 1156, 1249, 1258, 1259, 592, 372, 471, 527, 325,
	337, 340, 330, 349, 0, 350, 326, 327, 332, 334,
	335, 336, 341, 342, 346, 352, 241, 203, 378, 386,
	506, 302, 208, 209, 210, 499, 500, 501, 502, 541,
	542, 546, 448, 449, 450, 451, 283, 536, 299, 454,
	453, 321, 322, 367, 436, 1211, 192, 213, 356, 1274,
	440, 279, 570, 540, 535, 199, 215, 1150, 252, 1161,
	1169, 0, 1175, 1183, 1184, 1196, 1198, 1199, 1200, 1201,
	1219, 1220, 1222, 1230, 1232, 1235, 1237, 1244, 1255, 1277,
	194, 195, 202, 214, 224, 228, 235, 251, 266, 268,
	275, 289, 300, 308, 309, 312, 318, 368, 374, 375,
	376, 377, 396, 397, 398, 401, 404, 405, 408, 410,
	411, 414, 418, 422, 423, 424, 426, 428, 430, 441,
	446, 460, 461, 462, 463, 464, 467, 468, 473, 474,
	475, 476, 477, 485, 486, 491, 514, 516, 529, 547,
	553, 466, 291, 292, 431, 432, 304, 305, 567, 568,
	290, 524, 554, 522, 566, 548, 425, 366, 1210, 1216,
	369, 271, 295, 310, 1225, 539, 487, 219, 452, 281,
	243, 1243, 1245, 204, 238, 222, 249, 264, 267, 314,
	379, 387, 416, 421, 287, 261, 236, 445, 233, 470,
	494, 495, 496, 498, 383, 256, 420, 1206, 1234, 364,
	504, 505, 306, 384, 0, 0, 0, 1263, 1248, 503,
	0, 1191, 1266, 1160, 1179, 1276, 1182, 1185, 1227, 1139,
	1205, 403, 1176, 1132, 1164, 1134, 1171, 1135, 1162, 1193,
	260, 1159, 1250, 1209, 1265, 354, 257, 1141, 1165, 417,
	1181, 198, 1229, 472, 244, 365, 362, 511, 272, 263,
	259, 242, 307, 373, 415, 493, 409, 1272, 358, 1215,
	0, 482, 388, 0, 0, 0, 1195, 1254, 1203, 1241,
	1190, 1228, 1149, 1214, 1267, 1177, 1224, 1268, 313, 240,
	315, 197, 400, 483, 276, 0, 0, 0, 0, 0,
	813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 339, 348, 347,
	328, 329, 331, 333, 338, 345, 351, 1173, 1221, 1262,
	1174, 1223, 255, 311, 262, 254, 508, 1273, 1253, 1138,
	1202, 1261, 0, 0, 221, 1264, 1197, 0, 1226, 0,
	1279, 1133, 1217, 0, 1136, 1140, 1275, 1257, 1168, 265,
	0, 0, 0, 0, 0, 0, 0, 1194, 1204, 1238,
	1242, 1188, 0, 0, 0, 0, 0, 0, 0, 1166,
	0, 1213, 0, 0, 0, 1145, 1137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1192,
	0, 0, 0, 0, 1148, 0, 1167, 1239, 0, 1131,
	288, 1142, 389, 247, 0, 439, 278, 1246, 1256, 1189,
	550, 1260, 1187, 1186, 1233, 1146, 1252, 1180, 353, 1144,
	320, 193, 217, 0, 1178, 399, 447, 459, 1251, 1163,
	1172, 245, 1170, 457, 413, 528, 225, 274, 444, 419,
	455, 427, 277, 1212, 1231, 456, 360, 513, 437, 525,
	551, 552, 253, 393, 537, 497, 545, 569, 218, 250,
	407, 490, 531, 479, 385, 509, 510, 319, 478, 286,
	196, 357, 557, 216, 465, 359, 234, 223, 515, 534,
	280, 442, 564, 205, 492, 523, 231, 469, 0, 0,
	571, 239, 489, 207, 520, 488, 381, 316, 317, 206,
	0, 443, 258, 284, 248, 402, 517, 518, 246, 572,
	220, 544, 212, 1143, 543, 395, 512, 521, 382, 371,
	211, 519, 380, 370, 324, 343, 344, 270, 297, 434,
	363, 435, 296, 298, 391, 390, 392, 200, 532, 0,
	201, 0, 484, 533, 573, 226, 227, 229, 1158, 269,
	273, 282, 285, 293, 294, 303, 355, 406, 433, 429,
	438, 1247, 507, 526, 538, 549, 555, 556, 558, 559,
	560, 561, 562, 565, 563, 394, 301, 480, 323, 361,
	1236, 1278, 412, 458, 232, 530, 481, 1153, 1157, 1151,
	1218, 1152, 1207, 1208, 1154, 1269, 1270, 1271, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 0, 1240, 1147, 0,
	1155, 1156, 1249, 1258, 1259, 592, 372, 471, 527, 325,
	337, 340, 330, 349, 0, 350, 326, 327, 332, 334,
	335, 336, 341, 342, 346, 352, 241, 203, 378, 386,
	506, 302, 208, 209, 210, 499, 500, 501, 502, 541,
	542, 546, 448, 449, 450, 451, 283, 536, 299, 454,
	453, 321, 322, 367, 436, 1211, 192, 213, 356, 1274,
	440, 279, 570, 540, 535, 199, 215, 1150, 252, 1161,
	1169, 0, 1175, 1183, 1184, 1196, 1198, 1199, 1200, 1201,
	1219, 1220, 1222, 1230, 1232, 1235, 1237, 1244, 1255, 1277,
	194, 195, 202, 214, 224, 228, 235, 251, 266, 268,
	275, 289, 300, 308, 309, 312, 318, 368, 374, 375,
	376, 377, 396, 397, 398, 401, 404, 405, 408, 410,
	411, 414, 418, 422, 423, 424, 426, 428, 430, 441,
	446, 460, 461, 462, 463, 464, 467, 468, 473, 474,
	475, 476, 477, 485, 486, 491, 514, 516, 529, 547,
	553, 466, 291, 292, 431, 432, 304, 305, 567, 568,
	290, 524, 554, 522, 566, 548, 425, 366, 1210, 1216,
	369, 271, 295, 310, 1225, 539, 487, 219, 452, 281,
	243, 1243, 1245, 204, 238, 222, 249, 264, 267, 314,
	379, 387, 416, 421, 287, 261, 236, 445, 233, 470,
	494, 495, 496, 498, 383, 256, 420, 1206, 1234, 364,
	504, 505, 306, 384, 0, 0, 0, 1263, 1248, 503,
	0, 1191, 1266, 1160, 1179, 1276, 1182, 1185, 1227, 1139,
	1205, 403, 1176, 1132, 1164, 1134, 1171, 1135, 1162, 1193,
	260, 1159, 1250, 1209, 1265, 354, 257, 1141, 1165, 417,
	1181, 198, 1229, 472, 244, 365, 362, 511, 272, 263,
	259, 242, 307, 373, 415, 493, 409, 1272, 358, 1215,
	0, 482, 388, 0, 0, 0, 1195, 1254, 1203, 1241,
	1190, 1228, 1149, 1214, 1267, 1177, 1224, 1268, 313, 240,
	315, 197, 400, 483, 276, 0, 0, 0, 0, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 339, 348, 347,
	328, 329, 331, 333, 338, 345, 351, 1173, 1221, 1262,
	1174, 1223, 255, 311, 262, 254, 508, 1273, 1253, 1138,
	1202, 1261, 0, 0, 221, 1264, 1197, 0, 1226, 0,
	1279, 1133, 1217, 0, 1136, 1140, 1275, 1257, 1168, 265,
	0, 0, 0, 0, 0, 0, 0, 1194, 1204, 1238,
	1242, 1188, 0, 0, 0, 0, 0, 0, 0, 1166,
	0, 1213, 0, 0, 0, 1145, 1137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1192,
	0, 0, 0, 0, 1148, 0, 1167, 1239, 0, 1131,
	288, 1142, 389, 247, 0, 439, 278, 1246, 1256, 1189,
	550, 1260, 1187, 1186, 1233, 1146, 1252, 1180, 353, 1144,
	320, 193, 217, 0, 1178, 399, 447, 459, 1251, 1163,
	1172, 245, 1170, 457, 413, 528, 225, 274, 444, 419,
	455, 427, 277, 1212, 1231, 456, 360, 513, 437, 525,
	551, 552, 253, 393, 537, 497, 545, 569, 218, 250,
	407, 490, 531, 479, 385, 509, 510, 319, 478, 286,
	196, 357, 557, 216, 465, 359, 234, 223, 515, 534,
	280, 442, 564, 205, 492, 523, 231, 469, 0, 0,
	571, 239, 489, 207, 520, 488, 381, 316, 317, 206,
	0, 443, 258, 284, 248, 402, 517, 518, 246, 572,
	220, 544, 212, 1143, 543, 395, 512, 521, 382, 371,
	211, 519, 380, 370, 324, 343, 344, 270, 297, 434,
	363, 435, 296, 298, 391, 390, 392, 200, 532, 0,
	201, 0, 484, 533, 573, 226, 227, 229, 1158, 269,
	273, 282, 285, 293, 294, 303, 355, 406, 433, 429,
	438, 1247, 507, 526, 538, 549, 555, 556, 558, 559,
	560, 561, 562, 565, 563, 394, 301, 480, 323, 361,
	1236, 1278, 412, 458, 232, 530, 481, 1153, 1157, 1151,
	1218, 1152, 1207, 1208, 1154, 1269, 1270, 1271, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 0, 1240, 1147, 0,
	1155, 1156, 1249, 1258, 1259, 592, 372, 471, 527, 325,
	337, 340, 330, 349, 0, 350, 326, 327, 332, 334,
	335, 336, 341, 342, 346, 352, 241, 203, 378, 386,
	506, 302, 208, 209, 210, 499, 500, 501, 502, 541,
	542, 546, 448, 449, 450, 451, 283, 536, 299, 454,
	453, 321, 322, 367, 436, 1211, 192, 213, 356, 1274,
	440, 279, 570, 540, 535, 199, 215, 1150, 252, 1161,
	1169, 0, 1175, 1183, 1184, 1196, 1198, 1199, 1200, 1201,
	1219, 1220, 1222, 1230, 1232, 1235, 1237, 1244, 1255, 1277,
	194, 195, 202, 214, 224, 228, 235, 251, 266, 268,
	275, 289, 300, 308, 309, 312, 318, 368, 374, 375,
	376, 377, 396, 397, 398, 401, 404, 405, 408, 410,
	411, 414, 418, 422, 423, 424, 426, 428, 430, 441,
	446, 460, 461, 462, 463, 464, 467, 468, 473, 474,
	475, 476, 477, 485, 486, 491, 514, 516, 529, 547,
	553, 466, 291, 292, 431, 432, 304, 305, 567, 568,
	290, 524, 554, 522, 566, 548, 425, 366, 1210, 1216,
	369, 271, 295, 310, 1225, 539, 487, 219, 452, 281,
	243, 1243, 1245, 204, 238, 222, 249, 264, 267, 314,
	379, 387, 416, 421, 287, 261, 236, 445, 233, 470,
	494, 495, 496, 498, 383, 256, 420, 1206, 1234, 364,
	504, 505, 306, 384, 0, 0, 0, 0, 0, 503,
	0, 692, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 679, 0, 0, 0,
	260, 684, 0, 0, 0, 354, 257, 0, 0, 417,
	0, 198, 0, 472, 244, 365, 362, 511, 272, 263,
	259, 242, 307, 373, 415, 493, 409, 691, 358, 0,
	0, 482, 388, 0, 0, 0, 0, 0, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 240,
	315, 197, 400, 483, 276, 0, 91, 0, 0, 829,
	813, 779, 780, 817, 830, 831, 832, 833, 818, 0,
	230, 819, 820, 237, 821, 0, 778, 719, 721, 720,
	738, 739, 740, 741, 742, 743, 744, 717, 826, 834,
	835, 0, 255, 311, 262, 254, 508, 0, 0, 1955,
	1956, 1957, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 661, 676, 0, 690, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 673, 674, 0, 0, 0,
	0, 773, 0, 675, 0, 0, 683, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 874, 875, 876, 877, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 389, 247, 0, 439, 278, 772, 0, 0,
	550, 0, 0, 770, 0, 0, 0, 0, 353, 0,
	320, 193, 217, 0, 0, 399, 447, 459, 0, 0,
	0, 823, 0, 457, 413, 528, 225, 274, 444, 419,
	455, 427, 277, 0, 0, 456, 360, 513, 437, 525,
	551, 552, 253, 393, 537, 497, 545, 569, 218, 250,
	407, 490, 531, 479, 385, 509, 510, 319, 478, 286,
	196, 357, 557, 216, 465, 359, 234, 223, 515, 534,
	280, 442, 564, 205, 492, 523, 231, 469, 0, 0,
	571, 239, 489, 207, 520, 488, 381, 316, 317, 206,
	0, 443, 258, 284, 248, 402, 824, 825, 246, 572,
	725, 544, 212, 0, 543, 395, 512, 521, 382, 371,
	211, 519, 380, 370, 324, 733, 734, 270, 297, 434,
	363, 435, 296, 298, 391, 390, 392, 200, 532, 0,
	201, 0, 484, 533, 573, 226, 227, 229, 0, 269,
	273, 282, 285, 293, 294, 303, 355, 406, 433, 429,
	438, 0, 507, 526, 538, 549, 555, 556, 558, 559,
	560, 561, 562, 565, 563, 394, 301, 480, 323, 361,
	0, 0, 412, 458, 232, 530, 481, 783, 771, 696,
	787, 698, 784, 785, 693, 694, 697, 786, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 0, 774, 682, 681,
	0, 689, 0, 715, 716, 718, 722, 723, 724, 735,
	736, 737, 745, 747, 748, 746, 749, 750, 751, 754,
	755, 756, 757, 752, 753, 758, 699, 703, 700, 701,
	702, 714, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 797, 798, 799, 800, 801, 802, 728, 732,
	731, 729, 730, 726, 727, 680, 192, 213, 356, 0,
	440, 279, 570, 540, 535, 199, 215, 788, 252, 789,
	0, 0, 793, 0, 0, 0, 795, 794, 0, 796,
	762, 761, 0, 0, 790, 791, 0, 792, 0, 0,
	194, 195, 202, 214, 224, 228, 235, 251, 266, 268,
	275, 289, 300, 308, 309, 312, 318, 368, 374, 375,
	376, 377, 396, 397, 398, 401, 404, 405, 408, 410,
	411, 414, 418, 422, 423, 424, 426, 428, 430, 441,
	446, 460, 461, 462, 463, 464, 467, 468, 473, 474,
	475, 476, 477, 485, 486, 491, 514, 516, 529, 547,
	553, 466, 803, 804, 805, 806, 807, 808, 809, 810,
	290, 524, 554, 522, 566, 548, 425, 366, 0, 0,
	369, 271, 295, 310, 0, 539, 487, 219, 452, 281,
	243, 828, 0, 204, 238, 222, 249, 264, 267, 314,
	379, 387, 416, 421, 287, 261, 236, 445, 233, 470,
	494, 495, 496, 498, 383, 256, 420, 384, 0, 364,
	504, 505, 306, 503, 0, 692, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	679, 0, 0, 0, 260, 684, 0, 0, 0, 354,
	257, 0, 0, 417, 0, 198, 0, 472, 244, 365,
	362, 511, 272, 263, 259, 242, 307, 373, 415, 493,
	409, 691, 358, 0, 0, 482, 388, 0, 0, 0,
	0, 0, 687, 688, 0, 0, 0, 0, 0, 0,
	2105, 0, 313, 240, 315, 197, 400, 483, 276, 0,
	91, 0, 0, 829, 813, 779, 780, 817, 830, 831,
	832, 833, 818, 0, 230, 819, 820, 237, 821, 0,
	778, 719, 721, 720, 738, 739, 740, 741, 742, 743,
	744, 717, 826, 834, 835, 2106, 255, 311, 262, 254,
	508, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 661, 676, 0, 690,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 673,
	674, 0, 0, 0, 0, 773, 0, 675, 0, 0,
	683, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 389, 247, 0, 439,
	278, 772, 0, 0, 550, 0, 0, 770, 0, 0,
	0, 0, 353, 0, 320, 193, 217, 0, 0, 399,
	447, 459, 0, 0, 0, 823, 0, 457, 413, 528,
	225, 274, 444, 419, 455, 427, 277, 0, 0, 456,
	360, 513, 437, 525, 551, 552, 253, 393, 537, 497,
	545, 569, 218, 250, 407, 490, 531, 479, 385, 509,
	510, 319, 478, 286, 196, 357, 557, 216, 465, 359,
	234, 223, 515, 534, 280, 442, 564, 205, 492, 523,
	231, 469, 0, 0, 571, 239, 489, 207, 520, 488,
	381, 316, 317, 206, 0, 443, 258, 284, 248, 402,
	824, 825, 246, 572, 725, 544, 212, 0, 543, 395,
	512, 521, 382, 371, 211, 519, 380, 370, 324, 733,
	734, 270, 297, 434, 363, 435, 296, 298, 391, 390,
	392, 200, 532, 0, 201, 0, 484, 533, 573, 226,
	227, 229, 0, 269, 273, 282, 285, 293, 294, 303,
	355, 406, 433, 429, 438, 0, 507, 526, 538, 549,
	555, 556, 558, 559, 560, 561, 562, 565, 563, 394,
	301, 480, 323, 361, 0, 0, 412, 458, 232, 530,
	481, 783, 771, 696, 787, 698, 784, 785, 693, 694,
	697, 786, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	0, 774, 682, 681, 0, 689, 0, 715, 716, 718,
	722, 723, 724, 735, 736, 737, 745, 747, 748, 746,
	749, 750, 751, 754, 755, 756, 757, 752, 753, 758,
	699, 703, 700, 701, 702, 714, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 797, 798, 799, 800,
	801, 802, 728, 732, 731, 729, 730, 726, 727, 680,
	192, 213, 356, 0, 440, 279, 570, 540, 535, 199,
	215, 788, 252, 789, 0, 0, 793, 0, 0, 0,
	795, 794, 0, 796, 762, 761, 0, 0, 790, 791,
	0, 792, 0, 0, 194, 195, 202, 214, 224, 228,
	235, 251, 266, 268, 275, 289, 300, 308, 309, 312,
	318, 368, 374, 375, 376, 377, 396, 397, 398, 401,
	404, 405, 408, 410, 411, 414, 418, 422, 423, 424,
	426, 428, 430, 441, 446, 460, 461, 462, 463, 464,
	467, 468, 473, 474, 475, 476, 477, 485, 486, 491,
	514, 516, 529, 547, 553, 466, 803, 804, 805, 806,
	807, 808, 809, 810, 290, 524, 554, 522, 566, 548,
	425, 366, 0, 0, 369, 271, 295, 310, 0, 539,
	487, 219, 452, 281, 243, 828, 0, 204, 238, 222,
	249, 264, 267, 314, 379, 387, 416, 421, 287, 261,
	236, 445, 233, 470, 494, 495, 496, 498, 383, 256,
	420, 0, 384, 364, 504, 505, 306, 82, 503, 0,
	692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 679, 0, 0, 0, 260,
	684, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 472, 244, 365, 362, 511, 272, 263, 259,
	242, 307, 373, 415, 493, 409, 691, 358, 0, 0,
	482, 388, 0, 0, 0, 0, 0, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 483, 276, 0, 91, 0, 0, 829, 813,
	779, 780, 817, 830, 831, 832, 833, 818, 0, 230,
	819, 820, 237, 821, 0, 778, 719, 721, 720, 738,
	739, 740, 741, 742, 743, 744, 717, 826, 834, 835,
	0, 255, 311, 262, 254, 508, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 661, 676, 0, 690, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 673, 674, 0, 0, 0, 0,
	773, 0, 675, 0, 0, 683, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 439, 278, 772, 0, 0, 550,
	0, 0, 770, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 447, 459, 0, 0, 0,
	823, 0, 457, 413, 528, 225, 274, 444, 419, 455,
	427, 277, 0, 0, 456, 360, 513, 437, 525, 551,
	552, 253, 393, 537, 497, 545, 569, 218, 250, 407,
	490, 531, 479, 385, 509, 510, 319, 478, 286, 196,
	357, 557, 216, 465, 359, 234, 223, 515, 534, 280,
	442, 564, 205, 492, 523, 231, 469, 0, 0, 571,
	239, 489, 207, 520, 488, 381, 316, 317, 206, 0,
	443, 258, 284, 248, 402, 824, 825, 246, 572, 725,
	544, 212, 0, 543, 395, 512, 521, 382, 371, 211,
	519, 380, 370, 324, 733, 734, 270, 297, 434, 363,
	435, 296, 298, 391, 390, 392, 200, 532, 0, 201,
	0, 484, 533, 573, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 433, 429, 438,
	0, 507, 526, 538, 549, 555, 556, 558, 559, 560,
	561, 562, 565, 563, 394, 301, 480, 323, 361, 0,
	0, 412, 458, 232, 530, 481, 783, 771, 696, 787,
	698, 784, 785, 693, 694, 697, 786, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 0, 774, 682, 681, 0,
	689, 0, 715, 716, 718, 722, 723, 724, 735, 736,
	737, 745, 747, 748, 746, 749, 750, 751, 754, 755,
	756, 757, 752, 753, 758, 699, 703, 700, 701, 702,
	714, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 797, 798, 799, 800, 801, 802, 728, 732, 731,
	729, 730, 726, 727, 680, 192, 213, 356, 90, 440,
	279, 570, 540, 535, 199, 215, 788, 252, 789, 0,
	0, 793, 0, 0, 0, 795, 794, 0, 796, 762,
	761, 0, 0, 790, 791, 0, 792, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 396, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 426, 428, 430, 441, 446,
	460, 461, 462, 463, 464, 467, 468, 473, 474, 475,
	476, 477, 485, 486, 491, 514, 516, 529, 547, 553,
	466, 803, 804, 805, 806, 807, 808, 809, 810, 290,
	524, 554, 522, 566, 548, 425, 366, 0, 0, 369,
	271, 295, 310, 0, 539, 487, 219, 452, 281, 243,
	828, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 445, 233, 470, 494,
	495, 496, 498, 383, 256, 420, 384, 0, 364, 504,
	505, 306, 503, 0, 692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 679,
	0, 0, 0, 260, 684, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 472, 244, 365, 362,
	511, 272, 263, 259, 242, 307, 373, 415, 493, 409,
	691, 358, 0, 0, 482, 388, 0, 0, 0, 0,
	0, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 483, 276, 0, 91,
	0, 0, 829, 813, 779, 780, 817, 830, 831, 832,
	833, 818, 0, 230, 819, 820, 237, 821, 0, 778,
	719, 721, 720, 738, 739, 740, 741, 742, 743, 744,
	717, 826, 834, 835, 0, 255, 311, 262, 254, 508,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 661, 676, 0, 690, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 673, 674,
	0, 0, 0, 0, 773, 0, 675, 0, 0, 683,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 389, 247, 0, 439, 278,
	772, 0, 0, 550, 0, 0, 770, 0, 0, 0,
	0, 353, 0, 320, 193, 217, 0, 0, 399, 447,
	459, 0, 0, 0, 823, 0, 457, 413, 528, 225,
	274, 444, 419, 455, 427, 277, 3414, 0, 456, 360,
	513, 437, 525, 551, 552, 253, 393, 537, 497, 545,
	569, 218, 250, 407, 490, 531, 479, 385, 509, 510,
	319, 478, 286, 196, 357, 557, 216, 465, 359, 234,
	223, 515, 534, 280, 442, 564, 205, 492, 523, 231,
	469, 0, 0, 571, 239, 489, 207, 520, 488, 381,
	316, 317, 206, 0, 443, 258, 284, 248, 402, 824,
	825, 246, 572, 725, 544, 212, 0, 543, 395, 512,
	521, 382, 371, 211, 519, 380, 370, 324, 733, 734,
	270, 297, 434, 363, 435, 296, 298, 391, 390, 392,
	200, 532, 0, 201, 0, 484, 533, 573, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 433, 429, 438, 0, 507, 526, 538, 549, 555,
	556, 558, 559, 560, 561, 562, 565, 563, 394, 301,
	480, 323, 361, 0, 0, 412, 458, 232, 530, 481,
	783, 771, 696, 787, 698, 784, 785, 693, 694, 697,
	786, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 0,
	774, 682, 681, 0, 689, 0, 715, 716, 718, 722,
	723, 724, 735, 736, 737, 745, 747, 748, 746, 749,
	750, 751, 754, 755, 756, 757, 752, 753, 758, 699,
	703, 700, 701, 702, 714, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 797, 798, 799, 800, 801,
	802, 728, 732, 731, 729, 730, 726, 727, 680, 192,
	213, 356, 0, 440, 279, 570, 540, 535, 199, 215,
	788, 252, 789, 0, 0, 793, 0, 0, 0, 795,
	794, 0, 796, 762, 761, 0, 0, 790, 791, 0,
	792, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 426,
	428, 430, 441, 446, 460, 461, 462, 463, 464, 467,
	468, 473, 474, 475, 476, 477, 485, 486, 491, 514,
	516, 529, 547, 553, 466, 803, 804, 805, 806, 807,
	808, 809, 810, 290, 524, 554, 522, 566, 548, 425,
	366, 0, 0, 369, 271, 295, 310, 0, 539, 487,
	219, 452, 281, 243, 828, 0, 204, 238, 222, 249,
	264, 267, 314, 379, 387, 416, 421, 287, 261, 236,
	445, 233, 470, 494, 495, 496, 498, 383, 256, 420,
	384, 0, 364, 504, 505, 306, 503, 0, 692, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 679, 0, 0, 0, 260, 684, 0,
	0, 0, 354, 257, 0, 0, 417, 0, 198, 0,
	472, 244, 365, 362, 511, 272, 263, 259, 242, 307,
	373, 415, 493, 409, 691, 358, 0, 0, 482, 388,
	0, 0, 0, 0, 0, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 240, 315, 197, 400,
	483, 276, 0, 91, 0, 1520, 829, 813, 779, 780,
	817, 830, 831, 832, 833, 818, 0, 230, 819, 820,
	237, 821, 0, 778, 719, 721, 720, 738, 739, 740,
	741, 742, 743, 744, 717, 826, 834, 835, 0, 255,
	311, 262, 254, 508, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 661,
	676, 0, 690, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 673, 674, 0, 0, 0, 0, 773, 0,
	675, 0, 0, 683, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 389,
	247, 0, 439, 278, 772, 0, 0, 550, 0, 0,
	770, 0, 0, 0, 0, 353, 0, 320, 193, 217,
	0, 0, 399, 447, 459, 0, 0, 0, 823, 0,
	457, 413, 528, 225, 274, 444, 419, 455, 427, 277,
	0, 0, 456, 360, 513, 437, 525, 551, 552, 253,
	393, 537, 497, 545, 569, 218, 250, 407, 490, 531,
	479, 385, 509, 510, 319, 478, 286, 196, 357, 557,
	216, 465, 359, 234, 223, 515, 534, 280, 442, 564,
	205, 492, 523, 231, 469, 0, 0, 571, 239, 489,
	207, 520, 488, 381, 316, 317, 206, 0, 443, 258,
	284, 248, 402, 824, 825, 246, 572, 725, 544, 212,
	0, 543, 395, 512, 521, 382, 371, 211, 519, 380,
	370, 324, 733, 734, 270, 297, 434, 363, 435, 296,
	298, 391, 390, 392, 200, 532, 0, 201, 0, 484,
	533, 573, 226, 227, 229, 0, 269, 273, 282, 285,
	293, 294, 303, 355, 406, 433, 429, 438, 0, 507,
	526, 538, 549, 555, 556, 558, 559, 560, 561, 562,
	565, 563, 394, 301, 480, 323, 361, 0, 0, 412,
	458, 232, 530, 481, 783, 771, 696, 787, 698, 784,
	785, 693, 694, 697, 786, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 0, 774, 682, 681, 0, 689, 0,
	715, 716, 718, 722, 723, 724, 735, 736, 737, 745,
	747, 748, 746, 749, 750, 751, 754, 755, 756, 757,
	752, 753, 758, 699, 703, 700, 701, 702, 714, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 797,
	798, 799, 800, 801, 802, 728, 732, 731, 729, 730,
	726, 727, 680, 192, 213, 356, 0, 440, 279, 570,
	540, 535, 199, 215, 788, 252, 789, 0, 0, 793,
	0, 0, 0, 795, 794, 0, 796, 762, 761, 0,
	0, 790, 791, 0, 792, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 251, 266, 268, 275, 289, 300,
	308, 309, 312, 318, 368, 374, 375, 376, 377, 396,
	397, 398, 401, 404, 405, 408, 410, 411, 414, 418,
	422, 423, 424, 426, 428, 430, 441, 446, 460, 461,
	462, 463, 464, 467, 468, 473, 474, 475, 476, 477,
	485, 486, 491, 514, 516, 529, 547, 553, 466, 803,
	804, 805, 806, 807, 808, 809, 810, 290, 524, 554,
	522, 566, 548, 425, 366, 0, 0, 369, 271, 295,
	310, 0, 539, 487, 219, 452, 281, 243, 828, 0,
	204, 238, 222, 249, 264, 267, 314, 379, 387, 416,
	421, 287, 261, 236, 445, 233, 470, 494, 495, 496,
	498, 383, 256, 420, 384, 0, 364, 504, 505, 306,
	503, 0, 692, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 679, 0, 0,
	0, 260, 684, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 472, 244, 365, 362, 511, 272,
	263, 259, 242, 307, 373, 415, 493, 409, 691, 358,
	0, 0, 482, 388, 0, 0, 0, 0, 0, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 483, 276, 0, 91, 0, 0,
	829, 813, 779, 780, 817, 830, 831, 832, 833, 818,
	0, 230, 819, 820, 237, 821, 0, 778, 719, 721,
	720, 738, 739, 740, 741, 742, 743, 744, 717, 826,
	834, 835, 0, 255, 311, 262, 254, 508, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 661, 676, 0, 690, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 673, 674, 918, 0,
	0, 0, 773, 0, 675, 0, 0, 683, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 439, 278, 772, 0,
	0, 550, 0, 0, 770, 0, 0, 0, 0, 353,
	0, 320, 193, 217, 0, 0, 399, 447, 459, 0,
	0, 0, 823, 0, 457, 413, 528, 225, 274, 444,
	419, 455, 427, 277, 0, 0, 456, 360, 513, 437,
	525, 551, 552, 253, 393, 537, 497, 545, 569, 218,
	250, 407, 490, 531, 479, 385, 509, 510, 319, 478,
	286, 196, 357, 557, 216, 465, 359, 234, 223, 515,
	534, 280, 442, 564, 205, 492, 523, 231, 469, 0,
	0, 571, 239, 489, 207, 520, 488, 381, 316, 317,
	206, 0, 443, 258, 284, 248, 402, 824, 825, 246,
	572, 725, 544, 212, 0, 543, 395, 512, 521, 382,
	371, 211, 519, 380, 370, 324, 733, 734, 270, 297,
	434, 363, 435, 296, 298, 391, 390, 392, 200, 532,
	0, 201, 0, 484, 533, 573, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 433,
	429, 438, 0, 507, 526, 538, 549, 555, 556, 558,
	559, 560, 561, 562, 565, 563, 394, 301, 480, 323,
	361, 0, 0, 412, 458, 232, 530, 481, 783, 771,
	696, 787, 698, 784, 785, 693, 694, 697, 786, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 0, 774, 682,
	681, 0, 689, 0, 715, 716, 718, 722, 723, 724,
	735, 736, 737, 745, 747, 748, 746, 749, 750, 751,
	754, 755, 756, 757, 752, 753, 758, 699, 703, 700,
	701, 702, 714, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 797, 798, 799, 800, 801, 802, 728,
	732, 731, 729, 730, 726, 727, 680, 192, 213, 356,
	0, 440, 279, 570, 540, 535, 199, 215, 788, 252,
	789, 0, 0, 793, 0, 0, 0, 795, 794, 0,
	796, 762, 761, 0, 0, 790, 791, 0, 792, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 426, 428, 430,
	441, 446, 460, 461, 462, 463, 464, 467, 468, 473,
	474, 475, 476, 477, 485, 486, 491, 514, 516, 529,
	547, 553, 466, 803, 804, 805, 806, 807, 808, 809,
	810, 290, 524, 554, 522, 566, 548, 425, 366, 0,
	0, 369, 271, 295, 310, 0, 539, 487, 219, 452,
	281, 243, 828, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 445, 233,
	470, 494, 495, 496, 498, 383, 256, 420, 384, 0,
	364, 504, 505, 306, 503, 0, 692, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 679, 0, 0, 0, 260, 684, 0, 0, 0,
	354, 257, 0, 0, 417, 0, 198, 0, 472, 244,
	365, 362, 511, 272, 263, 259, 242, 307, 373, 415,
	493, 409, 691, 358, 0, 0, 482, 388, 0, 0,
	0, 0, 0, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 240, 315, 197, 400, 483, 276,
	0, 91, 0, 0, 829, 813, 779, 780, 817, 830,
	831, 832, 833, 818, 0, 230, 819, 820, 237, 821,
	0, 778, 719, 721, 720, 738, 739, 740, 741, 742,
	743, 744, 717, 826, 834, 835, 0, 255, 311, 262,
	254, 508, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 661, 676, 0,
	690, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	673, 674, 0, 0, 0, 0, 773, 0, 675, 0,
	0, 683, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 389, 247, 0,
	439, 278, 772, 0, 0, 550, 0, 0, 770, 0,
	0, 0, 0, 353, 0, 320, 193, 217, 0, 0,
	399, 447, 459, 0, 0, 0, 823, 0, 457, 413,
	528, 225, 274, 444, 419, 455, 427, 277, 0, 0,
	456, 360, 513, 437, 525, 551, 552, 253, 393, 537,
	497, 545, 569, 218, 250, 407, 490, 531, 479, 385,
	509, 510, 319, 478, 286, 196, 357, 557, 216, 465,
	359, 234, 223, 515, 534, 280, 442, 564, 205, 492,
	523, 231, 469, 0, 0, 571, 239, 489, 207, 520,
	488, 381, 316, 317, 206, 0, 443, 258, 284, 248,
	402, 824, 825, 246, 572, 725, 544, 212, 0, 543,
	395, 512, 521, 382, 371, 211, 519, 380, 370, 324,
	733, 734, 270, 297, 434, 363, 435, 296, 298, 391,
	390, 392, 200, 532, 0, 201, 0, 484, 533, 573,
	226, 227, 229, 0, 269, 273, 282, 285, 293, 294,
	303, 355, 406, 433, 429, 438, 0, 507, 526, 538,
	549, 555, 556, 558, 559, 560, 561, 562, 565, 563,
	394, 301, 480, 323, 361, 0, 0, 412, 458, 232,
	530, 481, 783, 771, 696, 787, 698, 784, 785, 693,
	694, 697, 786, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 0, 774, 682, 681, 0, 689, 0, 715, 716,
	718, 722, 723, 724, 735, 736, 737, 745, 747, 748,
	746, 749, 750, 751, 754, 755, 756, 757, 752, 753,
	758, 699, 703, 700, 701, 702, 714, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 797, 798, 799,
	800, 801, 802, 728, 732, 731, 729, 730, 726, 727,
	680, 192, 213, 356, 0, 440, 279, 570, 540, 535,
	199, 215, 788, 252, 789, 0, 0, 793, 0, 0,
	0, 795, 794, 0, 796, 762, 761, 0, 0, 790,
	791, 0, 792, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 289, 300, 308, 309,
	312, 318, 368, 374, 375, 376, 377, 396, 397, 398,
	401, 404, 405, 408, 410, 411, 414, 418, 422, 423,
	424, 426, 428, 430, 441, 446, 460, 461, 462, 463,
	464, 467, 468, 473, 474, 475, 476, 477, 485, 486,
	491, 514, 516, 529, 547, 553, 466, 803, 804, 805,
	806, 807, 808, 809, 810, 290, 524, 554, 522, 566,
	548, 425, 366, 0, 0, 369, 271, 295, 310, 0,
	539, 487, 219, 452, 281, 243, 828, 0, 204, 238,
	222, 249, 264, 267, 314, 379, 387, 416, 421, 287,
	261, 236, 445, 233, 470, 494, 495, 496, 498, 383,
	256, 420, 384, 0, 364, 504, 505, 306, 503, 0,
	692, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 679, 0, 0, 0, 260,
	684, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 472, 244, 365, 362, 511, 272, 263, 259,
	242, 307, 373, 415, 493, 409, 691, 358, 0, 0,
	482, 388, 0, 0, 0, 0, 0, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 483, 276, 0, 91, 0, 0, 829, 813,
	779, 780, 817, 830, 831, 832, 833, 818, 0, 230,
	819, 820, 237, 821, 0, 778, 719, 721, 720, 738,
	739, 740, 741, 742, 743, 744, 717, 826, 834, 835,
	0, 255, 311, 262, 254, 508, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 676, 0, 690, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 673, 674, 0, 0, 0, 0,
	773, 0, 675, 0, 0, 683, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 439, 278, 772, 0, 0, 550,
	0, 0, 770, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 447, 459, 0, 0, 0,
	823, 0, 457, 413, 528, 225, 274, 444, 419, 455,
	427, 277, 0, 0, 456, 360, 513, 437, 525, 551,
	552, 253, 393, 537, 497, 545, 569, 218, 250, 407,
	490, 531, 479, 385, 509, 510, 319, 478, 286, 196,
	357, 557, 216, 465, 359, 234, 223, 515, 534, 280,
	442, 564, 205, 492, 523, 231, 469, 0, 0, 571,
	239, 489, 207, 520, 488, 381, 316, 317, 206, 0,
	443, 258, 284, 248, 402, 824, 825, 246, 572, 725,
	544, 212, 0, 543, 395, 512, 521, 382, 371, 211,
	519, 380, 370, 324, 733, 734, 270, 297, 434, 363,
	435, 296, 298, 391, 390, 392, 200, 532, 0, 201,
	0, 484, 533, 573, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 433, 429, 438,
	0, 507, 526, 538, 549, 555, 556, 558, 559, 560,
	561, 562, 565, 563, 394, 301, 480, 323, 361, 0,
	0, 412, 458, 232, 530, 481, 783, 771, 696, 787,
	698, 784, 785, 693, 694, 697, 786, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 0, 774, 682, 681, 0,
	689, 0, 715, 716, 718, 722, 723, 724, 735, 736,
	737, 745, 747, 748, 746, 749, 750, 751, 754, 755,
	756, 757, 752, 753, 758, 699, 703, 700, 701, 702,
	714, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 797, 798, 799, 800, 801, 802, 728, 732, 731,
	729, 730, 726, 727, 680, 192, 213, 356, 0, 440,
	279, 570, 540, 535, 199, 215, 788, 252, 789, 0,
	0, 793, 0, 0, 0, 795, 794, 0, 796, 762,
	761, 0, 0, 790, 791, 0, 792, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 396, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 426, 428, 430, 441, 446,
	460, 461, 462, 463, 464, 467, 468, 473, 474, 475,
	476, 477, 485, 486, 491, 514, 516, 529, 547, 553,
	466, 803, 804, 805, 806, 807, 808, 809, 810, 290,
	524, 554, 522, 566, 548, 425, 366, 0, 0, 369,
	271, 295, 310, 0, 539, 487, 219, 452, 281, 243,
	828, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 445, 233, 470, 494,
	495, 496, 498, 383, 256, 420, 384, 0, 364, 504,
	505, 306, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 472, 244, 365, 362,
	511, 272, 263, 259, 242, 307, 373, 415, 493, 409,
	0, 358, 0, 0, 482, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 483, 276, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	339, 348, 347, 328, 329, 331, 333, 338, 345, 351,
	0, 0, 0, 0, 0, 255, 311, 262, 254, 508,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 389, 247, 0, 439, 278,
	0, 0, 988, 550, 0, 0, 0, 0, 0, 985,
	986, 353, 946, 320, 193, 217, 979, 983, 399, 447,
	459, 0, 0, 0, 245, 0, 457, 413, 528, 225,
	274, 444, 419, 455, 427, 277, 0, 0, 456, 360,
	513, 437, 525, 551, 552, 253, 393, 537, 497, 545,
	569, 218, 250, 407, 490, 531, 479, 385, 509, 510,
	319, 478, 286, 196, 357, 557, 216, 465, 359, 234,
	223, 515, 534, 280, 442, 564, 205, 492, 523, 231,
	469, 0, 0, 571, 239, 489, 207, 520, 488, 381,
	316, 317, 206, 0, 443, 258, 284, 248, 402, 517,
	518, 246, 572, 220, 544, 212, 0, 543, 395, 512,
	521, 382, 371, 211, 519, 380, 370, 324, 343, 344,
	270, 297, 434, 363, 435, 296, 298, 391, 390, 392,
	200, 532, 0, 201, 0, 484, 533, 573, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 433, 429, 438, 0, 507, 526, 538, 549, 555,
	556, 558, 559, 560, 561, 562, 565, 563, 394, 301,
	480, 323, 361, 0, 0, 412, 458, 232, 530, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 592, 372,
	471, 527, 325, 337, 340, 330, 349, 0, 350, 326,
	327, 332, 334, 335, 336, 341, 342, 346, 352, 241,
	203, 378, 386, 506, 302, 208, 209, 210, 499, 500,
	501, 502, 541, 542, 546, 448, 449, 450, 451, 283,
	536, 299, 454, 453, 321, 322, 367, 436, 0, 192,
	213, 356, 0, 440, 279, 570, 540, 535, 199, 215,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 426,
	428, 430, 441, 446, 460, 461, 462, 463, 464, 467,
	468, 473, 474, 475, 476, 477, 485, 486, 491, 514,
	516, 529, 547, 553, 466, 291, 292, 431, 432, 304,
	305, 567, 568, 290, 524, 554, 522, 566, 548, 425,
	366, 0, 0, 369, 271, 295, 310, 0, 539, 487,
	219, 452, 281, 243, 0, 0, 204, 238, 222, 249,
	264, 267, 314, 379, 387, 416, 421, 287, 261, 236,
	445, 233, 470, 494, 495, 496, 498, 383, 256, 420,
	384, 0, 364, 504, 505, 306, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 354, 257, 0, 0, 417, 0, 198, 0,
	472, 244, 365, 362, 511, 272, 263, 259, 242, 307,
	373, 415, 493, 409, 0, 358, 0, 0, 482, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 240, 315, 197, 400,
	483, 276, 0, 0, 0, 0, 1483, 813, 0, 0,
	1480, 0, 0, 0, 0, 1478, 0, 230, 1479, 1477,
	237, 1482, 0, 778, 339, 348, 347, 328, 329, 331,
	333, 338, 345, 351, 0, 0, 0, 0, 0, 255,
	311, 262, 254, 508, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 389,
	247, 0, 439, 278, 0, 0, 0, 550, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 320, 193, 217,
	0, 0, 399, 447, 459, 0, 0, 0, 245, 0,
	457, 413, 528, 225, 274, 444, 419, 455, 427, 277,
	0, 0, 456, 360, 513, 437, 525, 551, 552, 253,
	393, 537, 497, 545, 569, 218, 250, 407, 490, 531,
	479, 385, 509, 510, 319, 478, 286, 196, 357, 557,
	216, 465, 359, 234, 223, 515, 534, 280, 442, 564,
	205, 492, 523, 231, 469, 0, 0, 571, 239, 489,
	207, 520, 488, 381, 316, 317, 206, 0, 443, 258,
	284, 248, 402, 517, 518, 246, 572, 220, 544, 212,
	0, 543, 395, 512, 521, 382, 371, 211, 519, 380,
	370, 324, 343, 344, 270, 297, 434, 363, 435, 296,
	298, 391, 390, 392, 200, 532, 0, 201, 0, 484,
	533, 573, 226, 227, 229, 0, 269, 273, 282, 285,
	293, 294, 303, 355, 406, 433, 429, 438, 0, 507,
	526, 538, 549, 555, 556, 558, 559, 560, 561, 562,
	565, 563, 394, 301, 480, 323, 361, 0, 0, 412,
	458, 232, 530, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 592, 372, 471, 527, 325, 337, 340, 330,
	349, 0, 350, 326, 327, 332, 334, 335, 336, 341,
	342, 346, 352, 241, 203, 378, 386, 506, 302, 208,
	209, 210, 499, 500, 501, 502, 541, 542, 546, 448,
	449, 450, 451, 283, 536, 299, 454, 453, 321, 322,
	367, 436, 0, 192, 213, 356, 0, 440, 279, 570,
	540, 535, 199, 215, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 251, 266, 268, 275, 289, 300,
	308, 309, 312, 318, 368, 374, 375, 376, 377, 396,
	397, 398, 401, 404, 405, 408, 410, 411, 414, 418,
	422, 423, 424, 426, 428, 430, 441, 446, 460, 461,
	462, 463, 464, 467, 468, 473, 474, 475, 476, 477,
	485, 486, 491, 514, 516, 529, 547, 553, 466, 291,
	292, 431, 432, 304, 305, 567, 568, 290, 524, 554,
	522, 566, 548, 425, 366, 0, 0, 369, 271, 295,
	310, 0, 539, 487, 219, 452, 281, 243, 0, 0,
	204, 238, 222, 249, 264, 267, 314, 379, 387, 416,
	421, 287, 261, 236, 445, 233, 470, 494, 495, 496,
	498, 383, 256, 420, 0, 384, 364, 504, 505, 306,
	82, 503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 354, 257, 0,
	0, 417, 0, 198, 0, 472, 244, 365, 362, 511,
	272, 263, 259, 242, 307, 373, 415, 493, 409, 0,
	358, 0, 0, 482, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 240, 315, 197, 400, 483, 276, 0, 91, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 237, 0, 0, 0, 339,
	348, 347, 328, 329, 331, 333, 338, 345, 351, 0,
	0, 0, 0, 0, 255, 311, 262, 254, 508, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 389, 247, 0, 439, 278, 0,
	0, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 320, 193, 217, 0, 0, 399, 447, 459,
	0, 0, 0, 245, 0, 457, 413, 528, 225, 274,
	444, 419, 455, 427, 277, 0, 0, 456, 360, 513,
	437, 525, 551, 552, 253, 393, 537, 497, 545, 569,
	218, 250, 407, 490, 531, 479, 385, 509, 510, 319,
	478, 286, 196, 357, 557, 216, 465, 359, 234, 223,
	515, 534, 280, 442, 564, 205, 492, 523, 231, 469,
	0, 0, 571, 239, 489, 207, 520, 488, 381, 316,
	317, 206, 0, 443, 258, 284, 248, 402, 517, 518,
	246, 572, 220, 544, 212, 0, 543, 395, 512, 521,
	382, 371, 211, 519, 380, 370, 324, 343, 344, 270,
	297, 434, 363, 435, 296, 298, 391, 390, 392, 200,
	532, 0, 201, 0, 484, 533, 573, 226, 227, 229,
	0, 269, 273, 282, 285, 293, 294, 303, 355, 406,
	433, 429, 438, 0, 507, 526, 538, 549, 555, 556,
	558, 559, 560, 561, 562, 565, 563, 394, 301, 480,
	323, 361, 0, 0, 412, 458, 232, 530, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 592, 372, 471,
	527, 325, 337, 340, 330, 349, 0, 350, 326, 327,
	332, 334, 335, 336, 341, 342, 346, 352, 241, 203,
	378, 386, 506, 302, 208, 209, 210, 499, 500, 501,
	502, 541, 542, 546, 448, 449, 450, 451, 283, 536,
	299, 454, 453, 321, 322, 367, 436, 0, 192, 213,
	356, 90, 440, 279, 570, 540, 535, 199, 215, 0,
	252, 0, 0, 0, 0, 0, 0, 2092, 0, 0,
	2091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 195, 202, 214, 224, 228, 235, 251,
	266, 268, 275, 289, 300, 308, 309, 312, 318, 368,
	374, 375, 376, 377, 396, 397, 398, 401, 404, 405,
	408, 410, 411, 414, 418, 422, 423, 424, 426, 428,
	430, 441, 446, 460, 461, 462, 463, 464, 467, 468,
	473, 474, 475, 476, 477, 485, 486, 491, 514, 516,
	529, 547, 553, 466, 291, 292, 431, 432, 304, 305,
	567, 568, 290, 524, 554, 522, 566, 548, 425, 366,
	0, 0, 369, 271, 295, 310, 0, 539, 487, 219,
	452, 281, 243, 0, 0, 204, 238, 222, 249, 264,
	267, 314, 379, 387, 416, 421, 287, 261, 236, 445,
	233, 470, 494, 495, 496, 498, 383, 256, 420, 1539,
	0, 364, 504, 505, 306, 503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 1541, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 354, 257, 0, 0, 417, 0, 198, 0, 472,
	244, 365, 362, 511, 272, 263, 259, 242, 307, 373,
	415, 493, 409, 0, 358, 0, 0, 482, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 240, 315, 197, 400, 483,
	276, 0, 0, 0, 0, 1543, 639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 237,
	0, 0, 0, 339, 348, 347, 328, 329, 331, 333,
	338, 345, 351, 0, 0, 0, 0, 0, 255, 311,
	262, 254, 508, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 1317, 0, 1318, 1319, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 389, 247,
	0, 439, 278, 0, 0, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 353, 0, 320, 193, 217, 0,
	0, 399, 447, 459, 0, 0, 0, 245, 0, 457,
	413, 528, 225, 274, 444, 419, 455, 427, 277, 0,
	0, 456, 360, 513, 437, 525, 551, 552, 253, 393,
	537, 497, 545, 569, 218, 250, 407, 490, 531, 479,
	385, 509, 510, 319, 478, 286, 196, 357, 557, 216,
	465, 359, 234, 223, 515, 534, 280, 442, 564, 205,
	492, 523, 231, 469, 0, 0, 571, 239, 489, 207,
	520, 488, 381, 316, 317, 206, 0, 443, 258, 284,
	248, 402, 517, 518, 246, 572, 220, 544, 212, 0,
	543, 395, 512, 521, 382, 371, 211, 519, 380, 370,
	324, 343, 344, 270, 297, 434, 363, 435, 296, 298,
	391, 390, 392, 200, 532, 0, 201, 0, 484, 533,
	573, 226, 227, 229, 0, 269, 273, 282, 285, 293,
	294, 303, 355, 406, 433, 429, 438, 0, 507, 526,
	538, 549, 555, 556, 558, 559, 560, 561, 562, 565,
	563, 394, 301, 480, 323, 361, 0, 0, 412, 458,
	232, 530, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 592, 372, 471, 527, 325, 337, 340, 330, 349,
	0, 350, 326, 327, 332, 334, 335, 336, 341, 342,
	346, 352, 241, 203, 378, 386, 506, 302, 208, 209,
	210, 499, 500, 501, 502, 541, 542, 546, 448, 449,
	450, 451, 283, 536, 299, 454, 453, 321, 322, 367,
	436, 0, 192, 213, 356, 0, 440, 279, 570, 540,
	535, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 289, 300, 308,
	309, 312, 318, 368, 374, 375, 376, 377, 396, 397,
	398, 401, 404, 405, 408, 410, 411, 414, 418, 422,
	423, 424, 426, 428, 430, 441, 446, 460, 461, 462,
	463, 464, 467, 468, 473, 474, 475, 476, 477, 485,
	486, 491, 514, 516, 529, 547, 553, 466, 291, 292,
	431, 432, 304, 305, 567, 568, 290, 524, 554, 522,
	566, 548, 425, 366, 0, 0, 369, 271, 295, 310,
	0, 539, 487, 219, 452, 281, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 314, 379, 387, 416, 421,
	287, 261, 236, 445, 233, 470, 494, 495, 496, 498,
	383, 256, 420, 0, 384, 364, 504, 505, 306, 82,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 472, 244, 365, 362, 511, 272,
	263, 259, 242, 307, 373, 415, 493, 409, 0, 358,
	0, 0, 482, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 483, 276, 0, 91, 0, 1520,
	0, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 339, 348,
	347, 328, 329, 331, 333, 338, 345, 351, 0, 0,
	0, 0, 0, 255, 311, 262, 254, 508, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 439, 278, 0, 0,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 320, 193, 217, 0, 0, 399, 447, 459, 0,
	0, 0, 245, 0, 457, 413, 528, 225, 274, 444,
	419, 455, 427, 277, 0, 0, 456, 360, 513, 437,
	525, 551, 552, 253, 393, 537, 497, 545, 569, 218,
	250, 407, 490, 531, 479, 385, 509, 510, 319, 478,
	286, 196, 357, 557, 216, 465, 359, 234, 223, 515,
	534, 280, 442, 564, 205, 492, 523, 231, 469, 0,
	0, 571, 239, 489, 207, 520, 488, 381, 316, 317,
	206, 0, 443, 258, 284, 248, 402, 517, 518, 246,
	572, 220, 544, 212, 0, 543, 395, 512, 521, 382,
	371, 211, 519, 380, 370, 324, 343, 344, 270, 297,
	434, 363, 435, 296, 298, 391, 390, 392, 200, 532,
	0, 201, 0, 484, 533, 573, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 433,
	429, 438, 0, 507, 526, 538, 549, 555, 556, 558,
	559, 560, 561, 562, 565, 563, 394, 301, 480, 323,
	361, 0, 0, 412, 458, 232, 530, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 592, 372, 471, 527,
	325, 337, 340, 330, 349, 0, 350, 326, 327, 332,
	334, 335, 336, 341, 342, 346, 352, 241, 203, 378,
	386, 506, 302, 208, 209, 210, 499, 500, 501, 502,
	541, 542, 546, 448, 449, 450, 451, 283, 536, 299,
	454, 453, 321, 322, 367, 436, 0, 192, 213, 356,
	90, 440, 279, 570, 540, 535, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 426, 428, 430,
	441, 446, 460, 461, 462, 463, 464, 467, 468, 473,
	474, 475, 476, 477, 485, 486, 491, 514, 516, 529,
	547, 553, 466, 291, 292, 431, 432, 304, 305, 567,
	568, 290, 524, 554, 522, 566, 548, 425, 366, 0,
	0, 369, 271, 295, 310, 0, 539, 487, 219, 452,
	281, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 445, 233,
	470, 494, 495, 496, 498, 383, 256, 420, 384, 0,
	364, 504, 505, 306, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	354, 257, 0, 0, 417, 0, 198, 0, 472, 244,
	365, 362, 511, 272, 263, 259, 242, 307, 373, 415,
	493, 409, 0, 358, 0, 0, 482, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 240, 315, 197, 400, 483, 276,
	0, 91, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 339, 348, 347, 328, 329, 331, 333, 338,
	345, 351, 0, 0, 0, 0, 0, 255, 311, 262,
	254, 508, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 389, 247, 0,
	439, 278, 0, 0, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 320, 193, 217, 0, 0,
	399, 447, 459, 0, 0, 0, 245, 0, 457, 413,
	528, 225, 274, 444, 419, 455, 427, 277, 0, 0,
	456, 360, 513, 437, 525, 551, 552, 253, 393, 537,
	497, 545, 569, 218, 250, 407, 490, 531, 479, 385,
	509, 510, 319, 478, 286, 196, 357, 557, 216, 465,
	359, 234, 223, 515, 534, 280, 442, 564, 205, 492,
	523, 231, 469, 0, 0, 571, 239, 489, 207, 520,
	488, 381, 316, 317, 206, 0, 443, 258, 284, 248,
	402, 517, 518, 246, 572, 220, 544, 212, 0, 543,
	395, 512, 521, 382, 371, 211, 519, 380, 370, 324,
	343, 344, 270, 297, 434, 363, 435, 296, 298, 391,
	390, 392, 200, 532, 0, 201, 0, 484, 533, 573,
	226, 227, 229, 0, 269, 273, 282, 285, 293, 294,
	303, 355, 406, 433, 429, 438, 0, 507, 526, 538,
	549, 555, 556, 558, 559, 560, 561, 562, 565, 563,
	394, 301, 480, 323, 361, 0, 0, 412, 458, 232,
	530, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	592, 372, 471, 527, 325, 337, 340, 330, 349, 0,
	350, 326, 327, 332, 334, 335, 336, 341, 342, 346,
	352, 241, 203, 378, 386, 506, 302, 208, 209, 210,
	499, 500, 501, 502, 541, 542, 546, 448, 449, 450,
	451, 283, 536, 299, 454, 453, 321, 322, 367, 436,
	0, 192, 213, 356, 0, 440, 279, 570, 540, 535,
	199, 215, 0, 252, 0, 0, 0, 0, 0, 0,
	2092, 0, 0, 2091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 289, 300, 308, 309,
	312, 318, 368, 374, 375, 376, 377, 396, 397, 398,
	401, 404, 405, 408, 410, 411, 414, 418, 422, 423,
	424, 426, 428, 430, 441, 446, 460, 461, 462, 463,
	464, 467, 468, 473, 474, 475, 476, 477, 485, 486,
	491, 514, 516, 529, 547, 553, 466, 291, 292, 431,
	432, 304, 305, 567, 568, 290, 524, 554, 522, 566,
	548, 425, 366, 0, 0, 369, 271, 295, 310, 0,
	539, 487, 219, 452, 281, 243, 0, 0, 204, 238,
	222, 249, 264, 267, 314, 379, 387, 416, 421, 287,
	261, 236, 445, 233, 470, 494, 495, 496, 498, 383,
	256, 420, 384, 0, 364, 504, 505, 306, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 2042, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 472, 244, 365, 362, 511, 272, 263, 259,
	242, 307, 373, 415, 493, 409, 0, 358, 0, 0,
	482, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 483, 276, 0, 0, 0, 0, 1720, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 339, 348, 347, 328,
	329, 331, 333, 338, 345, 351, 0, 0, 0, 0,
	0, 255, 311, 262, 254, 508, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 439, 278, 0, 0, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 447, 459, 0, 0, 0,
	245, 0, 457, 413, 528, 225, 274, 444, 419, 455,
	427, 277, 0, 2040, 456, 360, 513, 437, 525, 551,
	552, 253, 393, 537, 497, 545, 569, 218, 250, 407,
	490, 531, 479, 385, 509, 510, 319, 478, 286, 196,
	357, 557, 216, 465, 359, 234, 223, 515, 534, 280,
	442, 564, 205, 492, 523, 231, 469, 0, 0, 571,
	239, 489, 207, 520, 488, 381, 316, 317, 206, 0,
	443, 258, 284, 248, 402, 517, 518, 246, 572, 220,
	544, 212, 0, 543, 395, 512, 521, 382, 371, 211,
	519, 380, 370, 324, 343, 344, 270, 297, 434, 363,
	435, 296, 298, 391, 390, 392, 200, 532, 0, 201,
	0, 484, 533, 573, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 433, 429, 438,
	0, 507, 526, 538, 549, 555, 556, 558, 559, 560,
	561, 562, 565, 563, 394, 301, 480, 323, 361, 0,
	0, 412, 458, 232, 530, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 592, 372, 471, 527, 325, 337,
	340, 330, 349, 0, 350, 326, 327, 332, 334, 335,
	336, 341, 342, 346, 352, 241, 203, 378, 386, 506,
	302, 208, 209, 210, 499, 500, 501, 502, 541, 542,
	546, 448, 449, 450, 451, 283, 536, 299, 454, 453,
	321, 322, 367, 436, 0, 192, 213, 356, 0, 440,
	279, 570, 540, 535, 199, 215, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 396, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 426, 428, 430, 441, 446,
	460, 461, 462, 463, 464, 467, 468, 473, 474, 475,
	476, 477, 485, 486, 491, 514, 516, 529, 547, 553,
	466, 291, 292, 431, 432, 304, 305, 567, 568, 290,
	524, 554, 522, 566, 548, 425, 366, 0, 0, 369,
	271, 295, 310, 0, 539, 487, 219, 452, 281, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 445, 233, 470, 494,
	495, 496, 498, 383, 256, 420, 384, 0, 364, 504,
	505, 306, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 472, 244, 365, 362,
	511, 272, 263, 259, 242, 307, 373, 415, 493, 409,
	0, 358, 0, 0, 482, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 483, 276, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	339, 348, 347, 328, 329, 331, 333, 338, 345, 351,
	0, 0, 0, 0, 0, 255, 311, 262, 254, 508,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 389, 247, 0, 439, 278,
	0, 0, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 353, 946, 320, 193, 217, 944, 0, 399, 447,
	459, 0, 0, 0, 245, 0, 457, 413, 528, 225,
	274, 444, 419, 455, 427, 277, 0, 0, 456, 360,
	513, 437, 525, 551, 552, 253, 393, 537, 497, 545,
	569, 218, 250, 407, 490, 531, 479, 385, 509, 510,
	319, 478, 286, 196, 357, 557, 216, 465, 359, 234,
	223, 515, 534, 280, 442, 564, 205, 492, 523, 231,
	469, 0, 0, 571, 239, 489, 207, 520, 488, 381,
	316, 317, 206, 0, 443, 258, 284, 248, 402, 517,
	518, 246, 572, 220, 544, 212, 0, 543, 395, 512,
	521, 382, 371, 211, 519, 380, 370, 324, 343, 344,
	270, 297, 434, 363, 435, 296, 298, 391, 390, 392,
	200, 532, 0, 201, 0, 484, 533, 573, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 433, 429, 438, 0, 507, 526, 538, 549, 555,
	556, 558, 559, 560, 561, 562, 565, 563, 394, 301,
	480, 323, 361, 0, 0, 412, 458, 232, 530, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 592, 372,
	471, 527, 325, 337, 340, 330, 349, 0, 350, 326,
	327, 332, 334, 335, 336, 341, 342, 346, 352, 241,
	203, 378, 386, 506, 302, 208, 209, 210, 499, 500,
	501, 502, 541, 542, 546, 448, 449, 450, 451, 283,
	536, 299, 454, 453, 321, 322, 367, 436, 0, 192,
	213, 356, 0, 440, 279, 570, 540, 535, 199, 215,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 426,
	428, 430, 441, 446, 460, 461, 462, 463, 464, 467,
	468, 473, 474, 475, 476, 477, 485, 486, 491, 514,
	516, 529, 547, 553, 466, 291, 292, 431, 432, 304,
	305, 567, 568, 290, 524, 554, 522, 566, 548, 425,
	366, 0, 0, 369, 271, 295, 310, 0, 539, 487,
	219, 452, 281, 243, 0, 0, 204, 238, 222, 249,
	264, 267, 314, 379, 387, 416, 421, 287, 261, 236,
	445, 233, 470, 494, 495, 496, 498, 383, 256, 420,
	384, 0, 364, 504, 505, 306, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 2042, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 354, 257, 0, 0, 417, 0, 198, 0,
	472, 244, 365, 362, 511, 272, 263, 259, 242, 307,
	373, 415, 493, 409, 0, 358, 0, 0, 482, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 240, 315, 197, 400,
	483, 276, 0, 0, 0, 0, 1720, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	237, 0, 0, 0, 339, 348, 347, 328, 329, 331,
	333, 338, 345, 351, 0, 0, 0, 0, 0, 255,
	311, 262, 254, 508, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 389,
	247, 0, 439, 278, 0, 0, 0, 550, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 320, 193, 217,
	0, 0, 399, 447, 459, 0, 0, 0, 245, 0,
	457, 413, 528, 225, 274, 444, 419, 455, 427, 277,
	0, 0, 456, 360, 513, 437, 525, 551, 552, 253,
	393, 537, 497, 545, 569, 218, 250, 407, 490, 531,
	479, 385, 509, 510, 319, 478, 286, 196, 357, 557,
	216, 465, 359, 234, 223, 515, 534, 280, 442, 564,
	205, 492, 523, 231, 469, 0, 0, 571, 239, 489,
	207, 520, 488, 381, 316, 317, 206, 0, 443, 258,
	284, 248, 402, 517, 518, 246, 572, 220, 544, 212,
	0, 543, 395, 512, 521, 382, 371, 211, 519, 380,
	370, 324, 343, 344, 270, 297, 434, 363, 435, 296,
	298, 391, 390, 392, 200, 532, 0, 201, 0, 484,
	533, 573, 226, 227, 229, 0, 269, 273, 282, 285,
	293, 294, 303, 355, 406, 433, 429, 438, 0, 507,
	526, 538, 549, 555, 556, 558, 559, 560, 561, 562,
	565, 563, 394, 301, 480, 323, 361, 0, 0, 412,
	458, 232, 530, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 592, 372, 471, 527, 325, 337, 340, 330,
	349, 0, 350, 326, 327, 332, 334, 335, 336, 341,
	342, 346, 352, 241, 203, 378, 386, 506, 302, 208,
	209, 210, 499, 500, 501, 502, 541, 542, 546, 448,
	449, 450, 451, 283, 536, 299, 454, 453, 321, 322,
	367, 436, 0, 192, 213, 356, 0, 440, 279, 570,
	540, 535, 199, 215, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 251, 266, 268, 275, 289, 300,
	308, 309, 312, 318, 368, 374, 375, 376, 377, 396,
	397, 398, 401, 404, 405, 408, 410, 411, 414, 418,
	422, 423, 424, 426, 428, 430, 441, 446, 460, 461,
	462, 463, 464, 467, 468, 473, 474, 475, 476, 477,
	485, 486, 491, 514, 516, 529, 547, 553, 466, 291,
	292, 431, 432, 304, 305, 567, 568, 290, 524, 554,
	522, 566, 548, 425, 366, 0, 0, 369, 271, 295,
	310, 0, 539, 487, 219, 452, 281, 243, 0, 0,
	204, 238, 222, 249, 264, 267, 314, 379, 387, 416,
	421, 287, 261, 236, 445, 233, 470, 494, 495, 496,
	498, 383, 256, 420, 384, 0, 364, 504, 505, 306,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 472, 244, 365, 362, 511, 272,
	263, 259, 242, 307, 373, 415, 493, 409, 0, 358,
	0, 0, 482, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 483, 276, 0, 0, 0, 1520,
	0, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 339, 348,
	347, 328, 329, 331, 333, 338, 345, 351, 0, 0,
	0, 0, 0, 255, 311, 262, 254, 508, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 439, 278, 0, 0,
	0, 550, 0, 0, 0, 3324, 0, 0, 0, 353,
	0, 320, 193, 217, 0, 0, 399, 447, 459, 0,
	0, 0, 245, 0, 457, 413, 528, 225, 274, 444,
	419, 455, 427, 277, 0, 0, 456, 360, 513, 437,
	525, 551, 552, 253, 393, 537, 497, 545, 569, 218,
	250, 407, 490, 531, 479, 385, 509, 510, 319, 478,
	286, 196, 357, 557, 216, 465, 359, 234, 223, 515,
	534, 280, 442, 564, 205, 492, 523, 231, 469, 0,
	0, 571, 239, 489, 207, 520, 488, 381, 316, 317,
	206, 0, 443, 258, 284, 248, 402, 517, 518, 246,
	572, 220, 544, 212, 0, 543, 395, 512, 521, 382,
	371, 211, 519, 380, 370, 324, 343, 344, 270, 297,
	434, 363, 435, 296, 298, 391, 390, 392, 200, 532,
	0, 201, 0, 484, 533, 573, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 433,
	429, 438, 0, 507, 526, 538, 549, 555, 556, 558,
	559, 560, 561, 562, 565, 563, 394, 301, 480, 323,
	361, 0, 0, 412, 458, 232, 530, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 592, 372, 471, 527,
	325, 337, 340, 330, 349, 0, 350, 326, 327, 332,
	334, 335, 336, 341, 342, 346, 352, 241, 203, 378,
	386, 506, 302, 208, 209, 210, 499, 500, 501, 502,
	541, 542, 546, 448, 449, 450, 451, 283, 536, 299,
	454, 453, 321, 322, 367, 436, 0, 192, 213, 356,
	0, 440, 279, 570, 540, 535, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 426, 428, 430,
	441, 446, 460, 461, 462, 463, 464, 467, 468, 473,
	474, 475, 476, 477, 485, 486, 491, 514, 516, 529,
	547, 553, 466, 291, 292, 431, 432, 304, 305, 567,
	568, 290, 524, 554, 522, 566, 548, 425, 366, 0,
	0, 369, 271, 295, 310, 0, 539, 487, 219, 452,
	281, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 445, 233,
	470, 494, 495, 496, 498, 383, 256, 420, 384, 0,
	364, 504, 505, 306, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	354, 257, 0, 0, 417, 0, 198, 0, 472, 244,
	365, 362, 511, 272, 263, 259, 242, 307, 373, 415,
	493, 409, 0, 358, 0, 0, 482, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 240, 315, 197, 400, 483, 276,
	0, 0, 0, 0, 1875, 639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 339, 348, 347, 328, 329, 331, 333, 338,
	345, 351, 0, 0, 0, 0, 0, 255, 311, 262,
	254, 508, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 389, 247, 0,
	439, 278, 0, 0, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 320, 193, 217, 0, 0,
	399, 447, 459, 0, 0, 0, 245, 0, 457, 413,
	528, 225, 274, 444, 419, 455, 427, 277, 0, 0,
	456, 360, 513, 437, 525, 551, 552, 253, 393, 537,
	497, 545, 569, 218, 250, 407, 490, 531, 479, 385,
	509, 510, 319, 478, 286, 196, 357, 557, 216, 465,
	359, 234, 223, 515, 534, 280, 442, 564, 205, 492,
	523, 231, 469, 0, 0, 571, 239, 489, 207, 520,
	488, 381, 316, 317, 206, 0, 443, 258, 284, 248,
	402, 517, 518, 246, 572, 220, 544, 212, 0, 543,
	395, 512, 521, 382, 371, 211, 519, 380, 370, 324,
	343, 344, 270, 297, 434, 363, 435, 296, 298, 391,
	390, 392, 200, 532, 0, 201, 0, 484, 533, 573,
	226, 227, 229, 0, 269, 273, 282, 285, 293, 294,
	303, 355, 406, 433, 429, 438, 0, 507, 526, 538,
	549, 555, 556, 558, 559, 560, 561, 562, 565, 563,
	394, 301, 480, 323, 361, 0, 0, 412, 458, 232,
	530, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	592, 372, 471, 527, 325, 337, 340, 330, 349, 0,
	350, 326, 327, 332, 334, 335, 336, 341, 342, 346,
	352, 241, 203, 378, 386, 506, 302, 208, 209, 210,
	499, 500, 501, 502, 541, 542, 546, 448, 449, 450,
	451, 283, 536, 299, 454, 453, 321, 322, 367, 436,
	0, 192, 213, 356, 0, 440, 279, 570, 540, 535,
	199, 215, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 289, 300, 308, 309,
	312, 318, 368, 374, 375, 376, 377, 396, 397, 398,
	401, 404, 405, 408, 410, 411, 414, 418, 422, 423,
	424, 426, 428, 430, 441, 446, 460, 461, 462, 463,
	464, 467, 468, 473, 474, 475, 476, 477, 485, 486,
	491, 514, 516, 529, 547, 553, 466, 291, 292, 431,
	432, 304, 305, 567, 568, 290, 524, 554, 522, 566,
	548, 425, 366, 0, 0, 369, 271, 295, 310, 0,
	539, 487, 219, 452, 281, 243, 0, 0, 204, 238,
	222, 249, 264, 267, 314, 379, 387, 416, 421, 287,
	261, 236, 445, 233, 470, 494, 495, 496, 498, 383,
	256, 420, 384, 0, 364, 504, 505, 306, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 472, 244, 365, 362, 511, 272, 263, 259,
	242, 307, 373, 415, 493, 409, 0, 358, 0, 0,
	482, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 483, 276, 0, 0, 0, 0, 2445, 639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 339, 348, 347, 328,
	329, 331, 333, 338, 345, 351, 0, 0, 0, 0,
	0, 255, 311, 262, 254, 508, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2446, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 439, 278, 0, 0, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 447, 459, 0, 0, 0,
	245, 0, 457, 413, 528, 225, 274, 444, 419, 455,
	427, 277, 0, 0, 456, 360, 513, 437, 525, 551,
	552, 253, 393, 537, 497, 545, 569, 218, 250, 407,
	490, 531, 479, 385, 509, 510, 319, 478, 286, 196,
	357, 557, 216, 465, 359, 234, 223, 515, 534, 280,
	442, 564, 205, 492, 523, 231, 469, 0, 0, 571,
	239, 489, 207, 520, 488, 381, 316, 317, 206, 0,
	443, 258, 284, 248, 402, 517, 518, 246, 572, 220,
	544, 212, 0, 543, 395, 512, 521, 382, 371, 211,
	519, 380, 370, 324, 343, 344, 270, 297, 434, 363,
	435, 296, 298, 391, 390, 392, 200, 532, 0, 201,
	0, 484, 533, 573, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 433, 429, 438,
	0, 507, 526, 538, 549, 555, 556, 558, 559, 560,
	561, 562, 565, 563, 394, 301, 480, 323, 361, 0,
	0, 412, 458, 232, 530, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 592, 372, 471, 527, 325, 337,
	340, 330, 349, 0, 350, 326, 327, 332, 334, 335,
	336, 341, 342, 346, 352, 241, 203, 378, 386, 506,
	302, 208, 209, 210, 499, 500, 501, 502, 541, 542,
	546, 448, 449, 450, 451, 283, 536, 299, 454, 453,
	321, 322, 367, 436, 0, 192, 213, 356, 0, 440,
	279, 570, 540, 535, 199, 215, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 396, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 426, 428, 430, 441, 446,
	460, 461, 462, 463, 464, 467, 468, 473, 474, 475,
	476, 477, 485, 486, 491, 514, 516, 529, 547, 553,
	466, 291, 292, 431, 432, 304, 305, 567, 568, 290,
	524, 554, 522, 566, 548, 425, 366, 0, 0, 369,
	271, 295, 310, 0, 539, 487, 219, 452, 281, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 445, 233, 470, 494,
	495, 496, 498, 383, 256, 420, 384, 0, 364, 504,
	505, 306, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 472, 244, 365, 362,
	511, 272, 263, 259, 242, 307, 373, 415, 493, 409,
	0, 358, 0, 0, 482, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 483, 276, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 2430, 0,
	0, 0, 0, 230, 0, 0, 237, 2431, 0, 0,
	339, 348, 347, 328, 329, 331, 333, 338, 345, 351,
	0, 0, 0, 0, 0, 255, 311, 262, 254, 508,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 389, 247, 0, 439, 278,
	0, 0, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 320, 193, 217, 0, 0, 399, 447,
	459, 0, 0, 0, 245, 0, 457, 413, 528, 225,
	274, 444, 419, 455, 427, 277, 0, 0, 456, 360,
	513, 437, 525, 551, 552, 253, 393, 537, 497, 545,
	569, 218, 250, 407, 490, 531, 479, 385, 509, 510,
	319, 478, 286, 196, 357, 557, 216, 465, 359, 234,
	223, 515, 534, 280, 442, 564, 205, 492, 523, 231,
	469, 0, 0, 571, 239, 489, 207, 520, 488, 381,
	316, 317, 206, 0, 443, 258, 284, 248, 402, 517,
	518, 246, 572, 220, 544, 212, 0, 543, 395, 512,
	521, 382, 371, 211, 519, 380, 370, 324, 343, 344,
	270, 297, 434, 363, 435, 296, 298, 391, 390, 392,
	200, 532, 0, 201, 0, 484, 533, 573, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 433, 429, 438, 0, 507, 526, 538, 549, 555,
	556, 558, 559, 560, 561, 562, 565, 563, 394, 301,
	480, 323, 361, 0, 0, 412, 458, 232, 530, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 592, 372,
	471, 527, 325, 337, 340, 330, 349, 0, 350, 326,
	327, 332, 334, 335, 336, 341, 342, 346, 352, 241,
	203, 378, 386, 506, 302, 208, 209, 210, 499, 500,
	501, 502, 541, 542, 546, 448, 449, 450, 451, 283,
	536, 299, 454, 453, 321, 322, 367, 436, 0, 192,
	213, 356, 0, 440, 279, 570, 540, 535, 199, 215,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 426,
	428, 430, 441, 446, 460, 461, 462, 463, 464, 467,
	468, 473, 474, 475, 476, 477, 485, 486, 491, 514,
	516, 529, 547, 553, 466, 291, 292, 431, 432, 304,
	305, 567, 568, 290, 524, 554, 522, 566, 548, 425,
	366, 0, 0, 369, 271, 295, 310, 0, 539, 487,
	219, 452, 281, 243, 0, 0, 204, 238, 222, 249,
	264, 267, 314, 379, 387, 416, 421, 287, 261, 236,
	445, 233, 470, 494, 495, 496, 498, 383, 256, 420,
	384, 0, 364, 504, 505, 306, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 1562, 0,
	0, 0, 354, 257, 0, 0, 417, 0, 198, 0,
	472, 244, 365, 362, 511, 272, 263, 259, 242, 307,
	373, 415, 493, 409, 0, 358, 0, 0, 482, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 240, 315, 197, 400,
	483, 276, 0, 0, 0, 0, 1561, 639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	237, 0, 0, 0, 339, 348, 347, 328, 329, 331,
	333, 338, 345, 351, 0, 0, 0, 0, 0, 255,
	311, 262, 254, 508, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 389,
	247, 0, 439, 278, 0, 0, 0, 550, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 320, 193, 217,
	0, 0, 399, 447, 459, 0, 0, 0, 245, 0,
	457, 413, 528, 225, 274, 444, 419, 455, 427, 277,
	0, 0, 456, 360, 513, 437, 525, 551, 552, 253,
	393, 537, 497, 545, 569, 218, 250, 407, 490, 531,
	479, 385, 509, 510, 319, 478, 286, 196, 357, 557,
	216, 465, 359, 234, 223, 515, 534, 280, 442, 564,
	205, 492, 523, 231, 469, 0, 0, 571, 239, 489,
	207, 520, 488, 381, 316, 317, 206, 0, 443, 258,
	284, 248, 402, 517, 518, 246, 572, 220, 544, 212,
	0, 543, 395, 512, 521, 382, 371, 211, 519, 380,
	370, 324, 343, 344, 270, 297, 434, 363, 435, 296,
	298, 391, 390, 392, 200, 532, 0, 201, 0, 484,
	533, 573, 226, 227, 229, 0, 269, 273, 282, 285,
	293, 294, 303, 355, 406, 433, 429, 438, 0, 507,
	526, 538, 549, 555, 556, 558, 559, 560, 561, 562,
	565, 563, 394, 301, 480, 323, 361, 0, 0, 412,
	458, 232, 530, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 592, 372, 471, 527, 325, 337, 340, 330,
	349, 0, 350, 326, 327, 332, 334, 335, 336, 341,
	342, 346, 352, 241, 203, 378, 386, 506, 302, 208,
	209, 210, 499, 500, 501, 502, 541, 542, 546, 448,
	449, 450, 451, 283, 536, 299, 454, 453, 321, 322,
	367, 436, 0, 192, 213, 356, 0, 440, 279, 570,
	540, 535, 199, 215, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 251, 266, 268, 275, 289, 300,
	308, 309, 312, 318, 368, 374, 375, 376, 377, 396,
	397, 398, 401, 404, 405, 408, 410, 411, 414, 418,
	422, 423, 424, 426, 428, 430, 441, 446, 460, 461,
	462, 463, 464, 467, 468, 473, 474, 475, 476, 477,
	485, 486, 491, 514, 516, 529, 547, 553, 466, 291,
	292, 431, 432, 304, 305, 567, 568, 290, 524, 554,
	522, 566, 548, 425, 366, 0, 0, 369, 271, 295,
	310, 0, 539, 487, 219, 452, 281, 243, 0, 0,
	204, 238, 222, 249, 264, 267, 314, 379, 387, 416,
	421, 287, 261, 236, 445, 233, 470, 494, 495, 496,
	498, 383, 256, 420, 384, 0, 364, 504, 505, 306,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 472, 244, 365, 362, 511, 272,
	263, 259, 242, 307, 373, 415, 493, 409, 0, 358,
	0, 0, 482, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 483, 276, 0, 0, 0, 0,
	0, 641, 642, 643, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 339, 348,
	347, 328, 329, 331, 333, 338, 345, 351, 0, 0,
	0, 0, 0, 255, 311, 262, 254, 508, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 439, 278, 0, 0,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 320, 193, 217, 0, 0, 399, 447, 459, 0,
	0, 0, 245, 0, 457, 413, 528, 225, 274, 444,
	419, 455, 427, 277, 0, 0, 456, 360, 513, 437,
	525, 551, 552, 253, 393, 537, 497, 545, 569, 218,
	250, 407, 490, 531, 479, 385, 509, 510, 319, 478,
	286, 196, 357, 557, 216, 465, 359, 234, 223, 515,
	534, 280, 442, 564, 205, 492, 523, 231, 469, 0,
	0, 571, 239, 489, 207, 520, 488, 381, 316, 317,
	206, 0, 443, 258, 284, 248, 402, 517, 518, 246,
	572, 220, 544, 212, 0, 543, 395, 512, 521, 382,
	371, 211, 519, 380, 370, 324, 343, 344, 270, 297,
	434, 363, 435, 296, 298, 391, 390, 392, 200, 532,
	0, 201, 0, 484, 533, 573, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 433,
	429, 438, 0, 507, 526, 538, 549, 555, 556, 558,
	559, 560, 561, 562, 565, 563, 394, 301, 480, 323,
	361, 0, 0, 412, 458, 232, 530, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 592, 372, 471, 527,
	325, 337, 340, 330, 349, 0, 350, 326, 327, 332,
	334, 335, 336, 341, 342, 346, 352, 241, 203, 378,
	386, 506, 302, 208, 209, 210, 499, 500, 501, 502,
	541, 542, 546, 448, 449, 450, 451, 283, 536, 299,
	454, 453, 321, 322, 367, 436, 0, 192, 213, 356,
	0, 440, 279, 570, 540, 535, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 426, 428, 430,
	441, 446, 460, 461, 462, 463, 464, 467, 468, 473,
	474, 475, 476, 477, 485, 486, 491, 514, 516, 529,
	547, 553, 466, 291, 292, 431, 432, 304, 305, 567,
	568, 290, 524, 554, 522, 566, 548, 425, 366, 0,
	0, 369, 271, 295, 310, 0, 539, 487, 219, 452,
	281, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 445, 233,
	470, 494, 495, 496, 498, 383, 256, 420, 384, 0,
	364, 504, 505, 306, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	354, 257, 0, 0, 417, 0, 198, 0, 472, 244,
	365, 362, 511, 272, 263, 259, 242, 307, 373, 415,
	493, 409, 0, 358, 0, 0, 482, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 240, 315, 197, 400, 483, 276,
	0, 0, 0, 0, 0, 639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 339, 348, 347, 328, 329, 331, 333, 338,
	345, 351, 0, 0, 0, 0, 0, 255, 311, 262,
	254, 508, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 389, 247, 0,
	439, 278, 0, 0, 0, 550, 0, 0, 0, 3448,
	0, 0, 0, 353, 0, 320, 193, 217, 0, 0,
	399, 447, 459, 0, 0, 0, 245, 0, 457, 413,
	528, 225, 274, 444, 419, 455, 427, 277, 0, 0,
	456, 360, 513, 437, 525, 551, 552, 253, 393, 537,
	497, 545, 569, 218, 250, 407, 490, 531, 479, 385,
	509, 510, 319, 478, 286, 196, 357, 557, 216, 465,
	359, 234, 223, 515, 534, 280, 442, 564, 205, 492,
	523, 231, 469, 0, 0, 571, 239, 489, 207, 520,
	488, 381, 316, 317, 206, 0, 443, 258, 284, 248,
	402, 517, 518, 246, 572, 220, 544, 212, 0, 543,
	395, 512, 521, 382, 371, 211, 519, 380, 370, 324,
	343, 344, 270, 297, 434, 363, 435, 296, 298, 391,
	390, 392, 200, 532, 0, 201, 0, 484, 533, 573,
	226, 227, 229, 0, 269, 273, 282, 285, 293, 294,
	303, 355, 406, 433, 429, 438, 0, 507, 526, 538,
	549, 555, 556, 558, 559, 560, 561, 562, 565, 563,
	394, 301, 480, 323, 361, 0, 0, 412, 458, 232,
	530, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	592, 372, 471, 527, 325, 337, 340, 330, 349, 0,
	350, 326, 327, 332, 334, 335, 336, 341, 342, 346,
	352, 241, 203, 378, 386, 506, 302, 208, 209, 210,
	499, 500, 501, 502, 541, 542, 546, 448, 449, 450,
	451, 283, 536, 299, 454, 453, 321, 322, 367, 436,
	0, 192, 213, 356, 0, 440, 279, 570, 540, 535,
	199, 215, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 289, 300, 308, 309,
	312, 318, 368, 374, 375, 376, 377, 396, 397, 398,
	401, 404, 405, 408, 410, 411, 414, 418, 422, 423,
	424, 426, 428, 430, 441, 446, 460, 461, 462, 463,
	464, 467, 468, 473, 474, 475, 476, 477, 485, 486,
	491, 514, 516, 529, 547, 553, 466, 291, 292, 431,
	432, 304, 305, 567, 568, 290, 524, 554, 522, 566,
	548, 425, 366, 0, 0, 369, 271, 295, 310, 0,
	539, 487, 219, 452, 281, 243, 0, 0, 204, 238,
	222, 249, 264, 267, 314, 379, 387, 416, 421, 287,
	261, 236, 445, 233, 470, 494, 495, 496, 498, 383,
	256, 420, 384, 0, 364, 504, 505, 306, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 472, 244, 365, 362, 511, 272, 263, 259,
	242, 307, 373, 415, 493, 409, 0, 358, 0, 0,
	482, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 483, 276, 0, 0, 0, 0, 1720, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 339, 348, 347, 328,
	329, 331, 333, 338, 345, 351, 0, 0, 0, 0,
	0, 255, 311, 262, 254, 508, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 439, 278, 0, 0, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 447, 459, 0, 0, 0,
	245, 0, 457, 413, 528, 225, 274, 444, 419, 455,
	427, 277, 0, 0, 456, 360, 513, 437, 525, 551,
	552, 253, 393, 537, 497, 545, 569, 218, 250, 407,
	490, 531, 479, 385, 509, 510, 319, 478, 286, 196,
	357, 557, 216, 465, 359, 234, 223, 515, 534, 280,
	442, 564, 205, 492, 523, 231, 469, 0, 0, 571,
	239, 489, 207, 520, 488, 381, 316, 317, 206, 0,
	443, 258, 284, 248, 402, 517, 518, 246, 572, 220,
	544, 212, 0, 543, 395, 512, 521, 382, 371, 211,
	519, 380, 370, 324, 343, 344, 270, 297, 434, 363,
	435, 296, 298, 391, 390, 392, 200, 532, 0, 201,
	0, 484, 533, 573, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 433, 429, 438,
	0, 507, 526, 538, 549, 555, 556, 558, 559, 560,
	561, 562, 565, 563, 394, 301, 480, 323, 361, 0,
	0, 412, 458, 232, 530, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 592, 372, 471, 527, 325, 337,
	340, 330, 349, 0, 350, 326, 327, 332, 334, 335,
	336, 341, 342, 346, 352, 241, 203, 378, 386, 506,
	302, 208, 209, 210, 499, 500, 501, 502, 541, 542,
	546, 448, 449, 450, 451, 283, 536, 299, 454, 453,
	321, 322, 367, 436, 0, 192, 213, 356, 0, 440,
	279, 570, 540, 535, 199, 215, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 396, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 426, 428, 430, 441, 446,
	460, 461, 462, 463, 464, 467, 468, 473, 474, 475,
	476, 477, 485, 486, 491, 514, 516, 529, 547, 553,
	466, 291, 292, 431, 432, 304, 305, 567, 568, 290,
	524, 554, 522, 566, 548, 425, 366, 0, 0, 369,
	271, 295, 310, 0, 539, 487, 219, 452, 281, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 445, 233, 470, 494,
	495, 496, 498, 383, 256, 420, 384, 0, 364, 504,
	505, 306, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 472, 244, 365, 362,
	511, 272, 263, 259, 242, 307, 373, 415, 493, 409,
	0, 358, 0, 0, 482, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 483, 276, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	339, 348, 347, 328, 329, 331, 333, 338, 345, 351,
	0, 0, 0, 0, 0, 255, 311, 262, 254, 508,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 389, 247, 0, 439, 278,
	0, 0, 0, 550, 0, 0, 0, 3324, 0, 0,
	0, 353, 0, 320, 193, 217, 0, 0, 399, 447,
	459, 0, 0, 0, 245, 0, 457, 413, 528, 225,
	274, 444, 419, 455, 427, 277, 0, 0, 456, 360,
	513, 437, 525, 551, 552, 253, 393, 537, 497, 545,
	569, 218, 250, 407, 490, 531, 479, 385, 509, 510,
	319, 478, 286, 196, 357, 557, 216, 465, 359, 234,
	223, 515, 534, 280, 442, 564, 205, 492, 523, 231,
	469, 0, 0, 571, 239, 489, 207, 520, 488, 381,
	316, 317, 206, 0, 443, 258, 284, 248, 402, 517,
	518, 246, 572, 220, 544, 212, 0, 543, 395, 512,
	521, 382, 371, 211, 519, 380, 370, 324, 343, 344,
	270, 297, 434, 363, 435, 296, 298, 391, 390, 392,
	200, 532, 0, 201, 0, 484, 533, 573, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 433, 429, 438, 0, 507, 526, 538, 549, 555,
	556, 558, 559, 560, 561, 562, 565, 563, 394, 301,
	480, 323, 361, 0, 0, 412, 458, 232, 530, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 592, 372,
	471, 527, 325, 337, 340, 330, 349, 0, 350, 326,
	327, 332, 334, 335, 336, 341, 342, 346, 352, 241,
	203, 378, 386, 506, 302, 208, 209, 210, 499, 500,
	501, 502, 541, 542, 546, 448, 449, 450, 451, 283,
	536, 299, 454, 453, 321, 322, 367, 436, 0, 192,
	213, 356, 0, 440, 279, 570, 540, 535, 199, 215,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 426,
	428, 430, 441, 446, 460, 461, 462, 463, 464, 467,
	468, 473, 474, 475, 476, 477, 485, 486, 491, 514,
	516, 529, 547, 553, 466, 291, 292, 431, 432, 304,
	305, 567, 568, 290, 524, 554, 522, 566, 548, 425,
	366, 0, 0, 369, 271, 295, 310, 0, 539, 487,
	219, 452, 281, 243, 0, 0, 204, 238, 222, 249,
	264, 267, 314, 379, 387, 416, 421, 287, 261, 236,
	445, 233, 470, 494, 495, 496, 498, 383, 256, 420,
	384, 0, 364, 504, 505, 306, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 354, 257, 0, 0, 417, 0, 198, 0,
	472, 244, 365, 362, 511, 272, 263, 259, 242, 307,
	373, 415, 493, 409, 0, 358, 0, 0, 482, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 240, 315, 197, 400,
	483, 276, 0, 91, 0, 0, 0, 639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	237, 0, 0, 0, 339, 348, 347, 328, 329, 331,
	333, 338, 345, 351, 0, 0, 0, 0, 0, 255,
	311, 262, 254, 508, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 389,
	247, 0, 439, 278, 0, 0, 0, 550, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 320, 193, 217,
	0, 0, 399, 447, 459, 0, 0, 0, 245, 0,
	457, 413, 528, 225, 274, 444, 419, 455, 427, 277,
	0, 0, 456, 360, 513, 437, 525, 551, 552, 253,
	393, 537, 497, 545, 569, 218, 250, 407, 490, 531,
	479, 385, 509, 510, 319, 478, 286, 196, 357, 557,
	216, 465, 359, 234, 223, 515, 534, 280, 442, 564,
	205, 492, 523, 231, 469, 0, 0, 571, 239, 489,
	207, 520, 488, 381, 316, 317, 206, 0, 443, 258,
	284, 248, 402, 517, 518, 246, 572, 220, 544, 212,
	0, 543, 395, 512, 521, 382, 371, 211, 519, 380,
	370, 324, 343, 344, 270, 297, 434, 363, 435, 296,
	298, 391, 390, 392, 200, 532, 0, 201, 0, 484,
	533, 573, 226, 227, 229, 0, 269, 273, 282, 285,
	293, 294, 303, 355, 406, 433, 429, 438, 0, 507,
	526, 538, 549, 555, 556, 558, 559, 560, 561, 562,
	565, 563, 394, 301, 480, 323, 361, 0, 0, 412,
	458, 232, 530, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 592, 372, 471, 527, 325, 337, 340, 330,
	349, 0, 350, 326, 327, 332, 334, 335, 336, 341,
	342, 346, 352, 241, 203, 378, 386, 506, 302, 208,
	209, 210, 499, 500, 501, 502, 541, 542, 546, 448,
	449, 450, 451, 283, 536, 299, 454, 453, 321, 322,
	367, 436, 0, 192, 213, 356, 0, 440, 279, 570,
	540, 535, 199, 215, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 251, 266, 268, 275, 289, 300,
	308, 309, 312, 318, 368, 374, 375, 376, 377, 396,
	397, 398, 401, 404, 405, 408, 410, 411, 414, 418,
	422, 423, 424, 426, 428, 430, 441, 446, 460, 461,
	462, 463, 464, 467, 468, 473, 474, 475, 476, 477,
	485, 486, 491, 514, 516, 529, 547, 553, 466, 291,
	292, 431, 432, 304, 305, 567, 568, 290, 524, 554,
	522, 566, 548, 425, 366, 0, 0, 369, 271, 295,
	310, 0, 539, 487, 219, 452, 281, 243, 0, 0,
	204, 238, 222, 249, 264, 267, 314, 379, 387, 416,
	421, 287, 261, 236, 445, 233, 470, 494, 495, 496,
	498, 383, 256, 420, 384, 0, 364, 504, 505, 306,
	503, 0, 0, 0, 0, 2093, 0, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 472, 244, 365, 362, 511, 272,
	263, 259, 242, 307, 373, 415, 493, 409, 0, 358,
	0, 0, 482, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 483, 276, 0, 0, 0, 0,
	0, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 339, 348,
	347, 328, 329, 331, 333, 338, 345, 351, 0, 0,
	0, 0, 0, 255, 311, 262, 254, 508, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 439, 278, 0, 0,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 320, 193, 217, 0, 0, 399, 447, 459, 0,
	0, 0, 245, 0, 457, 413, 528, 225, 274, 444,
	419, 455, 427, 277, 0, 0, 456, 360, 513, 437,
	525, 551, 552, 253, 393, 537, 497, 545, 569, 218,
	250, 407, 490, 531, 479, 385, 509, 510, 319, 478,
	286, 196, 357, 557, 216, 465, 359, 234, 223, 515,
	534, 280, 442, 564, 205, 492, 523, 231, 469, 0,
	0, 571, 239, 489, 207, 520, 488, 381, 316, 317,
	206, 0, 443, 258, 284, 248, 402, 517, 518, 246,
	572, 220, 544, 212, 0, 543, 395, 512, 521, 382,
	371, 211, 519, 380, 370, 324, 343, 344, 270, 297,
	434, 363, 435, 296, 298, 391, 390, 392, 200, 532,
	0, 201, 0, 484, 533, 573, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 433,
	429, 438, 0, 507, 526, 538, 549, 555, 556, 558,
	559, 560, 561, 562, 565, 563, 394, 301, 480, 323,
	361, 0, 0, 412, 458, 232, 530, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 592, 372, 471, 527,
	325, 337, 340, 330, 349, 0, 350, 326, 327, 332,
	334, 335, 336, 341, 342, 346, 352, 241, 203, 378,
	386, 506, 302, 208, 209, 210, 499, 500, 501, 502,
	541, 542, 546, 448, 449, 450, 451, 283, 536, 299,
	454, 453, 321, 322, 367, 436, 0, 192, 213, 356,
	0, 440, 279, 570, 540, 535, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 426, 428, 430,
	441, 446, 460, 461, 462, 463, 464, 467, 468, 473,
	474, 475, 476, 477, 485, 486, 491, 514, 516, 529,
	547, 553, 466, 291, 292, 431, 432, 304, 305, 567,
	568, 290, 524, 554, 522, 566, 548, 425, 366, 0,
	0, 369, 271, 295, 310, 0, 539, 487, 219, 452,
	281, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 445, 233,
	470, 494, 495, 496, 498, 383, 256, 420, 384, 0,
	364, 504, 505, 306, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	354, 257, 0, 0, 417, 0, 198, 0, 472, 244,
	365, 362, 511, 272, 263, 259, 242, 307, 373, 415,
	493, 409, 0, 358, 0, 0, 482, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 240, 315, 197, 400, 483, 276,
	0, 0, 0, 0, 1543, 639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 339, 348, 347, 328, 329, 331, 333, 338,
	345, 351, 0, 0, 0, 0, 0, 255, 311, 262,
	254, 508, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 389, 247, 0,
	439, 278, 0, 0, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 320, 193, 217, 0, 0,
	399, 447, 459, 0, 0, 0, 245, 0, 457, 413,
	528, 225, 274, 444, 419, 455, 427, 277, 0, 0,
	456, 360, 513, 437, 525, 551, 552, 253, 393, 537,
	497, 545, 569, 218, 250, 407, 490, 531, 479, 385,
	509, 510, 319, 478, 286, 196, 357, 557, 216, 465,
	359, 234, 223, 515, 534, 280, 442, 564, 205, 492,
	523, 231, 469, 0, 0, 571, 239, 489, 207, 520,
	488, 381, 316, 317, 206, 0, 443, 258, 284, 248,
	402, 517, 518, 246, 572, 220, 544, 212, 0, 543,
	395, 512, 521, 382, 371, 211, 519, 380, 370, 324,
	343, 344, 270, 297, 434, 363, 435, 296, 298, 391,
	390, 392, 200, 532, 0, 201, 0, 484, 533, 573,
	226, 227, 229, 0, 269, 273, 282, 285, 293, 294,
	303, 355, 406, 433, 429, 438, 0, 507, 526, 538,
	549, 555, 556, 558, 559, 560, 561, 562, 565, 563,
	394, 301, 480, 323, 361, 0, 0, 412, 458, 232,
	530, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	592, 372, 471, 527, 325, 337, 340, 330, 349, 0,
	350, 326, 327, 332, 334, 335, 336, 341, 342, 346,
	352, 241, 203, 378, 386, 506, 302, 208, 209, 210,
	499, 500, 501, 502, 541, 542, 546, 448, 449, 450,
	451, 283, 536, 299, 454, 453, 321, 322, 367, 436,
	0, 192, 213, 356, 0, 440, 279, 570, 540, 535,
	199, 215, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 289, 300, 308, 309,
	312, 318, 368, 374, 375, 376, 377, 396, 397, 398,
	401, 404, 405, 408, 410, 411, 414, 418, 422, 423,
	424, 426, 428, 430, 441, 446, 460, 461, 462, 463,
	464, 467, 468, 473, 474, 475, 476, 477, 485, 486,
	491, 514, 516, 529, 547, 553, 466, 291, 292, 431,
	432, 304, 305, 567, 568, 290, 524, 554, 522, 566,
	548, 425, 366, 0, 0, 369, 271, 295, 310, 0,
	539, 487, 219, 452, 281, 243, 0, 0, 204, 238,
	222, 249, 264, 267, 314, 379, 387, 416, 421, 287,
	261, 236, 445, 233, 470, 494, 495, 496, 498, 383,
	256, 420, 384, 0, 364, 504, 505, 306, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 472, 244, 365, 362, 511, 272, 263, 259,
	242, 307, 373, 415, 493, 409, 0, 358, 0, 0,
	482, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 483, 276, 0, 0, 0, 0, 0, 639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 339, 348, 347, 328,
	329, 331, 333, 338, 345, 351, 0, 0, 0, 0,
	0, 255, 311, 262, 254, 508, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 439, 278, 0, 0, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 447, 459, 0, 0, 0,
	245, 0, 457, 413, 528, 225, 274, 444, 419, 455,
	427, 277, 0, 0, 456, 360, 513, 437, 525, 551,
	552, 253, 393, 537, 497, 545, 569, 218, 250, 407,
	490, 531, 479, 385, 509, 510, 319, 478, 286, 196,
	357, 557, 216, 465, 359, 234, 223, 515, 534, 280,
	442, 564, 205, 492, 523, 231, 469, 0, 0, 571,
	239, 489, 207, 520, 488, 381, 316, 317, 206, 0,
	443, 258, 284, 248, 402, 517, 518, 246, 572, 220,
	544, 212, 0, 543, 395, 512, 521, 382, 371, 211,
	519, 380, 370, 324, 343, 344, 270, 297, 434, 363,
	435, 296, 298, 391, 390, 392, 200, 532, 0, 201,
	0, 484, 533, 573, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 433, 429, 438,
	0, 507, 526, 538, 549, 555, 556, 558, 559, 560,
	561, 562, 565, 563, 394, 301, 480, 323, 361, 0,
	0, 412, 458, 232, 530, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 592, 372, 471, 527, 325, 337,
	340, 330, 349, 0, 350, 326, 327, 332, 334, 335,
	336, 341, 342, 346, 352, 241, 203, 378, 386, 506,
	302, 208, 209, 210, 499, 500, 501, 502, 541, 542,
	546, 448, 449, 450, 451, 283, 536, 299, 454, 453,
	321, 322, 367, 436, 0, 192, 213, 356, 0, 440,
	279, 570, 540, 535, 199, 215, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 396, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 426, 428, 430, 441, 446,
	460, 461, 462, 463, 464, 467, 468, 473, 474, 475,
	476, 477, 485, 486, 491, 514, 516, 529, 547, 553,
	466, 291, 292, 431, 432, 304, 305, 567, 568, 290,
	524, 554, 522, 566, 548, 425, 366, 0, 0, 369,
	271, 295, 310, 0, 539, 487, 219, 452, 281, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 445, 233, 470, 494,
	495, 496, 498, 383, 256, 420, 384, 0, 364, 504,
	505, 306, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 472, 244, 365, 362,
	511, 272, 263, 259, 242, 307, 373, 415, 493, 409,
	0, 358, 0, 0, 482, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 483, 276, 0, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	339, 348, 347, 328, 329, 331, 333, 338, 345, 351,
	0, 0, 0, 0, 0, 255, 311, 262, 254, 508,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 389, 247, 0, 439, 278,
	0, 0, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 320, 193, 217, 0, 0, 399, 447,
	459, 0, 0, 0, 245, 0, 457, 413, 528, 225,
	274, 444, 419, 455, 427, 277, 0, 0, 456, 360,
	513, 437, 525, 551, 552, 253, 393, 537, 497, 545,
	569, 218, 250, 407, 490, 531, 479, 385, 509, 510,
	319, 478, 286, 196, 357, 557, 216, 465, 359, 234,
	223, 515, 534, 280, 442, 564, 205, 492, 523, 231,
	469, 0, 0, 571, 239, 489, 207, 520, 488, 381,
	316, 317, 206, 0, 443, 258, 284, 248, 402, 517,
	518, 246, 572, 220, 544, 212, 0, 543, 395, 512,
	521, 382, 371, 211, 519, 380, 370, 324, 343, 344,
	270, 297, 434, 363, 435, 296, 298, 391, 390, 392,
	200, 532, 0, 201, 0, 484, 533, 573, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 433, 429, 438, 0, 507, 526, 538, 549, 555,
	556, 558, 559, 560, 561, 562, 565, 563, 394, 301,
	480, 323, 361, 0, 0, 412, 458, 232, 530, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 592, 372,
	471, 527, 325, 337, 340, 330, 349, 0, 350, 326,
	327, 332, 334, 335, 336, 341, 342, 346, 352, 241,
	203, 378, 386, 506, 302, 208, 209, 210, 499, 500,
	501, 502, 541, 542, 546, 448, 449, 450, 451, 283,
	536, 299, 454, 453, 321, 322, 367, 436, 0, 192,
	213, 356, 1830, 440, 279, 570, 540, 535, 199, 215,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 426,
	428, 430, 441, 446, 460, 461, 462, 463, 464, 467,
	468, 473, 474, 475, 476, 477, 485, 486, 491, 514,
	516, 529, 547, 553, 466, 291, 292, 431, 432, 304,
	305, 567, 568, 290, 524, 554, 522, 566, 548, 425,
	366, 0, 0, 369, 271, 295, 310, 0, 539, 487,
	219, 452, 281, 243, 0, 0, 204, 238, 222, 249,
	264, 267, 314, 379, 387, 416, 421, 287, 261, 236,
	445, 233, 470, 494, 495, 496, 498, 383, 256, 420,
	384, 0, 364, 504, 505, 306, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 354, 257, 0, 0, 417, 0, 198, 0,
	472, 244, 365, 362, 511, 272, 263, 259, 242, 307,
	373, 415, 493, 409, 0, 358, 0, 0, 482, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 240, 315, 197, 400,
	483, 276, 0, 0, 0, 0, 1821, 639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	237, 0, 0, 0, 339, 348, 347, 328, 329, 331,
	333, 338, 345, 351, 0, 0, 0, 0, 0, 255,
	311, 262, 254, 508, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 389,
	247, 0, 439, 278, 0, 0, 0, 550, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 320, 193, 217,
	0, 0, 399, 447, 459, 0, 0, 0, 245, 0,
	457, 413, 528, 225, 274, 444, 419, 455, 427, 277,
	0, 0, 456, 360, 513, 437, 525, 551, 552, 253,
	393, 537, 497, 545, 569, 218, 250, 407, 490, 531,
	479, 385, 509, 510, 319, 478, 286, 196, 357, 557,
	216, 465, 359, 234, 223, 515, 534, 280, 442, 564,
	205, 492, 523, 231, 469, 0, 0, 571, 239, 489,
	207, 520, 488, 381, 316, 317, 206, 0, 443, 258,
	284, 248, 402, 517, 518, 246, 572, 220, 544, 212,
	0, 543, 395, 512, 521, 382, 371, 211, 519, 380,
	370, 324, 343, 344, 270, 297, 434, 363, 435, 296,
	298, 391, 390, 392, 200, 532, 0, 201, 0, 484,
	533, 573, 226, 227, 229, 0, 269, 273, 282, 285,
	293, 294, 303, 355, 406, 433, 429, 438, 0, 507,
	526, 538, 549, 555, 556, 558, 559, 560, 561, 562,
	565, 563, 394, 301, 480, 323, 361, 0, 0, 412,
	458, 232, 530, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 592, 372, 471, 527, 325, 337, 340, 330,
	349, 0, 350, 326, 327, 332, 334, 335, 336, 341,
	342, 346, 352, 241, 203, 378, 386, 506, 302, 208,
	209, 210, 499, 500, 501, 502, 541, 542, 546, 448,
	449, 450, 451, 283, 536, 299, 454, 453, 321, 322,
	367, 436, 0, 192, 213, 356, 0, 440, 279, 570,
	540, 535, 199, 215, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 251, 266, 268, 275, 289, 300,
	308, 309, 312, 318, 368, 374, 375, 376, 377, 396,
	397, 398, 401, 404, 405, 408, 410, 411, 414, 418,
	422, 423, 424, 426, 428, 430, 441, 446, 460, 461,
	462, 463, 464, 467, 468, 473, 474, 475, 476, 477,
	485, 486, 491, 514, 516, 529, 547, 553, 466, 291,
	292, 431, 432, 304, 305, 567, 568, 290, 524, 554,
	522, 566, 548, 425, 366, 0, 0, 369, 271, 295,
	310, 0, 539, 487, 219, 452, 281, 243, 0, 0,
	204, 238, 222, 249, 264, 267, 314, 379, 387, 416,
	421, 287, 261, 236, 445, 233, 470, 494, 495, 496,
	498, 383, 256, 420, 384, 0, 364, 504, 505, 306,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 403, 0, 1687, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 472, 244, 365, 362, 511, 272,
	263, 259, 242, 307, 373, 415, 493, 409, 0, 358,
	0, 0, 482, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 483, 276, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 339, 348,
	347, 328, 329, 331, 333, 338, 345, 351, 0, 0,
	0, 0, 0, 255, 311, 262, 254, 508, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 439, 278, 0, 0,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 320, 193, 217, 0, 0, 399, 447, 459, 0,
	0, 0, 245, 0, 457, 413, 528, 225, 274, 444,
	419, 455, 427, 277, 0, 0, 456, 360, 513, 437,
	525, 551, 552, 253, 393, 537, 497, 545, 569, 218,
	250, 407, 490, 531, 479, 385, 509, 510, 319, 478,
	286, 196, 357, 557, 216, 465, 359, 234, 223, 515,
	534, 280, 442, 564, 205, 492, 523, 231, 469, 0,
	0, 571, 239, 489, 207, 520, 488, 381, 316, 317,
	206, 0, 443, 258, 284, 248, 402, 517, 518, 246,
	572, 220, 544, 212, 0, 543, 395, 512, 521, 382,
	371, 211, 519, 380, 370, 324, 343, 344, 270, 297,
	434, 363, 435, 296, 298, 391, 390, 392, 200, 532,
	0, 201, 0, 484, 533, 573, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 433,
	429, 438, 0, 507, 526, 538, 549, 555, 556, 558,
	559, 560, 561, 562, 565, 563, 394, 301, 480, 323,
	361, 0, 0, 412, 458, 232, 530, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 592, 372, 471, 527,
	325, 337, 340, 330, 349, 0, 350, 326, 327, 332,
	334, 335, 336, 341, 342, 346, 352, 241, 203, 378,
	386, 506, 302, 208, 209, 210, 499, 500, 501, 502,
	541, 542, 546, 448, 449, 450, 451, 283, 536, 299,
	454, 453, 321, 322, 367, 436, 0, 192, 213, 356,
	0, 440, 279, 570, 540, 535, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 426, 428, 430,
	441, 446, 460, 461, 462, 463, 464, 467, 468, 473,
	474, 475, 476, 477, 485, 486, 491, 514, 516, 529,
	547, 553, 466, 291, 292, 431, 432, 304, 305, 567,
	568, 290, 524, 554, 522, 566, 548, 425, 366, 0,
	0, 369, 271, 295, 310, 0, 539, 487, 219, 452,
	281, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 445, 233,
	470, 494, 495, 496, 498, 383, 256, 420, 384, 0,
	364, 504, 505, 306, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 0, 1685, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	354, 257, 0, 0, 417, 0, 198, 0, 472, 244,
	365, 362, 511, 272, 263, 259, 242, 307, 373, 415,
	493, 409, 0, 358, 0, 0, 482, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 240, 315, 197, 400, 483, 276,
	0, 0, 0, 0, 0, 639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 339, 348, 347, 328, 329, 331, 333, 338,
	345, 351, 0, 0, 0, 0, 0, 255, 311, 262,
	254, 508, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 389, 247, 0,
	439, 278, 0, 0, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 320, 193, 217, 0, 0,
	399, 447, 459, 0, 0, 0, 245, 0, 457, 413,
	528, 225, 274, 444, 419, 455, 427, 277, 0, 0,
	456, 360, 513, 437, 525, 551, 552, 253, 393, 537,
	497, 545, 569, 218, 250, 407, 490, 531, 479, 385,
	509, 510, 319, 478, 286, 196, 357, 557, 216, 465,
	359, 234, 223, 515, 534, 280, 442, 564, 205, 492,
	523, 231, 469, 0, 0, 571, 239, 489, 207, 520,
	488, 381, 316, 317, 206, 0, 443, 258, 284, 248,
	402, 517, 518, 246, 572, 220, 544, 212, 0, 543,
	395, 512, 521, 382, 371, 211, 519, 380, 370, 324,
	343, 344, 270, 297, 434, 363, 435, 296, 298, 391,
	390, 392, 200, 532, 0, 201, 0, 484, 533, 573,
	226, 227, 229, 0, 269, 273, 282, 285, 293, 294,
	303, 355, 406, 433, 429, 438, 0, 507, 526, 538,
	549, 555, 556, 558, 559, 560, 561, 562, 565, 563,
	394, 301, 480, 323, 361, 0, 0, 412, 458, 232,
	530, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	592, 372, 471, 527, 325, 337, 340, 330, 349, 0,
	350, 326, 327, 332, 334, 335, 336, 341, 342, 346,
	352, 241, 203, 378, 386, 506, 302, 208, 209, 210,
	499, 500, 501, 502, 541, 542, 546, 448, 449, 450,
	451, 283, 536, 299, 454, 453, 321, 322, 367, 436,
	0, 192, 213, 356, 0, 440, 279, 570, 540, 535,
	199, 215, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 289, 300, 308, 309,
	312, 318, 368, 374, 375, 376, 377, 396, 397, 398,
	401, 404, 405, 408, 410, 411, 414, 418, 422, 423,
	424, 426, 428, 430, 441, 446, 460, 461, 462, 463,
	464, 467, 468, 473, 474, 475, 476, 477, 485, 486,
	491, 514, 516, 529, 547, 553, 466, 291, 292, 431,
	432, 304, 305, 567, 568, 290, 524, 554, 522, 566,
	548, 425, 366, 0, 0, 369, 271, 295, 310, 0,
	539, 487, 219, 452, 281, 243, 0, 0, 204, 238,
	222, 249, 264, 267, 314, 379, 387, 416, 421, 287,
	261, 236, 445, 233, 470, 494, 495, 496, 498, 383,
	256, 420, 384, 0, 364, 504, 505, 306, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 1683, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 472, 244, 365, 362, 511, 272, 263, 259,
	242, 307, 373, 415, 493, 409, 0, 358, 0, 0,
	482, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 483, 276, 0, 0, 0, 0, 0, 639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 339, 348, 347, 328,
	329, 331, 333, 338, 345, 351, 0, 0, 0, 0,
	0, 255, 311, 262, 254, 508, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 439, 278, 0, 0, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 447, 459, 0, 0, 0,
	245, 0, 457, 413, 528, 225, 274, 444, 419, 455,
	427, 277, 0, 0, 456, 360, 513, 437, 525, 551,
	552, 253, 393, 537, 497, 545, 569, 218, 250, 407,
	490, 531, 479, 385, 509, 510, 319, 478, 286, 196,
	357, 557, 216, 465, 359, 234, 223, 515, 534, 280,
	442, 564, 205, 492, 523, 231, 469, 0, 0, 571,
	239, 489, 207, 520, 488, 381, 316, 317, 206, 0,
	443, 258, 284, 248, 402, 517, 518, 246, 572, 220,
	544, 212, 0, 543, 395, 512, 521, 382, 371, 211,
	519, 380, 370, 324, 343, 344, 270, 297, 434, 363,
	435, 296, 298, 391, 390, 392, 200, 532, 0, 201,
	0, 484, 533, 573, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 433, 429, 438,
	0, 507, 526, 538, 549, 555, 556, 558, 559, 560,
	561, 562, 565, 563, 394, 301, 480, 323, 361, 0,
	0, 412, 458, 232, 530, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 592, 372, 471, 527, 325, 337,
	340, 330, 349, 0, 350, 326, 327, 332, 334, 335,
	336, 341, 342, 346, 352, 241, 203, 378, 386, 506,
	302, 208, 209, 210, 499, 500, 501, 502, 541, 542,
	546, 448, 449, 450, 451, 283, 536, 299, 454, 453,
	321, 322, 367, 436, 0, 192, 213, 356, 0, 440,
	279, 570, 540, 535, 199, 215, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 396, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 426, 428, 430, 441, 446,
	460, 461, 462, 463, 464, 467, 468, 473, 474, 475,
	476, 477, 485, 486, 491, 514, 516, 529, 547, 553,
	466, 291, 292, 431, 432, 304, 305, 567, 568, 290,
	524, 554, 522, 566, 548, 425, 366, 0, 0, 369,
	271, 295, 310, 0, 539, 487, 219, 452, 281, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 445, 233, 470, 494,
	495, 496, 498, 383, 256, 420, 384, 0, 364, 504,
	505, 306, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 1681, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 472, 244, 365, 362,
	511, 272, 263, 259, 242, 307, 373, 415, 493, 409,
	0, 358, 0, 0, 482, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 483, 276, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	339, 348, 347, 328, 329, 331, 333, 338, 345, 351,
	0, 0, 0, 0, 0, 255, 311, 262, 254, 508,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 389, 247, 0, 439, 278,
	0, 0, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 320, 193, 217, 0, 0, 399, 447,
	459, 0, 0, 0, 245, 0, 457, 413, 528, 225,
	274, 444, 419, 455, 427, 277, 0, 0, 456, 360,
	513, 437, 525, 551, 552, 253, 393, 537, 497, 545,
	569, 218, 250, 407, 490, 531, 479, 385, 509, 510,
	319, 478, 286, 196, 357, 557, 216, 465, 359, 234,
	223, 515, 534, 280, 442, 564, 205, 492, 523, 231,
	469, 0, 0, 571, 239, 489, 207, 520, 488, 381,
	316, 317, 206, 0, 443, 258, 284, 248, 402, 517,
	518, 246, 572, 220, 544, 212, 0, 543, 395, 512,
	521, 382, 371, 211, 519, 380, 370, 324, 343, 344,
	270, 297, 434, 363, 435, 296, 298, 391, 390, 392,
	200, 532, 0, 201, 0, 484, 533, 573, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 433, 429, 438, 0, 507, 526, 538, 549, 555,
	556, 558, 559, 560, 561, 562, 565, 563, 394, 301,
	480, 323, 361, 0, 0, 412, 458, 232, 530, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 592, 372,
	471, 527, 325, 337, 340, 330, 349, 0, 350, 326,
	327, 332, 334, 335, 336, 341, 342, 346, 352, 241,
	203, 378, 386, 506, 302, 208, 209, 210, 499, 500,
	501, 502, 541, 542, 546, 448, 449, 450, 451, 283,
	536, 299, 454, 453, 321, 322, 367, 436, 0, 192,
	213, 356, 0, 440, 279, 570, 540, 535, 199, 215,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 426,
	428, 430, 441, 446, 460, 461, 462, 463, 464, 467,
	468, 473, 474, 475, 476, 477, 485, 486, 491, 514,
	516, 529, 547, 553, 466, 291, 292, 431, 432, 304,
	305, 567, 568, 290, 524, 554, 522, 566, 548, 425,
	366, 0, 0, 369, 271, 295, 310, 0, 539, 487,
	219, 452, 281, 243, 0, 0, 204, 238, 222, 249,
	264, 267, 314, 379, 387, 416, 421, 287, 261, 236,
	445, 233, 470, 494, 495, 496, 498, 383, 256, 420,
	384, 0, 364, 504, 505, 306, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 403, 0,
	1679, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 354, 257, 0, 0, 417, 0, 198, 0,
	472, 244, 365, 362, 511, 272, 263, 259, 242, 307,
	373, 415, 493, 409, 0, 358, 0, 0, 482, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 240, 315, 197, 400,
	483, 276, 0, 0, 0, 0, 0, 639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	237, 0, 0, 0, 339, 348, 347, 328, 329, 331,
	333, 338, 345, 351, 0, 0, 0, 0, 0, 255,
	311, 262, 254, 508, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 389,
	247, 0, 439, 278, 0, 0, 0, 550, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 320, 193, 217,
	0, 0, 399, 447, 459, 0, 0, 0, 245, 0,
	457, 413, 528, 225, 274, 444, 419, 455, 427, 277,
	0, 0, 456, 360, 513, 437, 525, 551, 552, 253,
	393, 537, 497, 545, 569, 218, 250, 407, 490, 531,
	479, 385, 509, 510, 319, 478, 286, 196, 357, 557,
	216, 465, 359, 234, 223, 515, 534, 280, 442, 564,
	205, 492, 523, 231, 469, 0, 0, 571, 239, 489,
	207, 520, 488, 381, 316, 317, 206, 0, 443, 258,
	284, 248, 402, 517, 518, 246, 572, 220, 544, 212,
	0, 543, 395, 512, 521, 382, 371, 211, 519, 380,
	370, 324, 343, 344, 270, 297, 434, 363, 435, 296,
	298, 391, 390, 392, 200, 532, 0, 201, 0, 484,
	533, 573, 226, 227, 229, 0, 269, 273, 282, 285,
	293, 294, 303, 355, 406, 433, 429, 438, 0, 507,
	526, 538, 549, 555, 556, 558, 559, 560, 561, 562,
	565, 563, 394, 301, 480, 323, 361, 0, 0, 412,
	458, 232, 530, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 592, 372, 471, 527, 325, 337, 340, 330,
	349, 0, 350, 326, 327, 332, 334, 335, 336, 341,
	342, 346, 352, 241, 203, 378, 386, 506, 302, 208,
	209, 210, 499, 500, 501, 502, 541, 542, 546, 448,
	449, 450, 451, 283, 536, 299, 454, 453, 321, 322,
	367, 436, 0, 192, 213, 356, 0, 440, 279, 570,
	540, 535, 199, 215, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 251, 266, 268, 275, 289, 300,
	308, 309, 312, 318, 368, 374, 375, 376, 377, 396,
	397, 398, 401, 404, 405, 408, 410, 411, 414, 418,
	422, 423, 424, 426, 428, 430, 441, 446, 460, 461,
	462, 463, 464, 467, 468, 473, 474, 475, 476, 477,
	485, 486, 491, 514, 516, 529, 547, 553, 466, 291,
	292, 431, 432, 304, 305, 567, 568, 290, 524, 554,
	522, 566, 548, 425, 366, 0, 0, 369, 271, 295,
	310, 0, 539, 487, 219, 452, 281, 243, 0, 0,
	204, 238, 222, 249, 264, 267, 314, 379, 387, 416,
	421, 287, 261, 236, 445, 233, 470, 494, 495, 496,
	498, 383, 256, 420, 384, 0, 364, 504, 505, 306,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 403, 0, 1675, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 472, 244, 365, 362, 511, 272,
	263, 259, 242, 307, 373, 415, 493, 409, 0, 358,
	0, 0, 482, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 483, 276, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 339, 348,
	347, 328, 329, 331, 333, 338, 345, 351, 0, 0,
	0, 0, 0, 255, 311, 262, 254, 508, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 439, 278, 0, 0,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 320, 193, 217, 0, 0, 399, 447, 459, 0,
	0, 0, 245, 0, 457, 413, 528, 225, 274, 444,
	419, 455, 427, 277, 0, 0, 456, 360, 513, 437,
	525, 551, 552, 253, 393, 537, 497, 545, 569, 218,
	250, 407, 490, 531, 479, 385, 509, 510, 319, 478,
	286, 196, 357, 557, 216, 465, 359, 234, 223, 515,
	534, 280, 442, 564, 205, 492, 523, 231, 469, 0,
	0, 571, 239, 489, 207, 520, 488, 381, 316, 317,
	206, 0, 443, 258, 284, 248, 402, 517, 518, 246,
	572, 220, 544, 212, 0, 543, 395, 512, 521, 382,
	371, 211, 519, 380, 370, 324, 343, 344, 270, 297,
	434, 363, 435, 296, 298, 391, 390, 392, 200, 532,
	0, 201, 0, 484, 533, 573, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 433,
	429, 438, 0, 507, 526, 538, 549, 555, 556, 558,
	559, 560, 561, 562, 565, 563, 394, 301, 480, 323,
	361, 0, 0, 412, 458, 232, 530, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 592, 372, 471, 527,
	325, 337, 340, 330, 349, 0, 350, 326, 327, 332,
	334, 335, 336, 341, 342, 346, 352, 241, 203, 378,
	386, 506, 302, 208, 209, 210, 499, 500, 501, 502,
	541, 542, 546, 448, 449, 450, 451, 283, 536, 299,
	454, 453, 321, 322, 367, 436, 0, 192, 213, 356,
	0, 440, 279, 570, 540, 535, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 426, 428, 430,
	441, 446, 460, 461, 462, 463, 464, 467, 468, 473,
	474, 475, 476, 477, 485, 486, 491, 514, 516, 529,
	547, 553, 466, 291, 292, 431, 432, 304, 305, 567,
	568, 290, 524, 554, 522, 566, 548, 425, 366, 0,
	0, 369, 271, 295, 310, 0, 539, 487, 219, 452,
	281, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 445, 233,
	470, 494, 495, 496, 498, 383, 256, 420, 384, 0,
	364, 504, 505, 306, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 0, 1673, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	354, 257, 0, 0, 417, 0, 198, 0, 472, 244,
	365, 362, 511, 272, 263, 259, 242, 307, 373, 415,
	493, 409, 0, 358, 0, 0, 482, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 240, 315, 197, 400, 483, 276,
	0, 0, 0, 0, 0, 639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 339, 348, 347, 328, 329, 331, 333, 338,
	345, 351, 0, 0, 0, 0, 0, 255, 311, 262,
	254, 508, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 389, 247, 0,
	439, 278, 0, 0, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 320, 193, 217, 0, 0,
	399, 447, 459, 0, 0, 0, 245, 0, 457, 413,
	528, 225, 274, 444, 419, 455, 427, 277, 0, 0,
	456, 360, 513, 437, 525, 551, 552, 253, 393, 537,
	497, 545, 569, 218, 250, 407, 490, 531, 479, 385,
	509, 510, 319, 478, 286, 196, 357, 557, 216, 465,
	359, 234, 223, 515, 534, 280, 442, 564, 205, 492,
	523, 231, 469, 0, 0, 571, 239, 489, 207, 520,
	488, 381, 316, 317, 206, 0, 443, 258, 284, 248,
	402, 517, 518, 246, 572, 220, 544, 212, 0, 543,
	395, 512, 521, 382, 371, 211, 519, 380, 370, 324,
	343, 344, 270, 297, 434, 363, 435, 296, 298, 391,
	390, 392, 200, 532, 0, 201, 0, 484, 533, 573,
	226, 227, 229, 0, 269, 273, 282, 285, 293, 294,
	303, 355, 406, 433, 429, 438, 0, 507, 526, 538,
	549, 555, 556, 558, 559, 560, 561, 562, 565, 563,
	394, 301, 480, 323, 361, 0, 0, 412, 458, 232,
	530, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	592, 372, 471, 527, 325, 337, 340, 330, 349, 0,
	350, 326, 327, 332, 334, 335, 336, 341, 342, 346,
	352, 241, 203, 378, 386, 506, 302, 208, 209, 210,
	499, 500, 501, 502, 541, 542, 546, 448, 449, 450,
	451, 283, 536, 299, 454, 453, 321, 322, 367, 436,
	0, 192, 213, 356, 0, 440, 279, 570, 540, 535,
	199, 215, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 289, 300, 308, 309,
	312, 318, 368, 374, 375, 376, 377, 396, 397, 398,
	401, 404, 405, 408, 410, 411, 414, 418, 422, 423,
	424, 426, 428, 430, 441, 446, 460, 461, 462, 463,
	464, 467, 468, 473, 474, 475, 476, 477, 485, 486,
	491, 514, 516, 529, 547, 553, 466, 291, 292, 431,
	432, 304, 305, 567, 568, 290, 524, 554, 522, 566,
	548, 425, 366, 0, 0, 369, 271, 295, 310, 0,
	539, 487, 219, 452, 281, 243, 0, 0, 204, 238,
	222, 249, 264, 267, 314, 379, 387, 416, 421, 287,
	261, 236, 445, 233, 470, 494, 495, 496, 498, 383,
	256, 420, 384, 0, 364, 504, 505, 306, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 1671, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 472, 244, 365, 362, 511, 272, 263, 259,
	242, 307, 373, 415, 493, 409, 0, 358, 0, 0,
	482, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 483, 276, 0, 0, 0, 0, 0, 639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 339, 348, 347, 328,
	329, 331, 333, 338, 345, 351, 0, 0, 0, 0,
	0, 255, 311, 262, 254, 508, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 439, 278, 0, 0, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 447, 459, 0, 0, 0,
	245, 0, 457, 413, 528, 225, 274, 444, 419, 455,
	427, 277, 0, 0, 456, 360, 513, 437, 525, 551,
	552, 253, 393, 537, 497, 545, 569, 218, 250, 407,
	490, 531, 479, 385, 509, 510, 319, 478, 286, 196,
	357, 557, 216, 465, 359, 234, 223, 515, 534, 280,
	442, 564, 205, 492, 523, 231, 469, 0, 0, 571,
	239, 489, 207, 520, 488, 381, 316, 317, 206, 0,
	443, 258, 284, 248, 402, 517, 518, 246, 572, 220,
	544, 212, 0, 543, 395, 512, 521, 382, 371, 211,
	519, 380, 370, 324, 343, 344, 270, 297, 434, 363,
	435, 296, 298, 391, 390, 392, 200, 532, 0, 201,
	0, 484, 533, 573, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 433, 429, 438,
	0, 507, 526, 538, 549, 555, 556, 558, 559, 560,
	561, 562, 565, 563, 394, 301, 480, 323, 361, 0,
	0, 412, 458, 232, 530, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 592, 372, 471, 527, 325, 337,
	340, 330, 349, 0, 350, 326, 327, 332, 334, 335,
	336, 341, 342, 346, 352, 241, 203, 378, 386, 506,
	302, 208, 209, 210, 499, 500, 501, 502, 541, 542,
	546, 448, 449, 450, 451, 283, 536, 299, 454, 453,
	321, 322, 367, 436, 0, 192, 213, 356, 0, 440,
	279, 570, 540, 535, 199, 215, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 396, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 426, 428, 430, 441, 446,
	460, 461, 462, 463, 464, 467, 468, 473, 474, 475,
	476, 477, 485, 486, 491, 514, 516, 529, 547, 553,
	466, 291, 292, 431, 432, 304, 305, 567, 568, 290,
	524, 554, 522, 566, 548, 425, 366, 0, 0, 369,
	271, 295, 310, 0, 539, 487, 219, 452, 281, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 445, 233, 470, 494,
	495, 496, 498, 383, 256, 420, 384, 0, 364, 504,
	505, 306, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 472, 244, 365, 362,
	511, 272, 263, 259, 242, 307, 373, 415, 493, 409,
	0, 358, 0, 0, 482, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 483, 276, 0, 1646,
	0, 0, 0, 639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	339, 348, 347, 328, 329, 331, 333, 338, 345, 351,
	0, 0, 0, 0, 0, 255, 311, 262, 254, 508,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 389, 247, 0, 439, 278,
	0, 0, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 320, 193, 217, 0, 0, 399, 447,
	459, 0, 0, 0, 245, 0, 457, 413, 528, 225,
	274, 444, 419, 455, 427, 277, 0, 0, 456, 360,
	513, 437, 525, 551, 552, 253, 393, 537, 497, 545,
	569, 218, 250, 407, 490, 531, 479, 385, 509, 510,
	319, 478, 286, 196, 357, 557, 216, 465, 359, 234,
	223, 515, 534, 280, 442, 564, 205, 492, 523, 231,
	469, 0, 0, 571, 239, 489, 207, 520, 488, 381,
	316, 317, 206, 0, 443, 258, 284, 248, 402, 517,
	518, 246, 572, 220, 544, 212, 0, 543, 395, 512,
	521, 382, 371, 211, 519, 380, 370, 324, 343, 344,
	270, 297, 434, 363, 435, 296, 298, 391, 390, 392,
	200, 532, 0, 201, 0, 484, 533, 573, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 433, 429, 438, 0, 507, 526, 538, 549, 555,
	556, 558, 559, 560, 561, 562, 565, 563, 394, 301,
	480, 323, 361, 0, 0, 412, 458, 232, 530, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 592, 372,
	471, 527, 325, 337, 340, 330, 349, 0, 350, 326,
	327, 332, 334, 335, 336, 341, 342, 346, 352, 241,
	203, 378, 386, 506, 302, 208, 209, 210, 499, 500,
	501, 502, 541, 542, 546, 448, 449, 450, 451, 283,
	536, 299, 454, 453, 321, 322, 367, 436, 0, 192,
	213, 356, 0, 440, 279, 570, 540, 535, 199, 215,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 426,
	428, 430, 441, 446, 460, 461, 462, 463, 464, 467,
	468, 473, 474, 475, 476, 477, 485, 486, 491, 514,
	516, 529, 547, 553, 466, 291, 292, 431, 432, 304,
	305, 567, 568, 290, 524, 554, 522, 566, 548, 425,
	366, 0, 0, 369, 271, 295, 310, 0, 539, 487,
	219, 452, 281, 243, 0, 0, 204, 238, 222, 249,
	264, 267, 314, 379, 387, 416, 421, 287, 261, 236,
	445, 233, 470, 494, 495, 496, 498, 383, 256, 420,
	384, 0, 364, 504, 505, 306, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 1547, 260, 0, 0,
	0, 0, 354, 257, 0, 0, 417, 0, 198, 0,
	472, 244, 365, 362, 511, 272, 263, 259, 242, 307,
	373, 415, 493, 409, 0, 358, 0, 0, 482, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 240, 315, 197, 400,
	483, 276, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	237, 0, 0, 0, 339, 348, 347, 328, 329, 331,
	333, 338, 345, 351, 0, 0, 0, 0, 0, 255,
	311, 262, 254, 508, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 389,
	247, 0, 439, 278, 0, 0, 0, 550, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 320, 193, 217,
	0, 0, 399, 447, 459, 0, 0, 0, 245, 0,
	457, 413, 528, 225, 274, 444, 419, 455, 427, 277,
	0, 0, 456, 360, 513, 437, 525, 551, 552, 253,
	393, 537, 497, 545, 569, 218, 250, 407, 490, 531,
	479, 385, 509, 510, 319, 478, 286, 196, 357, 557,
	216, 465, 359, 234, 223, 515, 534, 280, 442, 564,
	205, 492, 523, 231, 469, 0, 0, 571, 239, 489,
	207, 520, 488, 381, 316, 317, 206, 0, 443, 258,
	284, 248, 402, 517, 518, 246, 572, 220, 544, 212,
	0, 543, 395, 512, 521, 382, 371, 211, 519, 380,
	370, 324, 343, 344, 270, 297, 434, 363, 435, 296,
	298, 391, 390, 392, 200, 532, 0, 201, 0, 484,
	533, 573, 226, 227, 229, 0, 269, 273, 282, 285,
	293, 294, 303, 355, 406, 433, 429, 438, 0, 507,
	526, 538, 549, 555, 556, 558, 559, 560, 561, 562,
	565, 563, 394, 301, 480, 323, 361, 0, 0, 412,
	458, 232, 530, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 592, 372, 471, 527, 325, 337, 340, 330,
	349, 0, 350, 326, 327, 332, 334, 335, 336, 341,
	342, 346, 352, 241, 203, 378, 386, 506, 302, 208,
	209, 210, 499, 500, 501, 502, 541, 542, 546, 448,
	449, 450, 451, 283, 536, 299, 454, 453, 321, 322,
	367, 436, 0, 192, 213, 356, 0, 440, 279, 570,
	540, 535, 199, 215, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 251, 266, 268, 275, 289, 300,
	308, 309, 312, 318, 368, 374, 375, 376, 377, 396,
	397, 398, 401, 404, 405, 408, 410, 411, 414, 418,
	422, 423, 424, 426, 428, 430, 441, 446, 460, 461,
	462, 463, 464, 467, 468, 473, 474, 475, 476, 477,
	485, 486, 491, 514, 516, 529, 547, 553, 466, 291,
	292, 431, 432, 304, 305, 567, 568, 290, 524, 554,
	522, 566, 548, 425, 366, 0, 0, 369, 271, 295,
	310, 0, 539, 487, 219, 452, 281, 243, 0, 0,
	204, 238, 222, 249, 264, 267, 314, 379, 387, 416,
	421, 287, 261, 236, 445, 233, 470, 494, 495, 496,
	498, 383, 256, 420, 384, 0, 364, 504, 505, 306,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 472, 244, 365, 362, 511, 272,
	263, 259, 242, 307, 373, 415, 493, 409, 0, 358,
	0, 0, 482, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 483, 276, 0, 91, 0, 0,
	0, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 339, 348,
	347, 328, 329, 331, 333, 338, 345, 351, 0, 0,
	0, 0, 0, 255, 311, 262, 254, 508, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 439, 278, 0, 0,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 320, 193, 217, 0, 0, 399, 447, 459, 0,
	0, 0, 245, 0, 457, 413, 528, 225, 274, 444,
	419, 455, 427, 277, 0, 0, 456, 360, 513, 437,
	525, 551, 552, 253, 393, 537, 497, 545, 569, 218,
	250, 407, 490, 531, 479, 385, 509, 510, 319, 478,
	286, 196, 357, 557, 216, 465, 359, 234, 223, 515,
	534, 280, 442, 564, 205, 492, 523, 231, 469, 0,
	0, 571, 239, 489, 207, 520, 488, 381, 316, 317,
	206, 0, 443, 258, 284, 248, 402, 517, 518, 246,
	572, 220, 544, 212, 0, 543, 395, 512, 521, 382,
	371, 211, 519, 380, 370, 324, 343, 344, 270, 297,
	434, 363, 435, 296, 298, 391, 390, 392, 200, 532,
	0, 201, 0, 484, 533, 573, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 433,
	429, 438, 0, 507, 526, 538, 549, 555, 556, 558,
	559, 560, 561, 562, 565, 563, 394, 301, 480, 323,
	361, 0, 0, 412, 458, 232, 530, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 592, 372, 471, 527,
	325, 337, 340, 330, 349, 0, 350, 326, 327, 332,
	334, 335, 336, 341, 342, 346, 352, 241, 203, 378,
	386, 506, 302, 208, 209, 210, 499, 500, 501, 502,
	541, 542, 546, 448, 449, 450, 451, 283, 536, 299,
	454, 453, 321, 322, 367, 436, 0, 192, 213, 356,
	0, 440, 279, 570, 540, 535, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 426, 428, 430,
	441, 446, 460, 461, 462, 463, 464, 467, 468, 473,
	474, 475, 476, 477, 485, 486, 491, 514, 516, 529,
	547, 553, 466, 291, 292, 431, 432, 304, 305, 567,
	568, 290, 524, 554, 522, 566, 548, 425, 366, 0,
	0, 369, 271, 295, 310, 0, 539, 487, 219, 452,
	281, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 445, 233,
	470, 494, 495, 496, 498, 383, 256, 420, 384, 0,
	364, 504, 505, 306, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	354, 257, 0, 0, 417, 0, 198, 0, 472, 244,
	365, 362, 511, 272, 263, 259, 242, 307, 373, 415,
	493, 409, 0, 358, 0, 0, 482, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 240, 315, 197, 400, 483, 276,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 339, 348, 347, 328, 329, 331, 333, 338,
	345, 351, 0, 0, 0, 0, 0, 255, 311, 262,
	254, 508, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1296, 0, 288, 0, 389, 247, 0,
	439, 278, 0, 0, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 320, 193, 217, 0, 0,
	399, 447, 459, 0, 0, 0, 245, 0, 457, 413,
	528, 225, 274, 444, 419, 455, 427, 277, 0, 0,
	456, 360, 513, 437, 525, 551, 552, 253, 393, 537,
	497, 545, 569, 218, 250, 407, 490, 531, 479, 385,
	509, 510, 319, 478, 286, 196, 357, 557, 216, 465,
	359, 234, 223, 515, 534, 280, 442, 564, 205, 492,
	523, 231, 469, 0, 0, 571, 239, 489, 207, 520,
	488, 381, 316, 317, 206, 0, 443, 258, 284, 248,
	402, 517, 518, 246, 572, 220, 544, 212, 0, 543,
	395, 512, 521, 382, 371, 211, 519, 380, 370, 324,
	343, 344, 270, 297, 434, 363, 435, 296, 298, 391,
	390, 392, 200, 532, 0, 201, 0, 484, 533, 573,
	226, 227, 229, 0, 269, 273, 282, 285, 293, 294,
	303, 355, 406, 433, 429, 438, 0, 507, 526, 538,
	549, 555, 556, 558, 559, 560, 561, 562, 565, 563,
	394, 301, 480, 323, 361, 0, 0, 412, 458, 232,
	530, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	592, 372, 471, 527, 325, 337, 340, 330, 349, 0,
	350, 326, 327, 332, 334, 335, 336, 341, 342, 346,
	352, 241, 203, 378, 386, 506, 302, 208, 209, 210,
	499, 500, 501, 502, 541, 542, 546, 448, 449, 450,
	451, 283, 536, 299, 454, 453, 321, 322, 367, 436,
	0, 192, 213, 356, 0, 440, 279, 570, 540, 535,
	199, 215, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 289, 300, 308, 309,
	312, 318, 368, 374, 375, 376, 377, 396, 397, 398,
	401, 404, 405, 408, 410, 411, 414, 418, 422, 423,
	424, 426, 428, 430, 441, 446, 460, 461, 462, 463,
	464, 467, 468, 473, 474, 475, 476, 477, 485, 486,
	491, 514, 516, 529, 547, 553, 466, 291, 292, 431,
	432, 304, 305, 567, 568, 1295, 524, 554, 522, 566,
	548, 425, 366, 0, 0, 369, 271, 295, 310, 0,
	539, 487, 219, 452, 281, 243, 0, 0, 204, 238,
	222, 249, 264, 267, 314, 379, 387, 416, 421, 287,
	261, 236, 445, 233, 470, 494, 495, 496, 498, 383,
	256, 420, 384, 0, 364, 504, 505, 306, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 472, 244, 365, 362, 511, 272, 263, 259,
	242, 307, 373, 415, 493, 409, 0, 358, 0, 0,
	482, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 483, 276, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 339, 348, 347, 328,
	329, 331, 333, 338, 345, 351, 0, 0, 0, 0,
	0, 255, 311, 262, 254, 508, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 439, 278, 0, 0, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 447, 459, 0, 0, 0,
	245, 0, 457, 413, 528, 225, 274, 444, 419, 455,
	427, 277, 0, 0, 456, 360, 513, 437, 525, 551,
	552, 253, 393, 537, 497, 545, 569, 218, 250, 407,
	490, 531, 479, 385, 509, 510, 319, 478, 286, 196,
	357, 557, 216, 465, 359, 234, 223, 515, 534, 280,
	442, 564, 205, 492, 523, 231, 469, 0, 0, 571,
	239, 489, 207, 520, 488, 381, 316, 317, 206, 0,
	443, 258, 284, 248, 402, 517, 518, 246, 572, 220,
	544, 212, 0, 543, 395, 512, 521, 382, 371, 211,
	519, 380, 370, 324, 343, 344, 270, 297, 434, 363,
	435, 296, 298, 391, 390, 392, 200, 532, 0, 201,
	0, 484, 533, 573, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 433, 429, 438,
	0, 507, 526, 538, 549, 555, 556, 558, 559, 560,
	561, 562, 565, 563, 394, 301, 480, 323, 361, 0,
	0, 412, 458, 232, 530, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 592, 372, 471, 527, 325, 337,
	340, 330, 349, 0, 350, 326, 327, 332, 334, 335,
	336, 341, 342, 346, 352, 241, 203, 378, 386, 506,
	302, 208, 209, 210, 499, 500, 501, 502, 541, 542,
	546, 448, 449, 450, 451, 283, 536, 299, 454, 453,
	321, 322, 367, 436, 0, 192, 213, 356, 0, 440,
	279, 570, 540, 535, 199, 215, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 899, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 396, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 426, 428, 430, 441, 446,
	460, 461, 462, 463, 464, 467, 468, 473, 474, 475,
	476, 477, 485, 486, 491, 514, 516, 529, 547, 553,
	466, 291, 292, 431, 432, 304, 305, 567, 568, 290,
	524, 554, 522, 566, 548, 425, 366, 0, 0, 369,
	271, 295, 310, 0, 539, 487, 219, 452, 281, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 445, 233, 470, 494,
	495, 496, 498, 383, 256, 420, 384, 0, 364, 504,
	505, 306, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 472, 244, 365, 362,
	511, 272, 263, 259, 242, 307, 373, 415, 493, 409,
	0, 358, 0, 0, 482, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 483, 276, 0, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	339, 348, 347, 328, 329, 331, 333, 338, 345, 351,
	0, 0, 0, 0, 0, 255, 311, 262, 254, 508,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 389, 247, 0, 439, 278,
	0, 595, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 320, 193, 217, 0, 0, 399, 447,
	459, 0, 0, 0, 245, 0, 457, 413, 528, 225,
	274, 444, 419, 455, 427, 277, 0, 0, 456, 360,
	513, 437, 525, 551, 552, 253, 393, 537, 497, 545,
	569, 218, 250, 407, 490, 531, 479, 385, 509, 510,
	319, 478, 286, 196, 357, 557, 216, 465, 359, 234,
	223, 515, 534, 280, 442, 564, 205, 492, 523, 231,
	469, 0, 0, 571, 239, 489, 207, 520, 488, 381,
	316, 317, 206, 0, 443, 258, 284, 248, 402, 517,
	518, 246, 572, 220, 544, 212, 0, 543, 395, 512,
	521, 382, 371, 211, 519, 380, 370, 324, 343, 344,
	270, 297, 434, 363, 435, 296, 298, 391, 390, 392,
	200, 532, 0, 201, 0, 484, 533, 573, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 433, 429, 438, 0, 507, 526, 538, 549, 555,
	556, 558, 559, 560, 561, 562, 565, 563, 394, 301,
	480, 323, 361, 0, 0, 412, 458, 232, 530, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 592, 372,
	471, 527, 325, 337, 340, 330, 349, 0, 350, 326,
	327, 332, 334, 335, 336, 341, 342, 346, 352, 241,
	203, 378, 386, 506, 302, 208, 209, 210, 499, 500,
	501, 502, 541, 542, 546, 448, 449, 450, 451, 283,
	536, 299, 454, 453, 321, 322, 367, 436, 0, 192,
	213, 356, 0, 440, 279, 570, 540, 535, 199, 215,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 426,
	428, 430, 441, 446, 460, 461, 462, 463, 464, 467,
	468, 473, 474, 475, 476, 477, 485, 486, 491, 514,
	516, 529, 547, 553, 466, 291, 292, 431, 432, 304,
	305, 567, 568, 290, 524, 554, 522, 566, 548, 425,
	366, 0, 0, 369, 271, 295, 310, 0, 539, 487,
	219, 452, 281, 243, 0, 0, 204, 238, 222, 249,
	264, 267, 314, 379, 387, 416, 421, 287, 261, 236,
	445, 233, 470, 494, 495, 496, 498, 383, 256, 420,
	384, 0, 364, 504, 505, 306, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 354, 257, 0, 0, 417, 0, 198, 0,
	472, 244, 365, 362, 511, 272, 263, 259, 242, 307,
	373, 415, 493, 409, 0, 358, 0, 0, 482, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 240, 315, 197, 400,
	483, 276, 0, 0, 0, 0, 0, 639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	237, 0, 0, 0, 339, 348, 347, 328, 329, 331,
	333, 338, 345, 351, 0, 0, 0, 0, 0, 255,
	311, 262, 254, 508, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 389,
	247, 0, 439, 278, 0, 0, 0, 550, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 320, 193, 217,
	0, 0, 399, 447, 459, 0, 0, 0, 245, 0,
	457, 413, 528, 225, 274, 444, 419, 455, 427, 277,
	0, 0, 456, 360, 513, 437, 525, 551, 552, 253,
	393, 537, 497, 545, 569, 218, 250, 407, 490, 531,
	479, 385, 509, 510, 319, 478, 286, 196, 357, 557,
	216, 465, 359, 234, 223, 515, 534, 280, 442, 564,
	205, 492, 523, 231, 469, 0, 0, 571, 239, 489,
	207, 520, 488, 381, 316, 317, 206, 0, 443, 258,
	284, 248, 402, 517, 518, 246, 572, 220, 544, 212,
	0, 543, 395, 512, 521, 382, 371, 211, 519, 380,
	370, 324, 343, 344, 270, 297, 434, 363, 435, 296,
	298, 391, 390, 392, 200, 532, 0, 201, 0, 484,
	533, 573, 226, 227, 229, 0, 269, 273, 282, 285,
	293, 294, 303, 355, 406, 433, 429, 438, 0, 507,
	526, 538, 549, 555, 556, 558, 559, 560, 561, 562,
	565, 563, 394, 301, 480, 323, 361, 0, 0, 412,
	458, 232, 530, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 592, 372, 471, 527, 325, 337, 340, 330,
	349, 0, 350, 326, 327, 332, 334, 335, 336, 341,
	342, 346, 352, 241, 203, 378, 386, 506, 302, 208,
	209, 210, 499, 500, 501, 502, 541, 542, 546, 448,
	449, 450, 451, 283, 536, 299, 454, 453, 321, 322,
	367, 436, 0, 192, 213, 356, 0, 440, 279, 570,
	540, 535, 199, 215, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 251, 266, 268, 275, 289, 300,
	308, 309, 312, 318, 368, 374, 375, 376, 377, 3456,
	397, 398, 401, 404, 405, 408, 410, 411, 414, 418,
	422, 423, 424, 426, 428, 430, 441, 446, 460, 461,
	462, 463, 464, 467, 468, 473, 474, 475, 476, 477,
	485, 486, 491, 514, 516, 529, 547, 553, 466, 291,
	292, 431, 432, 304, 305, 567, 568, 290, 524, 554,
	522, 566, 548, 425, 366, 0, 0, 369, 271, 295,
	310, 0, 539, 487, 219, 452, 281, 243, 0, 0,
	204, 238, 222, 249, 264, 267, 314, 379, 387, 416,
	421, 287, 261, 236, 445, 233, 470, 494, 495, 496,
	498, 383, 256, 420, 384, 0, 364, 504, 505, 306,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 472, 244, 365, 362, 511, 272,
	263, 259, 242, 307, 373, 415, 493, 409, 0, 358,
	0, 0, 482, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 483, 276, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 339, 348,
	347, 328, 329, 331, 333, 338, 345, 351, 0, 0,
	0, 0, 0, 255, 311, 262, 254, 508, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 439, 278, 0, 0,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 320, 193, 217, 0, 0, 399, 447, 459, 0,
	0, 0, 245, 0, 457, 413, 528, 225, 274, 444,
	419, 455, 427, 277, 0, 0, 456, 360, 513, 437,
	525, 551, 552, 253, 393, 537, 497, 545, 569, 218,
	250, 407, 490, 531, 479, 385, 509, 510, 319, 478,
	286, 196, 357, 557, 216, 465, 359, 234, 223, 515,
	534, 280, 442, 564, 205, 492, 523, 231, 469, 0,
	0, 571, 239, 489, 207, 520, 488, 381, 316, 317,
	206, 0, 443, 258, 284, 248, 402, 517, 518, 246,
	572, 220, 544, 212, 0, 543, 395, 512, 521, 382,
	371, 211, 519, 380, 370, 324, 343, 344, 270, 297,
	434, 363, 435, 296, 298, 391, 390, 392, 200, 532,
	0, 201, 0, 484, 533, 573, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 433,
	429, 438, 0, 507, 526, 538, 549, 555, 556, 558,
	559, 560, 561, 562, 565, 563, 394, 301, 480, 323,
	361, 0, 0, 412, 458, 232, 530, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 592, 372, 471, 527,
	325, 337, 340, 330, 349, 0, 350, 326, 327, 332,
	334, 335, 336, 341, 342, 346, 352, 241, 203, 378,
	386, 506, 302, 208, 209, 210, 499, 500, 501, 502,
	541, 542, 546, 448, 449, 450, 451, 283, 536, 299,
	454, 453, 321, 322, 367, 436, 0, 192, 213, 356,
	0, 440, 279, 570, 540, 535, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 426, 428, 430,
	441, 446, 460, 461, 462, 463, 464, 467, 468, 473,
	474, 475, 476, 477, 485, 486, 491, 514, 516, 529,
	547, 553, 466, 291, 292, 431, 432, 304, 305, 567,
	568, 290, 524, 554, 522, 566, 548, 425, 366, 0,
	0, 369, 271, 295, 310, 0, 539, 487, 219, 452,
	281, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 445, 233,
	470, 494, 495, 496, 498, 383, 256, 420, 384, 0,
	364, 504, 505, 306, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	354, 257, 0, 0, 417, 0, 198, 0, 472, 244,
	365, 362, 511, 272, 263, 259, 242, 307, 373, 415,
	493, 409, 0, 358, 0, 0, 482, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 240, 315, 197, 400, 483, 276,
	0, 0, 0, 0, 0, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 339, 348, 347, 328, 329, 331, 333, 338,
	345, 351, 0, 0, 0, 0, 0, 255, 311, 262,
	254, 508, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 389, 247, 0,
	439, 278, 0, 0, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 320, 193, 217, 0, 0,
	399, 447, 459, 0, 0, 0, 245, 0, 457, 413,
	528, 225, 274, 444, 419, 455, 427, 277, 0, 0,
	456, 360, 513, 437, 525, 551, 552, 253, 393, 537,
	497, 545, 569, 218, 250, 407, 490, 531, 479, 385,
	509, 510, 319, 478, 286, 196, 357, 557, 216, 465,
	359, 234, 223, 515, 534, 280, 442, 564, 205, 492,
	523, 231, 469, 0, 0, 571, 239, 489, 207, 520,
	488, 381, 316, 317, 206, 0, 443, 258, 284, 248,
	402, 517, 518, 246, 572, 220, 544, 212, 0, 543,
	395, 512, 521, 382, 371, 211, 519, 380, 370, 324,
	343, 344, 270, 297, 434, 363, 435, 296, 298, 391,
	390, 392, 200, 532, 0, 201, 0, 484, 533, 573,
	226, 227, 229, 0, 269, 273, 282, 285, 293, 294,
	303, 355, 406, 433, 429, 438, 0, 507, 526, 538,
	549, 555, 556, 558, 559, 560, 561, 562, 565, 563,
	394, 301, 480, 323, 361, 0, 0, 412, 458, 232,
	530, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	592, 372, 471, 527, 325, 337, 340, 330, 349, 0,
	350, 326, 327, 332, 334, 335, 336, 341, 342, 346,
	352, 241, 203, 378, 386, 506, 302, 208, 209, 210,
	499, 500, 501, 502, 541, 542, 546, 448, 449, 450,
	451, 283, 536, 299, 454, 453, 321, 322, 367, 436,
	0, 192, 213, 356, 0, 440, 279, 570, 540, 535,
	199, 215, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 289, 300, 308, 309,
	312, 318, 368, 374, 375, 376, 377, 396, 397, 398,
	401, 404, 405, 408, 410, 411, 414, 418, 422, 423,
	424, 426, 428, 430, 441, 446, 460, 461, 462, 463,
	464, 467, 468, 473, 474, 475, 476, 477, 485, 486,
	491, 514, 516, 529, 547, 553, 466, 291, 292, 431,
	432, 304, 305, 567, 568, 290, 524, 554, 522, 566,
	548, 425, 366, 0, 0, 369, 271, 295, 310, 0,
	539, 487, 219, 452, 281, 243, 0, 0, 204, 238,
	222, 249, 264, 267, 314, 379, 387, 416, 421, 287,
	261, 236, 445, 233, 470, 494, 495, 496, 498, 383,
	256, 420, 384, 0, 364, 504, 505, 306, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 472, 244, 365, 362, 511, 272, 263, 259,
	242, 307, 373, 415, 493, 409, 0, 358, 0, 0,
	482, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 483, 276, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 339, 348, 347, 328,
	329, 331, 333, 338, 345, 351, 0, 0, 0, 0,
	0, 255, 311, 262, 254, 508, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 439, 278, 0, 0, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 447, 459, 0, 0, 0,
	245, 0, 457, 413, 528, 225, 274, 444, 419, 455,
	427, 277, 0, 0, 456, 360, 513, 437, 525, 551,
	552, 253, 393, 537, 497, 545, 569, 218, 250, 407,
	490, 531, 479, 385, 509, 510, 319, 478, 286, 196,
	357, 557, 216, 465, 359, 234, 223, 515, 534, 280,
	442, 564, 205, 492, 523, 231, 469, 0, 0, 571,
	239, 489, 207, 520, 488, 381, 316, 317, 206, 0,
	443, 258, 284, 248, 402, 517, 518, 246, 572, 220,
	544, 212, 0, 543, 395, 512, 521, 382, 371, 211,
	519, 380, 370, 324, 343, 344, 270, 297, 434, 363,
	435, 296, 298, 391, 390, 392, 200, 532, 0, 201,
	0, 484, 533, 573, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 433, 429, 438,
	0, 507, 526, 538, 549, 555, 556, 558, 559, 560,
	561, 562, 565, 563, 394, 301, 480, 323, 361, 0,
	0, 412, 458, 232, 530, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 592, 372, 471, 527, 325, 337,
	340, 330, 349, 0, 350, 326, 327, 332, 334, 335,
	336, 341, 342, 346, 352, 241, 203, 378, 386, 506,
	302, 208, 209, 210, 499, 500, 501, 502, 541, 542,
	546, 448, 449, 450, 451, 283, 536, 299, 454, 453,
	321, 322, 367, 436, 0, 192, 213, 356, 0, 440,
	279, 570, 540, 535, 199, 215, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 396, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 426, 428, 430, 441, 446,
	460, 461, 462, 463, 464, 467, 468, 473, 474, 475,
	476, 477, 485, 486, 491, 514, 516, 529, 547, 553,
	466, 291, 292, 431, 432, 304, 305, 567, 568, 290,
	524, 554, 522, 566, 548, 425, 366, 0, 0, 369,
	271, 295, 310, 0, 539, 487, 219, 452, 281, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 445, 233, 470, 494,
	495, 496, 498, 383, 256, 420, 0, 0, 364, 504,
	505, 306,
}

var yyPact = [...]int{
	-1000, -1000, 4559, -1000, -467, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2277,
	2350, -1000, -1000, -1000, -1000, 2431, -1000, 833, 1905, -1000,
	2232, 303, -1000, 46678, 602, -1000, 44062, 593, 215, 29020,
	-1000, 223, -1000, 198, 45370, 208, -1000, -1000, -1000, -1000,
	-308, 18554, 2144, 72, 71, 46678, -1000, -1000, -1000, -1000,
	2400, 1893, -1000, 408, -1000, -1000, -1000, -1000, -1000, -1000,
	43408, -1000, 928, -1000, -1000, 2251, 2245, 2437, 747, 2209,
	-1000, 2335, 1893, -1000, 18554, 2376, 2323, 17900, 17900, 497,
	-1000, -1000, 350, -1000, -1000, 24442, 46678, 31636, 920, -1000,
	2232, -1000, -1000, -1000, 137, -1000, 393, 1820, -1000, 1819,
	-1000, 870, 889, 420, 553, 521, 418, 416, 415, 414,
	407, 406, 404, 403, 401, -1000, 776, 776, -118, -121,
	3179, 495, 453, 453, 771, 509, 2202, 2186, -1000, -1000,
	776, 776, 776, 449, 776, 776, 776, 776, 349, 346,
	776, 776, 776, 776, 776, 776, 776, 776, 776, 776,
	776, 776, 776, 776, 776, 776, 776, 342, 2232, 313,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 46678, 221, 46678, -1000, 666, 46678, 905,
	905, 171, 905, 905, 905, 905, 210, 708, 70, -1000,
	201, 340, 225, 310, 957, 265, -1000, -1000, 279, 957,
	1550, -1000, 754, 304, 190, -1000, 905, 905, -1000, 11989,
	194, 11989, 11989, -1000, 2221, -1000, -1000, -1000, -1000, -1000,
	1121, -1000, -1000, -1000, -1000, -3, 507, -1000, -1000, -1000,
	-1000, 45370, 42754, 298, -1000, -1000, 147, -1000, -1000, 1229,
	1269, 18554, 1221, -1000, 1264, 725, -1000, -1000, -1000, -1000,
	-1000, 633, -1000, 19208, 19208, 19208, 19208, -1000, -1000, 1822,
	42100, 1822, 1822, 19208, 1822, -1000, 19208, 1822, 1822, 1822,
	18554, 1822, 1822, 1822, 1822, -1000, 1822, 1822, 1822, 1822,
	1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822,
	1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822,
	1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822,
	1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822,
	1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822,
	1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822,
	1822, 1822, 1822, 1822, -1000, -1000, -1000, -1000, 1822, 665,
	1822, 1822, 1822, 1822, 1822, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1822, 1822, 1822, 1822, 1822, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1822, 1822, 1822,
	1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822,
	1822, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 20516, 1290, 1260, 1255, -1000, 15938, 1822, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 46678,
	-1000, 1822, 244, 45370, 45370, 398, 2335, 1893, -1000, 2400,
	2362, 408, -1000, 2912, 1876, 1329, 1222, 1893, 1794, 46678,
	-1000, 1836, -1000, -1000, -1000, -1000, 2065, 1194, 1541, -1000,
	-1000, -1000, -1000, 1497, 18554, -1000, -1000, 2420, -1000, 21825,
	662, 2419, 41446, -1000, 497, 497, 1810, 447, 38, -1000,
	-1000, -1000, -1000, 810, 28366, -1000, -1000, -1000, -1000, 1729,
	46678, -1000, -1000, 3341, 1130, -1000, 1902, -1000, 1726, -1000,
	1861, 18554, 1921, 564, 1130, 544, 527, 522, -1000, -25,
	-1000, -1000, -1000, -1000, -1000, -1000, 776, 776, 776, -1000,
	397, 2373, 303, 4300, -1000, -1000, -1000, 40792, 1901, 1130,
	-1000, 1895, -1000, 860, 598, 628, 628, 1130, -1000, -1000,
	46024, 1130, 859, 857, 1130, 1130, 45370, 45370, -1000, 40138,
	-1000, 39484, 38830, 1097, 45370, 38176, 37522, 36868, 36214, 35560,
	-1000, 2274, -1000, 1969, -1000, -1000, -1000, 46024, 1130, 1130,
	46024, 45370, 46024, 46678, 1130, -1000, -1000, 357, -1000, -1000,
	1090, 1084, 1082, 776, 776, 1080, 1538, 1534, 1501, 776,
	776, 1075, 1471, 30328, 1467, 337, 1070, 1069, 1059, 1129,
	1463, 213, 1461, 1118, 1089, 1058, 45370, 1894, 46678, -1000,
	295, 802, 538, 806, 2232, 2140, 1808, 506, 560, 1130,
	483, 483, 45370, -1000, 13969, -1000, -1000, 1439, 18554, -1000,
	961, 957, 957, -1000, -1000, -1000, -1000, -1000, -1000, 905,
	46678, 961, -1000, -1000, -1000, 957, 905, 46678, 905, 905,
	905, 905, 957, 957, 957, 905, 46678, 46678, 46678, 46678,
	46678, 46678, 46678, 46678, 46678, 11989, 754, 905, -312, -1000,
	1437, -1000, -1000, 2062, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	11989, 11989, -1000, -1000, -1000, -1000, -1000, 1805, -1000, 202,
	45, 207, -1000, 34906, 390, 801, -1000, 390, -1000, -1000,
	-1000, 1803, 34252, -1000, -314, -319, -323, -334, -1000, -1000,
	-1000, -335, -340, -1000, -1000, -1000, 18554, 18554, 18554, 18554,
	-149, -1000, 1340, 19208, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 243, 987, 19208, 19208, 19208, 19208, 19208, 19208, 19208,
	19208, 19208, 19208, 19208, 19208, 19208, 19208, 19208, -1000, -1000,
	26404, 5081, 5081, 725, 725, 725, 725, -1000, -89, 1802,
	46024, -1000, -1000, -1000, 659, 18554, 18554, 725, -1000, 1130,
	15938, 33598, 17900, 17900, 18554, 815, 1269, 46024, 18554, -1000,
	1222, -1000, -1000, -1000, 1026, -1000, 925, 2194, 2194, 2194,
	2194, 18554, 18554, 18554, 18554, 18554, 18554, 18554, 18554, 18554,
	18554, 2194, 45370, 45370, 863, 18554, 18554, 18554, 18554, 18554,
	18554, 14629, 18554, 18554, 19208, 18554, 18554, 18554, 1222, 18554,
	18554, 18554, 18554, 18554, 18554, 18554, 18554, 18554, 18554, 18554,
	18554, 18554, 18554, 18554, 18554, 18554, 18554, 18554, 18554, 18554,
	18554, 18554, 18554, 18554, 18554, 18554, 1222, 18554, 1383, 18554,
	18554, 17900, 13309, 17900, 17900, 17900, 17900, 17900, -1000, -1000,
	-1000, -1000, -1000, 18554, 18554, 18554, 18554, 18554, 18554, 18554,
	18554, 1222, 18554, 18554, 18554, 18554, 18554, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1223, 1419, 1324,
	18554, -1000, 1800, -1000, -128, 23788, 18554, 1435, 2418, 1962,
	45370, -1000, -1000, -1000, 2335, -1000, 2335, 1223, 2686, 2092,
	17900, -1000, -1000, 2686, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1567, -1000, 46678, 1794, 2301, 45370, 2088, 1432,
	364, -1000, 18554, 18554, 1793, -1000, 1191, 46678, -1000, -149,
	-1000, 32944, -1000, -1000, 11329, 46678, 394, 46678, -1000, 23134,
	32290, 375, -1000, 38, 1769, -1000, 50, 23, 15283, 716,
	-1000, -1000, -1000, 3179, 19862, 1611, 716, 135, -1000, -1000,
	-1000, 1861, -1000, 1861, 1861, 1861, 1861, 364, 364, 364,
	364, -1000, -1000, -1000, -1000, -1000, 1890, 1889, -1000, 1861,
	1861, 1861, 1861, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1887, 1887, 1887, 1867, 1867, 463, -1000, 18554, 424, 31636,
	2248, 1055, 2084, 295, 494, 1961, 1130, 1130, 1130, 494,
	-1000, 1192, 1155, 1149, -1000, -453, 1790, -1000, -1000, 2371,
	-1000, -1000, 829, 879, 876, 585, 45370, 256, 387, -1000,
	471, -1000, 31636, 1130, 854, 628, 1130, -1000, 1130, -1000,
	-1000, -1000, -1000, -1000, 1130, -1000, -1000, 1784, -1000, 1741,
	973, 875, 930, 873, 1784, -1000, -1000, -97, 1784, -1000,
	1784, -1000, 1784, -1000, 1784, -1000, 1784, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 804, 238, -230, 45370,
	256, 505, -1000, 501, 26404, -1000, -1000, -1000, 26404, 26404,
	-1000, -1000, -1000, -1000, 1420, 1413, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -436, 46678, -1000, 266, 800,
	361, 395, 339, 46678, 348, 2326, 2319, 2316, 2309, 2304,
	354, 327, 46678, 46678, 483, 2025, 46678, 2275, 46678, -1000,
	-1000, -1000, -1000, -1000, 1269, 46678, -1000, -1000, 905, 905,
	-1000, -1000, 46678, 905, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 905, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 46678, -1000,
	-1000, -1000, -1000, -3, 200, -1000, -1000, 45370, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -39, -1000, 197,
	42, 396, -1000, -1000, -1000, -1000, -1000, 2342, -1000, 1269,
	836, 831, -1000, 1822, -1000, -1000, 1021, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 243, 19208, 19208, 19208, 1637, 535,
	1671, 1682, 1763, 1083, 1083, 878, 878, 730, 730, 730,
	730, 730, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1405, -1000, 1822, 46024, 1703, 13309, 1488, 2108, 1222, 2887,
	-1000, 1679, -1000, 1679, 1618, 816, -1000, 18554, 1222, 2867,
	-1000, -1000, 1222, 1222, 1222, 18554, -1000, -1000, 18554, 18554,
	18554, 18554, 2084, 2084, 2084, 2084, 2084, 2084, 2084, 2084,
	2084, 2084, 18554, 1782, 1779, 2415, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1202, 2084, 2084,
	2084, 2084, 2084, 18554, 2104, -1000, -1000, -1000, 1360, 2859,
	1582, 2840, 2084, 2084, -1000, 2084, 2830, 2826, 1222, 1229,
	1222, 1772, -1000, 2821, 2084, 2807, 2801, 2785, 2079, 2766,
	2760, 2743, 2084, 2084, 2084, 2037, 2739, 2728, 2720, 2714,
	2679, 2658, 2654, 2642, 2624, 2084, -151, 2084, 1222, -1000,
	-1000, -1000, -1000, -1000, 2614, 2022, 1222, 1771, 1822, 657,
	-1000, -1000, 1679, 1222, 1222, 1679, 1679, 2567, 2454, 2333,
	2290, 2285, 2276, 2084, 2084, -1000, 2084, 2258, 2253, 2015,
	2001, 1222, -1000, 1324, 46678, -1000, -300, -1000, 32, 661,
	1822, -1000, 30328, 1222, -1000, 4776, -1000, 1119, -1000, -1000,
	-1000, -1000, -1000, 27712, 1710, 2686, -1000, -1000, 1822, 1675,
	-1000, -1000, 364, 91, 27058, 714, 714, 145, 1269, 1269,
	18554, -1000, -1000, -1000, -1000, -1000, -1000, 645, 2395, 392,
	1822, -1000, 1743, 1998, -1000, -1000, -1000, 2298, 21171, -1000,
	-1000, 1822, 1822, 46678, 1798, 1711, -1000, 643, -1000, 1135,
	1769, 38, 20, -1000, -1000, -1000, -1000, 1269, -1000, 1142,
	400, 627, -1000, 470, -1000, -1000, -1000, -1000, 2158, 101,
	-1000, -1000, -1000, 262, 364, -1000, -1000, -1000, -1000, -1000,
	-1000, 1392, 1392, -1000, -1000, -1000, -1000, -1000, 1041, -1000,
	-1000, -1000, 1040, -1000, -1000, 2210, 1978, 424, -1000, -1000,
	776, 1390, -1000, -1000, 2175, 776, 776, 45370, -1000, -1000,
	1590, 2248, 266, 46678, 824, 2024, -1000, 1961, 1961, 1961,
	46678, -1000, -1000, -1000, -1000, -1000, -1000, -443, 67, 386,
	-1000, -1000, -1000, 684, 45370, 1650, -1000, 250, -1000, 1576,
	-1000, 45370, -1000, 1643, 1883, 1130, 1130, -1000, -1000, -1000,
	45370, 1822, -1000, -1000, -1000, -1000, 555, 2229, 306, -1000,
	-1000, -174, -1000, -1000, 256, 250, 46024, 1130, 716, -1000,
	-1000, -1000, -1000, -1000, -402, 1629, 537, 261, 355, 46678,
	46678, 46678, 46678, 46678, 625, -1000, -1000, 54, -1000, -1000,
	231, -1000, -1000, -1000, -1000, 231, -1000, -1000, -1000, -1000,
	305, 500, -1000, 46678, 46678, 624, -1000, -1000, -1000, 957,
	-1000, -1000, 957, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2217, 46678, 27, -368, -1000,
	-365, 18554, -1000, -1000, -1000, -1000, 1228, 526, 1671, 19208,
	19208, 19208, -1000, -1000, -1000, 1014, 1014, 26404, -1000, 18554,
	17900, -1000, -1000, 18554, 18554, 772, -1000, 18554, 1048, -1000,
	18554, -1000, -1000, -1000, 1324, 2084, 2084, 2084, 2084, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1655,
	18554, 18554, 18554, 1222, 320, -1000, -1000, -1000, -1000, -1000,
	2413, -1000, 18554, -1000, 26404, 18554, 18554, 18554, -1000, -1000,
	-1000, 18554, 18554, -1000, -1000, 18554, 18554, -1000, 18554, 18554,
	18554, -1000, 18554, 18554, 18554, 18554, -1000, -1000, -1000, -1000,
	18554, 18554, 18554, 18554, 18554, 18554, 18554, 18554, 18554, 18554,
	-1000, -1000, 31636, 93, -151, 1383, 93, 1383, -1000, 17900,
	12649, -1000, -1000, -1000, -1000, -1000, 18554, 18554, 18554, 18554,
	18554, 18554, -1000, -1000, -1000, 18554, 18554, -1000, 18554, -1000,
	18554, -1000, -1000, -1000, -1000, -1000, 661, -1000, 628, 628,
	628, 45370, -1000, -1000, -1000, -1000, 1744, -1000, 2344, -1000,
	2101, 2095, 2410, 2395, -1000, 23134, 2686, -1000, -1000, 45370,
	-286, -1000, 2137, 2226, 714, 714, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 10669, 2335, 18554, 2023, 46024, 182, -1000,
	22480, 45370, 46024, 23134, 23134, 23134, 23134, 23134, -1000, 2056,
	2054, -1000, 2078, 2042, 2064, 46678, -1000, 1223, 1620, -1000,
	18554, 25096, 1570, 23134, -1000, -1000, 23134, 46678, 10009, -1000,
	-1000, 21, 36, -1000, -1000, -1000, -1000, 3179, -1000, -1000,
	379, 2296, 2148, -1000, -1000, -1000, -1000, -1000, 1615, -1000,
	1546, 1737, 1511, 238, -1000, 1913, 2208, 776, 776, -1000,
	1031, -1000, 1130, 1373, 1364, -1000, -1000, -1000, 514, -1000,
	2270, 46678, 2017, 2009, 2003, -1000, -451, 1000, 1875, 1857,
	18554, 1873, 2370, 1681, 45370, -1000, -1000, 46024, -1000, 230,
	-1000, 424, 45370, -1000, -1000, -1000, 387, 46678, -1000, 7202,
	-1000, -1000, -1000, 250, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 46678, 267, -1000, 1869, 1120, -1000, -1000, 1924, -1000,
	-1000, -1000, -1000, 220, 360, 1362, 234, 1349, 234, -1000,
	46678, 612, 1978, 46678, -1000, -1000, -1000, 905, 905, -1000,
	-1000, 2207, -1000, 1130, 2084, 19208, 19208, -1000, 725, 872,
	-130, 1861, 1861, -1000, 1861, 1867, -1000, 1861, 191, 1861,
	176, 1861, -1000, -1000, 1222, 1222, 1324, -1000, 1996, 1974,
	-1000, 1269, 18554, 2203, -1000, -1000, -1000, -1000, -1000, -32,
	2197, 2190, 2084, -1000, 1860, 1859, 18554, 2084, 1222, 1957,
	2084, 2084, 2084, 2084, -1000, 1269, 1324, 2184, 1324, 2084,
	2084, 2093, 347, 2084, 1453, 1453, 1453, 1453, 1453, 1324,
	1324, 1324, 1324, 45370, -1000, -151, -1000, -1000, -193, -206,
	-1000, 1222, -151, 1698, 1222, -1000, 1940, 1934, 2089, 1920,
	2084, 2007, 2084, 2084, 2084, 1879, -1000, 2280, 2280, 2280,
	1418, 1119, 46678, -1000, -1000, -1000, -1000, 2395, 2385, 1696,
	-1000, -1000, 91, 430, -1000, 2139, 2226, -1000, 2369, 2125,
	2368, -1000, -1000, -1000, -1000, -1000, 1269, -1000, 2242, 1745,
	-1000, 781, 1617, -1000, -1000, 17246, 1427, 2083, 630, 1418,
	1812, 1998, 1960, 1997, 2336, -1000, -1000, -1000, -1000, 2050,
	-1000, 2011, -1000, -1000, 1836, -1000, 1379, 394, 23134, 1742,
	1742, -1000, 629, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	897, 6740, 2435, -1000, 1300, -1000, 1114, 228, 989, -1000,
	-1000, 776, 776, -1000, 853, 845, -1000, 46678, 1858, -1000,
	364, 1294, 364, 986, -1000, 985, -1000, -1000, -1000, -1000,
	1780, 2026, -1000, -1000, -1000, -1000, 46678, -1000, -1000, 46678,
	46678, 46678, 1856, 2367, -1000, 18554, 1855, 779, 2151, 45370,
	45370, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 476, 776, -384, 325, 318, 776, 776, 776,
	-452, -1000, -1000, 1411, 1409, -1000, -119, -1000, 18554, -1000,
	-1000, -1000, 1077, 1077, 1290, 1260, 1255, -1000, 1836, -1000,
	-1000, -1000, 1557, -1000, -1000, -101, 45370, 45370, 45370, 45370,
	-1000, -1000, 1032, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 725, 1222, 341, -105, 1222,
	-1000, -1000, 364, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 18554, -1000, 18554, -1000, 1269, 18554, 2335,
	1252, 18554, 18554, -1000, 975, 974, 2084, -1000, -1000, -1000,
	18554, -1000, -1000, -1000, -1000, -1000, 18554, -1000, -1000, -1000,
	18554, 276, 1014, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1222, 388, -1000, -1000, -1000, -1000, 2401,
	-1000, 1222, 18554, -1000, -1000, 18554, -1000, 18554, 18554, -1000,
	18554, -1000, 18554, -1000, -1000, -1000, -1000, 18554, 1822, 2141,
	1822, 1822, 25096, -1000, -1000, 2385, 2383, 2366, 2120, 2116,
	2116, 2139, -1000, 2365, 2364, -1000, 1250, 2357, 1248, 834,
	-1000, 46024, 18554, 182, -1000, 413, 45370, 182, 45370, -1000,
	2379, -1000, -1000, 18554, 1850, -1000, 18554, -1000, -1000, -1000,
	-1000, 5081, 2395, 1742, -1000, -1000, 737, -1000, 18554, -1000,
	-1000, -1000, 8328, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1239, 1198, -1000, -1000, 1838, 18554, -1000, -1000, -1000,
	1553, 1454, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1836, -1000, -1000, -1000, -1000, 387, -447, 2128, 45370, 970,
	-1000, 1398, 1681, 365, 182, 1196, 776, 776, 776, 966,
	934, 30328, 1396, -1000, 45370, 439, -1000, 387, -1000, -124,
	-125, 2084, -1000, -1000, 2288, -1000, -1000, 12649, -1000, -1000,
	1825, 1932, -1000, -1000, -1000, -1000, 2081, -95, -112, -1000,
	-1000, 2084, 2084, 1068, 1222, -1000, 2084, 2084, 1328, 1325,
	-1000, 2084, 1324, 1852, -1000, 276, 1222, 1993, -1000, -1000,
	5081, -1000, -1000, 2379, 2354, 93, -1000, -1000, 248, 93,
	1269, 1738, 2084, 1732, 1646, 2084, 2084, 25750, -1000, 2352,
	2346, 30982, 30982, 661, 2383, -163, 18554, 18554, 2115, 981,
	-1000, -1000, -1000, -1000, 1184, 1182, -1000, 1169, -1000, 2434,
	-1000, 1269, -1000, 182, -1000, 571, 1617, -1000, 2335, 1269,
	45370, 1269, 97, 2379, -1000, 2084, -1000, 1822, 1822, 1822,
	1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822,
	1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822,
	1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822,
	1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822,
	1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822,
	1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822,
	1822, 1822, 1822, 1822, 1822, 1822, 1822, -1000, -1000, 45370,
	2124, -1000, -1000, 2284, 1389, 62, -1000, 1265, 1681, -1000,
	-1000, 174, -1000, 18554, -1000, 30328, 1167, 1153, -1000, -1000,
	-1000, -1000, -452, -1000, -1000, -1000, -1000, -1000, -1000, 408,
	1645, -1000, 775, 45370, 46678, -1000, 2066, -1000, -1000, -1000,
	18554, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18554,
	-1000, 1222, 1980, -1000, -254, -1000, -381, 18554, -151, -1000,
	-1000, -151, -1000, 18554, -1000, -1000, 18554, -1000, 18554, -1000,
	-1000, 1382, -1000, -1000, -1000, -1000, -1000, 1382, 1382, -1000,
	-163, -1000, 1631, -1000, 45370, 1269, 1229, -1000, 932, -1000,
	-1000, -1000, -1000, -1000, 46024, 1617, 45370, -1000, 1357, 1222,
	1822, 2335, -1000, 1355, -1000, 408, -1000, 1824, 1857, -1000,
	-1000, -1000, 16592, -1000, -1000, -1000, -1000, -1000, 163, -100,
	12649, 9349, 1333, -1000, -98, 2084, 1324, -1000, -356, -1000,
	-1000, -1000, -1000, 160, -1000, -1000, 1229, -1000, -1000, 1641,
	1352, 1327, 29674, -1000, -1000, -1000, -1000, -163, -1000, -1000,
	2279, -1000, -1000, 1193, -1000, -1000, 25096, 44716, -1000, -86,
	233, -100, 18554, 1823, 1222, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 26, -1000, -1000, -1000, -1000, -1000, 1924,
	-106, -1000, -1000, -1000, 196, -373, -211, -213, -1000, -1000,
	19208, -1000, 18554, -1000, 18554, -1000, 18554, -1000, -1000, -1000,
	45370, 1822, -1000, 1317, -1000, 3574, -232, 1979, -1000, -12,
	-1000, -1000, -1000, 895, 1140, -1000, -1000, -1000, -1000, -1000,
	-1000, 2114, 45370, -1000, 448, -1000, -1000, -101, -114, 827,
	-1000, -1000, -1000, -1000, -1000, 1225, 1148, 2084, -1000, 45370,
	-1000, 44716, -223, 716, 5081, -1000, 1965, 1958, 2409, -1000,
	-1000, -1000, -1000, -1000, -1000, -459, 1227, 272, -1000, -1000,
	196, -1000, 18554, -1000, 18554, -1000, 1222, -1000, -1000, 2268,
	97, -1000, 2427, -1000, 2422, 632, 632, -1000, 924, -459,
	-1000, -1000, 2084, 2084, -1000, -234, -1000, -1000, -1000, -1000,
	-1000, 445, 992, -1000, -1000, -1000, -1000, -1000, 5081, -1000,
	-1000, -1000, 259, 259, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3048, 3045, 38, 1, 36, 35, 3043, 91, 103,
	189, 40, 192, 107, 3041, 167, 3038, 3035, 3033, 3031,
	3027, 3025, 2453, 2452, 2451, 3023, 3020, 3019, 3018, 3016,
	3015, 3014, 3013, 3012, 3011, 178, 171, 186, 3010, 3007,
	3005, 124, 190, 92, 95, 184, 3004, 3003, 81, 3002,
	2997, 2996, 183, 182, 176, 889, 2995, 193, 115, 53,
	2994, 2992, 2991, 2990, 2989, 2988, 2986, 2985, 2984, 2983,
	2974, 2973, 2970, 2964, 2961, 2958, 2957, 276, 2956, 2953,
	22, 2950, 84, 2945, 2941, 2939, 2938, 2935, 11, 2934,
	2933, 16, 52, 2931, 2930, 51, 2929, 2922, 2921, 2920,
	2919, 19, 2916, 27, 2915, 37, 2913, 2912, 126, 2911,
	2910, 2906, 39, 2904, 2903, 2900, 2898, 2886, 2883, 2879,
	142, 2875, 2872, 2868, 279, 201, 2865, 2860, 270, 170,
	140, 2849, 2847, 106, 185, 2829, 121, 2828, 2826, 2823,
	150, 2822, 138, 2817, 2815, 74, 79, 2812, 346, 2810,
	2809, 10, 30, 63, 4, 9, 18, 2807, 2806, 67,
	78, 2804, 111, 2803, 2801, 101, 93, 2794, 102, 97,
	2792, 2791, 13, 7, 2790, 2, 6, 3, 69, 2786,
	2782, 122, 2779, 2775, 2774, 104, 2773, 2772, 5787, 2769,
	98, 130, 109, 77, 2768, 49, 72, 2762, 2761, 2760,
	2759, 2758, 56, 2757, 2749, 2748, 135, 224, 166, 2745,
	41, 149, 58, 132, 2744, 42, 80, 196, 165, 2741,
	2739, 137, 133, 2738, 2734, 61, 46, 45, 2733, 113,
	129, 120, 112, 110, 172, 2731, 2729, 59, 75, 2727,
	2726, 2723, 2722, 163, 2721, 2720, 70, 2719, 50, 2717,
	177, 2716, 21, 64, 2715, 47, 160, 2714, 76, 2713,
	2704, 66, 99, 68, 44, 2692, 156, 162, 127, 164,
	2689, 2686, 57, 2678, 2677, 2663, 188, 358, 2656, 2647,
	82, 174, 136, 148, 96, 2645, 363, 2642, 2636, 87,
	2244, 2959, 2634, 71, 159, 2624, 2622, 6171, 157, 48,
	26, 2621, 119, 2620, 2617, 2616, 2615, 195, 169, 114,
	161, 60, 2614, 2613, 2612, 17, 2607, 2606, 2600, 2599,
	2597, 2592, 85, 34, 33, 32, 200, 73, 20, 105,
	153, 83, 2589, 2587, 2584, 125, 90, 2582, 158, 155,
	134, 212, 2581, 168, 139, 116, 2570, 54, 31, 2554,
	2553, 2548, 2546, 100, 2541, 2533, 2532, 2531, 152, 141,
	123, 88, 2530, 89, 118, 145, 146, 55, 2523, 62,
	2522, 2520, 29, 180, 28, 2496, 15, 108, 143, 2493,
	4691, 179, 2492, 23, 333, 147, 2489, 2488, 8, 12,
	14, 2487, 2483, 2482, 2480, 131, 2478, 2477, 2476, 2473,
	25, 65, 24, 5, 117, 86, 2468, 2466, 144, 2463,
	2460, 3462, 0, 128, 2457, 198,
}

//line sql.y:7959
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 409, 410, 410, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 258,
	380, 381, 381, 256, 256, 33, 72, 35, 35, 34,
	34, 37, 37, 36, 8, 8, 8, 9, 9, 9,
	9, 9, 9, 9, 9, 10, 10, 10, 10, 10,
	11, 11, 11, 11, 13, 13, 13, 13, 13, 20,
	21, 12, 12, 22, 22, 106, 106, 23, 24, 24,
	24, 24, 413, 413, 183, 183, 181, 181, 182, 182,
	261, 261, 25, 265, 265, 267, 267, 267, 267, 257,
	257, 257, 26, 26, 266, 266, 268, 268, 268, 271,
	271, 271, 271, 310, 310, 310, 27, 27, 27, 27,
	27, 126, 126, 383, 383, 382, 376, 376, 375, 375,
	374, 379, 379, 378, 378, 377, 39, 40, 49, 49,
	49, 49, 50, 51, 384, 384, 349, 56, 56, 55,
	55, 55, 55, 55, 55, 57, 57, 53, 53, 52,
	52, 54, 54, 351, 351, 337, 337, 350, 350, 350,
	350, 350, 350, 350, 336, 336, 137, 137, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 399, 399, 399, 398, 398,
	236, 236, 236, 236, 236, 236, 236, 236, 147, 147,
	159, 159, 159, 159, 159, 145, 145, 146, 144, 144,
	144, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	158, 158, 154, 154, 154, 155, 155, 155, 156, 156,
	400, 400, 400, 400, 315, 315, 315, 315, 318, 318,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 317,
	317, 317, 317, 317, 319, 319, 319, 319, 319, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 321, 321, 321, 321, 321,
	321, 321, 321, 335, 335, 322, 322, 330, 330, 331,
	331, 331, 332, 332, 332, 333, 333, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 329, 329, 328, 328,
	328, 338, 363, 363, 362, 362, 360, 360, 360, 360,
	360, 360, 360, 360, 347, 347, 357, 357, 357, 357,
	357, 346, 346, 342, 342, 342, 343, 343, 344, 344,
	341, 341, 345, 345, 359, 359, 358, 358, 339, 339,
	340, 340, 365, 401, 401, 401, 401, 401, 402, 402,
	366, 391, 393, 393, 393, 392, 392, 389, 390, 388,
	388, 388, 388, 388, 82, 82, 82, 284, 284, 285,
	285, 355, 355, 354, 354, 354, 356, 356, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 279,
	279, 279, 387, 387, 387, 387, 387, 387, 386, 386,
	386, 352, 352, 352, 385, 385, 58, 58, 216, 216,
	404, 404, 405, 405, 405, 46, 46, 46, 46, 46,
	46, 45, 45, 45, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 47, 47, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 108, 108, 109, 109, 109,
	109, 111, 111, 111, 368, 368, 59, 59, 3, 3,
	171, 173, 174, 174, 172, 172, 172, 172, 172, 172,
	61, 61, 60, 60, 176, 175, 177, 177, 177, 1,
	1, 2, 2, 4, 4, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 334, 334, 334,
	367, 367, 369, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 114, 113, 113, 112, 115, 115, 115,
	115, 115, 115, 115, 115, 371, 371, 371, 62, 62,
	372, 323, 324, 325, 5, 6, 348, 370, 122, 122,
	29, 38, 38, 30, 30, 30, 30, 31, 31, 63,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 278, 278, 287, 287, 277, 277, 302, 302,
	302, 280, 280, 280, 281, 281, 397, 397, 397, 274,
	274, 65, 65, 65, 303, 303, 303, 303, 67, 67,
	406, 406, 407, 407, 408, 408, 408, 68, 69, 69,
	305, 305, 306, 306, 70, 71, 83, 83, 83, 83,
	83, 83, 83, 84, 84, 84, 84, 107, 107, 107,
	15, 15, 15, 15, 79, 79, 79, 14, 14, 17,
	66, 66, 73, 394, 394, 395, 396, 396, 396, 396,
	74, 76, 32, 32, 32, 32, 32, 32, 132, 132,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 127, 127, 127, 121, 121, 414, 77, 78,
	78, 125, 125, 125, 118, 118, 118, 124, 124, 124,
	16, 16, 18, 260, 260, 19, 19, 129, 129, 131,
	131, 131, 131, 131, 133, 133, 133, 133, 133, 133,
	133, 128, 128, 130, 130, 130, 130, 295, 295, 295,
	294, 294, 165, 165, 167, 166, 166, 168, 168, 169,
	169, 169, 169, 214, 214, 191, 191, 253, 253, 254,
	254, 252, 252, 259, 259, 255, 255, 255, 255, 262,
	262, 170, 170, 170, 170, 178, 178, 179, 179, 180,
	180, 304, 304, 300, 300, 300, 299, 299, 184, 184,
	184, 186, 185, 185, 185, 185, 187, 187, 189, 189,
	188, 188, 190, 195, 195, 194, 194, 192, 192, 192,
	192, 193, 193, 193, 193, 196, 196, 142, 142, 142,
	142, 142, 142, 142, 157, 157, 157, 157, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 243,
	243, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 151,
	219, 219, 218, 218, 85, 85, 85, 86, 86, 87,
	87, 87, 87, 87, 88, 88, 88, 88, 88, 143,
	143, 90, 90, 89, 89, 209, 209, 292, 292, 91,
	92, 92, 95, 95, 94, 93, 93, 99, 99, 96,
	96, 98, 98, 97, 100, 100, 101, 102, 102, 275,
	275, 197, 197, 205, 205, 205, 205, 198, 198, 198,
	198, 198, 198, 198, 206, 206, 206, 213, 207, 207,
	203, 203, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 162, 162,
	162, 162, 224, 224, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 150,
	150, 163, 163, 163, 163, 164, 164, 164, 164, 164,
	164, 164, 312, 312, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 415, 415, 326, 326, 326,
	326, 204, 204, 204, 204, 204, 123, 123, 123, 123,
	123, 309, 309, 309, 313, 313, 313, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 314, 314, 222, 222, 119, 119, 220, 220,
	221, 223, 223, 215, 215, 215, 215, 217, 217, 200,
	200, 200, 225, 225, 226, 226, 103, 104, 104, 105,
	105, 227, 227, 229, 228, 228, 230, 231, 231, 231,
	232, 232, 233, 233, 233, 48, 48, 48, 48, 48,
	43, 43, 43, 43, 44, 44, 44, 44, 134, 134,
	134, 134, 136, 136, 135, 135, 80, 80, 81, 81,
	81, 140, 140, 141, 141, 141, 138, 138, 139, 139,
	250, 250, 234, 234, 234, 241, 241, 241, 237, 237,
	239, 239, 239, 240, 240, 240, 238, 247, 247, 249,
	249, 248, 248, 244, 244, 245, 245, 246, 246, 246,
	242, 242, 199, 199, 199, 199, 199, 251, 251, 251,
	251, 263, 263, 210, 210, 212, 212, 211, 211, 161,
	264, 264, 272, 269, 269, 270, 270, 296, 296, 296,
	273, 273, 286, 286, 282, 282, 283, 283, 276, 276,
	288, 288, 288, 75, 208, 208, 364, 364, 361, 291,
	291, 293, 293, 297, 297, 301, 301, 298, 298, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 411,
	412, 307, 308, 308, 308,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 0, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 5,
	7, 10, 9, 7, 8, 1, 1, 10, 11, 9,
	8, 8, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 1, 3, 3, 3, 3, 3, 1,
	1, 2, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 5, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 0, 3, 3,
	2, 2, 2, 1, 2, 2, 0, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 1,
	1, 3, 3, 3, 0, 1, 4, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 4, 3, 1,
	3, 1, 7, 6, 7, 7, 8, 8, 0, 1,
	5, 2, 1, 1, 1, 0, 1, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 1, 2, 0,
	1, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 0, 2,
	0, 2, 0, 2, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 8, 5, 5, 4, 4, 4, 6, 5,
	5, 5, 2, 2, 2, 2, 3, 3, 3, 4,
	3, 3, 1, 3, 5, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 7, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 0, 6, 5, 6, 4,
	5, 0, 8, 9, 0, 3, 0, 1, 0, 3,
	8, 4, 1, 3, 3, 6, 7, 7, 8, 4,
	0, 1, 0, 1, 3, 3, 1, 1, 2, 1,
	1, 0, 2, 0, 2, 5, 3, 7, 4, 4,
	4, 4, 3, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 0, 2, 2,
	1, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 3, 1, 3, 3, 0, 2, 2,
	2, 2, 2, 2, 2, 4, 4, 3, 0, 1,
	4, 3, 4, 4, 3, 3, 3, 2, 1, 3,
	3, 3, 5, 7, 7, 6, 5, 3, 2, 3,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 2, 4, 4,
	4, 4, 4, 2, 3, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 3, 2, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	3, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 4, 4, 4,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 1, 2, 3, 7, 0, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 0, 2, 3, 3, 0, 2, 3, 3, 3,
	2, 3, 1, 6, 3, 4, 3, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 2, 2, 2, 1, 1, 2, 7,
	7, 6, 6, 2, 2, 1, 6, 3, 3, 3,
	1, 3, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 0, 1, 2, 5, 0, 3, 0, 1, 4,
	4, 2, 0, 1, 1, 2, 2, 1, 1, 2,
	2, 0, 1, 1, 1, 1, 5, 1, 3, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 4, 8, 6, 8, 6, 5, 4,
	10, 2, 2, 1, 2, 2, 2, 4, 5, 5,
	5, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 8, 8, 8, 6, 5, 4, 4,
	4, 4, 4, 7, 4, 4, 6, 6, 6, 8,
	6, 6, 4, 4, 3, 4, 6, 6, 4, 4,
	4, 6, 8, 6, 4, 6, 6, 8, 10, 7,
	8, 8, 9, 4, 4, 4, 4, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 4, 4, 6,
	5, 9, 6, 9, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 6, 8, 10, 12, 14, 6,
	8, 8, 10, 12, 14, 6, 8, 10, 12, 6,
	8, 4, 4, 3, 4, 6, 6, 4, 6, 4,
	6, 8, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 3,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 1, 3, 5, 1, 1, 1,
	2, 2, 0, 3, 0, 2, 2, 1, 3, 0,
	1, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 4, 1,
	1, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -409, -77, -414, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -64,
	-65, -67, -68, -69, -70, -71, -14, -17, -66, -32,
	-33, -72, -73, -74, -75, -76, -16, -18, -19, -9,
	-8, -13, 10, 11, -106, -34, 33, -39, -49, 225,
	-50, -40, 226, -51, 228, 227, 266, 229, 259, 75,
	314, 315, 317, 318, 319, 320, -107, 616, 264, 265,
	231, 37, 46, 34, 35, 38, 235, 272, 273, 234,
	-10, -35, 9, -411, 12, 448, 261, 260, 29, -12,
	510, 87, -78, -410, 664, -250, -234, 23, 34, 30,
	-233, -229, -125, -234, 21, 19, 8, -77, -77, -77,
	13, 14, -77, -349, -351, 87, 159, 87, -77, -56,
	-55, -53, -52, -54, -57, 32, -46, -47, -373, -45,
	-42, 230, 227, 276, 123, 124, 266, 267, 268, 229,
	250, 265, 269, 264, 285, -41, 82, 34, 510, 513,
	-356, 226, 232, 233, 228, 449, 126, 125, 76, -353,
	371, 543, 634, -57, 636, 101, 104, 635, 45, 240,
	637, 638, 639, 550, 640, 249, 641, 642, 643, 644,
	650, 591, 651, 652, 653, 127, 8, -77, -301, -297,
	91, -290, 507, 252, 541, 542, 301, 82, 42, 516,
	368, 371, 543, 478, 634, 314, 330, 324, 483, 484,
	485, 351, 343, 508, 544, 517, 304, 253, 289, 628,
	341, 135, 636, 308, 545, 267, 376, 377, 546, 378,
	101, 317, 415, 649, 307, 547, 647, 104, 635, 322,
	80, 477, 52, 631, 45, 262, 339, 234, 335, 637,
	290, 548, 519, 283, 126, 123, 656, 37, 333, 51,
	31, 646, 125, 50, 638, 150, 549, 639, 550, 380,
	358, 622, 49, 381, 268, 551, 85, 273, 237, 512,
	311, 630, 382, 497, 334, 383, 300, 645, 231, 552,
	611, 603, 604, 384, 385, 623, 363, 359, 364, 499,
	553, 407, 482, 386, 607, 608, 663, 53, 554, 555,
	624, 124, 556, 79, 640, 81, 328, 329, 557, 298,
	251, 502, 503, 409, 355, 460, 467, 468, 111, 112,
	463, 113, 469, 114, 470, 471, 472, 461, 115, 108,
	462, 473, 474, 356, 357, 116, 475, 110, 109, 464,
	466, 117, 476, 249, 36, 387, 509, 302, 59, 306,
	277, 410, 47, 361, 660, 46, 618, 504, 558, 621,
	354, 350, 457, 54, 559, 560, 561, 562, 479, 641,
	353, 327, 349, 655, 4, 295, 480, 642, 63, 233,
	366, 365, 367, 284, 406, 346, 563, 564, 565, 256,
	83, 566, 336, 22, 567, 568, 388, 291, 569, 57,
	570, 571, 413, 265, 572, 55, 643, 40, 573, 270,
	657, 644, 574, 575, 576, 617, 577, 272, 578, 390,
	579, 605, 606, 389, 360, 362, 505, 279, 391, 236,
	511, 580, 312, 332, 269, 648, 581, 257, 493, 494,
	495, 496, 629, 501, 500, 271, 276, 264, 414, 258,
	582, 583, 584, 585, 586, 305, 602, 587, 588, 318,
	650, 458, 44, 589, 590, 591, 592, 593, 299, 294,
	408, 417, 62, 84, 373, 594, 595, 627, 326, 323,
	292, 596, 315, 56, 651, 652, 653, 286, 654, 486,
	487, 488, 489, 10, 661, 662, 481, 393, 127, 296,
	297, 48, 347, 278, 597, 309, 598, 337, 338, 352,
	325, 348, 614, 316, 612, 280, 394, 459, 266, 599,
	416, 293, 369, 374, 310, 515, 498, 285, 395, 626,
	514, 490, 491, 345, 342, 287, 492, 600, 616, 396,
	241, 281, 282, 601, 613, 397, 398, 303, 399, 400,
	401, 402, 403, 405, 313, 404, 615, 609, 610, 288,
	513, 321, 340, 375, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 456, 239, -77, 239, -188, -297, 239, -269,
	377, -287, 379, 392, 387, 397, 385, -278, 388, 390,
	279, -397, 407, 239, 394, 225, 380, 389, 398, 399,
	303, 405, 400, 313, 404, 288, 401, 402, 403, -380,
	177, 639, 654, 135, 344, 384, 382, 408, 618, 91,
	-303, 91, 92, 93, -290, 316, -305, 321, -291, -380,
	-290, 319, -77, -77, -307, -307, -127, 618, 620, -207,
	-142, 143, -157, -160, -148, -152, -201, -202, -203, -204,
	-158, -217, -256, 166, 167, 174, 144, -213, -161, 27,
	506, 450, 449, 177, 32, -151, 220, 69, 70, 452,
	146, 58, 12, 425, 426, -159, 420, 427, 422, 477,
	479, 480, 481, 478, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 482, 454, 455, 118, 456, 108,
	110, 109, 457, 458, 459, 341, 504, 505, 499, 502,
	503, 501, 500, 356, 357, 460, 461, 462, 111, 112,
	113, 114, 115, 116, 117, 463, 466, 464, 465, 467,
	468, 469, 474, 475, 470, 471, 472, 473, 476, -87,
	-99, 532, 531, -100, -149, -150, -163, -164, -291, -297,
	244, 419, 238, 172, 448, -153, -146, -215, 107, 92,
	93, -8, -211, 418, 423, 424, 428, 421, 518, 520,
	535, 536, 538, 523, 528, 527, 530, 493, 494, 495,
	496, 497, 498, 603, 604, 605, 606, 607, 608, 609,
	610, -380, -290, 91, -155, -154, -197, 94, 99, 102,
	103, 105, -403, 262, 337, 338, 119, -411, 632, 90,
	95, 96, 97, 98, 120, 121, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 45, 393,
	393, -188, -77, -77, -77, -77, -227, -125, -229, -10,
	-8, -411, 9, -77, -8, -9, -13, -35, -37, 537,
	-36, -297, 100, -234, -250, 13, 162, 43, 51, -232,
	-233, -12, -8, -142, 20, 24, 25, -130, 168, -142,
	-297, -130, -276, 243, -77, -77, -265, -310, 316, -267,
	408, 618, 407, -257, -270, 91, -256, -269, 406, -350,
	159, -336, -340, -291, 254, -366, 250, -188, -359, -358,
	-291, -411, -126, -286, 240, 248, 247, 136, -384, 139,
	296, 419, 238, -52, -53, -54, -269, 176, 638, -108,
	271, 275, 88, 88, -340, -339, -338, -385, 275, 254,
	-365, -357, 246, 255, -346, 247, 248, -341, 240, 137,
	-385, -341, 245, 255, 250, 254, 275, 275, 127, 275,
	127, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	270, -347, 151, -347, 514, 514, -353, -385, 250, 240,
	-385, -385, 246, -288, -341, 242, 26, 242, 36, 36,
	-347, -347, -347, -269, 176, -347, -347, -347, -347, 283,
	283, -347, -347, -347, -347, -347, -347, -347, -347, -347,
	-347, -347, -347, -347, -347, -347, -347, -347, 239, -384,
	-134, 404, 303, 82, -55, 285, -38, -188, -286, 240,
	241, -384, 272, -188, 221, -188, -280, 159, 16, -280,
	-277, 393, 391, 378, 383, -280, -280, -280, -280, 286,
	376, -342, 240, 36, 251, 393, 286, 376, 286, 287,
	286, 287, 386, 396, 286, -302, 15, 162, 419, 381,
	385, 279, 239, 280, 241, 395, 287, -302, 90, -281,
	159, 286, 393, 282, -280, -280, -308, -411, -293, -291,
	-289, 230, 24, 142, 26, 28, 145, 177, 130, 20,
	146, 38, 232, 344, 250, 176, 246, 449, 225, 73,
	518, 420, 422, 418, 425, 451, 452, 419, 379, 32,
	14, 520, 29, 260, 25, 39, 170, 227, 149, 521,
	263, 27, 261, 118, 121, 523, 23, 76, 255, 15,
	248, 41, 17, 524, 525, 18, 244, 243, 162, 240,
	71, 12, 220, 30, 158, 67, 526, 137, 527, 528,
	529, 530, 131, 69, 159, 21, 658, 423, 424, 34,
	619, 506, 274, 172, 74, 60, 620, 143, 421, 531,
	532, 119, 533, 122, 77, 625, 139, 19, 72, 43,
	534, 275, 535, 245, 659, 536, 411, 537, 160, 228,
	448, 70, 161, 632, 538, 633, 238, 392, 9, 453,
	33, 259, 247, 129, 68, 539, 239, 148, 454, 455,
	242, 132, 120, 8, 136, 35, 13, 75, 78, 426,
	427, 428, 58, 128, 510, 147, 16, 540, 412, 141,
	-380, 621, -308, -308, 33, 92, -406, -407, -408, 510,
	411, 242, -291, -188, -83, 611, 229, -84, 617, 24,
	236, -132, 393, -120, 177, 639, 622, 623, 624, 621,
	390, 629, 627, 625, 286, 626, 88, 139, 141, 142,
	4, -142, 158, -198, 151, 152, 153, 154, 155, 156,
	157, 162, 143, 145, 159, -243, 140, 163, 164, 165,
	166, 167, 168, 169, 171, 170, 172, 173, 160, 161,
	176, 223, 224, -152, -152, -152, -152, -213, -219, -218,
	-411, -215, -380, -290, -297, -411, -411, -152, -275, -411,
	-411, -152, -411, -411, -411, -222, -142, -411, -411, -415,
	-411, -415, -415, -326, -411, -326, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, 221, -411, -411, -411, -411, -411, -326, -326,
	-326, -326, -326, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, 103, 99, 102,
	94, -217, 105, 90, 90, 90, 90, -8, -9, -207,
	-411, -307, -394, -395, -191, -188, -411, 303, -291, -291,
	272, -232, -12, -8, -227, -233, -229, -8, -77, -118,
	-131, 64, 65, -133, 25, 39, 68, 66, 24, -412,
	89, -412, -250, -412, 88, -37, -253, 87, 62, 44,
	90, 90, 88, 22, -228, -230, -142, 15, -295, 4,
	-294, 26, -291, 90, 221, 15, -189, 30, -188, -276,
	-276, 88, 91, 316, -266, -268, 409, 411, 151, -296,
	-291, 90, 32, 89, 88, -188, -315, -318, -320, -319,
	-321, -316, -317, 341, 342, 177, 345, 347, 348, 349,
	350, 351, 352, 353, 354, 355, 358, 33, 262, 337,
	338, 339, 340, 359, 360, 361, 362, 364, 365, 366,
	367, 324, 343, 508, 325, 326, 327, 328, 329, 330,
	332, 333, 334, 335, 336, -381, -380, 87, 89, 88,
	-322, 87, -142, -134, 239, -380, 240, 240, 240, -77,
	448, -347, -347, -347, 270, 20, -45, -42, -373, 19,
	-41, -42, 230, 123, 124, 227, 87, -336, 87, -345,
	-381, -380, 87, 137, 245, 136, -344, -341, -344, -345,
	-380, -215, -380, 137, 137, -380, -380, -262, -291, -262,
	-262, 24, -262, 24, -262, 24, 96, -291, -262, 24,
	-262, 24, -262, 24, -262, 24, -262, 24, 32, 79,
	80, 81, 32, 83, 84, 85, -215, -380, -380, -215,
	-336, -215, -188, -380, -269, 96, 96, 96, -347, -347,
	96, 90, 90, 90, -347, -347, 96, 90, -299, -297,
	90, 90, -386, 256, 300, 302, 96, 96, 96, 96,
	32, 90, -387, 32, 646, 645, 647, 648, 649, 90,
	96, 32, 96, 32, 96, -291, 87, -188, -140, 290,
	225, 227, 230, 77, 90, 306, 307, 304, 309, 310,
	151, 45, 88, 242, 239, -380, -282, 244, -282, -291,
	-298, -297, -289, 90, -142, -343, 15, 162, -302, -302,
	-280, -188, -343, -302, -280, -188, -280, -280, -280, -280,
	-302, -302, -302, -280, -297, -297, -188, -188, -188, -188,
	-188, -188, -188, -308, -281, -280, 621, 90, -274, 15,
	77, -308, -308, 88, 322, 412, 413, -306, 319, -79,
	-291, 90, -15, -11, -23, -22, -24, 151, -15, 88,
	510, -181, -188, 621, 621, 621, 621, 621, 621, -142,
	-142, -142, -142, 533, -205, 119, 143, 120, 121, -160,
	-206, -211, -213, 106, 162, 145, 159, -243, -148, -152,
	-148, -148, -148, -148, -148, -148, -148, -148, -148, -148,
	-148, -148, -148, -309, -291, 90, 177, -156, -155, 105,
	-403, -156, 507, 88, -218, 221, -142, -142, -380, -142,
	-291, -128, -130, -128, -142, -220, -221, 147, -215, -142,
	-412, -412, 96, 105, 168, -124, 25, 39, -124, -124,
	-124, -124, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -124, -291, -291, -117, -116, 430, 431, 432,
	433, 435, 436, 437, 440, 441, 445, 446, 429, 447,
	434, 439, 442, 443, 444, 438, 340, -142, -142, -142,
	-142, -142, -142, -85, -142, 130, 131, 132, -207, -142,
	-148, -142, -142, -142, -412, -142, -142, -142, -208, -207,
	-379, -378, -377, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -412, -142, -162, -146,
	96, -258, 105, 92, -142, -142, -129, -128, -293, -298,
	-289, -290, -128, -129, -129, -128, -128, -142, -142, -142,
	-142, -142, -142, -142, -142, -412, -142, -142, -142, -142,
	-142, -250, -412, -207, 88, -396, 411, 412, 619, -300,
	275, -299, 26, -208, 90, 15, -260, 78, -291, -232,
	-232, 64, 65, 60, -128, -133, -412, -36, 26, -252,
	-291, 63, 90, -327, -269, 368, 369, 177, -142, -142,
	88, -231, 28, 29, -188, -294, 168, -298, -188, -261,
	275, -188, -166, -168, -169, -170, -191, -214, -411, -171,
	-8, 529, 526, 15, -181, -182, -190, -297, -267, -310,
	-266, 88, 410, 412, 413, 77, 122, -142, -328, 176,
	-355, -354, -353, -336, -338, -339, -340, 89, -328, -332,
	374, 373, -322, -322, -322, -322, -322, -327, -327, -327,
	-327, 87, 87, -322, -322, -322, -322, -330, 87, -330,
	-330, -331, 87, -331, -366, -142, -363, -362, -360, -361,
	249, 101, 601, 557, 510, 550, 591, 78, -358, -231,
	96, -412, -140, -283, 244, -364, -361, -380, -380, -380,
	-283, 91, 90, 91, 90, 91, 90, -109, -59, -1,
	658, 659, 660, 88, 20, -337, -336, -58, 300, -369,
	-370, 275, -365, -359, -345, 137, -344, -345, -345, -380,
	88, 30, 127, 127, 127, 127, 510, 227, 33, -284,
	549, 143, 601, 557, -336, -58, 242, 242, -309, -309,
	-309, 90, 90, -279, 654, -181, -136, 292, 151, 281,
	281, 239, 239, 294, -188, 305, 308, 306, 307, 304,
	309, 310, 24, 24, 24, 24, 24, 293, 295, 297,
	283, -188, -188, -282, 77, -183, -188, 27, -297, -188,
	-280, -280, -188, -280, -280, -188, -408, 323, -291, 355,
	612, 613, 615, 614, -120, 411, 88, 510, 23, -121,
	23, -411, 119, 120, 121, -206, -148, -152, -148, 142,
	263, -411, -215, -412, -293, 26, 88, 78, -412, 88,
	88, -412, -412, 88, 15, -223, -221, 149, -142, -412,
	88, -412, -412, -412, -207, -142, -142, -142, -142, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -207,
	88, 88, 15, -313, 26, -412, -412, -412, -412, -412,
	-222, -412, 15, -412, 78, 88, 162, 88, -412, -412,
	-412, 88, 88, -412, -412, 88, 88, -412, 88, 88,
	88, -412, 88, 88, 88, 88, -412, -412, -412, -412,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	-412, -92, 534, -412, -412, 88, -412, 88, -412, -411,
	221, -412, -412, -412, -412, -412, 88, 88, 88, 88,
	88, 88, -412, -412, -412, 88, 88, -412, 88, -412,
	88, -412, -395, 618, 412, -195, -194, -192, 75, 243,
	76, -411, -299, -412, -156, -258, -259, -258, -200, -291,
	96, 105, -234, -165, -167, 15, -133, -213, 89, 88,
	-327, -238, -244, -277, -291, 90, 177, -329, 177, -329,
	368, 369, -230, 221, -196, 16, -199, 33, 58, -11,
	-411, -411, 33, 88, -184, -186, -185, -187, 67, 71,
	73, 68, 69, 70, 74, -304, 26, -8, -166, -8,
	-411, -188, -181, -413, 15, 78, -413, 88, 221, -268,
	-271, 414, 411, 417, -380, 90, -108, 88, -353, -340,
	-235, -137, 41, -333, 375, -327, 517, -327, -335, 90,
	-335, 96, 96, 89, -48, -43, -44, 34, 82, -360,
	-347, 90, 40, -347, -347, -291, 89, -231, -136, -188,
	143, 77, -364, -364, -364, -297, -2, 657, 663, 137,
	87, 378, 19, -252, 88, 89, -216, 301, 89, -110,
	-291, 89, 87, -345, -345, -291, -411, 239, 32, 32,
	601, 557, 549, -58, -216, -215, -380, -328, 656, 655,
	89, 241, 299, -141, 425, -138, 90, 91, -188, -188,
	-188, -188, -188, 230, 227, 401, -404, 311, -404, 284,
	242, -181, -188, 88, -82, 258, 253, -302, -302, 34,
	-188, 411, 630, 628, -142, 142, 263, -160, -152, -148,
	-311, 177, 341, 262, 339, 335, 355, 346, 373, 337,
	374, 334, 333, 332, -311, -309, -207, -130, -142, -142,
	150, -142, 148, -142, -412, -412, -412, -412, -412, -227,
	-142, -142, -142, -412, 177, 341, 15, -142, -309, -142,
	-142, -142, -142, -142, -377, -142, -207, -142, -207, -142,
	-142, -142, -142, -142, -378, -378, -378, -378, -378, -207,
	-207, -207, -207, -411, -291, -95, -94, -93, 584, 243,
	-92, -162, -95, -162, -129, -293, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -192, -341, -341, -341,
	-262, 88, -273, 23, 15, 58, 58, -165, -196, -166,
	-133, -291, -241, 611, -247, 47, -245, -246, 48, -242,
	49, 57, -329, -329, 168, -232, -142, -263, 77, -264,
	-272, -215, -210, -212, -211, -411, -251, -412, -291, -262,
	-264, -168, -169, -169, -168, -169, 67, 67, 67, 72,
	67, 72, 67, -185, -297, -412, -142, -300, 78, -166,
	-166, -190, -297, 168, 411, 415, 416, -353, -402, 119,
	143, 32, 77, 371, 101, -400, 176, 546, 596, 601,
	557, 550, 591, -401, 245, 136, 137, 257, 26, 42,
	89, 88, 89, 88, 89, 88, -285, -284, -44, -43,
	-347, -347, 96, -380, 90, 90, 241, 27, -188, 77,
	77, 77, -111, 661, 96, 87, -3, 82, -142, 87,
	20, -336, -215, -371, -323, -372, -324, -325, -5, -6,
	-348, -114, 58, 101, -62, 45, 240, 641, 642, 127,
	-411, 654, -363, -252, -367, -369, -188, -145, -411, -144,
	-146, -153, 166, 167, 262, 337, 338, -216, -188, -135,
	290, 298, 87, -139, 92, -383, 78, 281, 371, 281,
	90, -405, 312, 90, -405, -188, -82, -48, -188, -280,
	-280, 34, -380, -412, -160, -152, -123, 162, 510, -314,
	516, -322, -322, -322, -331, -322, 329, -322, 329, -322,
	-412, -412, -412, 88, -412, 23, -412, -142, 88, -119,
	453, 88, 88, -412, 87, 87, -142, -412, -412, -412,
	88, -412, -412, -412, -412, -412, 88, -412, -412, -412,
	88, -312, 602, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -91, -292, -291, -92, 566, 566, -412,
	-92, -224, 88, -412, -412, 88, -412, 88, 88, -412,
	88, -412, 88, -412, -412, -412, -412, 88, -193, 23,
	-193, -193, -412, -258, -188, -196, -225, 17, -238, 52,
	347, -249, -248, 56, 48, -246, 20, 50, 20, 31,
	-263, 88, 151, 88, -412, -412, 88, 58, 221, -412,
	-196, -179, -178, 77, 78, -180, 77, -178, 67, 67,
	-253, 88, -261, -166, -196, -196, 221, 119, -411, -147,
	-159, -145, 13, 90, 90, -380, -399, 645, 646, 32,
	96, -347, -347, 137, 137, -188, 87, -327, 90, -327,
	96, 96, 32, 83, 84, 85, 32, 79, 80, 81,
	-188, -188, -188, -188, -368, 87, 20, -142, 87, 151,
	89, -252, -252, 277, 162, -347, 639, 283, 283, -347,
	-347, -347, -113, -112, 661, 89, -412, 88, -334, 510,
	513, -142, -154, -154, -253, 89, -376, 510, -382, -291,
	-291, -291, -291, 96, 98, -412, 508, 74, 511, -412,
	-327, -142, -142, -142, -232, 90, -142, -142, 96, 96,
	-412, -142, -207, -142, -412, -176, -175, -177, 622, 119,
	32, -311, -412, -209, 275, -98, -97, -96, 15, -412,
	-142, -142, -142, -142, -142, -142, -142, -411, 67, 19,
	17, -411, -411, -300, -225, -226, 18, 20, -239, 54,
	-237, 53, -237, -248, 20, 20, 90, 20, 90, 137,
	-272, -142, -212, 58, -11, -291, -210, -291, -227, -142,
	87, -142, -156, -196, -196, -142, -202, 477, 479, 480,
	481, 478, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 482, 456, 108, 110, 109, 457, 458, 459,
	341, 504, 505, 499, 502, 503, 501, 500, 356, 357,
	460, 461, 462, 111, 112, 113, 114, 115, 116, 117,
	463, 466, 464, 467, 468, 469, 474, 475, 470, 471,
	472, 473, 476, 493, 494, 495, 496, 497, 498, 603,
	604, 605, 606, 607, 608, 609, 610, 90, 90, 87,
	-142, 89, 89, -253, -367, -59, 89, -254, -252, 96,
	89, 278, -211, -411, 90, -347, -347, -347, 96, 96,
	-299, -412, 88, -291, -401, -369, 514, 514, -412, 26,
	-375, -374, -293, 87, 78, 63, 509, 512, -412, -412,
	88, -412, -412, -412, 89, 89, -412, -412, -412, 88,
	-412, -175, -177, -412, 77, -156, -227, 20, -95, 300,
	302, -95, -412, 88, -412, -412, 88, -412, 88, -412,
	-412, -255, -412, -291, 245, 20, 20, -255, -255, -195,
	-226, -105, -104, -103, 540, -142, -207, -240, 55, 77,
	122, 90, 90, 90, 13, -210, 221, -232, -252, -173,
	378, -227, -412, -252, 89, 26, 89, 663, 137, 89,
	-211, -122, -411, 274, -299, 90, 90, -112, -115, -11,
	88, 151, -252, -188, 63, -142, -207, -412, 77, 521,
	622, -90, -89, -86, 633, 659, -207, -92, -92, -142,
	-142, -142, 88, -412, -412, -412, -105, 88, -102, -101,
	-291, 77, 122, -264, -291, 89, -412, -411, -232, 89,
	-236, -11, 87, -3, 274, -323, -372, -324, -325, -5,
	-6, -348, -80, 510, -374, -352, -293, 90, 96, 89,
	510, -412, -412, -88, 145, 631, 599, -143, -154, -151,
	220, -412, 88, -412, 88, -412, 88, -291, 245, -103,
	88, 26, -300, -174, -172, -291, 563, -392, -391, 506,
	-402, -398, 119, 143, 101, -400, 601, 557, 128, 129,
	-80, -142, 87, -412, -81, 289, 618, -383, 511, -88,
	632, 577, 552, 577, 552, -142, -142, -142, -101, -411,
	-412, 88, 23, -315, -61, 574, -389, -390, 77, -393,
	384, 573, 594, 119, 90, 89, -252, 250, -376, 512,
	142, -412, 88, -412, 88, -412, -91, -172, 570, -328,
	-156, -390, 77, -389, 77, 14, 13, -4, 662, 89,
	291, -88, -142, -142, -412, -60, 27, -173, -388, 258,
	253, 256, 33, -388, 96, -4, -412, -412, 574, 252,
	32, 119, -156, -176, -175, -175,
}

var yyDef = [...]int{
	867, -2, -2, 869, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 70,
	72, 73, 867, 867, 867, 0, 867, 0, 0, 867,
	-2, -2, 867, 1475, 0, 867, 0, 0, -2, 782,
	788, 0, 797, -2, 0, 0, 867, 867, 2031, 2031,
	862, 0, 0, 0, 0, 0, 867, 867, 867, 867,
	1341, 50, 867, 0, 85, 86, 817, 818, 819, 65,
	0, 2029, 868, 1, 3, 71, 75, 0, 0, 0,
	58, 1350, 0, 78, 0, 0, 871, 0, 0, 1458,
	867, 867, 0, 126, 127, 0, 0, 0, -2, 130,
	-2, 159, 160, 161, 0, 166, 595, 518, 570, 516,
	555, -2, 504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 394, 394, 0, 0,
	-2, 504, 504, 504, 1460, 0, 0, 0, 552, 456,
	394, 394, 394, 0, 394, 394, 394, 394, 0, 0,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 1368, 165, 1476,
	1473, 1474, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815,
	1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825,
	1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835,
	1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845,
	1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855,
	1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865,
	1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875,
	1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885,
	1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895,
	1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905,
	1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915,
	1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925,
	1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
	1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945,
	1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955,
	1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965,
	1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975,
	1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985,
	1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995,
	1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,
	2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015,
	2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025,
	2026, 2027, 2028, 0, 1452, 0, 708, 970, 0, 771,
	771, 0, 771, 771, 771, 771, 0, 0, 0, 720,
	0, 0, 0, 0, 768, 0, 736, 737, 0, 768,
	0, 743, 774, 0, 0, 749, 771, 771, 752, 2032,
	0, 2032, 2032, 1443, 0, 765, 763, 777, 778, 40,
	781, 784, 785, 786, 787, 790, 0, 801, 804, 1469,
	1470, 0, 806, 813, 830, 831, 0, 863, 864, 45,
	1118, 0, 992, 997, 1008, 1023, 1024, 1025, 1026, 1027,
	1029, 1030, 1031, 0, 0, 0, 0, 1036, 1037, 0,
	0, 0, 0, 0, 1099, 1045, 0, 0, 0, 0,
	1314, 0, 0, 1275, 1275, 1133, 1275, 1277, 1277, 1677,
	1814, 1822, 1942, 1639, 1644, 1645, 1646, 1935, 1936, 1937,
	1938, 1977, 1978, 1982, 1738, 0, 0, 0, 2028, 1775,
	1783, 1784, 1808, 1907, 1963, 1656, 1803, 1872, 1735, 1757,
	1758, 1889, 1890, 1779, 1780, 1761, 1773, 1776, 1764, 1765,
	1767, 1769, 1774, 1781, 1787, 1766, 1786, 1785, 0, 1762,
	1763, 1768, 1778, 1782, 1770, 1771, 1772, 1777, 1788, 0,
	0, 0, 0, 0, 1214, 1215, 1216, 1217, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 1327, 1328, 43,
	44, 1117, 1439, 1277, 1277, 1277, 1277, 1277, 1059, 1060,
	1061, 1062, 1063, 1087, 1088, 1094, 1095, 1884, 1885, 1886,
	1887, 1719, 1972, 1727, 1728, 1867, 1868, 1740, 1741, 2003,
	2004, -2, -2, -2, 231, 232, 233, 234, 235, 236,
	237, 238, 0, 1681, 1953, 1954, 227, 0, 0, 295,
	296, 292, 293, 294, 1101, 1102, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 274, 275, 276, 277, 278, 279, 280, 281,
	282, 283, 284, 285, 286, 287, 288, 289, 2031, 0,
	840, 0, 0, 0, 0, 0, 1350, 0, 1342, 1341,
	63, 0, 867, -2, 0, 0, 0, 0, 47, 0,
	52, 927, 870, 77, 76, 1390, 0, 0, 0, 59,
	1351, 67, 69, 1352, 0, 872, 873, 0, 903, 907,
	0, 0, 0, 1459, 1458, 1458, 102, 0, 0, 103,
	123, 124, 125, 0, 0, 109, 110, 1445, 1446, 0,
	0, 177, 178, 0, 41, 421, 0, 173, 0, 414,
	355, 0, 1368, 0, 0, 0, 0, 0, 867, 0,
	1453, 154, 155, 162, 163, 164, 394, 394, 394, 567,
	0, 0, 165, 165, 525, 526, 527, 0, 0, -2,
	419, 0, 505, 0, 0, 408, 408, 412, 410, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 544, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	656, 0, 395, 0, 565, 566, 457, 0, 0, 0,
	0, 0, 0, 0, 0, 1461, 1462, 0, 542, 543,
	0, 0, 0, 394, 394, 0, 0, 0, 0, 394,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	1381, 0, 0, 0, -2, 0, 700, 0, 0, 0,
	1454, 1454, 0, 707, 0, 709, 710, 0, 0, 711,
	0, 768, 768, 766, 767, 713, 714, 715, 716, 771,
	0, 0, 403, 404, 405, 768, 771, 0, 771, 771,
	771, 771, 768, 768, 768, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 774, 771, 0, 744,
	0, 745, 746, 747, 750, 751, 753, 2033, 2034, 1471,
	1472, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	2032, 2032, 757, 761, 1444, 783, 789, 791, 792, 0,
	0, 802, 805, 824, 49, 1726, 812, 49, 814, 815,
	816, 842, 843, 848, 0, 0, 0, 0, 854, 855,
	856, 0, 0, 859, 860, 861, 0, 0, 0, 0,
	0, 990, 0, 0, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1009, 1010,
	0, 0, 0, 1032, 1033, 1034, 1035, 1038, 0, 1050,
	0, 1052, 1323, -2, 0, 0, 0, 1043, 1044, 0,
	0, 0, 0, 0, 0, 0, 1315, 0, 0, 1131,
	0, 1132, 1134, 1135, 0, 1136, 877, 877, 877, 877,
	877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1464, 141, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 887, 0, 0, 887, 887, 0, 0, 220, 221,
	222, 223, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 240, 241,
	242, 243, 244, 297, 245, 246, 247, 1117, 0, 0,
	0, 46, 832, 833, 0, 953, 1464, 0, 0, 883,
	0, 57, 66, 68, 1350, 61, 1350, 0, 889, 0,
	0, -2, -2, 890, 896, 897, 898, 899, 900, 54,
	2030, 55, 0, 74, 0, 48, 0, 0, 0, 0,
	367, 1393, 0, 0, 1343, 1344, 1347, 0, 904, 1820,
	908, 0, 910, 911, 0, 0, 100, 0, 969, 0,
	0, 0, 111, 0, 113, 114, 0, 0, 0, 378,
	1447, 1448, 1449, -2, 401, 0, 378, 362, 305, 306,
	307, 355, 309, 355, 355, 355, 355, 367, 367, 367,
	367, 338, 339, 340, 341, 342, 0, 0, 324, 355,
	355, 355, 355, 345, 346, 347, 348, 349, 350, 351,
	352, 310, 311, 312, 313, 314, 315, 316, 317, 318,
	357, 357, 357, 359, 359, 0, 42, 0, 382, 0,
	1347, 0, 0, 1381, 1456, 1466, 0, 0, 0, 1456,
	132, 0, 0, 0, 568, 606, 519, 556, 569, 0,
	522, 523, -2, 0, 0, 504, 0, 506, 0, 402,
	0, -2, 0, 412, 0, 408, 412, 409, 412, 400,
	413, 546, 547, 548, 0, 550, 551, 636, 939, 0,
	0, 0, 0, 0, 642, 643, 644, 0, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 557, 558,
	559, 560, 561, 562, 563, 564, 0, 0, 0, 0,
	506, 0, 553, 0, 0, 458, 459, 460, 0, 0,
	463, 464, 465, 466, 0, 0, 469, 470, 471, 956,
	957, 472, 473, 498, 499, 500, 474, 475, 476, 477,
	478, 479, 480, 492, 493, 494, 495, 496, 497, 481,
	482, 483, 484, 485, 486, 489, 0, 147, 1372, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1454, 0, 0, 0, 0, 886,
	971, 1477, 1478, 772, 773, 0, 406, 407, 771, 771,
	717, 758, 0, 771, 721, 759, 722, 724, 723, 725,
	738, 739, 771, 728, 769, 770, 729, 730, 731, 732,
	733, 734, 735, 754, 740, 741, 742, 775, 0, 779,
	780, 755, 756, 0, 0, 795, 796, 0, 803, 827,
	825, 826, 828, 820, 821, 822, 823, 0, 829, 0,
	0, 845, 96, 850, 851, 852, 853, 865, 858, 1119,
	987, 988, 989, 0, 991, 994, 0, 1103, 1105, 996,
	998, 1114, 1115, 1116, 0, 0, 0, 0, 0, 1002,
	1006, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1028, 1291, 1292, 1293, 1047, 298, 299,
	0, 1048, 0, 0, 0, 0, 0, 0, 0, 1118,
	1049, 0, 901, 0, 0, 1321, 1318, 0, 0, 0,
	1276, 1278, 0, 0, 0, 0, 878, 879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1294, 0, 0,
	0, 0, 0, 1314, 0, 1054, 1055, 1056, 0, 0,
	0, 0, 0, 0, 1174, 0, 0, 0, 0, 1465,
	0, 142, 143, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1218,
	1219, 1220, 1221, 39, 0, 0, 0, 888, 1325, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1243, 0, 0, 0, 0,
	0, 0, 1437, 0, 0, 835, 836, 838, 0, 973,
	0, 954, 0, 0, 841, 0, 882, 0, 885, 60,
	62, 894, 895, 0, 912, 891, 56, 51, 0, 0,
	931, 1391, 367, 1413, 0, 376, 376, 373, 1353, 1354,
	0, 1346, 1348, 1349, 79, 909, 905, 0, 985, 0,
	0, 968, 0, 915, 917, 918, 919, 951, 0, 922,
	923, 0, 0, 0, 0, 0, 98, 970, 104, 0,
	112, 0, 0, 117, 118, 105, 106, 107, 108, 0,
	595, -2, 453, 179, 181, 182, 183, 174, -2, 365,
	363, 364, 308, 367, 367, 332, 333, 334, 335, 336,
	337, 0, 0, 325, 326, 327, 328, 319, 0, 320,
	321, 322, 0, 323, 420, 0, 1355, 383, 384, 386,
	394, 0, 389, 390, 0, 394, 394, 0, 415, 416,
	0, 1347, 1372, 0, 0, 0, 1467, 1466, 1466, 1466,
	0, 167, 168, 169, 170, 171, 172, 631, 0, 0,
	607, 629, 630, 165, 0, 0, 175, 508, 507, 0,
	663, 0, 418, 0, 0, 412, 412, 397, 398, 549,
	0, 0, 638, 639, 640, 641, 0, 0, 0, 535,
	447, 0, 536, 537, 506, 508, 0, 0, 378, 461,
	462, 467, 468, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 583, 584, 587, 589,
	510, 593, 586, 588, 590, 510, 594, 1369, 1370, 1371,
	0, 0, 701, 0, 0, 444, 94, 1455, 706, 768,
	727, 760, 768, 719, 726, 748, 793, 794, 799, 807,
	808, 809, 810, 811, 849, 0, 0, 0, 0, 857,
	0, 0, 995, 1104, 1106, 999, 0, 1003, 1007, 0,
	0, 0, 1053, 1051, 1325, 0, 0, 0, 1100, 0,
	0, 1122, 1123, 0, 0, 0, 1319, 0, 0, 1129,
	0, 1279, 1280, 1137, 0, 0, 0, 0, 0, 1143,
	1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1341,
	0, 0, 0, 0, 0, 1158, 1159, 1160, 1161, 1162,
	0, 1164, 0, 1165, 0, 0, 0, 0, 1172, 1173,
	1175, 0, 0, 1178, 1179, 0, 0, 1180, 0, 0,
	0, 1184, 0, 0, 0, 0, 1193, 1194, 1195, 1196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1207, 1208, 0, 1082, 0, 0, 1082, 0, 1120, 887,
	0, 1281, 1282, 1283, 1284, 1285, 0, 0, 0, 0,
	0, 0, 1241, 1242, 1244, 0, 0, 1247, 0, 1249,
	0, 1438, 834, 837, 839, 925, 974, 975, 0, 0,
	0, 0, 955, 1463, 880, 881, 884, 933, 0, 1329,
	0, 0, 912, 985, 913, 0, 892, 53, 928, 0,
	1395, 1394, 1407, 1420, 376, 376, 370, 371, 377, 372,
	374, 375, 1345, 0, 1350, 0, 1431, 0, 0, 1423,
	0, 0, 0, 0, 0, 0, 0, 0, 958, 0,
	0, 961, 0, 0, 0, 0, 952, 923, 0, 924,
	0, -2, 0, 0, 92, 93, 0, 0, 0, 115,
	116, 0, 0, 122, 379, 380, 156, 165, 455, 180,
	428, 0, 0, 304, 366, 329, 330, 331, 0, 353,
	0, 0, 0, 449, 128, 1359, 1358, 394, 394, 385,
	0, 388, 0, 0, 0, 1468, 356, 417, 0, 146,
	0, 0, 0, 0, 0, 152, 601, 0, 0, 608,
	0, 0, 0, 517, 0, 528, 529, 0, 635, -2,
	697, 382, 0, 396, 399, 940, 0, 0, 530, 0,
	533, 534, 448, 508, 539, 540, 554, 541, 490, 491,
	488, 0, 0, 1382, 1383, 1388, 1386, 1387, 133, 575,
	577, 576, 580, 0, 0, 0, 512, 0, 512, 573,
	0, 444, 1355, 0, 705, 445, 446, 771, 771, 844,
	97, 0, 847, 0, 0, 0, 0, 1000, 1004, 1286,
	1312, 355, 355, 1299, 355, 359, 1302, 355, 1304, 355,
	1307, 355, 1310, 1311, 0, 0, 0, 902, 0, 0,
	1128, 1322, 0, 0, 1138, 1139, 1140, 1141, 1142, 1316,
	0, 0, 0, 1157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 145, 0, 0, 0, 0,
	0, 0, 1252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1077, 1081, 0, 1083, 1084, 0, 0,
	1210, 0, 0, 1222, 0, 1326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 976, 981, 981, 981,
	0, 0, 0, 1450, 1451, 1330, 1331, 985, 1332, 914,
	893, 932, 1413, 0, 1406, 0, -2, 1415, 0, 0,
	0, 1421, 368, 369, 906, 80, 986, 83, 0, 1431,
	1440, 0, 1422, 1433, 1435, 0, 0, 0, 1427, 0,
	985, 916, 947, 949, 0, 944, 959, 960, 962, 0,
	964, 0, 966, 967, 927, 921, 0, 100, 0, 985,
	985, 99, 0, 972, 119, 120, 121, 454, 184, 189,
	0, 0, 0, 194, 0, 196, 0, 0, 0, 201,
	202, 394, 394, 429, 0, 301, 303, 0, 0, 187,
	367, 0, 367, 0, 360, 0, 430, 450, 1356, 1357,
	0, 0, 387, 391, 392, 393, 0, 1457, 148, 0,
	0, 0, 604, 0, 632, 0, 0, 0, 0, 0,
	0, 176, 509, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 0, 394, 0, 0, 0, 394, 394, 394,
	0, 689, 381, 0, 0, 660, 657, 531, 0, 225,
	226, 228, 0, 0, 0, 0, 0, 538, 927, 1373,
	1374, 1375, 0, 1385, 1389, 136, 0, 0, 0, 0,
	585, 591, 0, 511, 592, 702, 703, 704, 95, 712,
	718, 846, 866, 993, 1001, 1005, 0, 0, 0, 0,
	1313, 1297, 367, 1300, 1301, 1303, 1305, 1306, 1308, 1309,
	1041, 1042, 1046, 0, 1125, 0, 1127, 1320, 0, 1350,
	0, 0, 0, 1156, 0, 0, 0, 1167, 1166, 1168,
	0, 1170, 1171, 1176, 1177, 1181, 0, 1183, 1185, 1186,
	0, 0, 0, 1197, 1198, 1199, 1200, 1201, 1202, 1203,
	1204, 1205, 1206, 0, 1075, 1078, 1209, 1085, 1086, 1091,
	1212, 0, 0, 1121, 1224, 0, 1229, 0, 0, 1235,
	0, 1239, 0, 1245, 1246, 1248, 1250, 0, 0, 0,
	0, 0, 953, 934, 64, 1332, 1334, 0, 1400, 1398,
	1398, 1408, 1409, 0, 0, 1416, 0, 0, 0, 0,
	84, 0, 0, 0, 1436, 0, 0, 0, 0, 101,
	1341, 941, 948, 0, 0, 942, 0, 943, 963, 965,
	920, 0, 985, 985, 90, 91, 0, 190, 0, 192,
	218, 219, 0, 195, 197, 198, 199, 205, 206, 207,
	200, 0, 0, 300, 302, 0, 0, 343, 354, 344,
	0, 0, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	927, 149, 150, 151, 596, 0, 606, 0, 929, 0,
	599, 0, 520, 0, 0, 0, 394, 394, 394, 0,
	0, 0, 0, 674, 0, 0, 637, 0, 645, 0,
	0, 0, 229, 230, 0, 1384, 574, 0, 134, 135,
	0, 0, 579, 513, 514, 1039, 0, 0, 0, 1040,
	1298, 0, 0, 0, 0, 1317, 0, 0, 0, 0,
	1163, 0, 0, 0, 1189, 0, 0, 0, 626, 627,
	0, 1253, 1080, 1341, 0, 1082, 1092, 1093, 0, 1082,
	1223, 0, 0, 0, 0, 0, 0, 0, 982, 0,
	0, 0, 0, 973, 1334, 1339, 0, 0, 1403, 0,
	1396, 1399, 1397, 1410, 0, 0, 1417, 0, 1419, 0,
	1441, 1442, 1434, 0, 1426, 1429, 1425, 1428, 1350, 945,
	0, 950, 0, 1341, 89, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 204, 0,
	0, 358, 361, 0, 0, 0, 597, 0, 930, 609,
	600, 0, 687, 0, 691, 0, 0, 0, 694, 695,
	696, 673, 0, 677, 422, 661, 658, 659, 532, 0,
	137, 138, 0, 0, 0, 1287, 0, 1290, 1124, 1126,
	0, 1153, 1154, 1155, 1295, 1296, 1169, 1182, 1187, 0,
	1190, 0, 0, 1191, 0, 628, 1071, 0, 0, 1089,
	1090, 0, 1225, 0, 1230, 1231, 0, 1236, 0, 1240,
	1251, 0, 978, 935, 936, 983, 984, 0, 0, 926,
	1339, 82, 1340, 1337, 0, 1335, 1333, 1392, 0, 1401,
	1402, 1411, 1412, 1418, 0, 1424, 0, 87, 0, 0,
	0, 1350, 191, 0, 210, 0, 605, 0, 608, 598,
	685, 686, 0, 698, 690, 692, 693, 675, -2, 1376,
	0, 0, 0, 581, 1288, 0, 0, 1192, 0, 624,
	625, 1079, 1072, 0, 1057, 1058, 1076, 1211, 1213, 0,
	0, 0, 0, 977, 979, 980, 81, 0, 1336, 1097,
	0, 1404, 1405, 1432, 1430, 946, 953, 0, 88, 435,
	428, 1376, 0, 0, 0, 678, 679, 680, 681, 682,
	683, 684, 571, 1378, 139, 140, 501, 502, 503, 133,
	0, 1130, 1188, 1073, 0, 0, 0, 0, 1069, 1070,
	0, 1226, 0, 1232, 0, 1237, 0, 937, 938, 1338,
	0, 0, 610, 0, 612, 0, -2, 423, 436, 0,
	185, 211, 212, 0, 0, 215, 216, 217, 208, 209,
	129, 0, 0, 699, 0, 1379, 1380, 136, 0, 0,
	1064, 1065, 1066, 1067, 1068, 0, 0, 0, 1098, 1077,
	611, 0, 0, 378, 0, 621, 424, 425, 0, 431,
	432, 433, 434, 213, 214, 633, 0, 0, 578, 1289,
	0, 1227, 0, 1233, 0, 1238, 0, 613, 614, 622,
	0, 426, 0, 427, 0, 0, 0, 602, 0, 633,
	1377, 1074, 0, 0, 1096, 0, 623, 619, 437, 439,
	440, 0, 0, 438, 634, 603, 1228, 1234, 0, 441,
	442, 443, 615, 616, 617, 618,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 664,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:602
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:615
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:616
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:620
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:657
		{
			setParseTree(yylex, nil)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:663
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:669
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:674
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:678
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:684
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:688
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:694
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:700
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:706
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:710
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:715
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:719
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:725
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:729
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:735
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:741
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:772
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:778
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:789
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:809
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:819
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:827
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:831
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:845
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:850
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:854
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:860
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:864
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:869
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:875
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:881
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:888
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:894
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:902
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:906
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:912
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:924
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:936
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:940
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:946
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:952
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:956
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:960
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:964
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:970
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:974
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:978
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:984
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:988
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:994
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:998
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1003
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1007
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1013
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1019
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1023
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1029
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1033
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1037
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1041
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1047
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1051
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1055
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1061
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1065
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1071
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1075
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1081
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1085
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1089
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1095
		{
			yyVAL.str = RepeatableReadStr
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.str = ReadCommittedStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1107
		{
			yyVAL.str = SerializableStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1113
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1117
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1121
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1127
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1133
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1140
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1149
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1153
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1160
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1164
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1169
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1173
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1179
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1184
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1189
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1195
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1200
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1206
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1211
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1215
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1221
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1237
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1244
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1251
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1256
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1261
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1266
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1273
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1280
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1291
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1302
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1308
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1312
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1316
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1328
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1334
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1338
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1344
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1348
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1354
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1358
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1364
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1368
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1374
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1378
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1384
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1394
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1399
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1404
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1408
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1413
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1421
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1432
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1441
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1450
		{
			yyVAL.str = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1454
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1463
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1467
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1473
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1479
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1484
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1489
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1494
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1499
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1504
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1513
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1518
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1522
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1527
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1533
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1543
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1549
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1553
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1557
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1563
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1567
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1572
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1576
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1581
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1587
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1593
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1598
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1603
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1609
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1624
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1628
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1632
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1650
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1657
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1667
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1675
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1679
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1708
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1712
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1716
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1720
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1729
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1733
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = Armscii8Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = ASCIIStr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = Big5Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = UBinaryStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = Cp1250Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = Cp1251Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = Cp1256Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = Cp1257Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = Cp850Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = Cp852Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Cp866Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Cp932Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Dec8Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = EucjpmsStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = EuckrStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = Gb18030Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = Gb2312Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = GbkStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = Geostd8Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = GreekStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = HebrewStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = Hp8Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = Keybcs2Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = Koi8rStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = Koi8uStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = Latin1Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = Latin2Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = Latin5Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = Latin7Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = MacceStr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = MacromanStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = SjisStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = Swe7Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.str = Tis620Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.str = Ucs2Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.str = UjisStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = Utf16Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.str = Utf16leStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = Utf32Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = Utf8Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = Utf8mb4Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = Utf8Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1913
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1917
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1921
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1927
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1931
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1935
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1941
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1945
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1952
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1956
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1960
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1964
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1970
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1992
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1996
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2070
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2074
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2088
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2094
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2098
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2102
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2106
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2110
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2114
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2118
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2126
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2130
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2142
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2153
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2161
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2165
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2181
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2192
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2201
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2206
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2210
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2218
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2222
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2228
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2236
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2240
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2244
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2249
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2253
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2258
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2262
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2266
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2279
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2284
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2289
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2294
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2300
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2304
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2309
		{
			yyVAL.str = ""
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2313
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2317
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2323
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2332
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2338
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2342
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2348
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2352
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2357
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2361
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2365
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2369
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2373
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2377
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2383
		{
			yyVAL.str = ""
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2387
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2393
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2397
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2401
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2405
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2409
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2414
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2418
		{
			yyVAL.str = yyDollar[2].str
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2424
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2438
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2442
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2447
		{
			yyVAL.str = "key"
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2451
		{
			yyVAL.str = yyDollar[1].str
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2457
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2461
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = ""
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2476
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2480
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2486
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2490
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2496
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2500
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2506
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2510
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2516
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2522
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2526
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2530
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2534
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2538
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2543
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2547
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2553
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2559
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2565
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2569
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2573
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2578
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2582
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2588
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2594
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2600
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2604
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2608
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2612
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2616
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2621
		{
			yyVAL.str = ""
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2625
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2629
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2635
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2639
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2644
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2648
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2657
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2663
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2667
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2671
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2677
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2681
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2687
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2691
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2695
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2699
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2703
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2707
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2711
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2715
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2719
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2723
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2727
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2731
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2735
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2739
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2743
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2747
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2751
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2755
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2759
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2763
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2767
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2771
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2775
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2779
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2783
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2787
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2791
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2795
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2799
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2803
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2807
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2812
		{
			yyVAL.str = ""
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2816
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2820
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2847
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2852
		{
			yyVAL.str = ""
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2858
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2862
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2867
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2871
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2876
		{
			yyVAL.str = ""
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2880
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2885
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2889
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2893
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2898
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2902
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2906
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2910
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2914
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 520:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2918
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2924
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2928
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2932
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2938
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2942
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2946
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2950
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2954
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2958
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2962
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2966
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2970
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2974
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2979
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2984
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3032
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3036
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3044
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3048
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3052
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3056
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3060
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3066
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3070
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3076
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3080
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3084
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3088
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3092
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3096
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3100
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3104
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3108
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3112
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3118
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3125
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3132
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3139
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3145
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3155
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3181
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3195
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3212
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3222
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3226
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3237
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3244
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3251
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3258
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3272
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3298
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3307
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3315
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3322
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3333
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3342
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3350
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3359
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3366
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3374
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3378
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3387
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3398
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3402
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3407
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3411
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3416
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3420
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3426
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3432
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3438
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3442
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3448
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3452
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3458
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3464
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3470
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3476
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3482
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3486
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3490
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3494
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3500
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3506
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3512
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3516
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3520
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3526
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3530
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3535
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3539
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3544
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3548
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3554
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3558
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3562
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3566
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3570
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3574
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3578
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3582
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3586
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3590
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3594
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3598
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3602
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3606
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3610
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3614
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3618
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3622
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3626
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3630
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3634
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3638
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3643
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3647
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3651
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3657
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3661
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3667
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3672
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3676
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3681
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3686
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3691
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3696
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3701
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3707
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3713
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3718
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3724
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3730
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3734
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3740
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3745
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3749
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3754
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3759
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3764
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3769
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3775
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3781
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3788
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3795
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3802
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3810
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3814
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3820
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3826
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3832
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3838
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3844
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3850
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3856
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3862
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3868
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3872
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3878
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3884
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3888
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 703:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3894
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3898
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3907
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3911
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3917
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3921
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3933
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3937
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3941
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3945
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3949
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3953
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3957
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3961
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3965
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3969
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3973
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3977
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3985
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3989
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4041
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4140
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4146
		{
			yyVAL.str = ""
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4150
		{
			yyVAL.str = "extended "
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4156
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4160
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4166
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4170
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4176
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4180
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4184
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4190
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4194
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4198
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4204
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4208
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4214
		{
			yyVAL.empty = struct{}{}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.empty = struct{}{}
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4222
		{
			yyVAL.empty = struct{}{}
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4232
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4238
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4242
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4246
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4253
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4257
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4272
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4276
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4281
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4285
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4291
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4295
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4301
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4305
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4309
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4316
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4322
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4326
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4331
		{
			yyVAL.empty = struct{}{}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4333
		{
			yyVAL.empty = struct{}{}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4336
		{
			yyVAL.empty = struct{}{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4338
		{
			yyVAL.empty = struct{}{}
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4342
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4348
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4353
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4357
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4361
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4365
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4369
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4373
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4377
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4382
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4386
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4390
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4394
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4400
		{
			yyVAL.str = yyDollar[1].str
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4404
		{
			yyVAL.str = yyDollar[1].str
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4408
		{
			yyVAL.str = yyDollar[1].str
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4414
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4418
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4422
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4426
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4431
		{
			yyVAL.str = ""
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4435
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4439
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4445
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4449
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4455
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4461
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4465
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4471
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4477
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4481
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4487
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4493
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4497
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4501
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4505
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4511
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4517
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4523
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4527
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4531
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4535
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4539
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4543
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4549
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4553
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4559
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4563
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4567
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4571
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4575
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4579
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4583
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4587
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4591
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4595
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4599
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4603
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4608
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4612
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4616
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4621
		{
			yyVAL.str = ""
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4625
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4630
		{
			setAllowComments(yylex, true)
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4634
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4640
		{
			yyVAL.strs = nil
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4644
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4650
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4654
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4658
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4663
		{
			yyVAL.str = ""
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4667
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4671
		{
			yyVAL.str = SQLCacheStr
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4676
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4680
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4684
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4690
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4694
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4704
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4709
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4713
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4719
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4723
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4728
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4732
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4737
		{
			yyVAL.strs = nil
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4741
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4745
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4749
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4753
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4759
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4763
		{
			yyVAL.str = SQLCacheStr
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4767
		{
			yyVAL.str = DistinctStr
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4771
		{
			yyVAL.str = DistinctStr
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4775
		{
			yyVAL.str = StraightJoinHint
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4779
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4783
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4789
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4793
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4799
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4803
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4807
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4811
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4816
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4820
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4824
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4831
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4836
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4840
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4846
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4852
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4856
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4866
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4870
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4874
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4878
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4884
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4888
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4894
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4898
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4907
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4912
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4916
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4922
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4926
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4932
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4936
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4942
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4946
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4950
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4954
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4960
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4964
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4977
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4981
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4985
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4989
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4995
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4997
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5001
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5003
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5007
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5009
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5012
		{
			yyVAL.empty = struct{}{}
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5014
		{
			yyVAL.empty = struct{}{}
		}
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5017
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5021
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5025
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5032
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5038
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5042
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5046
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5052
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5058
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5062
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5066
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5070
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5076
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5080
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5090
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5094
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5100
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5104
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5110
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5115
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5119
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5125
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5129
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 977:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5135
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5139
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5143
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5147
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5152
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5156
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5160
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5164
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5174
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5181
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5185
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5189
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5193
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5197
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5201
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5205
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5211
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5215
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5219
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5223
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5229
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5233
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5241
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5245
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5249
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5253
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5257
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5261
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5265
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5269
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5275
		{
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5278
		{
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5292
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5342
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5346
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5350
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5358
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5362
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5366
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5370
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5374
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5378
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5382
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5386
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5390
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5394
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5398
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5402
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5406
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5414
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5422
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5448
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5454
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5458
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5464
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5468
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5474
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5478
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5482
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5488
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5492
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5499
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5503
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5507
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5511
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5515
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5521
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5525
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5529
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5533
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5537
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5543
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5547
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5552
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5556
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5562
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5566
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5575
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5580
		{
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5583
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5589
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5595
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5599
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5604
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5611
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5617
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5621
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5627
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5631
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5637
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5641
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5646
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5653
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5659
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5663
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5669
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5675
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5679
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5685
		{
			yyVAL.str = ""
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5689
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5695
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5699
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5706
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5710
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5714
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5718
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5724
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5728
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5732
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5736
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5740
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5744
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5748
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5754
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5758
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5762
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5769
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5775
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5779
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5789
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5793
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5803
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5807
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5811
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5815
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5819
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5823
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5827
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5831
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5835
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5839
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5860
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5864
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5869
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5873
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5877
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5881
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5885
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5889
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5893
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5897
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5901
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5905
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5909
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5913
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5917
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5921
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5925
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5929
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5941
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5945
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5949
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5953
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5957
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5961
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5965
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5969
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5973
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5977
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5981
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5985
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5989
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5993
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5997
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6001
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6005
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6013
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6017
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6021
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6025
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6029
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6033
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6037
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6041
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6045
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6049
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6053
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6057
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6061
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6065
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6069
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6073
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6077
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6081
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6085
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6133
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6137
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6149
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6173
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6187
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6191
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6195
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6199
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6209
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6215
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6219
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6223
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6227
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6231
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6236
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6240
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6244
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6248
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6252
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6256
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6265
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6269
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6273
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6280
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6284
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6290
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6308
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6312
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6316
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6320
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6324
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6332
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6337
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6341
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6347
		{
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6349
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6353
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6357
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6361
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6365
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6369
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6373
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6377
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6381
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6385
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6389
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6395
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6399
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6403
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6407
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6411
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6415
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6419
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6423
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6427
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6437
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6441
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6445
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6449
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6460
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6464
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6468
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6472
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6476
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6482
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6486
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6490
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6494
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6498
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6504
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6508
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6512
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6518
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6522
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6526
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6532
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6536
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6540
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6544
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6548
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6554
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6558
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6562
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6566
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6570
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6574
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6578
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6582
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6586
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6590
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6596
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6600
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6605
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6609
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6614
		{
			yyVAL.str = string("")
		}
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6618
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6624
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6628
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6634
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6639
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6643
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6649
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6653
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6657
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6661
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6667
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6671
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6677
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6686
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6696
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6700
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6705
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6709
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6715
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6721
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6725
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6730
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6734
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6739
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6743
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6749
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6755
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6759
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6765
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6770
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6774
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6778
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6783
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6787
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6793
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6797
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6801
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6806
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6810
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6814
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6818
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6822
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6829
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6833
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6837
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6841
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6847
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6851
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6855
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6859
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6864
		{
			yyVAL.str = ""
		}
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6868
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6872
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6876
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6881
		{
			yyVAL.str = ""
		}
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6885
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6891
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6895
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6900
		{
			yyVAL.str = ""
		}
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6904
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6909
		{
			yyVAL.str = "cascaded"
		}
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6913
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6917
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6922
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6926
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6932
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6938
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6944
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6953
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6957
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6962
		{
			yyVAL.str = ""
		}
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6966
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6972
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6976
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6982
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6986
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6990
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6995
		{
			yyVAL.str = ""
		}
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6999
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7003
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7008
		{
			yyVAL.str = ""
		}
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7012
		{
			yyVAL.str = " header"
		}
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7017
		{
			yyVAL.str = ""
		}
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7021
		{
			yyVAL.str = " manifest on"
		}
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7025
		{
			yyVAL.str = " manifest off"
		}
	case 1403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7030
		{
			yyVAL.str = ""
		}
	case 1404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7034
		{
			yyVAL.str = " overwrite on"
		}
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7038
		{
			yyVAL.str = " overwrite off"
		}
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7044
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7049
		{
			yyVAL.str = ""
		}
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7053
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7059
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7063
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7069
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7073
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7078
		{
			yyVAL.str = ""
		}
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7082
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7088
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7092
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7098
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7102
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7106
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7111
		{
			yyVAL.str = ""
		}
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7115
		{
			yyVAL.str = " optionally"
		}
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7128
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7132
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7136
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7140
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7144
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7150
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7154
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7158
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1430:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7162
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7167
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7171
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7177
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7181
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7187
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7191
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7197
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7201
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7206
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7216
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7220
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7226
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7233
		{
			yyVAL.str = "charset"
		}
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7243
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7247
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7251
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7260
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7262
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7265
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7267
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7270
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7272
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7275
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7277
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7280
		{
			yyVAL.empty = struct{}{}
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7282
		{
			yyVAL.empty = struct{}{}
		}
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7284
		{
			yyVAL.empty = struct{}{}
		}
	case 1463:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7288
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7297
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7302
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7304
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7308
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7314
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7318
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7325
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7331
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7335
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7341
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7345
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7352
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7929
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7938
		{
			decNesting(yylex)
		}
	case 2031:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7943
		{
			skipToEnd(yylex)
		}
	case 2032:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7948
		{
			skipToEnd(yylex)
		}
	case 2033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7952
		{
			skipToEnd(yylex)
		}
	case 2034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7956
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
