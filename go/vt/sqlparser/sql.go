// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const CALL = 57378
const DISTINCTROW = 57379
const PARSER = 57380
const GENERATED = 57381
const ALWAYS = 57382
const OUTFILE = 57383
const S3 = 57384
const DATA = 57385
const LOAD = 57386
const LINES = 57387
const TERMINATED = 57388
const ESCAPED = 57389
const ENCLOSED = 57390
const DUMPFILE = 57391
const CSV = 57392
const HEADER = 57393
const MANIFEST = 57394
const OVERWRITE = 57395
const STARTING = 57396
const OPTIONALLY = 57397
const VALUES = 57398
const LAST_INSERT_ID = 57399
const NEXT = 57400
const VALUE = 57401
const SHARE = 57402
const MODE = 57403
const SQL_NO_CACHE = 57404
const SQL_CACHE = 57405
const SQL_CALC_FOUND_ROWS = 57406
const JOIN = 57407
const STRAIGHT_JOIN = 57408
const LEFT = 57409
const RIGHT = 57410
const INNER = 57411
const OUTER = 57412
const CROSS = 57413
const NATURAL = 57414
const USE = 57415
const FORCE = 57416
const ON = 57417
const USING = 57418
const INPLACE = 57419
const COPY = 57420
const ALGORITHM = 57421
const NONE = 57422
const SHARED = 57423
const EXCLUSIVE = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const INTEGRAL = 57430
const FLOAT = 57431
const HEXNUM = 57432
const VALUE_ARG = 57433
const LIST_ARG = 57434
const COMMENT = 57435
const COMMENT_KEYWORD = 57436
const BIT_LITERAL = 57437
const COMPRESSION = 57438
const NULL = 57439
const TRUE = 57440
const FALSE = 57441
const OFF = 57442
const DISCARD = 57443
const IMPORT = 57444
const ENABLE = 57445
const DISABLE = 57446
const TABLESPACE = 57447
const VIRTUAL = 57448
const STORED = 57449
const OR = 57450
const XOR = 57451
const AND = 57452
const NOT = 57453
const BETWEEN = 57454
const CASE = 57455
const WHEN = 57456
const THEN = 57457
const ELSE = 57458
const END = 57459
const LE = 57460
const GE = 57461
const NE = 57462
const NULL_SAFE_EQUAL = 57463
const IS = 57464
const LIKE = 57465
const REGEXP = 57466
const IN = 57467
const SHIFT_LEFT = 57468
const SHIFT_RIGHT = 57469
const DIV = 57470
const MOD = 57471
const UNARY = 57472
const COLLATE = 57473
const BINARY = 57474
const UNDERSCORE_BINARY = 57475
const UNDERSCORE_UTF8MB4 = 57476
const UNDERSCORE_UTF8 = 57477
const UNDERSCORE_LATIN1 = 57478
const INTERVAL = 57479
const JSON_EXTRACT_OP = 57480
const JSON_UNQUOTE_EXTRACT_OP = 57481
const CREATE = 57482
const ALTER = 57483
const DROP = 57484
const RENAME = 57485
const ANALYZE = 57486
const ADD = 57487
const FLUSH = 57488
const CHANGE = 57489
const MODIFY = 57490
const REVERT = 57491
const SCHEMA = 57492
const TABLE = 57493
const INDEX = 57494
const VIEW = 57495
const TO = 57496
const IGNORE = 57497
const IF = 57498
const UNIQUE = 57499
const PRIMARY = 57500
const COLUMN = 57501
const SPATIAL = 57502
const FULLTEXT = 57503
const KEY_BLOCK_SIZE = 57504
const CHECK = 57505
const INDEXES = 57506
const ACTION = 57507
const CASCADE = 57508
const CONSTRAINT = 57509
const FOREIGN = 57510
const NO = 57511
const REFERENCES = 57512
const RESTRICT = 57513
const SHOW = 57514
const DESCRIBE = 57515
const EXPLAIN = 57516
const DATE = 57517
const ESCAPE = 57518
const REPAIR = 57519
const OPTIMIZE = 57520
const TRUNCATE = 57521
const COALESCE = 57522
const EXCHANGE = 57523
const REBUILD = 57524
const PARTITIONING = 57525
const REMOVE = 57526
const MAXVALUE = 57527
const PARTITION = 57528
const REORGANIZE = 57529
const LESS = 57530
const THAN = 57531
const PROCEDURE = 57532
const TRIGGER = 57533
const VINDEX = 57534
const VINDEXES = 57535
const DIRECTORY = 57536
const NAME = 57537
const UPGRADE = 57538
const STATUS = 57539
const VARIABLES = 57540
const WARNINGS = 57541
const CASCADED = 57542
const DEFINER = 57543
const OPTION = 57544
const SQL = 57545
const UNDEFINED = 57546
const SEQUENCE = 57547
const MERGE = 57548
const TEMPORARY = 57549
const TEMPTABLE = 57550
const INVOKER = 57551
const SECURITY = 57552
const FIRST = 57553
const AFTER = 57554
const LAST = 57555
const VITESS_MIGRATION = 57556
const CANCEL = 57557
const RETRY = 57558
const COMPLETE = 57559
const BEGIN = 57560
const START = 57561
const TRANSACTION = 57562
const COMMIT = 57563
const ROLLBACK = 57564
const SAVEPOINT = 57565
const RELEASE = 57566
const WORK = 57567
const BIT = 57568
const TINYINT = 57569
const SMALLINT = 57570
const MEDIUMINT = 57571
const INT = 57572
const INTEGER = 57573
const BIGINT = 57574
const INTNUM = 57575
const REAL = 57576
const DOUBLE = 57577
const FLOAT_TYPE = 57578
const DECIMAL = 57579
const NUMERIC = 57580
const TIME = 57581
const TIMESTAMP = 57582
const DATETIME = 57583
const YEAR = 57584
const CHAR = 57585
const VARCHAR = 57586
const BOOL = 57587
const CHARACTER = 57588
const VARBINARY = 57589
const NCHAR = 57590
const TEXT = 57591
const TINYTEXT = 57592
const MEDIUMTEXT = 57593
const LONGTEXT = 57594
const BLOB = 57595
const TINYBLOB = 57596
const MEDIUMBLOB = 57597
const LONGBLOB = 57598
const JSON = 57599
const ENUM = 57600
const GEOMETRY = 57601
const POINT = 57602
const LINESTRING = 57603
const POLYGON = 57604
const GEOMETRYCOLLECTION = 57605
const MULTIPOINT = 57606
const MULTILINESTRING = 57607
const MULTIPOLYGON = 57608
const NULLX = 57609
const AUTO_INCREMENT = 57610
const APPROXNUM = 57611
const SIGNED = 57612
const UNSIGNED = 57613
const ZEROFILL = 57614
const CODE = 57615
const COLLATION = 57616
const COLUMNS = 57617
const DATABASES = 57618
const ENGINES = 57619
const EVENT = 57620
const EXTENDED = 57621
const FIELDS = 57622
const FULL = 57623
const FUNCTION = 57624
const GTID_EXECUTED = 57625
const KEYSPACES = 57626
const OPEN = 57627
const PLUGINS = 57628
const PRIVILEGES = 57629
const PROCESSLIST = 57630
const SCHEMAS = 57631
const TABLES = 57632
const TRIGGERS = 57633
const USER = 57634
const VGTID_EXECUTED = 57635
const VITESS_KEYSPACES = 57636
const VITESS_METADATA = 57637
const VITESS_MIGRATIONS = 57638
const VITESS_SHARDS = 57639
const VITESS_TABLETS = 57640
const VSCHEMA = 57641
const NAMES = 57642
const CHARSET = 57643
const GLOBAL = 57644
const SESSION = 57645
const ISOLATION = 57646
const LEVEL = 57647
const READ = 57648
const WRITE = 57649
const ONLY = 57650
const REPEATABLE = 57651
const COMMITTED = 57652
const UNCOMMITTED = 57653
const SERIALIZABLE = 57654
const CURRENT_TIMESTAMP = 57655
const DATABASE = 57656
const CURRENT_DATE = 57657
const CURRENT_TIME = 57658
const LOCALTIME = 57659
const LOCALTIMESTAMP = 57660
const CURRENT_USER = 57661
const UTC_DATE = 57662
const UTC_TIME = 57663
const UTC_TIMESTAMP = 57664
const REPLACE = 57665
const CONVERT = 57666
const CAST = 57667
const SUBSTR = 57668
const SUBSTRING = 57669
const GROUP_CONCAT = 57670
const SEPARATOR = 57671
const TIMESTAMPADD = 57672
const TIMESTAMPDIFF = 57673
const MATCH = 57674
const AGAINST = 57675
const BOOLEAN = 57676
const LANGUAGE = 57677
const WITH = 57678
const QUERY = 57679
const EXPANSION = 57680
const WITHOUT = 57681
const VALIDATION = 57682
const UNUSED = 57683
const ARRAY = 57684
const CUME_DIST = 57685
const DESCRIPTION = 57686
const DENSE_RANK = 57687
const EMPTY = 57688
const EXCEPT = 57689
const FIRST_VALUE = 57690
const GROUPING = 57691
const GROUPS = 57692
const JSON_TABLE = 57693
const LAG = 57694
const LAST_VALUE = 57695
const LATERAL = 57696
const LEAD = 57697
const MEMBER = 57698
const NTH_VALUE = 57699
const NTILE = 57700
const OF = 57701
const OVER = 57702
const PERCENT_RANK = 57703
const RANK = 57704
const RECURSIVE = 57705
const ROW_NUMBER = 57706
const SYSTEM = 57707
const WINDOW = 57708
const ACTIVE = 57709
const ADMIN = 57710
const BUCKETS = 57711
const CLONE = 57712
const COMPONENT = 57713
const DEFINITION = 57714
const ENFORCED = 57715
const EXCLUDE = 57716
const FOLLOWING = 57717
const GEOMCOLLECTION = 57718
const GET_MASTER_PUBLIC_KEY = 57719
const HISTOGRAM = 57720
const HISTORY = 57721
const INACTIVE = 57722
const INVISIBLE = 57723
const LOCKED = 57724
const MASTER_COMPRESSION_ALGORITHMS = 57725
const MASTER_PUBLIC_KEY_PATH = 57726
const MASTER_TLS_CIPHERSUITES = 57727
const MASTER_ZSTD_COMPRESSION_LEVEL = 57728
const NESTED = 57729
const NETWORK_NAMESPACE = 57730
const NOWAIT = 57731
const NULLS = 57732
const OJ = 57733
const OLD = 57734
const OPTIONAL = 57735
const ORDINALITY = 57736
const ORGANIZATION = 57737
const OTHERS = 57738
const PATH = 57739
const PERSIST = 57740
const PERSIST_ONLY = 57741
const PRECEDING = 57742
const PRIVILEGE_CHECKS_USER = 57743
const PROCESS = 57744
const RANDOM = 57745
const REFERENCE = 57746
const REQUIRE_ROW_FORMAT = 57747
const RESOURCE = 57748
const RESPECT = 57749
const RESTART = 57750
const RETAIN = 57751
const REUSE = 57752
const ROLE = 57753
const SECONDARY = 57754
const SECONDARY_ENGINE = 57755
const SECONDARY_LOAD = 57756
const SECONDARY_UNLOAD = 57757
const SKIP = 57758
const SRID = 57759
const THREAD_PRIORITY = 57760
const TIES = 57761
const UNBOUNDED = 57762
const VCPU = 57763
const VISIBLE = 57764
const FORMAT = 57765
const TREE = 57766
const VITESS = 57767
const TRADITIONAL = 57768
const LOCAL = 57769
const LOW_PRIORITY = 57770
const NO_WRITE_TO_BINLOG = 57771
const LOGS = 57772
const ERROR = 57773
const GENERAL = 57774
const HOSTS = 57775
const OPTIMIZER_COSTS = 57776
const USER_RESOURCES = 57777
const SLOW = 57778
const CHANNEL = 57779
const RELAY = 57780
const EXPORT = 57781
const AVG_ROW_LENGTH = 57782
const CONNECTION = 57783
const CHECKSUM = 57784
const DELAY_KEY_WRITE = 57785
const ENCRYPTION = 57786
const ENGINE = 57787
const INSERT_METHOD = 57788
const MAX_ROWS = 57789
const MIN_ROWS = 57790
const PACK_KEYS = 57791
const PASSWORD = 57792
const FIXED = 57793
const DYNAMIC = 57794
const COMPRESSED = 57795
const REDUNDANT = 57796
const COMPACT = 57797
const ROW_FORMAT = 57798
const STATS_AUTO_RECALC = 57799
const STATS_PERSISTENT = 57800
const STATS_SAMPLE_PAGES = 57801
const STORAGE = 57802
const MEMORY = 57803
const DISK = 57804

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 45,
	1, 112,
	480, 112,
	-2, 118,
	-1, 46,
	147, 118,
	263, 118,
	318, 118,
	-2, 342,
	-1, 53,
	34, 490,
	169, 490,
	181, 490,
	214, 504,
	215, 504,
	-2, 492,
	-1, 58,
	171, 514,
	-2, 512,
	-1, 84,
	58, 582,
	-2, 590,
	-1, 97,
	168, 956,
	-2, 91,
	-1, 99,
	1, 113,
	480, 113,
	-2, 118,
	-1, 109,
	174, 244,
	175, 244,
	-2, 336,
	-1, 128,
	147, 118,
	263, 118,
	318, 118,
	-2, 351,
	-1, 564,
	154, 977,
	-2, 973,
	-1, 565,
	154, 978,
	-2, 974,
	-1, 584,
	58, 583,
	-2, 595,
	-1, 585,
	58, 584,
	-2, 596,
	-1, 606,
	122, 1326,
	-2, 84,
	-1, 607,
	122, 1207,
	-2, 85,
	-1, 613,
	122, 1258,
	-2, 950,
	-1, 754,
	122, 1144,
	-2, 947,
	-1, 790,
	180, 38,
	185, 38,
	-2, 255,
	-1, 867,
	1, 389,
	480, 389,
	-2, 118,
	-1, 1108,
	1, 285,
	480, 285,
	-2, 118,
	-1, 1111,
	23, 137,
	-2, 139,
	-1, 1184,
	174, 244,
	175, 244,
	-2, 336,
	-1, 1193,
	180, 39,
	185, 39,
	-2, 256,
	-1, 1401,
	154, 982,
	-2, 976,
	-1, 1494,
	76, 66,
	84, 66,
	-2, 70,
	-1, 1515,
	1, 286,
	480, 286,
	-2, 118,
	-1, 1948,
	5, 843,
	18, 843,
	20, 843,
	32, 843,
	85, 843,
	-2, 622,
	-1, 2182,
	48, 918,
	-2, 912,
}

const yyPrivate = 57344

const yyLast = 29562

var yyAct = [...]int{
	564, 2102, 2278, 2007, 2235, 2222, 2212, 2159, 2248, 927,
	1772, 1779, 83, 3, 1734, 2183, 2129, 1824, 1928, 1701,
	1583, 1780, 1009, 2099, 577, 1929, 1438, 1056, 507, 1735,
	2121, 1512, 522, 1925, 1721, 1828, 1553, 1548, 505, 1804,
	1805, 1868, 1568, 536, 1806, 1887, 1661, 757, 878, 165,
	1491, 1940, 165, 1191, 470, 165, 1581, 907, 820, 1299,
	486, 137, 165, 1395, 1614, 1798, 123, 1387, 1090, 611,
	165, 1555, 1100, 1209, 785, 1567, 1473, 586, 1093, 1440,
	1063, 1480, 1083, 1165, 1066, 1061, 1086, 1421, 498, 1048,
	33, 1364, 486, 571, 945, 486, 165, 486, 761, 791,
	509, 608, 1084, 1198, 1296, 764, 1565, 1282, 1456, 1544,
	788, 765, 786, 787, 81, 1099, 1496, 1073, 79, 925,
	1304, 1183, 106, 100, 107, 101, 863, 493, 798, 140,
	1097, 1160, 1022, 8, 7, 1534, 6, 1848, 1847, 1612,
	78, 1025, 1268, 1875, 1876, 167, 168, 169, 1353, 2131,
	1352, 1435, 1436, 1351, 1350, 1349, 1348, 496, 2267, 497,
	1699, 1341, 773, 2179, 2078, 1976, 768, 2155, 108, 758,
	572, 593, 597, 2154, 824, 102, 2097, 946, 823, 2098,
	2294, 2245, 2286, 1560, 822, 1533, 1651, 2293, 80, 445,
	825, 494, 2205, 2103, 1600, 2244, 2204, 836, 837, 1904,
	840, 841, 842, 843, 1558, 2040, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 801, 605, 779, 1174, 778, 946, 612, 1700, 102,
	84, 1954, 777, 1855, 872, 873, 1874, 1854, 780, 802,
	826, 827, 828, 956, 549, 1649, 555, 556, 553, 554,
	1497, 552, 551, 550, 1765, 866, 1506, 1764, 161, 923,
	1766, 557, 558, 1955, 1956, 833, 897, 86, 87, 88,
	89, 90, 91, 1437, 1788, 97, 838, 568, 162, 1507,
	1508, 440, 774, 103, 839, 125, 1557, 781, 1101, 775,
	1102, 474, 956, 102, 567, 35, 145, 898, 72, 39,
	40, 570, 2168, 971, 970, 980, 981, 973, 974, 975,
	976, 977, 978, 979, 972, 891, 2031, 982, 2209, 167,
	168, 169, 2009, 902, 903, 862, 885, 135, 1342, 1343,
	1344, 886, 124, 952, 1527, 1526, 944, 885, 777, 884,
	769, 883, 886, 777, 861, 772, 473, 2029, 771, 770,
	142, 1288, 143, 484, 1340, 488, 922, 112, 113, 134,
	133, 160, 482, 1625, 1623, 1624, 1258, 1052, 1829, 1582,
	2003, 1851, 71, 899, 1620, 1627, 1615, 1628, 2004, 1629,
	2292, 914, 952, 916, 920, 2268, 1283, 900, 901, 906,
	868, 892, 2092, 1863, 1619, 775, 776, 1630, 2010, 845,
	474, 844, 1398, 474, 2011, 1617, 2151, 865, 1259, 904,
	1260, 129, 110, 136, 117, 109, 502, 130, 131, 905,
	913, 915, 146, 1584, 1474, 809, 807, 818, 1621, 1177,
	817, 816, 151, 118, 815, 1618, 1784, 814, 813, 812,
	165, 1975, 165, 811, 806, 165, 782, 121, 119, 114,
	115, 116, 120, 895, 819, 473, 1497, 111, 473, 2282,
	1559, 762, 1867, 918, 762, 760, 122, 2289, 2284, 794,
	762, 486, 486, 486, 793, 2203, 951, 948, 949, 950,
	955, 957, 954, 1853, 953, 1297, 1783, 1775, 1566, 486,
	486, 947, 864, 1289, 800, 881, 474, 887, 888, 889,
	890, 599, 776, 938, 1197, 1196, 919, 776, 911, 1888,
	835, 1864, 912, 800, 1606, 1293, 800, 932, 924, 1650,
	810, 808, 917, 2169, 921, 951, 948, 949, 950, 955,
	957, 954, 1776, 953, 2210, 829, 2236, 1983, 138, 1850,
	947, 800, 1913, 1912, 910, 1911, 1702, 1704, 1172, 1171,
	1170, 473, 1840, 1890, 1778, 1870, 1294, 1773, 1168, 444,
	1869, 1870, 439, 1602, 1680, 2190, 1869, 99, 165, 1862,
	2060, 1774, 1861, 994, 995, 1953, 1726, 1669, 1677, 1287,
	1270, 1269, 1271, 1272, 1273, 800, 1054, 1592, 894, 1502,
	1077, 929, 930, 1007, 132, 876, 486, 882, 1513, 165,
	896, 165, 165, 874, 486, 992, 126, 871, 982, 127,
	486, 2280, 1452, 608, 2281, 1892, 2279, 1896, 1761, 1891,
	972, 1889, 1371, 982, 941, 939, 1894, 940, 1010, 73,
	1336, 1782, 1781, 2199, 799, 1893, 1369, 1370, 1368, 880,
	803, 793, 962, 94, 1784, 1703, 800, 908, 1895, 1897,
	804, 1082, 1053, 799, 1049, 1906, 799, 821, 834, 803,
	793, 1284, 1305, 1285, 1067, 1938, 1286, 1616, 805, 804,
	973, 974, 975, 976, 977, 978, 979, 972, 1817, 1290,
	982, 799, 1024, 1027, 1029, 1031, 1032, 1034, 1036, 1037,
	95, 1601, 1028, 1030, 1046, 1033, 1035, 1103, 1038, 942,
	1783, 975, 976, 977, 978, 979, 972, 994, 995, 982,
	139, 144, 141, 147, 148, 149, 150, 152, 153, 154,
	155, 994, 995, 1422, 1599, 799, 156, 157, 158, 159,
	1597, 867, 793, 796, 797, 809, 762, 807, 2261, 612,
	790, 794, 1777, 1958, 971, 970, 980, 981, 973, 974,
	975, 976, 977, 978, 979, 972, 879, 165, 982, 789,
	959, 1161, 167, 168, 169, 1070, 1389, 909, 2228, 1098,
	1169, 2226, 1594, 167, 168, 169, 962, 1793, 2006, 2277,
	2230, 2231, 1306, 1277, 2290, 2227, 799, 595, 71, 486,
	1675, 1193, 2077, 793, 796, 797, 1598, 762, 1674, 1202,
	1367, 790, 794, 1206, 1662, 1055, 486, 486, 1422, 486,
	1687, 486, 486, 1594, 486, 486, 486, 486, 486, 486,
	960, 961, 959, 2076, 1390, 960, 961, 959, 1908, 486,
	1203, 961, 959, 165, 1242, 1794, 1189, 1596, 962, 1175,
	1176, 1275, 1981, 962, 1276, 1782, 1781, 598, 962, 1255,
	2287, 1182, 1201, 499, 2291, 1237, 1238, 1802, 1784, 2273,
	486, 603, 165, 980, 981, 973, 974, 975, 976, 977,
	978, 979, 972, 1295, 1454, 982, 1239, 165, 2288, 1801,
	1211, 1563, 1212, 1265, 1214, 1216, 1278, 2274, 1220, 1222,
	1224, 1226, 1228, 165, 1167, 1263, 1262, 1245, 1246, 1676,
	165, 1200, 1274, 1251, 1252, 1179, 1180, 1261, 1178, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 486, 486,
	486, 1915, 1192, 1253, 1247, 1199, 1199, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 600, 601, 1453,
	1309, 1307, 1308, 1244, 1264, 165, 1301, 1313, 1243, 1315,
	1316, 1317, 1318, 1218, 1803, 1312, 1322, 960, 961, 959,
	1457, 1458, 1319, 1320, 1321, 1240, 960, 961, 959, 1916,
	1337, 2276, 2275, 581, 2262, 962, 2256, 2254, 581, 1298,
	960, 961, 959, 1388, 962, 2118, 1065, 960, 961, 959,
	2074, 779, 1391, 778, 1359, 1361, 1362, 102, 962, 1654,
	1655, 1656, 2048, 1961, 1173, 962, 486, 1917, 1360, 1365,
	167, 168, 169, 1347, 1311, 1811, 1799, 1399, 1645, 1610,
	1609, 971, 970, 980, 981, 973, 974, 975, 976, 977,
	978, 979, 972, 1392, 1393, 982, 1446, 1332, 1333, 1334,
	486, 486, 1302, 1266, 1410, 1413, 960, 961, 959, 1254,
	1423, 165, 167, 168, 169, 1250, 1768, 167, 168, 169,
	1249, 1576, 1248, 2145, 962, 486, 1366, 1400, 82, 167,
	168, 169, 165, 1574, 1445, 486, 2149, 1401, 1447, 165,
	80, 165, 1990, 2242, 1010, 2148, 565, 1399, 1459, 165,
	165, 1405, 1595, 167, 168, 169, 486, 1256, 2101, 486,
	1926, 1492, 1990, 2197, 1831, 608, 1429, 1430, 608, 1937,
	486, 971, 970, 980, 981, 973, 974, 975, 976, 977,
	978, 979, 972, 1990, 2192, 982, 1814, 1402, 1990, 2191,
	2173, 581, 2095, 581, 1521, 166, 1465, 1471, 166, 1990,
	2093, 166, 1594, 581, 1937, 1467, 487, 1401, 166, 1594,
	525, 524, 527, 528, 529, 530, 166, 1517, 1495, 526,
	581, 531, 2058, 581, 1722, 486, 1973, 1972, 1969, 1970,
	1516, 1569, 1570, 1571, 1969, 1968, 1573, 1575, 487, 1465,
	581, 487, 166, 487, 1520, 1497, 1849, 1164, 1833, 486,
	1826, 1827, 1469, 1477, 581, 486, 1202, 1550, 1498, 1202,
	1528, 1202, 1529, 1530, 1531, 1532, 1556, 35, 1500, 1593,
	958, 581, 1504, 1164, 1163, 1498, 1109, 1108, 1540, 1541,
	1542, 1543, 1519, 1518, 1722, 1755, 1503, 35, 2055, 1476,
	1466, 612, 1729, 1497, 612, 1477, 1580, 2198, 35, 486,
	958, 1388, 1990, 1971, 1477, 1505, 1388, 1388, 1692, 1587,
	1691, 574, 1590, 1465, 1591, 1594, 1577, 1730, 1455, 1551,
	1433, 1345, 1499, 1292, 1095, 784, 1546, 1547, 2079, 783,
	1501, 1233, 71, 2161, 1562, 1564, 1561, 2136, 2100, 1499,
	1572, 165, 1477, 2071, 71, 2066, 1603, 1497, 165, 963,
	1166, 1551, 1585, 165, 165, 1937, 1604, 165, 801, 165,
	1586, 1589, 1465, 1549, 71, 165, 2005, 1965, 1605, 1535,
	1536, 1537, 165, 1607, 1608, 71, 802, 1834, 2080, 2081,
	2082, 1234, 1235, 1236, 2083, 499, 1199, 1545, 71, 1539,
	1538, 1280, 1194, 1190, 1020, 1162, 96, 1808, 866, 165,
	486, 1482, 1485, 1486, 1487, 1483, 2008, 1484, 1488, 1613,
	2162, 1941, 1942, 1941, 1942, 1560, 1640, 1641, 2258, 2223,
	1988, 1643, 1987, 1986, 1807, 1944, 1059, 1062, 1926, 1230,
	1644, 2084, 2085, 1482, 1485, 1486, 1487, 1483, 1818, 1484,
	1488, 1363, 1634, 1947, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1633,
	970, 980, 981, 973, 974, 975, 976, 977, 978, 979,
	972, 1808, 1365, 982, 1406, 1407, 1231, 1232, 1412, 1415,
	1416, 1338, 1746, 591, 587, 1946, 1744, 1747, 1743, 1742,
	1671, 1745, 2270, 1748, 165, 1486, 1487, 2243, 1918, 588,
	1648, 1711, 165, 1425, 1428, 1064, 2059, 1431, 1432, 2184,
	2186, 1993, 1720, 1719, 2214, 1709, 2249, 2272, 2187, 2247,
	1657, 2217, 2213, 1710, 1068, 1069, 590, 165, 589, 1366,
	2181, 1291, 566, 1786, 1524, 1708, 1812, 1418, 165, 165,
	165, 165, 165, 831, 830, 2018, 1731, 1715, 1057, 1807,
	165, 1873, 1419, 572, 165, 931, 1670, 165, 165, 1842,
	1058, 165, 165, 165, 1841, 1736, 1753, 1727, 1686, 103,
	2134, 591, 587, 1963, 1767, 1962, 1588, 1724, 1208, 2053,
	1049, 1706, 1207, 1698, 1195, 1450, 166, 588, 166, 1457,
	1458, 166, 1984, 1637, 2194, 1792, 2156, 1785, 1490, 575,
	576, 1714, 1626, 1653, 578, 1725, 2255, 1756, 2253, 2252,
	1723, 1758, 584, 585, 590, 2218, 589, 487, 487, 487,
	1737, 486, 2216, 1740, 2052, 1791, 165, 1795, 1796, 1797,
	1749, 1754, 1301, 165, 1989, 487, 487, 1770, 1762, 486,
	1759, 1738, 1739, 1718, 1741, 486, 1578, 579, 82, 1202,
	1202, 1717, 1771, 2051, 1921, 486, 1722, 1556, 2260, 2259,
	2260, 1681, 1837, 1678, 1078, 1800, 1071, 1846, 2188, 1960,
	1451, 1830, 574, 80, 85, 77, 1810, 1, 165, 165,
	165, 165, 165, 2225, 457, 1434, 1809, 1047, 469, 1815,
	2221, 1267, 1257, 2104, 165, 165, 2158, 1845, 1996, 1554,
	1844, 792, 1835, 1836, 1182, 1819, 1820, 1821, 128, 1514,
	1515, 2238, 1400, 93, 166, 755, 92, 795, 893, 1579,
	1843, 2096, 1401, 1787, 1525, 1115, 1113, 1114, 1303, 1112,
	486, 1117, 1116, 1111, 1339, 483, 1388, 1489, 163, 1884,
	1104, 1072, 487, 832, 447, 166, 1974, 166, 166, 1335,
	487, 1611, 453, 990, 1716, 1763, 487, 1871, 609, 1886,
	1872, 602, 1865, 1932, 2211, 1877, 486, 2180, 2182, 2130,
	2185, 2178, 2271, 2246, 2193, 1789, 1790, 165, 1522, 1449,
	1060, 2050, 1899, 1920, 1685, 1019, 1420, 486, 535, 1087,
	508, 1444, 1883, 486, 486, 1358, 1884, 523, 520, 521,
	1460, 1728, 964, 1898, 1927, 506, 1354, 1355, 1356, 1357,
	500, 1885, 1924, 1079, 1481, 1479, 165, 1478, 1736, 1635,
	1091, 1943, 1939, 1085, 1464, 1905, 1523, 1852, 2002, 1936,
	943, 583, 495, 767, 1930, 1417, 2167, 164, 1652, 1914,
	443, 2039, 582, 481, 61, 165, 1658, 1659, 1660, 1949,
	443, 1951, 1945, 1952, 38, 490, 2266, 934, 443, 1666,
	1667, 1408, 1409, 592, 32, 31, 1950, 1935, 30, 29,
	28, 23, 22, 1982, 21, 596, 596, 20, 19, 165,
	1684, 1966, 1967, 25, 443, 18, 17, 486, 16, 98,
	48, 1957, 45, 43, 105, 486, 104, 46, 42, 499,
	869, 165, 27, 166, 26, 15, 14, 1978, 13, 12,
	1977, 165, 1995, 11, 10, 9, 5, 4, 1992, 937,
	1997, 24, 1008, 2, 0, 165, 1979, 1980, 165, 0,
	1994, 0, 0, 0, 1991, 487, 1556, 2019, 0, 2000,
	0, 1999, 2043, 0, 0, 0, 0, 0, 0, 0,
	0, 1511, 487, 487, 0, 487, 0, 487, 487, 0,
	487, 487, 487, 487, 487, 487, 2014, 2013, 0, 0,
	2022, 0, 0, 0, 0, 487, 0, 0, 0, 166,
	2016, 2017, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 971, 970, 980, 981, 973, 974, 975, 976, 977,
	978, 979, 972, 0, 0, 982, 487, 0, 166, 0,
	1552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1424, 2054, 0, 166, 0, 0, 1736, 2063, 0, 0,
	0, 0, 2024, 2025, 0, 2026, 0, 0, 2028, 166,
	2030, 0, 0, 0, 165, 2069, 166, 165, 165, 165,
	486, 486, 0, 2070, 0, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 487, 487, 487, 2090, 0, 2105,
	486, 486, 486, 0, 0, 0, 0, 2062, 0, 0,
	0, 0, 0, 0, 0, 0, 2111, 0, 0, 0,
	2068, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 486, 486, 486, 165, 0,
	2109, 0, 0, 0, 0, 0, 0, 0, 0, 486,
	0, 486, 0, 0, 2117, 0, 0, 486, 0, 0,
	2137, 0, 486, 0, 2127, 2133, 2125, 2126, 2139, 1879,
	1880, 2135, 0, 0, 2142, 0, 0, 2141, 0, 2144,
	0, 0, 487, 2143, 1900, 1901, 0, 1902, 1903, 1930,
	0, 486, 2049, 1930, 486, 2146, 0, 2147, 1909, 1910,
	2150, 0, 0, 2160, 0, 2152, 2153, 0, 2157, 0,
	0, 0, 0, 0, 0, 0, 487, 487, 0, 0,
	0, 167, 168, 169, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2177, 0, 0,
	0, 487, 0, 0, 2073, 2189, 2075, 0, 166, 0,
	0, 487, 486, 165, 0, 166, 0, 166, 443, 2196,
	443, 0, 0, 443, 486, 166, 166, 0, 0, 2200,
	1930, 0, 487, 0, 0, 487, 0, 0, 0, 0,
	0, 486, 1959, 462, 0, 2208, 487, 0, 2215, 486,
	486, 0, 461, 2219, 2224, 2229, 2237, 2232, 2160, 2239,
	1688, 2110, 0, 459, 0, 0, 0, 1736, 2251, 2250,
	0, 0, 0, 0, 0, 0, 0, 2257, 0, 0,
	0, 0, 161, 0, 2128, 0, 0, 2263, 0, 0,
	0, 1712, 1713, 1062, 0, 0, 2269, 0, 0, 0,
	0, 487, 456, 0, 0, 0, 0, 103, 0, 0,
	0, 468, 0, 2283, 0, 0, 0, 0, 0, 0,
	145, 2285, 0, 0, 0, 487, 0, 0, 0, 0,
	0, 487, 0, 971, 970, 980, 981, 973, 974, 975,
	976, 977, 978, 979, 972, 2020, 443, 982, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 0,
	0, 1769, 596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 487, 143, 443, 0, 443,
	1094, 0, 0, 0, 0, 160, 446, 0, 448, 463,
	0, 476, 0, 475, 452, 0, 450, 454, 464, 455,
	0, 449, 0, 460, 0, 0, 451, 465, 466, 480,
	479, 467, 0, 473, 458, 477, 0, 166, 0, 0,
	0, 0, 0, 0, 166, 161, 0, 2037, 2042, 166,
	166, 0, 2072, 166, 0, 166, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 146, 0, 166, 0,
	103, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 487, 971, 970, 980,
	981, 973, 974, 975, 976, 977, 978, 979, 972, 0,
	0, 982, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2112, 2113, 2114, 2115, 2116, 0, 0, 0, 2119,
	2120, 0, 0, 0, 0, 0, 0, 142, 0, 143,
	0, 0, 0, 0, 0, 1907, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 443, 0, 0, 0, 478,
	971, 970, 980, 981, 973, 974, 975, 976, 977, 978,
	979, 972, 0, 0, 982, 0, 0, 471, 0, 0,
	1922, 534, 138, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 472, 0, 0, 0, 0, 0, 166, 0,
	1205, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 166, 0, 1205, 1205, 0, 0, 0,
	0, 443, 0, 0, 166, 166, 166, 166, 166, 0,
	0, 485, 0, 0, 0, 0, 166, 0, 0, 0,
	166, 0, 0, 166, 166, 0, 0, 166, 166, 166,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 610, 0, 1300, 759, 0, 766, 0,
	0, 0, 2233, 0, 0, 0, 0, 0, 0, 0,
	0, 443, 0, 0, 0, 0, 0, 0, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 1323, 1324, 443,
	443, 443, 443, 443, 443, 443, 0, 487, 0, 0,
	0, 0, 166, 0, 0, 138, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 487, 0, 2036, 0, 0,
	0, 487, 0, 443, 0, 0, 0, 0, 0, 0,
	0, 487, 0, 0, 139, 144, 141, 147, 148, 149,
	150, 152, 153, 154, 155, 0, 2041, 0, 0, 0,
	156, 157, 158, 159, 166, 166, 166, 166, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 499,
	166, 166, 0, 0, 0, 0, 2064, 0, 0, 2065,
	0, 0, 2067, 0, 0, 596, 1300, 0, 0, 0,
	596, 596, 0, 0, 596, 596, 596, 0, 0, 0,
	1205, 0, 0, 0, 0, 0, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	596, 596, 596, 596, 596, 0, 0, 2035, 0, 1442,
	971, 970, 980, 981, 973, 974, 975, 976, 977, 978,
	979, 972, 487, 0, 982, 0, 0, 0, 0, 0,
	443, 0, 0, 166, 0, 0, 1300, 443, 0, 443,
	0, 0, 0, 487, 0, 0, 0, 443, 443, 487,
	487, 0, 0, 0, 0, 2034, 0, 139, 144, 141,
	147, 148, 149, 150, 152, 153, 154, 155, 0, 2132,
	499, 0, 166, 156, 157, 158, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 966, 0, 969, 0,
	0, 0, 0, 0, 983, 984, 985, 986, 987, 988,
	989, 166, 967, 968, 965, 971, 970, 980, 981, 973,
	974, 975, 976, 977, 978, 979, 972, 0, 0, 982,
	971, 970, 980, 981, 973, 974, 975, 976, 977, 978,
	979, 972, 0, 0, 982, 166, 0, 0, 0, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 971, 970,
	980, 981, 973, 974, 975, 976, 977, 978, 979, 972,
	0, 166, 982, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1878, 0, 0, 0, 1403,
	1404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 610, 610, 971, 970, 980, 981, 973,
	974, 975, 976, 977, 978, 979, 972, 0, 0, 982,
	933, 935, 0, 0, 0, 0, 0, 0, 0, 443,
	0, 0, 0, 0, 0, 1448, 443, 0, 0, 0,
	0, 443, 443, 1663, 0, 443, 0, 1638, 0, 0,
	0, 0, 0, 443, 0, 0, 0, 0, 0, 0,
	443, 0, 0, 971, 970, 980, 981, 973, 974, 975,
	976, 977, 978, 979, 972, 0, 0, 982, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 443, 0, 0,
	166, 0, 0, 166, 166, 166, 487, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 487, 487, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 1075, 0, 0,
	0, 0, 0, 0, 0, 610, 0, 0, 0, 0,
	0, 1105, 0, 0, 0, 596, 596, 0, 0, 0,
	0, 487, 487, 487, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 487, 596, 487, 0, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 487, 0,
	0, 0, 443, 0, 0, 0, 0, 0, 0, 0,
	1442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 487, 0, 0,
	487, 0, 0, 0, 596, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1205, 443, 443, 443, 443,
	443, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 443, 0, 0, 443, 443, 0, 0, 443,
	1760, 1300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 487, 166,
	0, 0, 1132, 537, 34, 0, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 0, 0, 0, 487, 487, 0, 34, 0,
	0, 0, 0, 0, 443, 0, 0, 0, 0, 0,
	759, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1205, 0, 1204, 0, 0, 0, 1210, 1210, 0,
	1210, 1300, 1210, 1210, 0, 1219, 1210, 1210, 1210, 1210,
	1210, 0, 0, 573, 0, 0, 0, 0, 1204, 1204,
	759, 0, 1050, 0, 0, 0, 443, 443, 443, 443,
	443, 0, 1664, 0, 0, 0, 1665, 0, 0, 0,
	0, 0, 443, 443, 0, 0, 0, 1672, 1673, 1120,
	0, 1279, 0, 1679, 0, 0, 1682, 1683, 0, 0,
	0, 0, 0, 0, 1689, 0, 1690, 0, 0, 1693,
	1694, 1695, 1696, 1697, 442, 0, 0, 596, 0, 0,
	0, 0, 0, 0, 489, 1707, 0, 0, 0, 0,
	0, 0, 569, 1133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 610,
	610, 610, 0, 0, 0, 0, 0, 0, 763, 0,
	0, 0, 0, 0, 0, 443, 0, 0, 0, 0,
	0, 0, 1751, 1752, 0, 0, 0, 0, 1205, 0,
	0, 0, 0, 0, 1146, 1149, 1150, 1151, 1152, 1153,
	1154, 0, 1155, 1156, 1157, 1158, 1159, 1134, 1135, 1136,
	1137, 1118, 1119, 1147, 443, 1121, 0, 1122, 1123, 1124,
	1125, 1126, 1127, 1128, 1129, 1130, 1131, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 0, 0, 0, 0, 0,
	0, 0, 0, 443, 0, 0, 0, 1394, 0, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 443, 0, 0,
	0, 1426, 1427, 0, 0, 0, 0, 0, 1205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 443,
	0, 0, 1148, 0, 0, 0, 1461, 0, 0, 443,
	0, 0, 0, 0, 0, 0, 1075, 0, 161, 610,
	0, 0, 0, 443, 0, 0, 443, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 610, 0, 0,
	610, 0, 0, 103, 0, 125, 0, 0, 0, 0,
	0, 759, 0, 0, 0, 0, 145, 1881, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 124, 0, 0, 0, 1205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 766, 0, 0, 0,
	142, 0, 143, 0, 0, 0, 0, 1185, 1186, 134,
	133, 160, 0, 1933, 0, 0, 0, 0, 0, 0,
	759, 0, 0, 0, 0, 0, 766, 0, 0, 0,
	0, 0, 443, 0, 1948, 443, 443, 443, 0, 0,
	0, 0, 0, 0, 926, 926, 926, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 1187, 136, 34, 1184, 0, 130, 131, 0,
	759, 0, 146, 0, 0, 0, 0, 991, 993, 0,
	0, 0, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1442, 0, 0, 0,
	0, 0, 870, 0, 875, 0, 0, 877, 1006, 0,
	0, 0, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	0, 1021, 1023, 1026, 1026, 1026, 1023, 1026, 1026, 1023,
	1026, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 0, 0,
	0, 0, 0, 1051, 0, 0, 0, 34, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2021, 0, 0, 0, 2023, 0,
	0, 1647, 0, 0, 1088, 0, 0, 0, 0, 2032,
	2033, 161, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 1181, 0, 0, 2047, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 125, 0,
	0, 443, 2056, 2057, 0, 0, 2061, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1205, 0, 0,
	0, 0, 0, 0, 132, 0, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 124, 126, 0, 0, 127,
	0, 1081, 0, 0, 1092, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 143, 0, 2094, 0, 0,
	1185, 1186, 134, 133, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2122, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 1187, 136, 0, 1184, 0,
	130, 131, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 0,
	139, 144, 141, 147, 148, 149, 150, 152, 153, 154,
	155, 0, 0, 0, 0, 0, 156, 157, 158, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 2163, 2164, 2165, 2166, 0, 2170, 0,
	2171, 2172, 2174, 0, 0, 0, 2175, 2176, 0, 0,
	1825, 0, 0, 0, 1204, 0, 1832, 0, 0, 1110,
	0, 0, 0, 0, 610, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 35,
	36, 37, 72, 39, 40, 0, 0, 0, 2202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 76,
	0, 138, 0, 0, 41, 67, 68, 0, 65, 69,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 926, 926, 926, 0, 1241, 0, 0, 0, 0,
	0, 610, 0, 0, 0, 0, 54, 0, 0, 0,
	0, 0, 0, 0, 2264, 2265, 71, 132, 0, 0,
	0, 0, 0, 0, 1281, 0, 0, 0, 0, 126,
	0, 0, 127, 0, 0, 0, 0, 1210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1310, 0, 0, 610, 0,
	0, 1204, 1314, 0, 1934, 1210, 0, 0, 0, 0,
	0, 0, 0, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	44, 47, 50, 49, 52, 0, 64, 0, 0, 70,
	0, 0, 0, 0, 0, 0, 0, 1092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 53, 75, 74, 0, 0, 62, 63, 51,
	0, 0, 0, 139, 144, 141, 147, 148, 149, 150,
	152, 153, 154, 155, 0, 0, 0, 0, 0, 156,
	157, 158, 159, 0, 0, 0, 0, 0, 759, 0,
	0, 1204, 1493, 0, 0, 0, 1825, 0, 55, 56,
	0, 57, 58, 59, 60, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1468, 0, 0, 0, 0, 0,
	0, 1472, 0, 1475, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1204,
	0, 0, 0, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 2091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2106, 2107, 2108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2123, 2123, 2123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2138, 0, 2140, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1825, 0, 0, 610, 0, 0, 0, 0,
	0, 0, 0, 1092, 0, 0, 0, 0, 0, 0,
	1622, 0, 0, 0, 0, 1631, 1632, 0, 0, 1636,
	0, 0, 0, 0, 0, 0, 0, 1639, 0, 0,
	0, 0, 0, 1668, 1642, 0, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 1646, 0, 0, 0, 2206, 0, 0, 0, 0,
	0, 0, 0, 1705, 0, 0, 0, 0, 0, 0,
	1204, 0, 2220, 0, 0, 0, 0, 0, 0, 0,
	610, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	1088, 0, 0, 0, 0, 0, 0, 1732, 1733, 0,
	0, 1088, 1088, 1088, 1088, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	1088, 0, 0, 0, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 1857, 1858, 1859, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1092, 1866, 0, 0,
	0, 0, 0, 0, 1931, 0, 34, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1919,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1964, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 1985, 0, 0, 0, 2044, 2045, 2046, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2012, 0, 0,
	2015, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1931,
	0, 34, 0, 1931, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2086, 0, 0, 2087,
	2088, 2089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1931, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2195, 0, 0, 0, 0,
	34, 0, 0, 0, 0, 0, 0, 0, 737, 723,
	0, 0, 672, 740, 642, 660, 750, 663, 666, 706,
	621, 685, 314, 657, 0, 646, 617, 653, 618, 644,
	674, 223, 678, 641, 725, 688, 739, 272, 34, 623,
	647, 328, 662, 176, 708, 366, 209, 281, 279, 394,
	233, 226, 222, 208, 256, 287, 326, 384, 320, 746,
	276, 695, 0, 375, 299, 0, 0, 0, 676, 729,
	683, 719, 671, 707, 631, 694, 741, 658, 703, 742,
	262, 207, 175, 311, 376, 237, 0, 0, 0, 167,
	168, 169, 0, 2240, 2241, 2201, 0, 0, 0, 0,
	198, 0, 205, 700, 736, 655, 702, 219, 260, 225,
	218, 391, 747, 728, 705, 753, 616, 697, 0, 619,
	622, 749, 732, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 675, 684, 716, 669, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 693, 0, 0, 0,
	627, 620, 0, 0, 0, 0, 673, 0, 0, 0,
	630, 0, 649, 717, 0, 614, 245, 624, 300, 0,
	721, 731, 670, 423, 735, 668, 667, 738, 712, 628,
	727, 661, 271, 626, 268, 171, 187, 0, 659, 310,
	349, 355, 726, 645, 654, 210, 652, 353, 324, 408,
	194, 235, 346, 329, 351, 692, 710, 352, 277, 396,
	341, 406, 424, 425, 217, 304, 414, 388, 420, 435,
	188, 214, 318, 381, 411, 372, 297, 392, 393, 267,
	371, 243, 174, 275, 432, 186, 361, 202, 179, 383,
	404, 199, 364, 0, 0, 0, 181, 402, 380, 294,
	264, 265, 180, 0, 345, 221, 241, 212, 313, 399,
	400, 211, 437, 190, 419, 183, 928, 418, 306, 395,
	403, 295, 286, 182, 401, 293, 285, 270, 231, 251,
	339, 280, 340, 252, 302, 301, 303, 0, 177, 0,
	377, 412, 438, 195, 196, 197, 640, 230, 234, 240,
	242, 0, 248, 255, 273, 317, 338, 336, 342, 722,
	390, 407, 415, 422, 428, 429, 433, 430, 431, 434,
	305, 191, 254, 373, 269, 278, 714, 752, 323, 354,
	200, 410, 374, 635, 639, 633, 634, 686, 687, 636,
	743, 744, 745, 718, 629, 0, 637, 638, 0, 724,
	733, 734, 691, 170, 184, 274, 748, 343, 238, 436,
	417, 413, 615, 632, 216, 643, 0, 0, 656, 664,
	665, 677, 679, 680, 681, 682, 690, 698, 699, 701,
	709, 711, 713, 715, 720, 730, 751, 172, 173, 185,
	193, 203, 215, 228, 236, 246, 250, 253, 257, 258,
	261, 266, 283, 288, 289, 290, 291, 307, 308, 309,
	312, 315, 316, 319, 321, 322, 325, 331, 332, 333,
	334, 335, 337, 344, 348, 356, 357, 358, 359, 360,
	362, 363, 367, 368, 369, 370, 378, 382, 397, 398,
	409, 421, 426, 247, 405, 427, 0, 282, 689, 696,
	284, 232, 249, 259, 704, 416, 379, 189, 350, 239,
	178, 206, 192, 213, 227, 229, 263, 292, 298, 327,
	330, 244, 224, 204, 347, 201, 365, 385, 386, 387,
	389, 296, 220, 737, 723, 0, 0, 672, 740, 642,
	660, 750, 663, 666, 706, 621, 685, 314, 657, 0,
	646, 617, 653, 618, 644, 674, 223, 678, 641, 725,
	688, 739, 272, 0, 623, 647, 328, 662, 176, 708,
	366, 209, 281, 279, 394, 233, 226, 222, 208, 256,
	287, 326, 384, 320, 746, 276, 695, 0, 375, 299,
	0, 0, 0, 676, 729, 683, 719, 671, 707, 631,
	694, 741, 658, 703, 742, 262, 207, 175, 311, 376,
	237, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 700, 736,
	655, 702, 219, 260, 225, 218, 391, 747, 728, 705,
	753, 616, 697, 0, 619, 622, 749, 732, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 675, 684, 716,
	669, 0, 0, 0, 0, 0, 0, 1923, 0, 648,
	0, 693, 0, 0, 0, 627, 620, 0, 0, 0,
	0, 673, 0, 0, 0, 630, 0, 649, 717, 0,
	614, 245, 624, 300, 0, 721, 731, 670, 423, 735,
	668, 667, 738, 712, 628, 727, 661, 271, 626, 268,
	171, 187, 0, 659, 310, 349, 355, 726, 645, 654,
	210, 652, 353, 324, 408, 194, 235, 346, 329, 351,
	692, 710, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 928, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 640, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 722, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 714, 752, 323, 354, 200, 410, 374, 635, 639,
	633, 634, 686, 687, 636, 743, 744, 745, 718, 629,
	0, 637, 638, 0, 724, 733, 734, 691, 170, 184,
	274, 748, 343, 238, 436, 417, 413, 615, 632, 216,
	643, 0, 0, 656, 664, 665, 677, 679, 680, 681,
	682, 690, 698, 699, 701, 709, 711, 713, 715, 720,
	730, 751, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 689, 696, 284, 232, 249, 259, 704,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 737, 723,
	0, 0, 672, 740, 642, 660, 750, 663, 666, 706,
	621, 685, 314, 657, 0, 646, 617, 653, 618, 644,
	674, 223, 678, 641, 725, 688, 739, 272, 0, 623,
	647, 328, 662, 176, 708, 366, 209, 281, 279, 394,
	233, 226, 222, 208, 256, 287, 326, 384, 320, 746,
	276, 695, 0, 375, 299, 0, 0, 0, 676, 729,
	683, 719, 671, 707, 631, 694, 741, 658, 703, 742,
	262, 207, 175, 311, 376, 237, 0, 0, 0, 167,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 205, 700, 736, 655, 702, 219, 260, 225,
	218, 391, 747, 728, 705, 753, 616, 697, 0, 619,
	622, 749, 732, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 675, 684, 716, 669, 0, 0, 0, 0,
	0, 0, 1761, 0, 648, 0, 693, 0, 0, 0,
	627, 620, 0, 0, 0, 0, 673, 0, 0, 0,
	630, 0, 649, 717, 0, 614, 245, 624, 300, 0,
	721, 731, 670, 423, 735, 668, 667, 738, 712, 628,
	727, 661, 271, 626, 268, 171, 187, 0, 659, 310,
	349, 355, 726, 645, 654, 210, 652, 353, 324, 408,
	194, 235, 346, 329, 351, 692, 710, 352, 277, 396,
	341, 406, 424, 425, 217, 304, 414, 388, 420, 435,
	188, 214, 318, 381, 411, 372, 297, 392, 393, 267,
	371, 243, 174, 275, 432, 186, 361, 202, 179, 383,
	404, 199, 364, 0, 0, 0, 181, 402, 380, 294,
	264, 265, 180, 0, 345, 221, 241, 212, 313, 399,
	400, 211, 437, 190, 419, 183, 928, 418, 306, 395,
	403, 295, 286, 182, 401, 293, 285, 270, 231, 251,
	339, 280, 340, 252, 302, 301, 303, 0, 177, 0,
	377, 412, 438, 195, 196, 197, 640, 230, 234, 240,
	242, 0, 248, 255, 273, 317, 338, 336, 342, 722,
	390, 407, 415, 422, 428, 429, 433, 430, 431, 434,
	305, 191, 254, 373, 269, 278, 714, 752, 323, 354,
	200, 410, 374, 635, 639, 633, 634, 686, 687, 636,
	743, 744, 745, 718, 629, 0, 637, 638, 0, 724,
	733, 734, 691, 170, 184, 274, 748, 343, 238, 436,
	417, 413, 615, 632, 216, 643, 0, 0, 656, 664,
	665, 677, 679, 680, 681, 682, 690, 698, 699, 701,
	709, 711, 713, 715, 720, 730, 751, 172, 173, 185,
	193, 203, 215, 228, 236, 246, 250, 253, 257, 258,
	261, 266, 283, 288, 289, 290, 291, 307, 308, 309,
	312, 315, 316, 319, 321, 322, 325, 331, 332, 333,
	334, 335, 337, 344, 348, 356, 357, 358, 359, 360,
	362, 363, 367, 368, 369, 370, 378, 382, 397, 398,
	409, 421, 426, 247, 405, 427, 0, 282, 689, 696,
	284, 232, 249, 259, 704, 416, 379, 189, 350, 239,
	178, 206, 192, 213, 227, 229, 263, 292, 298, 327,
	330, 244, 224, 204, 347, 201, 365, 385, 386, 387,
	389, 296, 220, 737, 723, 0, 0, 672, 740, 642,
	660, 750, 663, 666, 706, 621, 685, 314, 657, 0,
	646, 617, 653, 618, 644, 674, 223, 678, 641, 725,
	688, 739, 272, 0, 623, 647, 328, 662, 176, 708,
	366, 209, 281, 279, 394, 233, 226, 222, 208, 256,
	287, 326, 384, 320, 746, 276, 695, 0, 375, 299,
	0, 0, 0, 676, 729, 683, 719, 671, 707, 631,
	694, 741, 658, 703, 742, 262, 207, 175, 311, 376,
	237, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 700, 736,
	655, 702, 219, 260, 225, 218, 391, 747, 728, 705,
	753, 616, 697, 0, 619, 622, 749, 732, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 675, 684, 716,
	669, 0, 0, 0, 0, 0, 0, 1470, 0, 648,
	0, 693, 0, 0, 0, 627, 620, 0, 0, 0,
	0, 673, 0, 0, 0, 630, 0, 649, 717, 0,
	614, 245, 624, 300, 0, 721, 731, 670, 423, 735,
	668, 667, 738, 712, 628, 727, 661, 271, 626, 268,
	171, 187, 0, 659, 310, 349, 355, 726, 645, 654,
	210, 652, 353, 324, 408, 194, 235, 346, 329, 351,
	692, 710, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 928, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 640, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 722, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 714, 752, 323, 354, 200, 410, 374, 635, 639,
	633, 634, 686, 687, 636, 743, 744, 745, 718, 629,
	0, 637, 638, 0, 724, 733, 734, 691, 170, 184,
	274, 748, 343, 238, 436, 417, 413, 615, 632, 216,
	643, 0, 0, 656, 664, 665, 677, 679, 680, 681,
	682, 690, 698, 699, 701, 709, 711, 713, 715, 720,
	730, 751, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 689, 696, 284, 232, 249, 259, 704,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 737, 723,
	0, 0, 672, 740, 642, 660, 750, 663, 666, 706,
	621, 685, 314, 657, 0, 646, 617, 653, 618, 644,
	674, 223, 678, 641, 725, 688, 739, 272, 0, 623,
	647, 328, 662, 176, 708, 366, 209, 281, 279, 394,
	233, 226, 222, 208, 256, 287, 326, 384, 320, 746,
	276, 695, 0, 375, 299, 0, 0, 0, 676, 729,
	683, 719, 671, 707, 631, 694, 741, 658, 703, 742,
	262, 207, 175, 311, 376, 237, 71, 0, 0, 167,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 205, 700, 736, 655, 702, 219, 260, 225,
	218, 391, 747, 728, 705, 753, 616, 697, 0, 619,
	622, 749, 732, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 675, 684, 716, 669, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 693, 0, 0, 0,
	627, 620, 0, 0, 0, 0, 673, 0, 0, 0,
	630, 0, 649, 717, 0, 614, 245, 624, 300, 0,
	721, 731, 670, 423, 735, 668, 667, 738, 712, 628,
	727, 661, 271, 626, 268, 171, 187, 0, 659, 310,
	349, 355, 726, 645, 654, 210, 652, 353, 324, 408,
	194, 235, 346, 329, 351, 692, 710, 352, 277, 396,
	341, 406, 424, 425, 217, 304, 414, 388, 420, 435,
	188, 214, 318, 381, 411, 372, 297, 392, 393, 267,
	371, 243, 174, 275, 432, 186, 361, 202, 179, 383,
	404, 199, 364, 0, 0, 0, 181, 402, 380, 294,
	264, 265, 180, 0, 345, 221, 241, 212, 313, 399,
	400, 211, 437, 190, 419, 183, 928, 418, 306, 395,
	403, 295, 286, 182, 401, 293, 285, 270, 231, 251,
	339, 280, 340, 252, 302, 301, 303, 0, 177, 0,
	377, 412, 438, 195, 196, 197, 640, 230, 234, 240,
	242, 0, 248, 255, 273, 317, 338, 336, 342, 722,
	390, 407, 415, 422, 428, 429, 433, 430, 431, 434,
	305, 191, 254, 373, 269, 278, 714, 752, 323, 354,
	200, 410, 374, 635, 639, 633, 634, 686, 687, 636,
	743, 744, 745, 718, 629, 0, 637, 638, 0, 724,
	733, 734, 691, 170, 184, 274, 748, 343, 238, 436,
	417, 413, 615, 632, 216, 643, 0, 0, 656, 664,
	665, 677, 679, 680, 681, 682, 690, 698, 699, 701,
	709, 711, 713, 715, 720, 730, 751, 172, 173, 185,
	193, 203, 215, 228, 236, 246, 250, 253, 257, 258,
	261, 266, 283, 288, 289, 290, 291, 307, 308, 309,
	312, 315, 316, 319, 321, 322, 325, 331, 332, 333,
	334, 335, 337, 344, 348, 356, 357, 358, 359, 360,
	362, 363, 367, 368, 369, 370, 378, 382, 397, 398,
	409, 421, 426, 247, 405, 427, 0, 282, 689, 696,
	284, 232, 249, 259, 704, 416, 379, 189, 350, 239,
	178, 206, 192, 213, 227, 229, 263, 292, 298, 327,
	330, 244, 224, 204, 347, 201, 365, 385, 386, 387,
	389, 296, 220, 737, 723, 0, 0, 672, 740, 642,
	660, 750, 663, 666, 706, 621, 685, 314, 657, 0,
	646, 617, 653, 618, 644, 674, 223, 678, 641, 725,
	688, 739, 272, 0, 623, 647, 328, 662, 176, 708,
	366, 209, 281, 279, 394, 233, 226, 222, 208, 256,
	287, 326, 384, 320, 746, 276, 695, 0, 375, 299,
	0, 0, 0, 676, 729, 683, 719, 671, 707, 631,
	694, 741, 658, 703, 742, 262, 207, 175, 311, 376,
	237, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 700, 736,
	655, 702, 219, 260, 225, 218, 391, 747, 728, 705,
	753, 616, 697, 0, 619, 622, 749, 732, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 675, 684, 716,
	669, 0, 0, 0, 0, 0, 0, 0, 0, 648,
	0, 693, 0, 0, 0, 627, 620, 0, 0, 0,
	0, 673, 0, 0, 0, 630, 0, 649, 717, 0,
	614, 245, 624, 300, 0, 721, 731, 670, 423, 735,
	668, 667, 738, 712, 628, 727, 661, 271, 626, 268,
	171, 187, 0, 659, 310, 349, 355, 726, 645, 654,
	210, 652, 353, 324, 408, 194, 235, 346, 329, 351,
	692, 710, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 928, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 640, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 722, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 714, 752, 323, 354, 200, 410, 374, 635, 639,
	633, 634, 686, 687, 636, 743, 744, 745, 718, 629,
	0, 637, 638, 0, 724, 733, 734, 691, 170, 184,
	274, 748, 343, 238, 436, 417, 413, 615, 632, 216,
	643, 0, 0, 656, 664, 665, 677, 679, 680, 681,
	682, 690, 698, 699, 701, 709, 711, 713, 715, 720,
	730, 751, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 689, 696, 284, 232, 249, 259, 704,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 737, 723,
	0, 0, 672, 740, 642, 660, 750, 663, 666, 706,
	621, 685, 314, 657, 0, 646, 617, 653, 618, 644,
	674, 223, 678, 641, 725, 688, 739, 272, 0, 623,
	647, 328, 662, 176, 708, 366, 209, 281, 279, 394,
	233, 226, 222, 208, 256, 287, 326, 384, 320, 746,
	276, 695, 0, 375, 299, 0, 0, 0, 676, 729,
	683, 719, 671, 707, 631, 694, 741, 658, 703, 742,
	262, 207, 175, 311, 376, 237, 0, 0, 0, 167,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 205, 700, 736, 655, 702, 219, 260, 225,
	218, 391, 747, 728, 705, 753, 616, 697, 0, 619,
	622, 749, 732, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 675, 684, 716, 669, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 693, 0, 0, 0,
	627, 620, 0, 0, 0, 0, 673, 0, 0, 0,
	630, 0, 649, 717, 0, 614, 245, 624, 300, 0,
	721, 731, 670, 423, 735, 668, 667, 738, 712, 628,
	727, 661, 271, 626, 268, 171, 187, 0, 659, 310,
	349, 355, 726, 645, 654, 210, 652, 353, 324, 408,
	194, 235, 346, 329, 351, 692, 710, 352, 277, 396,
	341, 406, 424, 425, 217, 304, 414, 388, 420, 435,
	188, 214, 318, 381, 411, 372, 297, 392, 393, 267,
	371, 243, 174, 275, 432, 186, 361, 202, 179, 383,
	404, 199, 364, 0, 0, 0, 181, 402, 380, 294,
	264, 265, 180, 0, 345, 221, 241, 212, 313, 399,
	400, 211, 437, 190, 419, 183, 625, 418, 306, 395,
	403, 295, 286, 182, 401, 293, 285, 270, 231, 251,
	339, 280, 340, 252, 302, 301, 303, 0, 177, 0,
	377, 412, 438, 195, 196, 197, 640, 230, 234, 240,
	242, 0, 248, 255, 273, 317, 338, 336, 342, 722,
	390, 407, 415, 422, 428, 429, 433, 430, 431, 434,
	613, 754, 607, 606, 269, 278, 714, 752, 323, 354,
	200, 410, 374, 635, 639, 633, 634, 686, 687, 636,
	743, 744, 745, 718, 629, 0, 637, 638, 0, 724,
	733, 734, 691, 170, 184, 274, 748, 343, 238, 436,
	417, 413, 615, 632, 216, 643, 0, 0, 656, 664,
	665, 677, 679, 680, 681, 682, 690, 698, 699, 701,
	709, 711, 713, 715, 720, 730, 751, 172, 173, 185,
	193, 203, 215, 228, 236, 246, 250, 253, 257, 258,
	261, 266, 283, 288, 289, 290, 291, 307, 308, 309,
	312, 315, 316, 319, 321, 322, 325, 331, 332, 333,
	334, 335, 337, 344, 348, 356, 357, 358, 359, 360,
	362, 363, 367, 368, 369, 370, 378, 382, 397, 398,
	409, 421, 426, 247, 405, 427, 0, 282, 689, 696,
	284, 232, 249, 259, 704, 416, 379, 189, 350, 239,
	178, 206, 192, 213, 227, 229, 263, 292, 298, 327,
	330, 244, 224, 204, 347, 201, 365, 385, 386, 387,
	389, 296, 220, 737, 723, 0, 0, 672, 740, 642,
	660, 750, 663, 666, 706, 621, 685, 314, 657, 0,
	646, 617, 653, 618, 644, 674, 223, 678, 641, 725,
	688, 739, 272, 0, 623, 647, 328, 662, 176, 708,
	366, 209, 281, 279, 394, 233, 226, 222, 208, 256,
	287, 326, 384, 320, 746, 276, 695, 0, 375, 299,
	0, 0, 0, 676, 729, 683, 719, 671, 707, 631,
	694, 741, 658, 703, 742, 262, 207, 175, 311, 376,
	237, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 700, 736,
	655, 702, 219, 260, 225, 218, 391, 747, 728, 705,
	753, 616, 697, 0, 619, 622, 749, 732, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 675, 684, 716,
	669, 0, 0, 0, 0, 0, 0, 0, 0, 648,
	0, 693, 0, 0, 0, 627, 620, 0, 0, 0,
	0, 673, 0, 0, 0, 630, 0, 649, 717, 0,
	614, 245, 624, 300, 0, 721, 731, 670, 423, 735,
	668, 667, 738, 712, 628, 727, 661, 271, 626, 268,
	171, 187, 0, 659, 310, 349, 355, 726, 645, 654,
	210, 652, 353, 324, 408, 194, 235, 346, 329, 351,
	692, 710, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 1096, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 625, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 640, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 722, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 613, 754, 607, 606, 269,
	278, 714, 752, 323, 354, 200, 410, 374, 635, 639,
	633, 634, 686, 687, 636, 743, 744, 745, 718, 629,
	0, 637, 638, 0, 724, 733, 734, 691, 170, 184,
	274, 748, 343, 238, 436, 417, 413, 615, 632, 216,
	643, 0, 0, 656, 664, 665, 677, 679, 680, 681,
	682, 690, 698, 699, 701, 709, 711, 713, 715, 720,
	730, 751, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 689, 696, 284, 232, 249, 259, 704,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 737, 723,
	0, 0, 672, 740, 642, 660, 750, 663, 666, 706,
	621, 685, 314, 657, 0, 646, 617, 653, 618, 644,
	674, 223, 678, 641, 725, 688, 739, 272, 0, 623,
	647, 328, 662, 176, 708, 366, 209, 281, 279, 394,
	233, 226, 222, 208, 256, 287, 326, 384, 320, 746,
	276, 695, 0, 375, 299, 0, 0, 0, 676, 729,
	683, 719, 671, 707, 631, 694, 741, 658, 703, 742,
	262, 207, 175, 311, 376, 237, 0, 0, 0, 167,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 205, 700, 736, 655, 702, 219, 260, 225,
	218, 391, 747, 728, 705, 753, 616, 697, 0, 619,
	622, 749, 732, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 675, 684, 716, 669, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 693, 0, 0, 0,
	627, 620, 0, 0, 0, 0, 673, 0, 0, 0,
	630, 0, 649, 717, 0, 614, 245, 624, 300, 0,
	721, 731, 670, 423, 735, 668, 667, 738, 712, 628,
	727, 661, 271, 626, 268, 171, 187, 0, 659, 310,
	349, 355, 726, 645, 654, 210, 652, 353, 324, 408,
	194, 235, 346, 329, 351, 692, 710, 352, 277, 396,
	341, 406, 424, 425, 217, 304, 414, 388, 420, 435,
	188, 214, 318, 381, 411, 372, 297, 392, 393, 267,
	371, 243, 174, 275, 432, 186, 361, 202, 179, 383,
	604, 199, 364, 0, 0, 0, 181, 402, 380, 294,
	264, 265, 180, 0, 345, 221, 241, 212, 313, 399,
	400, 211, 437, 190, 419, 183, 625, 418, 306, 395,
	403, 295, 286, 182, 401, 293, 285, 270, 231, 251,
	339, 280, 340, 252, 302, 301, 303, 0, 177, 0,
	377, 412, 438, 195, 196, 197, 640, 230, 234, 240,
	242, 0, 248, 255, 273, 317, 338, 336, 342, 722,
	390, 407, 415, 422, 428, 429, 433, 430, 431, 434,
	613, 754, 607, 606, 269, 278, 714, 752, 323, 354,
	200, 410, 374, 635, 639, 633, 634, 686, 687, 636,
	743, 744, 745, 718, 629, 0, 637, 638, 0, 724,
	733, 734, 691, 170, 184, 274, 748, 343, 238, 436,
	417, 413, 615, 632, 216, 643, 0, 0, 656, 664,
	665, 677, 679, 680, 681, 682, 690, 698, 699, 701,
	709, 711, 713, 715, 720, 730, 751, 172, 173, 185,
	193, 203, 215, 228, 236, 246, 250, 253, 257, 258,
	261, 266, 283, 288, 289, 290, 291, 307, 308, 309,
	312, 315, 316, 319, 321, 322, 325, 331, 332, 333,
	334, 335, 337, 344, 348, 356, 357, 358, 359, 360,
	362, 363, 367, 368, 369, 370, 378, 382, 397, 398,
	409, 421, 426, 247, 405, 427, 0, 282, 689, 696,
	284, 232, 249, 259, 704, 416, 379, 189, 350, 239,
	178, 206, 192, 213, 227, 229, 263, 292, 298, 327,
	330, 244, 224, 204, 347, 201, 365, 385, 386, 387,
	389, 296, 220, 314, 0, 0, 1396, 0, 504, 0,
	0, 0, 223, 0, 503, 0, 0, 0, 272, 0,
	0, 1397, 328, 0, 176, 0, 366, 209, 281, 279,
	394, 233, 226, 222, 208, 256, 287, 326, 384, 320,
	547, 276, 0, 0, 375, 299, 0, 0, 0, 0,
	0, 538, 539, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 207, 175, 311, 376, 237, 71, 0, 0,
	167, 168, 169, 525, 524, 527, 528, 529, 530, 0,
	0, 198, 526, 205, 531, 532, 533, 0, 219, 260,
	225, 218, 391, 0, 0, 0, 0, 0, 501, 518,
	0, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 515, 516, 594, 0, 0, 0, 562, 0, 517,
	0, 0, 510, 511, 513, 512, 514, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 300,
	0, 561, 0, 0, 423, 0, 0, 559, 0, 0,
	0, 0, 0, 271, 0, 268, 171, 187, 0, 0,
	310, 349, 355, 0, 0, 0, 210, 0, 353, 324,
	408, 194, 235, 346, 329, 351, 0, 0, 352, 277,
	396, 341, 406, 424, 425, 217, 304, 414, 388, 420,
	435, 188, 214, 318, 381, 411, 372, 297, 392, 393,
	267, 371, 243, 174, 275, 432, 186, 361, 202, 179,
	383, 404, 199, 364, 0, 0, 0, 181, 402, 380,
	294, 264, 265, 180, 0, 345, 221, 241, 212, 313,
	399, 400, 211, 437, 190, 419, 183, 0, 418, 306,
	395, 403, 295, 286, 182, 401, 293, 285, 270, 231,
	251, 339, 280, 340, 252, 302, 301, 303, 0, 177,
	0, 377, 412, 438, 195, 196, 197, 0, 230, 234,
	240, 242, 0, 248, 255, 273, 317, 338, 336, 342,
	0, 390, 407, 415, 422, 428, 429, 433, 430, 431,
	434, 305, 191, 254, 373, 269, 278, 0, 0, 323,
	354, 200, 410, 374, 549, 560, 555, 556, 553, 554,
	548, 552, 551, 550, 563, 540, 541, 542, 543, 545,
	0, 557, 558, 544, 170, 184, 274, 0, 343, 238,
	436, 417, 413, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 228, 236, 246, 250, 253, 257,
	258, 261, 266, 283, 288, 289, 290, 291, 307, 308,
	309, 312, 315, 316, 319, 321, 322, 325, 331, 332,
	333, 334, 335, 337, 344, 348, 356, 357, 358, 359,
	360, 362, 363, 367, 368, 369, 370, 378, 382, 397,
	398, 409, 421, 426, 247, 405, 427, 0, 282, 0,
	0, 284, 232, 249, 259, 0, 416, 379, 189, 350,
	239, 178, 206, 192, 213, 227, 229, 263, 292, 298,
	327, 330, 244, 224, 204, 347, 201, 365, 385, 386,
	387, 389, 296, 220, 314, 0, 0, 0, 0, 504,
	0, 0, 0, 223, 0, 503, 0, 0, 0, 272,
	0, 0, 0, 328, 0, 176, 0, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 547, 276, 0, 0, 375, 299, 0, 0, 0,
	0, 0, 538, 539, 0, 0, 0, 0, 0, 0,
	1509, 0, 262, 207, 175, 311, 376, 237, 71, 0,
	0, 167, 168, 169, 525, 524, 527, 528, 529, 530,
	0, 0, 198, 526, 205, 531, 532, 533, 1510, 219,
	260, 225, 218, 391, 0, 0, 0, 0, 0, 501,
	518, 0, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 515, 516, 0, 0, 0, 0, 562, 0,
	517, 0, 0, 510, 511, 513, 512, 514, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	300, 0, 561, 0, 0, 423, 0, 0, 559, 0,
	0, 0, 0, 0, 271, 0, 268, 171, 187, 0,
	0, 310, 349, 355, 0, 0, 0, 210, 0, 353,
	324, 408, 194, 235, 346, 329, 351, 0, 0, 352,
	277, 396, 341, 406, 424, 425, 217, 304, 414, 388,
	420, 435, 188, 214, 318, 381, 411, 372, 297, 392,
	393, 267, 371, 243, 174, 275, 432, 186, 361, 202,
	179, 383, 404, 199, 364, 0, 0, 0, 181, 402,
	380, 294, 264, 265, 180, 0, 345, 221, 241, 212,
	313, 399, 400, 211, 437, 190, 419, 183, 0, 418,
	306, 395, 403, 295, 286, 182, 401, 293, 285, 270,
	231, 251, 339, 280, 340, 252, 302, 301, 303, 0,
	177, 0, 377, 412, 438, 195, 196, 197, 0, 230,
	234, 240, 242, 0, 248, 255, 273, 317, 338, 336,
	342, 0, 390, 407, 415, 422, 428, 429, 433, 430,
	431, 434, 305, 191, 254, 373, 269, 278, 0, 0,
	323, 354, 200, 410, 374, 549, 560, 555, 556, 553,
	554, 548, 552, 551, 550, 563, 540, 541, 542, 543,
	545, 0, 557, 558, 544, 170, 184, 274, 0, 343,
	238, 436, 417, 413, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 185, 193, 203, 215, 228, 236, 246, 250, 253,
	257, 258, 261, 266, 283, 288, 289, 290, 291, 307,
	308, 309, 312, 315, 316, 319, 321, 322, 325, 331,
	332, 333, 334, 335, 337, 344, 348, 356, 357, 358,
	359, 360, 362, 363, 367, 368, 369, 370, 378, 382,
	397, 398, 409, 421, 426, 247, 405, 427, 0, 282,
	0, 0, 284, 232, 249, 259, 0, 416, 379, 189,
	350, 239, 178, 206, 192, 213, 227, 229, 263, 292,
	298, 327, 330, 244, 224, 204, 347, 201, 365, 385,
	386, 387, 389, 296, 220, 314, 0, 0, 0, 0,
	504, 0, 0, 0, 223, 0, 503, 0, 0, 0,
	272, 0, 0, 0, 328, 0, 176, 0, 366, 209,
	281, 279, 394, 233, 226, 222, 208, 256, 287, 326,
	384, 320, 547, 276, 0, 0, 375, 299, 0, 0,
	0, 0, 0, 538, 539, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 207, 175, 311, 376, 237, 71,
	0, 581, 167, 168, 169, 525, 524, 527, 528, 529,
	530, 0, 0, 198, 526, 205, 531, 532, 533, 0,
	219, 260, 225, 218, 391, 0, 0, 0, 0, 0,
	501, 518, 0, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 516, 0, 0, 0, 0, 562,
	0, 517, 0, 0, 510, 511, 513, 512, 514, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 300, 0, 561, 0, 0, 423, 0, 0, 559,
	0, 0, 0, 0, 0, 271, 0, 268, 171, 187,
	0, 0, 310, 349, 355, 0, 0, 0, 210, 0,
	353, 324, 408, 194, 235, 346, 329, 351, 0, 0,
	352, 277, 396, 341, 406, 424, 425, 217, 304, 414,
	388, 420, 435, 188, 214, 318, 381, 411, 372, 297,
	392, 393, 267, 371, 243, 174, 275, 432, 186, 361,
	202, 179, 383, 404, 199, 364, 0, 0, 0, 181,
	402, 380, 294, 264, 265, 180, 0, 345, 221, 241,
	212, 313, 399, 400, 211, 437, 190, 419, 183, 0,
	418, 306, 395, 403, 295, 286, 182, 401, 293, 285,
	270, 231, 251, 339, 280, 340, 252, 302, 301, 303,
	0, 177, 0, 377, 412, 438, 195, 196, 197, 0,
	230, 234, 240, 242, 0, 248, 255, 273, 317, 338,
	336, 342, 0, 390, 407, 415, 422, 428, 429, 433,
	430, 431, 434, 305, 191, 254, 373, 269, 278, 0,
	0, 323, 354, 200, 410, 374, 549, 560, 555, 556,
	553, 554, 548, 552, 551, 550, 563, 540, 541, 542,
	543, 545, 0, 557, 558, 544, 170, 184, 274, 0,
	343, 238, 436, 417, 413, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 228, 236, 246, 250,
	253, 257, 258, 261, 266, 283, 288, 289, 290, 291,
	307, 308, 309, 312, 315, 316, 319, 321, 322, 325,
	331, 332, 333, 334, 335, 337, 344, 348, 356, 357,
	358, 359, 360, 362, 363, 367, 368, 369, 370, 378,
	382, 397, 398, 409, 421, 426, 247, 405, 427, 0,
	282, 0, 0, 284, 232, 249, 259, 0, 416, 379,
	189, 350, 239, 178, 206, 192, 213, 227, 229, 263,
	292, 298, 327, 330, 244, 224, 204, 347, 201, 365,
	385, 386, 387, 389, 296, 220, 314, 0, 0, 0,
	0, 504, 0, 0, 0, 223, 0, 503, 0, 0,
	0, 272, 0, 0, 0, 328, 0, 176, 0, 366,
	209, 281, 279, 394, 233, 226, 222, 208, 256, 287,
	326, 384, 320, 547, 276, 0, 0, 375, 299, 0,
	0, 0, 0, 0, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 207, 175, 311, 376, 237,
	71, 0, 0, 167, 168, 169, 525, 524, 527, 528,
	529, 530, 0, 0, 198, 526, 205, 531, 532, 533,
	0, 219, 260, 225, 218, 391, 0, 0, 0, 0,
	0, 501, 518, 0, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 515, 516, 594, 0, 0, 0,
	562, 0, 517, 0, 0, 510, 511, 513, 512, 514,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 300, 0, 561, 0, 0, 423, 0, 0,
	559, 0, 0, 0, 0, 0, 271, 0, 268, 171,
	187, 0, 0, 310, 349, 355, 0, 0, 0, 210,
	0, 353, 324, 408, 194, 235, 346, 329, 351, 0,
	0, 352, 277, 396, 341, 406, 424, 425, 217, 304,
	414, 388, 420, 435, 188, 214, 318, 381, 411, 372,
	297, 392, 393, 267, 371, 243, 174, 275, 432, 186,
	361, 202, 179, 383, 404, 199, 364, 0, 0, 0,
	181, 402, 380, 294, 264, 265, 180, 0, 345, 221,
	241, 212, 313, 399, 400, 211, 437, 190, 419, 183,
	0, 418, 306, 395, 403, 295, 286, 182, 401, 293,
	285, 270, 231, 251, 339, 280, 340, 252, 302, 301,
	303, 0, 177, 0, 377, 412, 438, 195, 196, 197,
	0, 230, 234, 240, 242, 0, 248, 255, 273, 317,
	338, 336, 342, 0, 390, 407, 415, 422, 428, 429,
	433, 430, 431, 434, 305, 191, 254, 373, 269, 278,
	0, 0, 323, 354, 200, 410, 374, 549, 560, 555,
	556, 553, 554, 548, 552, 551, 550, 563, 540, 541,
	542, 543, 545, 0, 557, 558, 544, 170, 184, 274,
	0, 343, 238, 436, 417, 413, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 228, 236, 246,
	250, 253, 257, 258, 261, 266, 283, 288, 289, 290,
	291, 307, 308, 309, 312, 315, 316, 319, 321, 322,
	325, 331, 332, 333, 334, 335, 337, 344, 348, 356,
	357, 358, 359, 360, 362, 363, 367, 368, 369, 370,
	378, 382, 397, 398, 409, 421, 426, 247, 405, 427,
	0, 282, 0, 0, 284, 232, 249, 259, 0, 416,
	379, 189, 350, 239, 178, 206, 192, 213, 227, 229,
	263, 292, 298, 327, 330, 244, 224, 204, 347, 201,
	365, 385, 386, 387, 389, 296, 220, 314, 0, 0,
	0, 0, 504, 0, 0, 0, 223, 0, 503, 0,
	0, 0, 272, 0, 0, 0, 328, 0, 176, 0,
	366, 209, 281, 279, 394, 233, 226, 222, 208, 256,
	287, 326, 384, 320, 547, 276, 0, 0, 375, 299,
	0, 0, 0, 0, 0, 538, 539, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 207, 175, 311, 376,
	237, 71, 0, 0, 167, 168, 169, 525, 1414, 527,
	528, 529, 530, 0, 0, 198, 526, 205, 531, 532,
	533, 0, 219, 260, 225, 218, 391, 0, 0, 0,
	0, 0, 501, 518, 0, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 515, 516, 594, 0, 0,
	0, 562, 0, 517, 0, 0, 510, 511, 513, 512,
	514, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 300, 0, 561, 0, 0, 423, 0,
	0, 559, 0, 0, 0, 0, 0, 271, 0, 268,
	171, 187, 0, 0, 310, 349, 355, 0, 0, 0,
	210, 0, 353, 324, 408, 194, 235, 346, 329, 351,
	0, 0, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 0, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 0, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 0, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 0, 0, 323, 354, 200, 410, 374, 549, 560,
	555, 556, 553, 554, 548, 552, 551, 550, 563, 540,
	541, 542, 543, 545, 0, 557, 558, 544, 170, 184,
	274, 0, 343, 238, 436, 417, 413, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 0, 0, 284, 232, 249, 259, 0,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 314, 0,
	0, 0, 0, 504, 0, 0, 0, 223, 0, 503,
	0, 0, 0, 272, 0, 0, 0, 328, 0, 176,
	0, 366, 209, 281, 279, 394, 233, 226, 222, 208,
	256, 287, 326, 384, 320, 547, 276, 0, 0, 375,
	299, 0, 0, 0, 0, 0, 538, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 207, 175, 311,
	376, 237, 71, 0, 0, 167, 168, 169, 525, 1411,
	527, 528, 529, 530, 0, 0, 198, 526, 205, 531,
	532, 533, 0, 219, 260, 225, 218, 391, 0, 0,
	0, 0, 0, 501, 518, 0, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 515, 516, 594, 0,
	0, 0, 562, 0, 517, 0, 0, 510, 511, 513,
	512, 514, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 300, 0, 561, 0, 0, 423,
	0, 0, 559, 0, 0, 0, 0, 0, 271, 0,
	268, 171, 187, 0, 0, 310, 349, 355, 0, 0,
	0, 210, 0, 353, 324, 408, 194, 235, 346, 329,
	351, 0, 0, 352, 277, 396, 341, 406, 424, 425,
	217, 304, 414, 388, 420, 435, 188, 214, 318, 381,
	411, 372, 297, 392, 393, 267, 371, 243, 174, 275,
	432, 186, 361, 202, 179, 383, 404, 199, 364, 0,
	0, 0, 181, 402, 380, 294, 264, 265, 180, 0,
	345, 221, 241, 212, 313, 399, 400, 211, 437, 190,
	419, 183, 0, 418, 306, 395, 403, 295, 286, 182,
	401, 293, 285, 270, 231, 251, 339, 280, 340, 252,
	302, 301, 303, 0, 177, 0, 377, 412, 438, 195,
	196, 197, 0, 230, 234, 240, 242, 0, 248, 255,
	273, 317, 338, 336, 342, 0, 390, 407, 415, 422,
	428, 429, 433, 430, 431, 434, 305, 191, 254, 373,
	269, 278, 0, 0, 323, 354, 200, 410, 374, 549,
	560, 555, 556, 553, 554, 548, 552, 551, 550, 563,
	540, 541, 542, 543, 545, 0, 557, 558, 544, 170,
	184, 274, 0, 343, 238, 436, 417, 413, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 228,
	236, 246, 250, 253, 257, 258, 261, 266, 283, 288,
	289, 290, 291, 307, 308, 309, 312, 315, 316, 319,
	321, 322, 325, 331, 332, 333, 334, 335, 337, 344,
	348, 356, 357, 358, 359, 360, 362, 363, 367, 368,
	369, 370, 378, 382, 397, 398, 409, 421, 426, 247,
	405, 427, 0, 282, 0, 0, 284, 232, 249, 259,
	0, 416, 379, 189, 350, 239, 178, 206, 192, 213,
	227, 229, 263, 292, 298, 327, 330, 244, 224, 204,
	347, 201, 365, 385, 386, 387, 389, 296, 220, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 504, 0, 0,
	0, 223, 0, 503, 0, 0, 0, 272, 0, 0,
	0, 328, 0, 176, 0, 366, 209, 281, 279, 394,
	233, 226, 222, 208, 256, 287, 326, 384, 320, 547,
	276, 0, 0, 375, 299, 0, 0, 0, 0, 0,
	538, 539, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 207, 175, 311, 376, 237, 71, 0, 0, 167,
	168, 169, 525, 524, 527, 528, 529, 530, 0, 0,
	198, 526, 205, 531, 532, 533, 0, 219, 260, 225,
	218, 391, 0, 0, 0, 0, 0, 501, 518, 0,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	515, 516, 0, 0, 0, 0, 562, 0, 517, 0,
	0, 510, 511, 513, 512, 514, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 300, 0,
	561, 0, 0, 423, 0, 0, 559, 0, 0, 0,
	0, 0, 271, 0, 268, 171, 187, 0, 0, 310,
	349, 355, 0, 0, 0, 210, 0, 353, 324, 408,
	194, 235, 346, 329, 351, 0, 0, 352, 277, 396,
	341, 406, 424, 425, 217, 304, 414, 388, 420, 435,
	188, 214, 318, 381, 411, 372, 297, 392, 393, 267,
	371, 243, 174, 275, 432, 186, 361, 202, 179, 383,
	404, 199, 364, 0, 0, 0, 181, 402, 380, 294,
	264, 265, 180, 0, 345, 221, 241, 212, 313, 399,
	400, 211, 437, 190, 419, 183, 0, 418, 306, 395,
	403, 295, 286, 182, 401, 293, 285, 270, 231, 251,
	339, 280, 340, 252, 302, 301, 303, 0, 177, 0,
	377, 412, 438, 195, 196, 197, 0, 230, 234, 240,
	242, 0, 248, 255, 273, 317, 338, 336, 342, 0,
	390, 407, 415, 422, 428, 429, 433, 430, 431, 434,
	305, 191, 254, 373, 269, 278, 0, 0, 323, 354,
	200, 410, 374, 549, 560, 555, 556, 553, 554, 548,
	552, 551, 550, 563, 540, 541, 542, 543, 545, 0,
	557, 558, 544, 170, 184, 274, 0, 343, 238, 436,
	417, 413, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 228, 236, 246, 250, 253, 257, 258,
	261, 266, 283, 288, 289, 290, 291, 307, 308, 309,
	312, 315, 316, 319, 321, 322, 325, 331, 332, 333,
	334, 335, 337, 344, 348, 356, 357, 358, 359, 360,
	362, 363, 367, 368, 369, 370, 378, 382, 397, 398,
	409, 421, 426, 247, 405, 427, 0, 282, 0, 0,
	284, 232, 249, 259, 0, 416, 379, 189, 350, 239,
	178, 206, 192, 213, 227, 229, 263, 292, 298, 327,
	330, 244, 224, 204, 347, 201, 365, 385, 386, 387,
	389, 296, 220, 314, 0, 0, 0, 0, 504, 0,
	0, 0, 223, 0, 503, 0, 0, 0, 272, 0,
	0, 0, 328, 0, 176, 0, 366, 209, 281, 279,
	394, 233, 226, 222, 208, 256, 287, 326, 384, 320,
	547, 276, 0, 0, 375, 299, 0, 0, 0, 0,
	0, 538, 539, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 207, 175, 311, 376, 237, 71, 0, 0,
	167, 168, 169, 525, 524, 527, 528, 529, 530, 0,
	0, 198, 526, 205, 531, 532, 533, 0, 219, 260,
	225, 218, 391, 0, 0, 0, 0, 0, 501, 518,
	0, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 515, 516, 0, 0, 0, 0, 562, 0, 517,
	0, 0, 510, 511, 513, 512, 514, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 300,
	0, 561, 0, 0, 423, 0, 0, 559, 0, 0,
	0, 0, 0, 271, 0, 268, 171, 187, 0, 0,
	310, 349, 355, 0, 0, 0, 210, 0, 353, 324,
	408, 194, 235, 346, 329, 351, 0, 0, 352, 277,
	396, 341, 406, 424, 425, 217, 304, 414, 388, 420,
	435, 188, 214, 318, 381, 411, 372, 297, 392, 393,
	267, 371, 243, 174, 275, 432, 186, 361, 202, 179,
	383, 404, 199, 364, 0, 0, 0, 181, 402, 380,
	294, 264, 265, 180, 0, 345, 221, 241, 212, 313,
	399, 400, 211, 437, 190, 419, 183, 0, 418, 306,
	395, 403, 295, 286, 182, 401, 293, 285, 270, 231,
	251, 339, 280, 340, 252, 302, 301, 303, 0, 177,
	0, 377, 412, 438, 195, 196, 197, 0, 230, 234,
	240, 242, 0, 248, 255, 273, 317, 338, 336, 342,
	0, 390, 407, 415, 422, 428, 429, 433, 430, 431,
	434, 305, 191, 254, 373, 269, 278, 0, 0, 323,
	354, 200, 410, 374, 549, 560, 555, 556, 553, 554,
	548, 552, 551, 550, 563, 540, 541, 542, 543, 545,
	0, 557, 558, 544, 170, 184, 274, 0, 343, 238,
	436, 417, 413, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 228, 236, 246, 250, 253, 257,
	258, 261, 266, 283, 288, 289, 290, 291, 307, 308,
	309, 312, 315, 316, 319, 321, 322, 325, 331, 332,
	333, 334, 335, 337, 344, 348, 356, 357, 358, 359,
	360, 362, 363, 367, 368, 369, 370, 378, 382, 397,
	398, 409, 421, 426, 247, 405, 427, 0, 282, 0,
	0, 284, 232, 249, 259, 0, 416, 379, 189, 350,
	239, 178, 206, 192, 213, 227, 229, 263, 292, 298,
	327, 330, 244, 224, 204, 347, 201, 365, 385, 386,
	387, 389, 296, 220, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 328, 0, 176, 0, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 547, 276, 0, 0, 375, 299, 0, 0, 0,
	0, 0, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 207, 175, 311, 376, 237, 71, 0,
	0, 167, 168, 169, 525, 524, 527, 528, 529, 530,
	0, 0, 198, 526, 205, 531, 532, 533, 0, 219,
	260, 225, 218, 391, 0, 0, 0, 0, 0, 0,
	518, 0, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 515, 516, 0, 0, 0, 0, 562, 0,
	517, 0, 0, 510, 511, 513, 512, 514, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	300, 0, 561, 0, 0, 423, 0, 0, 559, 0,
	0, 0, 0, 0, 271, 0, 268, 171, 187, 0,
	0, 310, 349, 355, 0, 0, 0, 210, 0, 353,
	324, 408, 194, 235, 346, 329, 351, 2234, 0, 352,
	277, 396, 341, 406, 424, 425, 217, 304, 414, 388,
	420, 435, 188, 214, 318, 381, 411, 372, 297, 392,
	393, 267, 371, 243, 174, 275, 432, 186, 361, 202,
	179, 383, 404, 199, 364, 0, 0, 0, 181, 402,
	380, 294, 264, 265, 180, 0, 345, 221, 241, 212,
	313, 399, 400, 211, 437, 190, 419, 183, 0, 418,
	306, 395, 403, 295, 286, 182, 401, 293, 285, 270,
	231, 251, 339, 280, 340, 252, 302, 301, 303, 0,
	177, 0, 377, 412, 438, 195, 196, 197, 0, 230,
	234, 240, 242, 0, 248, 255, 273, 317, 338, 336,
	342, 0, 390, 407, 415, 422, 428, 429, 433, 430,
	431, 434, 305, 191, 254, 373, 269, 278, 0, 0,
	323, 354, 200, 410, 374, 549, 560, 555, 556, 553,
	554, 548, 552, 551, 550, 563, 540, 541, 542, 543,
	545, 0, 557, 558, 544, 170, 184, 274, 0, 343,
	238, 436, 417, 413, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 185, 193, 203, 215, 228, 236, 246, 250, 253,
	257, 258, 261, 266, 283, 288, 289, 290, 291, 307,
	308, 309, 312, 315, 316, 319, 321, 322, 325, 331,
	332, 333, 334, 335, 337, 344, 348, 356, 357, 358,
	359, 360, 362, 363, 367, 368, 369, 370, 378, 382,
	397, 398, 409, 421, 426, 247, 405, 427, 0, 282,
	0, 0, 284, 232, 249, 259, 0, 416, 379, 189,
	350, 239, 178, 206, 192, 213, 227, 229, 263, 292,
	298, 327, 330, 244, 224, 204, 347, 201, 365, 385,
	386, 387, 389, 296, 220, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 328, 0, 176, 0, 366, 209,
	281, 279, 394, 233, 226, 222, 208, 256, 287, 326,
	384, 320, 547, 276, 0, 0, 375, 299, 0, 0,
	0, 0, 0, 538, 539, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 207, 175, 311, 376, 237, 71,
	0, 581, 167, 168, 169, 525, 524, 527, 528, 529,
	530, 0, 0, 198, 526, 205, 531, 532, 533, 0,
	219, 260, 225, 218, 391, 0, 0, 0, 0, 0,
	0, 518, 0, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 516, 0, 0, 0, 0, 562,
	0, 517, 0, 0, 510, 511, 513, 512, 514, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 300, 0, 561, 0, 0, 423, 0, 0, 559,
	0, 0, 0, 0, 0, 271, 0, 268, 171, 187,
	0, 0, 310, 349, 355, 0, 0, 0, 210, 0,
	353, 324, 408, 194, 235, 346, 329, 351, 0, 0,
	352, 277, 396, 341, 406, 424, 425, 217, 304, 414,
	388, 420, 435, 188, 214, 318, 381, 411, 372, 297,
	392, 393, 267, 371, 243, 174, 275, 432, 186, 361,
	202, 179, 383, 404, 199, 364, 0, 0, 0, 181,
	402, 380, 294, 264, 265, 180, 0, 345, 221, 241,
	212, 313, 399, 400, 211, 437, 190, 419, 183, 0,
	418, 306, 395, 403, 295, 286, 182, 401, 293, 285,
	270, 231, 251, 339, 280, 340, 252, 302, 301, 303,
	0, 177, 0, 377, 412, 438, 195, 196, 197, 0,
	230, 234, 240, 242, 0, 248, 255, 273, 317, 338,
	336, 342, 0, 390, 407, 415, 422, 428, 429, 433,
	430, 431, 434, 305, 191, 254, 373, 269, 278, 0,
	0, 323, 354, 200, 410, 374, 549, 560, 555, 556,
	553, 554, 548, 552, 551, 550, 563, 540, 541, 542,
	543, 545, 0, 557, 558, 544, 170, 184, 274, 0,
	343, 238, 436, 417, 413, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 228, 236, 246, 250,
	253, 257, 258, 261, 266, 283, 288, 289, 290, 291,
	307, 308, 309, 312, 315, 316, 319, 321, 322, 325,
	331, 332, 333, 334, 335, 337, 344, 348, 356, 357,
	358, 359, 360, 362, 363, 367, 368, 369, 370, 378,
	382, 397, 398, 409, 421, 426, 247, 405, 427, 0,
	282, 0, 0, 284, 232, 249, 259, 0, 416, 379,
	189, 350, 239, 178, 206, 192, 213, 227, 229, 263,
	292, 298, 327, 330, 244, 224, 204, 347, 201, 365,
	385, 386, 387, 389, 296, 220, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 328, 0, 176, 0, 366,
	209, 281, 279, 394, 233, 226, 222, 208, 256, 287,
	326, 384, 320, 547, 276, 0, 0, 375, 299, 0,
	0, 0, 0, 0, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 207, 175, 311, 376, 237,
	71, 0, 0, 167, 168, 169, 525, 524, 527, 528,
	529, 530, 0, 0, 198, 526, 205, 531, 532, 533,
	0, 219, 260, 225, 218, 391, 0, 0, 0, 0,
	0, 0, 518, 0, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 515, 516, 0, 0, 0, 0,
	562, 0, 517, 0, 0, 510, 511, 513, 512, 514,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 300, 0, 561, 0, 0, 423, 0, 0,
	559, 0, 0, 0, 0, 0, 271, 0, 268, 171,
	187, 0, 0, 310, 349, 355, 0, 0, 0, 210,
	0, 353, 324, 408, 194, 235, 346, 329, 351, 0,
	0, 352, 277, 396, 341, 406, 424, 425, 217, 304,
	414, 388, 420, 435, 188, 214, 318, 381, 411, 372,
	297, 392, 393, 267, 371, 243, 174, 275, 432, 186,
	361, 202, 179, 383, 404, 199, 364, 0, 0, 0,
	181, 402, 380, 294, 264, 265, 180, 0, 345, 221,
	241, 212, 313, 399, 400, 211, 437, 190, 419, 183,
	0, 418, 306, 395, 403, 295, 286, 182, 401, 293,
	285, 270, 231, 251, 339, 280, 340, 252, 302, 301,
	303, 0, 177, 0, 377, 412, 438, 195, 196, 197,
	0, 230, 234, 240, 242, 0, 248, 255, 273, 317,
	338, 336, 342, 0, 390, 407, 415, 422, 428, 429,
	433, 430, 431, 434, 305, 191, 254, 373, 269, 278,
	0, 0, 323, 354, 200, 410, 374, 549, 560, 555,
	556, 553, 554, 548, 552, 551, 550, 563, 540, 541,
	542, 543, 545, 0, 557, 558, 544, 170, 184, 274,
	0, 343, 238, 436, 417, 413, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 228, 236, 246,
	250, 253, 257, 258, 261, 266, 283, 288, 289, 290,
	291, 307, 308, 309, 312, 315, 316, 319, 321, 322,
	325, 331, 332, 333, 334, 335, 337, 344, 348, 356,
	357, 358, 359, 360, 362, 363, 367, 368, 369, 370,
	378, 382, 397, 398, 409, 421, 426, 247, 405, 427,
	0, 282, 0, 0, 284, 232, 249, 259, 0, 416,
	379, 189, 350, 239, 178, 206, 192, 213, 227, 229,
	263, 292, 298, 327, 330, 244, 224, 204, 347, 201,
	365, 385, 386, 387, 389, 296, 220, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 328, 0, 176, 0,
	366, 209, 281, 279, 394, 233, 226, 222, 208, 256,
	287, 326, 384, 320, 0, 276, 0, 0, 375, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 207, 175, 311, 376,
	237, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 0, 0,
	0, 0, 219, 260, 225, 218, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 971, 970, 980, 981, 973, 974, 975, 976, 977,
	978, 979, 972, 0, 0, 982, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 300, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 268,
	171, 187, 0, 0, 310, 349, 355, 0, 0, 0,
	210, 0, 353, 324, 408, 194, 235, 346, 329, 351,
	0, 0, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 0, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 0, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 0, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 0, 0, 323, 354, 200, 410, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	274, 0, 343, 238, 436, 417, 413, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 0, 0, 284, 232, 249, 259, 0,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 800, 0,
	0, 0, 0, 272, 0, 0, 0, 328, 0, 176,
	0, 366, 209, 281, 279, 394, 233, 226, 222, 208,
	256, 287, 326, 384, 320, 0, 276, 0, 0, 375,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 207, 175, 311,
	376, 237, 0, 0, 0, 167, 168, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 205, 0,
	0, 0, 0, 219, 260, 225, 218, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 300, 0, 0, 0, 799, 423,
	0, 0, 0, 0, 0, 0, 796, 797, 271, 762,
	268, 171, 187, 790, 794, 310, 349, 355, 0, 0,
	0, 210, 0, 353, 324, 408, 194, 235, 346, 329,
	351, 0, 0, 352, 277, 396, 341, 406, 424, 425,
	217, 304, 414, 388, 420, 435, 188, 214, 318, 381,
	411, 372, 297, 392, 393, 267, 371, 243, 174, 275,
	432, 186, 361, 202, 179, 383, 404, 199, 364, 0,
	0, 0, 181, 402, 380, 294, 264, 265, 180, 0,
	345, 221, 241, 212, 313, 399, 400, 211, 437, 190,
	419, 183, 0, 418, 306, 395, 403, 295, 286, 182,
	401, 293, 285, 270, 231, 251, 339, 280, 340, 252,
	302, 301, 303, 0, 177, 0, 377, 412, 438, 195,
	196, 197, 0, 230, 234, 240, 242, 0, 248, 255,
	273, 317, 338, 336, 342, 0, 390, 407, 415, 422,
	428, 429, 433, 430, 431, 434, 305, 191, 254, 373,
	269, 278, 0, 0, 323, 354, 200, 410, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	184, 274, 0, 343, 238, 436, 417, 413, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 228,
	236, 246, 250, 253, 257, 258, 261, 266, 283, 288,
	289, 290, 291, 307, 308, 309, 312, 315, 316, 319,
	321, 322, 325, 331, 332, 333, 334, 335, 337, 344,
	348, 356, 357, 358, 359, 360, 362, 363, 367, 368,
	369, 370, 378, 382, 397, 398, 409, 421, 426, 247,
	405, 427, 0, 282, 0, 0, 284, 232, 249, 259,
	0, 416, 379, 189, 350, 239, 178, 206, 192, 213,
	227, 229, 263, 292, 298, 327, 330, 244, 224, 204,
	347, 201, 365, 385, 386, 387, 389, 296, 220, 314,
	0, 0, 0, 1074, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 328, 0,
	176, 0, 366, 209, 281, 279, 394, 233, 226, 222,
	208, 256, 287, 326, 384, 320, 0, 276, 0, 0,
	375, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 207, 175,
	311, 376, 237, 0, 0, 0, 167, 168, 169, 0,
	1076, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	0, 0, 0, 0, 219, 260, 225, 218, 391, 0,
	0, 960, 961, 959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 962,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 300, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 268, 171, 187, 0, 0, 310, 349, 355, 0,
	0, 0, 210, 0, 353, 324, 408, 194, 235, 346,
	329, 351, 0, 0, 352, 277, 396, 341, 406, 424,
	425, 217, 304, 414, 388, 420, 435, 188, 214, 318,
	381, 411, 372, 297, 392, 393, 267, 371, 243, 174,
	275, 432, 186, 361, 202, 179, 383, 404, 199, 364,
	0, 0, 0, 181, 402, 380, 294, 264, 265, 180,
	0, 345, 221, 241, 212, 313, 399, 400, 211, 437,
	190, 419, 183, 0, 418, 306, 395, 403, 295, 286,
	182, 401, 293, 285, 270, 231, 251, 339, 280, 340,
	252, 302, 301, 303, 0, 177, 0, 377, 412, 438,
	195, 196, 197, 0, 230, 234, 240, 242, 0, 248,
	255, 273, 317, 338, 336, 342, 0, 390, 407, 415,
	422, 428, 429, 433, 430, 431, 434, 305, 191, 254,
	373, 269, 278, 0, 0, 323, 354, 200, 410, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 184, 274, 0, 343, 238, 436, 417, 413, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	228, 236, 246, 250, 253, 257, 258, 261, 266, 283,
	288, 289, 290, 291, 307, 308, 309, 312, 315, 316,
	319, 321, 322, 325, 331, 332, 333, 334, 335, 337,
	344, 348, 356, 357, 358, 359, 360, 362, 363, 367,
	368, 369, 370, 378, 382, 397, 398, 409, 421, 426,
	247, 405, 427, 0, 282, 0, 0, 284, 232, 249,
	259, 0, 416, 379, 189, 350, 239, 178, 206, 192,
	213, 227, 229, 263, 292, 298, 327, 330, 244, 224,
	204, 347, 201, 365, 385, 386, 387, 389, 296, 220,
	35, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 328, 0, 176, 0, 366, 209, 281, 279,
	394, 233, 226, 222, 208, 256, 287, 326, 384, 320,
	0, 276, 0, 0, 375, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 207, 175, 311, 376, 237, 71, 0, 581,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 205, 0, 0, 0, 0, 219, 260,
	225, 218, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 300,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 268, 171, 187, 0, 0,
	310, 349, 355, 0, 0, 0, 210, 0, 353, 324,
	408, 194, 235, 346, 329, 351, 0, 0, 352, 277,
	396, 341, 406, 424, 425, 217, 304, 414, 388, 420,
	435, 188, 214, 318, 381, 411, 372, 297, 392, 393,
	267, 371, 243, 174, 275, 432, 186, 361, 202, 179,
	383, 404, 199, 364, 0, 0, 0, 181, 402, 380,
	294, 264, 265, 180, 0, 345, 221, 241, 212, 313,
	399, 400, 211, 437, 190, 419, 183, 0, 418, 306,
	395, 403, 295, 286, 182, 401, 293, 285, 270, 231,
	251, 339, 280, 340, 252, 302, 301, 303, 0, 177,
	0, 377, 412, 438, 195, 196, 197, 0, 230, 234,
	240, 242, 0, 248, 255, 273, 317, 338, 336, 342,
	0, 390, 407, 415, 422, 428, 429, 433, 430, 431,
	434, 305, 191, 254, 373, 269, 278, 0, 0, 323,
	354, 200, 410, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 184, 274, 0, 343, 238,
	436, 417, 413, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 228, 236, 246, 250, 253, 257,
	258, 261, 266, 283, 288, 289, 290, 291, 307, 308,
	309, 312, 315, 316, 319, 321, 322, 325, 331, 332,
	333, 334, 335, 337, 344, 348, 356, 357, 358, 359,
	360, 362, 363, 367, 368, 369, 370, 378, 382, 397,
	398, 409, 421, 426, 247, 405, 427, 0, 282, 0,
	0, 284, 232, 249, 259, 0, 416, 379, 189, 350,
	239, 178, 206, 192, 213, 227, 229, 263, 292, 298,
	327, 330, 244, 224, 204, 347, 201, 365, 385, 386,
	387, 389, 296, 220, 314, 0, 0, 0, 1441, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 328, 0, 176, 0, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 0, 276, 0, 0, 375, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 207, 175, 311, 376, 237, 0, 0,
	0, 167, 168, 169, 0, 1443, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 0, 0, 0, 0, 219,
	260, 225, 218, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	300, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 268, 171, 187, 0,
	0, 310, 349, 355, 0, 0, 0, 210, 0, 353,
	324, 408, 194, 235, 346, 329, 351, 0, 1439, 352,
	277, 396, 341, 406, 424, 425, 217, 304, 414, 388,
	420, 435, 188, 214, 318, 381, 411, 372, 297, 392,
	393, 267, 371, 243, 174, 275, 432, 186, 361, 202,
	179, 383, 404, 199, 364, 0, 0, 0, 181, 402,
	380, 294, 264, 265, 180, 0, 345, 221, 241, 212,
	313, 399, 400, 211, 437, 190, 419, 183, 0, 418,
	306, 395, 403, 295, 286, 182, 401, 293, 285, 270,
	231, 251, 339, 280, 340, 252, 302, 301, 303, 0,
	177, 0, 377, 412, 438, 195, 196, 197, 0, 230,
	234, 240, 242, 0, 248, 255, 273, 317, 338, 336,
	342, 0, 390, 407, 415, 422, 428, 429, 433, 430,
	431, 434, 305, 191, 254, 373, 269, 278, 0, 0,
	323, 354, 200, 410, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 184, 274, 0, 343,
	238, 436, 417, 413, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 185, 193, 203, 215, 228, 236, 246, 250, 253,
	257, 258, 261, 266, 283, 288, 289, 290, 291, 307,
	308, 309, 312, 315, 316, 319, 321, 322, 325, 331,
	332, 333, 334, 335, 337, 344, 348, 356, 357, 358,
	359, 360, 362, 363, 367, 368, 369, 370, 378, 382,
	397, 398, 409, 421, 426, 247, 405, 427, 0, 282,
	0, 0, 284, 232, 249, 259, 0, 416, 379, 189,
	350, 239, 178, 206, 192, 213, 227, 229, 263, 292,
	298, 327, 330, 244, 224, 204, 347, 201, 365, 385,
	386, 387, 389, 296, 220, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 328, 0, 176, 0, 366, 209,
	281, 279, 394, 233, 226, 222, 208, 256, 287, 326,
	384, 320, 0, 276, 0, 0, 375, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 207, 175, 311, 376, 237, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 260, 225, 218, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 300, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 762, 268, 171, 187,
	760, 0, 310, 349, 355, 0, 0, 0, 210, 0,
	353, 324, 408, 194, 235, 346, 329, 351, 0, 0,
	352, 277, 396, 341, 406, 424, 425, 217, 304, 414,
	388, 420, 435, 188, 214, 318, 381, 411, 372, 297,
	392, 393, 267, 371, 243, 174, 275, 432, 186, 361,
	202, 179, 383, 404, 199, 364, 0, 0, 0, 181,
	402, 380, 294, 264, 265, 180, 0, 345, 221, 241,
	212, 313, 399, 400, 211, 437, 190, 419, 183, 0,
	418, 306, 395, 403, 295, 286, 182, 401, 293, 285,
	270, 231, 251, 339, 280, 340, 252, 302, 301, 303,
	0, 177, 0, 377, 412, 438, 195, 196, 197, 0,
	230, 234, 240, 242, 0, 248, 255, 273, 317, 338,
	336, 342, 0, 390, 407, 415, 422, 428, 429, 433,
	430, 431, 434, 305, 191, 254, 373, 269, 278, 0,
	0, 323, 354, 200, 410, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 184, 274, 0,
	343, 238, 436, 417, 413, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 228, 236, 246, 250,
	253, 257, 258, 261, 266, 283, 288, 289, 290, 291,
	307, 308, 309, 312, 315, 316, 319, 321, 322, 325,
	331, 332, 333, 334, 335, 337, 344, 348, 356, 357,
	358, 359, 360, 362, 363, 367, 368, 369, 370, 378,
	382, 397, 398, 409, 421, 426, 247, 405, 427, 0,
	282, 0, 0, 284, 232, 249, 259, 0, 416, 379,
	189, 350, 239, 178, 206, 192, 213, 227, 229, 263,
	292, 298, 327, 330, 244, 224, 204, 347, 201, 365,
	385, 386, 387, 389, 296, 220, 314, 0, 0, 0,
	1441, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 328, 0, 176, 0, 366,
	209, 281, 279, 394, 233, 226, 222, 208, 256, 287,
	326, 384, 320, 0, 276, 0, 0, 375, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 207, 175, 311, 376, 237,
	0, 0, 0, 167, 168, 169, 0, 1443, 0, 0,
	0, 0, 0, 0, 198, 0, 205, 0, 0, 0,
	0, 219, 260, 225, 218, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 300, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 268, 171,
	187, 0, 0, 310, 349, 355, 0, 0, 0, 210,
	0, 353, 324, 408, 194, 235, 346, 329, 351, 0,
	0, 352, 277, 396, 341, 406, 424, 425, 217, 304,
	414, 388, 420, 435, 188, 214, 318, 381, 411, 372,
	297, 392, 393, 267, 371, 243, 174, 275, 432, 186,
	361, 202, 179, 383, 404, 199, 364, 0, 0, 0,
	181, 402, 380, 294, 264, 265, 180, 0, 345, 221,
	241, 212, 313, 399, 400, 211, 437, 190, 419, 183,
	0, 418, 306, 395, 403, 295, 286, 182, 401, 293,
	285, 270, 231, 251, 339, 280, 340, 252, 302, 301,
	303, 0, 177, 0, 377, 412, 438, 195, 196, 197,
	0, 230, 234, 240, 242, 0, 248, 255, 273, 317,
	338, 336, 342, 0, 390, 407, 415, 422, 428, 429,
	433, 430, 431, 434, 305, 191, 254, 373, 269, 278,
	0, 0, 323, 354, 200, 410, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 184, 274,
	0, 343, 238, 436, 417, 413, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 228, 236, 246,
	250, 253, 257, 258, 261, 266, 283, 288, 289, 290,
	291, 307, 308, 309, 312, 315, 316, 319, 321, 322,
	325, 331, 332, 333, 334, 335, 337, 344, 348, 356,
	357, 358, 359, 360, 362, 363, 367, 368, 369, 370,
	378, 382, 397, 398, 409, 421, 426, 247, 405, 427,
	0, 282, 0, 0, 284, 232, 249, 259, 0, 416,
	379, 189, 350, 239, 178, 206, 192, 213, 227, 229,
	263, 292, 298, 327, 330, 244, 224, 204, 347, 201,
	365, 385, 386, 387, 389, 296, 220, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 328, 0, 176, 0,
	366, 209, 281, 279, 394, 233, 226, 222, 208, 256,
	287, 326, 384, 320, 0, 276, 0, 0, 375, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 207, 175, 311, 376,
	237, 0, 0, 581, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 0, 0,
	0, 0, 219, 260, 225, 218, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 300, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 2124, 0, 0, 0, 271, 0, 268,
	171, 187, 0, 0, 310, 349, 355, 0, 0, 0,
	210, 0, 353, 324, 408, 194, 235, 346, 329, 351,
	0, 0, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 0, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 0, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 0, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 0, 0, 323, 354, 200, 410, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	274, 0, 343, 238, 436, 417, 413, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 0, 0, 284, 232, 249, 259, 0,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 35, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	328, 0, 176, 0, 366, 209, 281, 279, 394, 233,
	226, 222, 208, 256, 287, 326, 384, 320, 0, 276,
	0, 0, 375, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	207, 175, 311, 376, 237, 71, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 0, 0, 0, 0, 219, 260, 225, 218,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 300, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 268, 171, 187, 0, 0, 310, 349,
	355, 0, 0, 0, 210, 0, 353, 324, 408, 194,
	235, 346, 329, 351, 0, 0, 352, 277, 396, 341,
	406, 424, 425, 217, 304, 414, 388, 420, 435, 188,
	214, 318, 381, 411, 372, 297, 392, 393, 267, 371,
	243, 174, 275, 432, 186, 361, 202, 179, 383, 404,
	199, 364, 0, 0, 0, 181, 402, 380, 294, 264,
	265, 180, 0, 345, 221, 241, 212, 313, 399, 400,
	211, 437, 190, 419, 183, 0, 418, 306, 395, 403,
	295, 286, 182, 401, 293, 285, 270, 231, 251, 339,
	280, 340, 252, 302, 301, 303, 0, 177, 0, 377,
	412, 438, 195, 196, 197, 0, 230, 234, 240, 242,
	0, 248, 255, 273, 317, 338, 336, 342, 0, 390,
	407, 415, 422, 428, 429, 433, 430, 431, 434, 305,
	191, 254, 373, 269, 278, 0, 0, 323, 354, 200,
	410, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 274, 0, 343, 238, 436, 417,
	413, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 228, 236, 246, 250, 253, 257, 258, 261,
	266, 283, 288, 289, 290, 291, 307, 308, 309, 312,
	315, 316, 319, 321, 322, 325, 331, 332, 333, 334,
	335, 337, 344, 348, 356, 357, 358, 359, 360, 362,
	363, 367, 368, 369, 370, 378, 382, 397, 398, 409,
	421, 426, 247, 405, 427, 0, 282, 0, 0, 284,
	232, 249, 259, 0, 416, 379, 189, 350, 239, 178,
	206, 192, 213, 227, 229, 263, 292, 298, 327, 330,
	244, 224, 204, 347, 201, 365, 385, 386, 387, 389,
	296, 220, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 328, 0, 176, 0, 366, 209, 281, 279, 394,
	233, 226, 222, 208, 256, 287, 326, 384, 320, 0,
	276, 0, 0, 375, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 207, 175, 311, 376, 237, 0, 0, 0, 167,
	168, 169, 0, 0, 1462, 0, 0, 1463, 0, 0,
	198, 0, 205, 0, 0, 0, 0, 219, 260, 225,
	218, 391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 300, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 268, 171, 187, 0, 0, 310,
	349, 355, 0, 0, 0, 210, 0, 353, 324, 408,
	194, 235, 346, 329, 351, 0, 0, 352, 277, 396,
	341, 406, 424, 425, 217, 304, 414, 388, 420, 435,
	188, 214, 318, 381, 411, 372, 297, 392, 393, 267,
	371, 243, 174, 275, 432, 186, 361, 202, 179, 383,
	404, 199, 364, 0, 0, 0, 181, 402, 380, 294,
	264, 265, 180, 0, 345, 221, 241, 212, 313, 399,
	400, 211, 437, 190, 419, 183, 0, 418, 306, 395,
	403, 295, 286, 182, 401, 293, 285, 270, 231, 251,
	339, 280, 340, 252, 302, 301, 303, 0, 177, 0,
	377, 412, 438, 195, 196, 197, 0, 230, 234, 240,
	242, 0, 248, 255, 273, 317, 338, 336, 342, 0,
	390, 407, 415, 422, 428, 429, 433, 430, 431, 434,
	305, 191, 254, 373, 269, 278, 0, 0, 323, 354,
	200, 410, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 274, 0, 343, 238, 436,
	417, 413, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 228, 236, 246, 250, 253, 257, 258,
	261, 266, 283, 288, 289, 290, 291, 307, 308, 309,
	312, 315, 316, 319, 321, 322, 325, 331, 332, 333,
	334, 335, 337, 344, 348, 356, 357, 358, 359, 360,
	362, 363, 367, 368, 369, 370, 378, 382, 397, 398,
	409, 421, 426, 247, 405, 427, 0, 282, 0, 0,
	284, 232, 249, 259, 0, 416, 379, 189, 350, 239,
	178, 206, 192, 213, 227, 229, 263, 292, 298, 327,
	330, 244, 224, 204, 347, 201, 365, 385, 386, 387,
	389, 296, 220, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 1107, 0, 0, 0, 272, 0,
	0, 0, 328, 0, 176, 0, 366, 209, 281, 279,
	394, 233, 226, 222, 208, 256, 287, 326, 384, 320,
	0, 276, 0, 0, 375, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 207, 175, 311, 376, 237, 0, 0, 0,
	167, 168, 169, 0, 1106, 0, 0, 0, 0, 0,
	0, 198, 0, 205, 0, 0, 0, 0, 219, 260,
	225, 218, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 300,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 268, 171, 187, 0, 0,
	310, 349, 355, 0, 0, 0, 210, 0, 353, 324,
	408, 194, 235, 346, 329, 351, 0, 0, 352, 277,
	396, 341, 406, 424, 425, 217, 304, 414, 388, 420,
	435, 188, 214, 318, 381, 411, 372, 297, 392, 393,
	267, 371, 243, 174, 275, 432, 186, 361, 202, 179,
	383, 404, 199, 364, 0, 0, 0, 181, 402, 380,
	294, 264, 265, 180, 0, 345, 221, 241, 212, 313,
	399, 400, 211, 437, 190, 419, 183, 0, 418, 306,
	395, 403, 295, 286, 182, 401, 293, 285, 270, 231,
	251, 339, 280, 340, 252, 302, 301, 303, 0, 177,
	0, 377, 412, 438, 195, 196, 197, 0, 230, 234,
	240, 242, 0, 248, 255, 273, 317, 338, 336, 342,
	0, 390, 407, 415, 422, 428, 429, 433, 430, 431,
	434, 305, 191, 254, 373, 269, 278, 0, 0, 323,
	354, 200, 410, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 184, 274, 0, 343, 238,
	436, 417, 413, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 228, 236, 246, 250, 253, 257,
	258, 261, 266, 283, 288, 289, 290, 291, 307, 308,
	309, 312, 315, 316, 319, 321, 322, 325, 331, 332,
	333, 334, 335, 337, 344, 348, 356, 357, 358, 359,
	360, 362, 363, 367, 368, 369, 370, 378, 382, 397,
	398, 409, 421, 426, 247, 405, 427, 0, 282, 0,
	0, 284, 232, 249, 259, 0, 416, 379, 189, 350,
	239, 178, 206, 192, 213, 227, 229, 263, 292, 298,
	327, 330, 244, 224, 204, 347, 201, 365, 385, 386,
	387, 389, 296, 220, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 328, 0, 176, 0, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 0, 276, 0, 0, 375, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 207, 175, 311, 376, 237, 0, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 0, 0, 0, 0, 219,
	260, 225, 218, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	300, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	2207, 0, 0, 0, 271, 0, 268, 171, 187, 0,
	0, 310, 349, 355, 0, 0, 0, 210, 0, 353,
	324, 408, 194, 235, 346, 329, 351, 0, 0, 352,
	277, 396, 341, 406, 424, 425, 217, 304, 414, 388,
	420, 435, 188, 214, 318, 381, 411, 372, 297, 392,
	393, 267, 371, 243, 174, 275, 432, 186, 361, 202,
	179, 383, 404, 199, 364, 0, 0, 0, 181, 402,
	380, 294, 264, 265, 180, 0, 345, 221, 241, 212,
	313, 399, 400, 211, 437, 190, 419, 183, 0, 418,
	306, 395, 403, 295, 286, 182, 401, 293, 285, 270,
	231, 251, 339, 280, 340, 252, 302, 301, 303, 0,
	177, 0, 377, 412, 438, 195, 196, 197, 0, 230,
	234, 240, 242, 0, 248, 255, 273, 317, 338, 336,
	342, 0, 390, 407, 415, 422, 428, 429, 433, 430,
	431, 434, 305, 191, 254, 373, 269, 278, 0, 0,
	323, 354, 200, 410, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 184, 274, 0, 343,
	238, 436, 417, 413, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 185, 193, 203, 215, 228, 236, 246, 250, 253,
	257, 258, 261, 266, 283, 288, 289, 290, 291, 307,
	308, 309, 312, 315, 316, 319, 321, 322, 325, 331,
	332, 333, 334, 335, 337, 344, 348, 356, 357, 358,
	359, 360, 362, 363, 367, 368, 369, 370, 378, 382,
	397, 398, 409, 421, 426, 247, 405, 427, 0, 282,
	0, 0, 284, 232, 249, 259, 0, 416, 379, 189,
	350, 239, 178, 206, 192, 213, 227, 229, 263, 292,
	298, 327, 330, 244, 224, 204, 347, 201, 365, 385,
	386, 387, 389, 296, 220, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 328, 0, 176, 0, 366, 209,
	281, 279, 394, 233, 226, 222, 208, 256, 287, 326,
	384, 320, 0, 276, 0, 0, 375, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 207, 175, 311, 376, 237, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 260, 225, 218, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 300, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 2124, 0, 0, 0, 271, 0, 268, 171, 187,
	0, 0, 310, 349, 355, 0, 0, 0, 210, 0,
	353, 324, 408, 194, 235, 346, 329, 351, 0, 0,
	352, 277, 396, 341, 406, 424, 425, 217, 304, 414,
	388, 420, 435, 188, 214, 318, 381, 411, 372, 297,
	392, 393, 267, 371, 243, 174, 275, 432, 186, 361,
	202, 179, 383, 404, 199, 364, 0, 0, 0, 181,
	402, 380, 294, 264, 265, 180, 0, 345, 221, 241,
	212, 313, 399, 400, 211, 437, 190, 419, 183, 0,
	418, 306, 395, 403, 295, 286, 182, 401, 293, 285,
	270, 231, 251, 339, 280, 340, 252, 302, 301, 303,
	0, 177, 0, 377, 412, 438, 195, 196, 197, 0,
	230, 234, 240, 242, 0, 248, 255, 273, 317, 338,
	336, 342, 0, 390, 407, 415, 422, 428, 429, 433,
	430, 431, 434, 305, 191, 254, 373, 269, 278, 0,
	0, 323, 354, 200, 410, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 184, 274, 0,
	343, 238, 436, 417, 413, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 228, 236, 246, 250,
	253, 257, 258, 261, 266, 283, 288, 289, 290, 291,
	307, 308, 309, 312, 315, 316, 319, 321, 322, 325,
	331, 332, 333, 334, 335, 337, 344, 348, 356, 357,
	358, 359, 360, 362, 363, 367, 368, 369, 370, 378,
	382, 397, 398, 409, 421, 426, 247, 405, 427, 0,
	282, 0, 0, 284, 232, 249, 259, 0, 416, 379,
	189, 350, 239, 178, 206, 192, 213, 227, 229, 263,
	292, 298, 327, 330, 244, 224, 204, 347, 201, 365,
	385, 386, 387, 389, 296, 220, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 328, 0, 176, 0, 366,
	209, 281, 279, 394, 233, 226, 222, 208, 256, 287,
	326, 384, 320, 0, 276, 0, 0, 375, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 207, 175, 311, 376, 237,
	71, 0, 0, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 205, 0, 0, 0,
	0, 219, 260, 225, 218, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 300, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 268, 171,
	187, 0, 0, 310, 349, 355, 0, 0, 0, 210,
	0, 353, 324, 408, 194, 235, 346, 329, 351, 0,
	0, 352, 277, 396, 341, 406, 424, 425, 217, 304,
	414, 388, 420, 435, 188, 214, 318, 381, 411, 372,
	297, 392, 393, 267, 371, 243, 174, 275, 432, 186,
	361, 202, 179, 383, 404, 199, 364, 0, 0, 0,
	181, 402, 380, 294, 264, 265, 180, 0, 345, 221,
	241, 212, 313, 399, 400, 211, 437, 190, 419, 183,
	0, 418, 306, 395, 403, 295, 286, 182, 401, 293,
	285, 270, 231, 251, 339, 280, 340, 252, 302, 301,
	303, 0, 177, 0, 377, 412, 438, 195, 196, 197,
	0, 230, 234, 240, 242, 0, 248, 255, 273, 317,
	338, 336, 342, 0, 390, 407, 415, 422, 428, 429,
	433, 430, 431, 434, 305, 191, 254, 373, 269, 278,
	0, 0, 323, 354, 200, 410, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 184, 274,
	0, 343, 238, 436, 417, 413, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 228, 236, 246,
	250, 253, 257, 258, 261, 266, 283, 288, 289, 290,
	291, 307, 308, 309, 312, 315, 316, 319, 321, 322,
	325, 331, 332, 333, 334, 335, 337, 344, 348, 356,
	357, 358, 359, 360, 362, 363, 367, 368, 369, 370,
	378, 382, 397, 398, 409, 421, 426, 247, 405, 427,
	0, 282, 0, 0, 284, 232, 249, 259, 0, 416,
	379, 189, 350, 239, 178, 206, 192, 213, 227, 229,
	263, 292, 298, 327, 330, 244, 224, 204, 347, 201,
	365, 385, 386, 387, 389, 296, 220, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 328, 0, 176, 0,
	366, 209, 281, 279, 394, 233, 226, 222, 208, 256,
	287, 326, 384, 320, 0, 276, 0, 0, 375, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 207, 175, 311, 376,
	237, 0, 0, 0, 167, 168, 169, 0, 1443, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 0, 0,
	0, 0, 219, 260, 225, 218, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 300, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 268,
	171, 187, 0, 0, 310, 349, 355, 0, 0, 0,
	210, 0, 353, 324, 408, 194, 235, 346, 329, 351,
	0, 0, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 0, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 0, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 0, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 0, 0, 323, 354, 200, 410, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	274, 0, 343, 238, 436, 417, 413, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 0, 0, 284, 232, 249, 259, 0,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 328, 0, 176,
	0, 366, 209, 281, 279, 394, 233, 226, 222, 208,
	256, 287, 326, 384, 320, 0, 276, 0, 0, 375,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 207, 175, 311,
	376, 237, 0, 0, 0, 167, 168, 169, 0, 1076,
	0, 0, 0, 0, 0, 0, 198, 0, 205, 0,
	0, 0, 0, 219, 260, 225, 218, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 300, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	268, 171, 187, 0, 0, 310, 349, 355, 0, 0,
	0, 210, 0, 353, 324, 408, 194, 235, 346, 329,
	351, 0, 0, 352, 277, 396, 341, 406, 424, 425,
	217, 304, 414, 388, 420, 435, 188, 214, 318, 381,
	411, 372, 297, 392, 393, 267, 371, 243, 174, 275,
	432, 186, 361, 202, 179, 383, 404, 199, 364, 0,
	0, 0, 181, 402, 380, 294, 264, 265, 180, 0,
	345, 221, 241, 212, 313, 399, 400, 211, 437, 190,
	419, 183, 0, 418, 306, 395, 403, 295, 286, 182,
	401, 293, 285, 270, 231, 251, 339, 280, 340, 252,
	302, 301, 303, 0, 177, 0, 377, 412, 438, 195,
	196, 197, 0, 230, 234, 240, 242, 0, 248, 255,
	273, 317, 338, 336, 342, 0, 390, 407, 415, 422,
	428, 429, 433, 430, 431, 434, 305, 191, 254, 373,
	269, 278, 0, 0, 323, 354, 200, 410, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	184, 274, 0, 343, 238, 436, 417, 413, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 228,
	236, 246, 250, 253, 257, 258, 261, 266, 283, 288,
	289, 290, 291, 307, 308, 309, 312, 315, 316, 319,
	321, 322, 325, 331, 332, 333, 334, 335, 337, 344,
	348, 356, 357, 358, 359, 360, 362, 363, 367, 368,
	369, 370, 378, 382, 397, 398, 409, 421, 426, 247,
	405, 427, 0, 282, 0, 0, 284, 232, 249, 259,
	0, 416, 379, 189, 350, 239, 178, 206, 192, 213,
	227, 229, 263, 292, 298, 327, 330, 244, 224, 204,
	347, 201, 365, 385, 386, 387, 389, 296, 220, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 328, 0,
	176, 0, 366, 209, 281, 279, 394, 233, 226, 222,
	208, 256, 287, 326, 384, 320, 0, 276, 0, 0,
	375, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 207, 175,
	311, 376, 237, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	0, 0, 0, 0, 219, 260, 225, 218, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 300, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 268, 171, 187, 0, 0, 310, 349, 355, 0,
	0, 0, 210, 0, 353, 324, 408, 194, 235, 346,
	329, 351, 0, 0, 352, 277, 396, 341, 406, 424,
	425, 217, 304, 414, 388, 420, 435, 188, 214, 318,
	381, 411, 372, 297, 392, 393, 267, 371, 243, 174,
	275, 432, 186, 361, 202, 179, 383, 404, 199, 364,
	0, 0, 0, 181, 402, 380, 294, 264, 265, 180,
	0, 345, 221, 241, 212, 313, 399, 400, 211, 437,
	190, 419, 183, 0, 418, 306, 395, 403, 295, 286,
	182, 401, 293, 285, 270, 231, 251, 339, 280, 340,
	252, 302, 301, 303, 0, 177, 0, 377, 412, 438,
	195, 196, 197, 0, 230, 234, 240, 242, 0, 248,
	255, 273, 317, 338, 336, 342, 0, 390, 407, 415,
	422, 428, 429, 433, 430, 431, 434, 305, 191, 254,
	373, 269, 278, 0, 0, 323, 354, 200, 410, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 184, 274, 1346, 343, 238, 436, 417, 413, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	228, 236, 246, 250, 253, 257, 258, 261, 266, 283,
	288, 289, 290, 291, 307, 308, 309, 312, 315, 316,
	319, 321, 322, 325, 331, 332, 333, 334, 335, 337,
	344, 348, 356, 357, 358, 359, 360, 362, 363, 367,
	368, 369, 370, 378, 382, 397, 398, 409, 421, 426,
	247, 405, 427, 0, 282, 0, 0, 284, 232, 249,
	259, 0, 416, 379, 189, 350, 239, 178, 206, 192,
	213, 227, 229, 263, 292, 298, 327, 330, 244, 224,
	204, 347, 201, 365, 385, 386, 387, 389, 296, 220,
	314, 0, 1229, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 328,
	0, 176, 0, 366, 209, 281, 279, 394, 233, 226,
	222, 208, 256, 287, 326, 384, 320, 0, 276, 0,
	0, 375, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 207,
	175, 311, 376, 237, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 0, 0, 0, 0, 219, 260, 225, 218, 391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 300, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 268, 171, 187, 0, 0, 310, 349, 355,
	0, 0, 0, 210, 0, 353, 324, 408, 194, 235,
	346, 329, 351, 0, 0, 352, 277, 396, 341, 406,
	424, 425, 217, 304, 414, 388, 420, 435, 188, 214,
	318, 381, 411, 372, 297, 392, 393, 267, 371, 243,
	174, 275, 432, 186, 361, 202, 179, 383, 404, 199,
	364, 0, 0, 0, 181, 402, 380, 294, 264, 265,
	180, 0, 345, 221, 241, 212, 313, 399, 400, 211,
	437, 190, 419, 183, 0, 418, 306, 395, 403, 295,
	286, 182, 401, 293, 285, 270, 231, 251, 339, 280,
	340, 252, 302, 301, 303, 0, 177, 0, 377, 412,
	438, 195, 196, 197, 0, 230, 234, 240, 242, 0,
	248, 255, 273, 317, 338, 336, 342, 0, 390, 407,
	415, 422, 428, 429, 433, 430, 431, 434, 305, 191,
	254, 373, 269, 278, 0, 0, 323, 354, 200, 410,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 184, 274, 0, 343, 238, 436, 417, 413,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 185, 193, 203,
	215, 228, 236, 246, 250, 253, 257, 258, 261, 266,
	283, 288, 289, 290, 291, 307, 308, 309, 312, 315,
	316, 319, 321, 322, 325, 331, 332, 333, 334, 335,
	337, 344, 348, 356, 357, 358, 359, 360, 362, 363,
	367, 368, 369, 370, 378, 382, 397, 398, 409, 421,
	426, 247, 405, 427, 0, 282, 0, 0, 284, 232,
	249, 259, 0, 416, 379, 189, 350, 239, 178, 206,
	192, 213, 227, 229, 263, 292, 298, 327, 330, 244,
	224, 204, 347, 201, 365, 385, 386, 387, 389, 296,
	220, 314, 0, 1227, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	328, 0, 176, 0, 366, 209, 281, 279, 394, 233,
	226, 222, 208, 256, 287, 326, 384, 320, 0, 276,
	0, 0, 375, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	207, 175, 311, 376, 237, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 0, 0, 0, 0, 219, 260, 225, 218,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 300, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 268, 171, 187, 0, 0, 310, 349,
	355, 0, 0, 0, 210, 0, 353, 324, 408, 194,
	235, 346, 329, 351, 0, 0, 352, 277, 396, 341,
	406, 424, 425, 217, 304, 414, 388, 420, 435, 188,
	214, 318, 381, 411, 372, 297, 392, 393, 267, 371,
	243, 174, 275, 432, 186, 361, 202, 179, 383, 404,
	199, 364, 0, 0, 0, 181, 402, 380, 294, 264,
	265, 180, 0, 345, 221, 241, 212, 313, 399, 400,
	211, 437, 190, 419, 183, 0, 418, 306, 395, 403,
	295, 286, 182, 401, 293, 285, 270, 231, 251, 339,
	280, 340, 252, 302, 301, 303, 0, 177, 0, 377,
	412, 438, 195, 196, 197, 0, 230, 234, 240, 242,
	0, 248, 255, 273, 317, 338, 336, 342, 0, 390,
	407, 415, 422, 428, 429, 433, 430, 431, 434, 305,
	191, 254, 373, 269, 278, 0, 0, 323, 354, 200,
	410, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 274, 0, 343, 238, 436, 417,
	413, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 228, 236, 246, 250, 253, 257, 258, 261,
	266, 283, 288, 289, 290, 291, 307, 308, 309, 312,
	315, 316, 319, 321, 322, 325, 331, 332, 333, 334,
	335, 337, 344, 348, 356, 357, 358, 359, 360, 362,
	363, 367, 368, 369, 370, 378, 382, 397, 398, 409,
	421, 426, 247, 405, 427, 0, 282, 0, 0, 284,
	232, 249, 259, 0, 416, 379, 189, 350, 239, 178,
	206, 192, 213, 227, 229, 263, 292, 298, 327, 330,
	244, 224, 204, 347, 201, 365, 385, 386, 387, 389,
	296, 220, 314, 0, 1225, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 328, 0, 176, 0, 366, 209, 281, 279, 394,
	233, 226, 222, 208, 256, 287, 326, 384, 320, 0,
	276, 0, 0, 375, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 207, 175, 311, 376, 237, 0, 0, 0, 167,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 205, 0, 0, 0, 0, 219, 260, 225,
	218, 391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 300, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 268, 171, 187, 0, 0, 310,
	349, 355, 0, 0, 0, 210, 0, 353, 324, 408,
	194, 235, 346, 329, 351, 0, 0, 352, 277, 396,
	341, 406, 424, 425, 217, 304, 414, 388, 420, 435,
	188, 214, 318, 381, 411, 372, 297, 392, 393, 267,
	371, 243, 174, 275, 432, 186, 361, 202, 179, 383,
	404, 199, 364, 0, 0, 0, 181, 402, 380, 294,
	264, 265, 180, 0, 345, 221, 241, 212, 313, 399,
	400, 211, 437, 190, 419, 183, 0, 418, 306, 395,
	403, 295, 286, 182, 401, 293, 285, 270, 231, 251,
	339, 280, 340, 252, 302, 301, 303, 0, 177, 0,
	377, 412, 438, 195, 196, 197, 0, 230, 234, 240,
	242, 0, 248, 255, 273, 317, 338, 336, 342, 0,
	390, 407, 415, 422, 428, 429, 433, 430, 431, 434,
	305, 191, 254, 373, 269, 278, 0, 0, 323, 354,
	200, 410, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 274, 0, 343, 238, 436,
	417, 413, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 228, 236, 246, 250, 253, 257, 258,
	261, 266, 283, 288, 289, 290, 291, 307, 308, 309,
	312, 315, 316, 319, 321, 322, 325, 331, 332, 333,
	334, 335, 337, 344, 348, 356, 357, 358, 359, 360,
	362, 363, 367, 368, 369, 370, 378, 382, 397, 398,
	409, 421, 426, 247, 405, 427, 0, 282, 0, 0,
	284, 232, 249, 259, 0, 416, 379, 189, 350, 239,
	178, 206, 192, 213, 227, 229, 263, 292, 298, 327,
	330, 244, 224, 204, 347, 201, 365, 385, 386, 387,
	389, 296, 220, 314, 0, 1223, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 328, 0, 176, 0, 366, 209, 281, 279,
	394, 233, 226, 222, 208, 256, 287, 326, 384, 320,
	0, 276, 0, 0, 375, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 207, 175, 311, 376, 237, 0, 0, 0,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 205, 0, 0, 0, 0, 219, 260,
	225, 218, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 300,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 268, 171, 187, 0, 0,
	310, 349, 355, 0, 0, 0, 210, 0, 353, 324,
	408, 194, 235, 346, 329, 351, 0, 0, 352, 277,
	396, 341, 406, 424, 425, 217, 304, 414, 388, 420,
	435, 188, 214, 318, 381, 411, 372, 297, 392, 393,
	267, 371, 243, 174, 275, 432, 186, 361, 202, 179,
	383, 404, 199, 364, 0, 0, 0, 181, 402, 380,
	294, 264, 265, 180, 0, 345, 221, 241, 212, 313,
	399, 400, 211, 437, 190, 419, 183, 0, 418, 306,
	395, 403, 295, 286, 182, 401, 293, 285, 270, 231,
	251, 339, 280, 340, 252, 302, 301, 303, 0, 177,
	0, 377, 412, 438, 195, 196, 197, 0, 230, 234,
	240, 242, 0, 248, 255, 273, 317, 338, 336, 342,
	0, 390, 407, 415, 422, 428, 429, 433, 430, 431,
	434, 305, 191, 254, 373, 269, 278, 0, 0, 323,
	354, 200, 410, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 184, 274, 0, 343, 238,
	436, 417, 413, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 228, 236, 246, 250, 253, 257,
	258, 261, 266, 283, 288, 289, 290, 291, 307, 308,
	309, 312, 315, 316, 319, 321, 322, 325, 331, 332,
	333, 334, 335, 337, 344, 348, 356, 357, 358, 359,
	360, 362, 363, 367, 368, 369, 370, 378, 382, 397,
	398, 409, 421, 426, 247, 405, 427, 0, 282, 0,
	0, 284, 232, 249, 259, 0, 416, 379, 189, 350,
	239, 178, 206, 192, 213, 227, 229, 263, 292, 298,
	327, 330, 244, 224, 204, 347, 201, 365, 385, 386,
	387, 389, 296, 220, 314, 0, 1221, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 328, 0, 176, 0, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 0, 276, 0, 0, 375, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 207, 175, 311, 376, 237, 0, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 0, 0, 0, 0, 219,
	260, 225, 218, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	300, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 268, 171, 187, 0,
	0, 310, 349, 355, 0, 0, 0, 210, 0, 353,
	324, 408, 194, 235, 346, 329, 351, 0, 0, 352,
	277, 396, 341, 406, 424, 425, 217, 304, 414, 388,
	420, 435, 188, 214, 318, 381, 411, 372, 297, 392,
	393, 267, 371, 243, 174, 275, 432, 186, 361, 202,
	179, 383, 404, 199, 364, 0, 0, 0, 181, 402,
	380, 294, 264, 265, 180, 0, 345, 221, 241, 212,
	313, 399, 400, 211, 437, 190, 419, 183, 0, 418,
	306, 395, 403, 295, 286, 182, 401, 293, 285, 270,
	231, 251, 339, 280, 340, 252, 302, 301, 303, 0,
	177, 0, 377, 412, 438, 195, 196, 197, 0, 230,
	234, 240, 242, 0, 248, 255, 273, 317, 338, 336,
	342, 0, 390, 407, 415, 422, 428, 429, 433, 430,
	431, 434, 305, 191, 254, 373, 269, 278, 0, 0,
	323, 354, 200, 410, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 184, 274, 0, 343,
	238, 436, 417, 413, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 185, 193, 203, 215, 228, 236, 246, 250, 253,
	257, 258, 261, 266, 283, 288, 289, 290, 291, 307,
	308, 309, 312, 315, 316, 319, 321, 322, 325, 331,
	332, 333, 334, 335, 337, 344, 348, 356, 357, 358,
	359, 360, 362, 363, 367, 368, 369, 370, 378, 382,
	397, 398, 409, 421, 426, 247, 405, 427, 0, 282,
	0, 0, 284, 232, 249, 259, 0, 416, 379, 189,
	350, 239, 178, 206, 192, 213, 227, 229, 263, 292,
	298, 327, 330, 244, 224, 204, 347, 201, 365, 385,
	386, 387, 389, 296, 220, 314, 0, 1217, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 328, 0, 176, 0, 366, 209,
	281, 279, 394, 233, 226, 222, 208, 256, 287, 326,
	384, 320, 0, 276, 0, 0, 375, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 207, 175, 311, 376, 237, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 260, 225, 218, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 300, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 268, 171, 187,
	0, 0, 310, 349, 355, 0, 0, 0, 210, 0,
	353, 324, 408, 194, 235, 346, 329, 351, 0, 0,
	352, 277, 396, 341, 406, 424, 425, 217, 304, 414,
	388, 420, 435, 188, 214, 318, 381, 411, 372, 297,
	392, 393, 267, 371, 243, 174, 275, 432, 186, 361,
	202, 179, 383, 404, 199, 364, 0, 0, 0, 181,
	402, 380, 294, 264, 265, 180, 0, 345, 221, 241,
	212, 313, 399, 400, 211, 437, 190, 419, 183, 0,
	418, 306, 395, 403, 295, 286, 182, 401, 293, 285,
	270, 231, 251, 339, 280, 340, 252, 302, 301, 303,
	0, 177, 0, 377, 412, 438, 195, 196, 197, 0,
	230, 234, 240, 242, 0, 248, 255, 273, 317, 338,
	336, 342, 0, 390, 407, 415, 422, 428, 429, 433,
	430, 431, 434, 305, 191, 254, 373, 269, 278, 0,
	0, 323, 354, 200, 410, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 184, 274, 0,
	343, 238, 436, 417, 413, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 228, 236, 246, 250,
	253, 257, 258, 261, 266, 283, 288, 289, 290, 291,
	307, 308, 309, 312, 315, 316, 319, 321, 322, 325,
	331, 332, 333, 334, 335, 337, 344, 348, 356, 357,
	358, 359, 360, 362, 363, 367, 368, 369, 370, 378,
	382, 397, 398, 409, 421, 426, 247, 405, 427, 0,
	282, 0, 0, 284, 232, 249, 259, 0, 416, 379,
	189, 350, 239, 178, 206, 192, 213, 227, 229, 263,
	292, 298, 327, 330, 244, 224, 204, 347, 201, 365,
	385, 386, 387, 389, 296, 220, 314, 0, 1215, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 328, 0, 176, 0, 366,
	209, 281, 279, 394, 233, 226, 222, 208, 256, 287,
	326, 384, 320, 0, 276, 0, 0, 375, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 207, 175, 311, 376, 237,
	0, 0, 0, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 205, 0, 0, 0,
	0, 219, 260, 225, 218, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 300, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 268, 171,
	187, 0, 0, 310, 349, 355, 0, 0, 0, 210,
	0, 353, 324, 408, 194, 235, 346, 329, 351, 0,
	0, 352, 277, 396, 341, 406, 424, 425, 217, 304,
	414, 388, 420, 435, 188, 214, 318, 381, 411, 372,
	297, 392, 393, 267, 371, 243, 174, 275, 432, 186,
	361, 202, 179, 383, 404, 199, 364, 0, 0, 0,
	181, 402, 380, 294, 264, 265, 180, 0, 345, 221,
	241, 212, 313, 399, 400, 211, 437, 190, 419, 183,
	0, 418, 306, 395, 403, 295, 286, 182, 401, 293,
	285, 270, 231, 251, 339, 280, 340, 252, 302, 301,
	303, 0, 177, 0, 377, 412, 438, 195, 196, 197,
	0, 230, 234, 240, 242, 0, 248, 255, 273, 317,
	338, 336, 342, 0, 390, 407, 415, 422, 428, 429,
	433, 430, 431, 434, 305, 191, 254, 373, 269, 278,
	0, 0, 323, 354, 200, 410, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 184, 274,
	0, 343, 238, 436, 417, 413, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 228, 236, 246,
	250, 253, 257, 258, 261, 266, 283, 288, 289, 290,
	291, 307, 308, 309, 312, 315, 316, 319, 321, 322,
	325, 331, 332, 333, 334, 335, 337, 344, 348, 356,
	357, 358, 359, 360, 362, 363, 367, 368, 369, 370,
	378, 382, 397, 398, 409, 421, 426, 247, 405, 427,
	0, 282, 0, 0, 284, 232, 249, 259, 0, 416,
	379, 189, 350, 239, 178, 206, 192, 213, 227, 229,
	263, 292, 298, 327, 330, 244, 224, 204, 347, 201,
	365, 385, 386, 387, 389, 296, 220, 314, 0, 1213,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 328, 0, 176, 0,
	366, 209, 281, 279, 394, 233, 226, 222, 208, 256,
	287, 326, 384, 320, 0, 276, 0, 0, 375, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 207, 175, 311, 376,
	237, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 0, 0,
	0, 0, 219, 260, 225, 218, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 300, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 268,
	171, 187, 0, 0, 310, 349, 355, 0, 0, 0,
	210, 0, 353, 324, 408, 194, 235, 346, 329, 351,
	0, 0, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 0, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 0, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 0, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 0, 0, 323, 354, 200, 410, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	274, 0, 343, 238, 436, 417, 413, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 0, 0, 284, 232, 249, 259, 0,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 328, 0, 176,
	0, 366, 209, 281, 279, 394, 233, 226, 222, 208,
	256, 287, 326, 384, 320, 0, 276, 0, 0, 375,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 207, 175, 311,
	376, 237, 1188, 0, 0, 167, 168, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 205, 0,
	0, 0, 0, 219, 260, 225, 218, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 300, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	268, 171, 187, 0, 0, 310, 349, 355, 0, 0,
	0, 210, 0, 353, 324, 408, 194, 235, 346, 329,
	351, 0, 0, 352, 277, 396, 341, 406, 424, 425,
	217, 304, 414, 388, 420, 435, 188, 214, 318, 381,
	411, 372, 297, 392, 393, 267, 371, 243, 174, 275,
	432, 186, 361, 202, 179, 383, 404, 199, 364, 0,
	0, 0, 181, 402, 380, 294, 264, 265, 180, 0,
	345, 221, 241, 212, 313, 399, 400, 211, 437, 190,
	419, 183, 0, 418, 306, 395, 403, 295, 286, 182,
	401, 293, 285, 270, 231, 251, 339, 280, 340, 252,
	302, 301, 303, 0, 177, 0, 377, 412, 438, 195,
	196, 197, 0, 230, 234, 240, 242, 0, 248, 255,
	273, 317, 338, 336, 342, 0, 390, 407, 415, 422,
	428, 429, 433, 430, 431, 434, 305, 191, 254, 373,
	269, 278, 0, 0, 323, 354, 200, 410, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	184, 274, 0, 343, 238, 436, 417, 413, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 228,
	236, 246, 250, 253, 257, 258, 261, 266, 283, 288,
	289, 290, 291, 307, 308, 309, 312, 315, 316, 319,
	321, 322, 325, 331, 332, 333, 334, 335, 337, 344,
	348, 356, 357, 358, 359, 360, 362, 363, 367, 368,
	369, 370, 378, 382, 397, 398, 409, 421, 426, 247,
	405, 427, 0, 282, 0, 0, 284, 232, 249, 259,
	0, 416, 379, 189, 350, 239, 178, 206, 192, 213,
	227, 229, 263, 292, 298, 327, 330, 244, 224, 204,
	347, 201, 365, 385, 386, 387, 389, 296, 220, 1089,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 328, 0, 176, 0, 366,
	209, 281, 279, 394, 233, 226, 222, 208, 256, 287,
	326, 384, 320, 0, 276, 0, 0, 375, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 207, 175, 311, 376, 237,
	0, 0, 0, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 205, 0, 0, 0,
	0, 219, 260, 225, 218, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 300, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 268, 171,
	187, 0, 0, 310, 349, 355, 0, 0, 0, 210,
	0, 353, 324, 408, 194, 235, 346, 329, 351, 0,
	0, 352, 277, 396, 341, 406, 424, 425, 217, 304,
	414, 388, 420, 435, 188, 214, 318, 381, 411, 372,
	297, 392, 393, 267, 371, 243, 174, 275, 432, 186,
	361, 202, 179, 383, 404, 199, 364, 0, 0, 0,
	181, 402, 380, 294, 264, 265, 180, 0, 345, 221,
	241, 212, 313, 399, 400, 211, 437, 190, 419, 183,
	0, 418, 306, 395, 403, 295, 286, 182, 401, 293,
	285, 270, 231, 251, 339, 280, 340, 252, 302, 301,
	303, 0, 177, 0, 377, 412, 438, 195, 196, 197,
	0, 230, 234, 240, 242, 0, 248, 255, 273, 317,
	338, 336, 342, 0, 390, 407, 415, 422, 428, 429,
	433, 430, 431, 434, 305, 191, 254, 373, 269, 278,
	0, 0, 323, 354, 200, 410, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 184, 274,
	0, 343, 238, 436, 417, 413, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 228, 236, 246,
	250, 253, 257, 258, 261, 266, 283, 288, 289, 290,
	291, 307, 308, 309, 312, 315, 316, 319, 321, 322,
	325, 331, 332, 333, 334, 335, 337, 344, 348, 356,
	357, 358, 359, 360, 362, 363, 367, 368, 369, 370,
	378, 382, 397, 398, 409, 421, 426, 247, 405, 427,
	0, 282, 0, 0, 284, 232, 249, 259, 0, 416,
	379, 189, 350, 239, 178, 206, 192, 213, 227, 229,
	263, 292, 298, 327, 330, 244, 224, 204, 347, 201,
	365, 385, 386, 387, 389, 296, 220, 314, 0, 0,
	0, 0, 0, 0, 0, 1080, 223, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 328, 0, 176, 0,
	366, 209, 281, 279, 394, 233, 226, 222, 208, 256,
	287, 326, 384, 320, 0, 276, 0, 0, 375, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 207, 175, 311, 376,
	237, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 0, 0,
	0, 0, 219, 260, 225, 218, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 300, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 268,
	171, 187, 0, 0, 310, 349, 355, 0, 0, 0,
	210, 0, 353, 324, 408, 194, 235, 346, 329, 351,
	0, 0, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 0, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 0, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 0, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 0, 0, 323, 354, 200, 410, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	274, 0, 343, 238, 436, 417, 413, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 0, 0, 284, 232, 249, 259, 0,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 328, 0, 176,
	0, 366, 209, 281, 279, 394, 233, 226, 222, 208,
	256, 287, 326, 384, 320, 0, 276, 0, 0, 375,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 207, 175, 311,
	376, 237, 0, 0, 0, 167, 168, 169, 0, 936,
	0, 0, 0, 0, 0, 0, 198, 0, 205, 0,
	0, 0, 0, 219, 260, 225, 218, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 300, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	268, 171, 187, 0, 0, 310, 349, 355, 0, 0,
	0, 210, 0, 353, 324, 408, 194, 235, 346, 329,
	351, 0, 0, 352, 277, 396, 341, 406, 424, 425,
	217, 304, 414, 388, 420, 435, 188, 214, 318, 381,
	411, 372, 297, 392, 393, 267, 371, 243, 174, 275,
	432, 186, 361, 202, 179, 383, 404, 199, 364, 0,
	0, 0, 181, 402, 380, 294, 264, 265, 180, 0,
	345, 221, 241, 212, 313, 399, 400, 211, 437, 190,
	419, 183, 0, 418, 306, 395, 403, 295, 286, 182,
	401, 293, 285, 270, 231, 251, 339, 280, 340, 252,
	302, 301, 303, 0, 177, 0, 377, 412, 438, 195,
	196, 197, 0, 230, 234, 240, 242, 0, 248, 255,
	273, 317, 338, 336, 342, 0, 390, 407, 415, 422,
	428, 429, 433, 430, 431, 434, 305, 191, 254, 373,
	269, 278, 0, 0, 323, 354, 200, 410, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	184, 274, 0, 343, 238, 436, 417, 413, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 228,
	236, 246, 250, 253, 257, 258, 261, 266, 283, 288,
	289, 290, 291, 307, 308, 309, 312, 315, 316, 319,
	321, 322, 325, 331, 332, 333, 334, 335, 337, 344,
	348, 356, 357, 358, 359, 360, 362, 363, 367, 368,
	369, 370, 378, 382, 397, 398, 409, 421, 426, 247,
	405, 427, 0, 282, 0, 0, 284, 232, 249, 259,
	0, 416, 379, 189, 350, 239, 178, 206, 192, 213,
	227, 229, 263, 292, 298, 327, 330, 244, 224, 204,
	347, 201, 365, 385, 386, 387, 389, 296, 220, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 328, 0,
	176, 0, 366, 209, 281, 279, 394, 233, 226, 222,
	208, 256, 287, 326, 384, 320, 0, 276, 0, 0,
	375, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 207, 175,
	311, 376, 237, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	0, 0, 0, 0, 219, 260, 225, 218, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 245, 0, 300, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 268, 171, 187, 0, 0, 310, 349, 355, 0,
	0, 0, 210, 0, 353, 324, 408, 194, 235, 346,
	329, 351, 0, 0, 352, 277, 396, 341, 406, 424,
	425, 217, 304, 414, 388, 420, 435, 188, 214, 318,
	381, 411, 372, 297, 392, 393, 267, 371, 243, 174,
	275, 432, 186, 361, 202, 179, 383, 404, 199, 364,
	0, 0, 0, 181, 402, 380, 294, 264, 265, 180,
	0, 345, 221, 241, 212, 313, 399, 400, 211, 437,
	190, 419, 183, 0, 418, 306, 395, 403, 295, 286,
	182, 401, 293, 285, 270, 231, 251, 339, 280, 340,
	252, 302, 301, 303, 0, 177, 0, 377, 412, 438,
	195, 196, 197, 0, 230, 234, 240, 242, 0, 248,
	255, 273, 317, 338, 336, 342, 0, 390, 407, 415,
	422, 428, 429, 433, 430, 431, 434, 305, 191, 254,
	373, 269, 278, 0, 0, 323, 354, 200, 410, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 184, 274, 0, 343, 238, 436, 417, 413, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	228, 236, 246, 250, 253, 257, 258, 261, 266, 283,
	288, 289, 290, 291, 307, 308, 309, 312, 315, 316,
	319, 321, 322, 325, 331, 332, 333, 334, 335, 337,
	344, 348, 356, 357, 358, 359, 360, 362, 363, 367,
	368, 369, 370, 378, 382, 397, 398, 409, 421, 426,
	491, 405, 427, 0, 282, 0, 0, 284, 232, 249,
	259, 0, 416, 379, 189, 350, 239, 178, 206, 192,
	213, 227, 229, 263, 292, 298, 327, 330, 244, 224,
	204, 347, 201, 365, 385, 386, 387, 389, 296, 220,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 328,
	0, 176, 0, 366, 209, 281, 279, 394, 233, 226,
	222, 208, 256, 287, 326, 384, 320, 0, 276, 0,
	0, 375, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 207,
	175, 311, 376, 237, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 0, 0, 0, 0, 219, 260, 225, 218, 391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 300, 0, 0, 441,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 268, 171, 187, 0, 0, 310, 349, 355,
	0, 0, 0, 210, 0, 353, 324, 408, 194, 235,
	346, 329, 351, 0, 0, 352, 277, 396, 341, 406,
	424, 425, 217, 304, 414, 388, 420, 435, 188, 214,
	318, 381, 411, 372, 297, 392, 393, 267, 371, 243,
	174, 275, 432, 186, 361, 202, 179, 383, 404, 199,
	364, 0, 0, 0, 181, 402, 380, 294, 264, 265,
	180, 0, 345, 221, 241, 212, 313, 399, 400, 211,
	437, 190, 419, 183, 0, 418, 306, 395, 403, 295,
	286, 182, 401, 293, 285, 270, 231, 251, 339, 280,
	340, 252, 302, 301, 303, 0, 177, 0, 377, 412,
	438, 195, 196, 197, 0, 230, 234, 240, 242, 0,
	248, 255, 273, 317, 338, 336, 342, 0, 390, 407,
	415, 422, 428, 429, 433, 430, 431, 434, 305, 191,
	254, 373, 269, 278, 0, 0, 323, 354, 200, 410,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 184, 274, 0, 343, 238, 436, 417, 413,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 185, 193, 203,
	215, 228, 236, 246, 250, 253, 257, 258, 261, 266,
	283, 288, 289, 290, 291, 307, 308, 309, 312, 315,
	316, 319, 321, 322, 325, 331, 332, 333, 334, 335,
	337, 344, 348, 356, 357, 358, 359, 360, 362, 363,
	367, 368, 369, 370, 378, 382, 397, 398, 409, 421,
	426, 247, 405, 427, 0, 282, 0, 0, 284, 232,
	249, 259, 0, 416, 379, 189, 350, 239, 178, 206,
	192, 213, 227, 229, 263, 292, 298, 327, 330, 244,
	224, 204, 347, 201, 365, 385, 386, 387, 389, 296,
	220, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	328, 0, 176, 0, 366, 209, 281, 279, 394, 233,
	226, 222, 208, 256, 287, 326, 384, 320, 0, 276,
	0, 0, 375, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	207, 175, 311, 376, 237, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 0, 0, 0, 0, 219, 260, 225, 218,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 300, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 268, 171, 187, 0, 0, 310, 349,
	355, 0, 0, 0, 210, 0, 353, 324, 408, 194,
	235, 346, 329, 351, 0, 0, 352, 277, 396, 341,
	406, 424, 425, 217, 304, 414, 388, 420, 435, 188,
	214, 318, 381, 411, 372, 297, 392, 393, 267, 371,
	243, 174, 275, 432, 186, 361, 202, 179, 383, 404,
	199, 364, 0, 0, 0, 181, 402, 380, 294, 264,
	265, 180, 0, 345, 221, 241, 212, 313, 399, 400,
	211, 437, 190, 419, 183, 0, 418, 306, 395, 403,
	295, 286, 182, 401, 293, 285, 270, 231, 251, 339,
	280, 340, 252, 302, 301, 303, 0, 177, 0, 377,
	412, 438, 195, 196, 197, 0, 230, 234, 240, 242,
	0, 248, 255, 273, 317, 338, 336, 342, 0, 390,
	407, 415, 422, 428, 429, 433, 430, 431, 434, 305,
	191, 254, 373, 269, 278, 0, 0, 323, 354, 200,
	410, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 274, 0, 343, 238, 436, 417,
	413, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 228, 236, 246, 250, 253, 257, 258, 261,
	266, 283, 288, 289, 290, 291, 307, 308, 309, 312,
	315, 316, 319, 321, 322, 325, 331, 332, 333, 334,
	335, 337, 344, 348, 356, 357, 358, 359, 360, 362,
	363, 367, 368, 369, 370, 378, 382, 397, 398, 409,
	421, 426, 247, 405, 427, 0, 282, 0, 0, 284,
	232, 249, 259, 0, 416, 379, 189, 350, 239, 178,
	206, 192, 213, 227, 229, 263, 292, 298, 327, 330,
	244, 224, 204, 347, 201, 365, 385, 386, 387, 389,
	296, 220,
}

var yyPact = [...]int{
	4113, -1000, -340, 1608, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1572, 1232, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 560, 1253, -1000, 1479, 253, -1000, 29082, 394,
	-1000, 28621, 391, 2045, 29082, -1000, 125, -1000, 111, 29082,
	115, 28160, -1000, -1000, -287, 12914, 1429, -13, -30, 29082,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1245,
	1518, 1526, 1570, 1075, 1490, -1000, 11057, 11057, 329, 329,
	329, 9213, -1000, -1000, 17076, 29082, 29082, 171, -1000, 1479,
	-1000, -1000, 140, -1000, 245, 1185, -1000, 1181, -1000, 556,
	465, 241, 318, 317, 240, 236, 235, 234, 231, 228,
	227, 224, 254, -1000, 535, 535, -179, -183, 2370, 298,
	298, 298, 364, 1450, 1449, -1000, 487, -1000, 535, 535,
	137, 535, 535, 535, 535, 190, 188, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 176, 1479, 177, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29082,
	65, 29082, -1000, 441, 29082, 626, 626, 34, 626, 626,
	626, 626, 101, 419, -41, -1000, 83, 173, 109, 175,
	635, 213, 59, -1000, -1000, 169, 635, 49, -1000, 626,
	7313, 7313, 7313, -1000, 1464, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 346, -1000, -1000, -1000, -1000, 29082, 27699,
	289, 577, -1000, -1000, -1000, 29, -1000, -1000, 1156, 846,
	-1000, 12914, 2742, 1189, 1189, -1000, -1000, 418, -1000, -1000,
	14297, 14297, 14297, 14297, 14297, 14297, 14297, 14297, 14297, 14297,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1189, 439, -1000, 12453, 1189, 1189,
	1189, 1189, 1189, 1189, 1189, 1189, 12914, 1189, 1189, 1189,
	1189, 1189, 1189, 1189, 1189, 1189, 1189, 1189, 1189, 1189,
	1189, 1189, 1189, 1189, -1000, -1000, -1000, 29082, -1000, 1189,
	136, 1572, -1000, 1232, -1000, -1000, -1000, 1468, 12914, 12914,
	1572, -1000, 1387, 11057, -1000, -1000, 1402, -1000, -1000, -1000,
	-1000, -1000, 669, 1594, -1000, 15680, 436, 1592, 27238, -1000,
	20777, 26777, 1180, 8738, -33, -1000, -1000, -1000, 575, 19394,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1464, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1132, 29082, -1000, -1000, 3221,
	924, -1000, 1252, -1000, 1129, -1000, 1207, 1259, 390, 924,
	381, 380, 379, -1000, -116, -1000, -1000, -1000, -1000, -1000,
	535, 535, 229, 253, 3856, -1000, -1000, -1000, 26309, 1250,
	924, -1000, 1249, -1000, 1495, 330, 512, 512, 924, -1000,
	-1000, 29082, 924, 1493, 1489, 29082, 29082, -1000, 25848, -1000,
	25387, 24926, 862, 29082, 24465, 24004, 23543, 23082, 22621, -1000,
	1339, -1000, 1241, -1000, -1000, -1000, 29082, 29082, 29082, 28,
	-1000, -1000, 29082, 924, -1000, -1000, 857, 852, 535, 535,
	833, 972, 970, 965, 535, 535, 832, 959, 1007, 180,
	816, 805, 804, 853, 953, 112, 811, 753, 795, 29082,
	1248, 29082, -1000, 168, 504, 261, 557, 1479, 1428, 1179,
	344, 388, 924, 312, 312, -1000, 7788, -1000, -1000, 952,
	12914, -1000, 650, 635, 635, -1000, -1000, -1000, -1000, -1000,
	-1000, 626, 29082, 650, -1000, -1000, -1000, 635, 626, 29082,
	626, 626, 626, 626, 635, 635, 635, 626, 29082, 29082,
	29082, 29082, 29082, 29082, 29082, 29082, 29082, 7313, 7313, 7313,
	500, 626, -1000, 1346, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 114, -1000, -1000, -1000, -1000, -1000, 1608, -1000,
	-1000, -1000, -113, 1177, 22160, -1000, -291, -292, -293, -294,
	-1000, -1000, -1000, -297, -299, -1000, -1000, -1000, 12914, 12914,
	12914, 12914, 894, 513, 14297, 705, 506, 14297, 14297, 14297,
	14297, 14297, 14297, 14297, 14297, 14297, 14297, 14297, 14297, 14297,
	14297, 14297, 676, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 924, -1000, 1606, 1061, 1061, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 14758, 9674, 7788, 1075, 1126,
	1572, 11057, 11057, 12914, 12914, 11979, 11518, 11057, 1455, 605,
	846, 29082, -1000, 893, -1000, -1000, 13836, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29082,
	29082, 11057, 11057, 11057, 11057, 11057, -1000, 1176, -1000, -172,
	16615, 12914, 946, 1526, 1075, 1402, 1498, 1600, 480, 855,
	1174, -1000, 935, 1526, 18933, 1218, -1000, 1402, -1000, -1000,
	-1000, 29082, -1000, -1000, 21699, -1000, -1000, 6838, 29082, 221,
	29082, -1000, 1198, 1308, -1000, -1000, -1000, 1515, 18472, 29082,
	1203, 1186, -1000, -1000, 435, 8263, -33, -1000, 8263, 1161,
	-1000, -66, -45, 10135, 451, -1000, -1000, -1000, 2370, 15219,
	1049, 1435, 47, -1000, -1000, -1000, 1207, -1000, 1207, 1207,
	1207, 1207, 28, 28, 28, 28, -1000, -1000, -1000, -1000,
	-1000, 1247, 1246, -1000, 1207, 1207, 1207, 1207, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1244, 1244, 1244, 1220, 1220,
	290, -1000, 12914, 107, 29082, 1504, 790, 168, 315, 1279,
	924, 924, 924, 315, -1000, 983, 971, -1000, 1172, -1000,
	-1000, 1569, -1000, -1000, 617, 629, 627, 484, 29082, 141,
	220, -1000, 284, -1000, 29082, 924, 1487, 512, 924, -1000,
	924, -1000, -1000, -1000, -1000, 433, -1000, -1000, 924, 1171,
	-1000, 1065, 729, 622, 688, 616, 1171, -1000, -1000, -159,
	1171, -1000, 1171, -1000, 1171, -1000, 1171, -1000, 1171, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 532, 29082, 141,
	676, -1000, 343, -1000, -1000, 676, 676, -1000, -1000, -1000,
	-1000, 930, 929, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -338,
	29082, -1000, 156, 545, 196, 226, 206, 29082, 131, 1521,
	154, 186, 29082, 29082, 312, 1307, 29082, 1509, 29082, -1000,
	-1000, -1000, -1000, 846, 29082, -1000, -1000, 626, 626, -1000,
	-1000, 29082, 626, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 626, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 928, -1000, 29082, 29082,
	-1000, -1000, -1000, -1000, -1000, 78, -78, 166, -1000, -1000,
	-1000, -1000, 1523, -1000, 846, 513, 719, 647, -1000, -1000,
	899, -1000, -1000, 2150, -1000, -1000, -1000, -1000, 705, 14297,
	14297, 14297, 611, 2150, 2910, 728, 1266, 461, 562, 562,
	476, 476, 476, 476, 476, 533, 533, -1000, -1000, -1000,
	-1000, 893, -1000, -1000, -1000, 893, 11057, 11057, 1169, 1189,
	423, -1000, 1245, -1000, -1000, 1526, 1095, 1095, 714, 876,
	566, 1591, 1095, 552, 1589, 1095, 1095, 11057, -1000, -1000,
	690, -1000, 12914, 893, -1000, 888, 1166, 1164, 1095, 893,
	893, 1095, 1095, 29082, -1000, -284, -1000, -96, 473, 1189,
	-1000, 21238, -1000, -1000, 893, 1156, -1000, 1468, -1000, -1000,
	1414, -1000, 1381, 12914, 12914, 12914, -1000, -1000, -1000, 1468,
	1571, -1000, 1397, 1396, 1583, 11057, 20777, 1402, -1000, -1000,
	-1000, 422, 1583, 1201, 1189, -1000, 29082, 20777, 20777, 20777,
	20777, 20777, -1000, 1364, 1363, -1000, 1361, 1357, 1368, 29082,
	-1000, 1109, 1075, 18472, 221, 1149, 20777, 29082, -1000, -1000,
	20777, 29082, 6363, -1000, 1161, -33, -69, -1000, -1000, -1000,
	-1000, 846, -1000, 966, -1000, 2227, -1000, 281, -1000, -1000,
	-1000, -1000, 457, 1514, 1433, -15, -1000, -1000, -1000, 28,
	28, -1000, -1000, 451, 687, 451, 451, 451, 926, 926,
	-1000, -1000, -1000, -1000, -1000, 788, -1000, -1000, -1000, 766,
	-1000, -1000, 869, 1332, 107, -1000, -1000, 535, 925, 1438,
	29082, -1000, -1000, 1041, 156, 29082, 564, 1303, -1000, 1279,
	1279, 1279, 29082, -1000, -1000, -1000, -1000, 3583, 29082, 1106,
	-1000, 139, 29082, 1019, 29082, -1000, 1103, 1234, 924, 924,
	-1000, -1000, 7788, -1000, 29082, 1189, -1000, -1000, -1000, -1000,
	384, 1474, 1469, 141, 139, 451, 924, -1000, -1000, -1000,
	-1000, -1000, -341, 1101, 369, 144, 147, 29082, 29082, 29082,
	29082, 29082, 410, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	181, 340, -1000, 29082, 29082, 378, -1000, -1000, -1000, 635,
	-1000, -1000, 635, -1000, -1000, -1000, -1000, -1000, -1000, 1459,
	-87, -313, -1000, -310, -1000, -1000, -1000, -1000, 611, 2150,
	2852, -1000, 14297, 14297, -1000, -1000, 1095, 1095, 11057, 7788,
	1572, 1468, -1000, -1000, 361, 676, 361, 14297, 14297, -1000,
	14297, 14297, -1000, -151, 1052, 534, -1000, 12914, 709, -1000,
	-1000, 14297, 14297, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 376, 374, 373, 29082, -1000, -1000, -1000, 879,
	917, 1377, 846, 846, -1000, -1000, 29082, -1000, -1000, -1000,
	-1000, 1580, 12914, -1000, 1160, -1000, 5888, 1526, 1293, 29082,
	1189, 1608, 16154, 29082, 1211, -1000, 543, 1308, 1278, 1290,
	1276, -1000, -1000, -1000, -1000, 1360, -1000, 1318, -1000, -1000,
	-1000, -1000, -1000, 1075, 1583, 20777, 1151, -1000, 1151, -1000,
	421, -1000, -1000, -1000, -92, -64, -1000, -1000, -1000, 2370,
	-1000, -1000, -1000, -1000, 643, 14297, 1599, -1000, 913, -1000,
	-1000, 1486, 1484, -1000, 29082, 1224, -1000, -1000, -1000, 451,
	451, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1090, -1000,
	1084, 1159, 1082, 51, -1000, 1258, 1457, 535, 535, -1000,
	751, -1000, 924, -1000, -1000, 367, -1000, 1508, 29082, 1288,
	1287, 1285, -1000, 1557, 1158, -1000, 29082, -1000, -1000, 29082,
	-1000, -1000, 1395, 107, 29082, -1000, -1000, -1000, -1000, 220,
	29082, -1000, 1061, 139, -1000, -1000, -1000, -1000, -1000, -1000,
	29082, 152, -1000, 1223, 691, -1000, 1270, -1000, -1000, -1000,
	-1000, 113, 195, -1000, 29082, 372, 1332, 29082, -1000, -1000,
	-1000, 626, 626, -1000, 1453, -1000, 924, -1000, 14297, 2150,
	2150, -1000, -1000, 893, -1000, 1526, -1000, 893, 1207, 1207,
	-1000, 1207, 1220, -1000, 1207, 99, 1207, 68, 893, 893,
	2805, 2757, 2647, 2357, 1189, -141, -1000, 846, 12914, 2294,
	1798, 1189, 1189, 1189, 1058, 912, 28, -1000, -1000, -1000,
	1578, 1547, 846, -1000, -1000, -1000, 1491, 1025, 1144, -1000,
	-1000, 10596, 1078, 1390, 416, 1058, 1572, 29082, 12914, -1000,
	-1000, 12914, 1202, -1000, 12914, -1000, -1000, -1000, 1572, 1572,
	1151, -1000, -1000, 479, -1000, -1000, -1000, -1000, -1000, 2150,
	-86, -1000, -1000, -1000, 1200, 14297, -1000, -1000, 28, 900,
	28, 732, -1000, 701, -1000, -1000, -226, -1000, -1000, 1238,
	1294, -1000, -1000, 29082, -1000, -1000, 29082, 29082, 29082, 29082,
	29082, -1000, -1000, 187, -1000, 1055, 1048, -1000, -177, -1000,
	-1000, 1195, -1000, -1000, -1000, 1013, -1000, -160, 924, 29082,
	29082, 29082, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2150, -1000, 1468, -1000, -1000, 233, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 14297, 14297, 14297, 14297, 14297, 1526,
	895, 846, 14297, 14297, 17998, 20316, 20316, 17537, 28, 45,
	-1000, 12914, 12914, 1481, -1000, 1189, -1000, 1221, 29082, 1189,
	29082, -1000, 1526, -1000, 846, 846, 29082, 846, 1526, -1000,
	-1000, 29082, 978, 451, -1000, 451, 1000, 991, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1195, -1000, -1000, -1000,
	1158, -1000, 200, 249, -1000, 220, -1000, -184, -190, 1513,
	29082, -1000, -1000, 7788, -1000, -1000, 1190, 1274, -1000, -1000,
	-1000, -1000, 888, 888, 888, 888, 170, 893, -1000, 888,
	888, 1046, -1000, -1000, -1000, 1046, 1046, 473, -277, -1000,
	1425, 1403, 846, 1156, 1598, -1000, 1189, 1608, 411, 1144,
	-1000, -1000, 1044, -1000, 1039, -1000, -1000, -1000, -1000, -1000,
	1511, 1189, -1000, -1000, -1000, -1000, 1232, 1018, 1153, -1000,
	511, 29082, 29082, -1000, -1000, -1000, -1000, 893, 124, -162,
	-1000, -1000, -1000, 19855, -1000, -1000, -1000, -1000, 45, 268,
	-1000, 1408, 1403, -1000, 1545, 1413, 1538, -1000, 29082, 1144,
	29082, -1000, 1284, 671, 1232, 13375, 183, -1000, 7788, 5413,
	998, -1000, -1000, 1376, -157, -174, -1000, -1000, 1407, 1405,
	1405, 1408, -1000, 1532, 1531, -1000, 887, 1529, 886, 1060,
	-1000, 1283, -1000, 1588, -1000, -1000, -1000, 638, 884, -1000,
	-1000, -1000, 183, 888, 893, -1000, -59, -1000, -1000, -1000,
	-1000, -1000, 1270, -1000, 1371, -1000, 1404, 784, -1000, -1000,
	-1000, -1000, 882, 881, -1000, 689, -1000, -1000, 1590, 428,
	428, -1000, -1000, -1000, -1000, -1000, 288, -1000, -1000, -160,
	-171, -1000, 775, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 285, 754, -1000, 161, -1000, -167, -1000, -1000, -1000,
	-1000, -1000, -1000, -175, -1000,
}

var yyPgo = [...]int{
	0, 1863, 1862, 12, 90, 93, 1861, 1859, 1857, 1856,
	136, 134, 133, 1855, 1854, 1853, 1849, 1848, 1846, 1845,
	1844, 1842, 1840, 1838, 1837, 66, 121, 40, 44, 124,
	1836, 1834, 39, 1833, 1832, 1830, 125, 123, 567, 1829,
	129, 1828, 1826, 1825, 1823, 1818, 1817, 1814, 1812, 1811,
	1810, 1809, 1808, 1805, 1804, 230, 1803, 1797, 4, 1796,
	41, 1795, 1794, 1784, 1782, 1781, 94, 1778, 1776, 1775,
	118, 1773, 1772, 46, 402, 63, 84, 1771, 1770, 77,
	126, 1768, 64, 107, 1767, 1766, 787, 1764, 50, 82,
	102, 1763, 51, 1762, 1761, 68, 1760, 1759, 1757, 81,
	1755, 1754, 3342, 1753, 78, 86, 19, 34, 1750, 1745,
	1742, 1741, 38, 416, 1740, 1739, 32, 1738, 1737, 141,
	1735, 91, 22, 1731, 18, 43, 25, 1730, 100, 1729,
	28, 56, 35, 1726, 87, 1725, 1724, 1723, 1721, 80,
	1720, 85, 108, 24, 1719, 1718, 1714, 8, 16, 1713,
	1712, 1711, 1710, 1709, 1708, 15, 1707, 6, 1704, 27,
	1703, 17, 23, 30, 76, 73, 33, 14, 1701, 135,
	1698, 29, 130, 72, 115, 1695, 1694, 1693, 847, 149,
	1692, 1691, 48, 1689, 104, 106, 1686, 166, 1684, 1683,
	69, 1086, 2511, 9, 117, 1681, 1680, 1728, 59, 79,
	26, 1678, 57, 1677, 1675, 1674, 127, 119, 67, 769,
	45, 1673, 1672, 1671, 1669, 1667, 1666, 1665, 83, 185,
	31, 109, 37, 1664, 1663, 1661, 65, 47, 1659, 113,
	112, 74, 128, 1658, 120, 103, 53, 1657, 58, 1656,
	1655, 1653, 1651, 61, 1650, 1649, 1648, 1641, 111, 105,
	71, 42, 1639, 36, 75, 99, 98, 1638, 20, 122,
	7, 1636, 1, 0, 1633, 3, 131, 162, 110, 1632,
	1631, 2, 1630, 5, 1628, 1627, 89, 1625, 1624, 1623,
	11, 21, 10, 1617, 1615, 3253, 1960, 116, 1614, 132,
}

//line sql.y:5320
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

var yyR1 = [...]int{
	0, 283, 284, 284, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 263, 263, 263, 266, 266,
	21, 50, 3, 3, 3, 3, 2, 2, 8, 9,
	4, 5, 5, 10, 10, 62, 62, 11, 12, 12,
	12, 12, 287, 287, 97, 97, 95, 95, 96, 96,
	164, 164, 13, 14, 14, 174, 174, 173, 173, 173,
	175, 175, 175, 175, 209, 209, 15, 15, 15, 15,
	15, 71, 71, 265, 265, 264, 262, 262, 261, 261,
	260, 23, 24, 33, 33, 33, 33, 34, 35, 267,
	267, 239, 39, 39, 38, 38, 38, 38, 40, 40,
	37, 37, 36, 36, 241, 241, 228, 228, 240, 240,
	240, 240, 240, 240, 240, 227, 227, 85, 85, 145,
	145, 145, 145, 145, 145, 145, 145, 279, 279, 146,
	146, 146, 146, 146, 146, 280, 280, 280, 280, 211,
	211, 211, 211, 214, 214, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 213, 213, 213, 213, 213, 215,
	215, 215, 215, 215, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 217,
	217, 217, 217, 217, 217, 217, 217, 226, 226, 218,
	218, 221, 221, 222, 222, 222, 223, 223, 223, 224,
	224, 219, 219, 219, 219, 220, 220, 220, 229, 253,
	253, 252, 252, 250, 250, 250, 250, 238, 238, 247,
	247, 247, 247, 247, 237, 237, 233, 233, 233, 234,
	234, 235, 235, 232, 232, 236, 236, 249, 249, 248,
	230, 230, 231, 231, 255, 281, 281, 281, 281, 282,
	282, 256, 272, 273, 271, 271, 271, 271, 271, 60,
	60, 60, 186, 186, 186, 245, 245, 244, 244, 244,
	246, 246, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 181, 181, 181, 270, 270, 270, 270, 270, 270,
	269, 269, 269, 242, 242, 242, 268, 268, 131, 131,
	132, 132, 30, 30, 30, 30, 30, 30, 29, 29,
	29, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 31, 31, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 225, 225, 225, 257, 257,
	258, 258, 17, 22, 22, 18, 18, 18, 18, 19,
	19, 41, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 274, 274,
	180, 180, 188, 188, 179, 179, 202, 202, 202, 182,
	182, 182, 183, 183, 278, 278, 278, 43, 43, 45,
	45, 46, 47, 47, 204, 204, 205, 205, 48, 49,
	61, 61, 61, 61, 61, 61, 63, 63, 63, 7,
	7, 7, 7, 57, 57, 57, 6, 6, 44, 44,
	51, 275, 275, 276, 277, 277, 277, 277, 52, 54,
	20, 20, 20, 20, 20, 20, 78, 78, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	72, 72, 72, 67, 67, 288, 55, 56, 56, 70,
	70, 70, 64, 64, 64, 69, 69, 69, 75, 75,
	77, 77, 77, 77, 77, 79, 79, 79, 79, 79,
	79, 79, 74, 74, 76, 76, 76, 76, 195, 195,
	195, 194, 194, 87, 87, 88, 88, 89, 89, 90,
	90, 90, 129, 105, 105, 162, 162, 161, 161, 163,
	163, 163, 163, 165, 165, 91, 91, 91, 91, 92,
	92, 93, 93, 94, 94, 203, 203, 200, 200, 200,
	199, 199, 98, 98, 98, 100, 99, 99, 99, 99,
	101, 101, 103, 103, 102, 102, 104, 106, 106, 106,
	106, 106, 107, 107, 86, 86, 86, 86, 86, 86,
	86, 86, 177, 177, 109, 109, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 120, 120, 120, 120,
	120, 120, 110, 110, 110, 110, 110, 110, 110, 73,
	73, 121, 121, 121, 128, 122, 122, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 117, 117, 117, 117, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 289, 289, 119, 118, 118,
	118, 118, 118, 118, 118, 68, 68, 68, 68, 68,
	208, 208, 208, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 135, 135, 65, 65,
	133, 133, 134, 136, 136, 130, 130, 130, 112, 112,
	112, 112, 112, 112, 112, 112, 114, 114, 114, 137,
	137, 138, 138, 139, 139, 140, 140, 141, 142, 142,
	142, 143, 143, 143, 143, 32, 32, 32, 32, 32,
	27, 27, 27, 27, 28, 28, 28, 80, 80, 80,
	80, 82, 82, 81, 81, 58, 58, 59, 59, 59,
	83, 83, 84, 84, 84, 84, 159, 159, 159, 144,
	144, 144, 144, 151, 151, 151, 147, 147, 149, 149,
	149, 150, 150, 150, 148, 156, 156, 158, 158, 157,
	157, 153, 153, 154, 154, 155, 155, 155, 152, 152,
	111, 111, 111, 111, 111, 160, 160, 160, 160, 166,
	166, 124, 124, 126, 126, 125, 127, 167, 167, 171,
	168, 168, 172, 172, 172, 172, 172, 169, 169, 170,
	170, 196, 196, 196, 176, 176, 187, 187, 184, 184,
	185, 185, 178, 178, 189, 189, 189, 53, 123, 123,
	254, 254, 251, 192, 192, 193, 193, 197, 197, 201,
	201, 198, 198, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 285, 286, 206, 207, 207, 207,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 5, 6, 6, 7, 4, 6, 5, 7,
	8, 1, 3, 7, 8, 1, 1, 9, 9, 8,
	7, 7, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 6, 4, 7, 8, 8, 8, 6, 3, 1,
	1, 4, 0, 1, 1, 1, 2, 2, 0, 1,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 4, 9, 0, 2, 0,
	2, 3, 3, 4, 2, 3, 2, 1, 1, 0,
	2, 2, 3, 3, 2, 2, 1, 2, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 1, 0,
	1, 0, 2, 2, 2, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	3, 1, 3, 1, 7, 5, 6, 6, 7, 0,
	1, 5, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 0, 1, 2, 0, 1, 1, 3, 2,
	1, 2, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 6,
	5, 5, 2, 2, 2, 2, 3, 3, 3, 4,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 4, 4, 2, 11, 3,
	6, 8, 6, 6, 6, 13, 8, 6, 10, 5,
	5, 5, 5, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	8, 8, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 3, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 4, 2, 4, 5, 4, 4, 4, 4,
	3, 3, 5, 2, 3, 3, 3, 3, 1, 1,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 2, 1, 1,
	2, 1, 1, 5, 0, 1, 0, 1, 2, 3,
	0, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 3, 3, 2, 2,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 4,
	3, 3, 6, 4, 7, 6, 1, 3, 2, 2,
	2, 2, 1, 1, 1, 3, 2, 1, 1, 1,
	0, 1, 1, 0, 3, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 1, 0, 1, 1, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 2, 1, 3, 1, 1, 1,
	3, 3, 3, 3, 7, 0, 3, 1, 3, 1,
	1, 3, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 5, 4,
	5, 5, 0, 2, 1, 3, 3, 3, 2, 3,
	1, 2, 0, 3, 1, 1, 3, 3, 4, 4,
	5, 3, 4, 5, 6, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	1, 4, 5, 5, 6, 4, 4, 6, 6, 6,
	8, 8, 8, 8, 9, 8, 5, 4, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 8, 8, 0, 2, 3, 4, 4,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 0, 2, 0, 3, 1, 3, 2, 0, 1,
	1, 0, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 0, 2, 4, 0,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -283, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -53, -54, -4, -285, 6, 7, 8, -62, 10,
	11, 31, -23, -33, 157, -34, -24, 158, -35, 160,
	159, 196, 161, 189, 73, 235, 236, 238, 239, 240,
	241, -63, 194, 195, 163, 35, 44, 32, 33, 36,
	166, 83, 9, 340, 191, 190, 26, -284, 480, -70,
	5, -139, 16, -3, -55, -288, -55, -55, -55, -55,
	-55, -55, -239, -241, 83, 130, 83, -55, -39, -38,
	-37, -36, -40, 30, -30, -31, -259, -29, -26, 162,
	159, 204, 104, 105, 196, 197, 198, 161, 180, 195,
	199, 194, 213, -25, 79, 32, 353, 356, -246, 158,
	164, 165, 341, 107, 106, 74, 160, -243, 285, 457,
	-40, 459, 97, 99, 458, 43, 169, 460, 461, 462,
	463, 179, 464, 465, 466, 467, 473, 474, 475, 476,
	108, 5, -55, -201, -197, -263, -191, 86, 87, 88,
	350, 182, 384, 385, 229, 79, 40, 285, 457, 235,
	249, 243, 270, 262, 351, 386, 232, 183, 217, 454,
	260, 318, 459, 387, 197, 290, 291, 292, 97, 238,
	327, 472, 234, 388, 470, 99, 458, 78, 50, 43,
	192, 258, 254, 460, 218, 389, 361, 211, 107, 104,
	479, 252, 49, 28, 469, 106, 48, 461, 390, 462,
	294, 275, 448, 47, 295, 198, 391, 82, 355, 456,
	296, 253, 297, 228, 468, 163, 392, 440, 299, 449,
	393, 276, 280, 394, 319, 300, 51, 395, 396, 450,
	105, 397, 77, 463, 247, 248, 398, 226, 181, 321,
	274, 179, 34, 301, 352, 230, 57, 205, 322, 45,
	278, 44, 444, 399, 447, 273, 269, 52, 400, 401,
	402, 403, 464, 272, 246, 268, 478, 223, 465, 61,
	165, 282, 281, 283, 212, 317, 265, 404, 405, 406,
	186, 80, 407, 255, 19, 408, 409, 302, 219, 410,
	55, 411, 412, 325, 195, 413, 53, 466, 38, 200,
	467, 414, 415, 416, 417, 418, 304, 419, 303, 277,
	279, 207, 305, 354, 420, 251, 199, 471, 421, 187,
	455, 201, 204, 194, 326, 188, 422, 423, 424, 425,
	426, 233, 427, 428, 239, 473, 42, 429, 430, 431,
	432, 227, 222, 320, 329, 60, 81, 287, 433, 453,
	245, 220, 434, 236, 54, 474, 475, 476, 214, 477,
	307, 108, 224, 225, 46, 266, 206, 435, 436, 256,
	257, 271, 244, 267, 237, 441, 208, 308, 196, 437,
	328, 221, 288, 358, 213, 309, 452, 357, 264, 261,
	215, 438, 310, 170, 209, 210, 439, 442, 311, 312,
	314, 315, 231, 313, 316, 216, 356, 259, 289, 168,
	-55, 168, -102, -197, 168, -169, 291, -188, 293, 306,
	301, 311, 299, -180, 302, 304, 207, -278, 319, 168,
	308, 157, 148, 294, 303, 312, 313, 316, 216, -274,
	-263, 462, 477, 318, 263, 298, 296, 320, 444, 315,
	314, -197, 237, -204, 242, -192, -263, -191, 240, -102,
	-61, 440, 161, -206, -206, -72, 444, 446, -122, -86,
	-108, 114, -113, 30, 24, -112, -109, -130, -127, -128,
	148, 149, 151, 150, 152, 137, 138, 145, 115, 153,
	-117, -115, -116, -118, 90, 89, 98, 91, 92, 93,
	94, 100, 101, 102, -192, -197, -125, -285, 67, 68,
	341, 342, 343, 344, 349, 345, 117, 56, 336, 330,
	339, 338, 337, 334, 335, 332, 333, 347, 348, 173,
	331, 167, 143, 340, -263, -191, 43, 307, 307, -102,
	-55, -5, -4, -285, 6, 21, 22, -143, 18, 17,
	-286, 85, -64, -77, 62, 63, -79, 22, 37, 66,
	64, 21, -56, -76, 139, -86, -197, -76, -178, 172,
	-178, -178, -168, -209, 237, -172, 320, 319, -193, -170,
	-192, -190, -169, 317, 162, 359, 113, 23, 25, 116,
	148, 17, 117, 36, 164, 263, 180, 147, 176, 341,
	157, 71, 360, 332, 333, 330, 336, 343, 344, 331,
	293, 30, 11, 362, 26, 190, 22, 37, 141, 159,
	120, 121, 193, 24, 191, 102, 365, 20, 74, 185,
	12, 178, 39, 14, 366, 367, 15, 173, 172, 132,
	169, 69, 9, 153, 27, 129, 65, 368, 29, 369,
	370, 371, 372, 67, 130, 18, 334, 335, 32, 445,
	373, 349, 202, 143, 72, 58, 446, 114, 374, 375,
	100, 376, 103, 75, 451, 111, 16, 70, 41, 377,
	203, 378, 175, 379, 323, 380, 131, 160, 340, 68,
	381, 167, 306, 6, 346, 31, 189, 177, 110, 66,
	382, 168, 119, 347, 348, 171, 101, 5, 174, 33,
	10, 73, 76, 337, 338, 339, 56, 109, 353, 118,
	13, 383, 324, 112, 318, -240, 130, -227, -231, -192,
	184, -256, 180, -102, -249, -248, -192, -71, -187, 169,
	178, 177, 174, -267, 111, 224, 331, 167, -36, -37,
	-169, 147, 201, 84, 84, -231, -230, -229, -268, 203,
	184, -255, -247, 176, 185, -237, 177, 178, -232, 169,
	29, -268, -232, 175, 185, 203, 203, 108, 203, 108,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 200,
	-238, 122, -238, 357, 357, -243, -268, -268, -268, 171,
	34, 34, -189, -232, 171, 23, -238, -238, -169, 147,
	-238, -238, -238, -238, 211, 211, -238, -238, -238, -238,
	-238, -238, -238, -238, -238, -238, -238, -238, -238, -238,
	-238, 168, -267, -80, 316, 231, 79, -38, 213, -22,
	-102, -187, 169, 170, -267, -102, 154, -102, -182, 130,
	13, -182, -179, 307, 305, 292, 297, -182, -182, -182,
	-182, 214, 290, -233, 169, 34, 181, 307, 214, 290,
	214, 215, 214, 215, 300, 310, 214, -202, 12, 132,
	331, 295, 299, 207, 168, 208, 170, 309, -263, 447,
	215, -202, 307, 210, -182, -207, -285, -193, 263, -207,
	-207, 31, 171, -192, -57, -192, 90, -7, -3, -11,
	-10, -12, 122, -78, 307, -66, 148, 462, 448, 449,
	450, 447, 304, 455, 453, 451, 214, 452, 84, 113,
	111, 112, 129, -86, -110, 132, 114, 130, 131, 116,
	134, 133, 144, 137, 138, 139, 140, 141, 142, 143,
	135, 136, 147, 122, 123, 124, 125, 126, 127, 128,
	-177, -285, -128, -285, 155, 156, -113, -113, -113, -113,
	-113, -113, -113, -113, -113, -113, -285, 154, -2, -122,
	-4, -285, -285, -285, -285, -285, -285, -285, -285, -135,
	-86, -285, -289, -285, -289, -119, -285, -289, -119, -289,
	-119, -289, -289, -119, -289, -119, -289, -289, -119, -285,
	-285, -285, -285, -285, -285, -285, -206, -275, -276, -105,
	-102, -285, 231, -139, -3, -55, -159, 20, 32, -86,
	-140, -141, -86, -139, 58, -74, -76, -79, 62, 63,
	96, 12, -195, -194, 23, -192, 90, 154, 12, -103,
	27, -102, -88, -89, -90, -91, -105, -129, -285, 12,
	-95, -96, -102, -104, -197, 84, 237, -172, -209, -174,
	-173, 321, 323, 122, -196, -192, 90, 30, 85, 84,
	-102, -211, -214, -216, -215, -217, -212, -213, 260, 261,
	148, 264, 266, 267, 268, 269, 270, 271, 272, 273,
	274, 275, 31, 192, 256, 257, 258, 259, 276, 277,
	278, 279, 280, 281, 282, 283, 243, 262, 351, 244,
	245, 246, 247, 248, 249, 251, 252, 253, 254, 255,
	-266, -263, 83, 85, 84, -218, 83, -80, 168, -263,
	169, 169, 169, -55, 340, -238, -238, 200, -29, -26,
	-259, 16, -25, -26, 162, 104, 105, 159, 83, -227,
	83, -236, -266, -263, 83, 29, 175, 174, -235, -232,
	-235, -236, -263, -130, -192, -197, -263, 29, 29, -165,
	-192, -165, -165, 21, -165, 21, -165, 21, 91, -192,
	-165, 21, -165, 21, -165, 21, -165, 21, -165, 21,
	30, 77, 78, 30, 80, 81, 82, -130, -130, -227,
	-169, -102, -263, 91, 91, -238, -238, 91, 90, 90,
	90, -238, -238, 91, 90, -263, 90, -269, 186, 228,
	230, 91, 91, 91, 91, 30, 90, -270, 30, 469,
	468, 470, 471, 472, 91, 30, 91, 30, 91, -192,
	83, -102, -83, 218, 157, 159, 162, 75, 90, 232,
	122, 43, 84, 171, 168, -263, -184, 173, -184, -198,
	-197, -190, 90, -86, -234, 12, 132, -202, -202, -182,
	-102, -234, -202, -182, -102, -182, -182, -182, -182, -202,
	-202, -202, -182, -197, -197, -102, -102, -102, -102, -102,
	-102, -102, -207, -207, -207, -183, 130, -182, 75, -205,
	240, 274, 441, 442, 443, 84, 353, -95, 447, 447,
	447, 447, 447, 447, -86, -86, -86, -86, -120, 100,
	114, 101, 102, -113, -121, -125, -128, 95, 132, 130,
	131, 116, -113, -113, -113, -113, -113, -113, -113, -113,
	-113, -113, -113, -113, -113, -113, -113, -208, -263, 90,
	148, -263, -112, -112, -192, -75, 22, 37, -74, -193,
	-198, -190, -70, -286, -286, -139, -74, -74, -86, -86,
	-130, 90, -74, -130, 90, -74, -74, -69, 22, 37,
	-133, -134, 118, -130, -286, -113, -192, -192, -74, -75,
	-75, -74, -74, 84, -277, 323, 324, 445, -200, 203,
	-199, 23, -197, 90, -123, -122, 90, -143, -286, -144,
	27, 10, 132, 84, 19, 84, -142, 25, 26, -143,
	-114, -192, 91, 94, -87, 84, 12, -79, -102, -194,
	139, -198, -102, -164, 203, -102, 31, 84, -98, -100,
	-99, -101, 65, 69, 71, 66, 67, 68, 72, -203,
	23, -88, -3, -285, -102, -95, -287, 84, 12, 76,
	-287, 84, 154, -172, -174, 84, 322, 324, 325, 75,
	103, -86, -220, 147, -245, -244, -243, -227, -229, -230,
	-231, 85, -145, -85, 39, -223, 288, 287, -218, -218,
	-218, -218, -218, -219, -169, -219, -219, -219, 83, 83,
	-218, -218, -218, -218, -221, 83, -221, -221, -222, 83,
	-222, -256, -86, -253, -252, -250, -251, 179, 97, 353,
	76, -248, -142, 91, -83, -185, 173, -254, -251, -263,
	-263, -263, -185, -263, 90, -263, 90, 84, 17, -228,
	-227, -131, 228, -258, 203, -255, -249, -236, 29, -235,
	-236, -236, 154, -263, 84, 27, 108, 108, 108, 108,
	353, 159, 31, -227, -131, -208, 171, -208, -208, 90,
	90, -181, 477, -95, -82, 220, 122, 209, 209, 168,
	168, 222, -102, 233, 234, 232, 21, 221, 223, 225,
	211, -102, -102, -184, 75, -97, -102, 24, -197, -102,
	-182, -182, -102, -182, -182, 90, -102, -192, -66, 323,
	353, 20, -67, 20, 100, 101, 102, -121, -113, -113,
	-113, -73, 193, 113, -286, -286, -74, -74, -285, 154,
	-5, -143, -286, -286, 84, 76, 23, 12, 12, -286,
	12, 12, -286, -286, -74, -136, -134, 120, -86, -286,
	-286, 84, 84, -286, -286, -286, -286, -286, -276, 444,
	324, -106, 73, 172, 74, -285, -199, -286, -159, 41,
	49, 60, -86, -86, -141, -159, -176, 20, 12, 56,
	56, -107, 13, -76, -88, -79, 154, -107, -111, 31,
	56, -3, -285, -285, -167, -171, -130, -89, -90, -90,
	-89, -90, 65, 65, 65, 70, 65, 70, 65, -99,
	-197, -286, -286, -3, -164, 76, -88, -102, -88, -104,
	-197, 139, -173, -175, 326, 323, 329, -263, 90, 84,
	-243, -231, -282, 100, 114, 30, 75, 285, 97, -280,
	-281, 175, 174, 29, 187, 23, 40, -224, 289, -219,
	-219, -220, -263, 90, 148, -220, -220, -220, -226, 90,
	-226, 91, 91, 85, -32, -27, -28, 32, 79, -250,
	-238, 90, 38, -192, 85, -82, -102, 114, 75, -254,
	-254, -254, -197, 16, -161, -192, 84, 85, -132, 229,
	-130, 85, -192, 85, 83, -236, -236, -193, -192, -285,
	168, 30, 30, -131, -132, -220, -263, 479, 478, 85,
	170, 227, -84, 336, 90, 86, -102, -102, -102, -102,
	-102, 162, 159, 212, 171, -95, -102, 84, -60, 188,
	183, -202, -202, 32, 323, 456, 454, -73, 113, -113,
	-113, -286, -286, -75, -193, -139, -159, -210, 148, 260,
	192, 258, 254, 274, 265, 287, 256, 288, -208, -210,
	-113, -113, -113, -113, 350, -139, 121, -86, 119, -113,
	-113, 169, 169, 169, -165, 42, 90, 90, 61, -102,
	-137, 14, -86, 139, -143, -166, 75, -167, -124, -126,
	-125, -285, -160, -286, -192, -165, -107, 84, 122, -93,
	-92, 75, 76, -94, 75, -92, 65, 65, -286, -107,
	-88, -107, -107, 154, 323, 327, 328, -243, 100, -113,
	10, 90, 29, 29, -102, 83, -220, -220, 85, 84,
	85, 84, 85, 84, -186, 390, 114, -28, -27, -238,
	-238, 91, -263, 170, 24, -102, 75, 75, 75, 17,
	84, -227, -130, 56, -253, -161, -257, -258, -102, -112,
	-132, -102, -81, 218, 226, 83, 87, -265, 76, 209,
	285, 209, -102, -60, -32, -102, -182, -182, 32, -263,
	-113, -286, -143, -286, -218, -218, -218, -222, -218, 248,
	-218, 248, -286, -286, 20, 20, 20, 20, -285, -65,
	346, -86, 84, 84, -285, -285, -285, -286, 90, -219,
	-138, 15, 17, 28, -166, 84, -286, -286, 84, 56,
	154, -286, -139, -171, -86, -86, 83, -86, -139, -107,
	-116, 83, -113, -219, 90, -219, 91, 91, 390, 30,
	80, 81, 82, 30, 77, 78, -102, -102, -102, -102,
	-161, -192, 205, 85, -286, 84, -225, 353, 356, -162,
	83, 85, -262, 353, -264, -263, -192, -192, -192, -159,
	-219, -263, -113, -113, -113, -113, -113, -143, 90, -113,
	-113, -163, -286, -192, 175, -163, -163, -200, -219, -148,
	-153, -179, -86, -122, 29, -126, 56, -3, -192, -124,
	-192, -143, -161, -143, -161, 85, -220, -220, 85, 85,
	-162, 206, -281, -258, 357, 357, 23, -161, -261, -260,
	-193, 83, 76, -286, -286, -286, -286, -68, 132, 353,
	-286, -286, -286, 84, -286, -286, -286, -106, -151, 440,
	-156, 45, -154, -155, 46, -152, 47, 55, 10, -124,
	154, 85, 85, -146, 23, -285, -3, 85, 84, 122,
	-161, -102, -286, 351, 72, 354, -192, 175, -148, 50,
	266, -158, -157, 54, 46, -155, 17, 48, 17, -167,
	-192, -272, -273, 75, -282, -279, 100, 114, 97, -280,
	109, 110, -3, -113, 202, -58, 353, -260, -242, -193,
	90, 91, 85, 61, 352, 355, -149, 52, -147, 51,
	-147, -157, 17, 17, 90, 17, 90, -273, 75, 11,
	10, 100, 90, -58, -286, -286, -59, 217, 444, -265,
	61, -150, 53, 75, 103, 90, 90, 90, -271, 188,
	183, 186, 31, -271, 180, -262, 353, 75, 103, 182,
	30, 100, 219, 354, 355,
}

var yyDef = [...]int{
	34, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 843, 0, 575, 575, 575, 575, 575,
	575, 575, 0, 0, 575, -2, -2, 575, 979, 0,
	575, 0, 0, -2, 508, 509, 0, 511, -2, 0,
	0, 520, 1394, 1394, 570, 0, 0, 0, 0, 0,
	575, 1392, 55, 56, 526, 527, 528, 1, 3, 0,
	579, 851, 0, 0, -2, 577, 0, 0, 962, 962,
	962, 0, 86, 87, 0, 0, 0, -2, 90, -2,
	114, 115, 0, 119, 384, 345, 387, 343, 373, -2,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 237, 237, 0, 0, -2, 336,
	336, 336, 0, 0, 0, 370, 964, 290, 237, 237,
	0, 237, 237, 237, 237, 0, 0, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 867, 118, 980, 977, 978, 35, 36, 37,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 0,
	956, 0, 440, 664, 0, 499, 499, 0, 499, 499,
	499, 499, 0, 0, 0, 452, 0, 0, 0, 0,
	496, 0, 0, 471, 473, 0, 496, 0, 483, 499,
	1395, 1395, 1395, 947, 0, 493, 491, 505, 506, 488,
	489, 507, 510, 0, 515, 518, 973, 974, 0, 533,
	0, 1200, 525, 538, 539, 0, 571, 572, 40, 715,
	674, 0, 680, 682, 0, 717, 718, 719, 720, 721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	747, 748, 749, 750, 828, 829, 830, 831, 832, 833,
	834, 835, 684, 685, 825, 0, 936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 816, 0, 785, 785,
	785, 785, 785, 785, 785, 785, 785, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 1394, 0, 548, 0,
	0, 843, 51, 0, 575, 580, 581, 886, 0, 0,
	843, 1393, 0, 0, -2, -2, 591, 597, 598, 599,
	600, 601, 576, 0, 604, 608, 0, 0, 0, 963,
	0, 0, 72, 0, 1357, 940, -2, -2, 0, 0,
	975, 976, 949, -2, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098,
	1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118,
	1119, 1120, 1121, 1122, -2, 0, 0, 128, 129, 0,
	38, 263, 0, 124, 0, 257, 209, 867, 0, 0,
	0, 0, 0, 575, 0, 957, 109, 110, 116, 117,
	237, 237, 0, 118, 118, 352, 353, 354, 0, 0,
	-2, 261, 0, 337, 0, 0, 251, 251, 255, 253,
	254, 0, 0, 0, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 424,
	0, 238, 0, 382, 383, 291, 0, 0, 0, 0,
	362, 363, 0, 0, 965, 966, 0, 0, 237, 237,
	0, 0, 0, 0, 237, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 880, 0, 0, 0, -2, 0, 432,
	0, 0, 0, 958, 958, 439, 0, 441, 442, 0,
	0, 443, 0, 496, 496, 494, 495, 445, 446, 447,
	448, 499, 0, 0, 246, 247, 248, 496, 499, 0,
	499, 499, 499, 499, 496, 496, 496, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1395, 1395, 1395,
	502, 499, 480, 481, 484, 485, 1396, 1397, 994, 486,
	487, 948, 516, 519, 536, 534, 535, 537, 529, 530,
	531, 532, 0, 550, 551, 556, 0, 0, 0, 0,
	562, 563, 564, 0, 0, 567, 568, 569, 0, 0,
	0, 0, 0, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 702, 703, 704, 705, 706, 707, 708,
	681, 0, 695, 0, 0, 0, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 0, 588, 0, 0, 0,
	843, 0, 0, 0, 0, 0, 0, 0, 585, 0,
	817, 0, 768, 0, 769, 777, 0, 770, 778, 771,
	779, 772, 773, 780, 774, 781, 775, 776, 782, 0,
	0, 0, 588, 588, 0, 0, 41, 540, 541, 0,
	647, 968, 0, 851, 0, 590, 889, 0, 0, 852,
	844, 845, 848, 851, 0, 613, 602, 592, 595, 596,
	578, 0, 605, 609, 0, 611, 612, 0, 0, 70,
	0, 663, 0, 615, 617, 618, 619, 645, 0, 0,
	0, 0, 66, 68, 664, 0, 1357, 946, 0, 74,
	75, 0, 0, 0, 225, 951, 952, 953, -2, 244,
	0, -2, 216, 160, 161, 162, 209, 164, 209, 209,
	209, 209, 221, 221, 221, 221, 192, 193, 194, 195,
	196, 0, 0, 179, 209, 209, 209, 209, 199, 200,
	201, 202, 203, 204, 205, 206, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 211, 211, 211, 213, 213,
	0, 39, 0, 229, 0, 848, 0, 880, 960, 970,
	0, 0, 0, 960, 92, 0, 0, 385, 346, 374,
	386, 0, 349, 350, -2, 0, 0, 336, 0, 338,
	0, 245, 0, -2, 0, 255, 0, 251, 255, 252,
	255, 243, 256, 366, 825, 0, 367, 368, 0, 404,
	633, 0, 0, 0, 0, 0, 410, 411, 412, 0,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	375, 376, 377, 378, 379, 380, 381, 0, 0, 338,
	0, 371, 0, 292, 293, 0, 0, 296, 297, 298,
	299, 0, 0, 302, 303, 304, 305, 306, 330, 331,
	332, 307, 308, 309, 310, 311, 312, 313, 324, 325,
	326, 327, 328, 329, 314, 315, 316, 317, 318, 321,
	0, 102, 871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 958, 0, 0, 0, 0, 665,
	981, 982, 500, 501, 0, 249, 250, 499, 499, 449,
	472, 0, 499, 453, 474, 454, 456, 455, 457, 476,
	477, 499, 460, 497, 498, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 478, 0, 479, 0, 0,
	517, 521, 522, 523, 524, 0, 0, 553, 558, 559,
	560, 561, 573, 566, 716, 675, 676, 677, 679, 696,
	0, 698, 700, 686, 687, 711, 712, 713, 0, 0,
	0, 0, 709, 691, 0, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 736, 800, 801,
	802, 0, 734, 735, 746, 0, 0, 0, 589, 826,
	0, -2, 0, 714, 935, 851, 0, 0, 0, 0,
	719, 828, 0, 719, 828, 0, 0, 0, 586, 587,
	823, 820, 0, 0, 786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 544, 546, 0, 667, 0,
	648, 0, 650, 651, 0, 969, 549, 886, 52, 42,
	0, 887, 0, 0, 0, 0, 847, 849, 850, 886,
	0, 836, 0, 0, 672, 0, 0, 593, 48, 610,
	606, 0, 672, 0, 0, 662, 0, 0, 0, 0,
	0, 0, 652, 0, 0, 655, 0, 0, 0, 0,
	646, 0, 0, 0, -2, 0, 0, 0, 62, 63,
	0, 0, 0, 941, 73, 0, 0, 78, 79, 942,
	943, 944, 945, 0, 111, -2, 287, 130, 132, 133,
	134, 125, 269, 0, 0, 219, 217, 218, 163, 221,
	221, 186, 187, 225, 0, 225, 225, 225, 0, 0,
	180, 181, 182, 183, 174, 0, 175, 176, 177, 0,
	178, 262, 0, 855, 230, 231, 233, 237, 0, 0,
	0, 258, 259, 0, 871, 0, 0, 0, 971, 970,
	970, 970, 0, 120, 121, 122, 123, 118, 0, 0,
	126, 340, 0, 0, 0, 260, 0, 0, 255, 255,
	240, 241, 0, 369, 0, 0, 406, 407, 408, 409,
	0, 0, 0, 338, 340, 225, 0, 294, 295, 300,
	301, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 400, 401, 402, 868, 869, 870,
	0, 0, 433, 0, 0, 279, 64, 959, 438, 496,
	459, 475, 496, 451, 458, 503, 482, 513, 557, 0,
	0, 0, 565, 0, 697, 699, 701, 688, 709, 692,
	0, 689, 0, 0, 683, 751, 0, 0, 588, 0,
	843, 886, 755, 756, 0, 0, 0, 0, 0, 793,
	0, 0, 794, 0, 843, 0, 821, 0, 0, 767,
	787, 0, 0, 788, 789, 790, 791, 792, 542, 545,
	547, 623, 0, 0, 0, 0, 649, 967, 44, 0,
	0, 0, 853, 854, 846, 43, 0, 954, 955, 837,
	838, 839, 0, 603, 614, 594, 0, 851, 929, 0,
	0, 921, 0, 0, 672, 937, 0, 616, 641, 643,
	0, 638, 653, 654, 656, 0, 658, 0, 660, 661,
	620, 621, 622, 0, 672, 0, 672, 67, 672, 69,
	0, 666, 76, 77, 0, 0, 83, 226, 227, 118,
	289, 131, 135, 140, 0, 0, 0, 144, 0, 146,
	270, 0, 156, 158, 0, 0, 138, 159, 220, 225,
	225, 188, 222, 223, 224, 189, 190, 191, 0, 207,
	0, 0, 0, 282, 88, 859, 858, 237, 237, 232,
	0, 235, 0, 972, 210, 0, 101, 0, 0, 0,
	0, 0, 107, 0, 344, 627, 0, 355, 356, 0,
	339, 403, 0, 229, 0, 239, 242, 826, 634, 0,
	0, 357, 0, 340, 360, 361, 372, 322, 323, 320,
	0, 0, 881, 882, 0, 885, 93, 392, 394, 393,
	397, 0, 0, 390, 0, 279, 855, 0, 437, 280,
	281, 499, 499, 552, 0, 555, 0, 690, 0, 710,
	693, 752, 753, 0, 827, 851, 46, 0, 209, 209,
	806, 209, 213, 809, 209, 811, 209, 814, 0, 0,
	0, 0, 0, 0, 0, 818, 766, 824, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 891, 888, 45,
	841, 0, 673, 607, 49, 53, 0, 929, 920, 931,
	933, 0, 0, 0, 925, 0, 843, 0, 0, 635,
	642, 0, 0, 636, 0, 637, 657, 659, -2, 843,
	672, 60, 61, 0, 80, 81, 82, 288, 141, 142,
	0, 145, 155, 157, 0, 0, 184, 185, 221, 0,
	221, 0, 214, 0, 271, 283, 0, 856, 857, 0,
	0, 234, 236, 0, 961, 103, 0, 0, 0, 0,
	0, 127, 341, 0, 228, 0, 0, 428, 425, 358,
	359, 625, 872, 873, 874, 0, 884, 96, 0, 0,
	0, 0, 434, 435, 436, 65, 444, 450, 554, 574,
	694, 754, 886, 757, 803, 221, 807, 808, 810, 812,
	813, 815, 759, 758, 0, 0, 0, 0, 0, 851,
	0, 822, 0, 0, 0, 0, 0, 647, 221, 911,
	50, 0, 0, 0, 54, 0, 934, 0, 0, 0,
	0, 71, 851, 938, 939, 639, 0, 644, 851, 59,
	143, 0, 0, 225, 208, 225, 0, 0, 284, 860,
	861, 862, 863, 864, 865, 866, 625, 104, 105, 106,
	347, 628, 0, 0, 405, 0, 413, 0, 0, 0,
	0, 883, 391, 0, 94, 95, 0, 0, 396, 47,
	804, 805, 0, 0, 0, 0, 795, 0, 819, 0,
	0, 0, 669, 629, 630, 0, 0, 667, 893, 892,
	905, 918, 842, 840, 0, 932, 0, 924, 927, 923,
	926, 57, 0, 58, 0, 149, 197, 198, 212, 215,
	0, 0, 264, 429, 426, 427, 0, 0, 97, 98,
	0, 0, 0, 760, 762, 761, 763, 0, 0, 0,
	765, 783, 784, 0, 668, 670, 671, 624, 911, 0,
	904, 0, -2, 913, 0, 0, 0, 919, 0, 922,
	0, 640, 265, 269, 0, 0, 875, 626, 0, 0,
	0, 398, 764, 0, 0, 0, 631, 632, 898, 896,
	896, 906, 907, 0, 0, 914, 0, 0, 0, 930,
	928, 266, 267, 0, 136, 150, 151, 0, 0, 154,
	147, 148, 875, 0, 0, 388, 877, 99, 100, 333,
	334, 335, 93, 796, 0, 799, 901, 0, 894, 897,
	895, 908, 0, 0, 915, 0, 917, 268, 0, 0,
	0, 152, 153, 89, 430, 431, 0, 878, 879, 96,
	797, 890, 0, 899, 900, 909, 910, 916, 272, 274,
	275, 0, 0, 273, 0, 395, 0, 902, 903, 276,
	277, 278, 876, 0, 798,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 115, 3, 3, 3, 142, 134, 3,
	83, 85, 139, 137, 84, 138, 154, 140, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 480,
	123, 122, 124, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 144, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 145,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	116, 117, 118, 119, 120, 121, 125, 126, 127, 128,
	129, 130, 131, 132, 135, 136, 141, 143, 146, 147,
	148, 149, 150, 151, 152, 153, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:431
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:436
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:437
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:441
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:474
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:480
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:484
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:488
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:493
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:497
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:503
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:509
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:515
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			sel.Into = yyDollar[5].selectIntoUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:524
		{
			yyLOCAL = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmtUnion()}, OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Lock: yyDollar[6].lockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:528
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:532
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:555
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:563
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:569
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:575
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:583
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:589
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:593
		{
			yyLOCAL = &ParenSelect{Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:600
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:612
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:624
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:628
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:634
		{
			yyLOCAL = &Update{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: yyDollar[4].tableExprsUnion(), Exprs: yyDollar[6].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:640
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:644
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:648
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:652
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:657
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:658
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:662
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:666
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:672
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:676
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:682
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:686
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:691
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:695
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:701
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:707
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:711
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:717
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:721
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:727
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:731
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:735
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:741
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:745
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:749
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:753
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:759
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:763
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:769
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:775
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:782
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:791
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:795
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:802
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:806
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:811
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:815
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:821
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:826
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:831
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:837
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:842
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:848
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:854
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:861
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:868
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:873
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:878
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:883
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:890
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:897
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:908
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:914
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:918
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:924
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:928
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:932
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:936
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:941
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:945
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:951
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:955
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:961
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:965
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:972
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:976
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:982
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:986
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:992
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:997
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1002
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1006
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1011
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1015
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1019
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1025
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1031
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1039
		{
			yyVAL.str = ""
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1043
		{
			yyVAL.str = ""
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1052
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1056
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1062
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1068
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1073
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1078
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1083
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1088
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1095
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1099
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1104
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1108
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1113
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1119
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1125
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1130
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1137
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1141
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1145
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1149
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1155
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1166
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1171
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1177
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1181
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1185
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1189
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1193
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1197
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1201
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1205
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1209
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1215
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1221
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1227
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1233
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1239
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1247
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1251
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1255
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1259
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1263
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1269
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1273
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1277
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1281
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1285
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1289
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1293
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1297
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1301
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1305
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1309
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1313
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1317
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 197:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1321
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 198:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1326
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1332
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1336
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1340
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1344
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1348
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1352
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1356
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1360
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1366
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1371
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1376
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1380
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1385
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1389
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1397
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1401
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1407
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1415
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1419
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1423
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1428
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1432
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1437
		{
			yyVAL.str = ""
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1441
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1445
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1449
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1454
		{
			yyVAL.str = ""
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1458
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1462
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1469
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1474
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1478
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1484
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1488
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1494
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1498
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1503
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1507
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1513
		{
			yyVAL.str = ""
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1517
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1523
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1527
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1531
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1535
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1539
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1544
		{
			yyVAL.str = ""
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = yyDollar[2].str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1569
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1573
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = "key"
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = yyDollar[1].str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1597
		{
			yyVAL.str = ""
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1601
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1607
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1611
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1617
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1623
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1627
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1633
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1637
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1643
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1649
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1653
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1657
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1661
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1666
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1670
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1676
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1682
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1688
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1694
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1698
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1702
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1706
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1710
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1715
		{
			yyVAL.str = ""
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1728
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1732
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1736
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1741
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1745
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1751
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1755
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1759
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1765
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1769
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1775
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1779
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1783
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1787
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1791
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1795
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1799
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1803
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1807
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1811
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1815
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1819
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1823
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1827
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1831
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1835
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1839
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1843
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1847
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1851
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1855
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1859
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1863
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1867
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1871
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1875
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1879
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1883
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1887
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = ""
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1919
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1932
		{
			yyVAL.str = ""
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1938
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1942
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1951
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1960
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1964
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1968
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1972
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 347:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1976
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1982
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1986
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1990
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1996
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2000
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2004
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2008
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2012
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2016
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2020
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2024
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2028
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].colNameUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2032
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2036
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2040
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2044
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2048
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2052
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2056
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2060
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2064
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2068
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2072
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2076
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2080
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2086
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2090
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2096
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2100
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2104
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2108
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2112
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2116
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2120
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2124
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2128
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2134
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2140
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2147
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2154
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2160
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2164
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2171
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2178
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2190
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2200
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2204
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2208
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2221
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2231
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2235
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2246
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2253
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2260
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2267
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2275
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2279
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2283
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2287
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2291
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2295
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2299
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2303
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2307
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2311
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2315
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2319
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2323
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2327
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2331
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2335
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2339
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2343
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2347
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2351
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2355
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2359
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2364
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2368
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2372
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2379
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2383
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 430:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2389
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2393
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2399
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2405
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2409
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 435:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2415
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2419
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2428
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2432
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2438
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2442
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2447
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2453
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2457
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2461
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2465
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2469
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2473
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2477
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2481
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2485
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2489
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2493
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2497
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2501
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2505
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2509
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2513
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2517
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2521
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2525
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2529
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2533
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2537
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2541
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2545
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2549
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2553
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2557
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2561
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2565
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2569
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2573
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2577
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2581
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2585
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2589
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2593
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2597
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2602
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2606
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2610
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2614
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2618
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2623
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2637
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2641
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2645
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2651
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2655
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2661
		{
			yyVAL.str = ""
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
			yyVAL.str = "extended "
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2671
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2675
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2681
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2685
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2691
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2695
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2699
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2705
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2709
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2713
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2719
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2723
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2729
		{
			yyVAL.empty = struct{}{}
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2733
		{
			yyVAL.empty = struct{}{}
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2737
		{
			yyVAL.empty = struct{}{}
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2743
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2747
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2753
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2763
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2769
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2773
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2778
		{
			yyVAL.empty = struct{}{}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.empty = struct{}{}
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2783
		{
			yyVAL.empty = struct{}{}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2785
		{
			yyVAL.empty = struct{}{}
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2790
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2796
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2801
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2805
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2809
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2813
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2817
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2821
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.str = yyDollar[1].str
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2831
		{
			yyVAL.str = yyDollar[1].str
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.str = yyDollar[1].str
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2841
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2845
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2849
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2853
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2858
		{
			yyVAL.str = ""
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2862
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2866
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2872
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2876
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2882
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2886
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2892
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:2898
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2902
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:2908
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2914
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2918
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2922
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2926
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2932
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2938
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2944
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2948
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2952
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2956
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2960
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2964
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2970
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2974
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2980
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2984
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2988
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2992
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2996
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3000
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3004
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3008
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3012
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3016
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3020
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3024
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3029
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3033
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3037
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3042
		{
			yyVAL.str = ""
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3046
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3051
		{
			setAllowComments(yylex, true)
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3055
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3061
		{
			yyVAL.strs = nil
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3065
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3071
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3075
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3079
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3084
		{
			yyVAL.str = ""
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3088
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3092
		{
			yyVAL.str = SQLCacheStr
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3097
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3101
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3105
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3110
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3114
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3119
		{
			yyVAL.strs = nil
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3123
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3127
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3131
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3135
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3141
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3145
		{
			yyVAL.str = SQLCacheStr
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3149
		{
			yyVAL.str = DistinctStr
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3153
		{
			yyVAL.str = DistinctStr
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3157
		{
			yyVAL.str = StraightJoinHint
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3161
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3165
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3171
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3175
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3181
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3185
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3189
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3193
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3198
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3202
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3206
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3213
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3218
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3222
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3228
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3232
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3242
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3246
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3250
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3256
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3262
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3266
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3271
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3275
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3281
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3285
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3291
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3295
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3299
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3303
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3309
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3313
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3326
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3330
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3334
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3338
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3344
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3346
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3350
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3352
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3356
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3358
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3361
		{
			yyVAL.empty = struct{}{}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3363
		{
			yyVAL.empty = struct{}{}
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3366
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3370
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3374
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3381
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3387
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3391
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3395
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3401
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3407
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3411
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3415
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3419
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3425
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3429
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3439
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3443
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3449
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3453
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3459
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3464
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3468
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3472
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3476
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3480
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3485
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3489
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3495
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3499
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3503
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3507
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3511
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3515
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3519
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3523
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3529
		{
			yyVAL.str = ""
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3533
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3539
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3543
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3549
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3553
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3557
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3561
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3565
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3569
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3573
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3577
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3581
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3585
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3591
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3595
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3599
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3603
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3607
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3611
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3617
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3621
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3625
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3629
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3633
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3637
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3641
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3646
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3650
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3656
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3660
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3664
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3671
		{
			yyLOCAL = &Subquery{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3677
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3681
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3687
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3691
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3695
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3699
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3703
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3707
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3711
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3715
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3719
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3723
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3727
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3731
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3735
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3739
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3743
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3747
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3751
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3755
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3759
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3763
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3767
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3771
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3775
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3779
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3783
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3787
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3791
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3795
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3799
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3803
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3821
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3825
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3829
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3833
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3843
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3847
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3851
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3855
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3859
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3863
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3867
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3871
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3875
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3879
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3883
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3887
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3891
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3895
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3905
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3909
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3913
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3918
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3923
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3928
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3934
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3939
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3944
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3948
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3952
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3957
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3962
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3967
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3971
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3975
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3985
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3995
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3999
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4003
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4007
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4011
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4015
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4019
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4025
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4029
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4033
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4037
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4041
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4051
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4055
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4061
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4065
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4069
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4073
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4077
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4081
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4087
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4091
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4095
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4099
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4103
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4107
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4111
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4116
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4120
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4125
		{
			yyVAL.str = string("")
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4129
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4135
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4139
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4145
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4150
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4154
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4160
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4164
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4168
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4174
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4178
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4182
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4186
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4190
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4194
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4198
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4203
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4209
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4218
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4222
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4232
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4241
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4246
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4250
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4256
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4260
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4266
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4271
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4275
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4279
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4284
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4288
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4292
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4296
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4301
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4305
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4309
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4313
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4317
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4324
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4328
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4332
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4336
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4342
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4346
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4350
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4355
		{
			yyVAL.str = ""
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4359
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4363
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4367
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4372
		{
			yyVAL.str = ""
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4376
		{
			yyVAL.str = yyDollar[3].str
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4382
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4386
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4391
		{
			yyVAL.str = ""
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4395
		{
			yyVAL.str = yyDollar[2].str
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4400
		{
			yyVAL.str = "cascaded"
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4404
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4408
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4413
		{
			yyVAL.str = ""
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4417
		{
			yyVAL.str = yyDollar[3].str
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4423
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4427
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4431
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4435
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4440
		{
			yyLOCAL = NoLock
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4444
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4448
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4453
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4457
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4461
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4465
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4470
		{
			yyVAL.str = ""
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4474
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4478
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4483
		{
			yyVAL.str = ""
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4487
		{
			yyVAL.str = " header"
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4492
		{
			yyVAL.str = ""
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4496
		{
			yyVAL.str = " manifest on"
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4500
		{
			yyVAL.str = " manifest off"
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4505
		{
			yyVAL.str = ""
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4509
		{
			yyVAL.str = " overwrite on"
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4513
		{
			yyVAL.str = " overwrite off"
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4519
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4524
		{
			yyVAL.str = ""
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4528
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4534
		{
			yyVAL.str = yyDollar[1].str
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4538
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4544
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4548
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4553
		{
			yyVAL.str = ""
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4557
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4563
		{
			yyVAL.str = yyDollar[1].str
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4567
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4573
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 916:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4577
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4581
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4586
		{
			yyVAL.str = ""
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4590
		{
			yyVAL.str = " optionally"
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4603
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4607
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4611
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4615
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4619
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4625
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4629
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4633
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4637
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4642
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4646
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4652
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4656
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4662
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4666
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4672
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4678
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4688
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4692
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4698
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4704
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4708
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4714
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4718
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4722
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4726
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4730
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4738
		{
			yyVAL.str = "charset"
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4748
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4752
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4756
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4765
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4767
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4770
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4772
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4775
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:4777
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4780
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4782
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4785
		{
			yyVAL.empty = struct{}{}
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4787
		{
			yyVAL.empty = struct{}{}
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4789
		{
			yyVAL.empty = struct{}{}
		}
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4793
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4798
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4802
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4809
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:4813
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4819
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4836
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4840
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4845
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4849
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4856
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5290
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5299
		{
			decNesting(yylex)
		}
	case 1394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5304
		{
			skipToEnd(yylex)
		}
	case 1395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5309
		{
			skipToEnd(yylex)
		}
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5313
		{
			skipToEnd(yylex)
		}
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5317
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
